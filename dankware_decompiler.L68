00001000 Starting Address
Assembler used: EASy68K Editor/Assembler v5.15.04
Created On: 3/10/2017 3:41:17 AM

00000000                             1  *-----------------------------------------------------------
00000000                             2  * Title      : OpDecoder
00000000                             3  * Written by : Spencer Milner, Connor McGwire
00000000                             4  * Date       :
00000000                             5  * Description:
00000000                             6  *-----------------------------------------------------------
00000000                             7  
00000000                             8  
00000000  =00004E71                  9  NOP             EQU $4E71
00000000  =00000001                 10  MOVE_B          EQU %0001
00000000  =00000003                 11  MOVE_W          EQU %0011
00000000  =00000002                 12  MOVE_L          EQU %0010
00000000  =00000001                 13  MOVEA_WL        EQU %001
00000000  =00000007                 14  MOVEQ_          EQU %0111
00000000  =00000122                 15  MOVEM_TO_MEM_W  EQU %0100100010
00000000  =00000123                 16  MOVEM_TO_MEM_L  EQU %0100100011
00000000  =00000132                 17  MOVEM_TO_REG_W  EQU %0100110010
00000000  =00000133                 18  MOVEM_TO_REG_L  EQU %0100110011
00000000                            19  
00000000  =00000018                 20  ADDI_B          EQU %0000011000
00000000  =00000019                 21  ADDI_W          EQU %0000011001
00000000  =0000001A                 22  ADDI_L          EQU %0000011010
00000000                            23  
00000000  =0000000D                 24  ADD_ADDA        EQU %1101
00000000  =00000000                 25  ADD_TO_REG_B    EQU %000
00000000  =00000001                 26  ADD_TO_REG_W    EQU %001
00000000  =00000002                 27  ADD_TO_REG_L    EQU %010
00000000  =00000004                 28  ADD_TO_EA_B     EQU %100
00000000  =00000005                 29  ADD_TO_EA_W     EQU %101
00000000  =00000006                 30  ADD_TO_EA_L     EQU %110
00000000  =00000003                 31  ADDA_W          EQU %011
00000000  =00000007                 32  ADDA_L          EQU %111
00000000                            33  
00000000  =00000005                 34  ADDQ            EQU %0101
00000000  =00000000                 35  ADDQ_B          EQU %000
00000000  =00000001                 36  ADDQ_W          EQU %001
00000000  =00000002                 37  ADDQ_L          EQU %010
00000000                            38  
00000000  =0000000C                 39  MULS_W_AND      EQU %1100
00000000  =00000007                 40  MULS_OP_W       EQU %111
00000000                            41  
00000000  =00000009                 42  SUB             EQU %1001
00000000  =00000000                 43  SUB_TO_DN_B     EQU %000
00000000  =00000001                 44  SUB_TO_DN_W     EQU %001
00000000  =00000002                 45  SUB_TO_DN_L     EQU %010
00000000  =00000004                 46  SUB_TO_EA_B     EQU %100
00000000  =00000005                 47  SUB_TO_EA_W     EQU %101
00000000  =00000006                 48  SUB_TO_EA_L     EQU %110
00000000                            49  
00000000  =00000008                 50  DIVU_OR         EQU %1000
00000000  =00000003                 51  DIVU            EQU %011
00000000                            52  
00000000  =00000000                 53  DN_B            EQU %000
00000000  =00000001                 54  DN_W            EQU %001
00000000  =00000002                 55  DN_L            EQU %010
00000000  =00000004                 56  EA_B            EQU %100
00000000  =00000005                 57  EA_W            EQU %101
00000000  =00000006                 58  EA_L            EQU %110
00000000                            59  
00000000  =00000004                 60  MULS_LEA_CLR_JSR_RTS    EQU %0100
00000000  =00004E75                 61  RTS             EQU $4E75
00000000  =00000007                 62  LEA             EQU %111
00000000  =0000013A                 63  JSR             EQU %0100111010
00000000  =00000108                 64  CLR_B           EQU %0100001000
00000000  =00000109                 65  CLR_W           EQU %0100001001
00000000  =0000010A                 66  CLR_L           EQU %0100001010
00000000  =00000130                 67  MULS_L          EQU %0100110000
00000000                            68  
00000000  =0000038F                 69  LSL             EQU %1110001111
00000000  =0000038B                 70  LSR             EQU %1110001011
00000000  =00000387                 71  ASR             EQU %1110000111
00000000  =00000383                 72  ASL             EQU %1110000011
00000000  =0000039F                 73  ROL             EQU %1110011111
00000000  =0000039B                 74  ROR             EQU %1110011011
00000000                            75  
00000000  =0000000B                 76  CMP             EQU %1011
00000000  =00000000                 77  CMP_B           EQU %000
00000000  =00000001                 78  CMP_W           EQU %001
00000000  =00000002                 79  CMP_L           EQU %010
00000000                            80  
00000000  =00000006                 81  BCC             EQU %0110
00000000  =00000000                 82  BCC_16          EQU %00000000
00000000  =000000FF                 83  BCC_32          EQU $FF
00000000  =00000000                 84  CC_T                EQU %0000
00000000  =00000001                 85  CC_F                EQU %0001
00000000  =00000002                 86  CC_HI           EQU %0010
00000000  =00000003                 87  CC_LS           EQU %0011
00000000  =00000004                 88  CC_CC           EQU %0100
00000000  =00000005                 89  CC_CS           EQU %0101
00000000  =00000006                 90  CC_NE           EQU %0110
00000000  =00000007                 91  CC_EQ           EQU %0111
00000000  =00000008                 92  CC_VC           EQU %1000
00000000  =00000009                 93  CC_VS           EQU %1001
00000000  =0000000A                 94  CC_PL           EQU %1010
00000000  =0000000B                 95  CC_MI           EQU %1011
00000000  =0000000C                 96  CC_GE           EQU %1100
00000000  =0000000D                 97  CC_LT           EQU %1101
00000000  =0000000E                 98  CC_GT           EQU %1110
00000000  =0000000F                 99  CC_LE           EQU %1111
00000000                           100  
00000000  =0000000E                101  SHIFT           EQU %1110
00000000  =00000003                102  RO              EQU %11
00000000  =00000000                103  AS              EQU %00
00000000  =00000001                104  LS              EQU %01
00000000  =00000000                105  R               EQU %0
00000000  =00000001                106  L               EQU %1
00000000  =00000001                107  SHIFT_register  EQU %1
00000000  =00000000                108  SHIFT_immed     EQU %0
00000000  =00000000                109  SHIFT_BYTE      EQU %00
00000000  =00000001                110  SHIFT_WORD      EQU %01
00000000  =00000003                111  SHIFT_LONG      EQU %11
00000000                           112  
00000000                           113  
00000000                           114  ***********************************************************************************
00000000                           115  ***********************************************************************************
00000000                           116  ***********************************************************************************
00000000                           117  
00000000                           118  
00000000                           119  ********************************
00000000                           120  **      PROGRAM START         **
00000000                           121  ********************************
00000000                           122  
00000000                           123  ** Get input and begin main loop
00000000                           124  
00001000                           125  start   ORG     $1000
00001000                           126  
00001000                           127                  INCLUDE 'EADecoder.x68'
00001000                           128  
00001000                           129  
00001000  =00010000                130  output      EQU $00010000
00001000                           131  
00001000  =0000003C                132  IMMEDIATE   EQU %00111100
00001000  =00000038                133  ABS_WORD    EQU %00111000
00001000  =00000039                134  ABS_LONG    EQU %00111001
00001000  =00000000                135  Dn          EQU %00000000
00001000  =00000008                136  An          EQU %00001000
00001000  =00000010                137  INDIRECT    EQU %00010000
00001000  =00000018                138  POST_INC    EQU %00011000
00001000  =00000020                139  PRE_DEC     EQU %00100000
00001000                           140  
00001000                           141  
00001000                           142  
00001000                           143  EADecoder_left
00001000  48E7 FF7E                144          MOVEM.L     D0-D7/A1-A6, -(SP)
00001004                           145  
00001004                           146          ** Swap the mode and register bits
00001004  1800                     147          MOVE.B  D0,D4
00001006  0200 0007                148          ANDI.B  #%00000111,D0       * Mask mode
0000100A  0204 0038                149          ANDI.B  #%00111000,D4       * Mask register
0000100E  E708                     150          LSL.B   #3,D0               * Move mode bits over
00001010  E60C                     151          LSR.B   #3,D4               * Move register bits over
00001012  8004                     152          OR.B    D4,D0               * Recombine
00001014                           153  
00001014  6000 0006                154          BRA     left_skip
00001018                           155  
00001018                           156  EADecoder
00001018  48E7 FF7E                157          MOVEM.L     D0-D7/A1-A6, -(SP) *Store registers on stack, except D0
0000101C                           158  left_skip
0000101C  4242                     159          CLR     D2
0000101E  4243                     160          CLR     D3
00001020  1401                     161          MOVE.B  D1,D2 ** Store opcode size in bytes into D2
00001022                           162  
00001022  43F9 00010000            163          LEA     output,A1
00001028  45F9 00010000            164          LEA     output,A2
0000102E                           165  
0000102E                           166          *First, decoder will check for the 3 types with hard coded register values
0000102E  163C 0001                167          MOVE.B  #1,D3
00001032  B07C 003C                168          CMP     #IMMEDIATE,D0
00001036  6700 0068                169          BEQ     dec_immediate
0000103A                           170  
0000103A  B07C 0038                171          CMP     #ABS_WORD,D0
0000103E  6700 007C                172          BEQ     dec_abs_word
00001042                           173  
00001042  B07C 0039                174          CMP     #ABS_LONG,D0
00001046  6700 0080                175          BEQ     dec_abs_long
0000104A                           176  
0000104A                           177          *If it was none of the above, store the register and mode seperately
0000104A  4243                     178          CLR     D3
0000104C  1200                     179          MOVE.B  D0,D1
0000104E  0201 0038                180          ANDI.B  #%00111000,D1           *Get mode value
00001052  0200 0007                181          ANDI.B  #%00000111,D0           *Get register value
00001056  0600 0030                182          ADDI.B  #$30,D0
0000105A                           183  
0000105A  B27C 0000                184          CMP     #Dn,D1
0000105E  6700 0074                185          BEQ     dec_Dn
00001062                           186  
00001062  B27C 0008                187          CMP     #An,D1
00001066  6700 0078                188          BEQ     dec_An
0000106A                           189  
0000106A  B27C 0010                190          CMP     #INDIRECT,D1
0000106E  6700 007C                191          BEQ     dec_indirect
00001072                           192  
00001072  B27C 0018                193          CMP     #POST_INC,D1
00001076  6700 0088                194          BEQ     dec_post_inc
0000107A                           195  
0000107A  B27C 0020                196          CMP     #PRE_DEC,D1
0000107E  6700 009A                197          BEQ     dec_pre_dec
00001082                           198  
00001082                           199  dec_return ** Common return for all types
00001082                           200  
00001082                           201          ** Print display string
00001082  103C 000E                202          MOVE.B  #14,D0
00001086  4E4F                     203          TRAP    #15
00001088                           204  
00001088                           205          ** If there is immediate data to print, print it
00001088  B67C 0001                206          CMP     #1,D3
0000108C  6600 000C                207          BNE     imm_skip
00001090                           208  
00001090  103C 000F                209          MOVE.B  #15,D0
00001094  143C 0010                210          MOVE.B  #16,D2
00001098  4E4F                     211          TRAP    #15
0000109A                           212  
0000109A                           213  imm_skip
0000109A  4CDF 7EFF                214          MOVEM.L     (SP)+, D0-D7/A1-A6 *Return register data from stack, except D0
0000109E  4E75                     215          RTS
000010A0                           216  
000010A0                           217          * Individual EA decoders *
000010A0                           218  
000010A0                           219  dec_immediate   *DECODE IMMEDIATE VALUE*
000010A0  14FC 0023                220          MOVE.B  #'#',(A2)+  * Move '#' char into string
000010A4  14FC 0024                221          MOVE.B  #'$',(A2)+  * Move '$' char into string
000010A8  14FC 0000                222          MOVE.B  #$0,(A2)+   * Null terminate string
000010AC  B47C 0002                223          CMP     #2,D2       * Check if data is word length
000010B0  6700 0006                224          BEQ     imm_word
000010B4                           225  
000010B4  2218                     226          MOVE.L  (A0)+,D1    * Length was long
000010B6  60CA                     227          BRA     dec_return
000010B8                           228  
000010B8                           229  imm_word
000010B8  3218                     230          MOVE.W  (A0)+,D1    * Length was word
000010BA  60C6                     231          BRA     dec_return
000010BC                           232  
000010BC                           233  
000010BC                           234  dec_abs_word    *DECODE ABSOLUTE WORD*
000010BC  14FC 0024                235          MOVE.B  #'$',(A2)+  * Move '$' char into string
000010C0  14FC 0000                236          MOVE.B  #$0,(A2)+   * Null terminate string
000010C4  3218                     237          MOVE.W  (A0)+,D1
000010C6  60BA                     238          BRA     dec_return
000010C8                           239  
000010C8                           240  
000010C8                           241  dec_abs_long    *DECODE ABSOLUTE LONG*
000010C8  14FC 0024                242          MOVE.B  #'$',(A2)+  * Move '$' char into string
000010CC  14FC 0000                243          MOVE.B  #$0,(A2)+   * Null terminate string
000010D0  2218                     244          MOVE.L  (A0)+,D1
000010D2  60AE                     245          BRA     dec_return
000010D4                           246  
000010D4                           247  
000010D4                           248  dec_Dn          *DECODE DIRECT DATA*
000010D4  14FC 0044                249          MOVE.B  #'D',(A2)+
000010D8  14C0                     250          MOVE.B  D0,(A2)+
000010DA  14FC 0000                251          MOVE.B  #$0,(A2)+
000010DE  60A2                     252          BRA     dec_return
000010E0                           253  
000010E0                           254  
000010E0                           255  dec_An          *DECODE DIRECT ADDRESS*
000010E0  14FC 0041                256          MOVE.B  #'A',(A2)+
000010E4  14C0                     257          MOVE.B  D0,(A2)+
000010E6  14FC 0000                258          MOVE.B  #$0,(A2)+
000010EA  6096                     259          BRA     dec_return
000010EC                           260  
000010EC                           261  
000010EC                           262  dec_indirect    *DECODE INDIRECT ACCESS*
000010EC  14FC 0028                263          MOVE.B  #'(',(A2)+
000010F0  14FC 0041                264          MOVE.B  #'A',(A2)+
000010F4  14C0                     265          MOVE.B  D0,(A2)+
000010F6  14FC 0029                266          MOVE.B  #')',(A2)+
000010FA  14FC 0000                267          MOVE.B  #$0,(A2)+
000010FE  6082                     268          BRA     dec_return
00001100                           269  
00001100                           270  
00001100                           271  dec_post_inc    *DECODE INDIRECT POST INCREMENT*
00001100  14FC 0028                272          MOVE.B  #'(',(A2)+
00001104  14FC 0041                273          MOVE.B  #'A',(A2)+
00001108  14C0                     274          MOVE.B  D0,(A2)+
0000110A  14FC 0029                275          MOVE.B  #')',(A2)+
0000110E  14FC 002B                276          MOVE.B  #'+',(A2)+
00001112  14FC 0000                277          MOVE.B  #$0,(A2)+
00001116  6000 FF6A                278          BRA     dec_return
0000111A                           279  
0000111A                           280  
0000111A                           281  dec_pre_dec    *DECODE INDIRECT PRE DECREMENT*
0000111A  14FC 002D                282          MOVE.B  #'-',(A2)+
0000111E  14FC 0028                283          MOVE.B  #'(',(A2)+
00001122  14FC 0041                284          MOVE.B  #'A',(A2)+
00001126  14C0                     285          MOVE.B  D0,(A2)+
00001128  14FC 0029                286          MOVE.B  #')',(A2)+
0000112C  14FC 0000                287          MOVE.B  #$0,(A2)+
00001130  6000 FF50                288          BRA     dec_return
00001134                           289  
00001134                           290  
00001134                           291  
00001134                           292  
00001134                           293  
00001134                           294  
00001134                           295  
00001134                           296  
00001134                           297  
00001134                           298  -------------------- end include --------------------
00001134                           299                  INCLUDE 'decompiler_constants.x68'
00001134                           300  
00001134                           301  
00001134= 20 00                    302  pr_space    DC.B    ' ',0
00001136= 2C 00                    303  pr_comma    DC.B    ',',0
00001138= 2E 42 00                 304  pr_BYTE     DC.B    '.B',0
0000113B= 2E 57 00                 305  pr_WORD     DC.B    '.W',0
0000113E= 2E 4C 00                 306  pr_LONG     DC.B    '.L',0
00001141= 23 00                    307  pr_hash     DC.B    '#',0
00001143                           308  
00001143= 4E 4F 50 00              309  pr_NOP      DC.B    'NOP',0
00001147= 4D 4F 56 45 00           310  pr_MOVE     DC.B    'MOVE',0
0000114C= 4D 4F 56 45 41 00        311  pr_MOVEA    DC.B    'MOVEA',0
00001152= 4D 4F 56 45 4D 00        312  pr_MOVEM    DC.B    'MOVEM',0
00001158= 4D 4F 56 45 51 00        313  pr_MOVEQ    DC.B    'MOVEQ',0
0000115E= 41 44 44 41 00           314  pr_ADDA     DC.B    'ADDA',0
00001163= 41 44 44 00              315  pr_ADD      DC.B    'ADD',0
00001167= 41 44 44 49 00           316  pr_ADDI     DC.B    'ADDI',0
0000116C= 41 44 44 51 00           317  pr_ADDQ     DC.B    'ADDQ',0
00001171= 53 55 42 00              318  pr_SUB      DC.B    'SUB',0
00001175= 4D 55 4C 53 00           319  pr_MULS     DC.B    'MULS',0
0000117A= 44 49 56 55 00           320  pr_DIVU     DC.B    'DIVU',0
0000117F= 43 4C 52 00              321  pr_CLR      DC.B    'CLR',0
00001183= 52 54 53 00              322  pr_RTS      DC.B    'RTS',0
00001187= 43 4D 50 00              323  pr_CMP      DC.B    'CMP',0
0000118B= 4A 53 52 00              324  pr_JSR      DC.B    'JSR',0
0000118F= 41 4E 44 00              325  pr_AND      DC.B    'AND',0
00001193                           326  
00001193= 42 43 43 00              327  pr_BCC_CC   DC.B    'BCC',0
00001197= 42 43 53 00              328  pr_BCC_CS   DC.B    'BCS',0
0000119B= 42 45 51 00              329  pr_BCC_EQ   DC.B    'BEQ',0
0000119F= 42 47 45 00              330  pr_BCC_GE   DC.B    'BGE',0
000011A3= 42 47 54 00              331  pr_BCC_GT   DC.B    'BGT',0
000011A7= 42 48 49 00              332  pr_BCC_HI   DC.B    'BHI',0
000011AB= 42 4C 45 00              333  pr_BCC_LE   DC.B    'BLE',0
000011AF= 42 4C 53 00              334  pr_BCC_LS   DC.B    'BLS',0
000011B3= 42 4C 54 00              335  pr_BCC_LT   DC.B    'BLT',0
000011B7= 42 4D 49 00              336  pr_BCC_MI   DC.B    'BMI',0
000011BB= 42 4E 45 00              337  pr_BCC_NE   DC.B    'BNE',0
000011BF= 42 50 4C 00              338  pr_BCC_PL   DC.B    'BPL',0
000011C3= 42 56 43 00              339  pr_BCC_VC   DC.B    'BVC',0
000011C7= 42 56 53 00              340  pr_BCC_VS   DC.B    'BVS',0
000011CB                           341  
000011CB= 52 4F 00                 342  pr_SHIFT_RO   DC.B    'RO',0
000011CE= 41 53 00                 343  pr_SHIFT_AS   DC.B    'AS',0
000011D1= 4C 53 00                 344  pr_SHIFT_LS   DC.B    'LS',0
000011D4= 4C 00                    345  pr_SHIFT_L    DC.B    'L',0
000011D6= 52 00                    346  pr_SHIFT_R    DC.B    'R',0
000011D8                           347  
000011D8= 44 00                    348  pr_reg          DC.B    'D',0
000011DA                           349  
000011DA= 45 52 52 4F 52 00        350  pr_ERROR    DC.B    'ERROR',0
000011E0                           351  
000011E0= 45 6E 74 65 72 20 ...    352  MESSAGE     DC.B    'Enter the address of compiled code: ',0
00001205= 49 6E 76 61 6C 69 ...    353  ERROR_MSG   DC.B    'Invalid input, please rerun',0
00001221= 20 00                    354  SPACER      DC.B    ' ',0
00001221= 20 00                    355  -------------------- end include --------------------
00001223                           356                  INCLUDE 'ASCII_HEX_Conversions.x68'
00001223                           357  
00001223                           358  
00001223                           359  
00001223                           360  A2H     *Converts and ASCII Byte string into HEX; Size WORD
00001224  48E7 7FFE                361          MOVEM.L     D1-D7/A0-A6, -(SP)
00001228                           362  
00001228  3400                     363          MOVE.W  D0,D2
0000122A  3202                     364          MOVE.W  D2,D1                   *Store length of string into D1 for looping
0000122C  2248                     365          MOVEA.L A0,A1                   *Copy starting point of string
0000122E                           366  
0000122E  6000 0026                367          BRA     numSub
00001232                           368  numSubRTN
00001232  2049                     369          MOVEA.L A1,A0                   *Restore address position
00001234  3202                     370          MOVE.W  D2,D1                   *Reset loop counter
00001236                           371  
00001236  6000 0028                372          BRA     upSub
0000123A                           373  upSubRTN
0000123A  2049                     374          MOVEA.L A1,A0                   *Restore address position
0000123C  3202                     375          MOVE.W  D2,D1                   *Reset loop counter
0000123E  4240                     376          CLR     D0                      *Clear D0
00001240                           377  addBytes
00001240  D018                     378          ADD.B   (A0)+,D0
00001242  5301                     379          SUBI.B  #1,D1
00001244  6700 000A                380          BEQ     conv_end
00001248                           381  addByteLoop
00001248  E980                     382          ASL.L   #4,D0
0000124A  D018                     383          ADD.B   (A0)+,D0
0000124C  5301                     384          SUBI.B  #1,D1
0000124E  66F8                     385          BNE     addByteLoop
00001250                           386  conv_end
00001250  4CDF 7FFE                387          MOVEM.L     (SP)+, D1-D7/A0-A6
00001254  4E75                     388          RTS
00001256                           389  
00001256                           390  
00001256                           391  numSub  *Convert ASCII 'number' to true number byte; Should not be called outside of the A2H subroutines
00001256  0418 0030                392          SUBI.B  #$30,(A0)+              *Subtract difference between null ASCII and '0' ASCII
0000125A  5341                     393          SUB.W   #1,D1                   *Decrement loop counter
0000125C  66F8                     394          BNE     numSub                  *If loop has not ended restart
0000125E  60D2                     395          BRA     numSubRTN
00001260                           396  
00001260                           397  
00001260                           398  upSub   *Loops through string to remove any upper case characters
00001260                           399          *that may remain in the string
00001260  0C10 0009                400          CMPI.B  #9,(A0)                 *Check if the value is greater than 0-9
00001264  6F00 0004                401          BLE     upSEnd                  *If it's not, continue loop
00001268  5310                     402          SUBI.B  #1,(A0)                 *Otherwise, subtract difference between ASCII 'number' code and 'A' code
0000126A                           403  upSEnd
0000126A  5248                     404          ADDA.W  #1,A0                   *Increment to next position to check for uppercase
0000126C  5341                     405          SUB.W   #1,D1                   *Decrement loop counter
0000126E  66F0                     406          BNE     upSub
00001270  60C8                     407          BRA     upSubRTN
00001272                           408  
00001272                           409  
00001272                           410  
00001272                           411  -------------------- end include --------------------
00001272                           412                  
00001272                           413  program_start
00001272                           414  
00001272                           415  
00001272                           416  *------Code for input-------
00001272                           417  
00001272  43F8 11E0                418          LEA     MESSAGE,A1      *Code block for first message
00001276  103C 000E                419          MOVE.B  #14,D0
0000127A  4E4F                     420          TRAP    #15
0000127C                           421  
0000127C  227C 00004000            422          MOVEA.L #$4000, A1
00001282  103C 0002                423          MOVE.B  #2,D0           *Code block for reading input
00001286  4E4F                     424          TRAP    #15
00001288  3001                     425          MOVE.W  D1,D0
0000128A                           426  
0000128A  2049                     427          MOVEA.L A1,A0           *Move the contents of A1 to A0 for the conversion
0000128C  4EB8 1223                428          JSR     A2H             *Branch to Connor's conversion code
00001290                           429  
00001290  2040                     430          MOVEA.L D0,A0
00001292                           431  
00001292  0C50 FFFF                432          CMPI.W  #$FFFF,(A0)
00001296  6700 0028                433          BEQ     input_error
0000129A                           434  
0000129A                           435  loop_start
0000129A                           436  
0000129A  2208                     437          MOVE.L  A0,D1           *Print out the address we're working on
0000129C  7410                     438          MOVE.L  #16,D2
0000129E  700F                     439          MOVE.L  #15,D0
000012A0  4E4F                     440          TRAP    #15
000012A2                           441  
000012A2  700E                     442          MOVE.L  #14,D0
000012A4  43F8 1221                443          LEA     SPACER,A1
000012A8  4E4F                     444          TRAP    #15
000012AA                           445  
000012AA  3418                     446          MOVE.W  (A0)+,D2
000012AC  0C42 FFFF                447          CMPI.W  #$FFFF,D2
000012B0  6700 0016                448          BEQ     Done
000012B4                           449  
000012B4  6100 0016                450          BSR     OpDecoder
000012B8                           451  
000012B8  700D                     452          MOVE.L  #13,D0
000012BA  4E4F                     453          TRAP    #15
000012BC                           454  
000012BC  4EF8 129A                455          JMP     loop_start
000012C0                           456  
000012C0                           457  input_error
000012C0  700D                     458          MOVE.L  #13,D0
000012C2  43F8 1205                459          LEA     ERROR_MSG,A1
000012C6  4E4F                     460          TRAP    #15
000012C8                           461  Done
000012C8  FFFF FFFF                462          SIMHALT
000012CC                           463  
000012CC                           464  **********************
000012CC                           465  **** END OF START ****
000012CC                           466  **********************
000012CC                           467  
000012CC                           468  
000012CC                           469  ***********************************************************************************
000012CC                           470  ***********************************************************************************
000012CC                           471  ***********************************************************************************
000012CC                           472  
000012CC                           473  
000012CC                           474  ********************************
000012CC                           475  ** BEGIN OpDecoder SUBROUTINE **
000012CC                           476  ********************************
000012CC                           477  
000012CC                           478  * A0 = INPUT    Decoder pointer; Persistant
000012CC                           479  * D2 = INPUT    Read opcode word
000012CC                           480  
000012CC                           481  OpDecoder
000012CC  48E7 FF7E                482      MOVEM.L     D0-D7/A1-A6, -(SP)
000012D0  4241                     483      CLR         D1
000012D2  6000 00A6                484      BRA         CHECK_NOP
000012D6                           485  NOP_RETURN
000012D6  6000 00B0                486      BRA         CHECK_FOUR_BIT_SIG
000012DA                           487  FOUR_BIT_RETURN
000012DA  6000 045A                488      BRA         CHECK_MOVEM
000012DE                           489  MOVEM_RETURN
000012DE  6000 04FE                490      BRA         CHECK_ADDI
000012E2                           491  ADDI_RETURN
000012E2  6000 0054                492      BRA         CHECK_SHIFT_AND_ROTATE
000012E6                           493  
000012E6                           494  opdec_return
000012E6  4CDF 7EFF                495      MOVEM.L     (SP)+, D0-D7/A1-A6
000012EA  4E75                     496      RTS
000012EC                           497  ***************************
000012EC                           498  **** END OF SUBROUTINE ****
000012EC                           499  ***************************
000012EC                           500  
000012EC                           501  
000012EC                           502  ***********************************************************************************
000012EC                           503  ***********************************************************************************
000012EC                           504  ***********************************************************************************
000012EC                           505  
000012EC                           506  
000012EC                           507  ***************************************
000012EC                           508  **          HELPER SUBROUTINES       **
000012EC                           509  ***************************************
000012EC                           510  
000012EC                           511  *****************************
000012EC                           512  ReadFirstFourBits
000012EC                           513  
000012EC  48A7 2000                514      MOVEM.W     D2, -(SP)
000012F0                           515  
000012F0  1E3C 000C                516      MOVE.B      #12,D7
000012F4  EE6A                     517      LSR.W       D7,D2
000012F6  1602                     518      MOVE.B      D2,D3
000012F8                           519  
000012F8  4C9F 0004                520      MOVEM.W     (SP)+,D2
000012FC  4E75                     521      RTS
000012FE                           522  
000012FE                           523  *************************
000012FE                           524  ReadFirstTenBits
000012FE                           525  
000012FE  48A7 2000                526      MOVEM.W     D2, -(SP)
00001302                           527  
00001302  EC4A                     528      LSR.W       #6,D2
00001304  3602                     529      MOVE.W      D2,D3
00001306                           530  
00001306  4C9F 0004                531      MOVEM.W     (SP)+,D2
0000130A  4E75                     532      RTS
0000130C                           533  
0000130C                           534  ***********************************
0000130C                           535  ISOLATE_CC_CODE_FOR_BCC
0000130C                           536  
0000130C  48A7 2000                537      MOVEM.W     D2, -(SP)
00001310                           538  
00001310  E94A                     539      LSL.W       #4,D2
00001312  1E3C 000C                540      MOVE.B      #12,D7
00001316  EE6A                     541      LSR.W       D7,D2
00001318                           542  
00001318  1602                     543      MOVE.B      D2,D3
0000131A                           544  
0000131A  4C9F 0004                545      MOVEM.W     (SP)+,D2
0000131E  4E75                     546      RTS
00001320                           547  
00001320                           548  ************************************************
00001320                           549  ISOLATE_OP_CODE
00001320                           550  
00001320  48A7 2000                551      MOVEM.W     D2, -(SP)
00001324                           552  
00001324  1E3C 0007                553      MOVE.B      #7,D7
00001328  EF6A                     554      LSL.W       D7,D2
0000132A  1E3C 000D                555      MOVE.B      #13,D7
0000132E  EE6A                     556      LSR.W       D7,D2
00001330  1602                     557      MOVE.B      D2,D3
00001332                           558  
00001332  4C9F 0004                559      MOVEM.W     (SP)+,D2
00001336  4E75                     560      RTS
00001338                           561  
00001338                           562  ***************************************
00001338                           563  **          CHECK TABLES             **
00001338                           564  ***************************************
00001338                           565  
00001338                           566  *************************
00001338                           567  CHECK_SHIFT_AND_ROTATE
00001338                           568  
00001338  61C4                     569      BSR         ReadFirstTenBits
0000133A                           570  
0000133A  3C3C 038F                571      MOVE.W      #LSL,D6
0000133E  BC43                     572      CMP.W       D3,D6
00001340  6700 0E00                573      BEQ         MATCH_LSL
00001344                           574  
00001344  3C3C 038B                575      MOVE.W      #LSR,D6
00001348  BC43                     576      CMP.W       D3,D6
0000134A  6700 0DF8                577      BEQ         MATCH_LSR
0000134E                           578  
0000134E  3C3C 0387                579      MOVE.W      #ASR,D6
00001352  BC43                     580      CMP.W       D3,D6
00001354  6700 0DF0                581      BEQ         MATCH_ASR
00001358                           582  
00001358  3C3C 0383                583      MOVE.W      #ASL,D6
0000135C  BC43                     584      CMP.W       D3,D6
0000135E  6700 0DE8                585      BEQ         MATCH_ASL
00001362                           586  
00001362  3C3C 039F                587      MOVE.W      #ROL,D6
00001366  BC43                     588      CMP.W       D3,D6
00001368  6700 0DE0                589      BEQ         MATCH_ROL
0000136C                           590  
0000136C  3C3C 039B                591      MOVE.W      #ROR,D6
00001370  BC43                     592      CMP.W       D3,D6
00001372  6700 0DD8                593      BEQ         MATCH_ROR
00001376                           594  
00001376  6000 FF6E                595      BRA         opdec_return
0000137A                           596  
0000137A                           597  *************************
0000137A                           598  CHECK_NOP
0000137A                           599  
0000137A  3C3C 4E71                600      MOVE.W      #NOP,D6
0000137E  BC42                     601      CMP.W       D2,D6
00001380  6700 04E6                602      BEQ         MATCH_NOP
00001384                           603  
00001384  6000 FF50                604      BRA         NOP_RETURN
00001388                           605  
00001388                           606  *************************
00001388                           607  CHECK_FOUR_BIT_SIG
00001388                           608  
00001388  6100 FF62                609      BSR         ReadFirstFourBits
0000138C                           610  
0000138C  1C3C 0001                611      MOVE.B      #MOVE_B,D6
00001390  BC03                     612      CMP.B       D3,D6
00001392  6700 04E2                613      BEQ         MATCH_MOVE_B
00001396                           614  
00001396  1C3C 0003                615      MOVE.B      #MOVE_W,D6
0000139A  BC03                     616      CMP.B       D3,D6
0000139C  6700 04A6                617      BEQ         CHECK_MOVEA_W_AND_MOVE_W
000013A0                           618  
000013A0  1C3C 0002                619      MOVE.B      #MOVE_L,D6
000013A4  BC03                     620      CMP.B       D3,D6
000013A6  6700 04AE                621      BEQ         CHECK_MOVEA_L_AND_MOVE_L
000013AA                           622  
000013AA  1C3C 0007                623      MOVE.B      #MOVEQ_,D6
000013AE  BC03                     624      CMP.B       D3,D6
000013B0  6700 0536                625      BEQ         MATCH_MOVEQ
000013B4                           626  
000013B4  1C3C 000D                627      MOVE.B      #ADD_ADDA,D6
000013B8  BC03                     628      CMP.B       D3,D6
000013BA  6700 03AA                629      BEQ         CHECK_ADD_ADDA
000013BE                           630  
000013BE  1C3C 0005                631      MOVE.B      #ADDQ,D6
000013C2  BC03                     632      CMP.B       D3,D6
000013C4  6700 03F6                633      BEQ         CHECK_ADDQ
000013C8                           634  
000013C8  1C3C 0009                635      MOVE.B      #SUB,D6
000013CC  BC03                     636      CMP.B       D3,D6
000013CE  6700 0434                637      BEQ         CHECK_SUB
000013D2                           638  
000013D2  1C3C 0008                639      MOVE.B      #DIVU_OR,D6
000013D6  BC03                     640      CMP.B       D3,D6
000013D8  6700 030E                641      BEQ         CHECK_DIVU_OR
000013DC                           642  
000013DC  1C3C 000C                643      MOVE.B      #MULS_W_AND,D6
000013E0  BC03                     644      CMP.B       D3,D6
000013E2  6700 02B6                645      BEQ         CHECK_MULS_W_AND
000013E6                           646  
000013E6  1C3C 0004                647      MOVE.B      #MULS_LEA_CLR_JSR_RTS,D6
000013EA  BC03                     648      CMP.B       D3,D6
000013EC  6700 025A                649      BEQ         CHECK_MULS_LEA_CLR_JSR_RTS
000013F0                           650  
000013F0  1C3C 000B                651      MOVE.B      #CMP,D6
000013F4  BC03                     652      CMP.B       D3,D6
000013F6  6700 022A                653      BEQ         CHECK_CMP
000013FA                           654  
000013FA  1C3C 0006                655      MOVE.B      #BCC,D6
000013FE  BC03                     656      CMP.B       D3,D6
00001400  6700 0010                657      BEQ         CHECK_BCC
00001404                           658  
00001404  1C3C 000E                659      MOVE.B      #SHIFT,D6
00001408  BC03                     660      CMP.B       D3,D6
0000140A  6700 0BBA                661      BEQ         CHECK_SHIFT
0000140E                           662  
0000140E  6000 FECA                663      BRA         FOUR_BIT_RETURN
00001412                           664  ***********************************
00001412                           665  CHECK_BCC
00001412                           666  
00001412  1C3C 0000                667      MOVE.B      #BCC_16,D6
00001416  BC02                     668      CMP.B       D2,D6
00001418  6700 00B8                669      BEQ         CHECK_BCC_16
0000141C                           670  
0000141C  1C3C 00FF                671      MOVE.B      #BCC_32,D6
00001420  BC02                     672      CMP.B       D2,D6
00001422  6700 0156                673      BEQ         CHECK_BCC_32
00001426                           674  
00001426  6000 0002                675      BRA         CHECK_BCC_8
0000142A                           676  
0000142A                           677  ***********************************
0000142A                           678  CHECK_BCC_8
0000142A                           679  
0000142A  6100 FEE0                680      BSR         ISOLATE_CC_CODE_FOR_BCC
0000142E                           681  
0000142E  1C3C 0000                682      MOVE.B      #CC_T,D6
00001432  BC03                     683      CMP.B       D3,D6
00001434  6700 0D76                684      BEQ         MATCH_CC_T_8
00001438                           685  
00001438  1C3C 0001                686      MOVE.B      #CC_F,D6
0000143C  BC03                     687      CMP.B       D3,D6
0000143E  6700 0D72                688      BEQ         MATCH_CC_F_8
00001442                           689  
00001442  1C3C 0002                690      MOVE.B      #CC_HI,D6
00001446  BC03                     691      CMP.B       D3,D6
00001448  6700 0D6E                692      BEQ         MATCH_CC_HI_8
0000144C                           693  
0000144C  1C3C 0003                694      MOVE.B      #CC_LS,D6
00001450  BC03                     695      CMP.B       D3,D6
00001452  6700 0DCA                696      BEQ         MATCH_CC_LS_8
00001456                           697  
00001456  1C3C 0004                698      MOVE.B      #CC_CC,D6
0000145A  BC03                     699      CMP.B       D3,D6
0000145C  6700 0E3E                700      BEQ         MATCH_CC_CC_8
00001460                           701  
00001460  1C3C 0005                702      MOVE.B      #CC_CS,D6
00001464  BC03                     703      CMP.B       D3,D6
00001466  6700 0EB2                704      BEQ         MATCH_CC_CS_8
0000146A                           705  
0000146A  1C3C 0006                706      MOVE.B      #CC_NE,D6
0000146E  BC03                     707      CMP.B       D3,D6
00001470  6700 0F26                708      BEQ         MATCH_CC_NE_8
00001474                           709  
00001474  1C3C 0007                710      MOVE.B      #CC_EQ,D6
00001478  BC03                     711      CMP.B       D3,D6
0000147A  6700 0F9A                712      BEQ         MATCH_CC_EQ_8
0000147E                           713  
0000147E  1C3C 0008                714      MOVE.B      #CC_VC,D6
00001482  BC03                     715      CMP.B       D3,D6
00001484  6700 100E                716      BEQ         MATCH_CC_VC_8
00001488                           717  
00001488  1C3C 0009                718      MOVE.B      #CC_VS,D6
0000148C  BC03                     719      CMP.B       D3,D6
0000148E  6700 1082                720      BEQ         MATCH_CC_VS_8
00001492                           721  
00001492  1C3C 000A                722      MOVE.B      #CC_PL,D6
00001496  BC03                     723      CMP.B       D3,D6
00001498  6700 10F6                724      BEQ         MATCH_CC_PL_8
0000149C                           725  
0000149C  1C3C 000B                726      MOVE.B      #CC_MI,D6
000014A0  BC03                     727      CMP.B       D3,D6
000014A2  6700 116A                728      BEQ         MATCH_CC_MI_8
000014A6                           729  
000014A6  1C3C 000C                730      MOVE.B      #CC_GE,D6
000014AA  BC03                     731      CMP.B       D3,D6
000014AC  6700 11DE                732      BEQ         MATCH_CC_GE_8
000014B0                           733  
000014B0  1C3C 000D                734      MOVE.B      #CC_LT,D6
000014B4  BC03                     735      CMP.B       D3,D6
000014B6  6700 1252                736      BEQ         MATCH_CC_LT_8
000014BA                           737  
000014BA  1C3C 000E                738      MOVE.B      #CC_GT,D6
000014BE  BC03                     739      CMP.B       D3,D6
000014C0  6700 12C6                740      BEQ         MATCH_CC_GT_8
000014C4                           741  
000014C4  1C3C 000F                742      MOVE.B      #CC_LE,D6
000014C8  BC03                     743      CMP.B       D3,D6
000014CA  6700 133A                744      BEQ         MATCH_CC_LE_8
000014CE                           745  
000014CE  6000 13CE                746      BRA         ERROR
000014D2                           747  
000014D2                           748  ***********************************
000014D2                           749  CHECK_BCC_16
000014D2                           750  
000014D2  6100 FE38                751      BSR         ISOLATE_CC_CODE_FOR_BCC
000014D6                           752  
000014D6  1C3C 0000                753      MOVE.B      #CC_T,D6
000014DA  BC03                     754      CMP.B       D3,D6
000014DC  6700 0CD0                755      BEQ         MATCH_CC_T_16
000014E0                           756  
000014E0  1C3C 0001                757      MOVE.B      #CC_F,D6
000014E4  BC03                     758      CMP.B       D3,D6
000014E6  6700 0CCC                759      BEQ         MATCH_CC_F_16
000014EA                           760  
000014EA  1C3C 0002                761      MOVE.B      #CC_HI,D6
000014EE  BC03                     762      CMP.B       D3,D6
000014F0  6700 0CE2                763      BEQ         MATCH_CC_HI_16
000014F4                           764  
000014F4  1C3C 0003                765      MOVE.B      #CC_LS,D6
000014F8  BC03                     766      CMP.B       D3,D6
000014FA  6700 0D4C                767      BEQ         MATCH_CC_LS_16
000014FE                           768  
000014FE  1C3C 0004                769      MOVE.B      #CC_CC,D6
00001502  BC03                     770      CMP.B       D3,D6
00001504  6700 0DC0                771      BEQ         MATCH_CC_CC_16
00001508                           772  
00001508  1C3C 0005                773      MOVE.B      #CC_CS,D6
0000150C  BC03                     774      CMP.B       D3,D6
0000150E  6700 0E34                775      BEQ         MATCH_CC_CS_16
00001512                           776  
00001512  1C3C 0006                777      MOVE.B      #CC_NE,D6
00001516  BC03                     778      CMP.B       D3,D6
00001518  6700 0EA8                779      BEQ         MATCH_CC_NE_16
0000151C                           780  
0000151C  1C3C 0007                781      MOVE.B      #CC_EQ,D6
00001520  BC03                     782      CMP.B       D3,D6
00001522  6700 0F1C                783      BEQ         MATCH_CC_EQ_16
00001526                           784  
00001526  1C3C 0008                785      MOVE.B      #CC_VC,D6
0000152A  BC03                     786      CMP.B       D3,D6
0000152C  6700 0F90                787      BEQ         MATCH_CC_VC_16
00001530                           788  
00001530  1C3C 0009                789      MOVE.B      #CC_VS,D6
00001534  BC03                     790      CMP.B       D3,D6
00001536  6700 1004                791      BEQ         MATCH_CC_VS_16
0000153A                           792  
0000153A  1C3C 000A                793      MOVE.B      #CC_PL,D6
0000153E  BC03                     794      CMP.B       D3,D6
00001540  6700 1078                795      BEQ         MATCH_CC_PL_16
00001544                           796  
00001544  1C3C 000B                797      MOVE.B      #CC_MI,D6
00001548  BC03                     798      CMP.B       D3,D6
0000154A  6700 10EC                799      BEQ         MATCH_CC_MI_16
0000154E                           800  
0000154E  1C3C 000C                801      MOVE.B      #CC_GE,D6
00001552  BC03                     802      CMP.B       D3,D6
00001554  6700 1160                803      BEQ         MATCH_CC_GE_16
00001558                           804  
00001558  1C3C 000D                805      MOVE.B      #CC_LT,D6
0000155C  BC03                     806      CMP.B       D3,D6
0000155E  6700 11D4                807      BEQ         MATCH_CC_LT_16
00001562                           808  
00001562  1C3C 000E                809      MOVE.B      #CC_GT,D6
00001566  BC03                     810      CMP.B       D3,D6
00001568  6700 1248                811      BEQ         MATCH_CC_GT_16
0000156C                           812  
0000156C  1C3C 000F                813      MOVE.B      #CC_LE,D6
00001570  BC03                     814      CMP.B       D3,D6
00001572  6700 12BC                815      BEQ         MATCH_CC_LE_16
00001576                           816  
00001576  6000 1326                817      BRA         ERROR
0000157A                           818  
0000157A                           819  
0000157A                           820  ***********************************
0000157A                           821  CHECK_BCC_32
0000157A                           822  
0000157A  6100 FD90                823      BSR         ISOLATE_CC_CODE_FOR_BCC
0000157E                           824  
0000157E  1C3C 0000                825      MOVE.B      #CC_T,D6
00001582  BC03                     826      CMP.B       D3,D6
00001584  6700 0C2A                827      BEQ         MATCH_CC_T_32
00001588                           828  
00001588  1C3C 0001                829      MOVE.B      #CC_F,D6
0000158C  BC03                     830      CMP.B       D3,D6
0000158E  6700 0C26                831      BEQ         MATCH_CC_F_32
00001592                           832  
00001592  1C3C 0002                833      MOVE.B      #CC_HI,D6
00001596  BC03                     834      CMP.B       D3,D6
00001598  6700 0C5E                835      BEQ         MATCH_CC_HI_32
0000159C                           836  
0000159C  1C3C 0003                837      MOVE.B      #CC_LS,D6
000015A0  BC03                     838      CMP.B       D3,D6
000015A2  6700 0CCE                839      BEQ         MATCH_CC_LS_32
000015A6                           840  
000015A6  1C3C 0004                841      MOVE.B      #CC_CC,D6
000015AA  BC03                     842      CMP.B       D3,D6
000015AC  6700 0D42                843      BEQ         MATCH_CC_CC_32
000015B0                           844  
000015B0  1C3C 0005                845      MOVE.B      #CC_CS,D6
000015B4  BC03                     846      CMP.B       D3,D6
000015B6  6700 0DB6                847      BEQ         MATCH_CC_CS_32
000015BA                           848  
000015BA  1C3C 0006                849      MOVE.B      #CC_NE,D6
000015BE  BC03                     850      CMP.B       D3,D6
000015C0  6700 0E2A                851      BEQ         MATCH_CC_NE_32
000015C4                           852  
000015C4  1C3C 0007                853      MOVE.B      #CC_EQ,D6
000015C8  BC03                     854      CMP.B       D3,D6
000015CA  6700 0E9E                855      BEQ         MATCH_CC_EQ_32
000015CE                           856  
000015CE  1C3C 0008                857      MOVE.B      #CC_VC,D6
000015D2  BC03                     858      CMP.B       D3,D6
000015D4  6700 0F12                859      BEQ         MATCH_CC_VC_32
000015D8                           860  
000015D8  1C3C 0009                861      MOVE.B      #CC_VS,D6
000015DC  BC03                     862      CMP.B       D3,D6
000015DE  6700 0F86                863      BEQ         MATCH_CC_VS_32
000015E2                           864  
000015E2  1C3C 000A                865      MOVE.B      #CC_PL,D6
000015E6  BC03                     866      CMP.B       D3,D6
000015E8  6700 0FFA                867      BEQ         MATCH_CC_PL_32
000015EC                           868  
000015EC  1C3C 000B                869      MOVE.B      #CC_MI,D6
000015F0  BC03                     870      CMP.B       D3,D6
000015F2  6700 106E                871      BEQ         MATCH_CC_MI_32
000015F6                           872  
000015F6  1C3C 000C                873      MOVE.B      #CC_GE,D6
000015FA  BC03                     874      CMP.B       D3,D6
000015FC  6700 10E2                875      BEQ         MATCH_CC_GE_32
00001600                           876  
00001600  1C3C 000D                877      MOVE.B      #CC_LT,D6
00001604  BC03                     878      CMP.B       D3,D6
00001606  6700 1156                879      BEQ         MATCH_CC_LT_32
0000160A                           880  
0000160A  1C3C 000E                881      MOVE.B      #CC_GT,D6
0000160E  BC03                     882      CMP.B       D3,D6
00001610  6700 11CA                883      BEQ         MATCH_CC_GT_32
00001614                           884  
00001614  1C3C 000F                885      MOVE.B      #CC_LE,D6
00001618  BC03                     886      CMP.B       D3,D6
0000161A  6700 123E                887      BEQ         MATCH_CC_LE_32
0000161E                           888  
0000161E  6000 127E                889      BRA         ERROR
00001622                           890  
00001622                           891  ***********************************
00001622                           892  CHECK_CMP
00001622                           893  
00001622  6100 FCFC                894      BSR         ISOLATE_OP_CODE
00001626                           895  
00001626  1C3C 0000                896      MOVE.B      #CMP_B,D6
0000162A  BC03                     897      CMP.B       D3,D6
0000162C  6700 06D0                898      BEQ         MATCH_CMP_B
00001630                           899  
00001630  1C3C 0001                900      MOVE.B      #CMP_W,D6
00001634  BC03                     901      CMP.B       D3,D6
00001636  6700 0704                902      BEQ         MATCH_CMP_W
0000163A                           903  
0000163A  1C3C 0002                904      MOVE.B      #CMP_L,D6
0000163E  BC03                     905      CMP.B       D3,D6
00001640  6700 073A                906      BEQ         MATCH_CMP_L
00001644                           907  
00001644  6000 1258                908      BRA         ERROR
00001648                           909  ***********************************
00001648                           910  CHECK_MULS_LEA_CLR_JSR_RTS
00001648                           911  
00001648  3C3C 4E75                912      MOVE.W      #RTS,D6
0000164C  BC42                     913      CMP.W       D2,D6
0000164E  6700 06A0                914      BEQ         MATCH_RTS
00001652                           915  
00001652  6100 FCCC                916      BSR         ISOLATE_OP_CODE
00001656                           917  
00001656  1C3C 0007                918      MOVE.B      #LEA,D6
0000165A  BC03                     919      CMP.B       D3,D6
0000165C  6700 123C                920      BEQ         MATCH_LEA
00001660                           921  
00001660  6100 FC9C                922      BSR         ReadFirstTenBits
00001664                           923  
00001664  3C3C 013A                924      MOVE.W      #JSR,D6
00001668  BC43                     925      CMP.W       D3,D6
0000166A  6700 0750                926      BEQ         MATCH_JSR
0000166E                           927  
0000166E  3C3C 0108                928      MOVE.W      #CLR_B,D6
00001672  BC43                     929      CMP.W       D3,D6
00001674  6700 0764                930      BEQ         MATCH_CLR_B
00001678                           931  
00001678  3C3C 0109                932      MOVE.W      #CLR_W,D6
0000167C  BC43                     933      CMP.W       D3,D6
0000167E  6700 0782                934      BEQ         MATCH_CLR_W
00001682                           935  
00001682  3C3C 010A                936      MOVE.W      #CLR_L,D6
00001686  BC43                     937      CMP.W       D3,D6
00001688  6700 07A0                938      BEQ         MATCH_CLR_L
0000168C                           939  
0000168C  3C3C 0130                940      MOVE.W      #MULS_L,D6  * Shouldn't need to check for the rest of the opcode..?
00001690  BC43                     941      CMP.W       D3,D6
00001692  6700 1208                942      BEQ         MATCH_MULS_L
00001696                           943  
00001696  6000 1206                944      BRA         ERROR
0000169A                           945  
0000169A                           946  ***********************************
0000169A                           947  CHECK_MULS_W_AND
0000169A                           948  
0000169A  6100 FC84                949      BSR         ISOLATE_OP_CODE
0000169E                           950  
0000169E  1C3C 0007                951      MOVE.B      #MULS_OP_W,D6
000016A2  BC03                     952      CMP.B       D3,D6
000016A4  6700 060C                953      BEQ         MATCH_MULS_W
000016A8                           954  
000016A8  1C3C 0000                955      MOVE.B      #DN_B,D6
000016AC  BC03                     956      CMP.B       D3,D6
000016AE  6700 07A2                957      BEQ         MATCH_AND_DN_B
000016B2                           958  
000016B2  1C3C 0001                959      MOVE.B      #DN_W,D6
000016B6  BC03                     960      CMP.B       D3,D6
000016B8  6700 07D6                961      BEQ         MATCH_AND_DN_W
000016BC                           962  
000016BC  1C3C 0002                963      MOVE.B      #DN_L,D6
000016C0  BC03                     964      CMP.B       D3,D6
000016C2  6700 080A                965      BEQ         MATCH_AND_DN_L
000016C6                           966  
000016C6  1C3C 0004                967      MOVE.B      #EA_B,D6
000016CA  BC03                     968      CMP.B       D3,D6
000016CC  6700 083E                969      BEQ         MATCH_AND_EA_B
000016D0                           970  
000016D0  1C3C 0005                971      MOVE.B      #EA_W,D6
000016D4  BC03                     972      CMP.B       D3,D6
000016D6  6700 0872                973      BEQ         MATCH_AND_EA_W
000016DA                           974  
000016DA  1C3C 0006                975      MOVE.B      #EA_L,D6
000016DE  BC03                     976      CMP.B       D3,D6
000016E0  6700 08A6                977      BEQ         MATCH_AND_EA_L
000016E4                           978  
000016E4  6000 11B8                979      BRA         ERROR
000016E8                           980  
000016E8                           981  ***********************************
000016E8                           982  CHECK_DIVU_OR
000016E8                           983  
000016E8  6100 FC36                984      BSR         ISOLATE_OP_CODE
000016EC                           985  
000016EC  1C3C 0003                986      MOVE.B      #DIVU,D6
000016F0  BC03                     987      CMP.B       D3,D6
000016F2  6700 1198                988      BEQ         MATCH_DIVU
000016F6                           989  
000016F6  1C3C 0000                990      MOVE.B      #DN_B,D6
000016FA  BC03                     991      CMP.B       D3,D6
000016FC  6700 1190                992      BEQ         MATCH_OR_DN_B
00001700                           993  
00001700  1C3C 0001                994      MOVE.B      #DN_W,D6
00001704  BC03                     995      CMP.B       D3,D6
00001706  6700 1188                996      BEQ         MATCH_OR_DN_W
0000170A                           997  
0000170A  1C3C 0002                998      MOVE.B      #DN_L,D6
0000170E  BC03                     999      CMP.B       D3,D6
00001710  6700 1180               1000      BEQ         MATCH_OR_DN_L
00001714                          1001  
00001714  1C3C 0004               1002      MOVE.B      #EA_B,D6
00001718  BC03                    1003      CMP.B       D3,D6
0000171A  6700 1178               1004      BEQ         MATCH_OR_EA_B
0000171E                          1005  
0000171E  1C3C 0005               1006      MOVE.B      #EA_W,D6
00001722  BC03                    1007      CMP.B       D3,D6
00001724  6700 1170               1008      BEQ         MATCH_OR_EA_W
00001728                          1009  
00001728  1C3C 0006               1010      MOVE.B      #EA_L,D6
0000172C  BC03                    1011      CMP.B       D3,D6
0000172E  6700 1168               1012      BEQ         MATCH_OR_EA_L
00001732                          1013  
00001732  6000 116A               1014      BRA         ERROR
00001736                          1015  
00001736                          1016  ***********************************
00001736                          1017  CHECK_MOVEM
00001736                          1018  
00001736  6100 FBC6               1019      BSR         ReadFirstTenBits
0000173A                          1020  
0000173A  3C3C 0122               1021      MOVE.W      #MOVEM_TO_MEM_W,D6
0000173E  BC43                    1022      CMP.W       D3,D6
00001740  6700 1142               1023      BEQ         MATCH_MOVEM_TO_MEM_W
00001744                          1024  
00001744  3C3C 0123               1025      MOVE.W      #MOVEM_TO_MEM_L,D6
00001748  BC43                    1026      CMP.W       D3,D6
0000174A  6700 113A               1027      BEQ         MATCH_MOVEM_TO_MEM_L
0000174E                          1028  
0000174E  3C3C 0132               1029      MOVE.W      #MOVEM_TO_REG_W,D6
00001752  BC43                    1030      CMP.W       D3,D6
00001754  6700 1132               1031      BEQ         MATCH_MOVEM_TO_REG_W
00001758                          1032  
00001758  3C3C 0133               1033      MOVE.W      #MOVEM_TO_REG_L,D6
0000175C  BC43                    1034      CMP.W       D3,D6
0000175E  6700 112A               1035      BEQ         MATCH_MOVEM_TO_REG_L
00001762                          1036  
00001762  6000 FB7A               1037      BRA         MOVEM_RETURN
00001766                          1038  ****************************************
00001766                          1039  CHECK_ADD_ADDA
00001766                          1040  
00001766  6100 FBB8               1041      BSR         ISOLATE_OP_CODE
0000176A                          1042  
0000176A  3C3C 0000               1043      MOVE.W      #DN_B,D6
0000176E  BC43                    1044      CMP.W       D3,D6
00001770  6700 0212               1045      BEQ         MATCH_ADD_TO_REG_B
00001774                          1046  
00001774  3C3C 0001               1047      MOVE.W      #DN_W,D6
00001778  BC43                    1048      CMP.W       D3,D6
0000177A  6700 0220               1049      BEQ         MATCH_ADD_TO_REG_W
0000177E                          1050  
0000177E  3C3C 0002               1051      MOVE.W      #DN_L,D6
00001782  BC43                    1052      CMP.W       D3,D6
00001784  6700 022E               1053      BEQ         MATCH_ADD_TO_REG_L
00001788                          1054  
00001788  3C3C 0004               1055      MOVE.W      #EA_B,D6
0000178C  BC43                    1056      CMP.W       D3,D6
0000178E  6700 02AE               1057      BEQ         MATCH_ADD_TO_EA_B
00001792                          1058  
00001792  3C3C 0005               1059      MOVE.W      #EA_W,D6
00001796  BC43                    1060      CMP.W       D3,D6
00001798  6700 02BC               1061      BEQ         MATCH_ADD_TO_EA_W
0000179C                          1062  
0000179C  3C3C 0006               1063      MOVE.W      #EA_L,D6
000017A0  BC43                    1064      CMP.W       D3,D6
000017A2  6700 02CA               1065      BEQ         MATCH_ADD_TO_EA_L
000017A6                          1066  
000017A6  3C3C 0003               1067      MOVE.W      #ADDA_W,D6
000017AA  BC43                    1068      CMP.W       D3,D6
000017AC  6700 0488               1069      BEQ         MATCH_ADDA_W
000017B0                          1070  
000017B0  3C3C 0007               1071      MOVE.W      #ADDA_L,D6
000017B4  BC43                    1072      CMP.W       D3,D6
000017B6  6700 04BC               1073      BEQ         MATCH_ADDA_L
000017BA                          1074  
000017BA  4E75                    1075      RTS ** Change later?
000017BC                          1076  ****************************************
000017BC                          1077  CHECK_ADDQ
000017BC                          1078  
000017BC  6100 FB62               1079      BSR         ISOLATE_OP_CODE
000017C0                          1080  
000017C0  3C3C 0000               1081      MOVE.W      #ADDQ_B,D6
000017C4  BC43                    1082      CMP.W       D3,D6
000017C6  6700 0330               1083      BEQ         MATCH_ADDQ_B
000017CA                          1084  
000017CA  3C3C 0001               1085      MOVE.W      #ADDQ_W,D6
000017CE  BC43                    1086      CMP.W       D3,D6
000017D0  6700 033E               1087      BEQ         MATCH_ADDQ_W
000017D4                          1088  
000017D4  3C3C 0002               1089      MOVE.W      #ADDQ_L,D6
000017D8  BC43                    1090      CMP.W       D3,D6
000017DA  6700 034C               1091      BEQ         MATCH_ADDQ_L
000017DE                          1092  
000017DE                          1093  ****************************************
000017DE                          1094  CHECK_ADDI
000017DE                          1095  
000017DE  6100 FB1E               1096      BSR         ReadFirstTenBits
000017E2                          1097  
000017E2  3C3C 0018               1098      MOVE.W      #ADDI_B,D6
000017E6  BC43                    1099      CMP.W       D3,D6
000017E8  6700 012C               1100      BEQ         MATCH_ADDI_B
000017EC                          1101  
000017EC  3C3C 0019               1102      MOVE.W      #ADDI_W,D6
000017F0  BC43                    1103      CMP.W       D3,D6
000017F2  6700 013A               1104      BEQ         MATCH_ADDI_W
000017F6                          1105  
000017F6  3C3C 001A               1106      MOVE.W      #ADDI_L,D6
000017FA  BC43                    1107      CMP.W       D3,D6
000017FC  6700 0148               1108      BEQ         MATCH_ADDI_L
00001800                          1109  
00001800  6000 FAE0               1110      BRA         ADDI_RETURN
00001804                          1111  *****************************************
00001804                          1112  CHECK_SUB
00001804                          1113  
00001804  6100 FB1A               1114      BSR         ISOLATE_OP_CODE
00001808                          1115  
00001808  3C3C 0000               1116      MOVE.W      #DN_B,D6
0000180C  BC43                    1117      CMP.W       D3,D6
0000180E  6700 01BC               1118      BEQ         MATCH_SUB_TO_DN_B
00001812                          1119  
00001812  3C3C 0001               1120      MOVE.W      #DN_W,D6
00001816  BC43                    1121      CMP.W       D3,D6
00001818  6700 01CA               1122      BEQ         MATCH_SUB_TO_DN_W
0000181C                          1123  
0000181C  3C3C 0002               1124      MOVE.W      #DN_L,D6
00001820  BC43                    1125      CMP.W       D3,D6
00001822  6700 01D8               1126      BEQ         MATCH_SUB_TO_DN_L
00001826                          1127  
00001826  3C3C 0004               1128      MOVE.W      #EA_B,D6
0000182A  BC43                    1129      CMP.W       D3,D6
0000182C  6700 0258               1130      BEQ         MATCH_SUB_TO_EA_B
00001830                          1131  
00001830  3C3C 0005               1132      MOVE.W      #EA_W,D6
00001834  BC43                    1133      CMP.W       D3,D6
00001836  6700 0266               1134      BEQ         MATCH_SUB_TO_EA_W
0000183A                          1135  
0000183A  3C3C 0006               1136      MOVE.W      #EA_L,D6
0000183E  BC43                    1137      CMP.W       D3,D6
00001840  6700 0274               1138      BEQ         MATCH_SUB_TO_EA_L
00001844                          1139  *****************************************
00001844                          1140  CHECK_MOVEA_W_AND_MOVE_W
00001844                          1141  
00001844  6100 FADA               1142      BSR         ISOLATE_OP_CODE
00001848                          1143  
00001848  1C3C 0001               1144      MOVE.B      #MOVEA_WL,D6
0000184C  BC03                    1145      CMP.B       D3,D6
0000184E  6700 036A               1146      BEQ         MATCH_MOVEA_W
00001852                          1147  
00001852  6000 003A               1148      BRA         MATCH_MOVE_W
00001856                          1149  
00001856                          1150  **********************************************
00001856                          1151  CHECK_MOVEA_L_AND_MOVE_L
00001856                          1152  
00001856  6100 FAC8               1153      BSR         ISOLATE_OP_CODE
0000185A                          1154  
0000185A  1C3C 0001               1155      MOVE.B      #MOVEA_WL,D6
0000185E  BC03                    1156      CMP.B       D3,D6
00001860  6700 0396               1157      BEQ         MATCH_MOVEA_L
00001864                          1158  
00001864  6000 0040               1159      BRA         MATCH_MOVE_L
00001868                          1160  
00001868                          1161  
00001868                          1162  
00001868                          1163  ***********************************************************************************
00001868                          1164  ***********************************************************************************
00001868                          1165  ***********************************************************************************
00001868                          1166  
00001868                          1167  
00001868                          1168  **********************************************
00001868                          1169  
00001868                          1170  **          OPCODE PRINT COMMANDS           **
00001868                          1171  
00001868                          1172  **********************************************
00001868                          1173  
00001868                          1174  
00001868                          1175  *************************************
00001868                          1176  **          NOP  COMMAND          **
00001868                          1177  *************************************
00001868                          1178  
00001868                          1179  MATCH_NOP
00001868  43F8 1143               1180      LEA         pr_NOP,A1
0000186C  103C 000E               1181      MOVE.B      #14,D0
00001870  4E4F                    1182      TRAP        #15
00001872  6000 FA72               1183      BRA         opdec_return
00001876                          1184  
00001876                          1185  
00001876                          1186  *************************************
00001876                          1187  **          MOVE COMMANDS          **
00001876                          1188  *************************************
00001876                          1189  
00001876                          1190  MATCH_MOVE_B
00001876                          1191      ** Move command size into D1
00001876  123C 0002               1192      MOVE.B      #2,D1
0000187A                          1193      ** Print command
0000187A  103C 000E               1194      MOVE.B      #14,D0
0000187E  43F8 1147               1195      LEA         pr_MOVE,A1
00001882  4E4F                    1196      TRAP        #15
00001884                          1197      ** Print size
00001884  43F8 1138               1198      LEA         pr_BYTE,A1
00001888  4E4F                    1199      TRAP        #15
0000188A                          1200  
0000188A  6000 0032               1201      BRA         print_move
0000188E                          1202  
0000188E                          1203  MATCH_MOVE_W
0000188E                          1204      ** Move command size into D1
0000188E  123C 0002               1205      MOVE.B      #2,D1
00001892                          1206      ** Print command
00001892  103C 000E               1207      MOVE.B      #14,D0
00001896  43F8 1147               1208      LEA         pr_MOVE,A1
0000189A  4E4F                    1209      TRAP        #15
0000189C                          1210      ** Print size
0000189C  43F8 113B               1211      LEA         pr_WORD,A1
000018A0  4E4F                    1212      TRAP        #15
000018A2                          1213  
000018A2  6000 001A               1214      BRA         print_move
000018A6                          1215  
000018A6                          1216  MATCH_MOVE_L
000018A6                          1217      ** Move command size into D1
000018A6  123C 0004               1218      MOVE.B      #4,D1
000018AA                          1219      ** Print command
000018AA  103C 000E               1220      MOVE.B      #14,D0
000018AE  43F8 1147               1221      LEA         pr_MOVE,A1
000018B2  4E4F                    1222      TRAP        #15
000018B4                          1223      ** Print size
000018B4  43F8 113E               1224      LEA         pr_LONG,A1
000018B8  4E4F                    1225      TRAP        #15
000018BA                          1226  
000018BA  6000 0002               1227      BRA         print_move
000018BE                          1228  
000018BE                          1229  ** Common print code
000018BE                          1230  print_move
000018BE                          1231      ** Print space
000018BE  43F8 1134               1232      LEA         pr_space,A1
000018C2  4E4F                    1233      TRAP        #15
000018C4                          1234      ** Decode right side ea
000018C4  1002                    1235      MOVE.B      D2,D0
000018C6  0200 003F               1236      ANDI.B      #%00111111,D0
000018CA  4EB8 1018               1237      JSR         EADecoder
000018CE                          1238      ** Add comma
000018CE  103C 000E               1239      MOVE.B      #14,D0
000018D2  43F8 1136               1240      LEA         pr_comma,A1
000018D6  4E4F                    1241      TRAP        #15
000018D8                          1242      ** Decode left side ea
000018D8  3002                    1243      MOVE.W      D2,D0
000018DA  0240 0FC0               1244      ANDI.W      #%0000111111000000,D0
000018DE  EC48                    1245      LSR.W       #6,D0
000018E0  4EB8 1000               1246      JSR         EADecoder_left
000018E4                          1247  
000018E4  6000 FA00               1248      BRA         opdec_return
000018E8                          1249  
000018E8                          1250  *************************************
000018E8                          1251  **          MOVEQ COMMANDS         **
000018E8                          1252  *************************************
000018E8                          1253  
000018E8                          1254  MATCH_MOVEQ
000018E8                          1255      ** Print command
000018E8  103C 000E               1256      MOVE.B      #14,D0
000018EC  43F8 1158               1257      LEA         pr_MOVEQ,A1
000018F0  4E4F                    1258      TRAP        #15
000018F2                          1259      ** Print space
000018F2  43F8 1134               1260      LEA         pr_space,A1
000018F6  4E4F                    1261      TRAP        #15
000018F8                          1262      ** Print data
000018F8  1202                    1263      MOVE.B      D2,D1
000018FA  103C 000F               1264      MOVE.B      #15,D0
000018FE  2602                    1265      MOVE.L      D2,D3
00001900  7410                    1266      MOVE.L      #16,D2
00001902  4E4F                    1267      TRAP        #15
00001904  2403                    1268      MOVE.L      D3,D2
00001906                          1269      ** Decode register
00001906  3002                    1270      MOVE.W      D2,D0
00001908  0240 0E00               1271      ANDI.W      #%0000111000000000,D0
0000190C  EC48                    1272      LSR.W       #6,D0
0000190E  4EB8 1000               1273      JSR         EADecoder_left
00001912                          1274  
00001912  6000 F9D2               1275      BRA         opdec_return
00001916                          1276  
00001916                          1277  *************************************
00001916                          1278  **          ADDI COMMANDS          **
00001916                          1279  *************************************
00001916                          1280  
00001916                          1281  MATCH_ADDI_B
00001916                          1282      ** Move command size into D1
00001916  123C 0002               1283      MOVE.B      #2,D1
0000191A                          1284      ** Print command
0000191A  103C 000E               1285      MOVE.B      #14,D0
0000191E  43F8 1167               1286      LEA         pr_ADDI,A1
00001922  4E4F                    1287      TRAP        #15
00001924                          1288      ** Print size
00001924  43F8 1138               1289      LEA         pr_BYTE,A1
00001928  4E4F                    1290      TRAP        #15
0000192A                          1291  
0000192A  6000 0032               1292      BRA         print_addi
0000192E                          1293  
0000192E                          1294  MATCH_ADDI_W
0000192E                          1295      ** Move command size into D1
0000192E  123C 0002               1296      MOVE.B      #2,D1
00001932                          1297      ** Print command
00001932  103C 000E               1298      MOVE.B      #14,D0
00001936  43F8 1167               1299      LEA         pr_ADDI,A1
0000193A  4E4F                    1300      TRAP        #15
0000193C                          1301      ** Print size
0000193C  43F8 113B               1302      LEA         pr_WORD,A1
00001940  4E4F                    1303      TRAP        #15
00001942                          1304  
00001942  6000 001A               1305      BRA         print_addi
00001946                          1306  
00001946                          1307  MATCH_ADDI_L
00001946                          1308      ** Move command size into D1
00001946  123C 0004               1309      MOVE.B      #4,D1
0000194A                          1310      ** Print command
0000194A  103C 000E               1311      MOVE.B      #14,D0
0000194E  43F8 1167               1312      LEA         pr_ADDI,A1
00001952  4E4F                    1313      TRAP        #15
00001954                          1314      ** Print size
00001954  43F8 113E               1315      LEA         pr_LONG,A1
00001958  4E4F                    1316      TRAP        #15
0000195A                          1317  
0000195A  6000 0002               1318      BRA         print_addi
0000195E                          1319  
0000195E                          1320  print_addi
0000195E                          1321      ** Print space
0000195E  43F8 1134               1322      LEA         pr_space,A1
00001962  4E4F                    1323      TRAP        #15
00001964                          1324      ** Print Immediate data
00001964  103C 003C               1325      MOVE.B      #%00111100,D0
00001968  4EB8 1018               1326      JSR         EADecoder
0000196C                          1327      ** Add comma
0000196C  103C 000E               1328      MOVE.B      #14,D0
00001970  43F8 1136               1329      LEA         pr_comma,A1
00001974  4E4F                    1330      TRAP        #15
00001976                          1331      ** Decode right side ea
00001976  1002                    1332      MOVE.B      D2,D0
00001978  0200 003F               1333      ANDI.B      #%00111111,D0
0000197C  4EB8 1018               1334      JSR         EADecoder
00001980                          1335  
00001980  6000 F964               1336      BRA         opdec_return
00001984                          1337  
00001984                          1338  *************************************
00001984                          1339  **      ADD/SUB COMMANDS           **
00001984                          1340  *************************************
00001984                          1341  
00001984                          1342  MATCH_ADD_TO_REG_B
00001984                          1343      ** Move command size into D1
00001984  123C 0002               1344      MOVE.B      #2,D1
00001988                          1345      ** Print command
00001988  103C 000E               1346      MOVE.B      #14,D0
0000198C  43F8 1163               1347      LEA         pr_ADD,A1
00001990  4E4F                    1348      TRAP        #15
00001992                          1349      ** Print size
00001992  43F8 1138               1350      LEA         pr_BYTE,A1
00001996  4E4F                    1351      TRAP        #15
00001998                          1352  
00001998  6000 007A               1353      BRA         print_add_to_reg
0000199C                          1354  
0000199C                          1355  MATCH_ADD_TO_REG_W
0000199C                          1356      ** Move command size into D1
0000199C  123C 0002               1357      MOVE.B      #2,D1
000019A0                          1358      ** Print command
000019A0  103C 000E               1359      MOVE.B      #14,D0
000019A4  43F8 1163               1360      LEA         pr_ADD,A1
000019A8  4E4F                    1361      TRAP        #15
000019AA                          1362      ** Print size
000019AA  43F8 113B               1363      LEA         pr_WORD,A1
000019AE  4E4F                    1364      TRAP        #15
000019B0                          1365  
000019B0  6000 0062               1366      BRA         print_add_to_reg
000019B4                          1367  
000019B4                          1368  MATCH_ADD_TO_REG_L
000019B4                          1369      ** Move command size into D1
000019B4  123C 0004               1370      MOVE.B      #4,D1
000019B8                          1371      ** Print command
000019B8  103C 000E               1372      MOVE.B      #14,D0
000019BC  43F8 1163               1373      LEA         pr_ADD,A1
000019C0  4E4F                    1374      TRAP        #15
000019C2                          1375      ** Print size
000019C2  43F8 113E               1376      LEA         pr_LONG,A1
000019C6  4E4F                    1377      TRAP        #15
000019C8                          1378  
000019C8  6000 004A               1379      BRA         print_add_to_reg
000019CC                          1380  
000019CC                          1381  MATCH_SUB_TO_DN_B
000019CC                          1382      ** Move command size into D1
000019CC  123C 0002               1383      MOVE.B      #2,D1
000019D0                          1384      ** Print command
000019D0  103C 000E               1385      MOVE.B      #14,D0
000019D4  43F8 1171               1386      LEA         pr_SUB,A1
000019D8  4E4F                    1387      TRAP        #15
000019DA                          1388      ** Print size
000019DA  43F8 1138               1389      LEA         pr_BYTE,A1
000019DE  4E4F                    1390      TRAP        #15
000019E0                          1391  
000019E0  6000 0032               1392      BRA         print_add_to_reg
000019E4                          1393  
000019E4                          1394  MATCH_SUB_TO_DN_W
000019E4                          1395      ** Move command size into D1
000019E4  123C 0002               1396      MOVE.B      #2,D1
000019E8                          1397      ** Print command
000019E8  103C 000E               1398      MOVE.B      #14,D0
000019EC  43F8 1171               1399      LEA         pr_SUB,A1
000019F0  4E4F                    1400      TRAP        #15
000019F2                          1401      ** Print size
000019F2  43F8 113B               1402      LEA         pr_WORD,A1
000019F6  4E4F                    1403      TRAP        #15
000019F8                          1404  
000019F8  6000 001A               1405      BRA         print_add_to_reg
000019FC                          1406  
000019FC                          1407  MATCH_SUB_TO_DN_L
000019FC                          1408      ** Move command size into D1
000019FC  123C 0004               1409      MOVE.B      #4,D1
00001A00                          1410      ** Print command
00001A00  103C 000E               1411      MOVE.B      #14,D0
00001A04  43F8 1171               1412      LEA         pr_SUB,A1
00001A08  4E4F                    1413      TRAP        #15
00001A0A                          1414      ** Print size
00001A0A  43F8 113E               1415      LEA         pr_LONG,A1
00001A0E  4E4F                    1416      TRAP        #15
00001A10                          1417  
00001A10  6000 0002               1418      BRA         print_add_to_reg
00001A14                          1419  
00001A14                          1420  print_add_to_reg
00001A14                          1421      ** Print space
00001A14  43F8 1134               1422      LEA         pr_space,A1
00001A18  4E4F                    1423      TRAP        #15
00001A1A                          1424      ** Print source
00001A1A  1002                    1425      MOVE.B      D2,D0
00001A1C  0200 003F               1426      ANDI.B      #%00111111,D0
00001A20  4EB8 1018               1427      JSR         EADecoder
00001A24                          1428      ** Add comma
00001A24  103C 000E               1429      MOVE.B      #14,D0
00001A28  43F8 1136               1430      LEA         pr_comma,A1
00001A2C  4E4F                    1431      TRAP        #15
00001A2E                          1432      ** Print destination
00001A2E  3002                    1433      MOVE.W      D2,D0
00001A30  0240 0E00               1434      ANDI.W      #%0000111000000000,D0
00001A34  EC48                    1435      LSR.W       #6,D0
00001A36  4EB8 1000               1436      JSR         EADecoder_left
00001A3A                          1437  
00001A3A  6000 F8AA               1438      BRA         opdec_return
00001A3E                          1439  
00001A3E                          1440  MATCH_ADD_TO_EA_B
00001A3E                          1441      ** Move command size into D1
00001A3E  123C 0002               1442      MOVE.B      #2,D1
00001A42                          1443      ** Print command
00001A42  103C 000E               1444      MOVE.B      #14,D0
00001A46  43F8 1163               1445      LEA         pr_ADD,A1
00001A4A  4E4F                    1446      TRAP        #15
00001A4C                          1447      ** Print size
00001A4C  43F8 1138               1448      LEA         pr_BYTE,A1
00001A50  4E4F                    1449      TRAP        #15
00001A52                          1450  
00001A52  6000 007A               1451      BRA         print_add_to_ea
00001A56                          1452  
00001A56                          1453  MATCH_ADD_TO_EA_W
00001A56                          1454      ** Move command size into D1
00001A56  123C 0002               1455      MOVE.B      #2,D1
00001A5A                          1456      ** Print command
00001A5A  103C 000E               1457      MOVE.B      #14,D0
00001A5E  43F8 1163               1458      LEA         pr_ADD,A1
00001A62  4E4F                    1459      TRAP        #15
00001A64                          1460      ** Print size
00001A64  43F8 113B               1461      LEA         pr_WORD,A1
00001A68  4E4F                    1462      TRAP        #15
00001A6A                          1463  
00001A6A  6000 0062               1464      BRA         print_add_to_ea
00001A6E                          1465  
00001A6E                          1466  MATCH_ADD_TO_EA_L
00001A6E                          1467      ** Move command size into D1
00001A6E  123C 0004               1468      MOVE.B      #4,D1
00001A72                          1469      ** Print command
00001A72  103C 000E               1470      MOVE.B      #14,D0
00001A76  43F8 1163               1471      LEA         pr_ADD,A1
00001A7A  4E4F                    1472      TRAP        #15
00001A7C                          1473      ** Print size
00001A7C  43F8 113E               1474      LEA         pr_LONG,A1
00001A80  4E4F                    1475      TRAP        #15
00001A82                          1476  
00001A82  6000 004A               1477      BRA         print_add_to_ea
00001A86                          1478  
00001A86                          1479  MATCH_SUB_TO_EA_B
00001A86                          1480      ** Move command size into D1
00001A86  123C 0002               1481      MOVE.B      #2,D1
00001A8A                          1482      ** Print command
00001A8A  103C 000E               1483      MOVE.B      #14,D0
00001A8E  43F8 1171               1484      LEA         pr_SUB,A1
00001A92  4E4F                    1485      TRAP        #15
00001A94                          1486      ** Print size
00001A94  43F8 1138               1487      LEA         pr_BYTE,A1
00001A98  4E4F                    1488      TRAP        #15
00001A9A                          1489  
00001A9A  6000 0032               1490      BRA         print_add_to_ea
00001A9E                          1491  
00001A9E                          1492  MATCH_SUB_TO_EA_W
00001A9E                          1493      ** Move command size into D1
00001A9E  123C 0002               1494      MOVE.B      #2,D1
00001AA2                          1495      ** Print command
00001AA2  103C 000E               1496      MOVE.B      #14,D0
00001AA6  43F8 1171               1497      LEA         pr_SUB,A1
00001AAA  4E4F                    1498      TRAP        #15
00001AAC                          1499      ** Print size
00001AAC  43F8 113B               1500      LEA         pr_WORD,A1
00001AB0  4E4F                    1501      TRAP        #15
00001AB2                          1502  
00001AB2  6000 001A               1503      BRA         print_add_to_ea
00001AB6                          1504  
00001AB6                          1505  MATCH_SUB_TO_EA_L
00001AB6                          1506      ** Move command size into D1
00001AB6  123C 0004               1507      MOVE.B      #4,D1
00001ABA                          1508      ** Print command
00001ABA  103C 000E               1509      MOVE.B      #14,D0
00001ABE  43F8 1171               1510      LEA         pr_SUB,A1
00001AC2  4E4F                    1511      TRAP        #15
00001AC4                          1512      ** Print size
00001AC4  43F8 113E               1513      LEA         pr_LONG,A1
00001AC8  4E4F                    1514      TRAP        #15
00001ACA                          1515  
00001ACA  6000 0002               1516      BRA         print_add_to_ea
00001ACE                          1517  
00001ACE                          1518  print_add_to_ea
00001ACE                          1519      ** Print space
00001ACE  43F8 1134               1520      LEA         pr_space,A1
00001AD2  4E4F                    1521      TRAP        #15
00001AD4                          1522      ** Print Source
00001AD4  3002                    1523      MOVE.W      D2,D0
00001AD6  0240 0E00               1524      ANDI.W      #%0000111000000000,D0
00001ADA  EC48                    1525      LSR.W       #6,D0
00001ADC  4EB8 1000               1526      JSR         EADecoder_left
00001AE0                          1527      ** Add comma
00001AE0  103C 000E               1528      MOVE.B      #14,D0
00001AE4  43F8 1136               1529      LEA         pr_comma,A1
00001AE8  4E4F                    1530      TRAP        #15
00001AEA                          1531      ** Print source
00001AEA  1002                    1532      MOVE.B      D2,D0
00001AEC  0200 003F               1533      ANDI.B      #%00111111,D0
00001AF0  4EB8 1018               1534      JSR         EADecoder
00001AF4                          1535  
00001AF4  6000 F7F0               1536      BRA         opdec_return
00001AF8                          1537  
00001AF8                          1538  *************************************
00001AF8                          1539  **          ADDQ COMMANDS          **
00001AF8                          1540  *************************************
00001AF8                          1541  
00001AF8                          1542  MATCH_ADDQ_B
00001AF8                          1543      ** Move command size into D1
00001AF8  123C 0002               1544      MOVE.B      #2,D1
00001AFC                          1545      ** Print command
00001AFC  103C 000E               1546      MOVE.B      #14,D0
00001B00  43F8 116C               1547      LEA         pr_ADDQ,A1
00001B04  4E4F                    1548      TRAP        #15
00001B06                          1549      ** Print size
00001B06  43F8 1138               1550      LEA         pr_BYTE,A1
00001B0A  4E4F                    1551      TRAP        #15
00001B0C                          1552  
00001B0C  6000 0032               1553      BRA         print_addq
00001B10                          1554  
00001B10                          1555  MATCH_ADDQ_W
00001B10                          1556      ** Move command size into D1
00001B10  123C 0002               1557      MOVE.B      #2,D1
00001B14                          1558      ** Print command
00001B14  103C 000E               1559      MOVE.B      #14,D0
00001B18  43F8 116C               1560      LEA         pr_ADDQ,A1
00001B1C  4E4F                    1561      TRAP        #15
00001B1E                          1562      ** Print size
00001B1E  43F8 113B               1563      LEA         pr_WORD,A1
00001B22  4E4F                    1564      TRAP        #15
00001B24                          1565  
00001B24  6000 001A               1566      BRA         print_addq
00001B28                          1567  
00001B28                          1568  MATCH_ADDQ_L
00001B28                          1569      ** Move command size into D1
00001B28  123C 0004               1570      MOVE.B      #4,D1
00001B2C                          1571      ** Print command
00001B2C  103C 000E               1572      MOVE.B      #14,D0
00001B30  43F8 116C               1573      LEA         pr_ADDQ,A1
00001B34  4E4F                    1574      TRAP        #15
00001B36                          1575      ** Print size
00001B36  43F8 113E               1576      LEA         pr_LONG,A1
00001B3A  4E4F                    1577      TRAP        #15
00001B3C                          1578  
00001B3C  6000 0002               1579      BRA         print_addq
00001B40                          1580  
00001B40                          1581  print_addq
00001B40                          1582      ** Print space
00001B40  43F8 1134               1583      LEA         pr_space,A1
00001B44  4E4F                    1584      TRAP        #15
00001B46                          1585      ** Print hash
00001B46  43F8 1141               1586      LEA         pr_hash,A1
00001B4A  4E4F                    1587      TRAP        #15
00001B4C                          1588      ** Print Immediate data
00001B4C  3602                    1589      MOVE.W      D2,D3 * Temporarily move op data
00001B4E  3202                    1590      MOVE.W      D2,D1
00001B50  0241 0E00               1591      ANDI.W      #%0000111000000000,D1
00001B54  EC49                    1592      LSR.W       #6,D1
00001B56  E649                    1593      LSR.W       #3,D1
00001B58  143C 0010               1594      MOVE.B      #16,D2
00001B5C  303C 000F               1595      MOVE.W      #15,D0
00001B60  4E4F                    1596      TRAP        #15
00001B62                          1597  
00001B62  3403                    1598      MOVE.W      D3,D2 * Move op data back
00001B64                          1599  
00001B64                          1600      ** Add comma
00001B64  103C 000E               1601      MOVE.B      #14,D0
00001B68  43F8 1136               1602      LEA         pr_comma,A1
00001B6C  4E4F                    1603      TRAP        #15
00001B6E                          1604      ** Decode right side ea
00001B6E  1002                    1605      MOVE.B      D2,D0
00001B70  0200 003F               1606      ANDI.B      #%00111111,D0
00001B74  4EB8 1018               1607      JSR         EADecoder
00001B78                          1608  
00001B78  6000 F76C               1609      BRA         opdec_return
00001B7C                          1610  
00001B7C                          1611  *************************************
00001B7C                          1612  **          DIVU COMMANDS          **
00001B7C                          1613  *************************************
00001B7C                          1614  
00001B7C                          1615  MATCH_DIVU_W
00001B7C                          1616      ** Move command size into D1
00001B7C  123C 0002               1617      MOVE.B      #2,D1
00001B80                          1618      ** Print command
00001B80  103C 000E               1619      MOVE.B      #14,D0
00001B84  43F8 117A               1620      LEA         pr_DIVU,A1
00001B88  4E4F                    1621      TRAP        #15
00001B8A                          1622      ** Print size
00001B8A  43F8 113B               1623      LEA         pr_WORD,A1
00001B8E  4E4F                    1624      TRAP        #15
00001B90                          1625      ** Print space
00001B90  43F8 1134               1626      LEA         pr_space,A1
00001B94  4E4F                    1627      TRAP        #15
00001B96                          1628      ** Decode right side ea
00001B96  1002                    1629      MOVE.B      D2,D0
00001B98  0200 003F               1630      ANDI.B      #%00111111,D0
00001B9C  4EB8 1018               1631      JSR         EADecoder
00001BA0                          1632      ** Add comma
00001BA0  103C 000E               1633      MOVE.B      #14,D0
00001BA4  43F8 1136               1634      LEA         pr_comma,A1
00001BA8  4E4F                    1635      TRAP        #15
00001BAA                          1636      ** Decode left side ea
00001BAA  3002                    1637      MOVE.W      D2,D0
00001BAC  0240 0FC0               1638      ANDI.W      #%0000111111000000,D0
00001BB0  EC88                    1639      LSR.L       #6,D0
00001BB2  4EB8 1000               1640      JSR         EADecoder_left
00001BB6                          1641  
00001BB6  6000 F72E               1642      BRA         opdec_return
00001BBA                          1643  
00001BBA                          1644  
00001BBA                          1645  
00001BBA                          1646  ***********************************************************************************
00001BBA                          1647  ***********************************************************************************
00001BBA                          1648  ***********************************************************************************
00001BBA                          1649  
00001BBA                          1650  *************************************
00001BBA                          1651  **        ARSANY'S COMMANDS        **
00001BBA                          1652  *************************************
00001BBA                          1653  
00001BBA                          1654  MATCH_MOVEA_W
00001BBA                          1655      ** Move command size into D1
00001BBA  123C 0002               1656      MOVE.B      #2,D1
00001BBE                          1657      ** Print command
00001BBE  103C 000E               1658      MOVE.B      #14,D0
00001BC2  43F8 114C               1659      LEA         pr_MOVEA,A1
00001BC6  4E4F                    1660      TRAP        #15
00001BC8                          1661      ** Print size
00001BC8  43F8 113B               1662      LEA         pr_WORD,A1
00001BCC  4E4F                    1663      TRAP        #15
00001BCE                          1664      ** Print space
00001BCE  43F8 1134               1665      LEA         pr_space,A1
00001BD2  4E4F                    1666      TRAP        #15
00001BD4                          1667      ** Decode right side ea
00001BD4  1002                    1668      MOVE.B      D2,D0
00001BD6  0200 003F               1669      ANDI.B      #%00111111,D0
00001BDA  4EB8 1018               1670      JSR         EADecoder
00001BDE                          1671      ** Add comma
00001BDE  103C 000E               1672      MOVE.B      #14,D0
00001BE2  43F8 1136               1673      LEA         pr_comma,A1
00001BE6  4E4F                    1674      TRAP        #15
00001BE8                          1675      ** Decode left side ea
00001BE8  3002                    1676      MOVE.W      D2,D0
00001BEA  0240 0FC0               1677      ANDI.W      #%0000111111000000,D0
00001BEE  EC88                    1678      LSR.L       #6,D0
00001BF0  4EB8 1000               1679      JSR         EADecoder_left
00001BF4                          1680  
00001BF4  6000 F6F0               1681      BRA         opdec_return
00001BF8                          1682  MATCH_MOVEA_L
00001BF8                          1683      ** Move command size into D1
00001BF8  123C 0004               1684      MOVE.B      #4,D1
00001BFC                          1685      ** Print command
00001BFC  103C 000E               1686      MOVE.B      #14,D0
00001C00  43F8 114C               1687      LEA         pr_MOVEA,A1
00001C04  4E4F                    1688      TRAP        #15
00001C06                          1689      ** Print size
00001C06  43F8 113E               1690      LEA         pr_LONG,A1
00001C0A  4E4F                    1691      TRAP        #15
00001C0C                          1692      ** Print space
00001C0C  43F8 1134               1693      LEA         pr_space,A1
00001C10  4E4F                    1694      TRAP        #15
00001C12                          1695      ** Decode right side ea
00001C12  1002                    1696      MOVE.B      D2,D0
00001C14  0200 003F               1697      ANDI.B      #%00111111,D0
00001C18  4EB8 1018               1698      JSR         EADecoder
00001C1C                          1699      ** Add comma
00001C1C  103C 000E               1700      MOVE.B      #14,D0
00001C20  43F8 1136               1701      LEA         pr_comma,A1
00001C24  4E4F                    1702      TRAP        #15
00001C26                          1703      ** Decode left side ea
00001C26  3002                    1704      MOVE.W      D2,D0
00001C28  0240 0FC0               1705      ANDI.W      #%0000111111000000,D0
00001C2C  EC88                    1706      LSR.L       #6,D0
00001C2E  4EB8 1000               1707      JSR         EADecoder_left
00001C32                          1708  
00001C32  6000 F6B2               1709      BRA         opdec_return
00001C36                          1710  MATCH_ADDA_W
00001C36                          1711      ** Move command size into D1
00001C36  123C 0002               1712      MOVE.B      #2,D1
00001C3A                          1713      ** Print command
00001C3A  103C 000E               1714      MOVE.B      #14,D0
00001C3E  43F8 115E               1715      LEA         pr_ADDA,A1
00001C42  4E4F                    1716      TRAP        #15
00001C44                          1717      ** Print size
00001C44  43F8 113B               1718      LEA         pr_WORD,A1
00001C48  4E4F                    1719      TRAP        #15
00001C4A                          1720      ** Print space
00001C4A  43F8 1134               1721      LEA         pr_space,A1
00001C4E  4E4F                    1722      TRAP        #15
00001C50                          1723      ** Decode right side ea
00001C50  1002                    1724      MOVE.B      D2,D0
00001C52  0200 003F               1725      ANDI.B      #%00111111,D0
00001C56  4EB8 1018               1726      JSR         EADecoder
00001C5A                          1727      ** Add comma
00001C5A  103C 000E               1728      MOVE.B      #14,D0
00001C5E  43F8 1136               1729      LEA         pr_comma,A1
00001C62  4E4F                    1730      TRAP        #15
00001C64                          1731      ** Decode left side ea
00001C64  3002                    1732      MOVE.W      D2,D0
00001C66  0240 0FC0               1733      ANDI.W      #%0000111111000000,D0
00001C6A  EC88                    1734      LSR.L       #6,D0
00001C6C  4EB8 1000               1735      JSR         EADecoder_left
00001C70                          1736  
00001C70  6000 F674               1737      BRA         opdec_return
00001C74                          1738  MATCH_ADDA_L
00001C74                          1739      ** Move command size into D1
00001C74  123C 0004               1740      MOVE.B      #4,D1
00001C78                          1741      ** Print command
00001C78  103C 000E               1742      MOVE.B      #14,D0
00001C7C  43F8 115E               1743      LEA         pr_ADDA,A1
00001C80  4E4F                    1744      TRAP        #15
00001C82                          1745      ** Print size
00001C82  43F8 113E               1746      LEA         pr_LONG,A1
00001C86  4E4F                    1747      TRAP        #15
00001C88                          1748      ** Print space
00001C88  43F8 1134               1749      LEA         pr_space,A1
00001C8C  4E4F                    1750      TRAP        #15
00001C8E                          1751      ** Decode right side ea
00001C8E  1002                    1752      MOVE.B      D2,D0
00001C90  0200 003F               1753      ANDI.B      #%00111111,D0
00001C94  4EB8 1018               1754      JSR         EADecoder
00001C98                          1755      ** Add comma
00001C98  103C 000E               1756      MOVE.B      #14,D0
00001C9C  43F8 1136               1757      LEA         pr_comma,A1
00001CA0  4E4F                    1758      TRAP        #15
00001CA2                          1759      ** Decode left side ea
00001CA2  3002                    1760      MOVE.W      D2,D0
00001CA4  0240 0FC0               1761      ANDI.W      #%0000111111000000,D0
00001CA8  EC88                    1762      LSR.L       #6,D0
00001CAA  4EB8 1000               1763      JSR         EADecoder_left
00001CAE                          1764  
00001CAE  6000 F636               1765      BRA         opdec_return
00001CB2                          1766  MATCH_MULS_W
00001CB2                          1767      ** Move command size into D1
00001CB2  123C 0002               1768      MOVE.B      #2,D1
00001CB6                          1769      ** Print command
00001CB6  103C 000E               1770      MOVE.B      #14,D0
00001CBA  43F8 1175               1771      LEA         pr_MULS,A1
00001CBE  4E4F                    1772      TRAP        #15
00001CC0                          1773      ** Print size
00001CC0  43F8 113B               1774      LEA         pr_WORD,A1
00001CC4  4E4F                    1775      TRAP        #15
00001CC6                          1776      ** Print space
00001CC6  43F8 1134               1777      LEA         pr_space,A1
00001CCA  4E4F                    1778      TRAP        #15
00001CCC                          1779      ** Decode right side ea
00001CCC  1002                    1780      MOVE.B      D2,D0
00001CCE  0200 003F               1781      ANDI.B      #%00111111,D0
00001CD2  4EB8 1018               1782      JSR         EADecoder
00001CD6                          1783      ** Add comma
00001CD6  103C 000E               1784      MOVE.B      #14,D0
00001CDA  43F8 1136               1785      LEA         pr_comma,A1
00001CDE  4E4F                    1786      TRAP        #15
00001CE0                          1787      ** Decode left side ea
00001CE0  3002                    1788      MOVE.W      D2,D0
00001CE2  0240 0FC0               1789      ANDI.W      #%0000111111000000,D0
00001CE6  EC88                    1790      LSR.L       #6,D0
00001CE8  4EB8 1000               1791      JSR         EADecoder_left
00001CEC                          1792  
00001CEC  6000 F5F8               1793      BRA         opdec_return
00001CF0                          1794  MATCH_RTS
00001CF0  43F8 1183               1795      LEA         pr_RTS,A1
00001CF4  103C 000E               1796      MOVE.B      #14,D0
00001CF8  4E4F                    1797      TRAP        #15
00001CFA  6000 F5EA               1798      BRA         opdec_return
00001CFE                          1799  MATCH_CMP_B
00001CFE                          1800      ** Move command size into D1
00001CFE  123C 0002               1801      MOVE.B      #2,D1
00001D02                          1802      ** Print command
00001D02  103C 000E               1803      MOVE.B      #14,D0
00001D06  43F8 1187               1804      LEA         pr_CMP,A1
00001D0A  4E4F                    1805      TRAP        #15
00001D0C                          1806      ** Print size
00001D0C  43F8 1138               1807      LEA         pr_BYTE,A1
00001D10  4E4F                    1808      TRAP        #15
00001D12                          1809      ** Print space
00001D12  43F8 1134               1810      LEA         pr_space,A1
00001D16  4E4F                    1811      TRAP        #15
00001D18                          1812      ** Decode right side ea
00001D18  1002                    1813      MOVE.B      D2,D0
00001D1A  0200 003F               1814      ANDI.B      #%00111111,D0
00001D1E  4EB8 1018               1815      JSR         EADecoder
00001D22                          1816      ** Add comma
00001D22  103C 000E               1817      MOVE.B      #14,D0
00001D26  43F8 1136               1818      LEA         pr_comma,A1
00001D2A  4E4F                    1819      TRAP        #15
00001D2C                          1820      ** Decode left side ea
00001D2C  3002                    1821      MOVE.W      D2,D0
00001D2E  0240 0E00               1822      ANDI.W      #%0000111000000000,D0
00001D32  EC88                    1823      LSR.L       #6,D0
00001D34  4EB8 1000               1824      JSR         EADecoder_left
00001D38                          1825  
00001D38  6000 F5AC               1826      BRA         opdec_return
00001D3C                          1827  MATCH_CMP_W
00001D3C                          1828      ** Move command size into D1
00001D3C  123C 0002               1829      MOVE.B      #2,D1
00001D40                          1830      ** Print command
00001D40  103C 000E               1831      MOVE.B      #14,D0
00001D44  43F8 1187               1832      LEA         pr_CMP,A1
00001D48  4E4F                    1833      TRAP        #15
00001D4A                          1834      ** Print size
00001D4A  43F8 113B               1835      LEA         pr_WORD,A1
00001D4E  4E4F                    1836      TRAP        #15
00001D50                          1837      ** Print space
00001D50  43F8 1134               1838      LEA         pr_space,A1
00001D54  4E4F                    1839      TRAP        #15
00001D56  4240                    1840      CLR         D0
00001D58                          1841      ** Decode right side ea
00001D58  1002                    1842      MOVE.B      D2,D0
00001D5A  0200 003F               1843      ANDI.B      #%00111111,D0
00001D5E  4EB8 1018               1844      JSR         EADecoder
00001D62                          1845      ** Add comma
00001D62  103C 000E               1846      MOVE.B      #14,D0
00001D66  43F8 1136               1847      LEA         pr_comma,A1
00001D6A  4E4F                    1848      TRAP        #15
00001D6C                          1849      ** Decode left side ea
00001D6C  3002                    1850      MOVE.W      D2,D0
00001D6E  0240 0E00               1851      ANDI.W      #%0000111000000000,D0
00001D72  EC88                    1852      LSR.L       #6,D0
00001D74  4EB8 1000               1853      JSR         EADecoder_left
00001D78                          1854  
00001D78  6000 F56C               1855      BRA         opdec_return
00001D7C                          1856  MATCH_CMP_L
00001D7C                          1857      ** Move command size into D1
00001D7C  123C 0004               1858      MOVE.B      #4,D1
00001D80                          1859      ** Print command
00001D80  103C 000E               1860      MOVE.B      #14,D0
00001D84  43F8 1187               1861      LEA         pr_CMP,A1
00001D88  4E4F                    1862      TRAP        #15
00001D8A                          1863      ** Print size
00001D8A  43F8 113E               1864      LEA         pr_LONG,A1
00001D8E  4E4F                    1865      TRAP        #15
00001D90                          1866      ** Print space
00001D90  43F8 1134               1867      LEA         pr_space,A1
00001D94  4E4F                    1868      TRAP        #15
00001D96  4240                    1869      CLR         D0
00001D98                          1870      ** Decode right side ea
00001D98  1002                    1871      MOVE.B      D2,D0
00001D9A  0200 003F               1872      ANDI.B      #%00111111,D0
00001D9E  4EB8 1018               1873      JSR         EADecoder
00001DA2                          1874      ** Add comma
00001DA2  103C 000E               1875      MOVE.B      #14,D0
00001DA6  43F8 1136               1876      LEA         pr_comma,A1
00001DAA  4E4F                    1877      TRAP        #15
00001DAC                          1878      ** Decode left side ea
00001DAC  3002                    1879      MOVE.W      D2,D0
00001DAE  0240 0E00               1880      ANDI.W      #%0000111000000000,D0
00001DB2  EC88                    1881      LSR.L       #6,D0
00001DB4  4EB8 1000               1882      JSR         EADecoder_left
00001DB8                          1883  
00001DB8  6000 F52C               1884      BRA         opdec_return
00001DBC                          1885  MATCH_JSR
00001DBC                          1886      ** Print command
00001DBC  103C 000E               1887      MOVE.B      #14,D0
00001DC0  43F8 118B               1888      LEA         pr_JSR,A1
00001DC4  4E4F                    1889      TRAP        #15
00001DC6                          1890      ** Print space
00001DC6  43F8 1134               1891      LEA         pr_space,A1
00001DCA  4E4F                    1892      TRAP        #15
00001DCC                          1893      ** Decode right side ea
00001DCC  1002                    1894      MOVE.B      D2,D0
00001DCE  0200 003F               1895      ANDI.B      #%00111111,D0
00001DD2  4EB8 1018               1896      JSR         EADecoder
00001DD6                          1897  
00001DD6  6000 F50E               1898      BRA         opdec_return
00001DDA                          1899  MATCH_CLR_B
00001DDA                          1900      ** Move command size into D1
00001DDA  123C 0002               1901      MOVE.B      #2,D1
00001DDE                          1902      ** Print command
00001DDE  103C 000E               1903      MOVE.B      #14,D0
00001DE2  43F8 117F               1904      LEA         pr_CLR,A1
00001DE6  4E4F                    1905      TRAP        #15
00001DE8                          1906      ** Print size
00001DE8  43F8 1138               1907      LEA         pr_BYTE,A1
00001DEC  4E4F                    1908      TRAP        #15
00001DEE                          1909      ** Print space
00001DEE  43F8 1134               1910      LEA         pr_space,A1
00001DF2  4E4F                    1911      TRAP        #15
00001DF4                          1912      ** Decode right side ea
00001DF4  1002                    1913      MOVE.B      D2,D0
00001DF6  0200 003F               1914      ANDI.B      #%00111111,D0
00001DFA  4EB8 1018               1915      JSR         EADecoder
00001DFE                          1916  
00001DFE  6000 F4E6               1917      BRA         opdec_return
00001E02                          1918  MATCH_CLR_W
00001E02                          1919      ** Move command size into D1
00001E02  123C 0002               1920      MOVE.B      #2,D1
00001E06                          1921      ** Print command
00001E06  103C 000E               1922      MOVE.B      #14,D0
00001E0A  43F8 117F               1923      LEA         pr_CLR,A1
00001E0E  4E4F                    1924      TRAP        #15
00001E10                          1925      ** Print size
00001E10  43F8 113B               1926      LEA         pr_WORD,A1
00001E14  4E4F                    1927      TRAP        #15
00001E16                          1928      ** Print space
00001E16  43F8 1134               1929      LEA         pr_space,A1
00001E1A  4E4F                    1930      TRAP        #15
00001E1C                          1931      ** Decode right side ea
00001E1C  1002                    1932      MOVE.B      D2,D0
00001E1E  0200 003F               1933      ANDI.B      #%00111111,D0
00001E22  4EB8 1018               1934      JSR         EADecoder
00001E26                          1935  
00001E26  6000 F4BE               1936      BRA         opdec_return
00001E2A                          1937  MATCH_CLR_L
00001E2A                          1938      ** Move command size into D1
00001E2A  123C 0004               1939      MOVE.B      #4,D1
00001E2E                          1940      ** Print command
00001E2E  103C 000E               1941      MOVE.B      #14,D0
00001E32  43F8 117F               1942      LEA         pr_CLR,A1
00001E36  4E4F                    1943      TRAP        #15
00001E38                          1944      ** Print size
00001E38  43F8 113E               1945      LEA         pr_LONG,A1
00001E3C  4E4F                    1946      TRAP        #15
00001E3E                          1947      ** Print space
00001E3E  43F8 1134               1948      LEA         pr_space,A1
00001E42  4E4F                    1949      TRAP        #15
00001E44                          1950      ** Decode right side ea
00001E44  1002                    1951      MOVE.B      D2,D0
00001E46  0200 003F               1952      ANDI.B      #%00111111,D0
00001E4A  4EB8 1018               1953      JSR         EADecoder
00001E4E                          1954  
00001E4E  6000 F496               1955      BRA         opdec_return
00001E52                          1956  MATCH_AND_DN_B
00001E52                          1957      ** Move command size into D1
00001E52  123C 0002               1958      MOVE.B      #2,D1
00001E56                          1959      ** Print command
00001E56  103C 000E               1960      MOVE.B      #14,D0
00001E5A  43F8 118F               1961      LEA         pr_AND,A1
00001E5E  4E4F                    1962      TRAP        #15
00001E60                          1963      ** Print size
00001E60  43F8 1138               1964      LEA         pr_BYTE,A1
00001E64  4E4F                    1965      TRAP        #15
00001E66                          1966      ** Print space
00001E66  43F8 1134               1967      LEA         pr_space,A1
00001E6A  4E4F                    1968      TRAP        #15
00001E6C                          1969      ** Decode right side ea
00001E6C  1002                    1970      MOVE.B      D2,D0
00001E6E  0200 003F               1971      ANDI.B      #%00111111,D0
00001E72  4EB8 1018               1972      JSR         EADecoder
00001E76                          1973      ** Add comma
00001E76  103C 000E               1974      MOVE.B      #14,D0
00001E7A  43F8 1136               1975      LEA         pr_comma,A1
00001E7E  4E4F                    1976      TRAP        #15
00001E80                          1977      ** Decode left side ea
00001E80  3002                    1978      MOVE.W      D2,D0
00001E82  0240 0E00               1979      ANDI.W      #%0000111000000000,D0
00001E86  EC88                    1980      LSR.L       #6,D0
00001E88  4EB8 1000               1981      JSR         EADecoder_left
00001E8C                          1982  
00001E8C  6000 F458               1983      BRA         opdec_return
00001E90                          1984  MATCH_AND_DN_W
00001E90                          1985      ** Move command size into D1
00001E90  123C 0002               1986      MOVE.B      #2,D1
00001E94                          1987      ** Print command
00001E94  103C 000E               1988      MOVE.B      #14,D0
00001E98  43F8 118F               1989      LEA         pr_AND,A1
00001E9C  4E4F                    1990      TRAP        #15
00001E9E                          1991      ** Print size
00001E9E  43F8 113B               1992      LEA         pr_WORD,A1
00001EA2  4E4F                    1993      TRAP        #15
00001EA4                          1994      ** Print space
00001EA4  43F8 1134               1995      LEA         pr_space,A1
00001EA8  4E4F                    1996      TRAP        #15
00001EAA                          1997      ** Decode right side ea
00001EAA  1002                    1998      MOVE.B      D2,D0
00001EAC  0200 003F               1999      ANDI.B      #%00111111,D0
00001EB0  4EB8 1018               2000      JSR         EADecoder
00001EB4                          2001      ** Add comma
00001EB4  103C 000E               2002      MOVE.B      #14,D0
00001EB8  43F8 1136               2003      LEA         pr_comma,A1
00001EBC  4E4F                    2004      TRAP        #15
00001EBE                          2005      ** Decode left side ea
00001EBE  3002                    2006      MOVE.W      D2,D0
00001EC0  0240 0E00               2007      ANDI.W      #%0000111000000000,D0
00001EC4  EC88                    2008      LSR.L       #6,D0
00001EC6  4EB8 1000               2009      JSR         EADecoder_left
00001ECA                          2010  
00001ECA  6000 F41A               2011      BRA         opdec_return
00001ECE                          2012  MATCH_AND_DN_L
00001ECE                          2013      ** Move command size into D1
00001ECE  123C 0004               2014      MOVE.B      #4,D1
00001ED2                          2015      ** Print command
00001ED2  103C 000E               2016      MOVE.B      #14,D0
00001ED6  43F8 118F               2017      LEA         pr_AND,A1
00001EDA  4E4F                    2018      TRAP        #15
00001EDC                          2019      ** Print size
00001EDC  43F8 113E               2020      LEA         pr_LONG,A1
00001EE0  4E4F                    2021      TRAP        #15
00001EE2                          2022      ** Print space
00001EE2  43F8 1134               2023      LEA         pr_space,A1
00001EE6  4E4F                    2024      TRAP        #15
00001EE8                          2025      ** Decode right side ea
00001EE8  1002                    2026      MOVE.B      D2,D0
00001EEA  0200 003F               2027      ANDI.B      #%00111111,D0
00001EEE  4EB8 1018               2028      JSR         EADecoder
00001EF2                          2029      ** Add comma
00001EF2  103C 000E               2030      MOVE.B      #14,D0
00001EF6  43F8 1136               2031      LEA         pr_comma,A1
00001EFA  4E4F                    2032      TRAP        #15
00001EFC                          2033      ** Decode left side ea
00001EFC  3002                    2034      MOVE.W      D2,D0
00001EFE  0240 0E00               2035      ANDI.W      #%0000111000000000,D0
00001F02  EC88                    2036      LSR.L       #6,D0
00001F04  4EB8 1000               2037      JSR         EADecoder_left
00001F08                          2038  
00001F08  6000 F3DC               2039      BRA         opdec_return
00001F0C                          2040  
00001F0C                          2041  MATCH_AND_EA_B
00001F0C                          2042      ** Move command size into D1
00001F0C  123C 0002               2043      MOVE.B      #2,D1
00001F10                          2044      ** Print command
00001F10  103C 000E               2045      MOVE.B      #14,D0
00001F14  43F8 118F               2046      LEA         pr_AND,A1
00001F18  4E4F                    2047      TRAP        #15
00001F1A                          2048      ** Print size
00001F1A  43F8 1138               2049      LEA         pr_BYTE,A1
00001F1E  4E4F                    2050      TRAP        #15
00001F20                          2051      ** Print space
00001F20  43F8 1134               2052      LEA         pr_space,A1
00001F24  4E4F                    2053      TRAP        #15
00001F26                          2054      ** Decode left side ea
00001F26  3002                    2055      MOVE.W      D2,D0
00001F28  0240 0E00               2056      ANDI.W      #%0000111000000000,D0
00001F2C  EC88                    2057      LSR.L       #6,D0
00001F2E  4EB8 1000               2058      JSR         EADecoder_left
00001F32                          2059      ** Add comma
00001F32  103C 000E               2060      MOVE.B      #14,D0
00001F36  43F8 1136               2061      LEA         pr_comma,A1
00001F3A  4E4F                    2062      TRAP        #15
00001F3C                          2063      ** Decode right side ea
00001F3C  1002                    2064      MOVE.B      D2,D0
00001F3E  0200 003F               2065      ANDI.B      #%00111111,D0
00001F42  4EB8 1018               2066      JSR         EADecoder
00001F46                          2067  
00001F46  6000 F39E               2068      BRA         opdec_return
00001F4A                          2069  MATCH_AND_EA_W
00001F4A                          2070      ** Move command size into D1
00001F4A  123C 0002               2071      MOVE.B      #2,D1
00001F4E                          2072      ** Print command
00001F4E  103C 000E               2073      MOVE.B      #14,D0
00001F52  43F8 118F               2074      LEA         pr_AND,A1
00001F56  4E4F                    2075      TRAP        #15
00001F58                          2076      ** Print size
00001F58  43F8 113B               2077      LEA         pr_WORD,A1
00001F5C  4E4F                    2078      TRAP        #15
00001F5E                          2079      ** Print space
00001F5E  43F8 1134               2080      LEA         pr_space,A1
00001F62  4E4F                    2081      TRAP        #15
00001F64                          2082      ** Decode left side ea
00001F64  3002                    2083      MOVE.W      D2,D0
00001F66  0240 0E00               2084      ANDI.W      #%0000111000000000,D0
00001F6A  EC88                    2085      LSR.L       #6,D0
00001F6C  4EB8 1000               2086      JSR         EADecoder_left
00001F70                          2087      ** Add comma
00001F70  103C 000E               2088      MOVE.B      #14,D0
00001F74  43F8 1136               2089      LEA         pr_comma,A1
00001F78  4E4F                    2090      TRAP        #15
00001F7A                          2091      ** Decode right side ea
00001F7A  1002                    2092      MOVE.B      D2,D0
00001F7C  0200 003F               2093      ANDI.B      #%00111111,D0
00001F80  4EB8 1018               2094      JSR         EADecoder
00001F84                          2095  
00001F84  6000 F360               2096      BRA         opdec_return
00001F88                          2097  MATCH_AND_EA_L
00001F88                          2098      ** Move command size into D1
00001F88  123C 0004               2099      MOVE.B      #4,D1
00001F8C                          2100      ** Print command
00001F8C  103C 000E               2101      MOVE.B      #14,D0
00001F90  43F8 118F               2102      LEA         pr_AND,A1
00001F94  4E4F                    2103      TRAP        #15
00001F96                          2104      ** Print size
00001F96  43F8 113E               2105      LEA         pr_LONG,A1
00001F9A  4E4F                    2106      TRAP        #15
00001F9C                          2107      ** Print space
00001F9C  43F8 1134               2108      LEA         pr_space,A1
00001FA0  4E4F                    2109      TRAP        #15
00001FA2                          2110      ** Decode left side ea
00001FA2  3002                    2111      MOVE.W      D2,D0
00001FA4  0240 0E00               2112      ANDI.W      #%0000111000000000,D0
00001FA8  EC88                    2113      LSR.L       #6,D0
00001FAA  4EB8 1000               2114      JSR         EADecoder_left
00001FAE                          2115      ** Add comma
00001FAE  103C 000E               2116      MOVE.B      #14,D0
00001FB2  43F8 1136               2117      LEA         pr_comma,A1
00001FB6  4E4F                    2118      TRAP        #15
00001FB8                          2119      ** Decode right side ea
00001FB8  1002                    2120      MOVE.B      D2,D0
00001FBA  0200 003F               2121      ANDI.B      #%00111111,D0
00001FBE  4EB8 1018               2122      JSR         EADecoder
00001FC2                          2123  
00001FC2  6000 F322               2124      BRA         opdec_return
00001FC6                          2125  
00001FC6                          2126  
00001FC6                          2127  
00001FC6                          2128  
00001FC6                          2129  ***********************************************************************************
00001FC6                          2130  ***********************************************************************************
00001FC6                          2131  ***********************************************************************************
00001FC6                          2132  
00001FC6                          2133  
00001FC6                          2134  
00001FC6                          2135  *************************************
00001FC6                          2136  **        SPENCER'S COMMANDS      **
00001FC6                          2137  *************************************
00001FC6                          2138  
00001FC6                          2139  
00001FC6                          2140  **********************************************
00001FC6                          2141  *****    SHIFT SUBROUTINES    ****************
00001FC6                          2142  CHECK_SHIFT
00001FC6  6100 010E               2143      BSR     Get_Count_Register_Val          * register 3
00001FCA  6100 011E               2144      BSR     Get_Size                        * register 4
00001FCE  6100 012E               2145      BSR     Get_Direction                   * register 5
00001FD2  6100 013E               2146      BSR     Get_Is_Register_Or_Immediate    * register 6
00001FD6  6100 0152               2147      BSR     Get_Shift_Opcode                * register 7
00001FDA                          2148  
00001FDA  6100 0024               2149      BSR     PrintShiftData
00001FDE                          2150  
00001FDE  6100 000C               2151      BSR     getShiftDestReg
00001FE2                          2152  
00001FE2  103C 0003               2153      MOVE.B  #3,D0
00001FE6  4E4F                    2154      TRAP    #15
00001FE8                          2155  
00001FE8  6000 F2FC               2156      BRA         opdec_return
00001FEC                          2157  
00001FEC                          2158  **********************************************
00001FEC                          2159  getShiftDestReg
00001FEC                          2160  
00001FEC  48A7 2000               2161      MOVEM.W     D2, -(SP)
00001FF0                          2162  
00001FF0  123C 000D               2163      MOVE.B      #13,D1
00001FF4  E3AA                    2164      LSL.L       D1,D2
00001FF6  E2AA                    2165      LSR.L       D1,D2
00001FF8  1202                    2166      MOVE.B      D2,D1
00001FFA                          2167  
00001FFA  4C9F 0004               2168      MOVEM.W     (SP)+,D2
00001FFE  4E75                    2169      RTS
00002000                          2170  
00002000                          2171  
00002000                          2172  *********************************************
00002000                          2173  PrintShiftData
00002000                          2174  
00002000  BE3C 0003               2175      CMP.B   #RO,D7
00002004  6700 0012               2176      BEQ     printRotate
00002008  BE3C 0000               2177      CMP.B   #AS,D7
0000200C  6700 0014               2178      BEQ     printArithShift
00002010  BE3C 0001               2179      CMP.B   #LS,D7
00002014  6700 0016               2180      BEQ     printLogicShift
00002018                          2181  
00002018                          2182  printRotate
00002018  43F8 11CB               2183      LEA         pr_SHIFT_RO,A1
0000201C  4EF9 00002036           2184      JMP         executeShiftOpcodePrint
00002022                          2185  printArithShift
00002022  43F8 11CE               2186      LEA         pr_SHIFT_AS,A1
00002026  4EF9 00002036           2187      JMP         executeShiftOpcodePrint
0000202C                          2188  printLogicShift
0000202C  43F8 11D1               2189      LEA         pr_SHIFT_LS,A1
00002030  4EF9 00002036           2190      JMP         executeShiftOpcodePrint
00002036                          2191  executeShiftOpcodePrint
00002036  6100 0148               2192      BSR         PrintString
0000203A                          2193  
0000203A  BA3C 0000               2194      CMP.B   #R,D5
0000203E  6700 000A               2195      BEQ     printShiftRight
00002042  BA3C 0001               2196      CMP.B   #L,D5
00002046  6700 000C               2197      BEQ     printShiftLeft
0000204A                          2198  
0000204A                          2199  printShiftRight
0000204A  43F8 11D6               2200      LEA         pr_SHIFT_R,A1
0000204E  4EF9 0000205E           2201      JMP         executePrintShiftdirection
00002054                          2202  printShiftLeft
00002054  43F8 11D4               2203      LEA         pr_SHIFT_L,A1
00002058  4EF9 0000205E           2204      JMP         executePrintShiftdirection
0000205E                          2205  executePrintShiftdirection
0000205E  6100 0120               2206      BSR         PrintString
00002062                          2207  
00002062  B83C 0000               2208      CMP.B   #SHIFT_BYTE,D4
00002066  6700 0012               2209      BEQ     printShiftByte
0000206A  B83C 0001               2210      CMP.B   #SHIFT_WORD,D4
0000206E  6700 0014               2211      BEQ     printShiftWord
00002072  B83C 0003               2212      CMP.B   #SHIFT_LONG,D4
00002076  6700 0016               2213      BEQ     printShiftLong
0000207A                          2214  
0000207A                          2215  printShiftByte
0000207A  43F8 1138               2216      LEA     pr_BYTE,A1
0000207E  4EF9 00002098           2217      JMP     executePrintShiftSize
00002084                          2218  printShiftWord
00002084  43F8 113B               2219      LEA     pr_WORD,A1
00002088  4EF9 00002098           2220      JMP     executePrintShiftSize
0000208E                          2221  printShiftLong
0000208E  43F8 113E               2222      LEA     pr_LONG,A1
00002092  4EF9 00002098           2223      JMP     executePrintShiftSize
00002098                          2224  executePrintShiftSize
00002098  6100 00E6               2225      BSR         PrintString
0000209C  43F8 1134               2226      LEA     pr_space,A1
000020A0  6100 00DE               2227      BSR     PrintString
000020A4                          2228  
000020A4  BC3C 0001               2229      CMP.B   #SHIFT_register,D6
000020A8  6700 000A               2230      BEQ     printShiftReg
000020AC  BC3C 0000               2231      CMP.B   #SHIFT_immed,D6
000020B0  6700 000A               2232      BEQ     printShift
000020B4                          2233  
000020B4                          2234  printShiftReg
000020B4  43F8 11D8               2235      LEA     pr_reg,A1
000020B8  6100 00C6               2236      BSR     PrintString
000020BC                          2237  printShift
000020BC  1203                    2238      MOVE.B  D3,D1
000020BE  103C 0003               2239      MOVE.B  #3,D0
000020C2  4E4F                    2240      TRAP    #15
000020C4                          2241  
000020C4  43F8 1136               2242      LEA     pr_comma,A1
000020C8  6100 00B6               2243      BSR     PrintString
000020CC  43F8 11D8               2244      LEA     pr_reg,A1
000020D0  6100 00AE               2245      BSR     PrintString
000020D4  4E75                    2246      RTS
000020D6                          2247  
000020D6                          2248  
000020D6                          2249  **********************************************
000020D6                          2250  Get_Count_Register_Val
000020D6                          2251  
000020D6  48A7 2000               2252      MOVEM.W     D2, -(SP)
000020DA                          2253  
000020DA  123C 000D               2254      MOVE.B      #13,D1
000020DE  E98A                    2255      LSL.L       #4,D2
000020E0  E2AA                    2256      LSR.L       D1,D2
000020E2  1602                    2257      MOVE.B      D2,D3
000020E4                          2258  
000020E4  4C9F 0004               2259      MOVEM.W     (SP)+,D2
000020E8  4E75                    2260      RTS
000020EA                          2261  
000020EA                          2262  **********************************************
000020EA                          2263  Get_Size
000020EA                          2264  
000020EA  48A7 2000               2265      MOVEM.W     D2, -(SP)
000020EE                          2266  
000020EE  123C 000E               2267      MOVE.B      #14,D1
000020F2  E18A                    2268      LSL.L       #8,D2
000020F4  E2AA                    2269      LSR.L       D1,D2
000020F6  1802                    2270      MOVE.B      D2,D4
000020F8                          2271  
000020F8  4C9F 0004               2272      MOVEM.W     (SP)+,D2
000020FC  4E75                    2273      RTS
000020FE                          2274  *********************************************
000020FE                          2275  Get_Direction
000020FE                          2276  
000020FE  48A7 2000               2277      MOVEM.W     D2, -(SP)
00002102                          2278  
00002102  123C 000F               2279      MOVE.B      #15,D1
00002106  EF8A                    2280      LSL.L       #7,D2
00002108  E2AA                    2281      LSR.L       D1,D2
0000210A  1A02                    2282      MOVE.B      D2,D5
0000210C                          2283  
0000210C  4C9F 0004               2284      MOVEM.W     (SP)+,D2
00002110  4E75                    2285      RTS
00002112                          2286  ********************************************
00002112                          2287  Get_Is_Register_Or_Immediate
00002112                          2288  
00002112  48A7 2000               2289      MOVEM.W     D2, -(SP)
00002116                          2290  
00002116  123C 000A               2291      MOVE.B      #10,D1
0000211A  E3AA                    2292      LSL.L       D1,D2
0000211C  123C 000F               2293      MOVE.B      #15,D1
00002120  E2AA                    2294      LSR.L       D1,D2
00002122                          2295  
00002122  1C02                    2296      MOVE.B      D2,D6
00002124                          2297  
00002124  4C9F 0004               2298      MOVEM.W     (SP)+,D2
00002128  4E75                    2299      RTS
0000212A                          2300  
0000212A                          2301  *******************************************
0000212A                          2302  Get_Shift_Opcode
0000212A                          2303  
0000212A  48A7 2000               2304      MOVEM.W     D2, -(SP)
0000212E                          2305  
0000212E  123C 000B               2306      MOVE.B      #11,D1
00002132  E3AA                    2307      LSL.L       D1,D2
00002134  123C 000E               2308      MOVE.B      #14,D1
00002138  E2AA                    2309      LSR.L       D1,D2
0000213A                          2310  
0000213A  1E02                    2311      MOVE.B      D2,D7
0000213C                          2312  
0000213C  4C9F 0004               2313      MOVEM.W     (SP)+,D2
00002140  4E75                    2314      RTS
00002142                          2315  ********************************************
00002142                          2316  
00002142                          2317  
00002142                          2318  MATCH_LSL
00002142  3A02                    2319      MOVE.W      D2,D5       *REMOVE
00002144                          2320  MATCH_LSR
00002144  3A02                    2321      MOVE.W      D2,D5       *REMOVE
00002146                          2322  MATCH_ASR
00002146  3A02                    2323      MOVE.W      D2,D5       *REMOVE
00002148                          2324  MATCH_ASL
00002148  3A02                    2325      MOVE.W      D2,D5       *REMOVE
0000214A                          2326  MATCH_ROL
0000214A  3A02                    2327      MOVE.W      D2,D5       *REMOVE
0000214C                          2328  MATCH_ROR
0000214C  3A02                    2329      MOVE.W      D2,D5       *REMOVE
0000214E                          2330  
0000214E                          2331  ***** BCC Displacement Subroutines************
0000214E                          2332  Get_BCC_Displacement_8bit
0000214E                          2333  
0000214E  4246                    2334      CLR     D6
00002150  1C02                    2335      MOVE.B  D2,D6
00002152  4E75                    2336      RTS
00002154                          2337  **********************************************
00002154                          2338  Get_BCC_Displacement_16bit
00002154                          2339  
00002154  4246                    2340      CLR     D6
00002156  3C18                    2341      MOVE.W  (A0)+,D6
00002158  4E75                    2342      RTS
0000215A                          2343  **********************************************
0000215A                          2344  Get_BCC_Displacement_32bit
0000215A                          2345  
0000215A  4246                    2346      CLR     D6
0000215C  2C18                    2347      MOVE.L  (A0)+,D6
0000215E  4E75                    2348      RTS
00002160                          2349  **********************************************
00002160                          2350  Get_Current_Address
00002160                          2351  
00002160  4247                    2352      CLR     D7
00002162  2E08                    2353      MOVE.L      A0,D7
00002164  5587                    2354      SUBI.L      #2,D7
00002166  4E75                    2355      RTS
00002168                          2356  **********************************************
00002168                          2357  Get_BCC_Destination_Address
00002168                          2358  
00002168  9E86                    2359      SUB.L   D6,D7
0000216A  4E75                    2360      RTS
0000216C                          2361  **********************************************
0000216C                          2362  **********************************************
0000216C                          2363  
0000216C                          2364  ********* Utility Subroutines ********************
0000216C                          2365  **********************************************
0000216C                          2366  PrintHex
0000216C                          2367  
0000216C  48A7 2000               2368      MOVEM.W     D2, -(SP)
00002170                          2369  
00002170  103C 000F               2370      MOVE.B      #15,D0
00002174  143C 0010               2371      MOVE.B      #16,D2 * print base 16
00002178  4E4F                    2372      TRAP        #15
0000217A                          2373  
0000217A  4C9F 0004               2374      MOVEM.W     (SP)+,D2
0000217E  4E75                    2375      RTS
00002180                          2376  **********************************************
00002180                          2377  PrintString
00002180  103C 000E               2378      MOVE.B      #14,D0
00002184  4E4F                    2379      TRAP        #15
00002186  4E75                    2380      RTS
00002188                          2381  **********************************************
00002188                          2382  PrintSizeByte
00002188  103C 000E               2383      MOVE.B      #14,D0
0000218C  43F8 1138               2384      LEA         pr_BYTE,A1
00002190  4E4F                    2385      TRAP        #15
00002192  4E75                    2386      RTS
00002194                          2387  **********************************************
00002194                          2388  PrintSizeWord
00002194  103C 000E               2389      MOVE.B      #14,D0
00002198  43F8 113B               2390      LEA         pr_WORD,A1
0000219C  4E4F                    2391      TRAP        #15
0000219E  4E75                    2392      RTS
000021A0                          2393  **********************************************
000021A0                          2394  PrintSizeLong
000021A0  103C 000E               2395      MOVE.B      #14,D0
000021A4  43F8 113E               2396      LEA         pr_LONG,A1
000021A8  4E4F                    2397      TRAP        #15
000021AA  4E75                    2398      RTS
000021AC                          2399  **********************************************
000021AC                          2400  **********************************************
000021AC                          2401  
000021AC                          2402  
000021AC                          2403  **********BCC OPCODE MATCHES*******
000021AC                          2404  MATCH_CC_T_8
000021AC  3A02                    2405      MOVE.W      D2,D5       *REMOVE
000021AE                          2406  MATCH_CC_T_16
000021AE  3A02                    2407      MOVE.W      D2,D5       *REMOVE
000021B0                          2408  MATCH_CC_T_32
000021B0  3A02                    2409      MOVE.W      D2,D5       *REMOVE
000021B2                          2410  *****
000021B2                          2411  MATCH_CC_F_8
000021B2  3A02                    2412      MOVE.W      D2,D5       *REMOVE
000021B4                          2413  MATCH_CC_F_16
000021B4  3A02                    2414      MOVE.W      D2,D5       *REMOVE
000021B6                          2415  MATCH_CC_F_32
000021B6  3A02                    2416      MOVE.W      D2,D5       *REMOVE
000021B8                          2417  *****
000021B8                          2418  MATCH_CC_HI_8
000021B8                          2419      ** print opcode **
000021B8  43F8 11A7               2420      LEA         pr_BCC_HI,A1
000021BC  61C2                    2421      BSR         PrintString
000021BE                          2422  
000021BE  61C8                    2423      BSR         PrintSizeBYTE
000021C0  43F8 1134               2424      LEA         pr_space,A1
000021C4  61BA                    2425      BSR         PrintString
000021C6                          2426  
000021C6                          2427      ** print address **
000021C6  6186                    2428      BSR         Get_BCC_Displacement_8bit
000021C8  6196                    2429      BSR         Get_Current_Address
000021CA  619C                    2430      BSR         Get_BCC_Destination_Address
000021CC  2207                    2431      MOVE.L      D7,D1
000021CE  619C                    2432      BSR         PrintHex
000021D0                          2433  
000021D0  6000 F114               2434      BRA         opdec_return
000021D4                          2435  
000021D4                          2436  MATCH_CC_HI_16
000021D4                          2437      ** print opcode **
000021D4  43F8 11A7               2438      LEA         pr_BCC_HI,A1
000021D8  61A6                    2439      BSR         PrintString
000021DA                          2440  
000021DA  61B8                    2441      BSR         PrintSizeWORD
000021DC  43F8 1134               2442      LEA         pr_space,A1
000021E0  619E                    2443      BSR         PrintString
000021E2                          2444  
000021E2                          2445      ** print address **
000021E2  6100 FF70               2446      BSR         Get_BCC_Displacement_16bit
000021E6  6100 FF78               2447      BSR         Get_Current_Address
000021EA  6100 FF7C               2448      BSR         Get_BCC_Destination_Address
000021EE  2207                    2449      MOVE.L      D7,D1
000021F0  6100 FF7A               2450      BSR         PrintHex
000021F4                          2451  
000021F4  6000 F0F0               2452      BRA         opdec_return
000021F8                          2453  MATCH_CC_HI_32
000021F8                          2454      ** print opcode **
000021F8  43F8 11A7               2455      LEA         pr_BCC_HI,A1
000021FC  6182                    2456      BSR         PrintString
000021FE                          2457  
000021FE  61A0                    2458      BSR         PrintSizeLONG
00002200  43F8 1134               2459      LEA         pr_space,A1
00002204  6100 FF7A               2460      BSR         PrintString
00002208                          2461  
00002208                          2462      ** print address **
00002208  6100 FF50               2463      BSR         Get_BCC_Displacement_32bit
0000220C  6100 FF52               2464      BSR         Get_Current_Address
00002210  6100 FF56               2465      BSR         Get_BCC_Destination_Address
00002214  2207                    2466      MOVE.L      D7,D1
00002216  6100 FF54               2467      BSR         PrintHex
0000221A                          2468  
0000221A  6000 F0CA               2469      BRA         opdec_return
0000221E                          2470  *****
0000221E                          2471  MATCH_CC_LS_8
0000221E                          2472      ** print opcode **
0000221E  43F8 11AF               2473      LEA         pr_BCC_LS,A1
00002222  6100 FF5C               2474      BSR         PrintString
00002226                          2475  
00002226  6100 FF60               2476      BSR         PrintSizeBYTE
0000222A  43F8 1134               2477      LEA         pr_space,A1
0000222E  6100 FF50               2478      BSR         PrintString
00002232                          2479  
00002232                          2480      ** print address **
00002232  6100 FF1A               2481      BSR         Get_BCC_Displacement_8bit
00002236  6100 FF28               2482      BSR         Get_Current_Address
0000223A  6100 FF2C               2483      BSR         Get_BCC_Destination_Address
0000223E  2207                    2484      MOVE.L      D7,D1
00002240  6100 FF2A               2485      BSR         PrintHex
00002244                          2486  
00002244  6000 F0A0               2487      BRA         opdec_return
00002248                          2488  MATCH_CC_LS_16
00002248                          2489      ** print opcode **
00002248  43F8 11AF               2490      LEA         pr_BCC_LS,A1
0000224C  6100 FF32               2491      BSR         PrintString
00002250                          2492  
00002250  6100 FF42               2493      BSR         PrintSizeWORD
00002254  43F8 1134               2494      LEA         pr_space,A1
00002258  6100 FF26               2495      BSR         PrintString
0000225C                          2496  
0000225C                          2497      ** print address **
0000225C  6100 FEF6               2498      BSR         Get_BCC_Displacement_16bit
00002260  6100 FEFE               2499      BSR         Get_Current_Address
00002264  6100 FF02               2500      BSR         Get_BCC_Destination_Address
00002268  2207                    2501      MOVE.L      D7,D1
0000226A  6100 FF00               2502      BSR         PrintHex
0000226E                          2503  
0000226E  6000 F076               2504      BRA         opdec_return
00002272                          2505  
00002272                          2506  MATCH_CC_LS_32
00002272                          2507      ** print opcode **
00002272  43F8 11AF               2508      LEA         pr_BCC_LS,A1
00002276  6100 FF08               2509      BSR         PrintString
0000227A                          2510  
0000227A  6100 FF24               2511      BSR         PrintSizeLONG
0000227E  43F8 1134               2512      LEA         pr_space,A1
00002282  6100 FEFC               2513      BSR         PrintString
00002286                          2514  
00002286                          2515      ** print address **
00002286  6100 FED2               2516      BSR         Get_BCC_Displacement_32bit
0000228A  6100 FED4               2517      BSR         Get_Current_Address
0000228E  6100 FED8               2518      BSR         Get_BCC_Destination_Address
00002292  2207                    2519      MOVE.L      D7,D1
00002294  6100 FED6               2520      BSR         PrintHex
00002298                          2521  
00002298  6000 F04C               2522      BRA         opdec_return
0000229C                          2523  *****
0000229C                          2524  MATCH_CC_CC_8
0000229C                          2525  
0000229C                          2526      ** print opcode **
0000229C  43F8 1193               2527      LEA         pr_BCC_CC,A1
000022A0  6100 FEDE               2528      BSR         PrintString
000022A4                          2529  
000022A4  6100 FEE2               2530      BSR         PrintSizeBYTE
000022A8  43F8 1134               2531      LEA         pr_space,A1
000022AC  6100 FED2               2532      BSR         PrintString
000022B0                          2533  
000022B0                          2534      ** print address **
000022B0  6100 FE9C               2535      BSR         Get_BCC_Displacement_8bit
000022B4  6100 FEAA               2536      BSR         Get_Current_Address
000022B8  6100 FEAE               2537      BSR         Get_BCC_Destination_Address
000022BC  2207                    2538      MOVE.L      D7,D1
000022BE  6100 FEAC               2539      BSR         PrintHex
000022C2                          2540  
000022C2  6000 F022               2541      BRA         opdec_return
000022C6                          2542  
000022C6                          2543  MATCH_CC_CC_16
000022C6                          2544      ** print opcode **
000022C6  43F8 1193               2545      LEA         pr_BCC_CC,A1
000022CA  6100 FEB4               2546      BSR         PrintString
000022CE                          2547  
000022CE  6100 FEC4               2548      BSR         PrintSizeWORD
000022D2  43F8 1134               2549      LEA         pr_space,A1
000022D6  6100 FEA8               2550      BSR         PrintString
000022DA                          2551  
000022DA                          2552      ** print address **
000022DA  6100 FE78               2553      BSR         Get_BCC_Displacement_16bit
000022DE  6100 FE80               2554      BSR         Get_Current_Address
000022E2  6100 FE84               2555      BSR         Get_BCC_Destination_Address
000022E6  2207                    2556      MOVE.L      D7,D1
000022E8  6100 FE82               2557      BSR         PrintHex
000022EC                          2558  
000022EC  6000 EFF8               2559      BRA         opdec_return
000022F0                          2560  MATCH_CC_CC_32
000022F0                          2561      ** print opcode **
000022F0  43F8 1193               2562      LEA         pr_BCC_CC,A1
000022F4  6100 FE8A               2563      BSR         PrintString
000022F8                          2564  
000022F8  6100 FEA6               2565      BSR         PrintSizeLONG
000022FC  43F8 1134               2566      LEA         pr_space,A1
00002300  6100 FE7E               2567      BSR         PrintString
00002304                          2568  
00002304                          2569      ** print address **
00002304  6100 FE54               2570      BSR         Get_BCC_Displacement_32bit
00002308  6100 FE56               2571      BSR         Get_Current_Address
0000230C  6100 FE5A               2572      BSR         Get_BCC_Destination_Address
00002310  2207                    2573      MOVE.L      D7,D1
00002312  6100 FE58               2574      BSR         PrintHex
00002316                          2575  
00002316  6000 EFCE               2576      BRA         opdec_return
0000231A                          2577  *****
0000231A                          2578  MATCH_CC_CS_8
0000231A                          2579      ** print opcode **
0000231A  43F8 1197               2580      LEA         pr_BCC_CS,A1
0000231E  6100 FE60               2581      BSR         PrintString
00002322                          2582  
00002322  6100 FE64               2583      BSR         PrintSizeBYTE
00002326  43F8 1134               2584      LEA         pr_space,A1
0000232A  6100 FE54               2585      BSR         PrintString
0000232E                          2586  
0000232E                          2587      ** print address **
0000232E  6100 FE1E               2588      BSR         Get_BCC_Displacement_8bit
00002332  6100 FE2C               2589      BSR         Get_Current_Address
00002336  6100 FE30               2590      BSR         Get_BCC_Destination_Address
0000233A  2207                    2591      MOVE.L      D7,D1
0000233C  6100 FE2E               2592      BSR         PrintHex
00002340                          2593  
00002340  6000 EFA4               2594      BRA         opdec_return
00002344                          2595  MATCH_CC_CS_16
00002344                          2596      ** print opcode **
00002344  43F8 1197               2597      LEA         pr_BCC_CS,A1
00002348  6100 FE36               2598      BSR         PrintString
0000234C                          2599  
0000234C  6100 FE46               2600      BSR         PrintSizeWORD
00002350  43F8 1134               2601      LEA         pr_space,A1
00002354  6100 FE2A               2602      BSR         PrintString
00002358                          2603  
00002358                          2604      ** print address **
00002358  6100 FDFA               2605      BSR         Get_BCC_Displacement_16bit
0000235C  6100 FE02               2606      BSR         Get_Current_Address
00002360  6100 FE06               2607      BSR         Get_BCC_Destination_Address
00002364  2207                    2608      MOVE.L      D7,D1
00002366  6100 FE04               2609      BSR         PrintHex
0000236A                          2610  
0000236A  6000 EF7A               2611      BRA         opdec_return
0000236E                          2612  MATCH_CC_CS_32
0000236E                          2613      ** print opcode **
0000236E  43F8 1197               2614      LEA         pr_BCC_CS,A1
00002372  6100 FE0C               2615      BSR         PrintString
00002376                          2616  
00002376  6100 FE28               2617      BSR         PrintSizeLONG
0000237A  43F8 1134               2618      LEA         pr_space,A1
0000237E  6100 FE00               2619      BSR         PrintString
00002382                          2620  
00002382                          2621      ** print address **
00002382  6100 FDD6               2622      BSR         Get_BCC_Displacement_32bit
00002386  6100 FDD8               2623      BSR         Get_Current_Address
0000238A  6100 FDDC               2624      BSR         Get_BCC_Destination_Address
0000238E  2207                    2625      MOVE.L      D7,D1
00002390  6100 FDDA               2626      BSR         PrintHex
00002394                          2627  
00002394  6000 EF50               2628      BRA         opdec_return
00002398                          2629  *****
00002398                          2630  MATCH_CC_NE_8
00002398                          2631      ** print opcode **
00002398  43F8 11BB               2632      LEA         pr_BCC_NE,A1
0000239C  6100 FDE2               2633      BSR         PrintString
000023A0                          2634  
000023A0  6100 FDE6               2635      BSR         PrintSizeBYTE
000023A4  43F8 1134               2636      LEA         pr_space,A1
000023A8  6100 FDD6               2637      BSR         PrintString
000023AC                          2638  
000023AC                          2639      ** print address **
000023AC  6100 FDA0               2640      BSR         Get_BCC_Displacement_8bit
000023B0  6100 FDAE               2641      BSR         Get_Current_Address
000023B4  6100 FDB2               2642      BSR         Get_BCC_Destination_Address
000023B8  2207                    2643      MOVE.L      D7,D1
000023BA  6100 FDB0               2644      BSR         PrintHex
000023BE                          2645  
000023BE  6000 EF26               2646      BRA         opdec_return
000023C2                          2647  MATCH_CC_NE_16
000023C2                          2648      ** print opcode **
000023C2  43F8 11BB               2649      LEA         pr_BCC_NE,A1
000023C6  6100 FDB8               2650      BSR         PrintString
000023CA                          2651  
000023CA  6100 FDC8               2652      BSR         PrintSizeWORD
000023CE  43F8 1134               2653      LEA         pr_space,A1
000023D2  6100 FDAC               2654      BSR         PrintString
000023D6                          2655  
000023D6                          2656      ** print address **
000023D6  6100 FD7C               2657      BSR         Get_BCC_Displacement_16bit
000023DA  6100 FD84               2658      BSR         Get_Current_Address
000023DE  6100 FD88               2659      BSR         Get_BCC_Destination_Address
000023E2  2207                    2660      MOVE.L      D7,D1
000023E4  6100 FD86               2661      BSR         PrintHex
000023E8                          2662  
000023E8  6000 EEFC               2663      BRA         opdec_return
000023EC                          2664  MATCH_CC_NE_32
000023EC                          2665      ** print opcode **
000023EC  43F8 11BB               2666      LEA         pr_BCC_NE,A1
000023F0  6100 FD8E               2667      BSR         PrintString
000023F4                          2668  
000023F4  6100 FDAA               2669      BSR         PrintSizeLONG
000023F8  43F8 1134               2670      LEA         pr_space,A1
000023FC  6100 FD82               2671      BSR         PrintString
00002400                          2672  
00002400                          2673      ** print address **
00002400  6100 FD58               2674      BSR         Get_BCC_Displacement_32bit
00002404  6100 FD5A               2675      BSR         Get_Current_Address
00002408  6100 FD5E               2676      BSR         Get_BCC_Destination_Address
0000240C  2207                    2677      MOVE.L      D7,D1
0000240E  6100 FD5C               2678      BSR         PrintHex
00002412                          2679  
00002412  6000 EED2               2680      BRA         opdec_return
00002416                          2681  *****
00002416                          2682  MATCH_CC_EQ_8
00002416                          2683      ** print opcode **
00002416  43F8 119B               2684      LEA         pr_BCC_EQ,A1
0000241A  6100 FD64               2685      BSR         PrintString
0000241E                          2686  
0000241E  6100 FD68               2687      BSR         PrintSizeBYTE
00002422  43F8 1134               2688      LEA         pr_space,A1
00002426  6100 FD58               2689      BSR         PrintString
0000242A                          2690  
0000242A                          2691      ** print address **
0000242A  6100 FD22               2692      BSR         Get_BCC_Displacement_8bit
0000242E  6100 FD30               2693      BSR         Get_Current_Address
00002432  6100 FD34               2694      BSR         Get_BCC_Destination_Address
00002436  2207                    2695      MOVE.L      D7,D1
00002438  6100 FD32               2696      BSR         PrintHex
0000243C                          2697  
0000243C  6000 EEA8               2698      BRA         opdec_return
00002440                          2699  MATCH_CC_EQ_16
00002440                          2700      ** print opcode **
00002440  43F8 119B               2701      LEA         pr_BCC_EQ,A1
00002444  6100 FD3A               2702      BSR         PrintString
00002448                          2703  
00002448  6100 FD4A               2704      BSR         PrintSizeWORD
0000244C  43F8 1134               2705      LEA         pr_space,A1
00002450  6100 FD2E               2706      BSR         PrintString
00002454                          2707  
00002454                          2708      ** print address **
00002454  6100 FCFE               2709      BSR         Get_BCC_Displacement_16bit
00002458  6100 FD06               2710      BSR         Get_Current_Address
0000245C  6100 FD0A               2711      BSR         Get_BCC_Destination_Address
00002460  2207                    2712      MOVE.L      D7,D1
00002462  6100 FD08               2713      BSR         PrintHex
00002466                          2714  
00002466  6000 EE7E               2715      BRA         opdec_return
0000246A                          2716  MATCH_CC_EQ_32
0000246A                          2717      ** print opcode **
0000246A  43F8 119B               2718      LEA         pr_BCC_EQ,A1
0000246E  6100 FD10               2719      BSR         PrintString
00002472                          2720  
00002472  6100 FD2C               2721      BSR         PrintSizeLONG
00002476  43F8 1134               2722      LEA         pr_space,A1
0000247A  6100 FD04               2723      BSR         PrintString
0000247E                          2724  
0000247E                          2725      ** print address **
0000247E  6100 FCDA               2726      BSR         Get_BCC_Displacement_32bit
00002482  6100 FCDC               2727      BSR         Get_Current_Address
00002486  6100 FCE0               2728      BSR         Get_BCC_Destination_Address
0000248A  2207                    2729      MOVE.L      D7,D1
0000248C  6100 FCDE               2730      BSR         PrintHex
00002490                          2731  
00002490  6000 EE54               2732      BRA         opdec_return
00002494                          2733  *****
00002494                          2734  MATCH_CC_VC_8
00002494                          2735      ** print opcode **
00002494  43F8 11C3               2736      LEA         pr_BCC_VC,A1
00002498  6100 FCE6               2737      BSR         PrintString
0000249C                          2738  
0000249C  6100 FCEA               2739      BSR         PrintSizeBYTE
000024A0  43F8 1134               2740      LEA         pr_space,A1
000024A4  6100 FCDA               2741      BSR         PrintString
000024A8                          2742  
000024A8                          2743      ** print address **
000024A8  6100 FCA4               2744      BSR         Get_BCC_Displacement_8bit
000024AC  6100 FCB2               2745      BSR         Get_Current_Address
000024B0  6100 FCB6               2746      BSR         Get_BCC_Destination_Address
000024B4  2207                    2747      MOVE.L      D7,D1
000024B6  6100 FCB4               2748      BSR         PrintHex
000024BA                          2749  
000024BA  6000 EE2A               2750      BRA         opdec_return
000024BE                          2751  MATCH_CC_VC_16
000024BE                          2752      ** print opcode **
000024BE  43F8 11C3               2753      LEA         pr_BCC_VC,A1
000024C2  6100 FCBC               2754      BSR         PrintString
000024C6                          2755  
000024C6  6100 FCCC               2756      BSR         PrintSizeWORD
000024CA  43F8 1134               2757      LEA         pr_space,A1
000024CE  6100 FCB0               2758      BSR         PrintString
000024D2                          2759  
000024D2                          2760      ** print address **
000024D2  6100 FC80               2761      BSR         Get_BCC_Displacement_16bit
000024D6  6100 FC88               2762      BSR         Get_Current_Address
000024DA  6100 FC8C               2763      BSR         Get_BCC_Destination_Address
000024DE  2207                    2764      MOVE.L      D7,D1
000024E0  6100 FC8A               2765      BSR         PrintHex
000024E4                          2766  
000024E4  6000 EE00               2767      BRA         opdec_return
000024E8                          2768  MATCH_CC_VC_32
000024E8                          2769      ** print opcode **
000024E8  43F8 11C3               2770      LEA         pr_BCC_VC,A1
000024EC  6100 FC92               2771      BSR         PrintString
000024F0                          2772  
000024F0  6100 FCAE               2773      BSR         PrintSizeLONG
000024F4  43F8 1134               2774      LEA         pr_space,A1
000024F8  6100 FC86               2775      BSR         PrintString
000024FC                          2776  
000024FC                          2777      ** print address **
000024FC  6100 FC5C               2778      BSR         Get_BCC_Displacement_32bit
00002500  6100 FC5E               2779      BSR         Get_Current_Address
00002504  6100 FC62               2780      BSR         Get_BCC_Destination_Address
00002508  2207                    2781      MOVE.L      D7,D1
0000250A  6100 FC60               2782      BSR         PrintHex
0000250E                          2783  
0000250E  6000 EDD6               2784      BRA         opdec_return
00002512                          2785  *****
00002512                          2786  MATCH_CC_VS_8
00002512                          2787      ** print opcode **
00002512  43F8 11C7               2788      LEA         pr_BCC_VS,A1
00002516  6100 FC68               2789      BSR         PrintString
0000251A                          2790  
0000251A  6100 FC6C               2791      BSR         PrintSizeBYTE
0000251E  43F8 1134               2792      LEA         pr_space,A1
00002522  6100 FC5C               2793      BSR         PrintString
00002526                          2794  
00002526                          2795      ** print address **
00002526  6100 FC26               2796      BSR         Get_BCC_Displacement_8bit
0000252A  6100 FC34               2797      BSR         Get_Current_Address
0000252E  6100 FC38               2798      BSR         Get_BCC_Destination_Address
00002532  2207                    2799      MOVE.L      D7,D1
00002534  6100 FC36               2800      BSR         PrintHex
00002538                          2801  
00002538  6000 EDAC               2802      BRA         opdec_return
0000253C                          2803  MATCH_CC_VS_16
0000253C                          2804      ** print opcode **
0000253C  43F8 11C7               2805      LEA         pr_BCC_VS,A1
00002540  6100 FC3E               2806      BSR         PrintString
00002544                          2807  
00002544  6100 FC4E               2808      BSR         PrintSizeWORD
00002548  43F8 1134               2809      LEA         pr_space,A1
0000254C  6100 FC32               2810      BSR         PrintString
00002550                          2811  
00002550                          2812      ** print address **
00002550  6100 FC02               2813      BSR         Get_BCC_Displacement_16bit
00002554  6100 FC0A               2814      BSR         Get_Current_Address
00002558  6100 FC0E               2815      BSR         Get_BCC_Destination_Address
0000255C  2207                    2816      MOVE.L      D7,D1
0000255E  6100 FC0C               2817      BSR         PrintHex
00002562                          2818  
00002562  6000 ED82               2819      BRA         opdec_return
00002566                          2820  MATCH_CC_VS_32
00002566                          2821      ** print opcode **
00002566  43F8 11C7               2822      LEA         pr_BCC_VS,A1
0000256A  6100 FC14               2823      BSR         PrintString
0000256E                          2824  
0000256E  6100 FC30               2825      BSR         PrintSizeLONG
00002572  43F8 1134               2826      LEA         pr_space,A1
00002576  6100 FC08               2827      BSR         PrintString
0000257A                          2828  
0000257A                          2829      ** print address **
0000257A  6100 FBDE               2830      BSR         Get_BCC_Displacement_32bit
0000257E  6100 FBE0               2831      BSR         Get_Current_Address
00002582  6100 FBE4               2832      BSR         Get_BCC_Destination_Address
00002586  2207                    2833      MOVE.L      D7,D1
00002588  6100 FBE2               2834      BSR         PrintHex
0000258C                          2835  
0000258C  6000 ED58               2836      BRA         opdec_return
00002590                          2837  *****
00002590                          2838  MATCH_CC_PL_8
00002590                          2839      ** print opcode **
00002590  43F8 11BF               2840      LEA         pr_BCC_PL,A1
00002594  6100 FBEA               2841      BSR         PrintString
00002598                          2842  
00002598  6100 FBEE               2843      BSR         PrintSizeBYTE
0000259C  43F8 1134               2844      LEA         pr_space,A1
000025A0  6100 FBDE               2845      BSR         PrintString
000025A4                          2846  
000025A4                          2847      ** print address **
000025A4  6100 FBA8               2848      BSR         Get_BCC_Displacement_8bit
000025A8  6100 FBB6               2849      BSR         Get_Current_Address
000025AC  6100 FBBA               2850      BSR         Get_BCC_Destination_Address
000025B0  2207                    2851      MOVE.L      D7,D1
000025B2  6100 FBB8               2852      BSR         PrintHex
000025B6                          2853  
000025B6  6000 ED2E               2854      BRA         opdec_return
000025BA                          2855  MATCH_CC_PL_16
000025BA                          2856      ** print opcode **
000025BA  43F8 11BF               2857      LEA         pr_BCC_PL,A1
000025BE  6100 FBC0               2858      BSR         PrintString
000025C2                          2859  
000025C2  6100 FBD0               2860      BSR         PrintSizeWORD
000025C6  43F8 1134               2861      LEA         pr_space,A1
000025CA  6100 FBB4               2862      BSR         PrintString
000025CE                          2863  
000025CE                          2864      ** print address **
000025CE  6100 FB84               2865      BSR         Get_BCC_Displacement_16bit
000025D2  6100 FB8C               2866      BSR         Get_Current_Address
000025D6  6100 FB90               2867      BSR         Get_BCC_Destination_Address
000025DA  2207                    2868      MOVE.L      D7,D1
000025DC  6100 FB8E               2869      BSR         PrintHex
000025E0                          2870  
000025E0  6000 ED04               2871      BRA         opdec_return
000025E4                          2872  MATCH_CC_PL_32
000025E4                          2873      ** print opcode **
000025E4  43F8 11BF               2874      LEA         pr_BCC_PL,A1
000025E8  6100 FB96               2875      BSR         PrintString
000025EC                          2876  
000025EC  6100 FBB2               2877      BSR         PrintSizeLONG
000025F0  43F8 1134               2878      LEA         pr_space,A1
000025F4  6100 FB8A               2879      BSR         PrintString
000025F8                          2880  
000025F8                          2881      ** print address **
000025F8  6100 FB60               2882      BSR         Get_BCC_Displacement_32bit
000025FC  6100 FB62               2883      BSR         Get_Current_Address
00002600  6100 FB66               2884      BSR         Get_BCC_Destination_Address
00002604  2207                    2885      MOVE.L      D7,D1
00002606  6100 FB64               2886      BSR         PrintHex
0000260A                          2887  
0000260A  6000 ECDA               2888      BRA         opdec_return
0000260E                          2889  *****
0000260E                          2890  MATCH_CC_MI_8
0000260E                          2891      ** print opcode **
0000260E  43F8 11B7               2892      LEA         pr_BCC_MI,A1
00002612  6100 FB6C               2893      BSR         PrintString
00002616                          2894  
00002616  6100 FB70               2895      BSR         PrintSizeBYTE
0000261A  43F8 1134               2896      LEA         pr_space,A1
0000261E  6100 FB60               2897      BSR         PrintString
00002622                          2898  
00002622                          2899      ** print address **
00002622  6100 FB2A               2900      BSR         Get_BCC_Displacement_8bit
00002626  6100 FB38               2901      BSR         Get_Current_Address
0000262A  6100 FB3C               2902      BSR         Get_BCC_Destination_Address
0000262E  2207                    2903      MOVE.L      D7,D1
00002630  6100 FB3A               2904      BSR         PrintHex
00002634                          2905  
00002634  6000 ECB0               2906      BRA         opdec_return
00002638                          2907  MATCH_CC_MI_16
00002638                          2908      ** print opcode **
00002638  43F8 11B7               2909      LEA         pr_BCC_MI,A1
0000263C  6100 FB42               2910      BSR         PrintString
00002640                          2911  
00002640  6100 FB52               2912      BSR         PrintSizeWORD
00002644  43F8 1134               2913      LEA         pr_space,A1
00002648  6100 FB36               2914      BSR         PrintString
0000264C                          2915  
0000264C                          2916      ** print address **
0000264C  6100 FB06               2917      BSR         Get_BCC_Displacement_16bit
00002650  6100 FB0E               2918      BSR         Get_Current_Address
00002654  6100 FB12               2919      BSR         Get_BCC_Destination_Address
00002658  2207                    2920      MOVE.L      D7,D1
0000265A  6100 FB10               2921      BSR         PrintHex
0000265E                          2922  
0000265E  6000 EC86               2923      BRA         opdec_return
00002662                          2924  MATCH_CC_MI_32
00002662                          2925      ** print opcode **
00002662  43F8 11B7               2926      LEA         pr_BCC_MI,A1
00002666  6100 FB18               2927      BSR         PrintString
0000266A                          2928  
0000266A  6100 FB34               2929      BSR         PrintSizeLONG
0000266E  43F8 1134               2930      LEA         pr_space,A1
00002672  6100 FB0C               2931      BSR         PrintString
00002676                          2932  
00002676                          2933      ** print address **
00002676  6100 FAE2               2934      BSR         Get_BCC_Displacement_32bit
0000267A  6100 FAE4               2935      BSR         Get_Current_Address
0000267E  6100 FAE8               2936      BSR         Get_BCC_Destination_Address
00002682  2207                    2937      MOVE.L      D7,D1
00002684  6100 FAE6               2938      BSR         PrintHex
00002688                          2939  
00002688  6000 EC5C               2940      BRA         opdec_return
0000268C                          2941  *****
0000268C                          2942  MATCH_CC_GE_8
0000268C                          2943      ** print opcode **
0000268C  43F8 119F               2944      LEA         pr_BCC_GE,A1
00002690  6100 FAEE               2945      BSR         PrintString
00002694                          2946  
00002694  6100 FAF2               2947      BSR         PrintSizeBYTE
00002698  43F8 1134               2948      LEA         pr_space,A1
0000269C  6100 FAE2               2949      BSR         PrintString
000026A0                          2950  
000026A0                          2951      ** print address **
000026A0  6100 FAAC               2952      BSR         Get_BCC_Displacement_8bit
000026A4  6100 FABA               2953      BSR         Get_Current_Address
000026A8  6100 FABE               2954      BSR         Get_BCC_Destination_Address
000026AC  2207                    2955      MOVE.L      D7,D1
000026AE  6100 FABC               2956      BSR         PrintHex
000026B2                          2957  
000026B2  6000 EC32               2958      BRA         opdec_return
000026B6                          2959  MATCH_CC_GE_16
000026B6                          2960      ** print opcode **
000026B6  43F8 119F               2961      LEA         pr_BCC_GE,A1
000026BA  6100 FAC4               2962      BSR         PrintString
000026BE                          2963  
000026BE  6100 FAD4               2964      BSR         PrintSizeWORD
000026C2  43F8 1134               2965      LEA         pr_space,A1
000026C6  6100 FAB8               2966      BSR         PrintString
000026CA                          2967  
000026CA                          2968      ** print address **
000026CA  6100 FA88               2969      BSR         Get_BCC_Displacement_16bit
000026CE  6100 FA90               2970      BSR         Get_Current_Address
000026D2  6100 FA94               2971      BSR         Get_BCC_Destination_Address
000026D6  2207                    2972      MOVE.L      D7,D1
000026D8  6100 FA92               2973      BSR         PrintHex
000026DC                          2974  
000026DC  6000 EC08               2975      BRA         opdec_return
000026E0                          2976  MATCH_CC_GE_32
000026E0                          2977      ** print opcode **
000026E0  43F8 119F               2978      LEA         pr_BCC_GE,A1
000026E4  6100 FA9A               2979      BSR         PrintString
000026E8                          2980  
000026E8  6100 FAB6               2981      BSR         PrintSizeLONG
000026EC  43F8 1134               2982      LEA         pr_space,A1
000026F0  6100 FA8E               2983      BSR         PrintString
000026F4                          2984  
000026F4                          2985      ** print address **
000026F4  6100 FA64               2986      BSR         Get_BCC_Displacement_32bit
000026F8  6100 FA66               2987      BSR         Get_Current_Address
000026FC  6100 FA6A               2988      BSR         Get_BCC_Destination_Address
00002700  2207                    2989      MOVE.L      D7,D1
00002702  6100 FA68               2990      BSR         PrintHex
00002706                          2991  
00002706  6000 EBDE               2992      BRA         opdec_return
0000270A                          2993  *****
0000270A                          2994  MATCH_CC_LT_8
0000270A                          2995      ** print opcode **
0000270A  43F8 11B3               2996      LEA         pr_BCC_LT,A1
0000270E  6100 FA70               2997      BSR         PrintString
00002712                          2998  
00002712  6100 FA74               2999      BSR         PrintSizeBYTE
00002716  43F8 1134               3000      LEA         pr_space,A1
0000271A  6100 FA64               3001      BSR         PrintString
0000271E                          3002  
0000271E                          3003      ** print address **
0000271E  6100 FA2E               3004      BSR         Get_BCC_Displacement_8bit
00002722  6100 FA3C               3005      BSR         Get_Current_Address
00002726  6100 FA40               3006      BSR         Get_BCC_Destination_Address
0000272A  2207                    3007      MOVE.L      D7,D1
0000272C  6100 FA3E               3008      BSR         PrintHex
00002730                          3009  
00002730  6000 EBB4               3010      BRA         opdec_return
00002734                          3011  MATCH_CC_LT_16
00002734                          3012      ** print opcode **
00002734  43F8 11B3               3013      LEA         pr_BCC_LT,A1
00002738  6100 FA46               3014      BSR         PrintString
0000273C                          3015  
0000273C  6100 FA56               3016      BSR         PrintSizeWORD
00002740  43F8 1134               3017      LEA         pr_space,A1
00002744  6100 FA3A               3018      BSR         PrintString
00002748                          3019  
00002748                          3020      ** print address **
00002748  6100 FA0A               3021      BSR         Get_BCC_Displacement_16bit
0000274C  6100 FA12               3022      BSR         Get_Current_Address
00002750  6100 FA16               3023      BSR         Get_BCC_Destination_Address
00002754  2207                    3024      MOVE.L      D7,D1
00002756  6100 FA14               3025      BSR         PrintHex
0000275A                          3026  
0000275A  6000 EB8A               3027      BRA         opdec_return
0000275E                          3028  MATCH_CC_LT_32
0000275E                          3029      ** print opcode **
0000275E  43F8 11B3               3030      LEA         pr_BCC_LT,A1
00002762  6100 FA1C               3031      BSR         PrintString
00002766                          3032  
00002766  6100 FA38               3033      BSR         PrintSizeLONG
0000276A  43F8 1134               3034      LEA         pr_space,A1
0000276E  6100 FA10               3035      BSR         PrintString
00002772                          3036  
00002772                          3037      ** print address **
00002772  6100 F9E6               3038      BSR         Get_BCC_Displacement_32bit
00002776  6100 F9E8               3039      BSR         Get_Current_Address
0000277A  6100 F9EC               3040      BSR         Get_BCC_Destination_Address
0000277E  2207                    3041      MOVE.L      D7,D1
00002780  6100 F9EA               3042      BSR         PrintHex
00002784                          3043  
00002784  6000 EB60               3044      BRA         opdec_return
00002788                          3045  *****
00002788                          3046  MATCH_CC_GT_8
00002788                          3047      ** print opcode **
00002788  43F8 11A3               3048      LEA         pr_BCC_GT,A1
0000278C  6100 F9F2               3049      BSR         PrintString
00002790                          3050  
00002790  6100 F9F6               3051      BSR         PrintSizeBYTE
00002794  43F8 1134               3052      LEA         pr_space,A1
00002798  6100 F9E6               3053      BSR         PrintString
0000279C                          3054  
0000279C                          3055      ** print address **
0000279C  6100 F9B0               3056      BSR         Get_BCC_Displacement_8bit
000027A0  6100 F9BE               3057      BSR         Get_Current_Address
000027A4  6100 F9C2               3058      BSR         Get_BCC_Destination_Address
000027A8  2207                    3059      MOVE.L      D7,D1
000027AA  6100 F9C0               3060      BSR         PrintHex
000027AE                          3061  
000027AE  6000 EB36               3062      BRA         opdec_return
000027B2                          3063  MATCH_CC_GT_16
000027B2                          3064      ** print opcode **
000027B2  43F8 11A3               3065      LEA         pr_BCC_GT,A1
000027B6  6100 F9C8               3066      BSR         PrintString
000027BA                          3067  
000027BA  6100 F9D8               3068      BSR         PrintSizeWORD
000027BE  43F8 1134               3069      LEA         pr_space,A1
000027C2  6100 F9BC               3070      BSR         PrintString
000027C6                          3071  
000027C6                          3072      ** print address **
000027C6  6100 F98C               3073      BSR         Get_BCC_Displacement_16bit
000027CA  6100 F994               3074      BSR         Get_Current_Address
000027CE  6100 F998               3075      BSR         Get_BCC_Destination_Address
000027D2  2207                    3076      MOVE.L      D7,D1
000027D4  6100 F996               3077      BSR         PrintHex
000027D8                          3078  
000027D8  6000 EB0C               3079      BRA         opdec_return
000027DC                          3080  MATCH_CC_GT_32
000027DC                          3081      ** print opcode **
000027DC  43F8 11A3               3082      LEA         pr_BCC_GT,A1
000027E0  6100 F99E               3083      BSR         PrintString
000027E4                          3084  
000027E4  6100 F9BA               3085      BSR         PrintSizeLONG
000027E8  43F8 1134               3086      LEA         pr_space,A1
000027EC  6100 F992               3087      BSR         PrintString
000027F0                          3088  
000027F0                          3089      ** print address **
000027F0  6100 F968               3090      BSR         Get_BCC_Displacement_32bit
000027F4  6100 F96A               3091      BSR         Get_Current_Address
000027F8  6100 F96E               3092      BSR         Get_BCC_Destination_Address
000027FC  2207                    3093      MOVE.L      D7,D1
000027FE  6100 F96C               3094      BSR         PrintHex
00002802                          3095  
00002802  6000 EAE2               3096      BRA         opdec_return
00002806                          3097  *****
00002806                          3098  MATCH_CC_LE_8
00002806                          3099      ** print opcode **
00002806  43F8 11AB               3100      LEA         pr_BCC_LE,A1
0000280A  6100 F974               3101      BSR         PrintString
0000280E                          3102  
0000280E  6100 F978               3103      BSR         PrintSizeBYTE
00002812  43F8 1134               3104      LEA         pr_space,A1
00002816  6100 F968               3105      BSR         PrintString
0000281A                          3106  
0000281A                          3107      ** print address **
0000281A  6100 F932               3108      BSR         Get_BCC_Displacement_8bit
0000281E  6100 F940               3109      BSR         Get_Current_Address
00002822  6100 F944               3110      BSR         Get_BCC_Destination_Address
00002826  2207                    3111      MOVE.L      D7,D1
00002828  6100 F942               3112      BSR         PrintHex
0000282C                          3113  
0000282C  6000 EAB8               3114      BRA         opdec_return
00002830                          3115  MATCH_CC_LE_16
00002830                          3116      ** print opcode **
00002830  43F8 11AB               3117      LEA         pr_BCC_LE,A1
00002834  6100 F94A               3118      BSR         PrintString
00002838                          3119  
00002838  6100 F95A               3120      BSR         PrintSizeWORD
0000283C  43F8 1134               3121      LEA         pr_space,A1
00002840  6100 F93E               3122      BSR         PrintString
00002844                          3123  
00002844                          3124      ** print address **
00002844  6100 F90E               3125      BSR         Get_BCC_Displacement_16bit
00002848  6100 F916               3126      BSR         Get_Current_Address
0000284C  6100 F91A               3127      BSR         Get_BCC_Destination_Address
00002850  2207                    3128      MOVE.L      D7,D1
00002852  6100 F918               3129      BSR         PrintHex
00002856                          3130  
00002856  6000 EA8E               3131      BRA         opdec_return
0000285A                          3132  MATCH_CC_LE_32
0000285A                          3133      ** print opcode **
0000285A  43F8 11AB               3134      LEA         pr_BCC_LE,A1
0000285E  6100 F920               3135      BSR         PrintString
00002862                          3136  
00002862  6100 F93C               3137      BSR         PrintSizeLONG
00002866  43F8 1134               3138      LEA         pr_space,A1
0000286A  6100 F914               3139      BSR         PrintString
0000286E                          3140  
0000286E                          3141      ** print address **
0000286E  6100 F8EA               3142      BSR         Get_BCC_Displacement_32bit
00002872  6100 F8EC               3143      BSR         Get_Current_Address
00002876  6100 F8F0               3144      BSR         Get_BCC_Destination_Address
0000287A  2207                    3145      MOVE.L      D7,D1
0000287C  6100 F8EE               3146      BSR         PrintHex
00002880                          3147  
00002880  6000 EA64               3148      BRA         opdec_return
00002884                          3149  
00002884                          3150  
00002884                          3151  
00002884                          3152  
00002884                          3153  
00002884                          3154  ***********************************************************************************
00002884                          3155  ***********************************************************************************
00002884                          3156  ***********************************************************************************
00002884                          3157  
00002884                          3158  
00002884                          3159  
00002884                          3160  *************************************
00002884                          3161  **          INCOMPLETE             **
00002884                          3162  *************************************
00002884                          3163  
00002884                          3164  ***********************************
00002884                          3165  MATCH_MOVEM_TO_MEM_W
00002884  3A02                    3166      MOVE.W      D2,D5       *REMOVE
00002886                          3167  MATCH_MOVEM_TO_MEM_L
00002886  3A02                    3168      MOVE.W      D2,D5       *REMOVE
00002888                          3169  MATCH_MOVEM_TO_REG_W
00002888  3A02                    3170      MOVE.W      D2,D5       *REMOVE
0000288A                          3171  MATCH_MOVEM_TO_REG_L
0000288A  3A02                    3172      MOVE.W      D2,D5       *REMOVE
0000288C                          3173  ***********************************
0000288C                          3174  
0000288C                          3175  
0000288C                          3176  MATCH_DIVU
0000288C  3A02                    3177      MOVE.W      D2,D5       *REMOVE
0000288E                          3178  MATCH_OR_DN_B
0000288E  3A02                    3179      MOVE.W      D2,D5       *REMOVE
00002890                          3180  MATCH_OR_DN_W
00002890  3A02                    3181      MOVE.W      D2,D5       *REMOVE
00002892                          3182  MATCH_OR_DN_L
00002892  3A02                    3183      MOVE.W      D2,D5       *REMOVE
00002894                          3184  MATCH_OR_EA_B
00002894  3A02                    3185      MOVE.W      D2,D5       *REMOVE
00002896                          3186  MATCH_OR_EA_W
00002896  3A02                    3187      MOVE.W      D2,D5       *REMOVE
00002898                          3188  MATCH_OR_EA_L
00002898  3A02                    3189      MOVE.W      D2,D5       *REMOVE
0000289A                          3190  
0000289A                          3191  MATCH_LEA
0000289A  3A02                    3192      MOVE.W      D2,D5       *REMOVE
0000289C                          3193  
0000289C                          3194  MATCH_MULS_L
0000289C  3A02                    3195      MOVE.W      D2,D5       *REMOVE
0000289E                          3196  
0000289E                          3197  
0000289E                          3198  
0000289E                          3199  
0000289E                          3200  ***********************************************************************************
0000289E                          3201  ***********************************************************************************
0000289E                          3202  ***********************************************************************************
0000289E                          3203  
0000289E                          3204  
0000289E                          3205  
0000289E                          3206  
0000289E                          3207  **********************************
0000289E                          3208  ERROR
0000289E  43F8 11DA               3209      LEA         pr_ERROR,A1
000028A2  6100 F8DC               3210      BSR         PrintString
000028A6  6000 EA3E               3211      BRA         opdec_return
000028AA                          3212  
000028AA                          3213          END     start

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
A2H                 1223
ABS_LONG            39
ABS_WORD            38
ADDA_L              7
ADDA_W              3
ADDBYTELOOP         1248
ADDBYTES            1240
ADDI_B              18
ADDI_L              1A
ADDI_RETURN         12E2
ADDI_W              19
ADDQ                5
ADDQ_B              0
ADDQ_L              2
ADDQ_W              1
ADD_ADDA            D
ADD_TO_EA_B         4
ADD_TO_EA_L         6
ADD_TO_EA_W         5
ADD_TO_REG_B        0
ADD_TO_REG_L        2
ADD_TO_REG_W        1
AN                  8
AS                  0
ASL                 383
ASR                 387
BCC                 6
BCC_16              0
BCC_32              FF
CC_CC               4
CC_CS               5
CC_EQ               7
CC_F                1
CC_GE               C
CC_GT               E
CC_HI               2
CC_LE               F
CC_LS               3
CC_LT               D
CC_MI               B
CC_NE               6
CC_PL               A
CC_T                0
CC_VC               8
CC_VS               9
CHECK_ADDI          17DE
CHECK_ADDQ          17BC
CHECK_ADD_ADDA      1766
CHECK_BCC           1412
CHECK_BCC_16        14D2
CHECK_BCC_32        157A
CHECK_BCC_8         142A
CHECK_CMP           1622
CHECK_DIVU_OR       16E8
CHECK_FOUR_BIT_SIG  1388
CHECK_MOVEA_L_AND_MOVE_L  1856
CHECK_MOVEA_W_AND_MOVE_W  1844
CHECK_MOVEM         1736
CHECK_MULS_LEA_CLR_JSR_RTS  1648
CHECK_MULS_W_AND    169A
CHECK_NOP           137A
CHECK_SHIFT         1FC6
CHECK_SHIFT_AND_ROTATE  1338
CHECK_SUB           1804
CLR_B               108
CLR_L               10A
CLR_W               109
CMP                 B
CMP_B               0
CMP_L               2
CMP_W               1
CONV_END            1250
DEC_ABS_LONG        10C8
DEC_ABS_WORD        10BC
DEC_AN              10E0
DEC_DN              10D4
DEC_IMMEDIATE       10A0
DEC_INDIRECT        10EC
DEC_POST_INC        1100
DEC_PRE_DEC         111A
DEC_RETURN          1082
DIVU                3
DIVU_OR             8
DN                  0
DN_B                0
DN_L                2
DN_W                1
DONE                12C8
EADECODER           1018
EADECODER_LEFT      1000
EA_B                4
EA_L                6
EA_W                5
ERROR               289E
ERROR_MSG           1205
EXECUTEPRINTSHIFTDIRECTION  205E
EXECUTEPRINTSHIFTSIZE  2098
EXECUTESHIFTOPCODEPRINT  2036
FOUR_BIT_RETURN     12DA
GETSHIFTDESTREG     1FEC
GET_BCC_DESTINATION_ADDRESS  2168
GET_BCC_DISPLACEMENT_16BIT  2154
GET_BCC_DISPLACEMENT_32BIT  215A
GET_BCC_DISPLACEMENT_8BIT  214E
GET_COUNT_REGISTER_VAL  20D6
GET_CURRENT_ADDRESS  2160
GET_DIRECTION       20FE
GET_IS_REGISTER_OR_IMMEDIATE  2112
GET_SHIFT_OPCODE    212A
GET_SIZE            20EA
IMMEDIATE           3C
IMM_SKIP            109A
IMM_WORD            10B8
INDIRECT            10
INPUT_ERROR         12C0
ISOLATE_CC_CODE_FOR_BCC  130C
ISOLATE_OP_CODE     1320
JSR                 13A
L                   1
LEA                 7
LEFT_SKIP           101C
LOOP_START          129A
LS                  1
LSL                 38F
LSR                 38B
MATCH_ADDA_L        1C74
MATCH_ADDA_W        1C36
MATCH_ADDI_B        1916
MATCH_ADDI_L        1946
MATCH_ADDI_W        192E
MATCH_ADDQ_B        1AF8
MATCH_ADDQ_L        1B28
MATCH_ADDQ_W        1B10
MATCH_ADD_TO_EA_B   1A3E
MATCH_ADD_TO_EA_L   1A6E
MATCH_ADD_TO_EA_W   1A56
MATCH_ADD_TO_REG_B  1984
MATCH_ADD_TO_REG_L  19B4
MATCH_ADD_TO_REG_W  199C
MATCH_AND_DN_B      1E52
MATCH_AND_DN_L      1ECE
MATCH_AND_DN_W      1E90
MATCH_AND_EA_B      1F0C
MATCH_AND_EA_L      1F88
MATCH_AND_EA_W      1F4A
MATCH_ASL           2148
MATCH_ASR           2146
MATCH_CC_CC_16      22C6
MATCH_CC_CC_32      22F0
MATCH_CC_CC_8       229C
MATCH_CC_CS_16      2344
MATCH_CC_CS_32      236E
MATCH_CC_CS_8       231A
MATCH_CC_EQ_16      2440
MATCH_CC_EQ_32      246A
MATCH_CC_EQ_8       2416
MATCH_CC_F_16       21B4
MATCH_CC_F_32       21B6
MATCH_CC_F_8        21B2
MATCH_CC_GE_16      26B6
MATCH_CC_GE_32      26E0
MATCH_CC_GE_8       268C
MATCH_CC_GT_16      27B2
MATCH_CC_GT_32      27DC
MATCH_CC_GT_8       2788
MATCH_CC_HI_16      21D4
MATCH_CC_HI_32      21F8
MATCH_CC_HI_8       21B8
MATCH_CC_LE_16      2830
MATCH_CC_LE_32      285A
MATCH_CC_LE_8       2806
MATCH_CC_LS_16      2248
MATCH_CC_LS_32      2272
MATCH_CC_LS_8       221E
MATCH_CC_LT_16      2734
MATCH_CC_LT_32      275E
MATCH_CC_LT_8       270A
MATCH_CC_MI_16      2638
MATCH_CC_MI_32      2662
MATCH_CC_MI_8       260E
MATCH_CC_NE_16      23C2
MATCH_CC_NE_32      23EC
MATCH_CC_NE_8       2398
MATCH_CC_PL_16      25BA
MATCH_CC_PL_32      25E4
MATCH_CC_PL_8       2590
MATCH_CC_T_16       21AE
MATCH_CC_T_32       21B0
MATCH_CC_T_8        21AC
MATCH_CC_VC_16      24BE
MATCH_CC_VC_32      24E8
MATCH_CC_VC_8       2494
MATCH_CC_VS_16      253C
MATCH_CC_VS_32      2566
MATCH_CC_VS_8       2512
MATCH_CLR_B         1DDA
MATCH_CLR_L         1E2A
MATCH_CLR_W         1E02
MATCH_CMP_B         1CFE
MATCH_CMP_L         1D7C
MATCH_CMP_W         1D3C
MATCH_DIVU          288C
MATCH_DIVU_W        1B7C
MATCH_JSR           1DBC
MATCH_LEA           289A
MATCH_LSL           2142
MATCH_LSR           2144
MATCH_MOVEA_L       1BF8
MATCH_MOVEA_W       1BBA
MATCH_MOVEM_TO_MEM_L  2886
MATCH_MOVEM_TO_MEM_W  2884
MATCH_MOVEM_TO_REG_L  288A
MATCH_MOVEM_TO_REG_W  2888
MATCH_MOVEQ         18E8
MATCH_MOVE_B        1876
MATCH_MOVE_L        18A6
MATCH_MOVE_W        188E
MATCH_MULS_L        289C
MATCH_MULS_W        1CB2
MATCH_NOP           1868
MATCH_OR_DN_B       288E
MATCH_OR_DN_L       2892
MATCH_OR_DN_W       2890
MATCH_OR_EA_B       2894
MATCH_OR_EA_L       2898
MATCH_OR_EA_W       2896
MATCH_ROL           214A
MATCH_ROR           214C
MATCH_RTS           1CF0
MATCH_SUB_TO_DN_B   19CC
MATCH_SUB_TO_DN_L   19FC
MATCH_SUB_TO_DN_W   19E4
MATCH_SUB_TO_EA_B   1A86
MATCH_SUB_TO_EA_L   1AB6
MATCH_SUB_TO_EA_W   1A9E
MESSAGE             11E0
MOVEA_WL            1
MOVEM_RETURN        12DE
MOVEM_TO_MEM_L      123
MOVEM_TO_MEM_W      122
MOVEM_TO_REG_L      133
MOVEM_TO_REG_W      132
MOVEQ_              7
MOVE_B              1
MOVE_L              2
MOVE_W              3
MULS_L              130
MULS_LEA_CLR_JSR_RTS  4
MULS_OP_W           7
MULS_W_AND          C
NOP                 4E71
NOP_RETURN          12D6
NUMSUB              1256
NUMSUBRTN           1232
OPDECODER           12CC
OPDEC_RETURN        12E6
OUTPUT              10000
POST_INC            18
PRE_DEC             20
PRINTARITHSHIFT     2022
PRINTHEX            216C
PRINTLOGICSHIFT     202C
PRINTROTATE         2018
PRINTSHIFT          20BC
PRINTSHIFTBYTE      207A
PRINTSHIFTDATA      2000
PRINTSHIFTLEFT      2054
PRINTSHIFTLONG      208E
PRINTSHIFTREG       20B4
PRINTSHIFTRIGHT     204A
PRINTSHIFTWORD      2084
PRINTSIZEBYTE       2188
PRINTSIZELONG       21A0
PRINTSIZEWORD       2194
PRINTSTRING         2180
PRINT_ADDI          195E
PRINT_ADDQ          1B40
PRINT_ADD_TO_EA     1ACE
PRINT_ADD_TO_REG    1A14
PRINT_MOVE          18BE
PROGRAM_START       1272
PR_ADD              1163
PR_ADDA             115E
PR_ADDI             1167
PR_ADDQ             116C
PR_AND              118F
PR_BCC_CC           1193
PR_BCC_CS           1197
PR_BCC_EQ           119B
PR_BCC_GE           119F
PR_BCC_GT           11A3
PR_BCC_HI           11A7
PR_BCC_LE           11AB
PR_BCC_LS           11AF
PR_BCC_LT           11B3
PR_BCC_MI           11B7
PR_BCC_NE           11BB
PR_BCC_PL           11BF
PR_BCC_VC           11C3
PR_BCC_VS           11C7
PR_BYTE             1138
PR_CLR              117F
PR_CMP              1187
PR_COMMA            1136
PR_DIVU             117A
PR_ERROR            11DA
PR_HASH             1141
PR_JSR              118B
PR_LONG             113E
PR_MOVE             1147
PR_MOVEA            114C
PR_MOVEM            1152
PR_MOVEQ            1158
PR_MULS             1175
PR_NOP              1143
PR_REG              11D8
PR_RTS              1183
PR_SHIFT_AS         11CE
PR_SHIFT_L          11D4
PR_SHIFT_LS         11D1
PR_SHIFT_R          11D6
PR_SHIFT_RO         11CB
PR_SPACE            1134
PR_SUB              1171
PR_WORD             113B
R                   0
READFIRSTFOURBITS   12EC
READFIRSTTENBITS    12FE
RO                  3
ROL                 39F
ROR                 39B
RTS                 4E75
SHIFT               E
SHIFT_BYTE          0
SHIFT_IMMED         0
SHIFT_LONG          3
SHIFT_REGISTER      1
SHIFT_WORD          1
SPACER              1221
START               1000
SUB                 9
SUB_TO_DN_B         0
SUB_TO_DN_L         2
SUB_TO_DN_W         1
SUB_TO_EA_B         4
SUB_TO_EA_L         6
SUB_TO_EA_W         5
UPSEND              126A
UPSUB               1260
UPSUBRTN            123A

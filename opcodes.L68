00001000 Starting Address
Assembler used: EASy68K Editor/Assembler v5.15.04
Created On: 3/9/2017 1:00:38 PM

00000000                             1  *-----------------------------------------------------------
00000000                             2  * Title      : OpDecoder
00000000                             3  * Written by : Spencer Milner, Connor McGwire
00000000                             4  * Date       : 
00000000                             5  * Description: 
00000000                             6  *-----------------------------------------------------------
00000000                             7                  INCLUDE 'EADecoder.x68'
00000000                             8  
00000000                             9  
00000000  =00010000                 10  output      EQU $00010000
00000000                            11  
00000000  =0000003C                 12  IMMEDIATE   EQU %00111100
00000000  =00000038                 13  ABS_WORD    EQU %00111000
00000000  =00000039                 14  ABS_LONG    EQU %00111001
00000000  =00000000                 15  Dn          EQU %00000000
00000000  =00000008                 16  An          EQU %00001000
00000000  =00000010                 17  INDIRECT    EQU %00010000
00000000  =00000018                 18  POST_INC    EQU %00011000
00000000  =00000020                 19  PRE_DEC     EQU %00100000
00000000                            20  
00000000                            21  
00000000                            22  
00000000                            23  EADecoder_left
00000000  48E7 FF7E                 24          MOVEM.L     D0-D7/A1-A6, -(SP)
00000004                            25          
00000004                            26          ** Swap the mode and register bits
00000004  1800                      27          MOVE.B  D0,D4
00000006  0200 0007                 28          ANDI.B  #%00000111,D0       * Mask mode
0000000A  0204 0038                 29          ANDI.B  #%00111000,D4       * Mask register
0000000E  E708                      30          LSL.B   #3,D0               * Move mode bits over
00000010  E60C                      31          LSR.B   #3,D4               * Move register bits over
00000012  8004                      32          OR.B    D4,D0               * Recombine
00000014                            33          
00000014  6000 0006                 34          BRA     left_skip
00000018                            35  
00000018                            36  EADecoder
00000018  48E7 FF7E                 37          MOVEM.L     D0-D7/A1-A6, -(SP) *Store registers on stack, except D0
0000001C                            38  left_skip   
0000001C  4242                      39          CLR     D2    
0000001E  4243                      40          CLR     D3 
00000020  1401                      41          MOVE.B  D1,D2 ** Store opcode size in bytes into D2
00000022                            42          
00000022  43F9 00010000             43          LEA     output,A1
00000028  45F9 00010000             44          LEA     output,A2
0000002E                            45          
0000002E                            46          *First, decoder will check for the 3 types with hard coded register values
0000002E  163C 0001                 47          MOVE.B  #1,D3
00000032  B07C 003C                 48          CMP     #IMMEDIATE,D0
00000036  6700 0068                 49          BEQ     dec_immediate
0000003A                            50          
0000003A  B07C 0038                 51          CMP     #ABS_WORD,D0
0000003E  6700 007C                 52          BEQ     dec_abs_word
00000042                            53          
00000042  B07C 0039                 54          CMP     #ABS_LONG,D0
00000046  6700 0080                 55          BEQ     dec_abs_long
0000004A                            56          
0000004A                            57          *If it was none of the above, store the register and mode seperately
0000004A  4243                      58          CLR     D3
0000004C  1200                      59          MOVE.B  D0,D1
0000004E  0201 0038                 60          ANDI.B  #%00111000,D1           *Get mode value
00000052  0200 0007                 61          ANDI.B  #%00000111,D0           *Get register value
00000056  0600 0030                 62          ADDI.B  #$30,D0
0000005A                            63                
0000005A  B27C 0000                 64          CMP     #Dn,D1
0000005E  6700 0074                 65          BEQ     dec_Dn 
00000062                            66          
00000062  B27C 0008                 67          CMP     #An,D1
00000066  6700 0078                 68          BEQ     dec_An
0000006A                            69                  
0000006A  B27C 0010                 70          CMP     #INDIRECT,D1
0000006E  6700 007C                 71          BEQ     dec_indirect
00000072                            72                  
00000072  B27C 0018                 73          CMP     #POST_INC,D1
00000076  6700 0088                 74          BEQ     dec_post_inc
0000007A                            75                  
0000007A  B27C 0020                 76          CMP     #PRE_DEC,D1
0000007E  6700 009A                 77          BEQ     dec_pre_dec
00000082                            78  
00000082                            79  dec_return ** Common return for all types
00000082                            80          
00000082                            81          ** Print display string
00000082  103C 000E                 82          MOVE.B  #14,D0
00000086  4E4F                      83          TRAP    #15
00000088                            84          
00000088                            85          ** If there is immediate data to print, print it
00000088  B67C 0001                 86          CMP     #1,D3
0000008C  6600 000C                 87          BNE     imm_skip
00000090                            88          
00000090  103C 000F                 89          MOVE.B  #15,D0
00000094  143C 0010                 90          MOVE.B  #16,D2
00000098  4E4F                      91          TRAP    #15
0000009A                            92  
0000009A                            93  imm_skip
0000009A  4CDF 7EFF                 94          MOVEM.L     (SP)+, D0-D7/A1-A6 *Return register data from stack, except D0
0000009E  4E75                      95          RTS
000000A0                            96          
000000A0                            97          * Individual EA decoders *
000000A0                            98  
000000A0                            99  dec_immediate   *DECODE IMMEDIATE VALUE*
000000A0  14FC 0023                100          MOVE.B  #'#',(A2)+  * Move '#' char into string
000000A4  14FC 0024                101          MOVE.B  #'$',(A2)+  * Move '$' char into string
000000A8  14FC 0000                102          MOVE.B  #$0,(A2)+   * Null terminate string
000000AC  B47C 0002                103          CMP     #2,D2       * Check if data is word length
000000B0  6700 0006                104          BEQ     imm_word    
000000B4                           105          
000000B4  2218                     106          MOVE.L  (A0)+,D1    * Length was long
000000B6  60CA                     107          BRA     dec_return
000000B8                           108          
000000B8                           109  imm_word
000000B8  3218                     110          MOVE.W  (A0)+,D1    * Length was word
000000BA  60C6                     111          BRA     dec_return
000000BC                           112  
000000BC                           113  
000000BC                           114  dec_abs_word    *DECODE ABSOLUTE WORD*
000000BC  14FC 0024                115          MOVE.B  #'$',(A2)+  * Move '$' char into string
000000C0  14FC 0000                116          MOVE.B  #$0,(A2)+   * Null terminate string
000000C4  3218                     117          MOVE.W  (A0)+,D1
000000C6  60BA                     118          BRA     dec_return
000000C8                           119          
000000C8                           120  
000000C8                           121  dec_abs_long    *DECODE ABSOLUTE LONG*
000000C8  14FC 0024                122          MOVE.B  #'$',(A2)+  * Move '$' char into string
000000CC  14FC 0000                123          MOVE.B  #$0,(A2)+   * Null terminate string
000000D0  2218                     124          MOVE.L  (A0)+,D1
000000D2  60AE                     125          BRA     dec_return
000000D4                           126          
000000D4                           127  
000000D4                           128  dec_Dn          *DECODE DIRECT DATA*
000000D4  14FC 0044                129          MOVE.B  #'D',(A2)+
000000D8  14C0                     130          MOVE.B  D0,(A2)+
000000DA  14FC 0000                131          MOVE.B  #$0,(A2)+
000000DE  60A2                     132          BRA     dec_return
000000E0                           133  
000000E0                           134          
000000E0                           135  dec_An          *DECODE DIRECT ADDRESS*
000000E0  14FC 0041                136          MOVE.B  #'A',(A2)+
000000E4  14C0                     137          MOVE.B  D0,(A2)+
000000E6  14FC 0000                138          MOVE.B  #$0,(A2)+
000000EA  6096                     139          BRA     dec_return
000000EC                           140  
000000EC                           141  
000000EC                           142  dec_indirect    *DECODE INDIRECT ACCESS*
000000EC  14FC 0028                143          MOVE.B  #'(',(A2)+
000000F0  14FC 0041                144          MOVE.B  #'A',(A2)+
000000F4  14C0                     145          MOVE.B  D0,(A2)+
000000F6  14FC 0029                146          MOVE.B  #')',(A2)+
000000FA  14FC 0000                147          MOVE.B  #$0,(A2)+
000000FE  6082                     148          BRA     dec_return
00000100                           149          
00000100                           150  
00000100                           151  dec_post_inc    *DECODE INDIRECT POST INCREMENT*
00000100  14FC 0028                152          MOVE.B  #'(',(A2)+
00000104  14FC 0041                153          MOVE.B  #'A',(A2)+
00000108  14C0                     154          MOVE.B  D0,(A2)+
0000010A  14FC 0029                155          MOVE.B  #')',(A2)+
0000010E  14FC 002B                156          MOVE.B  #'+',(A2)+
00000112  14FC 0000                157          MOVE.B  #$0,(A2)+
00000116  6000 FF6A                158          BRA     dec_return
0000011A                           159          
0000011A                           160          
0000011A                           161  dec_pre_dec    *DECODE INDIRECT PRE DECREMENT*
0000011A  14FC 002D                162          MOVE.B  #'-',(A2)+
0000011E  14FC 0028                163          MOVE.B  #'(',(A2)+
00000122  14FC 0041                164          MOVE.B  #'A',(A2)+
00000126  14C0                     165          MOVE.B  D0,(A2)+
00000128  14FC 0029                166          MOVE.B  #')',(A2)+
0000012C  14FC 0000                167          MOVE.B  #$0,(A2)+
00000130  6000 FF50                168          BRA     dec_return
00000134                           169  
00000134                           170  
00000134                           171  
00000134                           172  
00000134                           173  
00000134                           174  
00000134                           175  
00000134                           176  
00000134                           177  
00000134                           178  -------------------- end include --------------------
00000134                           179                  INCLUDE 'connor_opcodes.x68'
00000134= 4D 4F 56 45 51 00        180  pr_MOVEQ        DC.B    'MOVEQ',0
0000013A= 41 44 44 00              181  pr_ADD          DC.B    'ADD',0
0000013E= 41 44 44 49 00           182  pr_ADDI         DC.B    'ADDI',0
00000143= 41 44 44 51 00           183  pr_ADDQ         DC.B    'ADDQ',0
00000148                           184  
00000148                           185  
00000148                           186  
00000148                           187  MATCH_NOP
00000148  43F9 00001177            188      LEA         pr_NOP,A1
0000014E  103C 000E                189      MOVE.B      #14,D0
00000152  4E4F                     190      TRAP        #15
00000154  6000 106E                191      BRA         opdec_return
00000158                           192  
00000158                           193      
00000158                           194  MATCH_MOVE_B
00000158                           195      ** Move command size into D1
00000158  123C 0002                196      MOVE.B      #2,D1
0000015C                           197      ** Print command
0000015C  103C 000E                198      MOVE.B      #14,D0
00000160  43F9 0000117B            199      LEA         pr_MOVE,A1
00000166  4E4F                     200      TRAP        #15
00000168                           201      ** Print size
00000168  43F9 0000116E            202      LEA         pr_BYTE,A1
0000016E  4E4F                     203      TRAP        #15
00000170                           204      
00000170  6000 003A                205      BRA         print_move
00000174                           206      
00000174                           207  MATCH_MOVE_W
00000174                           208      ** Move command size into D1
00000174  123C 0002                209      MOVE.B      #2,D1
00000178                           210      ** Print command
00000178  103C 000E                211      MOVE.B      #14,D0
0000017C  43F9 0000117B            212      LEA         pr_MOVE,A1
00000182  4E4F                     213      TRAP        #15
00000184                           214      ** Print size
00000184  43F9 00001171            215      LEA         pr_WORD,A1
0000018A  4E4F                     216      TRAP        #15
0000018C                           217      
0000018C  6000 001E                218      BRA         print_move
00000190                           219      
00000190                           220  MATCH_MOVE_L
00000190                           221      ** Move command size into D1
00000190  123C 0004                222      MOVE.B      #4,D1
00000194                           223      ** Print command
00000194  103C 000E                224      MOVE.B      #14,D0
00000198  43F9 0000117B            225      LEA         pr_MOVE,A1
0000019E  4E4F                     226      TRAP        #15
000001A0                           227      ** Print size
000001A0  43F9 00001174            228      LEA         pr_LONG,A1
000001A6  4E4F                     229      TRAP        #15
000001A8                           230      
000001A8  6000 0002                231      BRA         print_move
000001AC                           232  
000001AC                           233  print_move
000001AC                           234      ** Print space
000001AC  43F9 0000116A            235      LEA         pr_space,A1
000001B2  4E4F                     236      TRAP        #15
000001B4                           237      ** Decode right side ea
000001B4  1002                     238      MOVE.B      D2,D0
000001B6  0200 003F                239      ANDI.B      #%00111111,D0
000001BA  4EB8 0018                240      JSR         EADecoder
000001BE                           241      ** Add comma
000001BE  103C 000E                242      MOVE.B      #14,D0
000001C2  43F9 0000116C            243      LEA         pr_comma,A1
000001C8  4E4F                     244      TRAP        #15
000001CA                           245      ** Decode left side ea
000001CA  3002                     246      MOVE.W      D2,D0
000001CC  0240 0FC0                247      ANDI.W      #%0000111111000000,D0
000001D0  EC48                     248      LSR.W       #6,D0
000001D2  4EB8 0000                249      JSR         EADecoder_left
000001D6                           250      
000001D6  6000 0FEC                251      BRA         opdec_return
000001DA                           252      
000001DA                           253  
000001DA                           254  MATCH_MOVEQ
000001DA                           255      ** Print command
000001DA  103C 000E                256      MOVE.B      #14,D0
000001DE  43F8 0134                257      LEA         pr_MOVEQ,A1
000001E2  4E4F                     258      TRAP        #15
000001E4                           259      ** Print space
000001E4  43F9 0000116A            260      LEA         pr_space,A1
000001EA  4E4F                     261      TRAP        #15
000001EC                           262      ** Print data
000001EC  1202                     263      MOVE.B      D2,D1
000001EE  103C 000F                264      MOVE.B      #15,D0
000001F2  2602                     265      MOVE.L      D2,D3
000001F4  7410                     266      MOVE.L      #16,D2
000001F6  4E4F                     267      TRAP        #15
000001F8  2403                     268      MOVE.L      D3,D2
000001FA                           269      ** Decode register
000001FA  3002                     270      MOVE.W      D2,D0
000001FC  0240 0E00                271      ANDI.W      #%0000111000000000,D0
00000200  EC48                     272      LSR.W       #6,D0
00000202  4EB8 0000                273      JSR         EADecoder_left
00000206                           274      
00000206                           275  
00000206                           276  MATCH_ADDI_B
00000206                           277      ** Move command size into D1
00000206  123C 0002                278      MOVE.B      #2,D1
0000020A                           279      ** Print command
0000020A  103C 000E                280      MOVE.B      #14,D0
0000020E  43F8 013E                281      LEA         pr_ADDI,A1
00000212  4E4F                     282      TRAP        #15
00000214                           283      ** Print size
00000214  43F9 0000116E            284      LEA         pr_BYTE,A1
0000021A  4E4F                     285      TRAP        #15
0000021C                           286      
0000021C  6000 0036                287      BRA         print_addi
00000220                           288      
00000220                           289  MATCH_ADDI_W
00000220                           290      ** Move command size into D1
00000220  123C 0002                291      MOVE.B      #2,D1
00000224                           292      ** Print command
00000224  103C 000E                293      MOVE.B      #14,D0
00000228  43F8 013E                294      LEA         pr_ADDI,A1
0000022C  4E4F                     295      TRAP        #15
0000022E                           296      ** Print size
0000022E  43F9 00001171            297      LEA         pr_WORD,A1
00000234  4E4F                     298      TRAP        #15
00000236                           299      
00000236  6000 001C                300      BRA         print_addi
0000023A                           301      
0000023A                           302  MATCH_ADDI_L
0000023A                           303      ** Move command size into D1
0000023A  123C 0004                304      MOVE.B      #4,D1
0000023E                           305      ** Print command
0000023E  103C 000E                306      MOVE.B      #14,D0
00000242  43F8 013E                307      LEA         pr_ADDI,A1
00000246  4E4F                     308      TRAP        #15
00000248                           309      ** Print size
00000248  43F9 00001174            310      LEA         pr_LONG,A1
0000024E  4E4F                     311      TRAP        #15
00000250                           312      
00000250  6000 0002                313      BRA         print_addi
00000254                           314      
00000254                           315  print_addi
00000254                           316      ** Print space
00000254  43F9 0000116A            317      LEA         pr_space,A1
0000025A  4E4F                     318      TRAP        #15
0000025C                           319      ** Print Immediate data
0000025C  103C 003C                320      MOVE.B      #%00111100,D0
00000260  4EB8 0018                321      JSR         EADecoder
00000264                           322      ** Add comma
00000264  103C 000E                323      MOVE.B      #14,D0
00000268  43F9 0000116C            324      LEA         pr_comma,A1
0000026E  4E4F                     325      TRAP        #15
00000270                           326      ** Decode right side ea
00000270  1002                     327      MOVE.B      D2,D0
00000272  0200 003F                328      ANDI.B      #%00111111,D0
00000276  4EB8 0018                329      JSR         EADecoder
0000027A                           330      
0000027A  6000 0F48                331      BRA         opdec_return
0000027E                           332      
0000027E                           333      
0000027E                           334  MATCH_ADD_TO_REG_B
0000027E                           335      ** Move command size into D1
0000027E  123C 0002                336      MOVE.B      #2,D1
00000282                           337      ** Print command
00000282  103C 000E                338      MOVE.B      #14,D0
00000286  43F8 013A                339      LEA         pr_ADD,A1
0000028A  4E4F                     340      TRAP        #15
0000028C                           341      ** Print size
0000028C  43F9 0000116E            342      LEA         pr_BYTE,A1
00000292  4E4F                     343      TRAP        #15
00000294                           344      ** Print space
00000294  43F9 0000116A            345      LEA         pr_space,A1
0000029A  4E4F                     346      TRAP        #15
0000029C                           347      ** Print source
0000029C  1002                     348      MOVE.B      D2,D0
0000029E  0200 003F                349      ANDI.B      #%00111111,D0
000002A2  4EB8 0018                350      JSR         EADecoder
000002A6                           351      ** Add comma
000002A6  103C 000E                352      MOVE.B      #14,D0
000002AA  43F9 0000116C            353      LEA         pr_comma,A1
000002B0  4E4F                     354      TRAP        #15
000002B2                           355      ** Print destination
000002B2  3002                     356      MOVE.W      D2,D0
000002B4  0240 0E00                357      ANDI.W      #%0000111000000000,D0
000002B8  EC48                     358      LSR.W       #6,D0
000002BA  4EB8 0000                359      JSR         EADecoder_left
000002BE                           360      
000002BE  6000 0F04                361      BRA         opdec_return
000002C2                           362      
000002C2                           363  MATCH_ADD_TO_REG_W
000002C2                           364      ** Move command size into D1
000002C2  123C 0002                365      MOVE.B      #2,D1
000002C6                           366      ** Print command
000002C6  103C 000E                367      MOVE.B      #14,D0
000002CA  43F8 013A                368      LEA         pr_ADD,A1
000002CE  4E4F                     369      TRAP        #15
000002D0                           370      ** Print size
000002D0  43F9 00001171            371      LEA         pr_WORD,A1
000002D6  4E4F                     372      TRAP        #15
000002D8                           373      ** Print space
000002D8  43F9 0000116A            374      LEA         pr_space,A1
000002DE  4E4F                     375      TRAP        #15
000002E0                           376      ** Print source
000002E0  1002                     377      MOVE.B      D2,D0
000002E2  0200 003F                378      ANDI.B      #%00111111,D0
000002E6  4EB8 0018                379      JSR         EADecoder
000002EA                           380      ** Add comma
000002EA  103C 000E                381      MOVE.B      #14,D0
000002EE  43F9 0000116C            382      LEA         pr_comma,A1
000002F4  4E4F                     383      TRAP        #15
000002F6                           384      ** Print destination
000002F6  3002                     385      MOVE.W      D2,D0
000002F8  0240 0E00                386      ANDI.W      #%0000111000000000,D0
000002FC  EC48                     387      LSR.W       #6,D0
000002FE  4EB8 0000                388      JSR         EADecoder_left
00000302                           389      
00000302  6000 0EC0                390      BRA         opdec_return
00000306                           391      
00000306                           392  MATCH_ADD_TO_REG_L
00000306                           393      ** Move command size into D1
00000306  123C 0004                394      MOVE.B      #4,D1
0000030A                           395      ** Print command
0000030A  103C 000E                396      MOVE.B      #14,D0
0000030E  43F8 013A                397      LEA         pr_ADD,A1
00000312  4E4F                     398      TRAP        #15
00000314                           399      ** Print size
00000314  43F9 00001174            400      LEA         pr_LONG,A1
0000031A  4E4F                     401      TRAP        #15
0000031C                           402      ** Print space
0000031C  43F9 0000116A            403      LEA         pr_space,A1
00000322  4E4F                     404      TRAP        #15
00000324                           405      ** Print source
00000324  1002                     406      MOVE.B      D2,D0
00000326  0200 003F                407      ANDI.B      #%00111111,D0
0000032A  4EB8 0018                408      JSR         EADecoder
0000032E                           409      ** Add comma
0000032E  103C 000E                410      MOVE.B      #14,D0
00000332  43F9 0000116C            411      LEA         pr_comma,A1
00000338  4E4F                     412      TRAP        #15
0000033A                           413      ** Print destination
0000033A  3002                     414      MOVE.W      D2,D0
0000033C  0240 0E00                415      ANDI.W      #%0000111000000000,D0
00000340  EC48                     416      LSR.W       #6,D0
00000342  4EB8 0000                417      JSR         EADecoder_left
00000346                           418      
00000346  6000 0E7C                419      BRA         opdec_return
0000034A                           420      
0000034A                           421  MATCH_ADD_TO_EA_B
0000034A                           422      ** Move command size into D1
0000034A  123C 0002                423      MOVE.B      #2,D1
0000034E                           424      ** Print command
0000034E  103C 000E                425      MOVE.B      #14,D0
00000352  43F8 013A                426      LEA         pr_ADD,A1
00000356  4E4F                     427      TRAP        #15
00000358                           428      ** Print size
00000358  43F9 0000116E            429      LEA         pr_BYTE,A1
0000035E  4E4F                     430      TRAP        #15
00000360                           431      ** Print space
00000360  43F9 0000116A            432      LEA         pr_space,A1
00000366  4E4F                     433      TRAP        #15
00000368                           434      ** Print Source
00000368  3002                     435      MOVE.W      D2,D0
0000036A  0240 0E00                436      ANDI.W      #%0000111000000000,D0
0000036E  EC48                     437      LSR.W       #6,D0
00000370  4EB8 0000                438      JSR         EADecoder_left
00000374                           439      ** Add comma
00000374  103C 000E                440      MOVE.B      #14,D0
00000378  43F9 0000116C            441      LEA         pr_comma,A1
0000037E  4E4F                     442      TRAP        #15
00000380                           443      ** Print source
00000380  1002                     444      MOVE.B      D2,D0
00000382  0200 003F                445      ANDI.B      #%00111111,D0
00000386  4EB8 0018                446      JSR         EADecoder
0000038A                           447      
0000038A  6000 0E38                448      BRA         opdec_return
0000038E                           449      
0000038E                           450  MATCH_ADD_TO_EA_W
0000038E                           451      ** Move command size into D1
0000038E  123C 0002                452      MOVE.B      #2,D1
00000392                           453      ** Print command
00000392  103C 000E                454      MOVE.B      #14,D0
00000396  43F8 013A                455      LEA         pr_ADD,A1
0000039A  4E4F                     456      TRAP        #15
0000039C                           457      ** Print size
0000039C  43F9 00001171            458      LEA         pr_WORD,A1
000003A2  4E4F                     459      TRAP        #15
000003A4                           460      ** Print space
000003A4  43F9 0000116A            461      LEA         pr_space,A1
000003AA  4E4F                     462      TRAP        #15
000003AC                           463      ** Print Source
000003AC  3002                     464      MOVE.W      D2,D0
000003AE  0240 0E00                465      ANDI.W      #%0000111000000000,D0
000003B2  EC48                     466      LSR.W       #6,D0
000003B4  4EB8 0000                467      JSR         EADecoder_left
000003B8                           468      ** Add comma
000003B8  103C 000E                469      MOVE.B      #14,D0
000003BC  43F9 0000116C            470      LEA         pr_comma,A1
000003C2  4E4F                     471      TRAP        #15
000003C4                           472      ** Print source
000003C4  1002                     473      MOVE.B      D2,D0
000003C6  0200 003F                474      ANDI.B      #%00111111,D0
000003CA  4EB8 0018                475      JSR         EADecoder
000003CE                           476      
000003CE  6000 0DF4                477      BRA         opdec_return
000003D2                           478      
000003D2                           479  MATCH_ADD_TO_EA_L 
000003D2                           480      ** Move command size into D1
000003D2  123C 0004                481      MOVE.B      #4,D1
000003D6                           482      ** Print command
000003D6  103C 000E                483      MOVE.B      #14,D0
000003DA  43F8 013A                484      LEA         pr_ADD,A1
000003DE  4E4F                     485      TRAP        #15
000003E0                           486      ** Print size
000003E0  43F9 00001174            487      LEA         pr_LONG,A1
000003E6  4E4F                     488      TRAP        #15
000003E8                           489      ** Print space
000003E8  43F9 0000116A            490      LEA         pr_space,A1
000003EE  4E4F                     491      TRAP        #15
000003F0                           492      ** Print Source
000003F0  3002                     493      MOVE.W      D2,D0
000003F2  0240 0E00                494      ANDI.W      #%0000111000000000,D0
000003F6  EC48                     495      LSR.W       #6,D0
000003F8  4EB8 0000                496      JSR         EADecoder_left
000003FC                           497      ** Add comma
000003FC  103C 000E                498      MOVE.B      #14,D0
00000400  43F9 0000116C            499      LEA         pr_comma,A1
00000406  4E4F                     500      TRAP        #15
00000408                           501      ** Print source
00000408  1002                     502      MOVE.B      D2,D0
0000040A  0200 003F                503      ANDI.B      #%00111111,D0
0000040E  4EB8 0018                504      JSR         EADecoder
00000412                           505      
00000412  6000 0DB0                506      BRA         opdec_return
00000416                           507      
00000416                           508  MATCH_ADDQ_B
00000416                           509      ** Move command size into D1
00000416  123C 0002                510      MOVE.B      #2,D1
0000041A                           511      ** Print command
0000041A  103C 000E                512      MOVE.B      #14,D0
0000041E  43F8 0143                513      LEA         pr_ADDQ,A1
00000422  4E4F                     514      TRAP        #15
00000424                           515      ** Print size
00000424  43F9 0000116E            516      LEA         pr_BYTE,A1
0000042A  4E4F                     517      TRAP        #15
0000042C                           518      ** Print space
0000042C  43F9 0000116A            519      LEA         pr_space,A1
00000432  4E4F                     520      TRAP        #15
00000434                           521      ** Print Immediate data
00000434  3602                     522      MOVE.W      D2,D3 * Temporarily move op data
00000436  3202                     523      MOVE.W      D2,D1
00000438  0241 0E00                524      ANDI.W      #%0000111000000000,D1
Line 525 ERROR: Comma expected
0000043C                           525      LSR.W       #6
Line 526 ERROR: Comma expected
0000043C                           526      LSR.W       #3
0000043C  143C 0010                527      MOVE.B      #16,D2
00000440  303C 000F                528      MOVE.W      #15,D0
00000444  4E4F                     529      TRAP        #15
00000446                           530      
00000446  3403                     531      MOVE.W      D3,D2 * Move op data back
00000448                           532      
00000448                           533      ** Add comma
00000448  103C 000E                534      MOVE.B      #14,D0
0000044C  43F9 0000116C            535      LEA         pr_comma,A1
00000452  4E4F                     536      TRAP        #15
00000454                           537      ** Decode right side ea
00000454  1002                     538      MOVE.B      D2,D0
00000456  0200 003F                539      ANDI.B      #%00111111,D0
0000045A  4EB8 0018                540      JSR         EADecoder
0000045E                           541      
0000045E  6000 0D64                542      BRA         opdec_return
00000462                           543      
00000462                           544  MATCH_ADDQ_W
00000462                           545      ** Move command size into D1
00000462  123C 0002                546      MOVE.B      #2,D1
00000466                           547      ** Print command
00000466  103C 000E                548      MOVE.B      #14,D0
0000046A  43F8 0143                549      LEA         pr_ADDQ,A1
0000046E  4E4F                     550      TRAP        #15
00000470                           551      ** Print size
00000470  43F9 00001171            552      LEA         pr_WORD,A1
00000476  4E4F                     553      TRAP        #15
00000478                           554      ** Print space
00000478  43F9 0000116A            555      LEA         pr_space,A1
0000047E  4E4F                     556      TRAP        #15
00000480                           557      ** Print Immediate data
00000480  3602                     558      MOVE.W      D2,D3 * Temporarily move op data
00000482  3202                     559      MOVE.W      D2,D1
00000484  0241 0E00                560      ANDI.W      #%0000111000000000,D1
00000488  143C 0010                561      MOVE.B      #16,D2
0000048C  303C 000F                562      MOVE.W      #15,D0
00000490  4E4F                     563      TRAP        #15
00000492                           564      
00000492  3403                     565      MOVE.W      D3,D2 * Move op data back
00000494                           566      
00000494                           567      ** Add comma
00000494  103C 000E                568      MOVE.B      #14,D0
00000498  43F9 0000116C            569      LEA         pr_comma,A1
0000049E  4E4F                     570      TRAP        #15
000004A0                           571      ** Decode right side ea
000004A0  1002                     572      MOVE.B      D2,D0
000004A2  0200 003F                573      ANDI.B      #%00111111,D0
000004A6  4EB8 0018                574      JSR         EADecoder
000004AA                           575      
000004AA  6000 0D18                576      BRA         opdec_return
000004AE                           577      
000004AE                           578  MATCH_ADDQ_L
000004AE                           579      ** Move command size into D1
000004AE  123C 0004                580      MOVE.B      #4,D1
000004B2                           581      ** Print command
000004B2  103C 000E                582      MOVE.B      #14,D0
000004B6  43F8 0143                583      LEA         pr_ADDQ,A1
000004BA  4E4F                     584      TRAP        #15
000004BC                           585      ** Print size
000004BC  43F9 00001174            586      LEA         pr_LONG,A1
000004C2  4E4F                     587      TRAP        #15
000004C4                           588      ** Print space
000004C4  43F9 0000116A            589      LEA         pr_space,A1
000004CA  4E4F                     590      TRAP        #15
000004CC                           591      ** Print Immediate data
000004CC  3602                     592      MOVE.W      D2,D3 * Temporarily move op data
000004CE  3202                     593      MOVE.W      D2,D1
000004D0  0241 0E00                594      ANDI.W      #%0000111000000000,D1
000004D4  143C 0010                595      MOVE.B      #16,D2
000004D8  303C 000F                596      MOVE.W      #15,D0
000004DC  4E4F                     597      TRAP        #15
000004DE                           598      
000004DE  3403                     599      MOVE.W      D3,D2 * Move op data back
000004E0                           600      
000004E0                           601      ** Add comma
000004E0  103C 000E                602      MOVE.B      #14,D0
000004E4  43F9 0000116C            603      LEA         pr_comma,A1
000004EA  4E4F                     604      TRAP        #15
000004EC                           605      ** Decode right side ea
000004EC  1002                     606      MOVE.B      D2,D0
000004EE  0200 003F                607      ANDI.B      #%00111111,D0
000004F2  4EB8 0018                608      JSR         EADecoder
000004F6                           609      
000004F6  6000 0CCC                610      BRA         opdec_return
000004FA                           611  
000004FA                           612  
000004FA                           613  
000004FA                           614  -------------------- end include --------------------
000004FA                           615                  INCLUDE 'spencer_opcodes.x68'
000004FA= 45 52 52 4F 52 00        616  pr_ERROR    DC.B    'ERROR',0
00000500                           617  
00000500= 42 43 43 00              618  pr_BCC_CC   DC.B    'BCC',0
00000504= 42 43 53 00              619  pr_BCC_CS   DC.B    'BCS',0
00000508= 42 45 51 00              620  pr_BCC_EQ   DC.B    'BEQ',0
0000050C= 42 47 45 00              621  pr_BCC_GE   DC.B    'BGE',0
00000510= 42 47 54 00              622  pr_BCC_GT   DC.B    'BGT',0
00000514= 42 48 49 00              623  pr_BCC_HI   DC.B    'BHI',0
00000518= 42 4C 45 00              624  pr_BCC_LE   DC.B    'BLE',0
0000051C= 42 4C 53 00              625  pr_BCC_LS   DC.B    'BLS',0
00000520= 42 4C 54 00              626  pr_BCC_LT   DC.B    'BLT',0
00000524= 42 4D 49 00              627  pr_BCC_MI   DC.B    'BMI',0
00000528= 42 4E 45 00              628  pr_BCC_NE   DC.B    'BNE',0
0000052C= 42 50 4C 00              629  pr_BCC_PL   DC.B    'BPL',0
00000530= 42 56 43 00              630  pr_BCC_VC   DC.B    'BVC',0
00000534= 42 56 53 00              631  pr_BCC_VS   DC.B    'BVS',0
00000538                           632  
00000538                           633  Get_BCC_Displacement_8bit
00000538                           634  
00000538  4246                     635      CLR     D6
0000053A  1C02                     636      MOVE.B  D2,D6
0000053C  4E75                     637      RTS
0000053E                           638  Get_BCC_Displacement_16bit
0000053E                           639  
0000053E  4246                     640      CLR     D6
00000540  3C18                     641      MOVE.W  (A0)+,D6
00000542  4E75                     642      RTS
00000544                           643  Get_BCC_Displacement_32bit
00000544                           644  
00000544  4246                     645      CLR     D6
00000546  2C18                     646      MOVE.L  (A0)+,D6
00000548  4E75                     647      RTS
0000054A                           648  Get_Current_Address
0000054A                           649  
0000054A  4247                     650      CLR     D7
0000054C  2E08                     651      MOVE.L      A0,D7 
0000054E  5587                     652      SUBI.L      #2,D7
00000550  4E75                     653      RTS
00000552                           654  Get_BCC_Destination_Address
00000552                           655  
00000552  9E86                     656      SUB.L   D6,D7    
00000554  4E75                     657      RTS
00000556                           658  
00000556                           659  
00000556                           660  PrintHex
00000556                           661  
00000556  48A7 2000                662      MOVEM.W     D2, -(SP)
0000055A                           663      
0000055A  103C 000F                664      MOVE.B      #15,D0
0000055E  143C 0010                665      MOVE.B      #16,D2 * print base 16
00000562  4E4F                     666      TRAP        #15
00000564                           667  
00000564  4C9F 0004                668      MOVEM.W     (SP)+,D2
00000568  4E75                     669      RTS
0000056A                           670  PrintString
0000056A  103C 000E                671      MOVE.B      #14,D0
0000056E  4E4F                     672      TRAP        #15
00000570  4E75                     673      RTS
00000572                           674  PrintSizeByte
00000572  103C 000E                675      MOVE.B      #14,D0
00000576  43F9 0000116E            676      LEA         pr_BYTE,A1
0000057C  4E4F                     677      TRAP        #15
0000057E  4E75                     678      RTS
00000580                           679  PrintSizeWord
00000580  103C 000E                680      MOVE.B      #14,D0
00000584  43F9 00001171            681      LEA         pr_WORD,A1
0000058A  4E4F                     682      TRAP        #15
0000058C  4E75                     683      RTS
0000058E                           684  PrintSizeLong
0000058E  103C 000E                685      MOVE.B      #14,D0
00000592  43F9 00001174            686      LEA         pr_LONG,A1
00000598  4E4F                     687      TRAP        #15
0000059A  4E75                     688      RTS
0000059C                           689  
0000059C                           690  
0000059C                           691  MATCH_CC_T_8
0000059C  3A02                     692      MOVE.W      D2,D5       *REMOVE
0000059E                           693  MATCH_CC_T_16
0000059E  3A02                     694      MOVE.W      D2,D5       *REMOVE
000005A0                           695  MATCH_CC_T_32
000005A0  3A02                     696      MOVE.W      D2,D5       *REMOVE
000005A2                           697  MATCH_CC_F_8
000005A2  3A02                     698      MOVE.W      D2,D5       *REMOVE
000005A4                           699  MATCH_CC_F_16
000005A4  3A02                     700      MOVE.W      D2,D5       *REMOVE
000005A6                           701  MATCH_CC_F_32
000005A6  3A02                     702      MOVE.W      D2,D5       *REMOVE
000005A8                           703  MATCH_CC_HI_8
000005A8                           704      ** print opcode **
000005A8  43F8 0514                705      LEA         pr_BCC_HI,A1                
000005AC  61BC                     706      BSR         PrintString
000005AE                           707      
000005AE  61C2                     708      BSR         PrintSizeBYTE
000005B0  43F9 0000116A            709      LEA         pr_space,A1
000005B6  61B2                     710      BSR         PrintString
000005B8                           711   
000005B8                           712      ** print address **
000005B8  6100 FF7E                713      BSR         Get_BCC_Displacement_8bit 
000005BC  618C                     714      BSR         Get_Current_Address
000005BE  6192                     715      BSR         Get_BCC_Destination_Address
000005C0  2207                     716      MOVE.L      D7,D1
000005C2  6192                     717      BSR         PrintHex
000005C4                           718      
000005C4  6000 0BFE                719      BRA         opdec_return
000005C8                           720  
000005C8                           721  MATCH_CC_HI_16
000005C8                           722      ** print opcode **
000005C8  43F8 0514                723      LEA         pr_BCC_HI,A1                
000005CC  619C                     724      BSR         PrintString
000005CE                           725      
000005CE  61B0                     726      BSR         PrintSizeWORD
000005D0  43F9 0000116A            727      LEA         pr_space,A1
000005D6  6192                     728      BSR         PrintString
000005D8                           729   
000005D8                           730      ** print address **
000005D8  6100 FF64                731      BSR         Get_BCC_Displacement_16bit 
000005DC  6100 FF6C                732      BSR         Get_Current_Address
000005E0  6100 FF70                733      BSR         Get_BCC_Destination_Address
000005E4  2207                     734      MOVE.L      D7,D1
000005E6  6100 FF6E                735      BSR         PrintHex
000005EA                           736      
000005EA  6000 0BD8                737      BRA         opdec_return
000005EE                           738  MATCH_CC_HI_32
000005EE                           739      ** print opcode **
000005EE  43F8 0514                740      LEA         pr_BCC_HI,A1                
000005F2  6100 FF76                741      BSR         PrintString
000005F6                           742      
000005F6  6196                     743      BSR         PrintSizeLONG
000005F8  43F9 0000116A            744      LEA         pr_space,A1
000005FE  6100 FF6A                745      BSR         PrintString
00000602                           746   
00000602                           747      ** print address **
00000602  6100 FF40                748      BSR         Get_BCC_Displacement_32bit 
00000606  6100 FF42                749      BSR         Get_Current_Address
0000060A  6100 FF46                750      BSR         Get_BCC_Destination_Address
0000060E  2207                     751      MOVE.L      D7,D1
00000610  6100 FF44                752      BSR         PrintHex
00000614                           753      
00000614  6000 0BAE                754      BRA         opdec_return
00000618                           755  MATCH_CC_LS_8
00000618                           756      ** print opcode **
00000618  43F8 051C                757      LEA         pr_BCC_LS,A1                
0000061C  6100 FF4C                758      BSR         PrintString
00000620                           759      
00000620  6100 FF50                760      BSR         PrintSizeBYTE
00000624  43F9 0000116A            761      LEA         pr_space,A1
0000062A  6100 FF3E                762      BSR         PrintString
0000062E                           763   
0000062E                           764      ** print address **
0000062E  6100 FF08                765      BSR         Get_BCC_Displacement_8bit 
00000632  6100 FF16                766      BSR         Get_Current_Address
00000636  6100 FF1A                767      BSR         Get_BCC_Destination_Address
0000063A  2207                     768      MOVE.L      D7,D1
0000063C  6100 FF18                769      BSR         PrintHex
00000640                           770      
00000640  6000 0B82                771      BRA         opdec_return
00000644                           772  MATCH_CC_LS_16
00000644                           773      ** print opcode **
00000644  43F8 051C                774      LEA         pr_BCC_LS,A1                
00000648  6100 FF20                775      BSR         PrintString
0000064C                           776      
0000064C  6100 FF32                777      BSR         PrintSizeWORD
00000650  43F9 0000116A            778      LEA         pr_space,A1
00000656  6100 FF12                779      BSR         PrintString
0000065A                           780   
0000065A                           781      ** print address **
0000065A  6100 FEE2                782      BSR         Get_BCC_Displacement_16bit 
0000065E  6100 FEEA                783      BSR         Get_Current_Address
00000662  6100 FEEE                784      BSR         Get_BCC_Destination_Address
00000666  2207                     785      MOVE.L      D7,D1
00000668  6100 FEEC                786      BSR         PrintHex
0000066C                           787      
0000066C  6000 0B56                788      BRA         opdec_return
00000670                           789  
00000670                           790  MATCH_CC_LS_32  
00000670                           791      ** print opcode **
00000670  43F8 051C                792      LEA         pr_BCC_LS,A1                
00000674  6100 FEF4                793      BSR         PrintString
00000678                           794      
00000678  6100 FF14                795      BSR         PrintSizeLONG
0000067C  43F9 0000116A            796      LEA         pr_space,A1
00000682  6100 FEE6                797      BSR         PrintString
00000686                           798   
00000686                           799      ** print address **
00000686  6100 FEBC                800      BSR         Get_BCC_Displacement_32bit 
0000068A  6100 FEBE                801      BSR         Get_Current_Address
0000068E  6100 FEC2                802      BSR         Get_BCC_Destination_Address
00000692  2207                     803      MOVE.L      D7,D1
00000694  6100 FEC0                804      BSR         PrintHex
00000698                           805      
00000698  6000 0B2A                806      BRA         opdec_return
0000069C                           807  MATCH_CC_CC_8    
0000069C                           808      
0000069C                           809      ** print opcode **
0000069C  43F8 0500                810      LEA         pr_BCC_CC,A1                
000006A0  6100 FEC8                811      BSR         PrintString
000006A4                           812      
000006A4  6100 FECC                813      BSR         PrintSizeBYTE
000006A8  43F9 0000116A            814      LEA         pr_space,A1
000006AE  6100 FEBA                815      BSR         PrintString
000006B2                           816   
000006B2                           817      ** print address **
000006B2  6100 FE84                818      BSR         Get_BCC_Displacement_8bit 
000006B6  6100 FE92                819      BSR         Get_Current_Address
000006BA  6100 FE96                820      BSR         Get_BCC_Destination_Address
000006BE  2207                     821      MOVE.L      D7,D1
000006C0  6100 FE94                822      BSR         PrintHex
000006C4                           823      
000006C4  6000 0AFE                824      BRA         opdec_return
000006C8                           825  
000006C8                           826  MATCH_CC_CC_16
000006C8                           827      ** print opcode **
000006C8  43F8 0500                828      LEA         pr_BCC_CC,A1                
000006CC  6100 FE9C                829      BSR         PrintString
000006D0                           830      
000006D0  6100 FEAE                831      BSR         PrintSizeWORD
000006D4  43F9 0000116A            832      LEA         pr_space,A1
000006DA  6100 FE8E                833      BSR         PrintString
000006DE                           834   
000006DE                           835      ** print address **
000006DE  6100 FE5E                836      BSR         Get_BCC_Displacement_16bit 
000006E2  6100 FE66                837      BSR         Get_Current_Address
000006E6  6100 FE6A                838      BSR         Get_BCC_Destination_Address
000006EA  2207                     839      MOVE.L      D7,D1
000006EC  6100 FE68                840      BSR         PrintHex
000006F0                           841      
000006F0  6000 0AD2                842      BRA         opdec_return
000006F4                           843  MATCH_CC_CC_32
000006F4                           844      ** print opcode **
000006F4  43F8 0500                845      LEA         pr_BCC_CC,A1                
000006F8  6100 FE70                846      BSR         PrintString
000006FC                           847      
000006FC  6100 FE90                848      BSR         PrintSizeLONG
00000700  43F9 0000116A            849      LEA         pr_space,A1
00000706  6100 FE62                850      BSR         PrintString
0000070A                           851   
0000070A                           852      ** print address **
0000070A  6100 FE38                853      BSR         Get_BCC_Displacement_32bit 
0000070E  6100 FE3A                854      BSR         Get_Current_Address
00000712  6100 FE3E                855      BSR         Get_BCC_Destination_Address
00000716  2207                     856      MOVE.L      D7,D1
00000718  6100 FE3C                857      BSR         PrintHex
0000071C                           858      
0000071C  6000 0AA6                859      BRA         opdec_return
00000720                           860  MATCH_CC_CS_8
00000720                           861      ** print opcode **
00000720  43F8 0504                862      LEA         pr_BCC_CS,A1                
00000724  6100 FE44                863      BSR         PrintString
00000728                           864      
00000728  6100 FE48                865      BSR         PrintSizeBYTE
0000072C  43F9 0000116A            866      LEA         pr_space,A1
00000732  6100 FE36                867      BSR         PrintString
00000736                           868   
00000736                           869      ** print address **
00000736  6100 FE00                870      BSR         Get_BCC_Displacement_8bit 
0000073A  6100 FE0E                871      BSR         Get_Current_Address
0000073E  6100 FE12                872      BSR         Get_BCC_Destination_Address
00000742  2207                     873      MOVE.L      D7,D1
00000744  6100 FE10                874      BSR         PrintHex
00000748                           875      
00000748  6000 0A7A                876      BRA         opdec_return
0000074C                           877  MATCH_CC_CS_16
0000074C                           878      ** print opcode **
0000074C  43F8 0504                879      LEA         pr_BCC_CS,A1                
00000750  6100 FE18                880      BSR         PrintString
00000754                           881      
00000754  6100 FE2A                882      BSR         PrintSizeWORD
00000758  43F9 0000116A            883      LEA         pr_space,A1
0000075E  6100 FE0A                884      BSR         PrintString
00000762                           885   
00000762                           886      ** print address **
00000762  6100 FDDA                887      BSR         Get_BCC_Displacement_16bit 
00000766  6100 FDE2                888      BSR         Get_Current_Address
0000076A  6100 FDE6                889      BSR         Get_BCC_Destination_Address
0000076E  2207                     890      MOVE.L      D7,D1
00000770  6100 FDE4                891      BSR         PrintHex
00000774                           892      
00000774  6000 0A4E                893      BRA         opdec_return
00000778                           894  MATCH_CC_CS_32
00000778                           895      ** print opcode **
00000778  43F8 0504                896      LEA         pr_BCC_CS,A1                
0000077C  6100 FDEC                897      BSR         PrintString
00000780                           898      
00000780  6100 FE0C                899      BSR         PrintSizeLONG
00000784  43F9 0000116A            900      LEA         pr_space,A1
0000078A  6100 FDDE                901      BSR         PrintString
0000078E                           902   
0000078E                           903      ** print address **
0000078E  6100 FDB4                904      BSR         Get_BCC_Displacement_32bit 
00000792  6100 FDB6                905      BSR         Get_Current_Address
00000796  6100 FDBA                906      BSR         Get_BCC_Destination_Address
0000079A  2207                     907      MOVE.L      D7,D1
0000079C  6100 FDB8                908      BSR         PrintHex
000007A0                           909      
000007A0  6000 0A22                910      BRA         opdec_return
000007A4                           911  MATCH_CC_NE_8
000007A4                           912      ** print opcode **
000007A4  43F8 0528                913      LEA         pr_BCC_NE,A1                
000007A8  6100 FDC0                914      BSR         PrintString
000007AC                           915      
000007AC  6100 FDC4                916      BSR         PrintSizeBYTE
000007B0  43F9 0000116A            917      LEA         pr_space,A1
000007B6  6100 FDB2                918      BSR         PrintString
000007BA                           919   
000007BA                           920      ** print address **
000007BA  6100 FD7C                921      BSR         Get_BCC_Displacement_8bit 
000007BE  6100 FD8A                922      BSR         Get_Current_Address
000007C2  6100 FD8E                923      BSR         Get_BCC_Destination_Address
000007C6  2207                     924      MOVE.L      D7,D1
000007C8  6100 FD8C                925      BSR         PrintHex
000007CC                           926      
000007CC  6000 09F6                927      BRA         opdec_return
000007D0                           928  MATCH_CC_NE_16
000007D0                           929      ** print opcode **
000007D0  43F8 0528                930      LEA         pr_BCC_NE,A1                
000007D4  6100 FD94                931      BSR         PrintString
000007D8                           932      
000007D8  6100 FDA6                933      BSR         PrintSizeWORD
000007DC  43F9 0000116A            934      LEA         pr_space,A1
000007E2  6100 FD86                935      BSR         PrintString
000007E6                           936   
000007E6                           937      ** print address **
000007E6  6100 FD56                938      BSR         Get_BCC_Displacement_16bit 
000007EA  6100 FD5E                939      BSR         Get_Current_Address
000007EE  6100 FD62                940      BSR         Get_BCC_Destination_Address
000007F2  2207                     941      MOVE.L      D7,D1
000007F4  6100 FD60                942      BSR         PrintHex
000007F8                           943      
000007F8  6000 09CA                944      BRA         opdec_return
000007FC                           945  MATCH_CC_NE_32
000007FC                           946      ** print opcode **
000007FC  43F8 0528                947      LEA         pr_BCC_NE,A1                
00000800  6100 FD68                948      BSR         PrintString
00000804                           949      
00000804  6100 FD88                950      BSR         PrintSizeLONG
00000808  43F9 0000116A            951      LEA         pr_space,A1
0000080E  6100 FD5A                952      BSR         PrintString
00000812                           953   
00000812                           954      ** print address **
00000812  6100 FD30                955      BSR         Get_BCC_Displacement_32bit 
00000816  6100 FD32                956      BSR         Get_Current_Address
0000081A  6100 FD36                957      BSR         Get_BCC_Destination_Address
0000081E  2207                     958      MOVE.L      D7,D1
00000820  6100 FD34                959      BSR         PrintHex
00000824                           960      
00000824  6000 099E                961      BRA         opdec_return
00000828                           962  MATCH_CC_EQ_8
00000828                           963      ** print opcode **
00000828  43F8 0508                964      LEA         pr_BCC_EQ,A1                
0000082C  6100 FD3C                965      BSR         PrintString
00000830                           966      
00000830  6100 FD40                967      BSR         PrintSizeBYTE
00000834  43F9 0000116A            968      LEA         pr_space,A1
0000083A  6100 FD2E                969      BSR         PrintString
0000083E                           970   
0000083E                           971      ** print address **
0000083E  6100 FCF8                972      BSR         Get_BCC_Displacement_8bit 
00000842  6100 FD06                973      BSR         Get_Current_Address
00000846  6100 FD0A                974      BSR         Get_BCC_Destination_Address
0000084A  2207                     975      MOVE.L      D7,D1
0000084C  6100 FD08                976      BSR         PrintHex
00000850                           977      
00000850  6000 0972                978      BRA         opdec_return
00000854                           979  MATCH_CC_EQ_16
00000854                           980      ** print opcode **
00000854  43F8 0508                981      LEA         pr_BCC_EQ,A1                
00000858  6100 FD10                982      BSR         PrintString
0000085C                           983      
0000085C  6100 FD22                984      BSR         PrintSizeWORD
00000860  43F9 0000116A            985      LEA         pr_space,A1
00000866  6100 FD02                986      BSR         PrintString
0000086A                           987   
0000086A                           988      ** print address **
0000086A  6100 FCD2                989      BSR         Get_BCC_Displacement_16bit 
0000086E  6100 FCDA                990      BSR         Get_Current_Address
00000872  6100 FCDE                991      BSR         Get_BCC_Destination_Address
00000876  2207                     992      MOVE.L      D7,D1
00000878  6100 FCDC                993      BSR         PrintHex
0000087C                           994      
0000087C  6000 0946                995      BRA         opdec_return
00000880                           996  MATCH_CC_EQ_32
00000880                           997      ** print opcode **
00000880  43F8 0508                998      LEA         pr_BCC_EQ,A1                
00000884  6100 FCE4                999      BSR         PrintString
00000888                          1000      
00000888  6100 FD04               1001      BSR         PrintSizeLONG
0000088C  43F9 0000116A           1002      LEA         pr_space,A1
00000892  6100 FCD6               1003      BSR         PrintString
00000896                          1004   
00000896                          1005      ** print address **
00000896  6100 FCAC               1006      BSR         Get_BCC_Displacement_32bit 
0000089A  6100 FCAE               1007      BSR         Get_Current_Address
0000089E  6100 FCB2               1008      BSR         Get_BCC_Destination_Address
000008A2  2207                    1009      MOVE.L      D7,D1
000008A4  6100 FCB0               1010      BSR         PrintHex
000008A8                          1011      
000008A8  6000 091A               1012      BRA         opdec_return
000008AC                          1013  MATCH_CC_VC_8
000008AC                          1014      ** print opcode **
000008AC  43F8 0530               1015      LEA         pr_BCC_VC,A1                
000008B0  6100 FCB8               1016      BSR         PrintString
000008B4                          1017      
000008B4  6100 FCBC               1018      BSR         PrintSizeBYTE
000008B8  43F9 0000116A           1019      LEA         pr_space,A1
000008BE  6100 FCAA               1020      BSR         PrintString
000008C2                          1021   
000008C2                          1022      ** print address **
000008C2  6100 FC74               1023      BSR         Get_BCC_Displacement_8bit 
000008C6  6100 FC82               1024      BSR         Get_Current_Address
000008CA  6100 FC86               1025      BSR         Get_BCC_Destination_Address
000008CE  2207                    1026      MOVE.L      D7,D1
000008D0  6100 FC84               1027      BSR         PrintHex
000008D4                          1028      
000008D4  6000 08EE               1029      BRA         opdec_return
000008D8                          1030  MATCH_CC_VC_16
000008D8                          1031      ** print opcode **
000008D8  43F8 0530               1032      LEA         pr_BCC_VC,A1                
000008DC  6100 FC8C               1033      BSR         PrintString
000008E0                          1034      
000008E0  6100 FC9E               1035      BSR         PrintSizeWORD
000008E4  43F9 0000116A           1036      LEA         pr_space,A1
000008EA  6100 FC7E               1037      BSR         PrintString
000008EE                          1038   
000008EE                          1039      ** print address **
000008EE  6100 FC4E               1040      BSR         Get_BCC_Displacement_16bit 
000008F2  6100 FC56               1041      BSR         Get_Current_Address
000008F6  6100 FC5A               1042      BSR         Get_BCC_Destination_Address
000008FA  2207                    1043      MOVE.L      D7,D1
000008FC  6100 FC58               1044      BSR         PrintHex
00000900                          1045      
00000900  6000 08C2               1046      BRA         opdec_return
00000904                          1047  MATCH_CC_VC_32
00000904                          1048      ** print opcode **
00000904  43F8 0530               1049      LEA         pr_BCC_VC,A1                
00000908  6100 FC60               1050      BSR         PrintString
0000090C                          1051      
0000090C  6100 FC80               1052      BSR         PrintSizeLONG
00000910  43F9 0000116A           1053      LEA         pr_space,A1
00000916  6100 FC52               1054      BSR         PrintString
0000091A                          1055   
0000091A                          1056      ** print address **
0000091A  6100 FC28               1057      BSR         Get_BCC_Displacement_32bit 
0000091E  6100 FC2A               1058      BSR         Get_Current_Address
00000922  6100 FC2E               1059      BSR         Get_BCC_Destination_Address
00000926  2207                    1060      MOVE.L      D7,D1
00000928  6100 FC2C               1061      BSR         PrintHex
0000092C                          1062      
0000092C  6000 0896               1063      BRA         opdec_return
00000930                          1064  MATCH_CC_VS_8
00000930                          1065      ** print opcode **
00000930  43F8 0534               1066      LEA         pr_BCC_VS,A1                
00000934  6100 FC34               1067      BSR         PrintString
00000938                          1068      
00000938  6100 FC38               1069      BSR         PrintSizeBYTE
0000093C  43F9 0000116A           1070      LEA         pr_space,A1
00000942  6100 FC26               1071      BSR         PrintString
00000946                          1072   
00000946                          1073      ** print address **
00000946  6100 FBF0               1074      BSR         Get_BCC_Displacement_8bit 
0000094A  6100 FBFE               1075      BSR         Get_Current_Address
0000094E  6100 FC02               1076      BSR         Get_BCC_Destination_Address
00000952  2207                    1077      MOVE.L      D7,D1
00000954  6100 FC00               1078      BSR         PrintHex
00000958                          1079      
00000958  6000 086A               1080      BRA         opdec_return
0000095C                          1081  MATCH_CC_VS_16
0000095C                          1082      ** print opcode **
0000095C  43F8 0534               1083      LEA         pr_BCC_VS,A1                
00000960  6100 FC08               1084      BSR         PrintString
00000964                          1085      
00000964  6100 FC1A               1086      BSR         PrintSizeWORD
00000968  43F9 0000116A           1087      LEA         pr_space,A1
0000096E  6100 FBFA               1088      BSR         PrintString
00000972                          1089   
00000972                          1090      ** print address **
00000972  6100 FBCA               1091      BSR         Get_BCC_Displacement_16bit 
00000976  6100 FBD2               1092      BSR         Get_Current_Address
0000097A  6100 FBD6               1093      BSR         Get_BCC_Destination_Address
0000097E  2207                    1094      MOVE.L      D7,D1
00000980  6100 FBD4               1095      BSR         PrintHex
00000984                          1096      
00000984  6000 083E               1097      BRA         opdec_return
00000988                          1098  MATCH_CC_VS_32
00000988                          1099      ** print opcode **
00000988  43F8 0534               1100      LEA         pr_BCC_VS,A1                
0000098C  6100 FBDC               1101      BSR         PrintString
00000990                          1102      
00000990  6100 FBFC               1103      BSR         PrintSizeLONG
00000994  43F9 0000116A           1104      LEA         pr_space,A1
0000099A  6100 FBCE               1105      BSR         PrintString
0000099E                          1106   
0000099E                          1107      ** print address **
0000099E  6100 FBA4               1108      BSR         Get_BCC_Displacement_32bit 
000009A2  6100 FBA6               1109      BSR         Get_Current_Address
000009A6  6100 FBAA               1110      BSR         Get_BCC_Destination_Address
000009AA  2207                    1111      MOVE.L      D7,D1
000009AC  6100 FBA8               1112      BSR         PrintHex
000009B0                          1113      
000009B0  6000 0812               1114      BRA         opdec_return
000009B4                          1115  MATCH_CC_PL_8
000009B4                          1116      ** print opcode **
000009B4  43F8 052C               1117      LEA         pr_BCC_PL,A1                
000009B8  6100 FBB0               1118      BSR         PrintString
000009BC                          1119      
000009BC  6100 FBB4               1120      BSR         PrintSizeBYTE
000009C0  43F9 0000116A           1121      LEA         pr_space,A1
000009C6  6100 FBA2               1122      BSR         PrintString
000009CA                          1123   
000009CA                          1124      ** print address **
000009CA  6100 FB6C               1125      BSR         Get_BCC_Displacement_8bit 
000009CE  6100 FB7A               1126      BSR         Get_Current_Address
000009D2  6100 FB7E               1127      BSR         Get_BCC_Destination_Address
000009D6  2207                    1128      MOVE.L      D7,D1
000009D8  6100 FB7C               1129      BSR         PrintHex
000009DC                          1130      
000009DC  6000 07E6               1131      BRA         opdec_return
000009E0                          1132  MATCH_CC_PL_16
000009E0                          1133      ** print opcode **
000009E0  43F8 052C               1134      LEA         pr_BCC_PL,A1                
000009E4  6100 FB84               1135      BSR         PrintString
000009E8                          1136      
000009E8  6100 FB96               1137      BSR         PrintSizeWORD
000009EC  43F9 0000116A           1138      LEA         pr_space,A1
000009F2  6100 FB76               1139      BSR         PrintString
000009F6                          1140   
000009F6                          1141      ** print address **
000009F6  6100 FB46               1142      BSR         Get_BCC_Displacement_16bit 
000009FA  6100 FB4E               1143      BSR         Get_Current_Address
000009FE  6100 FB52               1144      BSR         Get_BCC_Destination_Address
00000A02  2207                    1145      MOVE.L      D7,D1
00000A04  6100 FB50               1146      BSR         PrintHex
00000A08                          1147      
00000A08  6000 07BA               1148      BRA         opdec_return
00000A0C                          1149  MATCH_CC_PL_32
00000A0C                          1150      ** print opcode **
00000A0C  43F8 052C               1151      LEA         pr_BCC_PL,A1                
00000A10  6100 FB58               1152      BSR         PrintString
00000A14                          1153      
00000A14  6100 FB78               1154      BSR         PrintSizeLONG
00000A18  43F9 0000116A           1155      LEA         pr_space,A1
00000A1E  6100 FB4A               1156      BSR         PrintString
00000A22                          1157   
00000A22                          1158      ** print address **
00000A22  6100 FB20               1159      BSR         Get_BCC_Displacement_32bit 
00000A26  6100 FB22               1160      BSR         Get_Current_Address
00000A2A  6100 FB26               1161      BSR         Get_BCC_Destination_Address
00000A2E  2207                    1162      MOVE.L      D7,D1
00000A30  6100 FB24               1163      BSR         PrintHex
00000A34                          1164      
00000A34  6000 078E               1165      BRA         opdec_return
00000A38                          1166  MATCH_CC_MI_8
00000A38                          1167      ** print opcode **
00000A38  43F8 0524               1168      LEA         pr_BCC_MI,A1                
00000A3C  6100 FB2C               1169      BSR         PrintString
00000A40                          1170      
00000A40  6100 FB30               1171      BSR         PrintSizeBYTE
00000A44  43F9 0000116A           1172      LEA         pr_space,A1
00000A4A  6100 FB1E               1173      BSR         PrintString
00000A4E                          1174   
00000A4E                          1175      ** print address **
00000A4E  6100 FAE8               1176      BSR         Get_BCC_Displacement_8bit 
00000A52  6100 FAF6               1177      BSR         Get_Current_Address
00000A56  6100 FAFA               1178      BSR         Get_BCC_Destination_Address
00000A5A  2207                    1179      MOVE.L      D7,D1
00000A5C  6100 FAF8               1180      BSR         PrintHex
00000A60                          1181      
00000A60  6000 0762               1182      BRA         opdec_return
00000A64                          1183  MATCH_CC_MI_16
00000A64                          1184      ** print opcode **
00000A64  43F8 0524               1185      LEA         pr_BCC_MI,A1                
00000A68  6100 FB00               1186      BSR         PrintString
00000A6C                          1187      
00000A6C  6100 FB12               1188      BSR         PrintSizeWORD
00000A70  43F9 0000116A           1189      LEA         pr_space,A1
00000A76  6100 FAF2               1190      BSR         PrintString
00000A7A                          1191   
00000A7A                          1192      ** print address **
00000A7A  6100 FAC2               1193      BSR         Get_BCC_Displacement_16bit 
00000A7E  6100 FACA               1194      BSR         Get_Current_Address
00000A82  6100 FACE               1195      BSR         Get_BCC_Destination_Address
00000A86  2207                    1196      MOVE.L      D7,D1
00000A88  6100 FACC               1197      BSR         PrintHex
00000A8C                          1198      
00000A8C  6000 0736               1199      BRA         opdec_return
00000A90                          1200  MATCH_CC_MI_32
00000A90                          1201      ** print opcode **
00000A90  43F8 0524               1202      LEA         pr_BCC_MI,A1                
00000A94  6100 FAD4               1203      BSR         PrintString
00000A98                          1204      
00000A98  6100 FAF4               1205      BSR         PrintSizeLONG
00000A9C  43F9 0000116A           1206      LEA         pr_space,A1
00000AA2  6100 FAC6               1207      BSR         PrintString
00000AA6                          1208   
00000AA6                          1209      ** print address **
00000AA6  6100 FA9C               1210      BSR         Get_BCC_Displacement_32bit 
00000AAA  6100 FA9E               1211      BSR         Get_Current_Address
00000AAE  6100 FAA2               1212      BSR         Get_BCC_Destination_Address
00000AB2  2207                    1213      MOVE.L      D7,D1
00000AB4  6100 FAA0               1214      BSR         PrintHex
00000AB8                          1215      
00000AB8  6000 070A               1216      BRA         opdec_return
00000ABC                          1217  MATCH_CC_GE_8
00000ABC                          1218      ** print opcode **
00000ABC  43F8 050C               1219      LEA         pr_BCC_GE,A1                
00000AC0  6100 FAA8               1220      BSR         PrintString
00000AC4                          1221      
00000AC4  6100 FAAC               1222      BSR         PrintSizeBYTE
00000AC8  43F9 0000116A           1223      LEA         pr_space,A1
00000ACE  6100 FA9A               1224      BSR         PrintString
00000AD2                          1225   
00000AD2                          1226      ** print address **
00000AD2  6100 FA64               1227      BSR         Get_BCC_Displacement_8bit 
00000AD6  6100 FA72               1228      BSR         Get_Current_Address
00000ADA  6100 FA76               1229      BSR         Get_BCC_Destination_Address
00000ADE  2207                    1230      MOVE.L      D7,D1
00000AE0  6100 FA74               1231      BSR         PrintHex
00000AE4                          1232      
00000AE4  6000 06DE               1233      BRA         opdec_return
00000AE8                          1234  MATCH_CC_GE_16
00000AE8                          1235      ** print opcode **
00000AE8  43F8 050C               1236      LEA         pr_BCC_GE,A1                
00000AEC  6100 FA7C               1237      BSR         PrintString
00000AF0                          1238      
00000AF0  6100 FA8E               1239      BSR         PrintSizeWORD
00000AF4  43F9 0000116A           1240      LEA         pr_space,A1
00000AFA  6100 FA6E               1241      BSR         PrintString
00000AFE                          1242   
00000AFE                          1243      ** print address **
00000AFE  6100 FA3E               1244      BSR         Get_BCC_Displacement_16bit 
00000B02  6100 FA46               1245      BSR         Get_Current_Address
00000B06  6100 FA4A               1246      BSR         Get_BCC_Destination_Address
00000B0A  2207                    1247      MOVE.L      D7,D1
00000B0C  6100 FA48               1248      BSR         PrintHex
00000B10                          1249      
00000B10  6000 06B2               1250      BRA         opdec_return
00000B14                          1251  MATCH_CC_GE_32
00000B14                          1252      ** print opcode **
00000B14  43F8 050C               1253      LEA         pr_BCC_GE,A1                
00000B18  6100 FA50               1254      BSR         PrintString
00000B1C                          1255      
00000B1C  6100 FA70               1256      BSR         PrintSizeLONG
00000B20  43F9 0000116A           1257      LEA         pr_space,A1
00000B26  6100 FA42               1258      BSR         PrintString
00000B2A                          1259   
00000B2A                          1260      ** print address **
00000B2A  6100 FA18               1261      BSR         Get_BCC_Displacement_32bit 
00000B2E  6100 FA1A               1262      BSR         Get_Current_Address
00000B32  6100 FA1E               1263      BSR         Get_BCC_Destination_Address
00000B36  2207                    1264      MOVE.L      D7,D1
00000B38  6100 FA1C               1265      BSR         PrintHex
00000B3C                          1266      
00000B3C  6000 0686               1267      BRA         opdec_return
00000B40                          1268  MATCH_CC_LT_8
00000B40                          1269      ** print opcode **
00000B40  43F8 0520               1270      LEA         pr_BCC_LT,A1                
00000B44  6100 FA24               1271      BSR         PrintString
00000B48                          1272      
00000B48  6100 FA28               1273      BSR         PrintSizeBYTE
00000B4C  43F9 0000116A           1274      LEA         pr_space,A1
00000B52  6100 FA16               1275      BSR         PrintString
00000B56                          1276   
00000B56                          1277      ** print address **
00000B56  6100 F9E0               1278      BSR         Get_BCC_Displacement_8bit 
00000B5A  6100 F9EE               1279      BSR         Get_Current_Address
00000B5E  6100 F9F2               1280      BSR         Get_BCC_Destination_Address
00000B62  2207                    1281      MOVE.L      D7,D1
00000B64  6100 F9F0               1282      BSR         PrintHex
00000B68                          1283      
00000B68  6000 065A               1284      BRA         opdec_return
00000B6C                          1285  MATCH_CC_LT_16
00000B6C                          1286      ** print opcode **
00000B6C  43F8 0520               1287      LEA         pr_BCC_LT,A1                
00000B70  6100 F9F8               1288      BSR         PrintString
00000B74                          1289      
00000B74  6100 FA0A               1290      BSR         PrintSizeWORD
00000B78  43F9 0000116A           1291      LEA         pr_space,A1
00000B7E  6100 F9EA               1292      BSR         PrintString
00000B82                          1293   
00000B82                          1294      ** print address **
00000B82  6100 F9BA               1295      BSR         Get_BCC_Displacement_16bit 
00000B86  6100 F9C2               1296      BSR         Get_Current_Address
00000B8A  6100 F9C6               1297      BSR         Get_BCC_Destination_Address
00000B8E  2207                    1298      MOVE.L      D7,D1
00000B90  6100 F9C4               1299      BSR         PrintHex
00000B94                          1300      
00000B94  6000 062E               1301      BRA         opdec_return
00000B98                          1302  MATCH_CC_LT_32
00000B98                          1303      ** print opcode **
00000B98  43F8 0520               1304      LEA         pr_BCC_LT,A1                
00000B9C  6100 F9CC               1305      BSR         PrintString
00000BA0                          1306      
00000BA0  6100 F9EC               1307      BSR         PrintSizeLONG
00000BA4  43F9 0000116A           1308      LEA         pr_space,A1
00000BAA  6100 F9BE               1309      BSR         PrintString
00000BAE                          1310   
00000BAE                          1311      ** print address **
00000BAE  6100 F994               1312      BSR         Get_BCC_Displacement_32bit 
00000BB2  6100 F996               1313      BSR         Get_Current_Address
00000BB6  6100 F99A               1314      BSR         Get_BCC_Destination_Address
00000BBA  2207                    1315      MOVE.L      D7,D1
00000BBC  6100 F998               1316      BSR         PrintHex
00000BC0                          1317      
00000BC0  6000 0602               1318      BRA         opdec_return
00000BC4                          1319  MATCH_CC_GT_8
00000BC4                          1320      ** print opcode **
00000BC4  43F8 0510               1321      LEA         pr_BCC_GT,A1                
00000BC8  6100 F9A0               1322      BSR         PrintString
00000BCC                          1323      
00000BCC  6100 F9A4               1324      BSR         PrintSizeBYTE
00000BD0  43F9 0000116A           1325      LEA         pr_space,A1
00000BD6  6100 F992               1326      BSR         PrintString
00000BDA                          1327   
00000BDA                          1328      ** print address **
00000BDA  6100 F95C               1329      BSR         Get_BCC_Displacement_8bit 
00000BDE  6100 F96A               1330      BSR         Get_Current_Address
00000BE2  6100 F96E               1331      BSR         Get_BCC_Destination_Address
00000BE6  2207                    1332      MOVE.L      D7,D1
00000BE8  6100 F96C               1333      BSR         PrintHex
00000BEC                          1334      
00000BEC  6000 05D6               1335      BRA         opdec_return
00000BF0                          1336  MATCH_CC_GT_16
00000BF0                          1337      ** print opcode **
00000BF0  43F8 0510               1338      LEA         pr_BCC_GT,A1                
00000BF4  6100 F974               1339      BSR         PrintString
00000BF8                          1340      
00000BF8  6100 F986               1341      BSR         PrintSizeWORD
00000BFC  43F9 0000116A           1342      LEA         pr_space,A1
00000C02  6100 F966               1343      BSR         PrintString
00000C06                          1344   
00000C06                          1345      ** print address **
00000C06  6100 F936               1346      BSR         Get_BCC_Displacement_16bit 
00000C0A  6100 F93E               1347      BSR         Get_Current_Address
00000C0E  6100 F942               1348      BSR         Get_BCC_Destination_Address
00000C12  2207                    1349      MOVE.L      D7,D1
00000C14  6100 F940               1350      BSR         PrintHex
00000C18                          1351      
00000C18  6000 05AA               1352      BRA         opdec_return
00000C1C                          1353  MATCH_CC_GT_32
00000C1C                          1354      ** print opcode **
00000C1C  43F8 0510               1355      LEA         pr_BCC_GT,A1                
00000C20  6100 F948               1356      BSR         PrintString
00000C24                          1357      
00000C24  6100 F968               1358      BSR         PrintSizeLONG
00000C28  43F9 0000116A           1359      LEA         pr_space,A1
00000C2E  6100 F93A               1360      BSR         PrintString
00000C32                          1361   
00000C32                          1362      ** print address **
00000C32  6100 F910               1363      BSR         Get_BCC_Displacement_32bit 
00000C36  6100 F912               1364      BSR         Get_Current_Address
00000C3A  6100 F916               1365      BSR         Get_BCC_Destination_Address
00000C3E  2207                    1366      MOVE.L      D7,D1
00000C40  6100 F914               1367      BSR         PrintHex
00000C44                          1368      
00000C44  6000 057E               1369      BRA         opdec_return
00000C48                          1370  MATCH_CC_LE_8
00000C48                          1371      ** print opcode **
00000C48  43F8 0518               1372      LEA         pr_BCC_LE,A1                
00000C4C  6100 F91C               1373      BSR         PrintString
00000C50                          1374      
00000C50  6100 F920               1375      BSR         PrintSizeBYTE
00000C54  43F9 0000116A           1376      LEA         pr_space,A1
00000C5A  6100 F90E               1377      BSR         PrintString
00000C5E                          1378   
00000C5E                          1379      ** print address **
00000C5E  6100 F8D8               1380      BSR         Get_BCC_Displacement_8bit 
00000C62  6100 F8E6               1381      BSR         Get_Current_Address
00000C66  6100 F8EA               1382      BSR         Get_BCC_Destination_Address
00000C6A  2207                    1383      MOVE.L      D7,D1
00000C6C  6100 F8E8               1384      BSR         PrintHex
00000C70                          1385      
00000C70  6000 0552               1386      BRA         opdec_return
00000C74                          1387  MATCH_CC_LE_16
00000C74                          1388      ** print opcode **
00000C74  43F8 0518               1389      LEA         pr_BCC_LE,A1                
00000C78  6100 F8F0               1390      BSR         PrintString
00000C7C                          1391      
00000C7C  6100 F902               1392      BSR         PrintSizeWORD
00000C80  43F9 0000116A           1393      LEA         pr_space,A1
00000C86  6100 F8E2               1394      BSR         PrintString
00000C8A                          1395   
00000C8A                          1396      ** print address **
00000C8A  6100 F8B2               1397      BSR         Get_BCC_Displacement_16bit 
00000C8E  6100 F8BA               1398      BSR         Get_Current_Address
00000C92  6100 F8BE               1399      BSR         Get_BCC_Destination_Address
00000C96  2207                    1400      MOVE.L      D7,D1
00000C98  6100 F8BC               1401      BSR         PrintHex
00000C9C                          1402      
00000C9C  6000 0526               1403      BRA         opdec_return
00000CA0                          1404  MATCH_CC_LE_32
00000CA0                          1405      ** print opcode **
00000CA0  43F8 0518               1406      LEA         pr_BCC_LE,A1                
00000CA4  6100 F8C4               1407      BSR         PrintString
00000CA8                          1408      
00000CA8  6100 F8E4               1409      BSR         PrintSizeLONG
00000CAC  43F9 0000116A           1410      LEA         pr_space,A1
00000CB2  6100 F8B6               1411      BSR         PrintString
00000CB6                          1412   
00000CB6                          1413      ** print address **
00000CB6  6100 F88C               1414      BSR         Get_BCC_Displacement_32bit 
00000CBA  6100 F88E               1415      BSR         Get_Current_Address
00000CBE  6100 F892               1416      BSR         Get_BCC_Destination_Address
00000CC2  2207                    1417      MOVE.L      D7,D1
00000CC4  6100 F890               1418      BSR         PrintHex
00000CC8                          1419      
00000CC8  6000 04FA               1420      BRA         opdec_return
00000CCC                          1421  ERROR
00000CCC  43F8 04FA               1422      LEA         pr_ERROR,A1                
00000CD0  6100 F898               1423      BSR         PrintString
00000CD4  6000 04EE               1424      BRA         opdec_return
00000CD8                          1425  
00000CD8                          1426  
00000CD8                          1427  
00000CD8                          1428  -------------------- end include --------------------
00000CD8                          1429                  INCLUDE 'arsany_opcodes.x68'
00000CD8                          1430  MATCH_MOVEA_W
00000CD8                          1431      ** Move command size into D1
00000CD8  123C 0002               1432      MOVE.B      #2,D1
00000CDC                          1433      ** Print command
00000CDC  103C 000E               1434      MOVE.B      #14,D0
00000CE0  43F9 00001180           1435      LEA         pr_MOVEA,A1
00000CE6  4E4F                    1436      TRAP        #15
00000CE8                          1437      ** Print size
00000CE8  43F9 00001171           1438      LEA         pr_WORD,A1
00000CEE  4E4F                    1439      TRAP        #15
00000CF0                          1440      ** Print space
00000CF0  43F9 0000116A           1441      LEA         pr_space,A1
00000CF6  4E4F                    1442      TRAP        #15
00000CF8                          1443      ** Decode right side ea
00000CF8  1002                    1444      MOVE.B      D2,D0
00000CFA  0200 003F               1445      ANDI.B      #%00111111,D0
00000CFE  4EB8 0018               1446      JSR         EADecoder
00000D02                          1447      ** Add comma
00000D02  103C 000E               1448      MOVE.B      #14,D0
00000D06  43F9 0000116C           1449      LEA         pr_comma,A1
00000D0C  4E4F                    1450      TRAP        #15
00000D0E                          1451      ** Decode left side ea
00000D0E  3002                    1452      MOVE.W      D2,D0
00000D10  0240 0FC0               1453      ANDI.W      #%0000111111000000,D0
00000D14  EC88                    1454      LSR.L       #6,D0
00000D16  4EB8 0000               1455      JSR         EADecoder_left
00000D1A                          1456      
00000D1A  6000 04A8               1457      BRA         opdec_return
00000D1E                          1458  MATCH_MOVEA_L
00000D1E                          1459      ** Move command size into D1
00000D1E  123C 0004               1460      MOVE.B      #4,D1
00000D22                          1461      ** Print command
00000D22  103C 000E               1462      MOVE.B      #14,D0
00000D26  43F9 00001180           1463      LEA         pr_MOVEA,A1
00000D2C  4E4F                    1464      TRAP        #15
00000D2E                          1465      ** Print size
00000D2E  43F9 00001174           1466      LEA         pr_LONG,A1
00000D34  4E4F                    1467      TRAP        #15
00000D36                          1468      ** Print space
00000D36  43F9 0000116A           1469      LEA         pr_space,A1
00000D3C  4E4F                    1470      TRAP        #15
00000D3E                          1471      ** Decode right side ea
00000D3E  1002                    1472      MOVE.B      D2,D0
00000D40  0200 003F               1473      ANDI.B      #%00111111,D0
00000D44  4EB8 0018               1474      JSR         EADecoder
00000D48                          1475      ** Add comma
00000D48  103C 000E               1476      MOVE.B      #14,D0
00000D4C  43F9 0000116C           1477      LEA         pr_comma,A1
00000D52  4E4F                    1478      TRAP        #15
00000D54                          1479      ** Decode left side ea
00000D54  3002                    1480      MOVE.W      D2,D0
00000D56  0240 0FC0               1481      ANDI.W      #%0000111111000000,D0
00000D5A  EC88                    1482      LSR.L       #6,D0
00000D5C  4EB8 0000               1483      JSR         EADecoder_left
00000D60                          1484      
00000D60  6000 0462               1485      BRA         opdec_return
00000D64                          1486  MATCH_ADDA_W
00000D64                          1487      ** Move command size into D1
00000D64  123C 0002               1488      MOVE.B      #2,D1
00000D68                          1489      ** Print command
00000D68  103C 000E               1490      MOVE.B      #14,D0
00000D6C  43F9 0000118C           1491      LEA         pr_ADDA,A1
00000D72  4E4F                    1492      TRAP        #15
00000D74                          1493      ** Print size
00000D74  43F9 00001171           1494      LEA         pr_WORD,A1
00000D7A  4E4F                    1495      TRAP        #15
00000D7C                          1496      ** Print space
00000D7C  43F9 0000116A           1497      LEA         pr_space,A1
00000D82  4E4F                    1498      TRAP        #15
00000D84                          1499      ** Decode right side ea
00000D84  1002                    1500      MOVE.B      D2,D0
00000D86  0200 003F               1501      ANDI.B      #%00111111,D0
00000D8A  4EB8 0018               1502      JSR         EADecoder
00000D8E                          1503      ** Add comma
00000D8E  103C 000E               1504      MOVE.B      #14,D0
00000D92  43F9 0000116C           1505      LEA         pr_comma,A1
00000D98  4E4F                    1506      TRAP        #15
00000D9A                          1507      ** Decode left side ea
00000D9A  3002                    1508      MOVE.W      D2,D0
00000D9C  0240 0FC0               1509      ANDI.W      #%0000111111000000,D0
00000DA0  EC88                    1510      LSR.L       #6,D0
00000DA2  4EB8 0000               1511      JSR         EADecoder_left
00000DA6                          1512      
00000DA6  6000 041C               1513      BRA         opdec_return
00000DAA                          1514  MATCH_ADDA_L
00000DAA                          1515      ** Move command size into D1
00000DAA  123C 0004               1516      MOVE.B      #4,D1
00000DAE                          1517      ** Print command
00000DAE  103C 000E               1518      MOVE.B      #14,D0
00000DB2  43F9 0000118C           1519      LEA         pr_ADDA,A1
00000DB8  4E4F                    1520      TRAP        #15
00000DBA                          1521      ** Print size
00000DBA  43F9 00001174           1522      LEA         pr_LONG,A1
00000DC0  4E4F                    1523      TRAP        #15
00000DC2                          1524      ** Print space
00000DC2  43F9 0000116A           1525      LEA         pr_space,A1
00000DC8  4E4F                    1526      TRAP        #15
00000DCA                          1527      ** Decode right side ea
00000DCA  1002                    1528      MOVE.B      D2,D0
00000DCC  0200 003F               1529      ANDI.B      #%00111111,D0
00000DD0  4EB8 0018               1530      JSR         EADecoder
00000DD4                          1531      ** Add comma
00000DD4  103C 000E               1532      MOVE.B      #14,D0
00000DD8  43F9 0000116C           1533      LEA         pr_comma,A1
00000DDE  4E4F                    1534      TRAP        #15
00000DE0                          1535      ** Decode left side ea
00000DE0  3002                    1536      MOVE.W      D2,D0
00000DE2  0240 0FC0               1537      ANDI.W      #%0000111111000000,D0
00000DE6  EC88                    1538      LSR.L       #6,D0
00000DE8  4EB8 0000               1539      JSR         EADecoder_left
00000DEC                          1540      
00000DEC  6000 03D6               1541      BRA         opdec_return
00000DF0                          1542  MATCH_MULS_W
00000DF0                          1543      ** Move command size into D1
00000DF0  123C 0002               1544      MOVE.B      #2,D1
00000DF4                          1545      ** Print command
00000DF4  103C 000E               1546      MOVE.B      #14,D0
00000DF8  43F9 00001191           1547      LEA         pr_MULS,A1
00000DFE  4E4F                    1548      TRAP        #15
00000E00                          1549      ** Print size
00000E00  43F9 00001171           1550      LEA         pr_WORD,A1
00000E06  4E4F                    1551      TRAP        #15
00000E08                          1552      ** Print space
00000E08  43F9 0000116A           1553      LEA         pr_space,A1
00000E0E  4E4F                    1554      TRAP        #15
00000E10                          1555      ** Decode right side ea
00000E10  1002                    1556      MOVE.B      D2,D0
00000E12  0200 003F               1557      ANDI.B      #%00111111,D0
00000E16  4EB8 0018               1558      JSR         EADecoder
00000E1A                          1559      ** Add comma
00000E1A  103C 000E               1560      MOVE.B      #14,D0
00000E1E  43F9 0000116C           1561      LEA         pr_comma,A1
00000E24  4E4F                    1562      TRAP        #15
00000E26                          1563      ** Decode left side ea
00000E26  3002                    1564      MOVE.W      D2,D0
00000E28  0240 0FC0               1565      ANDI.W      #%0000111111000000,D0
00000E2C  EC88                    1566      LSR.L       #6,D0
00000E2E  4EB8 0000               1567      JSR         EADecoder_left    
00000E32                          1568      
00000E32  6000 0390               1569      BRA         opdec_return
00000E36                          1570  MATCH_RTS
00000E36  43F9 0000119A           1571      LEA         pr_RTS,A1
00000E3C  103C 000E               1572      MOVE.B      #14,D0
00000E40  4E4F                    1573      TRAP        #15
00000E42  6000 0380               1574      BRA         opdec_return
00000E46                          1575  MATCH_CMP_B
00000E46                          1576      ** Move command size into D1
00000E46  123C 0002               1577      MOVE.B      #2,D1
00000E4A                          1578      ** Print command
00000E4A  103C 000E               1579      MOVE.B      #14,D0
00000E4E  43F9 0000119E           1580      LEA         pr_CMP,A1
00000E54  4E4F                    1581      TRAP        #15
00000E56                          1582      ** Print size
00000E56  43F9 0000116E           1583      LEA         pr_BYTE,A1
00000E5C  4E4F                    1584      TRAP        #15
00000E5E                          1585      ** Print space
00000E5E  43F9 0000116A           1586      LEA         pr_space,A1
00000E64  4E4F                    1587      TRAP        #15
00000E66                          1588      ** Decode right side ea
00000E66  1002                    1589      MOVE.B      D2,D0
00000E68  0200 003F               1590      ANDI.B      #%00111111,D0
00000E6C  4EB8 0018               1591      JSR         EADecoder
00000E70                          1592      ** Add comma
00000E70  103C 000E               1593      MOVE.B      #14,D0
00000E74  43F9 0000116C           1594      LEA         pr_comma,A1
00000E7A  4E4F                    1595      TRAP        #15
00000E7C                          1596      ** Decode left side ea
00000E7C  3002                    1597      MOVE.W      D2,D0
00000E7E  0240 0E00               1598      ANDI.W      #%0000111000000000,D0
00000E82  EC88                    1599      LSR.L       #6,D0
00000E84  4EB8 0000               1600      JSR         EADecoder_left   
00000E88                          1601      
00000E88  6000 033A               1602      BRA         opdec_return
00000E8C                          1603  MATCH_CMP_W
00000E8C                          1604      ** Move command size into D1
00000E8C  123C 0002               1605      MOVE.B      #2,D1
00000E90                          1606      ** Print command
00000E90  103C 000E               1607      MOVE.B      #14,D0
00000E94  43F9 0000119E           1608      LEA         pr_CMP,A1
00000E9A  4E4F                    1609      TRAP        #15
00000E9C                          1610      ** Print size
00000E9C  43F9 00001171           1611      LEA         pr_WORD,A1
00000EA2  4E4F                    1612      TRAP        #15
00000EA4                          1613      ** Print space
00000EA4  43F9 0000116A           1614      LEA         pr_space,A1
00000EAA  4E4F                    1615      TRAP        #15
00000EAC  4240                    1616      CLR         D0
00000EAE                          1617      ** Decode right side ea
00000EAE  1002                    1618      MOVE.B      D2,D0
00000EB0  0200 003F               1619      ANDI.B      #%00111111,D0
00000EB4  4EB8 0018               1620      JSR         EADecoder
00000EB8                          1621      ** Add comma
00000EB8  103C 000E               1622      MOVE.B      #14,D0
00000EBC  43F9 0000116C           1623      LEA         pr_comma,A1
00000EC2  4E4F                    1624      TRAP        #15
00000EC4                          1625      ** Decode left side ea
00000EC4  3002                    1626      MOVE.W      D2,D0
00000EC6  0240 0E00               1627      ANDI.W      #%0000111000000000,D0
00000ECA  EC88                    1628      LSR.L       #6,D0
00000ECC  4EB8 0000               1629      JSR         EADecoder_left   
00000ED0                          1630      
00000ED0  6000 02F2               1631      BRA         opdec_return
00000ED4                          1632  MATCH_CMP_L
00000ED4                          1633      ** Move command size into D1
00000ED4  123C 0004               1634      MOVE.B      #4,D1
00000ED8                          1635      ** Print command
00000ED8  103C 000E               1636      MOVE.B      #14,D0
00000EDC  43F9 0000119E           1637      LEA         pr_CMP,A1
00000EE2  4E4F                    1638      TRAP        #15
00000EE4                          1639      ** Print size
00000EE4  43F9 00001174           1640      LEA         pr_LONG,A1
00000EEA  4E4F                    1641      TRAP        #15
00000EEC                          1642      ** Print space
00000EEC  43F9 0000116A           1643      LEA         pr_space,A1
00000EF2  4E4F                    1644      TRAP        #15
00000EF4                          1645      ** Decode right side ea
00000EF4  1002                    1646      MOVE.B      D2,D0
00000EF6  0200 003F               1647      ANDI.B      #%00111111,D0
00000EFA  4EB8 0018               1648      JSR         EADecoder
00000EFE                          1649      ** Add comma
00000EFE  103C 000E               1650      MOVE.B      #14,D0
00000F02  43F9 0000116C           1651      LEA         pr_comma,A1
00000F08  4E4F                    1652      TRAP        #15
00000F0A                          1653      ** Decode left side ea
00000F0A  3002                    1654      MOVE.W      D2,D0
00000F0C  0240 0E00               1655      ANDI.W      #%0000111000000000,D0
00000F10  EC88                    1656      LSR.L       #6,D0
00000F12  4EB8 0000               1657      JSR         EADecoder_left     
00000F16                          1658      
00000F16  6000 02AC               1659      BRA         opdec_return
00000F1A                          1660  MATCH_JSR
00000F1A                          1661      ** Print command
00000F1A  103C 000E               1662      MOVE.B      #14,D0
00000F1E  43F9 000011A2           1663      LEA         pr_JSR,A1
00000F24  4E4F                    1664      TRAP        #15
00000F26                          1665      ** Print space
00000F26  43F9 0000116A           1666      LEA         pr_space,A1
00000F2C  4E4F                    1667      TRAP        #15
00000F2E                          1668      ** Decode right side ea
00000F2E  1002                    1669      MOVE.B      D2,D0
00000F30  0200 003F               1670      ANDI.B      #%00111111,D0
00000F34  4EB8 0018               1671      JSR         EADecoder 
00000F38                          1672      
00000F38  6000 028A               1673      BRA         opdec_return
00000F3C                          1674  MATCH_CLR_B 
00000F3C                          1675      ** Move command size into D1
00000F3C  123C 0002               1676      MOVE.B      #2,D1
00000F40                          1677      ** Print command
00000F40  103C 000E               1678      MOVE.B      #14,D0
00000F44  43F9 00001196           1679      LEA         pr_CLR,A1
00000F4A  4E4F                    1680      TRAP        #15
00000F4C                          1681      ** Print size
00000F4C  43F9 0000116E           1682      LEA         pr_BYTE,A1
00000F52  4E4F                    1683      TRAP        #15
00000F54                          1684      ** Print space
00000F54  43F9 0000116A           1685      LEA         pr_space,A1
00000F5A  4E4F                    1686      TRAP        #15
00000F5C                          1687      ** Decode right side ea
00000F5C  1002                    1688      MOVE.B      D2,D0
00000F5E  0200 003F               1689      ANDI.B      #%00111111,D0
00000F62  4EB8 0018               1690      JSR         EADecoder
00000F66                          1691      
00000F66  6000 025C               1692      BRA         opdec_return
00000F6A                          1693  MATCH_CLR_W
00000F6A                          1694      ** Move command size into D1
00000F6A  123C 0002               1695      MOVE.B      #2,D1
00000F6E                          1696      ** Print command
00000F6E  103C 000E               1697      MOVE.B      #14,D0
00000F72  43F9 00001196           1698      LEA         pr_CLR,A1
00000F78  4E4F                    1699      TRAP        #15
00000F7A                          1700      ** Print size
00000F7A  43F9 00001171           1701      LEA         pr_WORD,A1
00000F80  4E4F                    1702      TRAP        #15
00000F82                          1703      ** Print space
00000F82  43F9 0000116A           1704      LEA         pr_space,A1
00000F88  4E4F                    1705      TRAP        #15
00000F8A                          1706      ** Decode right side ea
00000F8A  1002                    1707      MOVE.B      D2,D0
00000F8C  0200 003F               1708      ANDI.B      #%00111111,D0
00000F90  4EB8 0018               1709      JSR         EADecoder 
00000F94                          1710      
00000F94  6000 022E               1711      BRA         opdec_return
00000F98                          1712  MATCH_CLR_L
00000F98                          1713      ** Move command size into D1
00000F98  123C 0004               1714      MOVE.B      #4,D1
00000F9C                          1715      ** Print command
00000F9C  103C 000E               1716      MOVE.B      #14,D0
00000FA0  43F9 00001196           1717      LEA         pr_CLR,A1
00000FA6  4E4F                    1718      TRAP        #15
00000FA8                          1719      ** Print size
00000FA8  43F9 00001174           1720      LEA         pr_LONG,A1
00000FAE  4E4F                    1721      TRAP        #15
00000FB0                          1722      ** Print space
00000FB0  43F9 0000116A           1723      LEA         pr_space,A1
00000FB6  4E4F                    1724      TRAP        #15
00000FB8                          1725      ** Decode right side ea
00000FB8  1002                    1726      MOVE.B      D2,D0
00000FBA  0200 003F               1727      ANDI.B      #%00111111,D0
00000FBE  4EB8 0018               1728      JSR         EADecoder 
00000FC2                          1729      
00000FC2  6000 0200               1730      BRA         opdec_return
00000FC6                          1731  MATCH_AND_DN_B
00000FC6                          1732      ** Move command size into D1
00000FC6  123C 0002               1733      MOVE.B      #2,D1
00000FCA                          1734      ** Print command
00000FCA  103C 000E               1735      MOVE.B      #14,D0
00000FCE  43F9 000011A6           1736      LEA         pr_AND,A1
00000FD4  4E4F                    1737      TRAP        #15
00000FD6                          1738      ** Print size
00000FD6  43F9 0000116E           1739      LEA         pr_BYTE,A1
00000FDC  4E4F                    1740      TRAP        #15
00000FDE                          1741      ** Print space
00000FDE  43F9 0000116A           1742      LEA         pr_space,A1
00000FE4  4E4F                    1743      TRAP        #15
00000FE6                          1744      ** Decode right side ea
00000FE6  1002                    1745      MOVE.B      D2,D0
00000FE8  0200 003F               1746      ANDI.B      #%00111111,D0
00000FEC  4EB8 0018               1747      JSR         EADecoder
00000FF0                          1748      ** Add comma
00000FF0  103C 000E               1749      MOVE.B      #14,D0
00000FF4  43F9 0000116C           1750      LEA         pr_comma,A1
00000FFA  4E4F                    1751      TRAP        #15
00000FFC                          1752      ** Decode left side ea
00000FFC  3002                    1753      MOVE.W      D2,D0
00000FFE  0240 0E00               1754      ANDI.W      #%0000111000000000,D0
00001002  EC88                    1755      LSR.L       #6,D0
00001004  4EB8 0000               1756      JSR         EADecoder_left   
00001008                          1757      
00001008  6000 01BA               1758      BRA         opdec_return
0000100C                          1759  MATCH_AND_DN_W
0000100C                          1760      ** Move command size into D1
0000100C  123C 0002               1761      MOVE.B      #2,D1
00001010                          1762      ** Print command
00001010  103C 000E               1763      MOVE.B      #14,D0
00001014  43F9 000011A6           1764      LEA         pr_AND,A1
0000101A  4E4F                    1765      TRAP        #15
0000101C                          1766      ** Print size
0000101C  43F9 00001171           1767      LEA         pr_WORD,A1
00001022  4E4F                    1768      TRAP        #15
00001024                          1769      ** Print space
00001024  43F9 0000116A           1770      LEA         pr_space,A1
0000102A  4E4F                    1771      TRAP        #15
0000102C                          1772      ** Decode right side ea
0000102C  1002                    1773      MOVE.B      D2,D0
0000102E  0200 003F               1774      ANDI.B      #%00111111,D0
00001032  4EB8 0018               1775      JSR         EADecoder
00001036                          1776      ** Add comma
00001036  103C 000E               1777      MOVE.B      #14,D0
0000103A  43F9 0000116C           1778      LEA         pr_comma,A1
00001040  4E4F                    1779      TRAP        #15
00001042                          1780      ** Decode left side ea
00001042  3002                    1781      MOVE.W      D2,D0
00001044  0240 0E00               1782      ANDI.W      #%0000111000000000,D0
00001048  EC88                    1783      LSR.L       #6,D0
0000104A  4EB8 0000               1784      JSR         EADecoder_left  
0000104E                          1785      
0000104E  6000 0174               1786      BRA         opdec_return
00001052                          1787  MATCH_AND_DN_L
00001052                          1788      ** Move command size into D1
00001052  123C 0004               1789      MOVE.B      #4,D1
00001056                          1790      ** Print command
00001056  103C 000E               1791      MOVE.B      #14,D0
0000105A  43F9 000011A6           1792      LEA         pr_AND,A1
00001060  4E4F                    1793      TRAP        #15
00001062                          1794      ** Print size
00001062  43F9 00001174           1795      LEA         pr_LONG,A1
00001068  4E4F                    1796      TRAP        #15
0000106A                          1797      ** Print space
0000106A  43F9 0000116A           1798      LEA         pr_space,A1
00001070  4E4F                    1799      TRAP        #15
00001072                          1800      ** Decode right side ea
00001072  1002                    1801      MOVE.B      D2,D0
00001074  0200 003F               1802      ANDI.B      #%00111111,D0
00001078  4EB8 0018               1803      JSR         EADecoder
0000107C                          1804      ** Add comma
0000107C  103C 000E               1805      MOVE.B      #14,D0
00001080  43F9 0000116C           1806      LEA         pr_comma,A1
00001086  4E4F                    1807      TRAP        #15
00001088                          1808      ** Decode left side ea
00001088  3002                    1809      MOVE.W      D2,D0
0000108A  0240 0E00               1810      ANDI.W      #%0000111000000000,D0
0000108E  EC88                    1811      LSR.L       #6,D0
00001090  4EB8 0000               1812      JSR         EADecoder_left  
00001094                          1813      
00001094  6000 012E               1814      BRA         opdec_return
00001098                          1815      
00001098                          1816  MATCH_AND_EA_B
00001098                          1817      ** Move command size into D1
00001098  123C 0002               1818      MOVE.B      #2,D1
0000109C                          1819      ** Print command
0000109C  103C 000E               1820      MOVE.B      #14,D0
000010A0  43F9 000011A6           1821      LEA         pr_AND,A1
000010A6  4E4F                    1822      TRAP        #15
000010A8                          1823      ** Print size
000010A8  43F9 0000116E           1824      LEA         pr_BYTE,A1
000010AE  4E4F                    1825      TRAP        #15
000010B0                          1826      ** Print space
000010B0  43F9 0000116A           1827      LEA         pr_space,A1
000010B6  4E4F                    1828      TRAP        #15
000010B8                          1829      ** Decode left side ea
000010B8  3002                    1830      MOVE.W      D2,D0
000010BA  0240 0E00               1831      ANDI.W      #%0000111000000000,D0
000010BE  EC88                    1832      LSR.L       #6,D0
000010C0  4EB8 0000               1833      JSR         EADecoder_left
000010C4                          1834      ** Add comma
000010C4  103C 000E               1835      MOVE.B      #14,D0
000010C8  43F9 0000116C           1836      LEA         pr_comma,A1
000010CE  4E4F                    1837      TRAP        #15
000010D0                          1838      ** Decode right side ea
000010D0  1002                    1839      MOVE.B      D2,D0
000010D2  0200 003F               1840      ANDI.B      #%00111111,D0
000010D6  4EB8 0018               1841      JSR         EADecoder
000010DA                          1842      
000010DA  6000 00E8               1843      BRA         opdec_return
000010DE                          1844  MATCH_AND_EA_W
000010DE                          1845      ** Move command size into D1
000010DE  123C 0002               1846      MOVE.B      #2,D1
000010E2                          1847      ** Print command
000010E2  103C 000E               1848      MOVE.B      #14,D0
000010E6  43F9 000011A6           1849      LEA         pr_AND,A1
000010EC  4E4F                    1850      TRAP        #15
000010EE                          1851      ** Print size
000010EE  43F9 00001171           1852      LEA         pr_WORD,A1
000010F4  4E4F                    1853      TRAP        #15
000010F6                          1854      ** Print space
000010F6  43F9 0000116A           1855      LEA         pr_space,A1
000010FC  4E4F                    1856      TRAP        #15
000010FE                          1857      ** Decode left side ea
000010FE  3002                    1858      MOVE.W      D2,D0
00001100  0240 0E00               1859      ANDI.W      #%0000111000000000,D0
00001104  EC88                    1860      LSR.L       #6,D0
00001106  4EB8 0000               1861      JSR         EADecoder_left
0000110A                          1862      ** Add comma
0000110A  103C 000E               1863      MOVE.B      #14,D0
0000110E  43F9 0000116C           1864      LEA         pr_comma,A1
00001114  4E4F                    1865      TRAP        #15
00001116                          1866      ** Decode right side ea
00001116  1002                    1867      MOVE.B      D2,D0
00001118  0200 003F               1868      ANDI.B      #%00111111,D0
0000111C  4EB8 0018               1869      JSR         EADecoder
00001120                          1870      
00001120  6000 00A2               1871      BRA         opdec_return
00001124                          1872  MATCH_AND_EA_L
00001124                          1873      ** Move command size into D1
00001124  123C 0004               1874      MOVE.B      #4,D1
00001128                          1875      ** Print command
00001128  103C 000E               1876      MOVE.B      #14,D0
0000112C  43F9 000011A6           1877      LEA         pr_AND,A1
00001132  4E4F                    1878      TRAP        #15
00001134                          1879      ** Print size
00001134  43F9 00001174           1880      LEA         pr_LONG,A1
0000113A  4E4F                    1881      TRAP        #15
0000113C                          1882      ** Print space
0000113C  43F9 0000116A           1883      LEA         pr_space,A1
00001142  4E4F                    1884      TRAP        #15
00001144                          1885      ** Decode left side ea
00001144  3002                    1886      MOVE.W      D2,D0
00001146  0240 0E00               1887      ANDI.W      #%0000111000000000,D0
0000114A  EC88                    1888      LSR.L       #6,D0
0000114C  4EB8 0000               1889      JSR         EADecoder_left
00001150                          1890      ** Add comma
00001150  103C 000E               1891      MOVE.B      #14,D0
00001154  43F9 0000116C           1892      LEA         pr_comma,A1
0000115A  4E4F                    1893      TRAP        #15
0000115C                          1894      ** Decode right side ea
0000115C  1002                    1895      MOVE.B      D2,D0
0000115E  0200 003F               1896      ANDI.B      #%00111111,D0
00001162  4EB8 0018               1897      JSR         EADecoder
00001166                          1898      
00001166  6000 005C               1899      BRA         opdec_return
0000116A                          1900  
0000116A                          1901  
0000116A                          1902  
0000116A                          1903  
0000116A                          1904  
0000116A                          1905  -------------------- end include --------------------
0000116A                          1906  
0000116A  =00004E71               1907  NOP             EQU $4E71
0000116A  =00000001               1908  MOVE_B          EQU %0001
0000116A  =00000003               1909  MOVE_W          EQU %0011
0000116A  =00000002               1910  MOVE_L          EQU %0010
0000116A  =00000001               1911  MOVEA_WL        EQU %001 
0000116A  =00000007               1912  MOVEQ_          EQU %0111
0000116A  =00000122               1913  MOVEM_TO_MEM_W  EQU %0100100010
0000116A  =00000123               1914  MOVEM_TO_MEM_L  EQU %0100100011
0000116A  =00000132               1915  MOVEM_TO_REG_W  EQU %0100110010
0000116A  =00000133               1916  MOVEM_TO_REG_L  EQU %0100110011
0000116A                          1917  
0000116A  =00000018               1918  ADDI_B          EQU %0000011000
0000116A  =00000019               1919  ADDI_W          EQU %0000011001
0000116A  =0000001A               1920  ADDI_L          EQU %0000011010
0000116A                          1921  
0000116A  =0000000D               1922  ADD_ADDA        EQU %1101
0000116A  =00000000               1923  ADD_TO_REG_B    EQU %000
0000116A  =00000001               1924  ADD_TO_REG_W    EQU %001
0000116A  =00000002               1925  ADD_TO_REG_L    EQU %010
0000116A  =00000004               1926  ADD_TO_EA_B     EQU %100
0000116A  =00000005               1927  ADD_TO_EA_W     EQU %101
0000116A  =00000006               1928  ADD_TO_EA_L     EQU %110
0000116A  =00000003               1929  ADDA_W          EQU %011
0000116A  =00000007               1930  ADDA_L          EQU %111
0000116A                          1931  
0000116A  =00000005               1932  ADDQ            EQU %0101
0000116A  =00000000               1933  ADDQ_B          EQU %000
0000116A  =00000001               1934  ADDQ_W          EQU %001
0000116A  =00000002               1935  ADDQ_L          EQU %010
0000116A                          1936  
0000116A  =0000000C               1937  MULS_W_AND      EQU %1100
0000116A  =00000007               1938  MULS_OP_W       EQU %111 
0000116A                          1939  
0000116A  =00000009               1940  SUB             EQU %1001
0000116A  =00000000               1941  SUB_TO_DN_B     EQU %000
0000116A  =00000001               1942  SUB_TO_DN_W     EQU %001
0000116A  =00000002               1943  SUB_TO_DN_L     EQU %010
0000116A  =00000004               1944  SUB_TO_EA_B     EQU %100
0000116A  =00000005               1945  SUB_TO_EA_W     EQU %101
0000116A  =00000006               1946  SUB_TO_EA_L     EQU %110
0000116A                          1947  
0000116A  =00000008               1948  DIVU_OR         EQU %1000
0000116A  =00000003               1949  DIVU            EQU %011
0000116A                          1950  
0000116A  =00000000               1951  DN_B            EQU %000
0000116A  =00000001               1952  DN_W            EQU %001
0000116A  =00000002               1953  DN_L            EQU %010
0000116A  =00000004               1954  EA_B            EQU %100
0000116A  =00000005               1955  EA_W            EQU %101
0000116A  =00000006               1956  EA_L            EQU %110
0000116A                          1957  
0000116A  =00000004               1958  MULS_LEA_CLR_JSR_RTS    EQU %0100
0000116A  =00004E75               1959  RTS             EQU $4E75
0000116A  =00000007               1960  LEA             EQU %111
0000116A  =0000013A               1961  JSR             EQU %0100111010
0000116A  =00000108               1962  CLR_B           EQU %0100001000
0000116A  =00000109               1963  CLR_W           EQU %0100001001
0000116A  =0000010A               1964  CLR_L           EQU %0100001010
0000116A  =00000130               1965  MULS_L          EQU %0100110000
0000116A                          1966  
0000116A  =0000038F               1967  LSL             EQU %1110001111
0000116A  =0000038B               1968  LSR             EQU %1110001011
0000116A  =00000387               1969  ASR             EQU %1110000111
0000116A  =00000383               1970  ASL             EQU %1110000011
0000116A  =0000039F               1971  ROL             EQU %1110011111
0000116A  =0000039B               1972  ROR             EQU %1110011011
0000116A                          1973  
0000116A  =0000000B               1974  CMP             EQU %1011
0000116A  =00000000               1975  CMP_B           EQU %000
0000116A  =00000001               1976  CMP_W           EQU %001
0000116A  =00000002               1977  CMP_L           EQU %010
0000116A                          1978  
0000116A  =00000006               1979  BCC             EQU %0110
0000116A  =00000000               1980  BCC_16          EQU %00000000
0000116A  =000000FF               1981  BCC_32          EQU $FF
0000116A  =00000000               1982  CC_T                EQU %0000
0000116A  =00000001               1983  CC_F                EQU %0001
0000116A  =00000002               1984  CC_HI           EQU %0010
0000116A  =00000003               1985  CC_LS           EQU %0011
0000116A  =00000004               1986  CC_CC           EQU %0100
0000116A  =00000005               1987  CC_CS           EQU %0101
0000116A  =00000006               1988  CC_NE           EQU %0110
0000116A  =00000007               1989  CC_EQ           EQU %0111
0000116A  =00000008               1990  CC_VC           EQU %1000
0000116A  =00000009               1991  CC_VS           EQU %1001
0000116A  =0000000A               1992  CC_PL           EQU %1010
0000116A  =0000000B               1993  CC_MI           EQU %1011
0000116A  =0000000C               1994  CC_GE           EQU %1100
0000116A  =0000000D               1995  CC_LT           EQU %1101
0000116A  =0000000E               1996  CC_GT           EQU %1110
0000116A  =0000000F               1997  CC_LE           EQU %1111
0000116A                          1998  
0000116A                          1999  *** Common strings for printing
0000116A= 20 00                   2000  pr_space    DC.B    ' ',0
0000116C= 2C 00                   2001  pr_comma    DC.B    ',',0
0000116E= 2E 42 00                2002  pr_BYTE     DC.B    '.B',0
00001171= 2E 57 00                2003  pr_WORD     DC.B    '.W',0
00001174= 2E 4C 00                2004  pr_LONG     DC.B    '.L',0
00001177                          2005  
00001177                          2006  ** Command strings constants
00001177= 4E 4F 50 00             2007  pr_NOP      DC.B    'NOP',0
0000117B= 4D 4F 56 45 00          2008  pr_MOVE     DC.B    'MOVE',0
00001180= 4D 4F 56 45 41 00       2009  pr_MOVEA    DC.B    'MOVEA',0
00001186= 4D 4F 56 45 4D 00       2010  pr_MOVEM    DC.B    'MOVEM',0
0000118C= 41 44 44 41 00          2011  pr_ADDA     DC.B    'ADDA',0
00001191= 4D 55 4C 53 00          2012  pr_MULS     DC.B    'MULS',0
00001196= 43 4C 52 00             2013  pr_CLR      DC.B    'CLR',0
0000119A= 52 54 53 00             2014  pr_RTS      DC.B    'RTS',0
0000119E= 43 4D 50 00             2015  pr_CMP      DC.B    'CMP',0
000011A2= 4A 53 52 00             2016  pr_JSR      DC.B    'JSR',0
000011A6= 41 4E 44 00             2017  pr_AND      DC.B    'AND',0
000011AA                          2018  
000011AA                          2019  ********************************
000011AA                          2020  ** BEGIN OpDecoder SUBROUTINE **
000011AA                          2021  ********************************
000011AA                          2022  
000011AA                          2023  * A0 = INPUT    Decoder pointer; Persistant
000011AA                          2024  * D2 = INPUT    Read opcode word
000011AA                          2025  
000011AA                          2026  OpDecoder
000011AA  48E7 FF7E               2027      MOVEM.L     D0-D7/A1-A6, -(SP)
000011AE  4241                    2028      CLR         D1
000011B0  6000 0078               2029      BRA         CHECK_NOP
000011B4                          2030  NOP_RETURN
000011B4  6000 0082               2031      BRA         CHECK_FOUR_BIT_SIG
000011B8                          2032  FOUR_BIT_RETURN
000011B8  6000 0434               2033      BRA         CHECK_MOVEM
000011BC                          2034  MOVEM_RETURN
000011BC  6000 04D8               2035      BRA         CHECK_ADDI
000011C0                          2036  ADDI_RETURN
000011C0  6000 0028               2037      BRA         CHECK_SHIFT_AND_ROTATE
000011C4                          2038      
000011C4                          2039  opdec_return
000011C4  4CDF 7EFF               2040      MOVEM.L     (SP)+, D0-D7/A1-A6
000011C8  4E75                    2041      RTS
000011CA                          2042  
000011CA                          2043  *****************************
000011CA                          2044  *   HELPER FUNCTIONS        *
000011CA                          2045  *****************************
000011CA                          2046  ReadFirstFourBits
000011CA                          2047  
000011CA  48A7 2000               2048      MOVEM.W     D2, -(SP)
000011CE                          2049  
000011CE  1E3C 000C               2050      MOVE.B      #12,D7 
000011D2  EE6A                    2051      LSR.W       D7,D2 
000011D4  1602                    2052      MOVE.B      D2,D3
000011D6                          2053      
000011D6  4C9F 0004               2054      MOVEM.W     (SP)+,D2
000011DA  4E75                    2055      RTS
000011DC                          2056      
000011DC                          2057  *************************
000011DC                          2058  ReadFirstTenBits
000011DC                          2059      
000011DC  48A7 2000               2060      MOVEM.W     D2, -(SP)
000011E0                          2061   
000011E0  EC4A                    2062      LSR.W       #6,D2 
000011E2  3602                    2063      MOVE.W      D2,D3
000011E4                          2064      
000011E4  4C9F 0004               2065      MOVEM.W     (SP)+,D2
000011E8  4E75                    2066      RTS
000011EA                          2067  *************************
000011EA                          2068  CHECK_SHIFT_AND_ROTATE
000011EA                          2069  
000011EA  61F0                    2070      BSR         ReadFirstTenBits
000011EC                          2071      
000011EC  3C3C 038F               2072      MOVE.W      #LSL,D6
000011F0  BC43                    2073      CMP.W       D3,D6
000011F2  6700 0568               2074      BEQ         MATCH_LSL
000011F6                          2075      
000011F6  3C3C 038B               2076      MOVE.W      #LSR,D6
000011FA  BC43                    2077      CMP.W       D3,D6
000011FC  6700 0560               2078      BEQ         MATCH_LSR
00001200                          2079      
00001200  3C3C 0387               2080      MOVE.W      #ASR,D6
00001204  BC43                    2081      CMP.W       D3,D6
00001206  6700 0558               2082      BEQ         MATCH_ASR
0000120A                          2083      
0000120A  3C3C 0383               2084      MOVE.W      #ASL,D6
0000120E  BC43                    2085      CMP.W       D3,D6
00001210  6700 0550               2086      BEQ         MATCH_ASL
00001214                          2087      
00001214  3C3C 039F               2088      MOVE.W      #ROL,D6
00001218  BC43                    2089      CMP.W       D3,D6
0000121A  6700 0548               2090      BEQ         MATCH_ROL
0000121E                          2091      
0000121E  3C3C 039B               2092      MOVE.W      #ROR,D6
00001222  BC43                    2093      CMP.W       D3,D6
00001224  6700 0540               2094      BEQ         MATCH_ROR
00001228                          2095      
00001228  609A                    2096      BRA         opdec_return
0000122A                          2097      
0000122A                          2098  *************************
0000122A                          2099  CHECK_NOP
0000122A                          2100      
0000122A  3C3C 4E71               2101      MOVE.W      #NOP,D6
0000122E  BC42                    2102      CMP.W       D2,D6
00001230  6700 EF16               2103      BEQ         MATCH_NOP
00001234                          2104      
00001234  6000 FF7E               2105      BRA         NOP_RETURN
00001238                          2106  
00001238                          2107  *************************
00001238                          2108  CHECK_FOUR_BIT_SIG
00001238                          2109  
00001238  6190                    2110      BSR         ReadFirstFourBits
0000123A                          2111      
0000123A  1C3C 0001               2112      MOVE.B      #MOVE_B,D6
0000123E  BC03                    2113      CMP.B       D3,D6
00001240  6700 EF16               2114      BEQ         MATCH_MOVE_B
00001244                          2115  
00001244  1C3C 0003               2116      MOVE.B      #MOVE_W,D6
00001248  BC03                    2117      CMP.B       D3,D6
0000124A  6700 04B0               2118      BEQ         CHECK_MOVEA_W_AND_MOVE_W
0000124E                          2119      
0000124E  1C3C 0002               2120      MOVE.B      #MOVE_L,D6
00001252  BC03                    2121      CMP.B       D3,D6
00001254  6700 04D0               2122      BEQ         CHECK_MOVEA_L_AND_MOVE_L
00001258                          2123   
00001258  1C3C 0007               2124      MOVE.B      #MOVEQ_,D6
0000125C  BC03                    2125      CMP.B       D3,D6
0000125E  6700 EF7A               2126      BEQ         MATCH_MOVEQ
00001262                          2127      
00001262  1C3C 000D               2128      MOVE.B      #ADD_ADDA,D6
00001266  BC03                    2129      CMP.B       D3,D6
00001268  6700 03B4               2130      BEQ         CHECK_ADD_ADDA
0000126C                          2131      
0000126C  1C3C 0005               2132      MOVE.B      #ADDQ,D6
00001270  BC03                    2133      CMP.B       D3,D6
00001272  6700 0400               2134      BEQ         CHECK_ADDQ
00001276                          2135      
00001276  1C3C 0009               2136      MOVE.B      #SUB,D6
0000127A  BC03                    2137      CMP.B       D3,D6
0000127C  6700 043E               2138      BEQ         CHECK_SUB
00001280                          2139      
00001280  1C3C 0008               2140      MOVE.B      #DIVU_OR,D6
00001284  BC03                    2141      CMP.B       D3,D6
00001286  6700 0318               2142      BEQ         CHECK_DIVU_OR
0000128A                          2143      
0000128A  1C3C 000C               2144      MOVE.B      #MULS_W_AND,D6
0000128E  BC03                    2145      CMP.B       D3,D6
00001290  6700 02C0               2146      BEQ         CHECK_MULS_W_AND
00001294                          2147      
00001294  1C3C 0004               2148      MOVE.B      #MULS_LEA_CLR_JSR_RTS,D6
00001298  BC03                    2149      CMP.B       D3,D6
0000129A  6700 0264               2150      BEQ         CHECK_MULS_LEA_CLR_JSR_RTS
0000129E                          2151      
0000129E  1C3C 000B               2152      MOVE.B      #CMP,D6
000012A2  BC03                    2153      CMP.B       D3,D6
000012A4  6700 0234               2154      BEQ         CHECK_CMP
000012A8                          2155      
000012A8  1C3C 0006               2156      MOVE.B      #BCC,D6
000012AC  BC03                    2157      CMP.B       D3,D6
000012AE  6700 0006               2158      BEQ         CHECK_BCC
000012B2                          2159      
000012B2  6000 FF04               2160      BRA         FOUR_BIT_RETURN
000012B6                          2161  ***********************************
000012B6                          2162  CHECK_BCC
000012B6                          2163      
000012B6  1C3C 0000               2164      MOVE.B      #BCC_16,D6
000012BA  BC02                    2165      CMP.B       D2,D6
000012BC  6700 00B8               2166      BEQ         CHECK_BCC_16
000012C0                          2167      
000012C0  1C3C 00FF               2168      MOVE.B      #BCC_32,D6
000012C4  BC02                    2169      CMP.B       D2,D6
000012C6  6700 0156               2170      BEQ         CHECK_BCC_32
000012CA                          2171      
000012CA  6000 0002               2172      BRA         CHECK_BCC_8
000012CE                          2173      
000012CE                          2174  ***********************************
000012CE                          2175  CHECK_BCC_8
000012CE                          2176      
000012CE  6100 01F6               2177      BSR         ISOLATE_CC_CODE_FOR_BCC
000012D2                          2178      
000012D2  1C3C 0000               2179      MOVE.B      #CC_T,D6
000012D6  BC03                    2180      CMP.B       D3,D6
000012D8  6700 F2C2               2181      BEQ         MATCH_CC_T_8
000012DC                          2182      
000012DC  1C3C 0001               2183      MOVE.B      #CC_F,D6
000012E0  BC03                    2184      CMP.B       D3,D6
000012E2  6700 F2BE               2185      BEQ         MATCH_CC_F_8
000012E6                          2186      
000012E6  1C3C 0002               2187      MOVE.B      #CC_HI,D6
000012EA  BC03                    2188      CMP.B       D3,D6
000012EC  6700 F2BA               2189      BEQ         MATCH_CC_HI_8
000012F0                          2190      
000012F0  1C3C 0003               2191      MOVE.B      #CC_LS,D6
000012F4  BC03                    2192      CMP.B       D3,D6
000012F6  6700 F320               2193      BEQ         MATCH_CC_LS_8
000012FA                          2194      
000012FA  1C3C 0004               2195      MOVE.B      #CC_CC,D6
000012FE  BC03                    2196      CMP.B       D3,D6
00001300  6700 F39A               2197      BEQ         MATCH_CC_CC_8
00001304                          2198      
00001304  1C3C 0005               2199      MOVE.B      #CC_CS,D6
00001308  BC03                    2200      CMP.B       D3,D6
0000130A  6700 F414               2201      BEQ         MATCH_CC_CS_8
0000130E                          2202      
0000130E  1C3C 0006               2203      MOVE.B      #CC_NE,D6
00001312  BC03                    2204      CMP.B       D3,D6
00001314  6700 F48E               2205      BEQ         MATCH_CC_NE_8
00001318                          2206      
00001318  1C3C 0007               2207      MOVE.B      #CC_EQ,D6
0000131C  BC03                    2208      CMP.B       D3,D6
0000131E  6700 F508               2209      BEQ         MATCH_CC_EQ_8
00001322                          2210      
00001322  1C3C 0008               2211      MOVE.B      #CC_VC,D6
00001326  BC03                    2212      CMP.B       D3,D6
00001328  6700 F582               2213      BEQ         MATCH_CC_VC_8
0000132C                          2214      
0000132C  1C3C 0009               2215      MOVE.B      #CC_VS,D6
00001330  BC03                    2216      CMP.B       D3,D6
00001332  6700 F5FC               2217      BEQ         MATCH_CC_VS_8
00001336                          2218      
00001336  1C3C 000A               2219      MOVE.B      #CC_PL,D6
0000133A  BC03                    2220      CMP.B       D3,D6
0000133C  6700 F676               2221      BEQ         MATCH_CC_PL_8
00001340                          2222      
00001340  1C3C 000B               2223      MOVE.B      #CC_MI,D6
00001344  BC03                    2224      CMP.B       D3,D6
00001346  6700 F6F0               2225      BEQ         MATCH_CC_MI_8
0000134A                          2226      
0000134A  1C3C 000C               2227      MOVE.B      #CC_GE,D6
0000134E  BC03                    2228      CMP.B       D3,D6
00001350  6700 F76A               2229      BEQ         MATCH_CC_GE_8
00001354                          2230      
00001354  1C3C 000D               2231      MOVE.B      #CC_LT,D6
00001358  BC03                    2232      CMP.B       D3,D6
0000135A  6700 F7E4               2233      BEQ         MATCH_CC_LT_8
0000135E                          2234      
0000135E  1C3C 000E               2235      MOVE.B      #CC_GT,D6
00001362  BC03                    2236      CMP.B       D3,D6
00001364  6700 F85E               2237      BEQ         MATCH_CC_GT_8
00001368                          2238      
00001368  1C3C 000F               2239      MOVE.B      #CC_LE,D6
0000136C  BC03                    2240      CMP.B       D3,D6
0000136E  6700 F8D8               2241      BEQ         MATCH_CC_LE_8
00001372                          2242  
00001372  6000 F958               2243      BRA         ERROR
00001376                          2244      
00001376                          2245  ***********************************
00001376                          2246  CHECK_BCC_16
00001376                          2247  
00001376  6100 014E               2248      BSR         ISOLATE_CC_CODE_FOR_BCC
0000137A                          2249      
0000137A  1C3C 0000               2250      MOVE.B      #CC_T,D6
0000137E  BC03                    2251      CMP.B       D3,D6
00001380  6700 F21C               2252      BEQ         MATCH_CC_T_16
00001384                          2253      
00001384  1C3C 0001               2254      MOVE.B      #CC_F,D6
00001388  BC03                    2255      CMP.B       D3,D6
0000138A  6700 F218               2256      BEQ         MATCH_CC_F_16
0000138E                          2257      
0000138E  1C3C 0002               2258      MOVE.B      #CC_HI,D6
00001392  BC03                    2259      CMP.B       D3,D6
00001394  6700 F232               2260      BEQ         MATCH_CC_HI_16
00001398                          2261      
00001398  1C3C 0003               2262      MOVE.B      #CC_LS,D6
0000139C  BC03                    2263      CMP.B       D3,D6
0000139E  6700 F2A4               2264      BEQ         MATCH_CC_LS_16
000013A2                          2265      
000013A2  1C3C 0004               2266      MOVE.B      #CC_CC,D6
000013A6  BC03                    2267      CMP.B       D3,D6
000013A8  6700 F31E               2268      BEQ         MATCH_CC_CC_16
000013AC                          2269      
000013AC  1C3C 0005               2270      MOVE.B      #CC_CS,D6
000013B0  BC03                    2271      CMP.B       D3,D6
000013B2  6700 F398               2272      BEQ         MATCH_CC_CS_16
000013B6                          2273      
000013B6  1C3C 0006               2274      MOVE.B      #CC_NE,D6
000013BA  BC03                    2275      CMP.B       D3,D6
000013BC  6700 F412               2276      BEQ         MATCH_CC_NE_16
000013C0                          2277      
000013C0  1C3C 0007               2278      MOVE.B      #CC_EQ,D6
000013C4  BC03                    2279      CMP.B       D3,D6
000013C6  6700 F48C               2280      BEQ         MATCH_CC_EQ_16
000013CA                          2281      
000013CA  1C3C 0008               2282      MOVE.B      #CC_VC,D6
000013CE  BC03                    2283      CMP.B       D3,D6
000013D0  6700 F506               2284      BEQ         MATCH_CC_VC_16
000013D4                          2285      
000013D4  1C3C 0009               2286      MOVE.B      #CC_VS,D6
000013D8  BC03                    2287      CMP.B       D3,D6
000013DA  6700 F580               2288      BEQ         MATCH_CC_VS_16
000013DE                          2289      
000013DE  1C3C 000A               2290      MOVE.B      #CC_PL,D6
000013E2  BC03                    2291      CMP.B       D3,D6
000013E4  6700 F5FA               2292      BEQ         MATCH_CC_PL_16
000013E8                          2293      
000013E8  1C3C 000B               2294      MOVE.B      #CC_MI,D6
000013EC  BC03                    2295      CMP.B       D3,D6
000013EE  6700 F674               2296      BEQ         MATCH_CC_MI_16
000013F2                          2297      
000013F2  1C3C 000C               2298      MOVE.B      #CC_GE,D6
000013F6  BC03                    2299      CMP.B       D3,D6
000013F8  6700 F6EE               2300      BEQ         MATCH_CC_GE_16
000013FC                          2301      
000013FC  1C3C 000D               2302      MOVE.B      #CC_LT,D6
00001400  BC03                    2303      CMP.B       D3,D6
00001402  6700 F768               2304      BEQ         MATCH_CC_LT_16
00001406                          2305      
00001406  1C3C 000E               2306      MOVE.B      #CC_GT,D6
0000140A  BC03                    2307      CMP.B       D3,D6
0000140C  6700 F7E2               2308      BEQ         MATCH_CC_GT_16
00001410                          2309      
00001410  1C3C 000F               2310      MOVE.B      #CC_LE,D6
00001414  BC03                    2311      CMP.B       D3,D6
00001416  6700 F85C               2312      BEQ         MATCH_CC_LE_16
0000141A                          2313  
0000141A  6000 F8B0               2314      BRA         ERROR
0000141E                          2315  
0000141E                          2316  
0000141E                          2317  ***********************************
0000141E                          2318  CHECK_BCC_32  
0000141E                          2319  
0000141E  6100 00A6               2320      BSR         ISOLATE_CC_CODE_FOR_BCC 
00001422                          2321      
00001422  1C3C 0000               2322      MOVE.B      #CC_T,D6
00001426  BC03                    2323      CMP.B       D3,D6
00001428  6700 F176               2324      BEQ         MATCH_CC_T_32
0000142C                          2325      
0000142C  1C3C 0001               2326      MOVE.B      #CC_F,D6
00001430  BC03                    2327      CMP.B       D3,D6
00001432  6700 F172               2328      BEQ         MATCH_CC_F_32
00001436                          2329      
00001436  1C3C 0002               2330      MOVE.B      #CC_HI,D6
0000143A  BC03                    2331      CMP.B       D3,D6
0000143C  6700 F1B0               2332      BEQ         MATCH_CC_HI_32
00001440                          2333      
00001440  1C3C 0003               2334      MOVE.B      #CC_LS,D6
00001444  BC03                    2335      CMP.B       D3,D6
00001446  6700 F228               2336      BEQ         MATCH_CC_LS_32
0000144A                          2337      
0000144A  1C3C 0004               2338      MOVE.B      #CC_CC,D6
0000144E  BC03                    2339      CMP.B       D3,D6
00001450  6700 F2A2               2340      BEQ         MATCH_CC_CC_32
00001454                          2341      
00001454  1C3C 0005               2342      MOVE.B      #CC_CS,D6
00001458  BC03                    2343      CMP.B       D3,D6
0000145A  6700 F31C               2344      BEQ         MATCH_CC_CS_32
0000145E                          2345      
0000145E  1C3C 0006               2346      MOVE.B      #CC_NE,D6
00001462  BC03                    2347      CMP.B       D3,D6
00001464  6700 F396               2348      BEQ         MATCH_CC_NE_32
00001468                          2349      
00001468  1C3C 0007               2350      MOVE.B      #CC_EQ,D6
0000146C  BC03                    2351      CMP.B       D3,D6
0000146E  6700 F410               2352      BEQ         MATCH_CC_EQ_32
00001472                          2353      
00001472  1C3C 0008               2354      MOVE.B      #CC_VC,D6
00001476  BC03                    2355      CMP.B       D3,D6
00001478  6700 F48A               2356      BEQ         MATCH_CC_VC_32
0000147C                          2357      
0000147C  1C3C 0009               2358      MOVE.B      #CC_VS,D6
00001480  BC03                    2359      CMP.B       D3,D6
00001482  6700 F504               2360      BEQ         MATCH_CC_VS_32
00001486                          2361      
00001486  1C3C 000A               2362      MOVE.B      #CC_PL,D6
0000148A  BC03                    2363      CMP.B       D3,D6
0000148C  6700 F57E               2364      BEQ         MATCH_CC_PL_32
00001490                          2365      
00001490  1C3C 000B               2366      MOVE.B      #CC_MI,D6
00001494  BC03                    2367      CMP.B       D3,D6
00001496  6700 F5F8               2368      BEQ         MATCH_CC_MI_32
0000149A                          2369      
0000149A  1C3C 000C               2370      MOVE.B      #CC_GE,D6
0000149E  BC03                    2371      CMP.B       D3,D6
000014A0  6700 F672               2372      BEQ         MATCH_CC_GE_32
000014A4                          2373      
000014A4  1C3C 000D               2374      MOVE.B      #CC_LT,D6
000014A8  BC03                    2375      CMP.B       D3,D6
000014AA  6700 F6EC               2376      BEQ         MATCH_CC_LT_32
000014AE                          2377      
000014AE  1C3C 000E               2378      MOVE.B      #CC_GT,D6
000014B2  BC03                    2379      CMP.B       D3,D6
000014B4  6700 F766               2380      BEQ         MATCH_CC_GT_32
000014B8                          2381      
000014B8  1C3C 000F               2382      MOVE.B      #CC_LE,D6
000014BC  BC03                    2383      CMP.B       D3,D6
000014BE  6700 F7E0               2384      BEQ         MATCH_CC_LE_32
000014C2                          2385  
000014C2  6000 F808               2386      BRA         ERROR
000014C6                          2387   
000014C6                          2388  ***********************************
000014C6                          2389  ISOLATE_CC_CODE_FOR_BCC
000014C6                          2390  
000014C6  48A7 2000               2391      MOVEM.W     D2, -(SP) 
000014CA                          2392      
000014CA  E94A                    2393      LSL.W       #4,D2
000014CC  1E3C 000C               2394      MOVE.B      #12,D7
000014D0  EE6A                    2395      LSR.W       D7,D2
000014D2                          2396      
000014D2  1602                    2397      MOVE.B      D2,D3      
000014D4                          2398  
000014D4  4C9F 0004               2399      MOVEM.W     (SP)+,D2 
000014D8  4E75                    2400      RTS
000014DA                          2401  ***********************************
000014DA                          2402  CHECK_CMP
000014DA                          2403      
000014DA  6100 0232               2404      BSR         ISOLATE_OP_CODE
000014DE                          2405      
000014DE  1C3C 0000               2406      MOVE.B      #CMP_B,D6
000014E2  BC03                    2407      CMP.B       D3,D6
000014E4  6700 F960               2408      BEQ         MATCH_CMP_B
000014E8                          2409      
000014E8  1C3C 0001               2410      MOVE.B      #CMP_W,D6
000014EC  BC03                    2411      CMP.B       D3,D6
000014EE  6700 F99C               2412      BEQ         MATCH_CMP_W
000014F2                          2413      
000014F2  1C3C 0002               2414      MOVE.B      #CMP_L,D6
000014F6  BC03                    2415      CMP.B       D3,D6
000014F8  6700 F9DA               2416      BEQ         MATCH_CMP_L
000014FC                          2417      
000014FC  6000 F7CE               2418      BRA         ERROR
00001500                          2419  ***********************************
00001500                          2420  CHECK_MULS_LEA_CLR_JSR_RTS
00001500                          2421  
00001500  3C3C 4E75               2422      MOVE.W      #RTS,D6
00001504  BC42                    2423      CMP.W       D2,D6
00001506  6700 F92E               2424      BEQ         MATCH_RTS
0000150A                          2425      
0000150A  6100 0202               2426      BSR         ISOLATE_OP_CODE
0000150E                          2427      
0000150E  1C3C 0007               2428      MOVE.B      #LEA,D6
00001512  BC03                    2429      CMP.B       D3,D6
00001514  6700 0242               2430      BEQ         MATCH_LEA
00001518                          2431      
00001518  6100 FCC2               2432      BSR         ReadFirstTenBits
0000151C                          2433      
0000151C  3C3C 013A               2434      MOVE.W      #JSR,D6
00001520  BC43                    2435      CMP.W       D3,D6
00001522  6700 F9F6               2436      BEQ         MATCH_JSR
00001526                          2437      
00001526  3C3C 0108               2438      MOVE.W      #CLR_B,D6
0000152A  BC43                    2439      CMP.W       D3,D6
0000152C  6700 FA0E               2440      BEQ         MATCH_CLR_B
00001530                          2441      
00001530  3C3C 0109               2442      MOVE.W      #CLR_W,D6
00001534  BC43                    2443      CMP.W       D3,D6
00001536  6700 FA32               2444      BEQ         MATCH_CLR_W
0000153A                          2445      
0000153A  3C3C 010A               2446      MOVE.W      #CLR_L,D6
0000153E  BC43                    2447      CMP.W       D3,D6
00001540  6700 FA56               2448      BEQ         MATCH_CLR_L
00001544                          2449      
00001544  3C3C 0130               2450      MOVE.W      #MULS_L,D6  * Shouldn't need to check for the rest of the opcode..?
00001548  BC43                    2451      CMP.W       D3,D6
0000154A  6700 020E               2452      BEQ         MATCH_MULS_L
0000154E                          2453      
0000154E  6000 F77C               2454      BRA         ERROR
00001552                          2455      
00001552                          2456  ***********************************
00001552                          2457  CHECK_MULS_W_AND
00001552                          2458  
00001552  6100 01BA               2459      BSR         ISOLATE_OP_CODE
00001556                          2460      
00001556  1C3C 0007               2461      MOVE.B      #MULS_OP_W,D6
0000155A  BC03                    2462      CMP.B       D3,D6
0000155C  6700 F892               2463      BEQ         MATCH_MULS_W
00001560                          2464      
00001560  1C3C 0000               2465      MOVE.B      #DN_B,D6
00001564  BC03                    2466      CMP.B       D3,D6
00001566  6700 FA5E               2467      BEQ         MATCH_AND_DN_B
0000156A                          2468      
0000156A  1C3C 0001               2469      MOVE.B      #DN_W,D6
0000156E  BC03                    2470      CMP.B       D3,D6
00001570  6700 FA9A               2471      BEQ         MATCH_AND_DN_W
00001574                          2472      
00001574  1C3C 0002               2473      MOVE.B      #DN_L,D6
00001578  BC03                    2474      CMP.B       D3,D6
0000157A  6700 FAD6               2475      BEQ         MATCH_AND_DN_L
0000157E                          2476      
0000157E  1C3C 0004               2477      MOVE.B      #EA_B,D6
00001582  BC03                    2478      CMP.B       D3,D6
00001584  6700 FB12               2479      BEQ         MATCH_AND_EA_B
00001588                          2480      
00001588  1C3C 0005               2481      MOVE.B      #EA_W,D6
0000158C  BC03                    2482      CMP.B       D3,D6
0000158E  6700 FB4E               2483      BEQ         MATCH_AND_EA_W
00001592                          2484      
00001592  1C3C 0006               2485      MOVE.B      #EA_L,D6
00001596  BC03                    2486      CMP.B       D3,D6
00001598  6700 FB8A               2487      BEQ         MATCH_AND_EA_L
0000159C                          2488      
0000159C  6000 F72E               2489      BRA         ERROR
000015A0                          2490  
000015A0                          2491  ***********************************    
000015A0                          2492  CHECK_DIVU_OR
000015A0                          2493      
000015A0  6100 016C               2494      BSR         ISOLATE_OP_CODE
000015A4                          2495      
000015A4  1C3C 0003               2496      MOVE.B      #DIVU,D6
000015A8  BC03                    2497      CMP.B       D3,D6
000015AA  6700 019E               2498      BEQ         MATCH_DIVU
000015AE                          2499      
000015AE  1C3C 0000               2500      MOVE.B      #DN_B,D6
000015B2  BC03                    2501      CMP.B       D3,D6
000015B4  6700 0196               2502      BEQ         MATCH_OR_DN_B
000015B8                          2503      
000015B8  1C3C 0001               2504      MOVE.B      #DN_W,D6
000015BC  BC03                    2505      CMP.B       D3,D6
000015BE  6700 018E               2506      BEQ         MATCH_OR_DN_W
000015C2                          2507      
000015C2  1C3C 0002               2508      MOVE.B      #DN_L,D6
000015C6  BC03                    2509      CMP.B       D3,D6
000015C8  6700 0186               2510      BEQ         MATCH_OR_DN_L
000015CC                          2511      
000015CC  1C3C 0004               2512      MOVE.B      #EA_B,D6
000015D0  BC03                    2513      CMP.B       D3,D6
000015D2  6700 017E               2514      BEQ         MATCH_OR_EA_B
000015D6                          2515      
000015D6  1C3C 0005               2516      MOVE.B      #EA_W,D6
000015DA  BC03                    2517      CMP.B       D3,D6
000015DC  6700 0176               2518      BEQ         MATCH_OR_EA_W
000015E0                          2519      
000015E0  1C3C 0006               2520      MOVE.B      #EA_L,D6
000015E4  BC03                    2521      CMP.B       D3,D6
000015E6  6700 016E               2522      BEQ         MATCH_OR_EA_L
000015EA                          2523      
000015EA  6000 F6E0               2524      BRA         ERROR
000015EE                          2525  
000015EE                          2526  ***********************************
000015EE                          2527  CHECK_MOVEM
000015EE                          2528      
000015EE  6100 FBEC               2529      BSR         ReadFirstTenBits
000015F2                          2530      
000015F2  3C3C 0122               2531      MOVE.W      #MOVEM_TO_MEM_W,D6
000015F6  BC43                    2532      CMP.W       D3,D6
000015F8  6700 013C               2533      BEQ         MATCH_MOVEM_TO_MEM_W
000015FC                          2534      
000015FC  3C3C 0123               2535      MOVE.W      #MOVEM_TO_MEM_L,D6
00001600  BC43                    2536      CMP.W       D3,D6
00001602  6700 0134               2537      BEQ         MATCH_MOVEM_TO_MEM_L
00001606                          2538      
00001606  3C3C 0132               2539      MOVE.W      #MOVEM_TO_REG_W,D6
0000160A  BC43                    2540      CMP.W       D3,D6
0000160C  6700 012C               2541      BEQ         MATCH_MOVEM_TO_REG_W
00001610                          2542      
00001610  3C3C 0133               2543      MOVE.W      #MOVEM_TO_REG_L,D6
00001614  BC43                    2544      CMP.W       D3,D6
00001616  6700 0124               2545      BEQ         MATCH_MOVEM_TO_REG_L
0000161A                          2546      
0000161A  6000 FBA0               2547      BRA         MOVEM_RETURN
0000161E                          2548  **************************************** 
0000161E                          2549  CHECK_ADD_ADDA
0000161E                          2550      
0000161E  6100 00EE               2551      BSR         ISOLATE_OP_CODE
00001622                          2552      
00001622  3C3C 0000               2553      MOVE.W      #DN_B,D6
00001626  BC43                    2554      CMP.W       D3,D6
00001628  6700 EC54               2555      BEQ         MATCH_ADD_TO_REG_B
0000162C                          2556      
0000162C  3C3C 0001               2557      MOVE.W      #DN_W,D6
00001630  BC43                    2558      CMP.W       D3,D6
00001632  6700 EC8E               2559      BEQ         MATCH_ADD_TO_REG_W
00001636                          2560      
00001636  3C3C 0002               2561      MOVE.W      #DN_L,D6
0000163A  BC43                    2562      CMP.W       D3,D6
0000163C  6700 ECC8               2563      BEQ         MATCH_ADD_TO_REG_L
00001640                          2564      
00001640  3C3C 0004               2565      MOVE.W      #EA_B,D6
00001644  BC43                    2566      CMP.W       D3,D6
00001646  6700 ED02               2567      BEQ         MATCH_ADD_TO_EA_B
0000164A                          2568      
0000164A  3C3C 0005               2569      MOVE.W      #EA_W,D6
0000164E  BC43                    2570      CMP.W       D3,D6
00001650  6700 ED3C               2571      BEQ         MATCH_ADD_TO_EA_W
00001654                          2572      
00001654  3C3C 0006               2573      MOVE.W      #EA_L,D6
00001658  BC43                    2574      CMP.W       D3,D6
0000165A  6700 ED76               2575      BEQ         MATCH_ADD_TO_EA_L
0000165E                          2576      
0000165E  3C3C 0003               2577      MOVE.W      #ADDA_W,D6
00001662  BC43                    2578      CMP.W       D3,D6
00001664  6700 F6FE               2579      BEQ         MATCH_ADDA_W
00001668                          2580      
00001668  3C3C 0007               2581      MOVE.W      #ADDA_L,D6
0000166C  BC43                    2582      CMP.W       D3,D6
0000166E  6700 F73A               2583      BEQ         MATCH_ADDA_L
00001672                          2584      
00001672  4E75                    2585      RTS ** Change later?
00001674                          2586  ****************************************  
00001674                          2587  CHECK_ADDQ
00001674                          2588      
00001674  6100 0098               2589      BSR         ISOLATE_OP_CODE
00001678                          2590      
00001678  3C3C 0000               2591      MOVE.W      #ADDQ_B,D6
0000167C  BC43                    2592      CMP.W       D3,D6
0000167E  6700 ED96               2593      BEQ         MATCH_ADDQ_B
00001682                          2594      
00001682  3C3C 0001               2595      MOVE.W      #ADDQ_W,D6
00001686  BC43                    2596      CMP.W       D3,D6
00001688  6700 EDD8               2597      BEQ         MATCH_ADDQ_W
0000168C                          2598      
0000168C  3C3C 0002               2599      MOVE.W      #ADDQ_L,D6
00001690  BC43                    2600      CMP.W       D3,D6
00001692  6700 EE1A               2601      BEQ         MATCH_ADDQ_L
00001696                          2602      
00001696                          2603  ****************************************
00001696                          2604  CHECK_ADDI
00001696                          2605  
00001696  6100 FB44               2606      BSR         ReadFirstTenBits
0000169A                          2607      
0000169A  3C3C 0018               2608      MOVE.W      #ADDI_B,D6
0000169E  BC43                    2609      CMP.W       D3,D6
000016A0  6700 EB64               2610      BEQ         MATCH_ADDI_B
000016A4                          2611      
000016A4  3C3C 0019               2612      MOVE.W      #ADDI_W,D6
000016A8  BC43                    2613      CMP.W       D3,D6
000016AA  6700 EB74               2614      BEQ         MATCH_ADDI_W
000016AE                          2615      
000016AE  3C3C 001A               2616      MOVE.W      #ADDI_L,D6
000016B2  BC43                    2617      CMP.W       D3,D6
000016B4  6700 EB84               2618      BEQ         MATCH_ADDI_L
000016B8                          2619      
000016B8  6000 FB06               2620      BRA         ADDI_RETURN
000016BC                          2621  *****************************************
000016BC                          2622  CHECK_SUB
000016BC                          2623      
000016BC  6100 0050               2624      BSR         ISOLATE_OP_CODE
000016C0                          2625      
000016C0  3C3C 0000               2626      MOVE.W      #DN_B,D6
000016C4  BC43                    2627      CMP.W       D3,D6
000016C6  6700 0076               2628      BEQ         MATCH_SUB_TO_DN_B
000016CA                          2629      
000016CA  3C3C 0001               2630      MOVE.W      #DN_W,D6
000016CE  BC43                    2631      CMP.W       D3,D6
000016D0  6700 006E               2632      BEQ         MATCH_SUB_TO_DN_W
000016D4                          2633      
000016D4  3C3C 0002               2634      MOVE.W      #DN_L,D6
000016D8  BC43                    2635      CMP.W       D3,D6
000016DA  6700 0066               2636      BEQ         MATCH_SUB_TO_DN_L
000016DE                          2637      
000016DE  3C3C 0004               2638      MOVE.W      #EA_B,D6
000016E2  BC43                    2639      CMP.W       D3,D6
000016E4  6700 005E               2640      BEQ         MATCH_SUB_TO_EA_B
000016E8                          2641      
000016E8  3C3C 0005               2642      MOVE.W      #EA_W,D6
000016EC  BC43                    2643      CMP.W       D3,D6
000016EE  6700 0056               2644      BEQ         MATCH_SUB_TO_EA_W
000016F2                          2645      
000016F2  3C3C 0006               2646      MOVE.W      #EA_L,D6
000016F6  BC43                    2647      CMP.W       D3,D6
000016F8  6700 004E               2648      BEQ         MATCH_SUB_TO_EA_L
000016FC                          2649  *****************************************
000016FC                          2650  CHECK_MOVEA_W_AND_MOVE_W
000016FC                          2651      
000016FC  6100 0010               2652      BSR         ISOLATE_OP_CODE
00001700                          2653         
00001700  1C3C 0001               2654      MOVE.B      #MOVEA_WL,D6
00001704  BC03                    2655      CMP.B       D3,D6
00001706  6700 F5D0               2656      BEQ         MATCH_MOVEA_W
0000170A                          2657      
0000170A  6000 EA68               2658      BRA         MATCH_MOVE_W 
0000170E                          2659  ************************************************
0000170E                          2660  ISOLATE_OP_CODE 
0000170E                          2661  
0000170E  48A7 2000               2662      MOVEM.W     D2, -(SP)    
00001712                          2663     
00001712  1E3C 0007               2664      MOVE.B      #7,D7          
00001716  EF6A                    2665      LSL.W       D7,D2
00001718  1E3C 000D               2666      MOVE.B      #13,D7
0000171C  EE6A                    2667      LSR.W       D7,D2
0000171E  1602                    2668      MOVE.B      D2,D3    
00001720                          2669         
00001720  4C9F 0004               2670      MOVEM.W     (SP)+,D2 
00001724  4E75                    2671      RTS
00001726                          2672  **********************************************
00001726                          2673  CHECK_MOVEA_L_AND_MOVE_L
00001726                          2674      
00001726  61E6                    2675      BSR         ISOLATE_OP_CODE
00001728                          2676         
00001728  1C3C 0001               2677      MOVE.B      #MOVEA_WL,D6
0000172C  BC03                    2678      CMP.B       D3,D6
0000172E  6700 F5EE               2679      BEQ         MATCH_MOVEA_L 
00001732                          2680      
00001732  6000 EA5C               2681      BRA         MATCH_MOVE_L   
00001736                          2682  **********************************************  
00001736                          2683  ** D2 is holding the op command bits        **
00001736                          2684      
00001736                          2685  ***********************************
00001736                          2686  MATCH_MOVEM_TO_MEM_W
00001736  3A02                    2687      MOVE.W      D2,D5       *REMOVE
00001738                          2688  MATCH_MOVEM_TO_MEM_L
00001738  3A02                    2689      MOVE.W      D2,D5       *REMOVE
0000173A                          2690  MATCH_MOVEM_TO_REG_W
0000173A  3A02                    2691      MOVE.W      D2,D5       *REMOVE
0000173C                          2692  MATCH_MOVEM_TO_REG_L
0000173C  3A02                    2693      MOVE.W      D2,D5       *REMOVE
0000173E                          2694  ***********************************
0000173E                          2695      
0000173E                          2696  MATCH_SUB_TO_DN_B
0000173E  3A02                    2697      MOVE.W      D2,D5       *REMOVE
00001740                          2698  MATCH_SUB_TO_DN_W
00001740  3A02                    2699      MOVE.W      D2,D5       *REMOVE
00001742                          2700  MATCH_SUB_TO_DN_L
00001742  3A02                    2701      MOVE.W      D2,D5       *REMOVE
00001744                          2702  MATCH_SUB_TO_EA_B
00001744  3A02                    2703      MOVE.W      D2,D5       *REMOVE
00001746                          2704  MATCH_SUB_TO_EA_W
00001746  3A02                    2705      MOVE.W      D2,D5       *REMOVE
00001748                          2706  MATCH_SUB_TO_EA_L
00001748  3A02                    2707      MOVE.W      D2,D5       *REMOVE
0000174A                          2708  MATCH_DIVU
0000174A  3A02                    2709      MOVE.W      D2,D5       *REMOVE
0000174C                          2710  MATCH_OR_DN_B
0000174C  3A02                    2711      MOVE.W      D2,D5       *REMOVE
0000174E                          2712  MATCH_OR_DN_W
0000174E  3A02                    2713      MOVE.W      D2,D5       *REMOVE
00001750                          2714  MATCH_OR_DN_L
00001750  3A02                    2715      MOVE.W      D2,D5       *REMOVE
00001752                          2716  MATCH_OR_EA_B
00001752  3A02                    2717      MOVE.W      D2,D5       *REMOVE
00001754                          2718  MATCH_OR_EA_W
00001754  3A02                    2719      MOVE.W      D2,D5       *REMOVE
00001756                          2720  MATCH_OR_EA_L
00001756  3A02                    2721      MOVE.W      D2,D5       *REMOVE
00001758                          2722  
00001758                          2723  MATCH_LEA
00001758  3A02                    2724      MOVE.W      D2,D5       *REMOVE
0000175A                          2725  
0000175A                          2726  MATCH_MULS_L
0000175A  3A02                    2727      MOVE.W      D2,D5       *REMOVE
0000175C                          2728  MATCH_LSL
0000175C  3A02                    2729      MOVE.W      D2,D5       *REMOVE
0000175E                          2730  MATCH_LSR
0000175E  3A02                    2731      MOVE.W      D2,D5       *REMOVE
00001760                          2732  MATCH_ASR
00001760  3A02                    2733      MOVE.W      D2,D5       *REMOVE
00001762                          2734  MATCH_ASL
00001762  3A02                    2735      MOVE.W      D2,D5       *REMOVE
00001764                          2736  MATCH_ROL
00001764  3A02                    2737      MOVE.W      D2,D5       *REMOVE
00001766                          2738  MATCH_ROR
00001766  3A02                    2739      MOVE.W      D2,D5       *REMOVE
00001768                          2740  
Line 2741 WARNING: END directive missing, starting address not set

2 errors detected
1 warning generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
ABS_LONG            39
ABS_WORD            38
ADDA_L              7
ADDA_W              3
ADDI_B              18
ADDI_L              1A
ADDI_RETURN         11C0
ADDI_W              19
ADDQ                5
ADDQ_B              0
ADDQ_L              2
ADDQ_W              1
ADD_ADDA            D
ADD_TO_EA_B         4
ADD_TO_EA_L         6
ADD_TO_EA_W         5
ADD_TO_REG_B        0
ADD_TO_REG_L        2
ADD_TO_REG_W        1
AN                  8
ASL                 383
ASR                 387
BCC                 6
BCC_16              0
BCC_32              FF
CC_CC               4
CC_CS               5
CC_EQ               7
CC_F                1
CC_GE               C
CC_GT               E
CC_HI               2
CC_LE               F
CC_LS               3
CC_LT               D
CC_MI               B
CC_NE               6
CC_PL               A
CC_T                0
CC_VC               8
CC_VS               9
CHECK_ADDI          1696
CHECK_ADDQ          1674
CHECK_ADD_ADDA      161E
CHECK_BCC           12B6
CHECK_BCC_16        1376
CHECK_BCC_32        141E
CHECK_BCC_8         12CE
CHECK_CMP           14DA
CHECK_DIVU_OR       15A0
CHECK_FOUR_BIT_SIG  1238
CHECK_MOVEA_L_AND_MOVE_L  1726
CHECK_MOVEA_W_AND_MOVE_W  16FC
CHECK_MOVEM         15EE
CHECK_MULS_LEA_CLR_JSR_RTS  1500
CHECK_MULS_W_AND    1552
CHECK_NOP           122A
CHECK_SHIFT_AND_ROTATE  11EA
CHECK_SUB           16BC
CLR_B               108
CLR_L               10A
CLR_W               109
CMP                 B
CMP_B               0
CMP_L               2
CMP_W               1
DEC_ABS_LONG        C8
DEC_ABS_WORD        BC
DEC_AN              E0
DEC_DN              D4
DEC_IMMEDIATE       A0
DEC_INDIRECT        EC
DEC_POST_INC        100
DEC_PRE_DEC         11A
DEC_RETURN          82
DIVU                3
DIVU_OR             8
DN                  0
DN_B                0
DN_L                2
DN_W                1
EADECODER           18
EADECODER_LEFT      0
EA_B                4
EA_L                6
EA_W                5
ERROR               CCC
FOUR_BIT_RETURN     11B8
GET_BCC_DESTINATION_ADDRESS  552
GET_BCC_DISPLACEMENT_16BIT  53E
GET_BCC_DISPLACEMENT_32BIT  544
GET_BCC_DISPLACEMENT_8BIT  538
GET_CURRENT_ADDRESS  54A
IMMEDIATE           3C
IMM_SKIP            9A
IMM_WORD            B8
INDIRECT            10
ISOLATE_CC_CODE_FOR_BCC  14C6
ISOLATE_OP_CODE     170E
JSR                 13A
LEA                 7
LEFT_SKIP           1C
LSL                 38F
LSR                 38B
MATCH_ADDA_L        DAA
MATCH_ADDA_W        D64
MATCH_ADDI_B        206
MATCH_ADDI_L        23A
MATCH_ADDI_W        220
MATCH_ADDQ_B        416
MATCH_ADDQ_L        4AE
MATCH_ADDQ_W        462
MATCH_ADD_TO_EA_B   34A
MATCH_ADD_TO_EA_L   3D2
MATCH_ADD_TO_EA_W   38E
MATCH_ADD_TO_REG_B  27E
MATCH_ADD_TO_REG_L  306
MATCH_ADD_TO_REG_W  2C2
MATCH_AND_DN_B      FC6
MATCH_AND_DN_L      1052
MATCH_AND_DN_W      100C
MATCH_AND_EA_B      1098
MATCH_AND_EA_L      1124
MATCH_AND_EA_W      10DE
MATCH_ASL           1762
MATCH_ASR           1760
MATCH_CC_CC_16      6C8
MATCH_CC_CC_32      6F4
MATCH_CC_CC_8       69C
MATCH_CC_CS_16      74C
MATCH_CC_CS_32      778
MATCH_CC_CS_8       720
MATCH_CC_EQ_16      854
MATCH_CC_EQ_32      880
MATCH_CC_EQ_8       828
MATCH_CC_F_16       5A4
MATCH_CC_F_32       5A6
MATCH_CC_F_8        5A2
MATCH_CC_GE_16      AE8
MATCH_CC_GE_32      B14
MATCH_CC_GE_8       ABC
MATCH_CC_GT_16      BF0
MATCH_CC_GT_32      C1C
MATCH_CC_GT_8       BC4
MATCH_CC_HI_16      5C8
MATCH_CC_HI_32      5EE
MATCH_CC_HI_8       5A8
MATCH_CC_LE_16      C74
MATCH_CC_LE_32      CA0
MATCH_CC_LE_8       C48
MATCH_CC_LS_16      644
MATCH_CC_LS_32      670
MATCH_CC_LS_8       618
MATCH_CC_LT_16      B6C
MATCH_CC_LT_32      B98
MATCH_CC_LT_8       B40
MATCH_CC_MI_16      A64
MATCH_CC_MI_32      A90
MATCH_CC_MI_8       A38
MATCH_CC_NE_16      7D0
MATCH_CC_NE_32      7FC
MATCH_CC_NE_8       7A4
MATCH_CC_PL_16      9E0
MATCH_CC_PL_32      A0C
MATCH_CC_PL_8       9B4
MATCH_CC_T_16       59E
MATCH_CC_T_32       5A0
MATCH_CC_T_8        59C
MATCH_CC_VC_16      8D8
MATCH_CC_VC_32      904
MATCH_CC_VC_8       8AC
MATCH_CC_VS_16      95C
MATCH_CC_VS_32      988
MATCH_CC_VS_8       930
MATCH_CLR_B         F3C
MATCH_CLR_L         F98
MATCH_CLR_W         F6A
MATCH_CMP_B         E46
MATCH_CMP_L         ED4
MATCH_CMP_W         E8C
MATCH_DIVU          174A
MATCH_JSR           F1A
MATCH_LEA           1758
MATCH_LSL           175C
MATCH_LSR           175E
MATCH_MOVEA_L       D1E
MATCH_MOVEA_W       CD8
MATCH_MOVEM_TO_MEM_L  1738
MATCH_MOVEM_TO_MEM_W  1736
MATCH_MOVEM_TO_REG_L  173C
MATCH_MOVEM_TO_REG_W  173A
MATCH_MOVEQ         1DA
MATCH_MOVE_B        158
MATCH_MOVE_L        190
MATCH_MOVE_W        174
MATCH_MULS_L        175A
MATCH_MULS_W        DF0
MATCH_NOP           148
MATCH_OR_DN_B       174C
MATCH_OR_DN_L       1750
MATCH_OR_DN_W       174E
MATCH_OR_EA_B       1752
MATCH_OR_EA_L       1756
MATCH_OR_EA_W       1754
MATCH_ROL           1764
MATCH_ROR           1766
MATCH_RTS           E36
MATCH_SUB_TO_DN_B   173E
MATCH_SUB_TO_DN_L   1742
MATCH_SUB_TO_DN_W   1740
MATCH_SUB_TO_EA_B   1744
MATCH_SUB_TO_EA_L   1748
MATCH_SUB_TO_EA_W   1746
MOVEA_WL            1
MOVEM_RETURN        11BC
MOVEM_TO_MEM_L      123
MOVEM_TO_MEM_W      122
MOVEM_TO_REG_L      133
MOVEM_TO_REG_W      132
MOVEQ_              7
MOVE_B              1
MOVE_L              2
MOVE_W              3
MULS_L              130
MULS_LEA_CLR_JSR_RTS  4
MULS_OP_W           7
MULS_W_AND          C
NOP                 4E71
NOP_RETURN          11B4
OPDECODER           11AA
OPDEC_RETURN        11C4
OUTPUT              10000
POST_INC            18
PRE_DEC             20
PRINTHEX            556
PRINTSIZEBYTE       572
PRINTSIZELONG       58E
PRINTSIZEWORD       580
PRINTSTRING         56A
PRINT_ADDI          254
PRINT_MOVE          1AC
PR_ADD              13A
PR_ADDA             118C
PR_ADDI             13E
PR_ADDQ             143
PR_AND              11A6
PR_BCC_CC           500
PR_BCC_CS           504
PR_BCC_EQ           508
PR_BCC_GE           50C
PR_BCC_GT           510
PR_BCC_HI           514
PR_BCC_LE           518
PR_BCC_LS           51C
PR_BCC_LT           520
PR_BCC_MI           524
PR_BCC_NE           528
PR_BCC_PL           52C
PR_BCC_VC           530
PR_BCC_VS           534
PR_BYTE             116E
PR_CLR              1196
PR_CMP              119E
PR_COMMA            116C
PR_ERROR            4FA
PR_JSR              11A2
PR_LONG             1174
PR_MOVE             117B
PR_MOVEA            1180
PR_MOVEM            1186
PR_MOVEQ            134
PR_MULS             1191
PR_NOP              1177
PR_RTS              119A
PR_SPACE            116A
PR_WORD             1171
READFIRSTFOURBITS   11CA
READFIRSTTENBITS    11DC
ROL                 39F
ROR                 39B
RTS                 4E75
SUB                 9
SUB_TO_DN_B         0
SUB_TO_DN_L         2
SUB_TO_DN_W         1
SUB_TO_EA_B         4
SUB_TO_EA_L         6
SUB_TO_EA_W         5

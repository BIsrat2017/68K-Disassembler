00000000 Starting Address
Assembler used: EASy68K Editor/Assembler v5.15.04
Created On: 2/24/2017 5:05:11 PM

00000000                             1  *-----------------------------------------------------------
00000000                             2  * Title      :  ASCII/HEX Converters
00000000                             3  * Written by :  Team Dankware - Connor Davis McGwire
00000000                             4  * Date       :  2/17/2017
00000000                             5  * Description:  Series of subroutines for converting between 
00000000                             6  *               ASCII bytes and hex numbers stored as individual bytes.
00000000                             7  *-----------------------------------------------------------
00000000                             8  
00000000                             9  A2H_W   *Converts and ASCII Byte string into HEX; Size WORD
00000000  48E7 7F7E                 10          MOVEM.L     D1-D7/A1-A6, -(SP)  
00000004                            11          
00000004  323C 0002                 12          MOVE.W  #2,D1                   *Store length of string into D1 for looping
00000008  2248                      13          MOVEA.L A0,A1                   *Copy starting point of string
0000000A                            14  
0000000A  6100 0014                 15          BSR.W   numSub
0000000E                            16          
0000000E  2049                      17          MOVEA.L A1,A0                   *Restore address position
00000010  323C 0002                 18          MOVE.W  #2,D1                   *Reset loop counter
00000014                            19          
00000014  6100 0012                 20          BSR.W   upSub
00000018                            21  
00000018  2049                      22          MOVEA.L A1,A0
0000001A                            23          
0000001A  4CDF 7EFE                 24          MOVEM.L     (SP)+, D1-D7/A1-A6
0000001E  4E75                      25          RTS
00000020                            26  
00000020                            27          
00000020                            28          
00000020                            29  numSub  *Convert ASCII 'number' to true number byte; Should not be called outside of the A2H subroutines
00000020  0418 0030                 30          SUB.B   #$30,(A0)+              *Subtract difference between null ASCII and '0' ASCII
00000024  5340                      31          SUB.W   #1,D0                   *Decrement loop counter
00000026  66F8                      32          BNE     numSub                  *If loop has not ended restart
00000028                            33  
00000028                            34  
00000028                            35  upSub   *Loops through string to remove any upper case characters 
00000028                            36          *that may remain in the string
00000028  0C58 0009                 37          CMPI    #9,(A0)+                *Check if the value is greater than 0-9
0000002C  6FFA                      38          BLE     upSub                   *If it's not, continue loop
0000002E  5F20                      39          SUB.B   #7,-(A0)                *Otherwise, subtract difference between ASCII 'number' code and 'A' code
00000030  5288                      40          ADDA.L  #1,A0                   *Return A0 to next position in string
00000032                            41  upEnd
00000032  5341                      42          SUB.W   #1,D1                   
Line 43 ERROR: Undefined symbol
00000034  6600 BB58                 43          BNE     upper  
00000038  4E75                      44          RTS
0000003A                            45  
0000003A                            46  
0000003A                            47  
0000003A                            48          
0000003A                            49  
0000003A                            50  
0000003A                            51  
0000003A                            52  
0000003A                            53  
Line 54 WARNING: END directive missing, starting address not set

1 error detected
1 warning generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
A2H_W               0
NUMSUB              20
UPEND               32
UPSUB               28

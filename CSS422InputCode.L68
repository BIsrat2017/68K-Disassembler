00001000 Starting Address
Assembler used: EASy68K Editor/Assembler v5.15.04
Created On: 3/9/2017 1:16:32 PM

00000000                             1  *-----------------------------------------------------------
00000000                             2  * Title      : Main Driver Program
00000000                             3  * Written by : Arsany Azmy, Connor McGwire
00000000                             4  * Date       :
00000000                             5  * Description:
00000000                             6  *-----------------------------------------------------------
00000000  =0000000D                  7  CR      EQU     $0D
00000000  =0000000A                  8  LF      EQU     $0A   
00000000                             9          INCLUDE 'ASCII_HEX_Conversions.x68'
00000000                            10  
00000000                            11  
00000000                            12  
00000000                            13  A2H     *Converts and ASCII Byte string into HEX; Size WORD
00000000  48E7 7FFE                 14          MOVEM.L     D1-D7/A0-A6, -(SP)  
00000004                            15          
00000004  3400                      16          MOVE.W  D0,D2
00000006  3202                      17          MOVE.W  D2,D1                   *Store length of string into D1 for looping
00000008  2248                      18          MOVEA.L A0,A1                   *Copy starting point of string
0000000A                            19  
0000000A  6000 0026                 20          BRA     numSub
0000000E                            21  numSubRTN
0000000E  2049                      22          MOVEA.L A1,A0                   *Restore address position
00000010  3202                      23          MOVE.W  D2,D1                   *Reset loop counter
00000012                            24          
00000012  6000 0028                 25          BRA     upSub
00000016                            26  upSubRTN        
00000016  2049                      27          MOVEA.L A1,A0                   *Restore address position
00000018  3202                      28          MOVE.W  D2,D1                   *Reset loop counter
0000001A  4240                      29          CLR     D0                      *Clear D0
0000001C                            30  addBytes
0000001C  D018                      31          ADD.B   (A0)+,D0
0000001E  5301                      32          SUBI.B  #1,D1
00000020  6700 000A                 33          BEQ     conv_end
00000024                            34  addByteLoop
00000024  E980                      35          ASL.L   #4,D0
00000026  D018                      36          ADD.B   (A0)+,D0
00000028  5301                      37          SUBI.B  #1,D1
0000002A  66F8                      38          BNE     addByteLoop
0000002C                            39  conv_end
0000002C  4CDF 7FFE                 40          MOVEM.L     (SP)+, D1-D7/A0-A6
00000030  4E75                      41          RTS
00000032                            42          
00000032                            43  numSub  *Convert ASCII 'number' to true number byte; Should not be called outside of the A2H subroutines
00000032  0418 0030                 44          SUBI.B  #$30,(A0)+              *Subtract difference between null ASCII and '0' ASCII
00000036  5341                      45          SUB.W   #1,D1                   *Decrement loop counter
00000038  66F8                      46          BNE     numSub                  *If loop has not ended restart
0000003A  60D2                      47          BRA     numSubRTN
0000003C                            48  
0000003C                            49  upSub   *Loops through string to remove any upper case characters 
0000003C                            50          *that may remain in the string
0000003C  0C10 0009                 51          CMPI.B  #9,(A0)                 *Check if the value is greater than 0-9
00000040  6F00 0004                 52          BLE     upSEnd                  *If it's not, continue loop
00000044  5310                      53          SUBI.B  #1,(A0)                 *Otherwise, subtract difference between ASCII 'number' code and 'A' code
00000046                            54  upSEnd
00000046  5248                      55          ADDA.W  #1,A0                   *Increment to next position to check for uppercase
00000048  5341                      56          SUB.W   #1,D1                   *Decrement loop counter
0000004A  66F0                      57          BNE     upSub                   
0000004C  60C8                      58          BRA     upSubRTN
0000004E                            59  
0000004E                            60  
0000004E                            61  -------------------- end include --------------------
0000004E                            62          INCLUDE 'opcodes.x68'
0000004E                            63                  INCLUDE 'EADecoder.x68'
0000004E                            64  
0000004E                            65  
0000004E  =00010000                 66  output      EQU $00010000
0000004E                            67  
0000004E  =0000003C                 68  IMMEDIATE   EQU %00111100
0000004E  =00000038                 69  ABS_WORD    EQU %00111000
0000004E  =00000039                 70  ABS_LONG    EQU %00111001
0000004E  =00000000                 71  Dn          EQU %00000000
0000004E  =00000008                 72  An          EQU %00001000
0000004E  =00000010                 73  INDIRECT    EQU %00010000
0000004E  =00000018                 74  POST_INC    EQU %00011000
0000004E  =00000020                 75  PRE_DEC     EQU %00100000
0000004E                            76  
0000004E                            77  
0000004E                            78  
0000004E                            79  EADecoder_left
0000004E  48E7 FF7E                 80          MOVEM.L     D0-D7/A1-A6, -(SP)
00000052                            81          
00000052                            82          ** Swap the mode and register bits
00000052  1800                      83          MOVE.B  D0,D4
00000054  0200 0007                 84          ANDI.B  #%00000111,D0       * Mask mode
00000058  0204 0038                 85          ANDI.B  #%00111000,D4       * Mask register
0000005C  E708                      86          LSL.B   #3,D0               * Move mode bits over
0000005E  E60C                      87          LSR.B   #3,D4               * Move register bits over
00000060  8004                      88          OR.B    D4,D0               * Recombine
00000062                            89          
00000062  6000 0006                 90          BRA     left_skip
00000066                            91  
00000066                            92  EADecoder
00000066  48E7 FF7E                 93          MOVEM.L     D0-D7/A1-A6, -(SP) *Store registers on stack, except D0
0000006A                            94  left_skip   
0000006A  4242                      95          CLR     D2    
0000006C  4243                      96          CLR     D3 
0000006E  1401                      97          MOVE.B  D1,D2 ** Store opcode size in bytes into D2
00000070                            98          
00000070  43F9 00010000             99          LEA     output,A1
00000076  45F9 00010000            100          LEA     output,A2
0000007C                           101          
0000007C                           102          *First, decoder will check for the 3 types with hard coded register values
0000007C  163C 0001                103          MOVE.B  #1,D3
00000080  B07C 003C                104          CMP     #IMMEDIATE,D0
00000084  6700 0068                105          BEQ     dec_immediate
00000088                           106          
00000088  B07C 0038                107          CMP     #ABS_WORD,D0
0000008C  6700 007C                108          BEQ     dec_abs_word
00000090                           109          
00000090  B07C 0039                110          CMP     #ABS_LONG,D0
00000094  6700 0080                111          BEQ     dec_abs_long
00000098                           112          
00000098                           113          *If it was none of the above, store the register and mode seperately
00000098  4243                     114          CLR     D3
0000009A  1200                     115          MOVE.B  D0,D1
0000009C  0201 0038                116          ANDI.B  #%00111000,D1           *Get mode value
000000A0  0200 0007                117          ANDI.B  #%00000111,D0           *Get register value
000000A4  0600 0030                118          ADDI.B  #$30,D0
000000A8                           119                
000000A8  B27C 0000                120          CMP     #Dn,D1
000000AC  6700 0074                121          BEQ     dec_Dn 
000000B0                           122          
000000B0  B27C 0008                123          CMP     #An,D1
000000B4  6700 0078                124          BEQ     dec_An
000000B8                           125                  
000000B8  B27C 0010                126          CMP     #INDIRECT,D1
000000BC  6700 007C                127          BEQ     dec_indirect
000000C0                           128                  
000000C0  B27C 0018                129          CMP     #POST_INC,D1
000000C4  6700 0088                130          BEQ     dec_post_inc
000000C8                           131                  
000000C8  B27C 0020                132          CMP     #PRE_DEC,D1
000000CC  6700 009A                133          BEQ     dec_pre_dec
000000D0                           134  
000000D0                           135  dec_return ** Common return for all types
000000D0                           136          
000000D0                           137          ** Print display string
000000D0  103C 000E                138          MOVE.B  #14,D0
000000D4  4E4F                     139          TRAP    #15
000000D6                           140          
000000D6                           141          ** If there is immediate data to print, print it
000000D6  B67C 0001                142          CMP     #1,D3
000000DA  6600 000C                143          BNE     imm_skip
000000DE                           144          
000000DE  103C 000F                145          MOVE.B  #15,D0
000000E2  143C 0010                146          MOVE.B  #16,D2
000000E6  4E4F                     147          TRAP    #15
000000E8                           148  
000000E8                           149  imm_skip
000000E8  4CDF 7EFF                150          MOVEM.L     (SP)+, D0-D7/A1-A6 *Return register data from stack, except D0
000000EC  4E75                     151          RTS
000000EE                           152          
000000EE                           153          * Individual EA decoders *
000000EE                           154  
000000EE                           155  dec_immediate   *DECODE IMMEDIATE VALUE*
000000EE  14FC 0023                156          MOVE.B  #'#',(A2)+  * Move '#' char into string
000000F2  14FC 0024                157          MOVE.B  #'$',(A2)+  * Move '$' char into string
000000F6  14FC 0000                158          MOVE.B  #$0,(A2)+   * Null terminate string
000000FA  B47C 0002                159          CMP     #2,D2       * Check if data is word length
000000FE  6700 0006                160          BEQ     imm_word    
00000102                           161          
00000102  2218                     162          MOVE.L  (A0)+,D1    * Length was long
00000104  60CA                     163          BRA     dec_return
00000106                           164          
00000106                           165  imm_word
00000106  3218                     166          MOVE.W  (A0)+,D1    * Length was word
00000108  60C6                     167          BRA     dec_return
0000010A                           168  
0000010A                           169  
0000010A                           170  dec_abs_word    *DECODE ABSOLUTE WORD*
0000010A  14FC 0024                171          MOVE.B  #'$',(A2)+  * Move '$' char into string
0000010E  14FC 0000                172          MOVE.B  #$0,(A2)+   * Null terminate string
00000112  3218                     173          MOVE.W  (A0)+,D1
00000114  60BA                     174          BRA     dec_return
00000116                           175          
00000116                           176  
00000116                           177  dec_abs_long    *DECODE ABSOLUTE LONG*
00000116  14FC 0024                178          MOVE.B  #'$',(A2)+  * Move '$' char into string
0000011A  14FC 0000                179          MOVE.B  #$0,(A2)+   * Null terminate string
0000011E  2218                     180          MOVE.L  (A0)+,D1
00000120  60AE                     181          BRA     dec_return
00000122                           182          
00000122                           183  
00000122                           184  dec_Dn          *DECODE DIRECT DATA*
00000122  14FC 0044                185          MOVE.B  #'D',(A2)+
00000126  14C0                     186          MOVE.B  D0,(A2)+
00000128  14FC 0000                187          MOVE.B  #$0,(A2)+
0000012C  60A2                     188          BRA     dec_return
0000012E                           189  
0000012E                           190          
0000012E                           191  dec_An          *DECODE DIRECT ADDRESS*
0000012E  14FC 0041                192          MOVE.B  #'A',(A2)+
00000132  14C0                     193          MOVE.B  D0,(A2)+
00000134  14FC 0000                194          MOVE.B  #$0,(A2)+
00000138  6096                     195          BRA     dec_return
0000013A                           196  
0000013A                           197  
0000013A                           198  dec_indirect    *DECODE INDIRECT ACCESS*
0000013A  14FC 0028                199          MOVE.B  #'(',(A2)+
0000013E  14FC 0041                200          MOVE.B  #'A',(A2)+
00000142  14C0                     201          MOVE.B  D0,(A2)+
00000144  14FC 0029                202          MOVE.B  #')',(A2)+
00000148  14FC 0000                203          MOVE.B  #$0,(A2)+
0000014C  6082                     204          BRA     dec_return
0000014E                           205          
0000014E                           206  
0000014E                           207  dec_post_inc    *DECODE INDIRECT POST INCREMENT*
0000014E  14FC 0028                208          MOVE.B  #'(',(A2)+
00000152  14FC 0041                209          MOVE.B  #'A',(A2)+
00000156  14C0                     210          MOVE.B  D0,(A2)+
00000158  14FC 0029                211          MOVE.B  #')',(A2)+
0000015C  14FC 002B                212          MOVE.B  #'+',(A2)+
00000160  14FC 0000                213          MOVE.B  #$0,(A2)+
00000164  6000 FF6A                214          BRA     dec_return
00000168                           215          
00000168                           216          
00000168                           217  dec_pre_dec    *DECODE INDIRECT PRE DECREMENT*
00000168  14FC 002D                218          MOVE.B  #'-',(A2)+
0000016C  14FC 0028                219          MOVE.B  #'(',(A2)+
00000170  14FC 0041                220          MOVE.B  #'A',(A2)+
00000174  14C0                     221          MOVE.B  D0,(A2)+
00000176  14FC 0029                222          MOVE.B  #')',(A2)+
0000017A  14FC 0000                223          MOVE.B  #$0,(A2)+
0000017E  6000 FF50                224          BRA     dec_return
00000182                           225  
00000182                           226  
00000182                           227  
00000182                           228  
00000182                           229  
00000182                           230  
00000182                           231  
00000182                           232  
00000182                           233  
00000182                           234  -------------------- end include --------------------
00000182                           235                  INCLUDE 'connor_opcodes.x68'
00000182= 4D 4F 56 45 51 00        236  pr_MOVEQ        DC.B    'MOVEQ',0
00000188= 41 44 44 00              237  pr_ADD          DC.B    'ADD',0
0000018C= 41 44 44 49 00           238  pr_ADDI         DC.B    'ADDI',0
00000191= 41 44 44 51 00           239  pr_ADDQ         DC.B    'ADDQ',0
00000196= 53 55 42 00              240  pr_SUB          DC.B    'SUB',0
0000019A                           241  
0000019A                           242  
0000019A                           243  
0000019A                           244  MATCH_NOP
0000019A  43F9 00001177            245      LEA         pr_NOP,A1
000001A0  103C 000E                246      MOVE.B      #14,D0
000001A4  4E4F                     247      TRAP        #15
000001A6  6000 101C                248      BRA         opdec_return
000001AA                           249  
000001AA                           250      
000001AA                           251  MATCH_MOVE_B
000001AA                           252      ** Move command size into D1
000001AA  123C 0002                253      MOVE.B      #2,D1
000001AE                           254      ** Print command
000001AE  103C 000E                255      MOVE.B      #14,D0
000001B2  43F9 0000117B            256      LEA         pr_MOVE,A1
000001B8  4E4F                     257      TRAP        #15
000001BA                           258      ** Print size
000001BA  43F9 0000116C            259      LEA         pr_BYTE,A1
000001C0  4E4F                     260      TRAP        #15
000001C2                           261      
000001C2  6000 003A                262      BRA         print_move
000001C6                           263      
000001C6                           264  MATCH_MOVE_W
000001C6                           265      ** Move command size into D1
000001C6  123C 0002                266      MOVE.B      #2,D1
000001CA                           267      ** Print command
000001CA  103C 000E                268      MOVE.B      #14,D0
000001CE  43F9 0000117B            269      LEA         pr_MOVE,A1
000001D4  4E4F                     270      TRAP        #15
000001D6                           271      ** Print size
000001D6  43F9 0000116F            272      LEA         pr_WORD,A1
000001DC  4E4F                     273      TRAP        #15
000001DE                           274      
000001DE  6000 001E                275      BRA         print_move
000001E2                           276      
000001E2                           277  MATCH_MOVE_L
000001E2                           278      ** Move command size into D1
000001E2  123C 0004                279      MOVE.B      #4,D1
000001E6                           280      ** Print command
000001E6  103C 000E                281      MOVE.B      #14,D0
000001EA  43F9 0000117B            282      LEA         pr_MOVE,A1
000001F0  4E4F                     283      TRAP        #15
000001F2                           284      ** Print size
000001F2  43F9 00001172            285      LEA         pr_LONG,A1
000001F8  4E4F                     286      TRAP        #15
000001FA                           287      
000001FA  6000 0002                288      BRA         print_move
000001FE                           289  
000001FE                           290  print_move
000001FE                           291      ** Print space
000001FE  43F9 00001168            292      LEA         pr_space,A1
00000204  4E4F                     293      TRAP        #15
00000206                           294      ** Decode right side ea
00000206  1002                     295      MOVE.B      D2,D0
00000208  0200 003F                296      ANDI.B      #%00111111,D0
0000020C  4EB8 0066                297      JSR         EADecoder
00000210                           298      ** Add comma
00000210  103C 000E                299      MOVE.B      #14,D0
00000214  43F9 0000116A            300      LEA         pr_comma,A1
0000021A  4E4F                     301      TRAP        #15
0000021C                           302      ** Decode left side ea
0000021C  3002                     303      MOVE.W      D2,D0
0000021E  0240 0FC0                304      ANDI.W      #%0000111111000000,D0
00000222  EC48                     305      LSR.W       #6,D0
00000224  4EB8 004E                306      JSR         EADecoder_left
00000228                           307      
00000228  6000 0F9A                308      BRA         opdec_return
0000022C                           309      
0000022C                           310  
0000022C                           311  MATCH_MOVEQ
0000022C                           312      ** Print command
0000022C  103C 000E                313      MOVE.B      #14,D0
00000230  43F8 0182                314      LEA         pr_MOVEQ,A1
00000234  4E4F                     315      TRAP        #15
00000236                           316      ** Print space
00000236  43F9 00001168            317      LEA         pr_space,A1
0000023C  4E4F                     318      TRAP        #15
0000023E                           319      ** Print data
0000023E  1202                     320      MOVE.B      D2,D1
00000240  103C 000F                321      MOVE.B      #15,D0
00000244  2602                     322      MOVE.L      D2,D3
00000246  7410                     323      MOVE.L      #16,D2
00000248  4E4F                     324      TRAP        #15
0000024A  2403                     325      MOVE.L      D3,D2
0000024C                           326      ** Decode register
0000024C  3002                     327      MOVE.W      D2,D0
0000024E  0240 0E00                328      ANDI.W      #%0000111000000000,D0
00000252  EC48                     329      LSR.W       #6,D0
00000254  4EB8 004E                330      JSR         EADecoder_left
00000258                           331      
00000258  6000 0F6A                332      BRA         opdec_return
0000025C                           333      
0000025C                           334  
0000025C                           335  MATCH_ADDI_B
0000025C                           336      ** Move command size into D1
0000025C  123C 0002                337      MOVE.B      #2,D1
00000260                           338      ** Print command
00000260  103C 000E                339      MOVE.B      #14,D0
00000264  43F8 018C                340      LEA         pr_ADDI,A1
00000268  4E4F                     341      TRAP        #15
0000026A                           342      ** Print size
0000026A  43F9 0000116C            343      LEA         pr_BYTE,A1
00000270  4E4F                     344      TRAP        #15
00000272                           345      
00000272  6000 0036                346      BRA         print_addi
00000276                           347      
00000276                           348  MATCH_ADDI_W
00000276                           349      ** Move command size into D1
00000276  123C 0002                350      MOVE.B      #2,D1
0000027A                           351      ** Print command
0000027A  103C 000E                352      MOVE.B      #14,D0
0000027E  43F8 018C                353      LEA         pr_ADDI,A1
00000282  4E4F                     354      TRAP        #15
00000284                           355      ** Print size
00000284  43F9 0000116F            356      LEA         pr_WORD,A1
0000028A  4E4F                     357      TRAP        #15
0000028C                           358      
0000028C  6000 001C                359      BRA         print_addi
00000290                           360      
00000290                           361  MATCH_ADDI_L
00000290                           362      ** Move command size into D1
00000290  123C 0004                363      MOVE.B      #4,D1
00000294                           364      ** Print command
00000294  103C 000E                365      MOVE.B      #14,D0
00000298  43F8 018C                366      LEA         pr_ADDI,A1
0000029C  4E4F                     367      TRAP        #15
0000029E                           368      ** Print size
0000029E  43F9 00001172            369      LEA         pr_LONG,A1
000002A4  4E4F                     370      TRAP        #15
000002A6                           371      
000002A6  6000 0002                372      BRA         print_addi
000002AA                           373      
000002AA                           374  print_addi
000002AA                           375      ** Print space
000002AA  43F9 00001168            376      LEA         pr_space,A1
000002B0  4E4F                     377      TRAP        #15
000002B2                           378      ** Print Immediate data
000002B2  103C 003C                379      MOVE.B      #%00111100,D0
000002B6  4EB8 0066                380      JSR         EADecoder
000002BA                           381      ** Add comma
000002BA  103C 000E                382      MOVE.B      #14,D0
000002BE  43F9 0000116A            383      LEA         pr_comma,A1
000002C4  4E4F                     384      TRAP        #15
000002C6                           385      ** Decode right side ea
000002C6  1002                     386      MOVE.B      D2,D0
000002C8  0200 003F                387      ANDI.B      #%00111111,D0
000002CC  4EB8 0066                388      JSR         EADecoder
000002D0                           389      
000002D0  6000 0EF2                390      BRA         opdec_return
000002D4                           391      
000002D4                           392      
000002D4                           393  MATCH_ADD_TO_REG_B
000002D4                           394      ** Move command size into D1
000002D4  123C 0002                395      MOVE.B      #2,D1
000002D8                           396      ** Print command
000002D8  103C 000E                397      MOVE.B      #14,D0
000002DC  43F8 0188                398      LEA         pr_ADD,A1
000002E0  4E4F                     399      TRAP        #15
000002E2                           400      ** Print size
000002E2  43F9 0000116C            401      LEA         pr_BYTE,A1
000002E8  4E4F                     402      TRAP        #15
000002EA                           403      
000002EA  6000 0084                404      BRA         print_add_to_reg
000002EE                           405      
000002EE                           406  MATCH_ADD_TO_REG_W
000002EE                           407      ** Move command size into D1
000002EE  123C 0002                408      MOVE.B      #2,D1
000002F2                           409      ** Print command
000002F2  103C 000E                410      MOVE.B      #14,D0
000002F6  43F8 0188                411      LEA         pr_ADD,A1
000002FA  4E4F                     412      TRAP        #15
000002FC                           413      ** Print size
000002FC  43F9 0000116F            414      LEA         pr_WORD,A1
00000302  4E4F                     415      TRAP        #15
00000304                           416      
00000304  6000 006A                417      BRA         print_add_to_reg
00000308                           418      
00000308                           419  MATCH_ADD_TO_REG_L
00000308                           420      ** Move command size into D1
00000308  123C 0004                421      MOVE.B      #4,D1
0000030C                           422      ** Print command
0000030C  103C 000E                423      MOVE.B      #14,D0
00000310  43F8 0188                424      LEA         pr_ADD,A1
00000314  4E4F                     425      TRAP        #15
00000316                           426      ** Print size
00000316  43F9 00001172            427      LEA         pr_LONG,A1
0000031C  4E4F                     428      TRAP        #15
0000031E                           429      
0000031E  6000 0050                430      BRA         print_add_to_reg
00000322                           431      
00000322                           432  MATCH_SUB_TO_DN_B
00000322                           433      ** Move command size into D1
00000322  123C 0002                434      MOVE.B      #2,D1
00000326                           435      ** Print command
00000326  103C 000E                436      MOVE.B      #14,D0
0000032A  43F8 0196                437      LEA         pr_SUB,A1
0000032E  4E4F                     438      TRAP        #15
00000330                           439      ** Print size
00000330  43F9 0000116C            440      LEA         pr_BYTE,A1
00000336  4E4F                     441      TRAP        #15
00000338                           442      
00000338  6000 0036                443      BRA         print_add_to_reg
0000033C                           444      
0000033C                           445  MATCH_SUB_TO_DN_W
0000033C                           446      ** Move command size into D1
0000033C  123C 0002                447      MOVE.B      #2,D1
00000340                           448      ** Print command
00000340  103C 000E                449      MOVE.B      #14,D0
00000344  43F8 0196                450      LEA         pr_SUB,A1
00000348  4E4F                     451      TRAP        #15
0000034A                           452      ** Print size
0000034A  43F9 0000116F            453      LEA         pr_WORD,A1
00000350  4E4F                     454      TRAP        #15
00000352                           455      
00000352  6000 001C                456      BRA         print_add_to_reg
00000356                           457      
00000356                           458  MATCH_SUB_TO_DN_L
00000356                           459      ** Move command size into D1
00000356  123C 0004                460      MOVE.B      #4,D1
0000035A                           461      ** Print command
0000035A  103C 000E                462      MOVE.B      #14,D0
0000035E  43F8 0196                463      LEA         pr_SUB,A1
00000362  4E4F                     464      TRAP        #15
00000364                           465      ** Print size
00000364  43F9 00001172            466      LEA         pr_LONG,A1
0000036A  4E4F                     467      TRAP        #15
0000036C                           468      
0000036C  6000 0002                469      BRA         print_add_to_reg
00000370                           470      
00000370                           471  print_add_to_reg
00000370                           472      ** Print space
00000370  43F9 00001168            473      LEA         pr_space,A1
00000376  4E4F                     474      TRAP        #15
00000378                           475      ** Print source
00000378  1002                     476      MOVE.B      D2,D0
0000037A  0200 003F                477      ANDI.B      #%00111111,D0
0000037E  4EB8 0066                478      JSR         EADecoder
00000382                           479      ** Add comma
00000382  103C 000E                480      MOVE.B      #14,D0
00000386  43F9 0000116A            481      LEA         pr_comma,A1
0000038C  4E4F                     482      TRAP        #15
0000038E                           483      ** Print destination
0000038E  3002                     484      MOVE.W      D2,D0
00000390  0240 0E00                485      ANDI.W      #%0000111000000000,D0
00000394  EC48                     486      LSR.W       #6,D0
00000396  4EB8 004E                487      JSR         EADecoder_left
0000039A                           488      
0000039A  6000 0E28                489      BRA         opdec_return
0000039E                           490      
0000039E                           491  MATCH_ADD_TO_EA_B
0000039E                           492      ** Move command size into D1
0000039E  123C 0002                493      MOVE.B      #2,D1
000003A2                           494      ** Print command
000003A2  103C 000E                495      MOVE.B      #14,D0
000003A6  43F8 0188                496      LEA         pr_ADD,A1
000003AA  4E4F                     497      TRAP        #15
000003AC                           498      ** Print size
000003AC  43F9 0000116C            499      LEA         pr_BYTE,A1
000003B2  4E4F                     500      TRAP        #15
000003B4                           501      
000003B4  6000 0084                502      BRA         print_add_to_ea
000003B8                           503      
000003B8                           504  MATCH_ADD_TO_EA_W
000003B8                           505      ** Move command size into D1
000003B8  123C 0002                506      MOVE.B      #2,D1
000003BC                           507      ** Print command
000003BC  103C 000E                508      MOVE.B      #14,D0
000003C0  43F8 0188                509      LEA         pr_ADD,A1
000003C4  4E4F                     510      TRAP        #15
000003C6                           511      ** Print size
000003C6  43F9 0000116F            512      LEA         pr_WORD,A1
000003CC  4E4F                     513      TRAP        #15
000003CE                           514      
000003CE  6000 006A                515      BRA         print_add_to_ea
000003D2                           516      
000003D2                           517  MATCH_ADD_TO_EA_L 
000003D2                           518      ** Move command size into D1
000003D2  123C 0004                519      MOVE.B      #4,D1
000003D6                           520      ** Print command
000003D6  103C 000E                521      MOVE.B      #14,D0
000003DA  43F8 0188                522      LEA         pr_ADD,A1
000003DE  4E4F                     523      TRAP        #15
000003E0                           524      ** Print size
000003E0  43F9 00001172            525      LEA         pr_LONG,A1
000003E6  4E4F                     526      TRAP        #15
000003E8                           527      
000003E8  6000 0050                528      BRA         print_add_to_ea
000003EC                           529      
000003EC                           530  MATCH_SUB_TO_EA_B
000003EC                           531      ** Move command size into D1
000003EC  123C 0002                532      MOVE.B      #2,D1
000003F0                           533      ** Print command
000003F0  103C 000E                534      MOVE.B      #14,D0
000003F4  43F8 0196                535      LEA         pr_SUB,A1
000003F8  4E4F                     536      TRAP        #15
000003FA                           537      ** Print size
000003FA  43F9 0000116C            538      LEA         pr_BYTE,A1
00000400  4E4F                     539      TRAP        #15
00000402                           540      
00000402  6000 0036                541      BRA         print_add_to_ea
00000406                           542      
00000406                           543  MATCH_SUB_TO_EA_W
00000406                           544      ** Move command size into D1
00000406  123C 0002                545      MOVE.B      #2,D1
0000040A                           546      ** Print command
0000040A  103C 000E                547      MOVE.B      #14,D0
0000040E  43F8 0196                548      LEA         pr_SUB,A1
00000412  4E4F                     549      TRAP        #15
00000414                           550      ** Print size
00000414  43F9 0000116F            551      LEA         pr_WORD,A1
0000041A  4E4F                     552      TRAP        #15
0000041C                           553      
0000041C  6000 001C                554      BRA         print_add_to_ea
00000420                           555      
00000420                           556  MATCH_SUB_TO_EA_L
00000420                           557      ** Move command size into D1
00000420  123C 0004                558      MOVE.B      #4,D1
00000424                           559      ** Print command
00000424  103C 000E                560      MOVE.B      #14,D0
00000428  43F8 0196                561      LEA         pr_SUB,A1
0000042C  4E4F                     562      TRAP        #15
0000042E                           563      ** Print size
0000042E  43F9 00001172            564      LEA         pr_LONG,A1
00000434  4E4F                     565      TRAP        #15
00000436                           566      
00000436  6000 0002                567      BRA         print_add_to_ea
0000043A                           568  
0000043A                           569  print_add_to_ea
0000043A                           570      ** Print space
0000043A  43F9 00001168            571      LEA         pr_space,A1
00000440  4E4F                     572      TRAP        #15
00000442                           573      ** Print Source
00000442  3002                     574      MOVE.W      D2,D0
00000444  0240 0E00                575      ANDI.W      #%0000111000000000,D0
00000448  EC48                     576      LSR.W       #6,D0
0000044A  4EB8 004E                577      JSR         EADecoder_left
0000044E                           578      ** Add comma
0000044E  103C 000E                579      MOVE.B      #14,D0
00000452  43F9 0000116A            580      LEA         pr_comma,A1
00000458  4E4F                     581      TRAP        #15
0000045A                           582      ** Print source
0000045A  1002                     583      MOVE.B      D2,D0
0000045C  0200 003F                584      ANDI.B      #%00111111,D0
00000460  4EB8 0066                585      JSR         EADecoder
00000464                           586      
00000464  6000 0D5E                587      BRA         opdec_return
00000468                           588      
00000468                           589    
00000468                           590  MATCH_ADDQ_B
00000468                           591      ** Move command size into D1
00000468  123C 0002                592      MOVE.B      #2,D1
0000046C                           593      ** Print command
0000046C  103C 000E                594      MOVE.B      #14,D0
00000470  43F8 0191                595      LEA         pr_ADDQ,A1
00000474  4E4F                     596      TRAP        #15
00000476                           597      ** Print size
00000476  43F9 0000116C            598      LEA         pr_BYTE,A1
0000047C  4E4F                     599      TRAP        #15
0000047E                           600      
0000047E  6000 0036                601      BRA         print_addq
00000482                           602      
00000482                           603  MATCH_ADDQ_W
00000482                           604      ** Move command size into D1
00000482  123C 0002                605      MOVE.B      #2,D1
00000486                           606      ** Print command
00000486  103C 000E                607      MOVE.B      #14,D0
0000048A  43F8 0191                608      LEA         pr_ADDQ,A1
0000048E  4E4F                     609      TRAP        #15
00000490                           610      ** Print size
00000490  43F9 0000116F            611      LEA         pr_WORD,A1
00000496  4E4F                     612      TRAP        #15
00000498                           613      
00000498  6000 001C                614      BRA         print_addq
0000049C                           615      
0000049C                           616  MATCH_ADDQ_L
0000049C                           617      ** Move command size into D1
0000049C  123C 0004                618      MOVE.B      #4,D1
000004A0                           619      ** Print command
000004A0  103C 000E                620      MOVE.B      #14,D0
000004A4  43F8 0191                621      LEA         pr_ADDQ,A1
000004A8  4E4F                     622      TRAP        #15
000004AA                           623      ** Print size
000004AA  43F9 00001172            624      LEA         pr_LONG,A1
000004B0  4E4F                     625      TRAP        #15
000004B2                           626      
000004B2  6000 0002                627      BRA         print_addq
000004B6                           628      
000004B6                           629  print_addq
000004B6                           630      ** Print space
000004B6  43F9 00001168            631      LEA         pr_space,A1
000004BC  4E4F                     632      TRAP        #15
000004BE                           633      ** Print hash
000004BE  43F9 00001175            634      LEA         pr_hash,A1
000004C4  4E4F                     635      TRAP        #15
000004C6                           636      ** Print Immediate data
000004C6  3602                     637      MOVE.W      D2,D3 * Temporarily move op data
000004C8  3202                     638      MOVE.W      D2,D1
000004CA  0241 0E00                639      ANDI.W      #%0000111000000000,D1
000004CE  EC49                     640      LSR.W       #6,D1
000004D0  E649                     641      LSR.W       #3,D1
000004D2  143C 0010                642      MOVE.B      #16,D2
000004D6  303C 000F                643      MOVE.W      #15,D0
000004DA  4E4F                     644      TRAP        #15
000004DC                           645      
000004DC  3403                     646      MOVE.W      D3,D2 * Move op data back
000004DE                           647      
000004DE                           648      ** Add comma
000004DE  103C 000E                649      MOVE.B      #14,D0
000004E2  43F9 0000116A            650      LEA         pr_comma,A1
000004E8  4E4F                     651      TRAP        #15
000004EA                           652      ** Decode right side ea
000004EA  1002                     653      MOVE.B      D2,D0
000004EC  0200 003F                654      ANDI.B      #%00111111,D0
000004F0  4EB8 0066                655      JSR         EADecoder
000004F4                           656      
000004F4  6000 0CCE                657      BRA         opdec_return
000004F8                           658  
000004F8                           659  
000004F8                           660  
000004F8                           661  -------------------- end include --------------------
000004F8                           662                  INCLUDE 'spencer_opcodes.x68'
000004F8= 45 52 52 4F 52 00        663  pr_ERROR    DC.B    'ERROR',0
000004FE                           664  
000004FE= 42 43 43 00              665  pr_BCC_CC   DC.B    'BCC',0
00000502= 42 43 53 00              666  pr_BCC_CS   DC.B    'BCS',0
00000506= 42 45 51 00              667  pr_BCC_EQ   DC.B    'BEQ',0
0000050A= 42 47 45 00              668  pr_BCC_GE   DC.B    'BGE',0
0000050E= 42 47 54 00              669  pr_BCC_GT   DC.B    'BGT',0
00000512= 42 48 49 00              670  pr_BCC_HI   DC.B    'BHI',0
00000516= 42 4C 45 00              671  pr_BCC_LE   DC.B    'BLE',0
0000051A= 42 4C 53 00              672  pr_BCC_LS   DC.B    'BLS',0
0000051E= 42 4C 54 00              673  pr_BCC_LT   DC.B    'BLT',0
00000522= 42 4D 49 00              674  pr_BCC_MI   DC.B    'BMI',0
00000526= 42 4E 45 00              675  pr_BCC_NE   DC.B    'BNE',0
0000052A= 42 50 4C 00              676  pr_BCC_PL   DC.B    'BPL',0
0000052E= 42 56 43 00              677  pr_BCC_VC   DC.B    'BVC',0
00000532= 42 56 53 00              678  pr_BCC_VS   DC.B    'BVS',0
00000536                           679  
00000536                           680  Get_BCC_Displacement_8bit
00000536                           681  
00000536  4246                     682      CLR     D6
00000538  1C02                     683      MOVE.B  D2,D6
0000053A  4E75                     684      RTS
0000053C                           685  Get_BCC_Displacement_16bit
0000053C                           686  
0000053C  4246                     687      CLR     D6
0000053E  3C18                     688      MOVE.W  (A0)+,D6
00000540  4E75                     689      RTS
00000542                           690  Get_BCC_Displacement_32bit
00000542                           691  
00000542  4246                     692      CLR     D6
00000544  2C18                     693      MOVE.L  (A0)+,D6
00000546  4E75                     694      RTS
00000548                           695  Get_Current_Address
00000548                           696  
00000548  4247                     697      CLR     D7
0000054A  2E08                     698      MOVE.L      A0,D7 
0000054C  5587                     699      SUBI.L      #2,D7
0000054E  4E75                     700      RTS
00000550                           701  Get_BCC_Destination_Address
00000550                           702  
00000550  9E86                     703      SUB.L   D6,D7    
00000552  4E75                     704      RTS
00000554                           705  
00000554                           706  
00000554                           707  PrintHex
00000554                           708  
00000554  48A7 2000                709      MOVEM.W     D2, -(SP)
00000558                           710      
00000558  103C 000F                711      MOVE.B      #15,D0
0000055C  143C 0010                712      MOVE.B      #16,D2 * print base 16
00000560  4E4F                     713      TRAP        #15
00000562                           714  
00000562  4C9F 0004                715      MOVEM.W     (SP)+,D2
00000566  4E75                     716      RTS
00000568                           717  PrintString
00000568  103C 000E                718      MOVE.B      #14,D0
0000056C  4E4F                     719      TRAP        #15
0000056E  4E75                     720      RTS
00000570                           721  PrintSizeByte
00000570  103C 000E                722      MOVE.B      #14,D0
00000574  43F9 0000116C            723      LEA         pr_BYTE,A1
0000057A  4E4F                     724      TRAP        #15
0000057C  4E75                     725      RTS
0000057E                           726  PrintSizeWord
0000057E  103C 000E                727      MOVE.B      #14,D0
00000582  43F9 0000116F            728      LEA         pr_WORD,A1
00000588  4E4F                     729      TRAP        #15
0000058A  4E75                     730      RTS
0000058C                           731  PrintSizeLong
0000058C  103C 000E                732      MOVE.B      #14,D0
00000590  43F9 00001172            733      LEA         pr_LONG,A1
00000596  4E4F                     734      TRAP        #15
00000598  4E75                     735      RTS
0000059A                           736  
0000059A                           737  
0000059A                           738  MATCH_CC_T_8
0000059A  3A02                     739      MOVE.W      D2,D5       *REMOVE
0000059C                           740  MATCH_CC_T_16
0000059C  3A02                     741      MOVE.W      D2,D5       *REMOVE
0000059E                           742  MATCH_CC_T_32
0000059E  3A02                     743      MOVE.W      D2,D5       *REMOVE
000005A0                           744  MATCH_CC_F_8
000005A0  3A02                     745      MOVE.W      D2,D5       *REMOVE
000005A2                           746  MATCH_CC_F_16
000005A2  3A02                     747      MOVE.W      D2,D5       *REMOVE
000005A4                           748  MATCH_CC_F_32
000005A4  3A02                     749      MOVE.W      D2,D5       *REMOVE
000005A6                           750  MATCH_CC_HI_8
000005A6                           751      ** print opcode **
000005A6  43F8 0512                752      LEA         pr_BCC_HI,A1                
000005AA  61BC                     753      BSR         PrintString
000005AC                           754      
000005AC  61C2                     755      BSR         PrintSizeBYTE
000005AE  43F9 00001168            756      LEA         pr_space,A1
000005B4  61B2                     757      BSR         PrintString
000005B6                           758   
000005B6                           759      ** print address **
000005B6  6100 FF7E                760      BSR         Get_BCC_Displacement_8bit 
000005BA  618C                     761      BSR         Get_Current_Address
000005BC  6192                     762      BSR         Get_BCC_Destination_Address
000005BE  2207                     763      MOVE.L      D7,D1
000005C0  6192                     764      BSR         PrintHex
000005C2                           765      
000005C2  6000 0C00                766      BRA         opdec_return
000005C6                           767  
000005C6                           768  MATCH_CC_HI_16
000005C6                           769      ** print opcode **
000005C6  43F8 0512                770      LEA         pr_BCC_HI,A1                
000005CA  619C                     771      BSR         PrintString
000005CC                           772      
000005CC  61B0                     773      BSR         PrintSizeWORD
000005CE  43F9 00001168            774      LEA         pr_space,A1
000005D4  6192                     775      BSR         PrintString
000005D6                           776   
000005D6                           777      ** print address **
000005D6  6100 FF64                778      BSR         Get_BCC_Displacement_16bit 
000005DA  6100 FF6C                779      BSR         Get_Current_Address
000005DE  6100 FF70                780      BSR         Get_BCC_Destination_Address
000005E2  2207                     781      MOVE.L      D7,D1
000005E4  6100 FF6E                782      BSR         PrintHex
000005E8                           783      
000005E8  6000 0BDA                784      BRA         opdec_return
000005EC                           785  MATCH_CC_HI_32
000005EC                           786      ** print opcode **
000005EC  43F8 0512                787      LEA         pr_BCC_HI,A1                
000005F0  6100 FF76                788      BSR         PrintString
000005F4                           789      
000005F4  6196                     790      BSR         PrintSizeLONG
000005F6  43F9 00001168            791      LEA         pr_space,A1
000005FC  6100 FF6A                792      BSR         PrintString
00000600                           793   
00000600                           794      ** print address **
00000600  6100 FF40                795      BSR         Get_BCC_Displacement_32bit 
00000604  6100 FF42                796      BSR         Get_Current_Address
00000608  6100 FF46                797      BSR         Get_BCC_Destination_Address
0000060C  2207                     798      MOVE.L      D7,D1
0000060E  6100 FF44                799      BSR         PrintHex
00000612                           800      
00000612  6000 0BB0                801      BRA         opdec_return
00000616                           802  MATCH_CC_LS_8
00000616                           803      ** print opcode **
00000616  43F8 051A                804      LEA         pr_BCC_LS,A1                
0000061A  6100 FF4C                805      BSR         PrintString
0000061E                           806      
0000061E  6100 FF50                807      BSR         PrintSizeBYTE
00000622  43F9 00001168            808      LEA         pr_space,A1
00000628  6100 FF3E                809      BSR         PrintString
0000062C                           810   
0000062C                           811      ** print address **
0000062C  6100 FF08                812      BSR         Get_BCC_Displacement_8bit 
00000630  6100 FF16                813      BSR         Get_Current_Address
00000634  6100 FF1A                814      BSR         Get_BCC_Destination_Address
00000638  2207                     815      MOVE.L      D7,D1
0000063A  6100 FF18                816      BSR         PrintHex
0000063E                           817      
0000063E  6000 0B84                818      BRA         opdec_return
00000642                           819  MATCH_CC_LS_16
00000642                           820      ** print opcode **
00000642  43F8 051A                821      LEA         pr_BCC_LS,A1                
00000646  6100 FF20                822      BSR         PrintString
0000064A                           823      
0000064A  6100 FF32                824      BSR         PrintSizeWORD
0000064E  43F9 00001168            825      LEA         pr_space,A1
00000654  6100 FF12                826      BSR         PrintString
00000658                           827   
00000658                           828      ** print address **
00000658  6100 FEE2                829      BSR         Get_BCC_Displacement_16bit 
0000065C  6100 FEEA                830      BSR         Get_Current_Address
00000660  6100 FEEE                831      BSR         Get_BCC_Destination_Address
00000664  2207                     832      MOVE.L      D7,D1
00000666  6100 FEEC                833      BSR         PrintHex
0000066A                           834      
0000066A  6000 0B58                835      BRA         opdec_return
0000066E                           836  
0000066E                           837  MATCH_CC_LS_32  
0000066E                           838      ** print opcode **
0000066E  43F8 051A                839      LEA         pr_BCC_LS,A1                
00000672  6100 FEF4                840      BSR         PrintString
00000676                           841      
00000676  6100 FF14                842      BSR         PrintSizeLONG
0000067A  43F9 00001168            843      LEA         pr_space,A1
00000680  6100 FEE6                844      BSR         PrintString
00000684                           845   
00000684                           846      ** print address **
00000684  6100 FEBC                847      BSR         Get_BCC_Displacement_32bit 
00000688  6100 FEBE                848      BSR         Get_Current_Address
0000068C  6100 FEC2                849      BSR         Get_BCC_Destination_Address
00000690  2207                     850      MOVE.L      D7,D1
00000692  6100 FEC0                851      BSR         PrintHex
00000696                           852      
00000696  6000 0B2C                853      BRA         opdec_return
0000069A                           854  MATCH_CC_CC_8    
0000069A                           855      
0000069A                           856      ** print opcode **
0000069A  43F8 04FE                857      LEA         pr_BCC_CC,A1                
0000069E  6100 FEC8                858      BSR         PrintString
000006A2                           859      
000006A2  6100 FECC                860      BSR         PrintSizeBYTE
000006A6  43F9 00001168            861      LEA         pr_space,A1
000006AC  6100 FEBA                862      BSR         PrintString
000006B0                           863   
000006B0                           864      ** print address **
000006B0  6100 FE84                865      BSR         Get_BCC_Displacement_8bit 
000006B4  6100 FE92                866      BSR         Get_Current_Address
000006B8  6100 FE96                867      BSR         Get_BCC_Destination_Address
000006BC  2207                     868      MOVE.L      D7,D1
000006BE  6100 FE94                869      BSR         PrintHex
000006C2                           870      
000006C2  6000 0B00                871      BRA         opdec_return
000006C6                           872  
000006C6                           873  MATCH_CC_CC_16
000006C6                           874      ** print opcode **
000006C6  43F8 04FE                875      LEA         pr_BCC_CC,A1                
000006CA  6100 FE9C                876      BSR         PrintString
000006CE                           877      
000006CE  6100 FEAE                878      BSR         PrintSizeWORD
000006D2  43F9 00001168            879      LEA         pr_space,A1
000006D8  6100 FE8E                880      BSR         PrintString
000006DC                           881   
000006DC                           882      ** print address **
000006DC  6100 FE5E                883      BSR         Get_BCC_Displacement_16bit 
000006E0  6100 FE66                884      BSR         Get_Current_Address
000006E4  6100 FE6A                885      BSR         Get_BCC_Destination_Address
000006E8  2207                     886      MOVE.L      D7,D1
000006EA  6100 FE68                887      BSR         PrintHex
000006EE                           888      
000006EE  6000 0AD4                889      BRA         opdec_return
000006F2                           890  MATCH_CC_CC_32
000006F2                           891      ** print opcode **
000006F2  43F8 04FE                892      LEA         pr_BCC_CC,A1                
000006F6  6100 FE70                893      BSR         PrintString
000006FA                           894      
000006FA  6100 FE90                895      BSR         PrintSizeLONG
000006FE  43F9 00001168            896      LEA         pr_space,A1
00000704  6100 FE62                897      BSR         PrintString
00000708                           898   
00000708                           899      ** print address **
00000708  6100 FE38                900      BSR         Get_BCC_Displacement_32bit 
0000070C  6100 FE3A                901      BSR         Get_Current_Address
00000710  6100 FE3E                902      BSR         Get_BCC_Destination_Address
00000714  2207                     903      MOVE.L      D7,D1
00000716  6100 FE3C                904      BSR         PrintHex
0000071A                           905      
0000071A  6000 0AA8                906      BRA         opdec_return
0000071E                           907  MATCH_CC_CS_8
0000071E                           908      ** print opcode **
0000071E  43F8 0502                909      LEA         pr_BCC_CS,A1                
00000722  6100 FE44                910      BSR         PrintString
00000726                           911      
00000726  6100 FE48                912      BSR         PrintSizeBYTE
0000072A  43F9 00001168            913      LEA         pr_space,A1
00000730  6100 FE36                914      BSR         PrintString
00000734                           915   
00000734                           916      ** print address **
00000734  6100 FE00                917      BSR         Get_BCC_Displacement_8bit 
00000738  6100 FE0E                918      BSR         Get_Current_Address
0000073C  6100 FE12                919      BSR         Get_BCC_Destination_Address
00000740  2207                     920      MOVE.L      D7,D1
00000742  6100 FE10                921      BSR         PrintHex
00000746                           922      
00000746  6000 0A7C                923      BRA         opdec_return
0000074A                           924  MATCH_CC_CS_16
0000074A                           925      ** print opcode **
0000074A  43F8 0502                926      LEA         pr_BCC_CS,A1                
0000074E  6100 FE18                927      BSR         PrintString
00000752                           928      
00000752  6100 FE2A                929      BSR         PrintSizeWORD
00000756  43F9 00001168            930      LEA         pr_space,A1
0000075C  6100 FE0A                931      BSR         PrintString
00000760                           932   
00000760                           933      ** print address **
00000760  6100 FDDA                934      BSR         Get_BCC_Displacement_16bit 
00000764  6100 FDE2                935      BSR         Get_Current_Address
00000768  6100 FDE6                936      BSR         Get_BCC_Destination_Address
0000076C  2207                     937      MOVE.L      D7,D1
0000076E  6100 FDE4                938      BSR         PrintHex
00000772                           939      
00000772  6000 0A50                940      BRA         opdec_return
00000776                           941  MATCH_CC_CS_32
00000776                           942      ** print opcode **
00000776  43F8 0502                943      LEA         pr_BCC_CS,A1                
0000077A  6100 FDEC                944      BSR         PrintString
0000077E                           945      
0000077E  6100 FE0C                946      BSR         PrintSizeLONG
00000782  43F9 00001168            947      LEA         pr_space,A1
00000788  6100 FDDE                948      BSR         PrintString
0000078C                           949   
0000078C                           950      ** print address **
0000078C  6100 FDB4                951      BSR         Get_BCC_Displacement_32bit 
00000790  6100 FDB6                952      BSR         Get_Current_Address
00000794  6100 FDBA                953      BSR         Get_BCC_Destination_Address
00000798  2207                     954      MOVE.L      D7,D1
0000079A  6100 FDB8                955      BSR         PrintHex
0000079E                           956      
0000079E  6000 0A24                957      BRA         opdec_return
000007A2                           958  MATCH_CC_NE_8
000007A2                           959      ** print opcode **
000007A2  43F8 0526                960      LEA         pr_BCC_NE,A1                
000007A6  6100 FDC0                961      BSR         PrintString
000007AA                           962      
000007AA  6100 FDC4                963      BSR         PrintSizeBYTE
000007AE  43F9 00001168            964      LEA         pr_space,A1
000007B4  6100 FDB2                965      BSR         PrintString
000007B8                           966   
000007B8                           967      ** print address **
000007B8  6100 FD7C                968      BSR         Get_BCC_Displacement_8bit 
000007BC  6100 FD8A                969      BSR         Get_Current_Address
000007C0  6100 FD8E                970      BSR         Get_BCC_Destination_Address
000007C4  2207                     971      MOVE.L      D7,D1
000007C6  6100 FD8C                972      BSR         PrintHex
000007CA                           973      
000007CA  6000 09F8                974      BRA         opdec_return
000007CE                           975  MATCH_CC_NE_16
000007CE                           976      ** print opcode **
000007CE  43F8 0526                977      LEA         pr_BCC_NE,A1                
000007D2  6100 FD94                978      BSR         PrintString
000007D6                           979      
000007D6  6100 FDA6                980      BSR         PrintSizeWORD
000007DA  43F9 00001168            981      LEA         pr_space,A1
000007E0  6100 FD86                982      BSR         PrintString
000007E4                           983   
000007E4                           984      ** print address **
000007E4  6100 FD56                985      BSR         Get_BCC_Displacement_16bit 
000007E8  6100 FD5E                986      BSR         Get_Current_Address
000007EC  6100 FD62                987      BSR         Get_BCC_Destination_Address
000007F0  2207                     988      MOVE.L      D7,D1
000007F2  6100 FD60                989      BSR         PrintHex
000007F6                           990      
000007F6  6000 09CC                991      BRA         opdec_return
000007FA                           992  MATCH_CC_NE_32
000007FA                           993      ** print opcode **
000007FA  43F8 0526                994      LEA         pr_BCC_NE,A1                
000007FE  6100 FD68                995      BSR         PrintString
00000802                           996      
00000802  6100 FD88                997      BSR         PrintSizeLONG
00000806  43F9 00001168            998      LEA         pr_space,A1
0000080C  6100 FD5A                999      BSR         PrintString
00000810                          1000   
00000810                          1001      ** print address **
00000810  6100 FD30               1002      BSR         Get_BCC_Displacement_32bit 
00000814  6100 FD32               1003      BSR         Get_Current_Address
00000818  6100 FD36               1004      BSR         Get_BCC_Destination_Address
0000081C  2207                    1005      MOVE.L      D7,D1
0000081E  6100 FD34               1006      BSR         PrintHex
00000822                          1007      
00000822  6000 09A0               1008      BRA         opdec_return
00000826                          1009  MATCH_CC_EQ_8
00000826                          1010      ** print opcode **
00000826  43F8 0506               1011      LEA         pr_BCC_EQ,A1                
0000082A  6100 FD3C               1012      BSR         PrintString
0000082E                          1013      
0000082E  6100 FD40               1014      BSR         PrintSizeBYTE
00000832  43F9 00001168           1015      LEA         pr_space,A1
00000838  6100 FD2E               1016      BSR         PrintString
0000083C                          1017   
0000083C                          1018      ** print address **
0000083C  6100 FCF8               1019      BSR         Get_BCC_Displacement_8bit 
00000840  6100 FD06               1020      BSR         Get_Current_Address
00000844  6100 FD0A               1021      BSR         Get_BCC_Destination_Address
00000848  2207                    1022      MOVE.L      D7,D1
0000084A  6100 FD08               1023      BSR         PrintHex
0000084E                          1024      
0000084E  6000 0974               1025      BRA         opdec_return
00000852                          1026  MATCH_CC_EQ_16
00000852                          1027      ** print opcode **
00000852  43F8 0506               1028      LEA         pr_BCC_EQ,A1                
00000856  6100 FD10               1029      BSR         PrintString
0000085A                          1030      
0000085A  6100 FD22               1031      BSR         PrintSizeWORD
0000085E  43F9 00001168           1032      LEA         pr_space,A1
00000864  6100 FD02               1033      BSR         PrintString
00000868                          1034   
00000868                          1035      ** print address **
00000868  6100 FCD2               1036      BSR         Get_BCC_Displacement_16bit 
0000086C  6100 FCDA               1037      BSR         Get_Current_Address
00000870  6100 FCDE               1038      BSR         Get_BCC_Destination_Address
00000874  2207                    1039      MOVE.L      D7,D1
00000876  6100 FCDC               1040      BSR         PrintHex
0000087A                          1041      
0000087A  6000 0948               1042      BRA         opdec_return
0000087E                          1043  MATCH_CC_EQ_32
0000087E                          1044      ** print opcode **
0000087E  43F8 0506               1045      LEA         pr_BCC_EQ,A1                
00000882  6100 FCE4               1046      BSR         PrintString
00000886                          1047      
00000886  6100 FD04               1048      BSR         PrintSizeLONG
0000088A  43F9 00001168           1049      LEA         pr_space,A1
00000890  6100 FCD6               1050      BSR         PrintString
00000894                          1051   
00000894                          1052      ** print address **
00000894  6100 FCAC               1053      BSR         Get_BCC_Displacement_32bit 
00000898  6100 FCAE               1054      BSR         Get_Current_Address
0000089C  6100 FCB2               1055      BSR         Get_BCC_Destination_Address
000008A0  2207                    1056      MOVE.L      D7,D1
000008A2  6100 FCB0               1057      BSR         PrintHex
000008A6                          1058      
000008A6  6000 091C               1059      BRA         opdec_return
000008AA                          1060  MATCH_CC_VC_8
000008AA                          1061      ** print opcode **
000008AA  43F8 052E               1062      LEA         pr_BCC_VC,A1                
000008AE  6100 FCB8               1063      BSR         PrintString
000008B2                          1064      
000008B2  6100 FCBC               1065      BSR         PrintSizeBYTE
000008B6  43F9 00001168           1066      LEA         pr_space,A1
000008BC  6100 FCAA               1067      BSR         PrintString
000008C0                          1068   
000008C0                          1069      ** print address **
000008C0  6100 FC74               1070      BSR         Get_BCC_Displacement_8bit 
000008C4  6100 FC82               1071      BSR         Get_Current_Address
000008C8  6100 FC86               1072      BSR         Get_BCC_Destination_Address
000008CC  2207                    1073      MOVE.L      D7,D1
000008CE  6100 FC84               1074      BSR         PrintHex
000008D2                          1075      
000008D2  6000 08F0               1076      BRA         opdec_return
000008D6                          1077  MATCH_CC_VC_16
000008D6                          1078      ** print opcode **
000008D6  43F8 052E               1079      LEA         pr_BCC_VC,A1                
000008DA  6100 FC8C               1080      BSR         PrintString
000008DE                          1081      
000008DE  6100 FC9E               1082      BSR         PrintSizeWORD
000008E2  43F9 00001168           1083      LEA         pr_space,A1
000008E8  6100 FC7E               1084      BSR         PrintString
000008EC                          1085   
000008EC                          1086      ** print address **
000008EC  6100 FC4E               1087      BSR         Get_BCC_Displacement_16bit 
000008F0  6100 FC56               1088      BSR         Get_Current_Address
000008F4  6100 FC5A               1089      BSR         Get_BCC_Destination_Address
000008F8  2207                    1090      MOVE.L      D7,D1
000008FA  6100 FC58               1091      BSR         PrintHex
000008FE                          1092      
000008FE  6000 08C4               1093      BRA         opdec_return
00000902                          1094  MATCH_CC_VC_32
00000902                          1095      ** print opcode **
00000902  43F8 052E               1096      LEA         pr_BCC_VC,A1                
00000906  6100 FC60               1097      BSR         PrintString
0000090A                          1098      
0000090A  6100 FC80               1099      BSR         PrintSizeLONG
0000090E  43F9 00001168           1100      LEA         pr_space,A1
00000914  6100 FC52               1101      BSR         PrintString
00000918                          1102   
00000918                          1103      ** print address **
00000918  6100 FC28               1104      BSR         Get_BCC_Displacement_32bit 
0000091C  6100 FC2A               1105      BSR         Get_Current_Address
00000920  6100 FC2E               1106      BSR         Get_BCC_Destination_Address
00000924  2207                    1107      MOVE.L      D7,D1
00000926  6100 FC2C               1108      BSR         PrintHex
0000092A                          1109      
0000092A  6000 0898               1110      BRA         opdec_return
0000092E                          1111  MATCH_CC_VS_8
0000092E                          1112      ** print opcode **
0000092E  43F8 0532               1113      LEA         pr_BCC_VS,A1                
00000932  6100 FC34               1114      BSR         PrintString
00000936                          1115      
00000936  6100 FC38               1116      BSR         PrintSizeBYTE
0000093A  43F9 00001168           1117      LEA         pr_space,A1
00000940  6100 FC26               1118      BSR         PrintString
00000944                          1119   
00000944                          1120      ** print address **
00000944  6100 FBF0               1121      BSR         Get_BCC_Displacement_8bit 
00000948  6100 FBFE               1122      BSR         Get_Current_Address
0000094C  6100 FC02               1123      BSR         Get_BCC_Destination_Address
00000950  2207                    1124      MOVE.L      D7,D1
00000952  6100 FC00               1125      BSR         PrintHex
00000956                          1126      
00000956  6000 086C               1127      BRA         opdec_return
0000095A                          1128  MATCH_CC_VS_16
0000095A                          1129      ** print opcode **
0000095A  43F8 0532               1130      LEA         pr_BCC_VS,A1                
0000095E  6100 FC08               1131      BSR         PrintString
00000962                          1132      
00000962  6100 FC1A               1133      BSR         PrintSizeWORD
00000966  43F9 00001168           1134      LEA         pr_space,A1
0000096C  6100 FBFA               1135      BSR         PrintString
00000970                          1136   
00000970                          1137      ** print address **
00000970  6100 FBCA               1138      BSR         Get_BCC_Displacement_16bit 
00000974  6100 FBD2               1139      BSR         Get_Current_Address
00000978  6100 FBD6               1140      BSR         Get_BCC_Destination_Address
0000097C  2207                    1141      MOVE.L      D7,D1
0000097E  6100 FBD4               1142      BSR         PrintHex
00000982                          1143      
00000982  6000 0840               1144      BRA         opdec_return
00000986                          1145  MATCH_CC_VS_32
00000986                          1146      ** print opcode **
00000986  43F8 0532               1147      LEA         pr_BCC_VS,A1                
0000098A  6100 FBDC               1148      BSR         PrintString
0000098E                          1149      
0000098E  6100 FBFC               1150      BSR         PrintSizeLONG
00000992  43F9 00001168           1151      LEA         pr_space,A1
00000998  6100 FBCE               1152      BSR         PrintString
0000099C                          1153   
0000099C                          1154      ** print address **
0000099C  6100 FBA4               1155      BSR         Get_BCC_Displacement_32bit 
000009A0  6100 FBA6               1156      BSR         Get_Current_Address
000009A4  6100 FBAA               1157      BSR         Get_BCC_Destination_Address
000009A8  2207                    1158      MOVE.L      D7,D1
000009AA  6100 FBA8               1159      BSR         PrintHex
000009AE                          1160      
000009AE  6000 0814               1161      BRA         opdec_return
000009B2                          1162  MATCH_CC_PL_8
000009B2                          1163      ** print opcode **
000009B2  43F8 052A               1164      LEA         pr_BCC_PL,A1                
000009B6  6100 FBB0               1165      BSR         PrintString
000009BA                          1166      
000009BA  6100 FBB4               1167      BSR         PrintSizeBYTE
000009BE  43F9 00001168           1168      LEA         pr_space,A1
000009C4  6100 FBA2               1169      BSR         PrintString
000009C8                          1170   
000009C8                          1171      ** print address **
000009C8  6100 FB6C               1172      BSR         Get_BCC_Displacement_8bit 
000009CC  6100 FB7A               1173      BSR         Get_Current_Address
000009D0  6100 FB7E               1174      BSR         Get_BCC_Destination_Address
000009D4  2207                    1175      MOVE.L      D7,D1
000009D6  6100 FB7C               1176      BSR         PrintHex
000009DA                          1177      
000009DA  6000 07E8               1178      BRA         opdec_return
000009DE                          1179  MATCH_CC_PL_16
000009DE                          1180      ** print opcode **
000009DE  43F8 052A               1181      LEA         pr_BCC_PL,A1                
000009E2  6100 FB84               1182      BSR         PrintString
000009E6                          1183      
000009E6  6100 FB96               1184      BSR         PrintSizeWORD
000009EA  43F9 00001168           1185      LEA         pr_space,A1
000009F0  6100 FB76               1186      BSR         PrintString
000009F4                          1187   
000009F4                          1188      ** print address **
000009F4  6100 FB46               1189      BSR         Get_BCC_Displacement_16bit 
000009F8  6100 FB4E               1190      BSR         Get_Current_Address
000009FC  6100 FB52               1191      BSR         Get_BCC_Destination_Address
00000A00  2207                    1192      MOVE.L      D7,D1
00000A02  6100 FB50               1193      BSR         PrintHex
00000A06                          1194      
00000A06  6000 07BC               1195      BRA         opdec_return
00000A0A                          1196  MATCH_CC_PL_32
00000A0A                          1197      ** print opcode **
00000A0A  43F8 052A               1198      LEA         pr_BCC_PL,A1                
00000A0E  6100 FB58               1199      BSR         PrintString
00000A12                          1200      
00000A12  6100 FB78               1201      BSR         PrintSizeLONG
00000A16  43F9 00001168           1202      LEA         pr_space,A1
00000A1C  6100 FB4A               1203      BSR         PrintString
00000A20                          1204   
00000A20                          1205      ** print address **
00000A20  6100 FB20               1206      BSR         Get_BCC_Displacement_32bit 
00000A24  6100 FB22               1207      BSR         Get_Current_Address
00000A28  6100 FB26               1208      BSR         Get_BCC_Destination_Address
00000A2C  2207                    1209      MOVE.L      D7,D1
00000A2E  6100 FB24               1210      BSR         PrintHex
00000A32                          1211      
00000A32  6000 0790               1212      BRA         opdec_return
00000A36                          1213  MATCH_CC_MI_8
00000A36                          1214      ** print opcode **
00000A36  43F8 0522               1215      LEA         pr_BCC_MI,A1                
00000A3A  6100 FB2C               1216      BSR         PrintString
00000A3E                          1217      
00000A3E  6100 FB30               1218      BSR         PrintSizeBYTE
00000A42  43F9 00001168           1219      LEA         pr_space,A1
00000A48  6100 FB1E               1220      BSR         PrintString
00000A4C                          1221   
00000A4C                          1222      ** print address **
00000A4C  6100 FAE8               1223      BSR         Get_BCC_Displacement_8bit 
00000A50  6100 FAF6               1224      BSR         Get_Current_Address
00000A54  6100 FAFA               1225      BSR         Get_BCC_Destination_Address
00000A58  2207                    1226      MOVE.L      D7,D1
00000A5A  6100 FAF8               1227      BSR         PrintHex
00000A5E                          1228      
00000A5E  6000 0764               1229      BRA         opdec_return
00000A62                          1230  MATCH_CC_MI_16
00000A62                          1231      ** print opcode **
00000A62  43F8 0522               1232      LEA         pr_BCC_MI,A1                
00000A66  6100 FB00               1233      BSR         PrintString
00000A6A                          1234      
00000A6A  6100 FB12               1235      BSR         PrintSizeWORD
00000A6E  43F9 00001168           1236      LEA         pr_space,A1
00000A74  6100 FAF2               1237      BSR         PrintString
00000A78                          1238   
00000A78                          1239      ** print address **
00000A78  6100 FAC2               1240      BSR         Get_BCC_Displacement_16bit 
00000A7C  6100 FACA               1241      BSR         Get_Current_Address
00000A80  6100 FACE               1242      BSR         Get_BCC_Destination_Address
00000A84  2207                    1243      MOVE.L      D7,D1
00000A86  6100 FACC               1244      BSR         PrintHex
00000A8A                          1245      
00000A8A  6000 0738               1246      BRA         opdec_return
00000A8E                          1247  MATCH_CC_MI_32
00000A8E                          1248      ** print opcode **
00000A8E  43F8 0522               1249      LEA         pr_BCC_MI,A1                
00000A92  6100 FAD4               1250      BSR         PrintString
00000A96                          1251      
00000A96  6100 FAF4               1252      BSR         PrintSizeLONG
00000A9A  43F9 00001168           1253      LEA         pr_space,A1
00000AA0  6100 FAC6               1254      BSR         PrintString
00000AA4                          1255   
00000AA4                          1256      ** print address **
00000AA4  6100 FA9C               1257      BSR         Get_BCC_Displacement_32bit 
00000AA8  6100 FA9E               1258      BSR         Get_Current_Address
00000AAC  6100 FAA2               1259      BSR         Get_BCC_Destination_Address
00000AB0  2207                    1260      MOVE.L      D7,D1
00000AB2  6100 FAA0               1261      BSR         PrintHex
00000AB6                          1262      
00000AB6  6000 070C               1263      BRA         opdec_return
00000ABA                          1264  MATCH_CC_GE_8
00000ABA                          1265      ** print opcode **
00000ABA  43F8 050A               1266      LEA         pr_BCC_GE,A1                
00000ABE  6100 FAA8               1267      BSR         PrintString
00000AC2                          1268      
00000AC2  6100 FAAC               1269      BSR         PrintSizeBYTE
00000AC6  43F9 00001168           1270      LEA         pr_space,A1
00000ACC  6100 FA9A               1271      BSR         PrintString
00000AD0                          1272   
00000AD0                          1273      ** print address **
00000AD0  6100 FA64               1274      BSR         Get_BCC_Displacement_8bit 
00000AD4  6100 FA72               1275      BSR         Get_Current_Address
00000AD8  6100 FA76               1276      BSR         Get_BCC_Destination_Address
00000ADC  2207                    1277      MOVE.L      D7,D1
00000ADE  6100 FA74               1278      BSR         PrintHex
00000AE2                          1279      
00000AE2  6000 06E0               1280      BRA         opdec_return
00000AE6                          1281  MATCH_CC_GE_16
00000AE6                          1282      ** print opcode **
00000AE6  43F8 050A               1283      LEA         pr_BCC_GE,A1                
00000AEA  6100 FA7C               1284      BSR         PrintString
00000AEE                          1285      
00000AEE  6100 FA8E               1286      BSR         PrintSizeWORD
00000AF2  43F9 00001168           1287      LEA         pr_space,A1
00000AF8  6100 FA6E               1288      BSR         PrintString
00000AFC                          1289   
00000AFC                          1290      ** print address **
00000AFC  6100 FA3E               1291      BSR         Get_BCC_Displacement_16bit 
00000B00  6100 FA46               1292      BSR         Get_Current_Address
00000B04  6100 FA4A               1293      BSR         Get_BCC_Destination_Address
00000B08  2207                    1294      MOVE.L      D7,D1
00000B0A  6100 FA48               1295      BSR         PrintHex
00000B0E                          1296      
00000B0E  6000 06B4               1297      BRA         opdec_return
00000B12                          1298  MATCH_CC_GE_32
00000B12                          1299      ** print opcode **
00000B12  43F8 050A               1300      LEA         pr_BCC_GE,A1                
00000B16  6100 FA50               1301      BSR         PrintString
00000B1A                          1302      
00000B1A  6100 FA70               1303      BSR         PrintSizeLONG
00000B1E  43F9 00001168           1304      LEA         pr_space,A1
00000B24  6100 FA42               1305      BSR         PrintString
00000B28                          1306   
00000B28                          1307      ** print address **
00000B28  6100 FA18               1308      BSR         Get_BCC_Displacement_32bit 
00000B2C  6100 FA1A               1309      BSR         Get_Current_Address
00000B30  6100 FA1E               1310      BSR         Get_BCC_Destination_Address
00000B34  2207                    1311      MOVE.L      D7,D1
00000B36  6100 FA1C               1312      BSR         PrintHex
00000B3A                          1313      
00000B3A  6000 0688               1314      BRA         opdec_return
00000B3E                          1315  MATCH_CC_LT_8
00000B3E                          1316      ** print opcode **
00000B3E  43F8 051E               1317      LEA         pr_BCC_LT,A1                
00000B42  6100 FA24               1318      BSR         PrintString
00000B46                          1319      
00000B46  6100 FA28               1320      BSR         PrintSizeBYTE
00000B4A  43F9 00001168           1321      LEA         pr_space,A1
00000B50  6100 FA16               1322      BSR         PrintString
00000B54                          1323   
00000B54                          1324      ** print address **
00000B54  6100 F9E0               1325      BSR         Get_BCC_Displacement_8bit 
00000B58  6100 F9EE               1326      BSR         Get_Current_Address
00000B5C  6100 F9F2               1327      BSR         Get_BCC_Destination_Address
00000B60  2207                    1328      MOVE.L      D7,D1
00000B62  6100 F9F0               1329      BSR         PrintHex
00000B66                          1330      
00000B66  6000 065C               1331      BRA         opdec_return
00000B6A                          1332  MATCH_CC_LT_16
00000B6A                          1333      ** print opcode **
00000B6A  43F8 051E               1334      LEA         pr_BCC_LT,A1                
00000B6E  6100 F9F8               1335      BSR         PrintString
00000B72                          1336      
00000B72  6100 FA0A               1337      BSR         PrintSizeWORD
00000B76  43F9 00001168           1338      LEA         pr_space,A1
00000B7C  6100 F9EA               1339      BSR         PrintString
00000B80                          1340   
00000B80                          1341      ** print address **
00000B80  6100 F9BA               1342      BSR         Get_BCC_Displacement_16bit 
00000B84  6100 F9C2               1343      BSR         Get_Current_Address
00000B88  6100 F9C6               1344      BSR         Get_BCC_Destination_Address
00000B8C  2207                    1345      MOVE.L      D7,D1
00000B8E  6100 F9C4               1346      BSR         PrintHex
00000B92                          1347      
00000B92  6000 0630               1348      BRA         opdec_return
00000B96                          1349  MATCH_CC_LT_32
00000B96                          1350      ** print opcode **
00000B96  43F8 051E               1351      LEA         pr_BCC_LT,A1                
00000B9A  6100 F9CC               1352      BSR         PrintString
00000B9E                          1353      
00000B9E  6100 F9EC               1354      BSR         PrintSizeLONG
00000BA2  43F9 00001168           1355      LEA         pr_space,A1
00000BA8  6100 F9BE               1356      BSR         PrintString
00000BAC                          1357   
00000BAC                          1358      ** print address **
00000BAC  6100 F994               1359      BSR         Get_BCC_Displacement_32bit 
00000BB0  6100 F996               1360      BSR         Get_Current_Address
00000BB4  6100 F99A               1361      BSR         Get_BCC_Destination_Address
00000BB8  2207                    1362      MOVE.L      D7,D1
00000BBA  6100 F998               1363      BSR         PrintHex
00000BBE                          1364      
00000BBE  6000 0604               1365      BRA         opdec_return
00000BC2                          1366  MATCH_CC_GT_8
00000BC2                          1367      ** print opcode **
00000BC2  43F8 050E               1368      LEA         pr_BCC_GT,A1                
00000BC6  6100 F9A0               1369      BSR         PrintString
00000BCA                          1370      
00000BCA  6100 F9A4               1371      BSR         PrintSizeBYTE
00000BCE  43F9 00001168           1372      LEA         pr_space,A1
00000BD4  6100 F992               1373      BSR         PrintString
00000BD8                          1374   
00000BD8                          1375      ** print address **
00000BD8  6100 F95C               1376      BSR         Get_BCC_Displacement_8bit 
00000BDC  6100 F96A               1377      BSR         Get_Current_Address
00000BE0  6100 F96E               1378      BSR         Get_BCC_Destination_Address
00000BE4  2207                    1379      MOVE.L      D7,D1
00000BE6  6100 F96C               1380      BSR         PrintHex
00000BEA                          1381      
00000BEA  6000 05D8               1382      BRA         opdec_return
00000BEE                          1383  MATCH_CC_GT_16
00000BEE                          1384      ** print opcode **
00000BEE  43F8 050E               1385      LEA         pr_BCC_GT,A1                
00000BF2  6100 F974               1386      BSR         PrintString
00000BF6                          1387      
00000BF6  6100 F986               1388      BSR         PrintSizeWORD
00000BFA  43F9 00001168           1389      LEA         pr_space,A1
00000C00  6100 F966               1390      BSR         PrintString
00000C04                          1391   
00000C04                          1392      ** print address **
00000C04  6100 F936               1393      BSR         Get_BCC_Displacement_16bit 
00000C08  6100 F93E               1394      BSR         Get_Current_Address
00000C0C  6100 F942               1395      BSR         Get_BCC_Destination_Address
00000C10  2207                    1396      MOVE.L      D7,D1
00000C12  6100 F940               1397      BSR         PrintHex
00000C16                          1398      
00000C16  6000 05AC               1399      BRA         opdec_return
00000C1A                          1400  MATCH_CC_GT_32
00000C1A                          1401      ** print opcode **
00000C1A  43F8 050E               1402      LEA         pr_BCC_GT,A1                
00000C1E  6100 F948               1403      BSR         PrintString
00000C22                          1404      
00000C22  6100 F968               1405      BSR         PrintSizeLONG
00000C26  43F9 00001168           1406      LEA         pr_space,A1
00000C2C  6100 F93A               1407      BSR         PrintString
00000C30                          1408   
00000C30                          1409      ** print address **
00000C30  6100 F910               1410      BSR         Get_BCC_Displacement_32bit 
00000C34  6100 F912               1411      BSR         Get_Current_Address
00000C38  6100 F916               1412      BSR         Get_BCC_Destination_Address
00000C3C  2207                    1413      MOVE.L      D7,D1
00000C3E  6100 F914               1414      BSR         PrintHex
00000C42                          1415      
00000C42  6000 0580               1416      BRA         opdec_return
00000C46                          1417  MATCH_CC_LE_8
00000C46                          1418      ** print opcode **
00000C46  43F8 0516               1419      LEA         pr_BCC_LE,A1                
00000C4A  6100 F91C               1420      BSR         PrintString
00000C4E                          1421      
00000C4E  6100 F920               1422      BSR         PrintSizeBYTE
00000C52  43F9 00001168           1423      LEA         pr_space,A1
00000C58  6100 F90E               1424      BSR         PrintString
00000C5C                          1425   
00000C5C                          1426      ** print address **
00000C5C  6100 F8D8               1427      BSR         Get_BCC_Displacement_8bit 
00000C60  6100 F8E6               1428      BSR         Get_Current_Address
00000C64  6100 F8EA               1429      BSR         Get_BCC_Destination_Address
00000C68  2207                    1430      MOVE.L      D7,D1
00000C6A  6100 F8E8               1431      BSR         PrintHex
00000C6E                          1432      
00000C6E  6000 0554               1433      BRA         opdec_return
00000C72                          1434  MATCH_CC_LE_16
00000C72                          1435      ** print opcode **
00000C72  43F8 0516               1436      LEA         pr_BCC_LE,A1                
00000C76  6100 F8F0               1437      BSR         PrintString
00000C7A                          1438      
00000C7A  6100 F902               1439      BSR         PrintSizeWORD
00000C7E  43F9 00001168           1440      LEA         pr_space,A1
00000C84  6100 F8E2               1441      BSR         PrintString
00000C88                          1442   
00000C88                          1443      ** print address **
00000C88  6100 F8B2               1444      BSR         Get_BCC_Displacement_16bit 
00000C8C  6100 F8BA               1445      BSR         Get_Current_Address
00000C90  6100 F8BE               1446      BSR         Get_BCC_Destination_Address
00000C94  2207                    1447      MOVE.L      D7,D1
00000C96  6100 F8BC               1448      BSR         PrintHex
00000C9A                          1449      
00000C9A  6000 0528               1450      BRA         opdec_return
00000C9E                          1451  MATCH_CC_LE_32
00000C9E                          1452      ** print opcode **
00000C9E  43F8 0516               1453      LEA         pr_BCC_LE,A1                
00000CA2  6100 F8C4               1454      BSR         PrintString
00000CA6                          1455      
00000CA6  6100 F8E4               1456      BSR         PrintSizeLONG
00000CAA  43F9 00001168           1457      LEA         pr_space,A1
00000CB0  6100 F8B6               1458      BSR         PrintString
00000CB4                          1459   
00000CB4                          1460      ** print address **
00000CB4  6100 F88C               1461      BSR         Get_BCC_Displacement_32bit 
00000CB8  6100 F88E               1462      BSR         Get_Current_Address
00000CBC  6100 F892               1463      BSR         Get_BCC_Destination_Address
00000CC0  2207                    1464      MOVE.L      D7,D1
00000CC2  6100 F890               1465      BSR         PrintHex
00000CC6                          1466      
00000CC6  6000 04FC               1467      BRA         opdec_return
00000CCA                          1468  ERROR
00000CCA  43F8 04F8               1469      LEA         pr_ERROR,A1                
00000CCE  6100 F898               1470      BSR         PrintString
00000CD2  6000 04F0               1471      BRA         opdec_return
00000CD6                          1472  
00000CD6                          1473  
00000CD6                          1474  
00000CD6                          1475  -------------------- end include --------------------
00000CD6                          1476                  INCLUDE 'arsany_opcodes.x68'
00000CD6                          1477  MATCH_MOVEA_W
00000CD6                          1478      ** Move command size into D1
00000CD6  123C 0002               1479      MOVE.B      #2,D1
00000CDA                          1480      ** Print command
00000CDA  103C 000E               1481      MOVE.B      #14,D0
00000CDE  43F9 00001180           1482      LEA         pr_MOVEA,A1
00000CE4  4E4F                    1483      TRAP        #15
00000CE6                          1484      ** Print size
00000CE6  43F9 0000116F           1485      LEA         pr_WORD,A1
00000CEC  4E4F                    1486      TRAP        #15
00000CEE                          1487      ** Print space
00000CEE  43F9 00001168           1488      LEA         pr_space,A1
00000CF4  4E4F                    1489      TRAP        #15
00000CF6                          1490      ** Decode right side ea
00000CF6  1002                    1491      MOVE.B      D2,D0
00000CF8  0200 003F               1492      ANDI.B      #%00111111,D0
00000CFC  4EB8 0066               1493      JSR         EADecoder
00000D00                          1494      ** Add comma
00000D00  103C 000E               1495      MOVE.B      #14,D0
00000D04  43F9 0000116A           1496      LEA         pr_comma,A1
00000D0A  4E4F                    1497      TRAP        #15
00000D0C                          1498      ** Decode left side ea
00000D0C  3002                    1499      MOVE.W      D2,D0
00000D0E  0240 0FC0               1500      ANDI.W      #%0000111111000000,D0
00000D12  EC88                    1501      LSR.L       #6,D0
00000D14  4EB8 004E               1502      JSR         EADecoder_left
00000D18                          1503      
00000D18  6000 04AA               1504      BRA         opdec_return
00000D1C                          1505  MATCH_MOVEA_L
00000D1C                          1506      ** Move command size into D1
00000D1C  123C 0004               1507      MOVE.B      #4,D1
00000D20                          1508      ** Print command
00000D20  103C 000E               1509      MOVE.B      #14,D0
00000D24  43F9 00001180           1510      LEA         pr_MOVEA,A1
00000D2A  4E4F                    1511      TRAP        #15
00000D2C                          1512      ** Print size
00000D2C  43F9 00001172           1513      LEA         pr_LONG,A1
00000D32  4E4F                    1514      TRAP        #15
00000D34                          1515      ** Print space
00000D34  43F9 00001168           1516      LEA         pr_space,A1
00000D3A  4E4F                    1517      TRAP        #15
00000D3C                          1518      ** Decode right side ea
00000D3C  1002                    1519      MOVE.B      D2,D0
00000D3E  0200 003F               1520      ANDI.B      #%00111111,D0
00000D42  4EB8 0066               1521      JSR         EADecoder
00000D46                          1522      ** Add comma
00000D46  103C 000E               1523      MOVE.B      #14,D0
00000D4A  43F9 0000116A           1524      LEA         pr_comma,A1
00000D50  4E4F                    1525      TRAP        #15
00000D52                          1526      ** Decode left side ea
00000D52  3002                    1527      MOVE.W      D2,D0
00000D54  0240 0FC0               1528      ANDI.W      #%0000111111000000,D0
00000D58  EC88                    1529      LSR.L       #6,D0
00000D5A  4EB8 004E               1530      JSR         EADecoder_left
00000D5E                          1531      
00000D5E  6000 0464               1532      BRA         opdec_return
00000D62                          1533  MATCH_ADDA_W
00000D62                          1534      ** Move command size into D1
00000D62  123C 0002               1535      MOVE.B      #2,D1
00000D66                          1536      ** Print command
00000D66  103C 000E               1537      MOVE.B      #14,D0
00000D6A  43F9 0000118C           1538      LEA         pr_ADDA,A1
00000D70  4E4F                    1539      TRAP        #15
00000D72                          1540      ** Print size
00000D72  43F9 0000116F           1541      LEA         pr_WORD,A1
00000D78  4E4F                    1542      TRAP        #15
00000D7A                          1543      ** Print space
00000D7A  43F9 00001168           1544      LEA         pr_space,A1
00000D80  4E4F                    1545      TRAP        #15
00000D82                          1546      ** Decode right side ea
00000D82  1002                    1547      MOVE.B      D2,D0
00000D84  0200 003F               1548      ANDI.B      #%00111111,D0
00000D88  4EB8 0066               1549      JSR         EADecoder
00000D8C                          1550      ** Add comma
00000D8C  103C 000E               1551      MOVE.B      #14,D0
00000D90  43F9 0000116A           1552      LEA         pr_comma,A1
00000D96  4E4F                    1553      TRAP        #15
00000D98                          1554      ** Decode left side ea
00000D98  3002                    1555      MOVE.W      D2,D0
00000D9A  0240 0FC0               1556      ANDI.W      #%0000111111000000,D0
00000D9E  EC88                    1557      LSR.L       #6,D0
00000DA0  4EB8 004E               1558      JSR         EADecoder_left
00000DA4                          1559      
00000DA4  6000 041E               1560      BRA         opdec_return
00000DA8                          1561  MATCH_ADDA_L
00000DA8                          1562      ** Move command size into D1
00000DA8  123C 0004               1563      MOVE.B      #4,D1
00000DAC                          1564      ** Print command
00000DAC  103C 000E               1565      MOVE.B      #14,D0
00000DB0  43F9 0000118C           1566      LEA         pr_ADDA,A1
00000DB6  4E4F                    1567      TRAP        #15
00000DB8                          1568      ** Print size
00000DB8  43F9 00001172           1569      LEA         pr_LONG,A1
00000DBE  4E4F                    1570      TRAP        #15
00000DC0                          1571      ** Print space
00000DC0  43F9 00001168           1572      LEA         pr_space,A1
00000DC6  4E4F                    1573      TRAP        #15
00000DC8                          1574      ** Decode right side ea
00000DC8  1002                    1575      MOVE.B      D2,D0
00000DCA  0200 003F               1576      ANDI.B      #%00111111,D0
00000DCE  4EB8 0066               1577      JSR         EADecoder
00000DD2                          1578      ** Add comma
00000DD2  103C 000E               1579      MOVE.B      #14,D0
00000DD6  43F9 0000116A           1580      LEA         pr_comma,A1
00000DDC  4E4F                    1581      TRAP        #15
00000DDE                          1582      ** Decode left side ea
00000DDE  3002                    1583      MOVE.W      D2,D0
00000DE0  0240 0FC0               1584      ANDI.W      #%0000111111000000,D0
00000DE4  EC88                    1585      LSR.L       #6,D0
00000DE6  4EB8 004E               1586      JSR         EADecoder_left
00000DEA                          1587      
00000DEA  6000 03D8               1588      BRA         opdec_return
00000DEE                          1589  MATCH_MULS_W
00000DEE                          1590      ** Move command size into D1
00000DEE  123C 0002               1591      MOVE.B      #2,D1
00000DF2                          1592      ** Print command
00000DF2  103C 000E               1593      MOVE.B      #14,D0
00000DF6  43F9 00001191           1594      LEA         pr_MULS,A1
00000DFC  4E4F                    1595      TRAP        #15
00000DFE                          1596      ** Print size
00000DFE  43F9 0000116F           1597      LEA         pr_WORD,A1
00000E04  4E4F                    1598      TRAP        #15
00000E06                          1599      ** Print space
00000E06  43F9 00001168           1600      LEA         pr_space,A1
00000E0C  4E4F                    1601      TRAP        #15
00000E0E                          1602      ** Decode right side ea
00000E0E  1002                    1603      MOVE.B      D2,D0
00000E10  0200 003F               1604      ANDI.B      #%00111111,D0
00000E14  4EB8 0066               1605      JSR         EADecoder
00000E18                          1606      ** Add comma
00000E18  103C 000E               1607      MOVE.B      #14,D0
00000E1C  43F9 0000116A           1608      LEA         pr_comma,A1
00000E22  4E4F                    1609      TRAP        #15
00000E24                          1610      ** Decode left side ea
00000E24  3002                    1611      MOVE.W      D2,D0
00000E26  0240 0FC0               1612      ANDI.W      #%0000111111000000,D0
00000E2A  EC88                    1613      LSR.L       #6,D0
00000E2C  4EB8 004E               1614      JSR         EADecoder_left    
00000E30                          1615      
00000E30  6000 0392               1616      BRA         opdec_return
00000E34                          1617  MATCH_RTS
00000E34  43F9 0000119A           1618      LEA         pr_RTS,A1
00000E3A  103C 000E               1619      MOVE.B      #14,D0
00000E3E  4E4F                    1620      TRAP        #15
00000E40  6000 0382               1621      BRA         opdec_return
00000E44                          1622  MATCH_CMP_B
00000E44                          1623      ** Move command size into D1
00000E44  123C 0002               1624      MOVE.B      #2,D1
00000E48                          1625      ** Print command
00000E48  103C 000E               1626      MOVE.B      #14,D0
00000E4C  43F9 0000119E           1627      LEA         pr_CMP,A1
00000E52  4E4F                    1628      TRAP        #15
00000E54                          1629      ** Print size
00000E54  43F9 0000116C           1630      LEA         pr_BYTE,A1
00000E5A  4E4F                    1631      TRAP        #15
00000E5C                          1632      ** Print space
00000E5C  43F9 00001168           1633      LEA         pr_space,A1
00000E62  4E4F                    1634      TRAP        #15
00000E64                          1635      ** Decode right side ea
00000E64  1002                    1636      MOVE.B      D2,D0
00000E66  0200 003F               1637      ANDI.B      #%00111111,D0
00000E6A  4EB8 0066               1638      JSR         EADecoder
00000E6E                          1639      ** Add comma
00000E6E  103C 000E               1640      MOVE.B      #14,D0
00000E72  43F9 0000116A           1641      LEA         pr_comma,A1
00000E78  4E4F                    1642      TRAP        #15
00000E7A                          1643      ** Decode left side ea
00000E7A  3002                    1644      MOVE.W      D2,D0
00000E7C  0240 0E00               1645      ANDI.W      #%0000111000000000,D0
00000E80  EC88                    1646      LSR.L       #6,D0
00000E82  4EB8 004E               1647      JSR         EADecoder_left   
00000E86                          1648      
00000E86  6000 033C               1649      BRA         opdec_return
00000E8A                          1650  MATCH_CMP_W
00000E8A                          1651      ** Move command size into D1
00000E8A  123C 0002               1652      MOVE.B      #2,D1
00000E8E                          1653      ** Print command
00000E8E  103C 000E               1654      MOVE.B      #14,D0
00000E92  43F9 0000119E           1655      LEA         pr_CMP,A1
00000E98  4E4F                    1656      TRAP        #15
00000E9A                          1657      ** Print size
00000E9A  43F9 0000116F           1658      LEA         pr_WORD,A1
00000EA0  4E4F                    1659      TRAP        #15
00000EA2                          1660      ** Print space
00000EA2  43F9 00001168           1661      LEA         pr_space,A1
00000EA8  4E4F                    1662      TRAP        #15
00000EAA  4240                    1663      CLR         D0
00000EAC                          1664      ** Decode right side ea
00000EAC  1002                    1665      MOVE.B      D2,D0
00000EAE  0200 003F               1666      ANDI.B      #%00111111,D0
00000EB2  4EB8 0066               1667      JSR         EADecoder
00000EB6                          1668      ** Add comma
00000EB6  103C 000E               1669      MOVE.B      #14,D0
00000EBA  43F9 0000116A           1670      LEA         pr_comma,A1
00000EC0  4E4F                    1671      TRAP        #15
00000EC2                          1672      ** Decode left side ea
00000EC2  3002                    1673      MOVE.W      D2,D0
00000EC4  0240 0E00               1674      ANDI.W      #%0000111000000000,D0
00000EC8  EC88                    1675      LSR.L       #6,D0
00000ECA  4EB8 004E               1676      JSR         EADecoder_left   
00000ECE                          1677      
00000ECE  6000 02F4               1678      BRA         opdec_return
00000ED2                          1679  MATCH_CMP_L
00000ED2                          1680      ** Move command size into D1
00000ED2  123C 0004               1681      MOVE.B      #4,D1
00000ED6                          1682      ** Print command
00000ED6  103C 000E               1683      MOVE.B      #14,D0
00000EDA  43F9 0000119E           1684      LEA         pr_CMP,A1
00000EE0  4E4F                    1685      TRAP        #15
00000EE2                          1686      ** Print size
00000EE2  43F9 00001172           1687      LEA         pr_LONG,A1
00000EE8  4E4F                    1688      TRAP        #15
00000EEA                          1689      ** Print space
00000EEA  43F9 00001168           1690      LEA         pr_space,A1
00000EF0  4E4F                    1691      TRAP        #15
00000EF2                          1692      ** Decode right side ea
00000EF2  1002                    1693      MOVE.B      D2,D0
00000EF4  0200 003F               1694      ANDI.B      #%00111111,D0
00000EF8  4EB8 0066               1695      JSR         EADecoder
00000EFC                          1696      ** Add comma
00000EFC  103C 000E               1697      MOVE.B      #14,D0
00000F00  43F9 0000116A           1698      LEA         pr_comma,A1
00000F06  4E4F                    1699      TRAP        #15
00000F08                          1700      ** Decode left side ea
00000F08  3002                    1701      MOVE.W      D2,D0
00000F0A  0240 0E00               1702      ANDI.W      #%0000111000000000,D0
00000F0E  EC88                    1703      LSR.L       #6,D0
00000F10  4EB8 004E               1704      JSR         EADecoder_left     
00000F14                          1705      
00000F14  6000 02AE               1706      BRA         opdec_return
00000F18                          1707  MATCH_JSR
00000F18                          1708      ** Print command
00000F18  103C 000E               1709      MOVE.B      #14,D0
00000F1C  43F9 000011A2           1710      LEA         pr_JSR,A1
00000F22  4E4F                    1711      TRAP        #15
00000F24                          1712      ** Print space
00000F24  43F9 00001168           1713      LEA         pr_space,A1
00000F2A  4E4F                    1714      TRAP        #15
00000F2C                          1715      ** Decode right side ea
00000F2C  1002                    1716      MOVE.B      D2,D0
00000F2E  0200 003F               1717      ANDI.B      #%00111111,D0
00000F32  4EB8 0066               1718      JSR         EADecoder 
00000F36                          1719      
00000F36  6000 028C               1720      BRA         opdec_return
00000F3A                          1721  MATCH_CLR_B 
00000F3A                          1722      ** Move command size into D1
00000F3A  123C 0002               1723      MOVE.B      #2,D1
00000F3E                          1724      ** Print command
00000F3E  103C 000E               1725      MOVE.B      #14,D0
00000F42  43F9 00001196           1726      LEA         pr_CLR,A1
00000F48  4E4F                    1727      TRAP        #15
00000F4A                          1728      ** Print size
00000F4A  43F9 0000116C           1729      LEA         pr_BYTE,A1
00000F50  4E4F                    1730      TRAP        #15
00000F52                          1731      ** Print space
00000F52  43F9 00001168           1732      LEA         pr_space,A1
00000F58  4E4F                    1733      TRAP        #15
00000F5A                          1734      ** Decode right side ea
00000F5A  1002                    1735      MOVE.B      D2,D0
00000F5C  0200 003F               1736      ANDI.B      #%00111111,D0
00000F60  4EB8 0066               1737      JSR         EADecoder
00000F64                          1738      
00000F64  6000 025E               1739      BRA         opdec_return
00000F68                          1740  MATCH_CLR_W
00000F68                          1741      ** Move command size into D1
00000F68  123C 0002               1742      MOVE.B      #2,D1
00000F6C                          1743      ** Print command
00000F6C  103C 000E               1744      MOVE.B      #14,D0
00000F70  43F9 00001196           1745      LEA         pr_CLR,A1
00000F76  4E4F                    1746      TRAP        #15
00000F78                          1747      ** Print size
00000F78  43F9 0000116F           1748      LEA         pr_WORD,A1
00000F7E  4E4F                    1749      TRAP        #15
00000F80                          1750      ** Print space
00000F80  43F9 00001168           1751      LEA         pr_space,A1
00000F86  4E4F                    1752      TRAP        #15
00000F88                          1753      ** Decode right side ea
00000F88  1002                    1754      MOVE.B      D2,D0
00000F8A  0200 003F               1755      ANDI.B      #%00111111,D0
00000F8E  4EB8 0066               1756      JSR         EADecoder 
00000F92                          1757      
00000F92  6000 0230               1758      BRA         opdec_return
00000F96                          1759  MATCH_CLR_L
00000F96                          1760      ** Move command size into D1
00000F96  123C 0004               1761      MOVE.B      #4,D1
00000F9A                          1762      ** Print command
00000F9A  103C 000E               1763      MOVE.B      #14,D0
00000F9E  43F9 00001196           1764      LEA         pr_CLR,A1
00000FA4  4E4F                    1765      TRAP        #15
00000FA6                          1766      ** Print size
00000FA6  43F9 00001172           1767      LEA         pr_LONG,A1
00000FAC  4E4F                    1768      TRAP        #15
00000FAE                          1769      ** Print space
00000FAE  43F9 00001168           1770      LEA         pr_space,A1
00000FB4  4E4F                    1771      TRAP        #15
00000FB6                          1772      ** Decode right side ea
00000FB6  1002                    1773      MOVE.B      D2,D0
00000FB8  0200 003F               1774      ANDI.B      #%00111111,D0
00000FBC  4EB8 0066               1775      JSR         EADecoder 
00000FC0                          1776      
00000FC0  6000 0202               1777      BRA         opdec_return
00000FC4                          1778  MATCH_AND_DN_B
00000FC4                          1779      ** Move command size into D1
00000FC4  123C 0002               1780      MOVE.B      #2,D1
00000FC8                          1781      ** Print command
00000FC8  103C 000E               1782      MOVE.B      #14,D0
00000FCC  43F9 000011A6           1783      LEA         pr_AND,A1
00000FD2  4E4F                    1784      TRAP        #15
00000FD4                          1785      ** Print size
00000FD4  43F9 0000116C           1786      LEA         pr_BYTE,A1
00000FDA  4E4F                    1787      TRAP        #15
00000FDC                          1788      ** Print space
00000FDC  43F9 00001168           1789      LEA         pr_space,A1
00000FE2  4E4F                    1790      TRAP        #15
00000FE4                          1791      ** Decode right side ea
00000FE4  1002                    1792      MOVE.B      D2,D0
00000FE6  0200 003F               1793      ANDI.B      #%00111111,D0
00000FEA  4EB8 0066               1794      JSR         EADecoder
00000FEE                          1795      ** Add comma
00000FEE  103C 000E               1796      MOVE.B      #14,D0
00000FF2  43F9 0000116A           1797      LEA         pr_comma,A1
00000FF8  4E4F                    1798      TRAP        #15
00000FFA                          1799      ** Decode left side ea
00000FFA  3002                    1800      MOVE.W      D2,D0
00000FFC  0240 0E00               1801      ANDI.W      #%0000111000000000,D0
00001000  EC88                    1802      LSR.L       #6,D0
00001002  4EB8 004E               1803      JSR         EADecoder_left   
00001006                          1804      
00001006  6000 01BC               1805      BRA         opdec_return
0000100A                          1806  MATCH_AND_DN_W
0000100A                          1807      ** Move command size into D1
0000100A  123C 0002               1808      MOVE.B      #2,D1
0000100E                          1809      ** Print command
0000100E  103C 000E               1810      MOVE.B      #14,D0
00001012  43F9 000011A6           1811      LEA         pr_AND,A1
00001018  4E4F                    1812      TRAP        #15
0000101A                          1813      ** Print size
0000101A  43F9 0000116F           1814      LEA         pr_WORD,A1
00001020  4E4F                    1815      TRAP        #15
00001022                          1816      ** Print space
00001022  43F9 00001168           1817      LEA         pr_space,A1
00001028  4E4F                    1818      TRAP        #15
0000102A                          1819      ** Decode right side ea
0000102A  1002                    1820      MOVE.B      D2,D0
0000102C  0200 003F               1821      ANDI.B      #%00111111,D0
00001030  4EB8 0066               1822      JSR         EADecoder
00001034                          1823      ** Add comma
00001034  103C 000E               1824      MOVE.B      #14,D0
00001038  43F9 0000116A           1825      LEA         pr_comma,A1
0000103E  4E4F                    1826      TRAP        #15
00001040                          1827      ** Decode left side ea
00001040  3002                    1828      MOVE.W      D2,D0
00001042  0240 0E00               1829      ANDI.W      #%0000111000000000,D0
00001046  EC88                    1830      LSR.L       #6,D0
00001048  4EB8 004E               1831      JSR         EADecoder_left  
0000104C                          1832      
0000104C  6000 0176               1833      BRA         opdec_return
00001050                          1834  MATCH_AND_DN_L
00001050                          1835      ** Move command size into D1
00001050  123C 0004               1836      MOVE.B      #4,D1
00001054                          1837      ** Print command
00001054  103C 000E               1838      MOVE.B      #14,D0
00001058  43F9 000011A6           1839      LEA         pr_AND,A1
0000105E  4E4F                    1840      TRAP        #15
00001060                          1841      ** Print size
00001060  43F9 00001172           1842      LEA         pr_LONG,A1
00001066  4E4F                    1843      TRAP        #15
00001068                          1844      ** Print space
00001068  43F9 00001168           1845      LEA         pr_space,A1
0000106E  4E4F                    1846      TRAP        #15
00001070                          1847      ** Decode right side ea
00001070  1002                    1848      MOVE.B      D2,D0
00001072  0200 003F               1849      ANDI.B      #%00111111,D0
00001076  4EB8 0066               1850      JSR         EADecoder
0000107A                          1851      ** Add comma
0000107A  103C 000E               1852      MOVE.B      #14,D0
0000107E  43F9 0000116A           1853      LEA         pr_comma,A1
00001084  4E4F                    1854      TRAP        #15
00001086                          1855      ** Decode left side ea
00001086  3002                    1856      MOVE.W      D2,D0
00001088  0240 0E00               1857      ANDI.W      #%0000111000000000,D0
0000108C  EC88                    1858      LSR.L       #6,D0
0000108E  4EB8 004E               1859      JSR         EADecoder_left  
00001092                          1860      
00001092  6000 0130               1861      BRA         opdec_return
00001096                          1862      
00001096                          1863  MATCH_AND_EA_B
00001096                          1864      ** Move command size into D1
00001096  123C 0002               1865      MOVE.B      #2,D1
0000109A                          1866      ** Print command
0000109A  103C 000E               1867      MOVE.B      #14,D0
0000109E  43F9 000011A6           1868      LEA         pr_AND,A1
000010A4  4E4F                    1869      TRAP        #15
000010A6                          1870      ** Print size
000010A6  43F9 0000116C           1871      LEA         pr_BYTE,A1
000010AC  4E4F                    1872      TRAP        #15
000010AE                          1873      ** Print space
000010AE  43F9 00001168           1874      LEA         pr_space,A1
000010B4  4E4F                    1875      TRAP        #15
000010B6                          1876      ** Decode left side ea
000010B6  3002                    1877      MOVE.W      D2,D0
000010B8  0240 0E00               1878      ANDI.W      #%0000111000000000,D0
000010BC  EC88                    1879      LSR.L       #6,D0
000010BE  4EB8 004E               1880      JSR         EADecoder_left
000010C2                          1881      ** Add comma
000010C2  103C 000E               1882      MOVE.B      #14,D0
000010C6  43F9 0000116A           1883      LEA         pr_comma,A1
000010CC  4E4F                    1884      TRAP        #15
000010CE                          1885      ** Decode right side ea
000010CE  1002                    1886      MOVE.B      D2,D0
000010D0  0200 003F               1887      ANDI.B      #%00111111,D0
000010D4  4EB8 0066               1888      JSR         EADecoder
000010D8                          1889      
000010D8  6000 00EA               1890      BRA         opdec_return
000010DC                          1891  MATCH_AND_EA_W
000010DC                          1892      ** Move command size into D1
000010DC  123C 0002               1893      MOVE.B      #2,D1
000010E0                          1894      ** Print command
000010E0  103C 000E               1895      MOVE.B      #14,D0
000010E4  43F9 000011A6           1896      LEA         pr_AND,A1
000010EA  4E4F                    1897      TRAP        #15
000010EC                          1898      ** Print size
000010EC  43F9 0000116F           1899      LEA         pr_WORD,A1
000010F2  4E4F                    1900      TRAP        #15
000010F4                          1901      ** Print space
000010F4  43F9 00001168           1902      LEA         pr_space,A1
000010FA  4E4F                    1903      TRAP        #15
000010FC                          1904      ** Decode left side ea
000010FC  3002                    1905      MOVE.W      D2,D0
000010FE  0240 0E00               1906      ANDI.W      #%0000111000000000,D0
00001102  EC88                    1907      LSR.L       #6,D0
00001104  4EB8 004E               1908      JSR         EADecoder_left
00001108                          1909      ** Add comma
00001108  103C 000E               1910      MOVE.B      #14,D0
0000110C  43F9 0000116A           1911      LEA         pr_comma,A1
00001112  4E4F                    1912      TRAP        #15
00001114                          1913      ** Decode right side ea
00001114  1002                    1914      MOVE.B      D2,D0
00001116  0200 003F               1915      ANDI.B      #%00111111,D0
0000111A  4EB8 0066               1916      JSR         EADecoder
0000111E                          1917      
0000111E  6000 00A4               1918      BRA         opdec_return
00001122                          1919  MATCH_AND_EA_L
00001122                          1920      ** Move command size into D1
00001122  123C 0004               1921      MOVE.B      #4,D1
00001126                          1922      ** Print command
00001126  103C 000E               1923      MOVE.B      #14,D0
0000112A  43F9 000011A6           1924      LEA         pr_AND,A1
00001130  4E4F                    1925      TRAP        #15
00001132                          1926      ** Print size
00001132  43F9 00001172           1927      LEA         pr_LONG,A1
00001138  4E4F                    1928      TRAP        #15
0000113A                          1929      ** Print space
0000113A  43F9 00001168           1930      LEA         pr_space,A1
00001140  4E4F                    1931      TRAP        #15
00001142                          1932      ** Decode left side ea
00001142  3002                    1933      MOVE.W      D2,D0
00001144  0240 0E00               1934      ANDI.W      #%0000111000000000,D0
00001148  EC88                    1935      LSR.L       #6,D0
0000114A  4EB8 004E               1936      JSR         EADecoder_left
0000114E                          1937      ** Add comma
0000114E  103C 000E               1938      MOVE.B      #14,D0
00001152  43F9 0000116A           1939      LEA         pr_comma,A1
00001158  4E4F                    1940      TRAP        #15
0000115A                          1941      ** Decode right side ea
0000115A  1002                    1942      MOVE.B      D2,D0
0000115C  0200 003F               1943      ANDI.B      #%00111111,D0
00001160  4EB8 0066               1944      JSR         EADecoder
00001164                          1945      
00001164  6000 005E               1946      BRA         opdec_return
00001168                          1947  
00001168                          1948  
00001168                          1949  
00001168                          1950  
00001168                          1951  
00001168                          1952  -------------------- end include --------------------
00001168                          1953  
00001168  =00004E71               1954  NOP             EQU $4E71
00001168  =00000001               1955  MOVE_B          EQU %0001
00001168  =00000003               1956  MOVE_W          EQU %0011
00001168  =00000002               1957  MOVE_L          EQU %0010
00001168  =00000001               1958  MOVEA_WL        EQU %001 
00001168  =00000007               1959  MOVEQ_          EQU %0111
00001168  =00000122               1960  MOVEM_TO_MEM_W  EQU %0100100010
00001168  =00000123               1961  MOVEM_TO_MEM_L  EQU %0100100011
00001168  =00000132               1962  MOVEM_TO_REG_W  EQU %0100110010
00001168  =00000133               1963  MOVEM_TO_REG_L  EQU %0100110011
00001168                          1964  
00001168  =00000018               1965  ADDI_B          EQU %0000011000
00001168  =00000019               1966  ADDI_W          EQU %0000011001
00001168  =0000001A               1967  ADDI_L          EQU %0000011010
00001168                          1968  
00001168  =0000000D               1969  ADD_ADDA        EQU %1101
00001168  =00000000               1970  ADD_TO_REG_B    EQU %000
00001168  =00000001               1971  ADD_TO_REG_W    EQU %001
00001168  =00000002               1972  ADD_TO_REG_L    EQU %010
00001168  =00000004               1973  ADD_TO_EA_B     EQU %100
00001168  =00000005               1974  ADD_TO_EA_W     EQU %101
00001168  =00000006               1975  ADD_TO_EA_L     EQU %110
00001168  =00000003               1976  ADDA_W          EQU %011
00001168  =00000007               1977  ADDA_L          EQU %111
00001168                          1978  
00001168  =00000005               1979  ADDQ            EQU %0101
00001168  =00000000               1980  ADDQ_B          EQU %000
00001168  =00000001               1981  ADDQ_W          EQU %001
00001168  =00000002               1982  ADDQ_L          EQU %010
00001168                          1983  
00001168  =0000000C               1984  MULS_W_AND      EQU %1100
00001168  =00000007               1985  MULS_OP_W       EQU %111 
00001168                          1986  
00001168  =00000009               1987  SUB             EQU %1001
00001168  =00000000               1988  SUB_TO_DN_B     EQU %000
00001168  =00000001               1989  SUB_TO_DN_W     EQU %001
00001168  =00000002               1990  SUB_TO_DN_L     EQU %010
00001168  =00000004               1991  SUB_TO_EA_B     EQU %100
00001168  =00000005               1992  SUB_TO_EA_W     EQU %101
00001168  =00000006               1993  SUB_TO_EA_L     EQU %110
00001168                          1994  
00001168  =00000008               1995  DIVU_OR         EQU %1000
00001168  =00000003               1996  DIVU            EQU %011
00001168                          1997  
00001168  =00000000               1998  DN_B            EQU %000
00001168  =00000001               1999  DN_W            EQU %001
00001168  =00000002               2000  DN_L            EQU %010
00001168  =00000004               2001  EA_B            EQU %100
00001168  =00000005               2002  EA_W            EQU %101
00001168  =00000006               2003  EA_L            EQU %110
00001168                          2004  
00001168  =00000004               2005  MULS_LEA_CLR_JSR_RTS    EQU %0100
00001168  =00004E75               2006  RTS             EQU $4E75
00001168  =00000007               2007  LEA             EQU %111
00001168  =0000013A               2008  JSR             EQU %0100111010
00001168  =00000108               2009  CLR_B           EQU %0100001000
00001168  =00000109               2010  CLR_W           EQU %0100001001
00001168  =0000010A               2011  CLR_L           EQU %0100001010
00001168  =00000130               2012  MULS_L          EQU %0100110000
00001168                          2013  
00001168  =0000038F               2014  LSL             EQU %1110001111
00001168  =0000038B               2015  LSR             EQU %1110001011
00001168  =00000387               2016  ASR             EQU %1110000111
00001168  =00000383               2017  ASL             EQU %1110000011
00001168  =0000039F               2018  ROL             EQU %1110011111
00001168  =0000039B               2019  ROR             EQU %1110011011
00001168                          2020  
00001168  =0000000B               2021  CMP             EQU %1011
00001168  =00000000               2022  CMP_B           EQU %000
00001168  =00000001               2023  CMP_W           EQU %001
00001168  =00000002               2024  CMP_L           EQU %010
00001168                          2025  
00001168  =00000006               2026  BCC             EQU %0110
00001168  =00000000               2027  BCC_16          EQU %00000000
00001168  =000000FF               2028  BCC_32          EQU $FF
00001168  =00000000               2029  CC_T                EQU %0000
00001168  =00000001               2030  CC_F                EQU %0001
00001168  =00000002               2031  CC_HI           EQU %0010
00001168  =00000003               2032  CC_LS           EQU %0011
00001168  =00000004               2033  CC_CC           EQU %0100
00001168  =00000005               2034  CC_CS           EQU %0101
00001168  =00000006               2035  CC_NE           EQU %0110
00001168  =00000007               2036  CC_EQ           EQU %0111
00001168  =00000008               2037  CC_VC           EQU %1000
00001168  =00000009               2038  CC_VS           EQU %1001
00001168  =0000000A               2039  CC_PL           EQU %1010
00001168  =0000000B               2040  CC_MI           EQU %1011
00001168  =0000000C               2041  CC_GE           EQU %1100
00001168  =0000000D               2042  CC_LT           EQU %1101
00001168  =0000000E               2043  CC_GT           EQU %1110
00001168  =0000000F               2044  CC_LE           EQU %1111
00001168                          2045  
00001168= 20 00                   2046  pr_space    DC.B    ' ',0
0000116A= 2C 00                   2047  pr_comma    DC.B    ',',0
0000116C= 2E 42 00                2048  pr_BYTE     DC.B    '.B',0
0000116F= 2E 57 00                2049  pr_WORD     DC.B    '.W',0
00001172= 2E 4C 00                2050  pr_LONG     DC.B    '.L',0
00001175= 23 00                   2051  pr_hash     DC.B    '#',0
00001177                          2052  
00001177= 4E 4F 50 00             2053  pr_NOP      DC.B    'NOP',0
0000117B= 4D 4F 56 45 00          2054  pr_MOVE     DC.B    'MOVE',0
00001180= 4D 4F 56 45 41 00       2055  pr_MOVEA    DC.B    'MOVEA',0
00001186= 4D 4F 56 45 4D 00       2056  pr_MOVEM    DC.B    'MOVEM',0
0000118C= 41 44 44 41 00          2057  pr_ADDA     DC.B    'ADDA',0
00001191= 4D 55 4C 53 00          2058  pr_MULS     DC.B    'MULS',0
00001196= 43 4C 52 00             2059  pr_CLR      DC.B    'CLR',0
0000119A= 52 54 53 00             2060  pr_RTS      DC.B    'RTS',0
0000119E= 43 4D 50 00             2061  pr_CMP      DC.B    'CMP',0
000011A2= 4A 53 52 00             2062  pr_JSR      DC.B    'JSR',0
000011A6= 41 4E 44 00             2063  pr_AND      DC.B    'AND',0
000011AA                          2064  
000011AA                          2065  
000011AA                          2066  
000011AA                          2067  OpDecoder
000011AA  48E7 FF7E               2068      MOVEM.L     D0-D7/A1-A6, -(SP)
000011AE  4241                    2069      CLR         D1
000011B0  6000 0078               2070      BRA         CHECK_NOP
000011B4                          2071  NOP_RETURN
000011B4  6000 0082               2072      BRA         CHECK_FOUR_BIT_SIG
000011B8                          2073  FOUR_BIT_RETURN
000011B8  6000 0434               2074      BRA         CHECK_MOVEM
000011BC                          2075  MOVEM_RETURN
000011BC  6000 04D8               2076      BRA         CHECK_ADDI
000011C0                          2077  ADDI_RETURN
000011C0  6000 0028               2078      BRA         CHECK_SHIFT_AND_ROTATE
000011C4                          2079      
000011C4                          2080  opdec_return
000011C4  4CDF 7EFF               2081      MOVEM.L     (SP)+, D0-D7/A1-A6
000011C8  4E75                    2082      RTS
000011CA                          2083  
000011CA                          2084  ReadFirstFourBits
000011CA                          2085  
000011CA  48A7 2000               2086      MOVEM.W     D2, -(SP)
000011CE                          2087  
000011CE  1E3C 000C               2088      MOVE.B      #12,D7 
000011D2  EE6A                    2089      LSR.W       D7,D2 
000011D4  1602                    2090      MOVE.B      D2,D3
000011D6                          2091      
000011D6  4C9F 0004               2092      MOVEM.W     (SP)+,D2
000011DA  4E75                    2093      RTS
000011DC                          2094      
000011DC                          2095  ReadFirstTenBits
000011DC                          2096      
000011DC  48A7 2000               2097      MOVEM.W     D2, -(SP)
000011E0                          2098   
000011E0  EC4A                    2099      LSR.W       #6,D2 
000011E2  3602                    2100      MOVE.W      D2,D3
000011E4                          2101      
000011E4  4C9F 0004               2102      MOVEM.W     (SP)+,D2
000011E8  4E75                    2103      RTS
000011EA                          2104  CHECK_SHIFT_AND_ROTATE
000011EA                          2105  
000011EA  61F0                    2106      BSR         ReadFirstTenBits
000011EC                          2107      
000011EC  3C3C 038F               2108      MOVE.W      #LSL,D6
000011F0  BC43                    2109      CMP.W       D3,D6
000011F2  6700 055C               2110      BEQ         MATCH_LSL
000011F6                          2111      
000011F6  3C3C 038B               2112      MOVE.W      #LSR,D6
000011FA  BC43                    2113      CMP.W       D3,D6
000011FC  6700 0554               2114      BEQ         MATCH_LSR
00001200                          2115      
00001200  3C3C 0387               2116      MOVE.W      #ASR,D6
00001204  BC43                    2117      CMP.W       D3,D6
00001206  6700 054C               2118      BEQ         MATCH_ASR
0000120A                          2119      
0000120A  3C3C 0383               2120      MOVE.W      #ASL,D6
0000120E  BC43                    2121      CMP.W       D3,D6
00001210  6700 0544               2122      BEQ         MATCH_ASL
00001214                          2123      
00001214  3C3C 039F               2124      MOVE.W      #ROL,D6
00001218  BC43                    2125      CMP.W       D3,D6
0000121A  6700 053C               2126      BEQ         MATCH_ROL
0000121E                          2127      
0000121E  3C3C 039B               2128      MOVE.W      #ROR,D6
00001222  BC43                    2129      CMP.W       D3,D6
00001224  6700 0534               2130      BEQ         MATCH_ROR
00001228                          2131      
00001228  609A                    2132      BRA         opdec_return
0000122A                          2133      
0000122A                          2134  CHECK_NOP
0000122A                          2135      
0000122A  3C3C 4E71               2136      MOVE.W      #NOP,D6
0000122E  BC42                    2137      CMP.W       D2,D6
00001230  6700 EF68               2138      BEQ         MATCH_NOP
00001234                          2139      
00001234  6000 FF7E               2140      BRA         NOP_RETURN
00001238                          2141  
00001238                          2142  CHECK_FOUR_BIT_SIG
00001238                          2143  
00001238  6190                    2144      BSR         ReadFirstFourBits
0000123A                          2145      
0000123A  1C3C 0001               2146      MOVE.B      #MOVE_B,D6
0000123E  BC03                    2147      CMP.B       D3,D6
00001240  6700 EF68               2148      BEQ         MATCH_MOVE_B
00001244                          2149  
00001244  1C3C 0003               2150      MOVE.B      #MOVE_W,D6
00001248  BC03                    2151      CMP.B       D3,D6
0000124A  6700 04B0               2152      BEQ         CHECK_MOVEA_W_AND_MOVE_W
0000124E                          2153      
0000124E  1C3C 0002               2154      MOVE.B      #MOVE_L,D6
00001252  BC03                    2155      CMP.B       D3,D6
00001254  6700 04D0               2156      BEQ         CHECK_MOVEA_L_AND_MOVE_L
00001258                          2157   
00001258  1C3C 0007               2158      MOVE.B      #MOVEQ_,D6
0000125C  BC03                    2159      CMP.B       D3,D6
0000125E  6700 EFCC               2160      BEQ         MATCH_MOVEQ
00001262                          2161      
00001262  1C3C 000D               2162      MOVE.B      #ADD_ADDA,D6
00001266  BC03                    2163      CMP.B       D3,D6
00001268  6700 03B4               2164      BEQ         CHECK_ADD_ADDA
0000126C                          2165      
0000126C  1C3C 0005               2166      MOVE.B      #ADDQ,D6
00001270  BC03                    2167      CMP.B       D3,D6
00001272  6700 0400               2168      BEQ         CHECK_ADDQ
00001276                          2169      
00001276  1C3C 0009               2170      MOVE.B      #SUB,D6
0000127A  BC03                    2171      CMP.B       D3,D6
0000127C  6700 043E               2172      BEQ         CHECK_SUB
00001280                          2173      
00001280  1C3C 0008               2174      MOVE.B      #DIVU_OR,D6
00001284  BC03                    2175      CMP.B       D3,D6
00001286  6700 0318               2176      BEQ         CHECK_DIVU_OR
0000128A                          2177      
0000128A  1C3C 000C               2178      MOVE.B      #MULS_W_AND,D6
0000128E  BC03                    2179      CMP.B       D3,D6
00001290  6700 02C0               2180      BEQ         CHECK_MULS_W_AND
00001294                          2181      
00001294  1C3C 0004               2182      MOVE.B      #MULS_LEA_CLR_JSR_RTS,D6
00001298  BC03                    2183      CMP.B       D3,D6
0000129A  6700 0264               2184      BEQ         CHECK_MULS_LEA_CLR_JSR_RTS
0000129E                          2185      
0000129E  1C3C 000B               2186      MOVE.B      #CMP,D6
000012A2  BC03                    2187      CMP.B       D3,D6
000012A4  6700 0234               2188      BEQ         CHECK_CMP
000012A8                          2189      
000012A8  1C3C 0006               2190      MOVE.B      #BCC,D6
000012AC  BC03                    2191      CMP.B       D3,D6
000012AE  6700 0006               2192      BEQ         CHECK_BCC
000012B2                          2193      
000012B2  6000 FF04               2194      BRA         FOUR_BIT_RETURN
000012B6                          2195  CHECK_BCC
000012B6                          2196      
000012B6  1C3C 0000               2197      MOVE.B      #BCC_16,D6
000012BA  BC02                    2198      CMP.B       D2,D6
000012BC  6700 00B8               2199      BEQ         CHECK_BCC_16
000012C0                          2200      
000012C0  1C3C 00FF               2201      MOVE.B      #BCC_32,D6
000012C4  BC02                    2202      CMP.B       D2,D6
000012C6  6700 0156               2203      BEQ         CHECK_BCC_32
000012CA                          2204      
000012CA  6000 0002               2205      BRA         CHECK_BCC_8
000012CE                          2206      
000012CE                          2207  CHECK_BCC_8
000012CE                          2208      
000012CE  6100 01F6               2209      BSR         ISOLATE_CC_CODE_FOR_BCC
000012D2                          2210      
000012D2  1C3C 0000               2211      MOVE.B      #CC_T,D6
000012D6  BC03                    2212      CMP.B       D3,D6
000012D8  6700 F2C0               2213      BEQ         MATCH_CC_T_8
000012DC                          2214      
000012DC  1C3C 0001               2215      MOVE.B      #CC_F,D6
000012E0  BC03                    2216      CMP.B       D3,D6
000012E2  6700 F2BC               2217      BEQ         MATCH_CC_F_8
000012E6                          2218      
000012E6  1C3C 0002               2219      MOVE.B      #CC_HI,D6
000012EA  BC03                    2220      CMP.B       D3,D6
000012EC  6700 F2B8               2221      BEQ         MATCH_CC_HI_8
000012F0                          2222      
000012F0  1C3C 0003               2223      MOVE.B      #CC_LS,D6
000012F4  BC03                    2224      CMP.B       D3,D6
000012F6  6700 F31E               2225      BEQ         MATCH_CC_LS_8
000012FA                          2226      
000012FA  1C3C 0004               2227      MOVE.B      #CC_CC,D6
000012FE  BC03                    2228      CMP.B       D3,D6
00001300  6700 F398               2229      BEQ         MATCH_CC_CC_8
00001304                          2230      
00001304  1C3C 0005               2231      MOVE.B      #CC_CS,D6
00001308  BC03                    2232      CMP.B       D3,D6
0000130A  6700 F412               2233      BEQ         MATCH_CC_CS_8
0000130E                          2234      
0000130E  1C3C 0006               2235      MOVE.B      #CC_NE,D6
00001312  BC03                    2236      CMP.B       D3,D6
00001314  6700 F48C               2237      BEQ         MATCH_CC_NE_8
00001318                          2238      
00001318  1C3C 0007               2239      MOVE.B      #CC_EQ,D6
0000131C  BC03                    2240      CMP.B       D3,D6
0000131E  6700 F506               2241      BEQ         MATCH_CC_EQ_8
00001322                          2242      
00001322  1C3C 0008               2243      MOVE.B      #CC_VC,D6
00001326  BC03                    2244      CMP.B       D3,D6
00001328  6700 F580               2245      BEQ         MATCH_CC_VC_8
0000132C                          2246      
0000132C  1C3C 0009               2247      MOVE.B      #CC_VS,D6
00001330  BC03                    2248      CMP.B       D3,D6
00001332  6700 F5FA               2249      BEQ         MATCH_CC_VS_8
00001336                          2250      
00001336  1C3C 000A               2251      MOVE.B      #CC_PL,D6
0000133A  BC03                    2252      CMP.B       D3,D6
0000133C  6700 F674               2253      BEQ         MATCH_CC_PL_8
00001340                          2254      
00001340  1C3C 000B               2255      MOVE.B      #CC_MI,D6
00001344  BC03                    2256      CMP.B       D3,D6
00001346  6700 F6EE               2257      BEQ         MATCH_CC_MI_8
0000134A                          2258      
0000134A  1C3C 000C               2259      MOVE.B      #CC_GE,D6
0000134E  BC03                    2260      CMP.B       D3,D6
00001350  6700 F768               2261      BEQ         MATCH_CC_GE_8
00001354                          2262      
00001354  1C3C 000D               2263      MOVE.B      #CC_LT,D6
00001358  BC03                    2264      CMP.B       D3,D6
0000135A  6700 F7E2               2265      BEQ         MATCH_CC_LT_8
0000135E                          2266      
0000135E  1C3C 000E               2267      MOVE.B      #CC_GT,D6
00001362  BC03                    2268      CMP.B       D3,D6
00001364  6700 F85C               2269      BEQ         MATCH_CC_GT_8
00001368                          2270      
00001368  1C3C 000F               2271      MOVE.B      #CC_LE,D6
0000136C  BC03                    2272      CMP.B       D3,D6
0000136E  6700 F8D6               2273      BEQ         MATCH_CC_LE_8
00001372                          2274  
00001372  6000 F956               2275      BRA         ERROR
00001376                          2276      
00001376                          2277  CHECK_BCC_16
00001376                          2278  
00001376  6100 014E               2279      BSR         ISOLATE_CC_CODE_FOR_BCC
0000137A                          2280      
0000137A  1C3C 0000               2281      MOVE.B      #CC_T,D6
0000137E  BC03                    2282      CMP.B       D3,D6
00001380  6700 F21A               2283      BEQ         MATCH_CC_T_16
00001384                          2284      
00001384  1C3C 0001               2285      MOVE.B      #CC_F,D6
00001388  BC03                    2286      CMP.B       D3,D6
0000138A  6700 F216               2287      BEQ         MATCH_CC_F_16
0000138E                          2288      
0000138E  1C3C 0002               2289      MOVE.B      #CC_HI,D6
00001392  BC03                    2290      CMP.B       D3,D6
00001394  6700 F230               2291      BEQ         MATCH_CC_HI_16
00001398                          2292      
00001398  1C3C 0003               2293      MOVE.B      #CC_LS,D6
0000139C  BC03                    2294      CMP.B       D3,D6
0000139E  6700 F2A2               2295      BEQ         MATCH_CC_LS_16
000013A2                          2296      
000013A2  1C3C 0004               2297      MOVE.B      #CC_CC,D6
000013A6  BC03                    2298      CMP.B       D3,D6
000013A8  6700 F31C               2299      BEQ         MATCH_CC_CC_16
000013AC                          2300      
000013AC  1C3C 0005               2301      MOVE.B      #CC_CS,D6
000013B0  BC03                    2302      CMP.B       D3,D6
000013B2  6700 F396               2303      BEQ         MATCH_CC_CS_16
000013B6                          2304      
000013B6  1C3C 0006               2305      MOVE.B      #CC_NE,D6
000013BA  BC03                    2306      CMP.B       D3,D6
000013BC  6700 F410               2307      BEQ         MATCH_CC_NE_16
000013C0                          2308      
000013C0  1C3C 0007               2309      MOVE.B      #CC_EQ,D6
000013C4  BC03                    2310      CMP.B       D3,D6
000013C6  6700 F48A               2311      BEQ         MATCH_CC_EQ_16
000013CA                          2312      
000013CA  1C3C 0008               2313      MOVE.B      #CC_VC,D6
000013CE  BC03                    2314      CMP.B       D3,D6
000013D0  6700 F504               2315      BEQ         MATCH_CC_VC_16
000013D4                          2316      
000013D4  1C3C 0009               2317      MOVE.B      #CC_VS,D6
000013D8  BC03                    2318      CMP.B       D3,D6
000013DA  6700 F57E               2319      BEQ         MATCH_CC_VS_16
000013DE                          2320      
000013DE  1C3C 000A               2321      MOVE.B      #CC_PL,D6
000013E2  BC03                    2322      CMP.B       D3,D6
000013E4  6700 F5F8               2323      BEQ         MATCH_CC_PL_16
000013E8                          2324      
000013E8  1C3C 000B               2325      MOVE.B      #CC_MI,D6
000013EC  BC03                    2326      CMP.B       D3,D6
000013EE  6700 F672               2327      BEQ         MATCH_CC_MI_16
000013F2                          2328      
000013F2  1C3C 000C               2329      MOVE.B      #CC_GE,D6
000013F6  BC03                    2330      CMP.B       D3,D6
000013F8  6700 F6EC               2331      BEQ         MATCH_CC_GE_16
000013FC                          2332      
000013FC  1C3C 000D               2333      MOVE.B      #CC_LT,D6
00001400  BC03                    2334      CMP.B       D3,D6
00001402  6700 F766               2335      BEQ         MATCH_CC_LT_16
00001406                          2336      
00001406  1C3C 000E               2337      MOVE.B      #CC_GT,D6
0000140A  BC03                    2338      CMP.B       D3,D6
0000140C  6700 F7E0               2339      BEQ         MATCH_CC_GT_16
00001410                          2340      
00001410  1C3C 000F               2341      MOVE.B      #CC_LE,D6
00001414  BC03                    2342      CMP.B       D3,D6
00001416  6700 F85A               2343      BEQ         MATCH_CC_LE_16
0000141A                          2344  
0000141A  6000 F8AE               2345      BRA         ERROR
0000141E                          2346  
0000141E                          2347  
0000141E                          2348  CHECK_BCC_32  
0000141E                          2349  
0000141E  6100 00A6               2350      BSR         ISOLATE_CC_CODE_FOR_BCC 
00001422                          2351      
00001422  1C3C 0000               2352      MOVE.B      #CC_T,D6
00001426  BC03                    2353      CMP.B       D3,D6
00001428  6700 F174               2354      BEQ         MATCH_CC_T_32
0000142C                          2355      
0000142C  1C3C 0001               2356      MOVE.B      #CC_F,D6
00001430  BC03                    2357      CMP.B       D3,D6
00001432  6700 F170               2358      BEQ         MATCH_CC_F_32
00001436                          2359      
00001436  1C3C 0002               2360      MOVE.B      #CC_HI,D6
0000143A  BC03                    2361      CMP.B       D3,D6
0000143C  6700 F1AE               2362      BEQ         MATCH_CC_HI_32
00001440                          2363      
00001440  1C3C 0003               2364      MOVE.B      #CC_LS,D6
00001444  BC03                    2365      CMP.B       D3,D6
00001446  6700 F226               2366      BEQ         MATCH_CC_LS_32
0000144A                          2367      
0000144A  1C3C 0004               2368      MOVE.B      #CC_CC,D6
0000144E  BC03                    2369      CMP.B       D3,D6
00001450  6700 F2A0               2370      BEQ         MATCH_CC_CC_32
00001454                          2371      
00001454  1C3C 0005               2372      MOVE.B      #CC_CS,D6
00001458  BC03                    2373      CMP.B       D3,D6
0000145A  6700 F31A               2374      BEQ         MATCH_CC_CS_32
0000145E                          2375      
0000145E  1C3C 0006               2376      MOVE.B      #CC_NE,D6
00001462  BC03                    2377      CMP.B       D3,D6
00001464  6700 F394               2378      BEQ         MATCH_CC_NE_32
00001468                          2379      
00001468  1C3C 0007               2380      MOVE.B      #CC_EQ,D6
0000146C  BC03                    2381      CMP.B       D3,D6
0000146E  6700 F40E               2382      BEQ         MATCH_CC_EQ_32
00001472                          2383      
00001472  1C3C 0008               2384      MOVE.B      #CC_VC,D6
00001476  BC03                    2385      CMP.B       D3,D6
00001478  6700 F488               2386      BEQ         MATCH_CC_VC_32
0000147C                          2387      
0000147C  1C3C 0009               2388      MOVE.B      #CC_VS,D6
00001480  BC03                    2389      CMP.B       D3,D6
00001482  6700 F502               2390      BEQ         MATCH_CC_VS_32
00001486                          2391      
00001486  1C3C 000A               2392      MOVE.B      #CC_PL,D6
0000148A  BC03                    2393      CMP.B       D3,D6
0000148C  6700 F57C               2394      BEQ         MATCH_CC_PL_32
00001490                          2395      
00001490  1C3C 000B               2396      MOVE.B      #CC_MI,D6
00001494  BC03                    2397      CMP.B       D3,D6
00001496  6700 F5F6               2398      BEQ         MATCH_CC_MI_32
0000149A                          2399      
0000149A  1C3C 000C               2400      MOVE.B      #CC_GE,D6
0000149E  BC03                    2401      CMP.B       D3,D6
000014A0  6700 F670               2402      BEQ         MATCH_CC_GE_32
000014A4                          2403      
000014A4  1C3C 000D               2404      MOVE.B      #CC_LT,D6
000014A8  BC03                    2405      CMP.B       D3,D6
000014AA  6700 F6EA               2406      BEQ         MATCH_CC_LT_32
000014AE                          2407      
000014AE  1C3C 000E               2408      MOVE.B      #CC_GT,D6
000014B2  BC03                    2409      CMP.B       D3,D6
000014B4  6700 F764               2410      BEQ         MATCH_CC_GT_32
000014B8                          2411      
000014B8  1C3C 000F               2412      MOVE.B      #CC_LE,D6
000014BC  BC03                    2413      CMP.B       D3,D6
000014BE  6700 F7DE               2414      BEQ         MATCH_CC_LE_32
000014C2                          2415  
000014C2  6000 F806               2416      BRA         ERROR
000014C6                          2417   
000014C6                          2418  ISOLATE_CC_CODE_FOR_BCC
000014C6                          2419  
000014C6  48A7 2000               2420      MOVEM.W     D2, -(SP) 
000014CA                          2421      
000014CA  E94A                    2422      LSL.W       #4,D2
000014CC  1E3C 000C               2423      MOVE.B      #12,D7
000014D0  EE6A                    2424      LSR.W       D7,D2
000014D2                          2425      
000014D2  1602                    2426      MOVE.B      D2,D3      
000014D4                          2427  
000014D4  4C9F 0004               2428      MOVEM.W     (SP)+,D2 
000014D8  4E75                    2429      RTS
000014DA                          2430  CHECK_CMP
000014DA                          2431      
000014DA  6100 0232               2432      BSR         ISOLATE_OP_CODE
000014DE                          2433      
000014DE  1C3C 0000               2434      MOVE.B      #CMP_B,D6
000014E2  BC03                    2435      CMP.B       D3,D6
000014E4  6700 F95E               2436      BEQ         MATCH_CMP_B
000014E8                          2437      
000014E8  1C3C 0001               2438      MOVE.B      #CMP_W,D6
000014EC  BC03                    2439      CMP.B       D3,D6
000014EE  6700 F99A               2440      BEQ         MATCH_CMP_W
000014F2                          2441      
000014F2  1C3C 0002               2442      MOVE.B      #CMP_L,D6
000014F6  BC03                    2443      CMP.B       D3,D6
000014F8  6700 F9D8               2444      BEQ         MATCH_CMP_L
000014FC                          2445      
000014FC  6000 F7CC               2446      BRA         ERROR
00001500                          2447  CHECK_MULS_LEA_CLR_JSR_RTS
00001500                          2448  
00001500  3C3C 4E75               2449      MOVE.W      #RTS,D6
00001504  BC42                    2450      CMP.W       D2,D6
00001506  6700 F92C               2451      BEQ         MATCH_RTS
0000150A                          2452      
0000150A  6100 0202               2453      BSR         ISOLATE_OP_CODE
0000150E                          2454      
0000150E  1C3C 0007               2455      MOVE.B      #LEA,D6
00001512  BC03                    2456      CMP.B       D3,D6
00001514  6700 0236               2457      BEQ         MATCH_LEA
00001518                          2458      
00001518  6100 FCC2               2459      BSR         ReadFirstTenBits
0000151C                          2460      
0000151C  3C3C 013A               2461      MOVE.W      #JSR,D6
00001520  BC43                    2462      CMP.W       D3,D6
00001522  6700 F9F4               2463      BEQ         MATCH_JSR
00001526                          2464      
00001526  3C3C 0108               2465      MOVE.W      #CLR_B,D6
0000152A  BC43                    2466      CMP.W       D3,D6
0000152C  6700 FA0C               2467      BEQ         MATCH_CLR_B
00001530                          2468      
00001530  3C3C 0109               2469      MOVE.W      #CLR_W,D6
00001534  BC43                    2470      CMP.W       D3,D6
00001536  6700 FA30               2471      BEQ         MATCH_CLR_W
0000153A                          2472      
0000153A  3C3C 010A               2473      MOVE.W      #CLR_L,D6
0000153E  BC43                    2474      CMP.W       D3,D6
00001540  6700 FA54               2475      BEQ         MATCH_CLR_L
00001544                          2476      
00001544  3C3C 0130               2477      MOVE.W      #MULS_L,D6  * Shouldn't need to check for the rest of the opcode..?
00001548  BC43                    2478      CMP.W       D3,D6
0000154A  6700 0202               2479      BEQ         MATCH_MULS_L
0000154E                          2480      
0000154E  6000 F77A               2481      BRA         ERROR
00001552                          2482      
00001552                          2483  CHECK_MULS_W_AND
00001552                          2484  
00001552  6100 01BA               2485      BSR         ISOLATE_OP_CODE
00001556                          2486      
00001556  1C3C 0007               2487      MOVE.B      #MULS_OP_W,D6
0000155A  BC03                    2488      CMP.B       D3,D6
0000155C  6700 F890               2489      BEQ         MATCH_MULS_W
00001560                          2490      
00001560  1C3C 0000               2491      MOVE.B      #DN_B,D6
00001564  BC03                    2492      CMP.B       D3,D6
00001566  6700 FA5C               2493      BEQ         MATCH_AND_DN_B
0000156A                          2494      
0000156A  1C3C 0001               2495      MOVE.B      #DN_W,D6
0000156E  BC03                    2496      CMP.B       D3,D6
00001570  6700 FA98               2497      BEQ         MATCH_AND_DN_W
00001574                          2498      
00001574  1C3C 0002               2499      MOVE.B      #DN_L,D6
00001578  BC03                    2500      CMP.B       D3,D6
0000157A  6700 FAD4               2501      BEQ         MATCH_AND_DN_L
0000157E                          2502      
0000157E  1C3C 0004               2503      MOVE.B      #EA_B,D6
00001582  BC03                    2504      CMP.B       D3,D6
00001584  6700 FB10               2505      BEQ         MATCH_AND_EA_B
00001588                          2506      
00001588  1C3C 0005               2507      MOVE.B      #EA_W,D6
0000158C  BC03                    2508      CMP.B       D3,D6
0000158E  6700 FB4C               2509      BEQ         MATCH_AND_EA_W
00001592                          2510      
00001592  1C3C 0006               2511      MOVE.B      #EA_L,D6
00001596  BC03                    2512      CMP.B       D3,D6
00001598  6700 FB88               2513      BEQ         MATCH_AND_EA_L
0000159C                          2514      
0000159C  6000 F72C               2515      BRA         ERROR
000015A0                          2516  
000015A0                          2517  CHECK_DIVU_OR
000015A0                          2518      
000015A0  6100 016C               2519      BSR         ISOLATE_OP_CODE
000015A4                          2520      
000015A4  1C3C 0003               2521      MOVE.B      #DIVU,D6
000015A8  BC03                    2522      CMP.B       D3,D6
000015AA  6700 0192               2523      BEQ         MATCH_DIVU
000015AE                          2524      
000015AE  1C3C 0000               2525      MOVE.B      #DN_B,D6
000015B2  BC03                    2526      CMP.B       D3,D6
000015B4  6700 018A               2527      BEQ         MATCH_OR_DN_B
000015B8                          2528      
000015B8  1C3C 0001               2529      MOVE.B      #DN_W,D6
000015BC  BC03                    2530      CMP.B       D3,D6
000015BE  6700 0182               2531      BEQ         MATCH_OR_DN_W
000015C2                          2532      
000015C2  1C3C 0002               2533      MOVE.B      #DN_L,D6
000015C6  BC03                    2534      CMP.B       D3,D6
000015C8  6700 017A               2535      BEQ         MATCH_OR_DN_L
000015CC                          2536      
000015CC  1C3C 0004               2537      MOVE.B      #EA_B,D6
000015D0  BC03                    2538      CMP.B       D3,D6
000015D2  6700 0172               2539      BEQ         MATCH_OR_EA_B
000015D6                          2540      
000015D6  1C3C 0005               2541      MOVE.B      #EA_W,D6
000015DA  BC03                    2542      CMP.B       D3,D6
000015DC  6700 016A               2543      BEQ         MATCH_OR_EA_W
000015E0                          2544      
000015E0  1C3C 0006               2545      MOVE.B      #EA_L,D6
000015E4  BC03                    2546      CMP.B       D3,D6
000015E6  6700 0162               2547      BEQ         MATCH_OR_EA_L
000015EA                          2548      
000015EA  6000 F6DE               2549      BRA         ERROR
000015EE                          2550  
000015EE                          2551  CHECK_MOVEM
000015EE                          2552      
000015EE  6100 FBEC               2553      BSR         ReadFirstTenBits
000015F2                          2554      
000015F2  3C3C 0122               2555      MOVE.W      #MOVEM_TO_MEM_W,D6
000015F6  BC43                    2556      CMP.W       D3,D6
000015F8  6700 013C               2557      BEQ         MATCH_MOVEM_TO_MEM_W
000015FC                          2558      
000015FC  3C3C 0123               2559      MOVE.W      #MOVEM_TO_MEM_L,D6
00001600  BC43                    2560      CMP.W       D3,D6
00001602  6700 0134               2561      BEQ         MATCH_MOVEM_TO_MEM_L
00001606                          2562      
00001606  3C3C 0132               2563      MOVE.W      #MOVEM_TO_REG_W,D6
0000160A  BC43                    2564      CMP.W       D3,D6
0000160C  6700 012C               2565      BEQ         MATCH_MOVEM_TO_REG_W
00001610                          2566      
00001610  3C3C 0133               2567      MOVE.W      #MOVEM_TO_REG_L,D6
00001614  BC43                    2568      CMP.W       D3,D6
00001616  6700 0124               2569      BEQ         MATCH_MOVEM_TO_REG_L
0000161A                          2570      
0000161A  6000 FBA0               2571      BRA         MOVEM_RETURN
0000161E                          2572  CHECK_ADD_ADDA
0000161E                          2573      
0000161E  6100 00EE               2574      BSR         ISOLATE_OP_CODE
00001622                          2575      
00001622  3C3C 0000               2576      MOVE.W      #DN_B,D6
00001626  BC43                    2577      CMP.W       D3,D6
00001628  6700 ECAA               2578      BEQ         MATCH_ADD_TO_REG_B
0000162C                          2579      
0000162C  3C3C 0001               2580      MOVE.W      #DN_W,D6
00001630  BC43                    2581      CMP.W       D3,D6
00001632  6700 ECBA               2582      BEQ         MATCH_ADD_TO_REG_W
00001636                          2583      
00001636  3C3C 0002               2584      MOVE.W      #DN_L,D6
0000163A  BC43                    2585      CMP.W       D3,D6
0000163C  6700 ECCA               2586      BEQ         MATCH_ADD_TO_REG_L
00001640                          2587      
00001640  3C3C 0004               2588      MOVE.W      #EA_B,D6
00001644  BC43                    2589      CMP.W       D3,D6
00001646  6700 ED56               2590      BEQ         MATCH_ADD_TO_EA_B
0000164A                          2591      
0000164A  3C3C 0005               2592      MOVE.W      #EA_W,D6
0000164E  BC43                    2593      CMP.W       D3,D6
00001650  6700 ED66               2594      BEQ         MATCH_ADD_TO_EA_W
00001654                          2595      
00001654  3C3C 0006               2596      MOVE.W      #EA_L,D6
00001658  BC43                    2597      CMP.W       D3,D6
0000165A  6700 ED76               2598      BEQ         MATCH_ADD_TO_EA_L
0000165E                          2599      
0000165E  3C3C 0003               2600      MOVE.W      #ADDA_W,D6
00001662  BC43                    2601      CMP.W       D3,D6
00001664  6700 F6FC               2602      BEQ         MATCH_ADDA_W
00001668                          2603      
00001668  3C3C 0007               2604      MOVE.W      #ADDA_L,D6
0000166C  BC43                    2605      CMP.W       D3,D6
0000166E  6700 F738               2606      BEQ         MATCH_ADDA_L
00001672                          2607      
00001672  4E75                    2608      RTS ** Change later?
00001674                          2609  CHECK_ADDQ
00001674                          2610      
00001674  6100 0098               2611      BSR         ISOLATE_OP_CODE
00001678                          2612      
00001678  3C3C 0000               2613      MOVE.W      #ADDQ_B,D6
0000167C  BC43                    2614      CMP.W       D3,D6
0000167E  6700 EDE8               2615      BEQ         MATCH_ADDQ_B
00001682                          2616      
00001682  3C3C 0001               2617      MOVE.W      #ADDQ_W,D6
00001686  BC43                    2618      CMP.W       D3,D6
00001688  6700 EDF8               2619      BEQ         MATCH_ADDQ_W
0000168C                          2620      
0000168C  3C3C 0002               2621      MOVE.W      #ADDQ_L,D6
00001690  BC43                    2622      CMP.W       D3,D6
00001692  6700 EE08               2623      BEQ         MATCH_ADDQ_L
00001696                          2624      
00001696                          2625  CHECK_ADDI
00001696                          2626  
00001696  6100 FB44               2627      BSR         ReadFirstTenBits
0000169A                          2628      
0000169A  3C3C 0018               2629      MOVE.W      #ADDI_B,D6
0000169E  BC43                    2630      CMP.W       D3,D6
000016A0  6700 EBBA               2631      BEQ         MATCH_ADDI_B
000016A4                          2632      
000016A4  3C3C 0019               2633      MOVE.W      #ADDI_W,D6
000016A8  BC43                    2634      CMP.W       D3,D6
000016AA  6700 EBCA               2635      BEQ         MATCH_ADDI_W
000016AE                          2636      
000016AE  3C3C 001A               2637      MOVE.W      #ADDI_L,D6
000016B2  BC43                    2638      CMP.W       D3,D6
000016B4  6700 EBDA               2639      BEQ         MATCH_ADDI_L
000016B8                          2640      
000016B8  6000 FB06               2641      BRA         ADDI_RETURN
000016BC                          2642  CHECK_SUB
000016BC                          2643      
000016BC  6100 0050               2644      BSR         ISOLATE_OP_CODE
000016C0                          2645      
000016C0  3C3C 0000               2646      MOVE.W      #DN_B,D6
000016C4  BC43                    2647      CMP.W       D3,D6
000016C6  6700 EC5A               2648      BEQ         MATCH_SUB_TO_DN_B
000016CA                          2649      
000016CA  3C3C 0001               2650      MOVE.W      #DN_W,D6
000016CE  BC43                    2651      CMP.W       D3,D6
000016D0  6700 EC6A               2652      BEQ         MATCH_SUB_TO_DN_W
000016D4                          2653      
000016D4  3C3C 0002               2654      MOVE.W      #DN_L,D6
000016D8  BC43                    2655      CMP.W       D3,D6
000016DA  6700 EC7A               2656      BEQ         MATCH_SUB_TO_DN_L
000016DE                          2657      
000016DE  3C3C 0004               2658      MOVE.W      #EA_B,D6
000016E2  BC43                    2659      CMP.W       D3,D6
000016E4  6700 ED06               2660      BEQ         MATCH_SUB_TO_EA_B
000016E8                          2661      
000016E8  3C3C 0005               2662      MOVE.W      #EA_W,D6
000016EC  BC43                    2663      CMP.W       D3,D6
000016EE  6700 ED16               2664      BEQ         MATCH_SUB_TO_EA_W
000016F2                          2665      
000016F2  3C3C 0006               2666      MOVE.W      #EA_L,D6
000016F6  BC43                    2667      CMP.W       D3,D6
000016F8  6700 ED26               2668      BEQ         MATCH_SUB_TO_EA_L
000016FC                          2669  CHECK_MOVEA_W_AND_MOVE_W
000016FC                          2670      
000016FC  6100 0010               2671      BSR         ISOLATE_OP_CODE
00001700                          2672         
00001700  1C3C 0001               2673      MOVE.B      #MOVEA_WL,D6
00001704  BC03                    2674      CMP.B       D3,D6
00001706  6700 F5CE               2675      BEQ         MATCH_MOVEA_W
0000170A                          2676      
0000170A  6000 EABA               2677      BRA         MATCH_MOVE_W 
0000170E                          2678  ISOLATE_OP_CODE 
0000170E                          2679  
0000170E  48A7 2000               2680      MOVEM.W     D2, -(SP)    
00001712                          2681     
00001712  1E3C 0007               2682      MOVE.B      #7,D7          
00001716  EF6A                    2683      LSL.W       D7,D2
00001718  1E3C 000D               2684      MOVE.B      #13,D7
0000171C  EE6A                    2685      LSR.W       D7,D2
0000171E  1602                    2686      MOVE.B      D2,D3    
00001720                          2687         
00001720  4C9F 0004               2688      MOVEM.W     (SP)+,D2 
00001724  4E75                    2689      RTS
00001726                          2690  CHECK_MOVEA_L_AND_MOVE_L
00001726                          2691      
00001726  61E6                    2692      BSR         ISOLATE_OP_CODE
00001728                          2693         
00001728  1C3C 0001               2694      MOVE.B      #MOVEA_WL,D6
0000172C  BC03                    2695      CMP.B       D3,D6
0000172E  6700 F5EC               2696      BEQ         MATCH_MOVEA_L 
00001732                          2697      
00001732  6000 EAAE               2698      BRA         MATCH_MOVE_L   
00001736                          2699      
00001736                          2700  MATCH_MOVEM_TO_MEM_W
00001736  3A02                    2701      MOVE.W      D2,D5       *REMOVE
00001738                          2702  MATCH_MOVEM_TO_MEM_L
00001738  3A02                    2703      MOVE.W      D2,D5       *REMOVE
0000173A                          2704  MATCH_MOVEM_TO_REG_W
0000173A  3A02                    2705      MOVE.W      D2,D5       *REMOVE
0000173C                          2706  MATCH_MOVEM_TO_REG_L
0000173C  3A02                    2707      MOVE.W      D2,D5       *REMOVE
0000173E                          2708      
0000173E                          2709  
0000173E                          2710  
0000173E                          2711  MATCH_DIVU
0000173E  3A02                    2712      MOVE.W      D2,D5       *REMOVE
00001740                          2713  MATCH_OR_DN_B
00001740  3A02                    2714      MOVE.W      D2,D5       *REMOVE
00001742                          2715  MATCH_OR_DN_W
00001742  3A02                    2716      MOVE.W      D2,D5       *REMOVE
00001744                          2717  MATCH_OR_DN_L
00001744  3A02                    2718      MOVE.W      D2,D5       *REMOVE
00001746                          2719  MATCH_OR_EA_B
00001746  3A02                    2720      MOVE.W      D2,D5       *REMOVE
00001748                          2721  MATCH_OR_EA_W
00001748  3A02                    2722      MOVE.W      D2,D5       *REMOVE
0000174A                          2723  MATCH_OR_EA_L
0000174A  3A02                    2724      MOVE.W      D2,D5       *REMOVE
0000174C                          2725  
0000174C                          2726  MATCH_LEA
0000174C  3A02                    2727      MOVE.W      D2,D5       *REMOVE
0000174E                          2728  
0000174E                          2729  MATCH_MULS_L
0000174E  3A02                    2730      MOVE.W      D2,D5       *REMOVE
00001750                          2731  MATCH_LSL
00001750  3A02                    2732      MOVE.W      D2,D5       *REMOVE
00001752                          2733  MATCH_LSR
00001752  3A02                    2734      MOVE.W      D2,D5       *REMOVE
00001754                          2735  MATCH_ASR
00001754  3A02                    2736      MOVE.W      D2,D5       *REMOVE
00001756                          2737  MATCH_ASL
00001756  3A02                    2738      MOVE.W      D2,D5       *REMOVE
00001758                          2739  MATCH_ROL
00001758  3A02                    2740      MOVE.W      D2,D5       *REMOVE
0000175A                          2741  MATCH_ROR
0000175A  3A02                    2742      MOVE.W      D2,D5       *REMOVE
0000175C                          2743  
0000175C                          2744  
0000175C                          2745  -------------------- end include --------------------
0000175C                          2746          
0000175C= 45 6E 74 65 72 20 ...   2747  MESSAGE     DC.B    'Enter the address of compiled code: ',0
00001781= 49 6E 76 61 6C 69 ...   2748  ERROR_MSG   DC.B    'Invalid input, please rerun',0
0000179D= 20 00                   2749  SPACER      DC.B    ' ',0
0000179F                          2750  
0000179F                          2751  
00001000                          2752          ORG     $1000
00001000                          2753  program_start        
00001000                          2754  
00001000                          2755  
00001000                          2756  *------Code for input-------
00001000                          2757          
00001000  43F8 175C               2758          LEA     MESSAGE,A1      *Code block for first message
00001004  103C 000E               2759          MOVE.B  #14,D0
00001008  4E4F                    2760          TRAP    #15
0000100A                          2761         
0000100A  227C 00004000           2762          MOVEA.L #$4000, A1
00001010  103C 0002               2763          MOVE.B  #2,D0           *Code block for reading input
00001014  4E4F                    2764          TRAP    #15   
00001016  3001                    2765          MOVE.W  D1,D0
00001018                          2766          
00001018  2049                    2767          MOVEA.L A1,A0           *Move the contents of A1 to A0 for the conversion
0000101A  4EB8 0000               2768          JSR     A2H             *Branch to Connor's conversion code      
0000101E                          2769          
0000101E  2040                    2770          MOVEA.L D0,A0
00001020                          2771          
00001020  0C50 FFFF               2772          CMPI.W  #$FFFF,(A0)
00001024  6700 0026               2773          BEQ     input_error
00001028                          2774      
00001028                          2775  loop_start
00001028                          2776          
00001028  2208                    2777          MOVE.L  A0,D1           *Print out the address we're working on
0000102A  7410                    2778          MOVE.L  #16,D2          
0000102C  700F                    2779          MOVE.L  #15,D0          
0000102E  4E4F                    2780          TRAP    #15
00001030                          2781  
00001030  700E                    2782          MOVE.L  #14,D0
00001032  43F8 179D               2783          LEA     SPACER,A1
00001036  4E4F                    2784          TRAP    #15
00001038                          2785          
00001038  3418                    2786          MOVE.W  (A0)+,D2
0000103A  0C42 FFFF               2787          CMPI.W  #$FFFF,D2
0000103E  6700 0014               2788          BEQ     Done
00001042                          2789          
00001042  4EB8 11AA               2790          JSR     OpDecoder
00001046                          2791          
00001046  700D                    2792          MOVE.L  #13,D0
00001048  4E4F                    2793          TRAP    #15
0000104A                          2794          
0000104A  60DC                    2795          BRA     loop_start
0000104C                          2796          
0000104C                          2797  input_error        
0000104C  700D                    2798          MOVE.L  #13,D0
0000104E  43F8 1781               2799          LEA     ERROR_MSG,A1
00001052  4E4F                    2800          TRAP    #15
00001054                          2801  Done        
00001054                          2802  
00001054                          2803          END    $1000

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
A2H                 0
ABS_LONG            39
ABS_WORD            38
ADDA_L              7
ADDA_W              3
ADDBYTELOOP         24
ADDBYTES            1C
ADDI_B              18
ADDI_L              1A
ADDI_RETURN         11C0
ADDI_W              19
ADDQ                5
ADDQ_B              0
ADDQ_L              2
ADDQ_W              1
ADD_ADDA            D
ADD_TO_EA_B         4
ADD_TO_EA_L         6
ADD_TO_EA_W         5
ADD_TO_REG_B        0
ADD_TO_REG_L        2
ADD_TO_REG_W        1
AN                  8
ASL                 383
ASR                 387
BCC                 6
BCC_16              0
BCC_32              FF
CC_CC               4
CC_CS               5
CC_EQ               7
CC_F                1
CC_GE               C
CC_GT               E
CC_HI               2
CC_LE               F
CC_LS               3
CC_LT               D
CC_MI               B
CC_NE               6
CC_PL               A
CC_T                0
CC_VC               8
CC_VS               9
CHECK_ADDI          1696
CHECK_ADDQ          1674
CHECK_ADD_ADDA      161E
CHECK_BCC           12B6
CHECK_BCC_16        1376
CHECK_BCC_32        141E
CHECK_BCC_8         12CE
CHECK_CMP           14DA
CHECK_DIVU_OR       15A0
CHECK_FOUR_BIT_SIG  1238
CHECK_MOVEA_L_AND_MOVE_L  1726
CHECK_MOVEA_W_AND_MOVE_W  16FC
CHECK_MOVEM         15EE
CHECK_MULS_LEA_CLR_JSR_RTS  1500
CHECK_MULS_W_AND    1552
CHECK_NOP           122A
CHECK_SHIFT_AND_ROTATE  11EA
CHECK_SUB           16BC
CLR_B               108
CLR_L               10A
CLR_W               109
CMP                 B
CMP_B               0
CMP_L               2
CMP_W               1
CONV_END            2C
CR                  D
DEC_ABS_LONG        116
DEC_ABS_WORD        10A
DEC_AN              12E
DEC_DN              122
DEC_IMMEDIATE       EE
DEC_INDIRECT        13A
DEC_POST_INC        14E
DEC_PRE_DEC         168
DEC_RETURN          D0
DIVU                3
DIVU_OR             8
DN                  0
DN_B                0
DN_L                2
DN_W                1
DONE                1054
EADECODER           66
EADECODER_LEFT      4E
EA_B                4
EA_L                6
EA_W                5
ERROR               CCA
ERROR_MSG           1781
FOUR_BIT_RETURN     11B8
GET_BCC_DESTINATION_ADDRESS  550
GET_BCC_DISPLACEMENT_16BIT  53C
GET_BCC_DISPLACEMENT_32BIT  542
GET_BCC_DISPLACEMENT_8BIT  536
GET_CURRENT_ADDRESS  548
IMMEDIATE           3C
IMM_SKIP            E8
IMM_WORD            106
INDIRECT            10
INPUT_ERROR         104C
ISOLATE_CC_CODE_FOR_BCC  14C6
ISOLATE_OP_CODE     170E
JSR                 13A
LEA                 7
LEFT_SKIP           6A
LF                  A
LOOP_START          1028
LSL                 38F
LSR                 38B
MATCH_ADDA_L        DA8
MATCH_ADDA_W        D62
MATCH_ADDI_B        25C
MATCH_ADDI_L        290
MATCH_ADDI_W        276
MATCH_ADDQ_B        468
MATCH_ADDQ_L        49C
MATCH_ADDQ_W        482
MATCH_ADD_TO_EA_B   39E
MATCH_ADD_TO_EA_L   3D2
MATCH_ADD_TO_EA_W   3B8
MATCH_ADD_TO_REG_B  2D4
MATCH_ADD_TO_REG_L  308
MATCH_ADD_TO_REG_W  2EE
MATCH_AND_DN_B      FC4
MATCH_AND_DN_L      1050
MATCH_AND_DN_W      100A
MATCH_AND_EA_B      1096
MATCH_AND_EA_L      1122
MATCH_AND_EA_W      10DC
MATCH_ASL           1756
MATCH_ASR           1754
MATCH_CC_CC_16      6C6
MATCH_CC_CC_32      6F2
MATCH_CC_CC_8       69A
MATCH_CC_CS_16      74A
MATCH_CC_CS_32      776
MATCH_CC_CS_8       71E
MATCH_CC_EQ_16      852
MATCH_CC_EQ_32      87E
MATCH_CC_EQ_8       826
MATCH_CC_F_16       5A2
MATCH_CC_F_32       5A4
MATCH_CC_F_8        5A0
MATCH_CC_GE_16      AE6
MATCH_CC_GE_32      B12
MATCH_CC_GE_8       ABA
MATCH_CC_GT_16      BEE
MATCH_CC_GT_32      C1A
MATCH_CC_GT_8       BC2
MATCH_CC_HI_16      5C6
MATCH_CC_HI_32      5EC
MATCH_CC_HI_8       5A6
MATCH_CC_LE_16      C72
MATCH_CC_LE_32      C9E
MATCH_CC_LE_8       C46
MATCH_CC_LS_16      642
MATCH_CC_LS_32      66E
MATCH_CC_LS_8       616
MATCH_CC_LT_16      B6A
MATCH_CC_LT_32      B96
MATCH_CC_LT_8       B3E
MATCH_CC_MI_16      A62
MATCH_CC_MI_32      A8E
MATCH_CC_MI_8       A36
MATCH_CC_NE_16      7CE
MATCH_CC_NE_32      7FA
MATCH_CC_NE_8       7A2
MATCH_CC_PL_16      9DE
MATCH_CC_PL_32      A0A
MATCH_CC_PL_8       9B2
MATCH_CC_T_16       59C
MATCH_CC_T_32       59E
MATCH_CC_T_8        59A
MATCH_CC_VC_16      8D6
MATCH_CC_VC_32      902
MATCH_CC_VC_8       8AA
MATCH_CC_VS_16      95A
MATCH_CC_VS_32      986
MATCH_CC_VS_8       92E
MATCH_CLR_B         F3A
MATCH_CLR_L         F96
MATCH_CLR_W         F68
MATCH_CMP_B         E44
MATCH_CMP_L         ED2
MATCH_CMP_W         E8A
MATCH_DIVU          173E
MATCH_JSR           F18
MATCH_LEA           174C
MATCH_LSL           1750
MATCH_LSR           1752
MATCH_MOVEA_L       D1C
MATCH_MOVEA_W       CD6
MATCH_MOVEM_TO_MEM_L  1738
MATCH_MOVEM_TO_MEM_W  1736
MATCH_MOVEM_TO_REG_L  173C
MATCH_MOVEM_TO_REG_W  173A
MATCH_MOVEQ         22C
MATCH_MOVE_B        1AA
MATCH_MOVE_L        1E2
MATCH_MOVE_W        1C6
MATCH_MULS_L        174E
MATCH_MULS_W        DEE
MATCH_NOP           19A
MATCH_OR_DN_B       1740
MATCH_OR_DN_L       1744
MATCH_OR_DN_W       1742
MATCH_OR_EA_B       1746
MATCH_OR_EA_L       174A
MATCH_OR_EA_W       1748
MATCH_ROL           1758
MATCH_ROR           175A
MATCH_RTS           E34
MATCH_SUB_TO_DN_B   322
MATCH_SUB_TO_DN_L   356
MATCH_SUB_TO_DN_W   33C
MATCH_SUB_TO_EA_B   3EC
MATCH_SUB_TO_EA_L   420
MATCH_SUB_TO_EA_W   406
MESSAGE             175C
MOVEA_WL            1
MOVEM_RETURN        11BC
MOVEM_TO_MEM_L      123
MOVEM_TO_MEM_W      122
MOVEM_TO_REG_L      133
MOVEM_TO_REG_W      132
MOVEQ_              7
MOVE_B              1
MOVE_L              2
MOVE_W              3
MULS_L              130
MULS_LEA_CLR_JSR_RTS  4
MULS_OP_W           7
MULS_W_AND          C
NOP                 4E71
NOP_RETURN          11B4
NUMSUB              32
NUMSUBRTN           E
OPDECODER           11AA
OPDEC_RETURN        11C4
OUTPUT              10000
POST_INC            18
PRE_DEC             20
PRINTHEX            554
PRINTSIZEBYTE       570
PRINTSIZELONG       58C
PRINTSIZEWORD       57E
PRINTSTRING         568
PRINT_ADDI          2AA
PRINT_ADDQ          4B6
PRINT_ADD_TO_EA     43A
PRINT_ADD_TO_REG    370
PRINT_MOVE          1FE
PROGRAM_START       1000
PR_ADD              188
PR_ADDA             118C
PR_ADDI             18C
PR_ADDQ             191
PR_AND              11A6
PR_BCC_CC           4FE
PR_BCC_CS           502
PR_BCC_EQ           506
PR_BCC_GE           50A
PR_BCC_GT           50E
PR_BCC_HI           512
PR_BCC_LE           516
PR_BCC_LS           51A
PR_BCC_LT           51E
PR_BCC_MI           522
PR_BCC_NE           526
PR_BCC_PL           52A
PR_BCC_VC           52E
PR_BCC_VS           532
PR_BYTE             116C
PR_CLR              1196
PR_CMP              119E
PR_COMMA            116A
PR_ERROR            4F8
PR_HASH             1175
PR_JSR              11A2
PR_LONG             1172
PR_MOVE             117B
PR_MOVEA            1180
PR_MOVEM            1186
PR_MOVEQ            182
PR_MULS             1191
PR_NOP              1177
PR_RTS              119A
PR_SPACE            1168
PR_SUB              196
PR_WORD             116F
READFIRSTFOURBITS   11CA
READFIRSTTENBITS    11DC
ROL                 39F
ROR                 39B
RTS                 4E75
SPACER              179D
SUB                 9
SUB_TO_DN_B         0
SUB_TO_DN_L         2
SUB_TO_DN_W         1
SUB_TO_EA_B         4
SUB_TO_EA_L         6
SUB_TO_EA_W         5
UPSEND              46
UPSUB               3C
UPSUBRTN            16

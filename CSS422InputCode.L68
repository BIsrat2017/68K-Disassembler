00001000 Starting Address
Assembler used: EASy68K Editor/Assembler v5.15.04
Created On: 3/9/2017 12:39:04 AM

00000000                             1  *-----------------------------------------------------------
00000000                             2  * Title      :
00000000                             3  * Written by :
00000000                             4  * Date       :
00000000                             5  * Description:
00000000                             6  *-----------------------------------------------------------
00000000  =0000000D                  7  CR      EQU     $0D
00000000  =0000000A                  8  LF      EQU     $0A   
00000000                             9          INCLUDE 'ASCII_HEX_Conversions.x68'
00000000                            10  
00000000                            11  
00000000                            12  
00000000                            13  A2H     *Converts and ASCII Byte string into HEX; Size WORD
00000000  48E7 7FFE                 14          MOVEM.L     D1-D7/A0-A6, -(SP)  
00000004                            15          
00000004  3400                      16          MOVE.W  D0,D2
00000006  3202                      17          MOVE.W  D2,D1                   *Store length of string into D1 for looping
00000008  2248                      18          MOVEA.L A0,A1                   *Copy starting point of string
0000000A                            19  
0000000A  6000 0026                 20          BRA     numSub
0000000E                            21  numSubRTN
0000000E  2049                      22          MOVEA.L A1,A0                   *Restore address position
00000010  3202                      23          MOVE.W  D2,D1                   *Reset loop counter
00000012                            24          
00000012  6000 0028                 25          BRA     upSub
00000016                            26  upSubRTN        
00000016  2049                      27          MOVEA.L A1,A0                   *Restore address position
00000018  3202                      28          MOVE.W  D2,D1                   *Reset loop counter
0000001A  4240                      29          CLR     D0                      *Clear D0
0000001C                            30  addBytes
0000001C  D018                      31          ADD.B   (A0)+,D0
0000001E  5301                      32          SUBI.B  #1,D1
00000020  6700 000A                 33          BEQ     conv_end
00000024                            34  addByteLoop
00000024  E980                      35          ASL.L   #4,D0
00000026  D018                      36          ADD.B   (A0)+,D0
00000028  5301                      37          SUBI.B  #1,D1
0000002A  66F8                      38          BNE     addByteLoop
0000002C                            39  conv_end
0000002C  4CDF 7FFE                 40          MOVEM.L     (SP)+, D1-D7/A0-A6
00000030  4E75                      41          RTS
00000032                            42          
00000032                            43  numSub  *Convert ASCII 'number' to true number byte; Should not be called outside of the A2H subroutines
00000032  0418 0030                 44          SUBI.B  #$30,(A0)+              *Subtract difference between null ASCII and '0' ASCII
00000036  5341                      45          SUB.W   #1,D1                   *Decrement loop counter
00000038  66F8                      46          BNE     numSub                  *If loop has not ended restart
0000003A  60D2                      47          BRA     numSubRTN
0000003C                            48  
0000003C                            49  upSub   *Loops through string to remove any upper case characters 
0000003C                            50          *that may remain in the string
0000003C  0C10 0009                 51          CMPI.B  #9,(A0)                 *Check if the value is greater than 0-9
00000040  6F00 0004                 52          BLE     upSEnd                  *If it's not, continue loop
00000044  5310                      53          SUBI.B  #1,(A0)                 *Otherwise, subtract difference between ASCII 'number' code and 'A' code
00000046                            54  upSEnd
00000046  5248                      55          ADDA.W  #1,A0                   *Increment to next position to check for uppercase
00000048  5341                      56          SUB.W   #1,D1                   *Decrement loop counter
0000004A  66F0                      57          BNE     upSub                   
0000004C  60C8                      58          BRA     upSubRTN
0000004E                            59  
0000004E                            60  
0000004E                            61  -------------------- end include --------------------
0000004E                            62          INCLUDE 'opcodes.x68'
0000004E                            63                  INCLUDE 'EADecoder.x68'
0000004E                            64  
0000004E                            65  
0000004E  =00010000                 66  output      EQU $00010000
0000004E                            67  
0000004E  =0000003C                 68  IMMEDIATE   EQU %00111100
0000004E  =00000038                 69  ABS_WORD    EQU %00111000
0000004E  =00000039                 70  ABS_LONG    EQU %00111001
0000004E  =00000000                 71  Dn          EQU %00000000
0000004E  =00000008                 72  An          EQU %00001000
0000004E  =00000010                 73  INDIRECT    EQU %00010000
0000004E  =00000018                 74  POST_INC    EQU %00011000
0000004E  =00000020                 75  PRE_DEC     EQU %00100000
0000004E                            76  
0000004E                            77  
0000004E                            78  
0000004E                            79  EADecoder_left
0000004E  48E7 FF7E                 80          MOVEM.L     D0-D7/A1-A6, -(SP)
00000052                            81          
00000052                            82          ** Swap the mode and register bits
00000052  1800                      83          MOVE.B  D0,D4
00000054  0200 0007                 84          ANDI.B  #%00000111,D0       * Mask mode
00000058  0204 0038                 85          ANDI.B  #%00111000,D4       * Mask register
0000005C  E708                      86          LSL.B   #3,D0               * Move mode bits over
0000005E  E60C                      87          LSR.B   #3,D4               * Move register bits over
00000060  8004                      88          OR.B    D4,D0               * Recombine
00000062                            89          
00000062  6000 0006                 90          BRA     left_skip
00000066                            91  
00000066                            92  EADecoder
00000066  48E7 FF7E                 93          MOVEM.L     D0-D7/A1-A6, -(SP) *Store registers on stack, except D0
0000006A                            94  left_skip   
0000006A  4242                      95          CLR     D2     
0000006C  1401                      96          MOVE.B  D1,D2 ** Store opcode size in bytes into D2
0000006E                            97          
0000006E  43F9 00010000             98          LEA     output,A1
00000074  45F9 00010000             99          LEA     output,A2
0000007A                           100          
0000007A                           101          *First, decoder will check for the 3 types with hard coded register values
0000007A  163C 0001                102          MOVE.B  #1,D3
0000007E  B07C 003C                103          CMP     #IMMEDIATE,D0
00000082  6700 0068                104          BEQ     dec_immediate
00000086                           105          
00000086  B07C 0038                106          CMP     #ABS_WORD,D0
0000008A  6700 007C                107          BEQ     dec_abs_word
0000008E                           108          
0000008E  B07C 0039                109          CMP     #ABS_LONG,D0
00000092  6700 0080                110          BEQ     dec_abs_long
00000096                           111          
00000096                           112          *If it was none of the above, store the register and mode seperately
00000096  4243                     113          CLR     D3
00000098  1200                     114          MOVE.B  D0,D1
0000009A  0201 0038                115          ANDI.B  #%00111000,D1           *Get mode value
0000009E  0200 0007                116          ANDI.B  #%00000111,D0           *Get register value
000000A2  0600 0030                117          ADDI.B  #$30,D0
000000A6                           118                
000000A6  B27C 0000                119          CMP     #Dn,D1
000000AA  6700 0074                120          BEQ     dec_Dn 
000000AE                           121          
000000AE  B27C 0008                122          CMP     #An,D1
000000B2  6700 0078                123          BEQ     dec_An
000000B6                           124                  
000000B6  B27C 0010                125          CMP     #INDIRECT,D1
000000BA  6700 007C                126          BEQ     dec_indirect
000000BE                           127                  
000000BE  B27C 0018                128          CMP     #POST_INC,D1
000000C2  6700 0088                129          BEQ     dec_post_inc
000000C6                           130                  
000000C6  B27C 0020                131          CMP     #PRE_DEC,D1
000000CA  6700 009A                132          BEQ     dec_pre_dec
000000CE                           133  
000000CE                           134  dec_return ** Common return for all types
000000CE                           135          
000000CE                           136          ** Print display string
000000CE  103C 000E                137          MOVE.B  #14,D0
000000D2  4E4F                     138          TRAP    #15
000000D4                           139          
000000D4                           140          ** If there is immediate data to print, print it
000000D4  B67C 0001                141          CMP     #1,D3
000000D8  6600 000C                142          BNE     imm_skip
000000DC                           143          
000000DC  103C 000F                144          MOVE.B  #15,D0
000000E0  143C 0010                145          MOVE.B  #16,D2
000000E4  4E4F                     146          TRAP    #15
000000E6                           147  
000000E6                           148  imm_skip
000000E6  4CDF 7EFF                149          MOVEM.L     (SP)+, D0-D7/A1-A6 *Return register data from stack, except D0
000000EA  4E75                     150          RTS
000000EC                           151          
000000EC                           152          * Individual EA decoders *
000000EC                           153  
000000EC                           154  dec_immediate   *DECODE IMMEDIATE VALUE*
000000EC  14FC 0023                155          MOVE.B  #'#',(A2)+  * Move '#' char into string
000000F0  14FC 0024                156          MOVE.B  #'$',(A2)+  * Move '$' char into string
000000F4  14FC 0000                157          MOVE.B  #$0,(A2)+   * Null terminate string
000000F8  B47C 0002                158          CMP     #2,D2       * Check if data is word length
000000FC  6700 0006                159          BEQ     imm_word    
00000100                           160          
00000100  2218                     161          MOVE.L  (A0)+,D1    * Length was long
00000102  60CA                     162          BRA     dec_return
00000104                           163          
00000104                           164  imm_word
00000104  3218                     165          MOVE.W  (A0)+,D1    * Length was word
00000106  60C6                     166          BRA     dec_return
00000108                           167  
00000108                           168  
00000108                           169  dec_abs_word    *DECODE ABSOLUTE WORD*
00000108  14FC 0024                170          MOVE.B  #'$',(A2)+  * Move '$' char into string
0000010C  14FC 0000                171          MOVE.B  #$0,(A2)+   * Null terminate string
00000110  3218                     172          MOVE.W  (A0)+,D1
00000112  60BA                     173          BRA     dec_return
00000114                           174          
00000114                           175  
00000114                           176  dec_abs_long    *DECODE ABSOLUTE LONG*
00000114  14FC 0024                177          MOVE.B  #'$',(A2)+  * Move '$' char into string
00000118  14FC 0000                178          MOVE.B  #$0,(A2)+   * Null terminate string
0000011C  2218                     179          MOVE.L  (A0)+,D1
0000011E  60AE                     180          BRA     dec_return
00000120                           181          
00000120                           182  
00000120                           183  dec_Dn          *DECODE DIRECT DATA*
00000120  14FC 0044                184          MOVE.B  #'D',(A2)+
00000124  14C0                     185          MOVE.B  D0,(A2)+
00000126  14FC 0000                186          MOVE.B  #$0,(A2)+
0000012A  60A2                     187          BRA     dec_return
0000012C                           188  
0000012C                           189          
0000012C                           190  dec_An          *DECODE DIRECT ADDRESS*
0000012C  14FC 0041                191          MOVE.B  #'A',(A2)+
00000130  14C0                     192          MOVE.B  D0,(A2)+
00000132  14FC 0000                193          MOVE.B  #$0,(A2)+
00000136  6096                     194          BRA     dec_return
00000138                           195  
00000138                           196  
00000138                           197  dec_indirect    *DECODE INDIRECT ACCESS*
00000138  14FC 0028                198          MOVE.B  #'(',(A2)+
0000013C  14FC 0041                199          MOVE.B  #'A',(A2)+
00000140  14C0                     200          MOVE.B  D0,(A2)+
00000142  14FC 0029                201          MOVE.B  #')',(A2)+
00000146  14FC 0000                202          MOVE.B  #$0,(A2)+
0000014A  6082                     203          BRA     dec_return
0000014C                           204          
0000014C                           205  
0000014C                           206  dec_post_inc    *DECODE INDIRECT POST INCREMENT*
0000014C  14FC 0028                207          MOVE.B  #'(',(A2)+
00000150  14FC 0041                208          MOVE.B  #'A',(A2)+
00000154  14C0                     209          MOVE.B  D0,(A2)+
00000156  14FC 0029                210          MOVE.B  #')',(A2)+
0000015A  14FC 002B                211          MOVE.B  #'+',(A2)+
0000015E  14FC 0000                212          MOVE.B  #$0,(A2)+
00000162  6000 FF6A                213          BRA     dec_return
00000166                           214          
00000166                           215          
00000166                           216  dec_pre_dec    *DECODE INDIRECT PRE DECREMENT*
00000166  14FC 002D                217          MOVE.B  #'-',(A2)+
0000016A  14FC 0028                218          MOVE.B  #'(',(A2)+
0000016E  14FC 0041                219          MOVE.B  #'A',(A2)+
00000172  14C0                     220          MOVE.B  D0,(A2)+
00000174  14FC 0029                221          MOVE.B  #')',(A2)+
00000178  14FC 0000                222          MOVE.B  #$0,(A2)+
0000017C  6000 FF50                223          BRA     dec_return
00000180                           224  
00000180                           225  
00000180                           226  
00000180                           227  
00000180                           228  
00000180                           229  
00000180                           230  
00000180                           231  
00000180                           232  -------------------- end include --------------------
00000180                           233                  INCLUDE 'connor_opcodes.x68'
00000180= 41 44 44 00              234  pr_ADD          DC.B    'ADD',0
00000184= 41 44 44 49 00           235  pr_ADDI         DC.B    'ADDI',0
00000189= 41 44 44 51 00           236  pr_ADDQ         DC.B    'ADDQ',0
0000018E                           237  
0000018E                           238  MATCH_NOP
0000018E  43F9 00000573            239      LEA         pr_NOP,A1
00000194  103C 000E                240      MOVE.B      #14,D0
00000198  4E4F                     241      TRAP        #15
0000019A  6000 040C                242      BRA         opdec_return
0000019E                           243      
0000019E                           244  MATCH_MOVE_B
0000019E                           245      ** Move command size into D1
0000019E  123C 0002                246      MOVE.B      #2,D1
000001A2                           247      ** Print command
000001A2  103C 000E                248      MOVE.B      #14,D0
000001A6  43F9 00000577            249      LEA         pr_MOVE,A1
000001AC  4E4F                     250      TRAP        #15
000001AE                           251      ** Print size
000001AE  43F9 0000056A            252      LEA         pr_BYTE,A1
000001B4  4E4F                     253      TRAP        #15
000001B6                           254      ** Print space
000001B6  43F9 00000566            255      LEA         pr_space,A1
000001BC  4E4F                     256      TRAP        #15
000001BE                           257      ** Decode right side ea
000001BE  1002                     258      MOVE.B      D2,D0
000001C0  0200 003F                259      ANDI.B      #%00111111,D0
000001C4  4EB8 0066                260      JSR         EADecoder
000001C8                           261      ** Add comma
000001C8  103C 000E                262      MOVE.B      #14,D0
000001CC  43F9 00000568            263      LEA         pr_comma,A1
000001D2  4E4F                     264      TRAP        #15
000001D4                           265      ** Decode left side ea
000001D4  3002                     266      MOVE.W      D2,D0
000001D6  0240 0FC0                267      ANDI.W      #%0000111111000000,D0
000001DA  EC48                     268      LSR.W       #6,D0
000001DC  4EB8 004E                269      JSR         EADecoder_left
000001E0                           270      
000001E0  6000 03C6                271      BRA         opdec_return
000001E4                           272      
000001E4                           273  MATCH_MOVE_W
000001E4                           274      ** Move command size into D1
000001E4  123C 0002                275      MOVE.B      #2,D1
000001E8                           276      ** Print command
000001E8  103C 000E                277      MOVE.B      #14,D0
000001EC  43F9 00000577            278      LEA         pr_MOVE,A1
000001F2  4E4F                     279      TRAP        #15
000001F4                           280      ** Print size
000001F4  43F9 0000056D            281      LEA         pr_WORD,A1
000001FA  4E4F                     282      TRAP        #15
000001FC                           283      ** Print space
000001FC  43F9 00000566            284      LEA         pr_space,A1
00000202  4E4F                     285      TRAP        #15
00000204                           286      ** Decode right side ea
00000204  1002                     287      MOVE.B      D2,D0
00000206  0200 003F                288      ANDI.B      #%00111111,D0
0000020A  4EB8 0066                289      JSR         EADecoder
0000020E                           290      ** Add comma
0000020E  103C 000E                291      MOVE.B      #14,D0
00000212  43F9 00000568            292      LEA         pr_comma,A1
00000218  4E4F                     293      TRAP        #15
0000021A                           294      ** Decode left side ea
0000021A  3002                     295      MOVE.W      D2,D0
0000021C  0240 0FC0                296      ANDI.W      #%0000111111000000,D0
00000220  EC48                     297      LSR.W       #6,D0
00000222  4EB8 004E                298      JSR         EADecoder_left
00000226                           299      
00000226  6000 0380                300      BRA         opdec_return
0000022A                           301  
0000022A                           302  MATCH_ADDI_B
0000022A                           303      ** Move command size into D1
0000022A  123C 0002                304      MOVE.B      #2,D1
0000022E                           305      ** Print command
0000022E  103C 000E                306      MOVE.B      #14,D0
00000232  43F8 0184                307      LEA         pr_ADDI,A1
00000236  4E4F                     308      TRAP        #15
00000238                           309      ** Print size
00000238  43F9 0000056A            310      LEA         pr_BYTE,A1
0000023E  4E4F                     311      TRAP        #15
00000240                           312      ** Print space
00000240  43F9 00000566            313      LEA         pr_space,A1
00000246  4E4F                     314      TRAP        #15
00000248                           315      ** Print Immediate data
00000248  103C 003C                316      MOVE.B      #%00111100,D0
0000024C  4EB8 0066                317      JSR         EADecoder
00000250                           318      ** Add comma
00000250  103C 000E                319      MOVE.B      #14,D0
00000254  43F9 00000568            320      LEA         pr_comma,A1
0000025A  4E4F                     321      TRAP        #15
0000025C                           322      ** Decode right side ea
0000025C  1002                     323      MOVE.B      D2,D0
0000025E  0200 003F                324      ANDI.B      #%00111111,D0
00000262  4EB8 0066                325      JSR         EADecoder
00000266                           326      
00000266  6000 0340                327      BRA         opdec_return
0000026A                           328      
0000026A                           329  MATCH_ADDI_W
0000026A                           330      ** Move command size into D1
0000026A  123C 0002                331      MOVE.B      #2,D1
0000026E                           332      ** Print command
0000026E  103C 000E                333      MOVE.B      #14,D0
00000272  43F8 0184                334      LEA         pr_ADDI,A1
00000276  4E4F                     335      TRAP        #15
00000278                           336      ** Print size
00000278  43F9 0000056D            337      LEA         pr_WORD,A1
0000027E  4E4F                     338      TRAP        #15
00000280                           339      ** Print space
00000280  43F9 00000566            340      LEA         pr_space,A1
00000286  4E4F                     341      TRAP        #15
00000288                           342      ** Print Immediate data
00000288  103C 003C                343      MOVE.B      #%00111100,D0
0000028C  4EB8 0066                344      JSR         EADecoder
00000290                           345      ** Add comma
00000290  103C 000E                346      MOVE.B      #14,D0
00000294  43F9 00000568            347      LEA         pr_comma,A1
0000029A  4E4F                     348      TRAP        #15
0000029C                           349      ** Decode right side ea
0000029C  1002                     350      MOVE.B      D2,D0
0000029E  0200 003F                351      ANDI.B      #%00111111,D0
000002A2  4EB8 0066                352      JSR         EADecoder
000002A6                           353      
000002A6  6000 0300                354      BRA         opdec_return
000002AA                           355      
000002AA                           356  MATCH_ADDI_L
000002AA                           357      ** Move command size into D1
000002AA  123C 0004                358      MOVE.B      #4,D1
000002AE                           359      ** Print command
000002AE  103C 000E                360      MOVE.B      #14,D0
000002B2  43F8 0184                361      LEA         pr_ADDI,A1
000002B6  4E4F                     362      TRAP        #15
000002B8                           363      ** Print size
000002B8  43F9 00000570            364      LEA         pr_LONG,A1
000002BE  4E4F                     365      TRAP        #15
000002C0                           366      ** Print space
000002C0  43F9 00000566            367      LEA         pr_space,A1
000002C6  4E4F                     368      TRAP        #15
000002C8                           369      ** Print Immediate data
000002C8  103C 003C                370      MOVE.B      #%00111100,D0
000002CC  4EB8 0066                371      JSR         EADecoder
000002D0                           372      ** Add comma
000002D0  103C 000E                373      MOVE.B      #14,D0
000002D4  43F9 00000568            374      LEA         pr_comma,A1
000002DA  4E4F                     375      TRAP        #15
000002DC                           376      ** Decode right side ea
000002DC  1002                     377      MOVE.B      D2,D0
000002DE  0200 003F                378      ANDI.B      #%00111111,D0
000002E2  4EB8 0066                379      JSR         EADecoder
000002E6                           380      
000002E6  6000 02C0                381      BRA         opdec_return
000002EA                           382      
000002EA                           383  MATCH_ADD_TO_REG_B
000002EA                           384      ** Move command size into D1
000002EA  123C 0002                385      MOVE.B      #2,D1
000002EE                           386      ** Print command
000002EE  103C 000E                387      MOVE.B      #14,D0
000002F2  43F8 0180                388      LEA         pr_ADD,A1
000002F6  4E4F                     389      TRAP        #15
000002F8                           390      ** Print size
000002F8  43F9 0000056A            391      LEA         pr_BYTE,A1
000002FE  4E4F                     392      TRAP        #15
00000300                           393      ** Print space
00000300  43F9 00000566            394      LEA         pr_space,A1
00000306  4E4F                     395      TRAP        #15
00000308                           396      ** Print source
00000308  1002                     397      MOVE.B      D2,D0
0000030A  0200 003F                398      ANDI.B      #%00111111,D0
0000030E  4EB8 0066                399      JSR         EADecoder
00000312                           400      ** Add comma
00000312  103C 000E                401      MOVE.B      #14,D0
00000316  43F9 00000568            402      LEA         pr_comma,A1
0000031C  4E4F                     403      TRAP        #15
0000031E                           404      ** Print destination
0000031E  3002                     405      MOVE.W      D2,D0
00000320  0240 0E00                406      ANDI.W      #%0000111000000000,D0
00000324  EC48                     407      LSR.W       #6,D0
00000326  4EB8 004E                408      JSR         EADecoder_left
0000032A                           409      
0000032A  6000 027C                410      BRA         opdec_return
0000032E                           411      
0000032E                           412  MATCH_ADD_TO_REG_W
0000032E                           413      ** Move command size into D1
0000032E  123C 0002                414      MOVE.B      #2,D1
00000332                           415      ** Print command
00000332  103C 000E                416      MOVE.B      #14,D0
00000336  43F8 0180                417      LEA         pr_ADD,A1
0000033A  4E4F                     418      TRAP        #15
0000033C                           419      ** Print size
0000033C  43F9 0000056D            420      LEA         pr_WORD,A1
00000342  4E4F                     421      TRAP        #15
00000344                           422      ** Print space
00000344  43F9 00000566            423      LEA         pr_space,A1
0000034A  4E4F                     424      TRAP        #15
0000034C                           425      ** Print source
0000034C  1002                     426      MOVE.B      D2,D0
0000034E  0200 003F                427      ANDI.B      #%00111111,D0
00000352  4EB8 0066                428      JSR         EADecoder
00000356                           429      ** Add comma
00000356  103C 000E                430      MOVE.B      #14,D0
0000035A  43F9 00000568            431      LEA         pr_comma,A1
00000360  4E4F                     432      TRAP        #15
00000362                           433      ** Print destination
00000362  3002                     434      MOVE.W      D2,D0
00000364  0240 0E00                435      ANDI.W      #%0000111000000000,D0
00000368  EC48                     436      LSR.W       #6,D0
0000036A  4EB8 004E                437      JSR         EADecoder_left
0000036E                           438      
0000036E  6000 0238                439      BRA         opdec_return
00000372                           440      
00000372                           441  MATCH_ADD_TO_REG_L
00000372                           442      ** Move command size into D1
00000372  123C 0004                443      MOVE.B      #4,D1
00000376                           444      ** Print command
00000376  103C 000E                445      MOVE.B      #14,D0
0000037A  43F8 0180                446      LEA         pr_ADD,A1
0000037E  4E4F                     447      TRAP        #15
00000380                           448      ** Print size
00000380  43F9 00000570            449      LEA         pr_LONG,A1
00000386  4E4F                     450      TRAP        #15
00000388                           451      ** Print space
00000388  43F9 00000566            452      LEA         pr_space,A1
0000038E  4E4F                     453      TRAP        #15
00000390                           454      ** Print source
00000390  1002                     455      MOVE.B      D2,D0
00000392  0200 003F                456      ANDI.B      #%00111111,D0
00000396  4EB8 0066                457      JSR         EADecoder
0000039A                           458      ** Add comma
0000039A  103C 000E                459      MOVE.B      #14,D0
0000039E  43F9 00000568            460      LEA         pr_comma,A1
000003A4  4E4F                     461      TRAP        #15
000003A6                           462      ** Print destination
000003A6  3002                     463      MOVE.W      D2,D0
000003A8  0240 0E00                464      ANDI.W      #%0000111000000000,D0
000003AC  EC48                     465      LSR.W       #6,D0
000003AE  4EB8 004E                466      JSR         EADecoder_left
000003B2                           467      
000003B2  6000 01F4                468      BRA         opdec_return
000003B6                           469      
000003B6                           470  MATCH_ADD_TO_EA_B
000003B6                           471      ** Move command size into D1
000003B6  123C 0002                472      MOVE.B      #2,D1
000003BA                           473      ** Print command
000003BA  103C 000E                474      MOVE.B      #14,D0
000003BE  43F8 0180                475      LEA         pr_ADD,A1
000003C2  4E4F                     476      TRAP        #15
000003C4                           477      ** Print size
000003C4  43F9 0000056A            478      LEA         pr_BYTE,A1
000003CA  4E4F                     479      TRAP        #15
000003CC                           480      ** Print space
000003CC  43F9 00000566            481      LEA         pr_space,A1
000003D2  4E4F                     482      TRAP        #15
000003D4                           483      ** Print Source
000003D4  3002                     484      MOVE.W      D2,D0
000003D6  0240 0E00                485      ANDI.W      #%0000111000000000,D0
000003DA  EC48                     486      LSR.W       #6,D0
000003DC  4EB8 004E                487      JSR         EADecoder_left
000003E0                           488      ** Add comma
000003E0  103C 000E                489      MOVE.B      #14,D0
000003E4  43F9 00000568            490      LEA         pr_comma,A1
000003EA  4E4F                     491      TRAP        #15
000003EC                           492      ** Print source
000003EC  1002                     493      MOVE.B      D2,D0
000003EE  0200 003F                494      ANDI.B      #%00111111,D0
000003F2  4EB8 0066                495      JSR         EADecoder
000003F6                           496      
000003F6  6000 01B0                497      BRA         opdec_return
000003FA                           498      
000003FA                           499  MATCH_ADD_TO_EA_W
000003FA                           500      ** Move command size into D1
000003FA  123C 0002                501      MOVE.B      #2,D1
000003FE                           502      ** Print command
000003FE  103C 000E                503      MOVE.B      #14,D0
00000402  43F8 0180                504      LEA         pr_ADD,A1
00000406  4E4F                     505      TRAP        #15
00000408                           506      ** Print size
00000408  43F9 0000056D            507      LEA         pr_WORD,A1
0000040E  4E4F                     508      TRAP        #15
00000410                           509      ** Print space
00000410  43F9 00000566            510      LEA         pr_space,A1
00000416  4E4F                     511      TRAP        #15
00000418                           512      ** Print Source
00000418  3002                     513      MOVE.W      D2,D0
0000041A  0240 0E00                514      ANDI.W      #%0000111000000000,D0
0000041E  EC48                     515      LSR.W       #6,D0
00000420  4EB8 004E                516      JSR         EADecoder_left
00000424                           517      ** Add comma
00000424  103C 000E                518      MOVE.B      #14,D0
00000428  43F9 00000568            519      LEA         pr_comma,A1
0000042E  4E4F                     520      TRAP        #15
00000430                           521      ** Print source
00000430  1002                     522      MOVE.B      D2,D0
00000432  0200 003F                523      ANDI.B      #%00111111,D0
00000436  4EB8 0066                524      JSR         EADecoder
0000043A                           525      
0000043A  6000 016C                526      BRA         opdec_return
0000043E                           527      
0000043E                           528  MATCH_ADD_TO_EA_L 
0000043E                           529      ** Move command size into D1
0000043E  123C 0004                530      MOVE.B      #4,D1
00000442                           531      ** Print command
00000442  103C 000E                532      MOVE.B      #14,D0
00000446  43F8 0180                533      LEA         pr_ADD,A1
0000044A  4E4F                     534      TRAP        #15
0000044C                           535      ** Print size
0000044C  43F9 00000570            536      LEA         pr_LONG,A1
00000452  4E4F                     537      TRAP        #15
00000454                           538      ** Print space
00000454  43F9 00000566            539      LEA         pr_space,A1
0000045A  4E4F                     540      TRAP        #15
0000045C                           541      ** Print Source
0000045C  3002                     542      MOVE.W      D2,D0
0000045E  0240 0E00                543      ANDI.W      #%0000111000000000,D0
00000462  EC48                     544      LSR.W       #6,D0
00000464  4EB8 004E                545      JSR         EADecoder_left
00000468                           546      ** Add comma
00000468  103C 000E                547      MOVE.B      #14,D0
0000046C  43F9 00000568            548      LEA         pr_comma,A1
00000472  4E4F                     549      TRAP        #15
00000474                           550      ** Print source
00000474  1002                     551      MOVE.B      D2,D0
00000476  0200 003F                552      ANDI.B      #%00111111,D0
0000047A  4EB8 0066                553      JSR         EADecoder
0000047E                           554      
0000047E  6000 0128                555      BRA         opdec_return
00000482                           556      
00000482                           557  MATCH_ADDQ_B
00000482                           558      ** Move command size into D1
00000482  123C 0002                559      MOVE.B      #2,D1
00000486                           560      ** Print command
00000486  103C 000E                561      MOVE.B      #14,D0
0000048A  43F8 0189                562      LEA         pr_ADDQ,A1
0000048E  4E4F                     563      TRAP        #15
00000490                           564      ** Print size
00000490  43F9 0000056A            565      LEA         pr_BYTE,A1
00000496  4E4F                     566      TRAP        #15
00000498                           567      ** Print space
00000498  43F9 00000566            568      LEA         pr_space,A1
0000049E  4E4F                     569      TRAP        #15
000004A0                           570      ** Print Immediate data
000004A0  3602                     571      MOVE.W      D2,D3 * Temporarily move op data
000004A2  3202                     572      MOVE.W      D2,D1
000004A4  0241 0E00                573      ANDI.W      #%0000111000000000,D1
000004A8  143C 0010                574      MOVE.B      #16,D2
000004AC  303C 000F                575      MOVE.W      #15,D0
000004B0  4E4F                     576      TRAP        #15
000004B2                           577      
000004B2  3403                     578      MOVE.W      D3,D2 * Move op data back
000004B4                           579      
000004B4                           580      ** Add comma
000004B4  103C 000E                581      MOVE.B      #14,D0
000004B8  43F9 00000568            582      LEA         pr_comma,A1
000004BE  4E4F                     583      TRAP        #15
000004C0                           584      ** Decode right side ea
000004C0  1002                     585      MOVE.B      D2,D0
000004C2  0200 003F                586      ANDI.B      #%00111111,D0
000004C6  4EB8 0066                587      JSR         EADecoder
000004CA                           588      
000004CA  6000 00DC                589      BRA         opdec_return
000004CE                           590      
000004CE                           591  MATCH_ADDQ_W
000004CE                           592      ** Move command size into D1
000004CE  123C 0002                593      MOVE.B      #2,D1
000004D2                           594      ** Print command
000004D2  103C 000E                595      MOVE.B      #14,D0
000004D6  43F8 0189                596      LEA         pr_ADDQ,A1
000004DA  4E4F                     597      TRAP        #15
000004DC                           598      ** Print size
000004DC  43F9 0000056D            599      LEA         pr_WORD,A1
000004E2  4E4F                     600      TRAP        #15
000004E4                           601      ** Print space
000004E4  43F9 00000566            602      LEA         pr_space,A1
000004EA  4E4F                     603      TRAP        #15
000004EC                           604      ** Print Immediate data
000004EC  3602                     605      MOVE.W      D2,D3 * Temporarily move op data
000004EE  3202                     606      MOVE.W      D2,D1
000004F0  0241 0E00                607      ANDI.W      #%0000111000000000,D1
000004F4  143C 0010                608      MOVE.B      #16,D2
000004F8  303C 000F                609      MOVE.W      #15,D0
000004FC  4E4F                     610      TRAP        #15
000004FE                           611      
000004FE  3403                     612      MOVE.W      D3,D2 * Move op data back
00000500                           613      
00000500                           614      ** Add comma
00000500  103C 000E                615      MOVE.B      #14,D0
00000504  43F9 00000568            616      LEA         pr_comma,A1
0000050A  4E4F                     617      TRAP        #15
0000050C                           618      ** Decode right side ea
0000050C  1002                     619      MOVE.B      D2,D0
0000050E  0200 003F                620      ANDI.B      #%00111111,D0
00000512  4EB8 0066                621      JSR         EADecoder
00000516                           622      
00000516  6000 0090                623      BRA         opdec_return
0000051A                           624      
0000051A                           625  MATCH_ADDQ_L
0000051A                           626      ** Move command size into D1
0000051A  123C 0004                627      MOVE.B      #4,D1
0000051E                           628      ** Print command
0000051E  103C 000E                629      MOVE.B      #14,D0
00000522  43F8 0189                630      LEA         pr_ADDQ,A1
00000526  4E4F                     631      TRAP        #15
00000528                           632      ** Print size
00000528  43F9 00000570            633      LEA         pr_LONG,A1
0000052E  4E4F                     634      TRAP        #15
00000530                           635      ** Print space
00000530  43F9 00000566            636      LEA         pr_space,A1
00000536  4E4F                     637      TRAP        #15
00000538                           638      ** Print Immediate data
00000538  3602                     639      MOVE.W      D2,D3 * Temporarily move op data
0000053A  3202                     640      MOVE.W      D2,D1
0000053C  0241 0E00                641      ANDI.W      #%0000111000000000,D1
00000540  143C 0010                642      MOVE.B      #16,D2
00000544  303C 000F                643      MOVE.W      #15,D0
00000548  4E4F                     644      TRAP        #15
0000054A                           645      
0000054A  3403                     646      MOVE.W      D3,D2 * Move op data back
0000054C                           647      
0000054C                           648      ** Add comma
0000054C  103C 000E                649      MOVE.B      #14,D0
00000550  43F9 00000568            650      LEA         pr_comma,A1
00000556  4E4F                     651      TRAP        #15
00000558                           652      ** Decode right side ea
00000558  1002                     653      MOVE.B      D2,D0
0000055A  0200 003F                654      ANDI.B      #%00111111,D0
0000055E  4EB8 0066                655      JSR         EADecoder
00000562                           656      
00000562  6000 0044                657      BRA         opdec_return
00000566                           658  
00000566                           659  
00000566                           660  -------------------- end include --------------------
00000566                           661                  *INCLUDE 'spencer_opcodes.x68'
00000566                           662                  *INCLUDE 'arsany_opcodes.x68'
00000566                           663  
00000566  =00004E71                664  NOP             EQU $4E71
00000566  =00000001                665  MOVE_B          EQU %0001
00000566  =00000003                666  MOVE_W          EQU %0011
00000566  =00000002                667  MOVE_L          EQU %0010
00000566  =00000001                668  MOVEA_WL        EQU %001 
00000566  =00000007                669  MOVEQ_          EQU %0111
00000566  =00000122                670  MOVEM_TO_MEM_W  EQU %0100100010
00000566  =00000123                671  MOVEM_TO_MEM_L  EQU %0100100011
00000566  =00000132                672  MOVEM_TO_REG_W  EQU %0100110010
00000566  =00000133                673  MOVEM_TO_REG_L  EQU %0100110011
00000566                           674  
00000566  =00000018                675  ADDI_B          EQU %0000011000
00000566  =00000019                676  ADDI_W          EQU %0000011001
00000566  =0000001A                677  ADDI_L          EQU %0000011010
00000566                           678  
00000566  =0000000D                679  ADD_ADDA        EQU %1101
00000566  =00000000                680  ADD_TO_REG_B    EQU %000
00000566  =00000001                681  ADD_TO_REG_W    EQU %001
00000566  =00000002                682  ADD_TO_REG_L    EQU %010
00000566  =00000004                683  ADD_TO_EA_B     EQU %100
00000566  =00000005                684  ADD_TO_EA_W     EQU %101
00000566  =00000006                685  ADD_TO_EA_L     EQU %110
00000566  =00000003                686  ADDA_W          EQU %011
00000566  =00000007                687  ADDA_L          EQU %111
00000566                           688  
00000566  =00000005                689  ADDQ            EQU %0101
00000566  =00000000                690  ADDQ_B          EQU %000
00000566  =00000001                691  ADDQ_W          EQU %001
00000566  =00000002                692  ADDQ_L          EQU %010
00000566                           693  
00000566  =0000000C                694  MULS_W_AND      EQU %1100
00000566  =00000007                695  MULS_OP_W       EQU %111 
00000566                           696  
00000566  =00000009                697  SUB             EQU %1001
00000566  =00000000                698  SUB_TO_DN_B     EQU %000
00000566  =00000001                699  SUB_TO_DN_W     EQU %001
00000566  =00000002                700  SUB_TO_DN_L     EQU %010
00000566  =00000004                701  SUB_TO_EA_B     EQU %100
00000566  =00000005                702  SUB_TO_EA_W     EQU %101
00000566  =00000006                703  SUB_TO_EA_L     EQU %110
00000566                           704  
00000566  =00000008                705  DIVU_OR         EQU %1000
00000566  =00000003                706  DIVU            EQU %011
00000566                           707  
00000566  =00000000                708  DN_B            EQU %000
00000566  =00000001                709  DN_W            EQU %001
00000566  =00000002                710  DN_L            EQU %010
00000566  =00000004                711  EA_B            EQU %100
00000566  =00000005                712  EA_W            EQU %101
00000566  =00000006                713  EA_L            EQU %110
00000566                           714  
00000566  =00000004                715  MULS_LEA_CLR_JSR_RTS    EQU %0100
00000566  =00004E75                716  RTS             EQU $4E75
00000566  =00000007                717  LEA             EQU %111
00000566  =0000013A                718  JSR             EQU %0100111010
00000566  =00000108                719  CLR_B           EQU %0100001000
00000566  =00000109                720  CLR_W           EQU %0100001001
00000566  =0000010A                721  CLR_L           EQU %0100001010
00000566  =00000130                722  MULS_L          EQU %0100110000
00000566                           723  
00000566  =0000038F                724  LSL             EQU %1110001111
00000566  =0000038B                725  LSR             EQU %1110001011
00000566  =00000387                726  ASR             EQU %1110000111
00000566  =00000383                727  ASL             EQU %1110000011
00000566  =0000039F                728  ROL             EQU %1110011111
00000566  =0000039B                729  ROR             EQU %1110011011
00000566                           730  
00000566  =0000000B                731  CMP             EQU %1011
00000566  =00000000                732  CMP_B           EQU %000
00000566  =00000001                733  CMP_W           EQU %001
00000566  =00000002                734  CMP_L           EQU %010
00000566                           735  
00000566  =00000006                736  BCC             EQU %0110
00000566  =00000000                737  BCC_16          EQU %00000000
00000566  =000000FF                738  BCC_32          EQU $FF
00000566  =00000000                739  CC_T                EQU %0000
00000566  =00000001                740  CC_F                EQU %0001
00000566  =00000002                741  CC_HI           EQU %0010
00000566  =00000003                742  CC_LS           EQU %0011
00000566  =00000004                743  CC_CC           EQU %0100
00000566  =00000005                744  CC_CS           EQU %0101
00000566  =00000006                745  CC_NE           EQU %0110
00000566  =00000007                746  CC_EQ           EQU %0111
00000566  =00000008                747  CC_VC           EQU %1000
00000566  =00000009                748  CC_VS           EQU %1001
00000566  =0000000A                749  CC_PL           EQU %1010
00000566  =0000000B                750  CC_MI           EQU %1011
00000566  =0000000C                751  CC_GE           EQU %1100
00000566  =0000000D                752  CC_LT           EQU %1101
00000566  =0000000E                753  CC_GT           EQU %1110
00000566  =0000000F                754  CC_LE           EQU %1111
00000566                           755  
00000566= 20 00                    756  pr_space    DC.B    ' ',0
00000568= 2C 00                    757  pr_comma    DC.B    ',',0
0000056A= 2E 42 00                 758  pr_BYTE     DC.B    '.B',0
0000056D= 2E 57 00                 759  pr_WORD     DC.B    '.W',0
00000570= 2E 4C 00                 760  pr_LONG     DC.B    '.L',0
00000573                           761  
00000573= 4E 4F 50 00              762  pr_NOP      DC.B    'NOP',0
00000577= 4D 4F 56 45 00           763  pr_MOVE     DC.B    'MOVE',0
0000057C= 4D 4F 56 45 41 00        764  pr_MOVEA    DC.B    'MOVEA',0
00000582= 4D 4F 56 45 51 00        765  pr_MOVEQ    DC.B    'MOVEQ',0
00000588= 4D 4F 56 45 4D 00        766  pr_MOVEM    DC.B    'MOVEM',0
0000058E                           767  
0000058E                           768  
0000058E                           769  
0000058E                           770  
0000058E                           771  OpDecoder
0000058E  48E7 FF7E                772      MOVEM.L     D0-D7/A1-A6, -(SP)
00000592  4241                     773      CLR         D1
00000594  6000 0078                774      BRA         CHECK_NOP
00000598                           775  NOP_RETURN
00000598  6000 0082                776      BRA         CHECK_FOUR_BIT_SIG
0000059C                           777  FOUR_BIT_RETURN
0000059C  6000 0434                778      BRA         CHECK_MOVEM
000005A0                           779  MOVEM_RETURN
000005A0  6000 04D8                780      BRA         CHECK_ADDI
000005A4                           781  ADDI_RETURN
000005A4  6000 0028                782      BRA         CHECK_SHIFT_AND_ROTATE
000005A8                           783      
000005A8                           784  opdec_return
000005A8  4CDF 7EFF                785      MOVEM.L     (SP)+, D0-D7/A1-A6
000005AC  4E75                     786      RTS
000005AE                           787  
000005AE                           788  ReadFirstFourBits
000005AE                           789  
000005AE  48A7 2000                790      MOVEM.W     D2, -(SP)
000005B2                           791  
000005B2  1E3C 000C                792      MOVE.B      #12,D7 
000005B6  EE6A                     793      LSR.W       D7,D2 
000005B8  1602                     794      MOVE.B      D2,D3
000005BA                           795      
000005BA  4C9F 0004                796      MOVEM.W     (SP)+,D2
000005BE  4E75                     797      RTS
000005C0                           798      
000005C0                           799  ReadFirstTenBits
000005C0                           800      
000005C0  48A7 2000                801      MOVEM.W     D2, -(SP)
000005C4                           802   
000005C4  EC4A                     803      LSR.W       #6,D2 
000005C6  3602                     804      MOVE.W      D2,D3
000005C8                           805      
000005C8  4C9F 0004                806      MOVEM.W     (SP)+,D2
000005CC  4E75                     807      RTS
000005CE                           808  CHECK_SHIFT_AND_ROTATE
000005CE                           809  
000005CE  61F0                     810      BSR         ReadFirstTenBits
000005D0                           811      
000005D0  3C3C 038F                812      MOVE.W      #LSL,D6
000005D4  BC43                     813      CMP.W       D3,D6
000005D6  6700 058C                814      BEQ         MATCH_LSL
000005DA                           815      
000005DA  3C3C 038B                816      MOVE.W      #LSR,D6
000005DE  BC43                     817      CMP.W       D3,D6
000005E0  6700 0584                818      BEQ         MATCH_LSR
000005E4                           819      
000005E4  3C3C 0387                820      MOVE.W      #ASR,D6
000005E8  BC43                     821      CMP.W       D3,D6
000005EA  6700 057C                822      BEQ         MATCH_ASR
000005EE                           823      
000005EE  3C3C 0383                824      MOVE.W      #ASL,D6
000005F2  BC43                     825      CMP.W       D3,D6
000005F4  6700 0574                826      BEQ         MATCH_ASL
000005F8                           827      
000005F8  3C3C 039F                828      MOVE.W      #ROL,D6
000005FC  BC43                     829      CMP.W       D3,D6
000005FE  6700 056C                830      BEQ         MATCH_ROL
00000602                           831      
00000602  3C3C 039B                832      MOVE.W      #ROR,D6
00000606  BC43                     833      CMP.W       D3,D6
00000608  6700 0564                834      BEQ         MATCH_ROR
0000060C                           835      
0000060C  609A                     836      BRA         opdec_return
0000060E                           837      
0000060E                           838  CHECK_NOP
0000060E                           839      
0000060E  3C3C 4E71                840      MOVE.W      #NOP,D6
00000612  BC42                     841      CMP.W       D2,D6
00000614  6700 FB78                842      BEQ         MATCH_NOP
00000618                           843      
00000618  6000 FF7E                844      BRA         NOP_RETURN
0000061C                           845  
0000061C                           846  CHECK_FOUR_BIT_SIG
0000061C                           847  
0000061C  6190                     848      BSR         ReadFirstFourBits
0000061E                           849      
0000061E  1C3C 0001                850      MOVE.B      #MOVE_B,D6
00000622  BC03                     851      CMP.B       D3,D6
00000624  6700 FB78                852      BEQ         MATCH_MOVE_B
00000628                           853  
00000628  1C3C 0003                854      MOVE.B      #MOVE_W,D6
0000062C  BC03                     855      CMP.B       D3,D6
0000062E  6700 04B0                856      BEQ         CHECK_MOVEA_W_AND_MOVE_W
00000632                           857      
00000632  1C3C 0002                858      MOVE.B      #MOVE_L,D6
00000636  BC03                     859      CMP.B       D3,D6
00000638  6700 04D0                860      BEQ         CHECK_MOVEA_L_AND_MOVE_L
0000063C                           861   
0000063C  1C3C 0007                862      MOVE.B      #MOVEQ_,D6
00000640  BC03                     863      CMP.B       D3,D6
00000642  6700 04DC                864      BEQ         MATCH_MOVEQ
00000646                           865      
00000646  1C3C 000D                866      MOVE.B      #ADD_ADDA,D6
0000064A  BC03                     867      CMP.B       D3,D6
0000064C  6700 03B4                868      BEQ         CHECK_ADD_ADDA
00000650                           869      
00000650  1C3C 0005                870      MOVE.B      #ADDQ,D6
00000654  BC03                     871      CMP.B       D3,D6
00000656  6700 0400                872      BEQ         CHECK_ADDQ
0000065A                           873      
0000065A  1C3C 0009                874      MOVE.B      #SUB,D6
0000065E  BC03                     875      CMP.B       D3,D6
00000660  6700 043E                876      BEQ         CHECK_SUB
00000664                           877      
00000664  1C3C 0008                878      MOVE.B      #DIVU_OR,D6
00000668  BC03                     879      CMP.B       D3,D6
0000066A  6700 0318                880      BEQ         CHECK_DIVU_OR
0000066E                           881      
0000066E  1C3C 000C                882      MOVE.B      #MULS_W_AND,D6
00000672  BC03                     883      CMP.B       D3,D6
00000674  6700 02C0                884      BEQ         CHECK_MULS_W_AND
00000678                           885      
00000678  1C3C 0004                886      MOVE.B      #MULS_LEA_CLR_JSR_RTS,D6
0000067C  BC03                     887      CMP.B       D3,D6
0000067E  6700 0264                888      BEQ         CHECK_MULS_LEA_CLR_JSR_RTS
00000682                           889      
00000682  1C3C 000B                890      MOVE.B      #CMP,D6
00000686  BC03                     891      CMP.B       D3,D6
00000688  6700 0234                892      BEQ         CHECK_CMP
0000068C                           893      
0000068C  1C3C 0006                894      MOVE.B      #BCC,D6
00000690  BC03                     895      CMP.B       D3,D6
00000692  6700 0006                896      BEQ         CHECK_BCC
00000696                           897      
00000696  6000 FF04                898      BRA         FOUR_BIT_RETURN
0000069A                           899  CHECK_BCC
0000069A                           900      
0000069A  1C3C 0000                901      MOVE.B      #BCC_16,D6
0000069E  BC02                     902      CMP.B       D2,D6
000006A0  6700 00B8                903      BEQ         CHECK_BCC_16
000006A4                           904      
000006A4  1C3C 00FF                905      MOVE.B      #BCC_32,D6
000006A8  BC02                     906      CMP.B       D2,D6
000006AA  6700 0156                907      BEQ         CHECK_BCC_32
000006AE                           908      
000006AE  6000 0002                909      BRA         CHECK_BCC_8
000006B2                           910      
000006B2                           911  CHECK_BCC_8
000006B2                           912      
000006B2  6100 01F6                913      BSR         ISOLATE_CC_CODE_FOR_BCC
000006B6                           914      
000006B6  1C3C 0000                915      MOVE.B      #CC_T,D6
000006BA  BC03                     916      CMP.B       D3,D6
000006BC  6700 04B8                917      BEQ         MATCH_CC_T_8
000006C0                           918      
000006C0  1C3C 0001                919      MOVE.B      #CC_F,D6
000006C4  BC03                     920      CMP.B       D3,D6
000006C6  6700 04B4                921      BEQ         MATCH_CC_F_8
000006CA                           922      
000006CA  1C3C 0002                923      MOVE.B      #CC_HI,D6
000006CE  BC03                     924      CMP.B       D3,D6
000006D0  6700 04B0                925      BEQ         MATCH_CC_HI_8
000006D4                           926      
000006D4  1C3C 0003                927      MOVE.B      #CC_LS,D6
000006D8  BC03                     928      CMP.B       D3,D6
000006DA  6700 04AC                929      BEQ         MATCH_CC_LS_8
000006DE                           930      
000006DE  1C3C 0004                931      MOVE.B      #CC_CC,D6
000006E2  BC03                     932      CMP.B       D3,D6
000006E4  6700 04A8                933      BEQ         MATCH_CC_CC_8
000006E8                           934      
000006E8  1C3C 0005                935      MOVE.B      #CC_CS,D6
000006EC  BC03                     936      CMP.B       D3,D6
000006EE  6700 04A4                937      BEQ         MATCH_CC_CS_8
000006F2                           938      
000006F2  1C3C 0006                939      MOVE.B      #CC_NE,D6
000006F6  BC03                     940      CMP.B       D3,D6
000006F8  6700 04A0                941      BEQ         MATCH_CC_NE_8
000006FC                           942      
000006FC  1C3C 0007                943      MOVE.B      #CC_EQ,D6
00000700  BC03                     944      CMP.B       D3,D6
00000702  6700 049C                945      BEQ         MATCH_CC_EQ_8
00000706                           946      
00000706  1C3C 0008                947      MOVE.B      #CC_VC,D6
0000070A  BC03                     948      CMP.B       D3,D6
0000070C  6700 0498                949      BEQ         MATCH_CC_VC_8
00000710                           950      
00000710  1C3C 0009                951      MOVE.B      #CC_VS,D6
00000714  BC03                     952      CMP.B       D3,D6
00000716  6700 0494                953      BEQ         MATCH_CC_VS_8
0000071A                           954      
0000071A  1C3C 000A                955      MOVE.B      #CC_PL,D6
0000071E  BC03                     956      CMP.B       D3,D6
00000720  6700 0490                957      BEQ         MATCH_CC_PL_8
00000724                           958      
00000724  1C3C 000B                959      MOVE.B      #CC_MI,D6
00000728  BC03                     960      CMP.B       D3,D6
0000072A  6700 048C                961      BEQ         MATCH_CC_MI_8
0000072E                           962      
0000072E  1C3C 000C                963      MOVE.B      #CC_GE,D6
00000732  BC03                     964      CMP.B       D3,D6
00000734  6700 0488                965      BEQ         MATCH_CC_GE_8
00000738                           966      
00000738  1C3C 000D                967      MOVE.B      #CC_LT,D6
0000073C  BC03                     968      CMP.B       D3,D6
0000073E  6700 0484                969      BEQ         MATCH_CC_LT_8
00000742                           970      
00000742  1C3C 000E                971      MOVE.B      #CC_GT,D6
00000746  BC03                     972      CMP.B       D3,D6
00000748  6700 0480                973      BEQ         MATCH_CC_GT_8
0000074C                           974      
0000074C  1C3C 000F                975      MOVE.B      #CC_LE,D6
00000750  BC03                     976      CMP.B       D3,D6
00000752  6700 047C                977      BEQ         MATCH_CC_LE_8
00000756                           978  
00000756  6000 047E                979      BRA         ERROR
0000075A                           980      
0000075A                           981  CHECK_BCC_16
0000075A                           982  
0000075A  6100 014E                983      BSR         ISOLATE_CC_CODE_FOR_BCC
0000075E                           984      
0000075E  1C3C 0000                985      MOVE.B      #CC_T,D6
00000762  BC03                     986      CMP.B       D3,D6
00000764  6700 0412                987      BEQ         MATCH_CC_T_16
00000768                           988      
00000768  1C3C 0001                989      MOVE.B      #CC_F,D6
0000076C  BC03                     990      CMP.B       D3,D6
0000076E  6700 040E                991      BEQ         MATCH_CC_F_16
00000772                           992      
00000772  1C3C 0002                993      MOVE.B      #CC_HI,D6
00000776  BC03                     994      CMP.B       D3,D6
00000778  6700 040A                995      BEQ         MATCH_CC_HI_16
0000077C                           996      
0000077C  1C3C 0003                997      MOVE.B      #CC_LS,D6
00000780  BC03                     998      CMP.B       D3,D6
00000782  6700 0406                999      BEQ         MATCH_CC_LS_16
00000786                          1000      
00000786  1C3C 0004               1001      MOVE.B      #CC_CC,D6
0000078A  BC03                    1002      CMP.B       D3,D6
0000078C  6700 0402               1003      BEQ         MATCH_CC_CC_16
00000790                          1004      
00000790  1C3C 0005               1005      MOVE.B      #CC_CS,D6
00000794  BC03                    1006      CMP.B       D3,D6
00000796  6700 03FE               1007      BEQ         MATCH_CC_CS_16
0000079A                          1008      
0000079A  1C3C 0006               1009      MOVE.B      #CC_NE,D6
0000079E  BC03                    1010      CMP.B       D3,D6
000007A0  6700 03FA               1011      BEQ         MATCH_CC_NE_16
000007A4                          1012      
000007A4  1C3C 0007               1013      MOVE.B      #CC_EQ,D6
000007A8  BC03                    1014      CMP.B       D3,D6
000007AA  6700 03F6               1015      BEQ         MATCH_CC_EQ_16
000007AE                          1016      
000007AE  1C3C 0008               1017      MOVE.B      #CC_VC,D6
000007B2  BC03                    1018      CMP.B       D3,D6
000007B4  6700 03F2               1019      BEQ         MATCH_CC_VC_16
000007B8                          1020      
000007B8  1C3C 0009               1021      MOVE.B      #CC_VS,D6
000007BC  BC03                    1022      CMP.B       D3,D6
000007BE  6700 03EE               1023      BEQ         MATCH_CC_VS_16
000007C2                          1024      
000007C2  1C3C 000A               1025      MOVE.B      #CC_PL,D6
000007C6  BC03                    1026      CMP.B       D3,D6
000007C8  6700 03EA               1027      BEQ         MATCH_CC_PL_16
000007CC                          1028      
000007CC  1C3C 000B               1029      MOVE.B      #CC_MI,D6
000007D0  BC03                    1030      CMP.B       D3,D6
000007D2  6700 03E6               1031      BEQ         MATCH_CC_MI_16
000007D6                          1032      
000007D6  1C3C 000C               1033      MOVE.B      #CC_GE,D6
000007DA  BC03                    1034      CMP.B       D3,D6
000007DC  6700 03E2               1035      BEQ         MATCH_CC_GE_16
000007E0                          1036      
000007E0  1C3C 000D               1037      MOVE.B      #CC_LT,D6
000007E4  BC03                    1038      CMP.B       D3,D6
000007E6  6700 03DE               1039      BEQ         MATCH_CC_LT_16
000007EA                          1040      
000007EA  1C3C 000E               1041      MOVE.B      #CC_GT,D6
000007EE  BC03                    1042      CMP.B       D3,D6
000007F0  6700 03DA               1043      BEQ         MATCH_CC_GT_16
000007F4                          1044      
000007F4  1C3C 000F               1045      MOVE.B      #CC_LE,D6
000007F8  BC03                    1046      CMP.B       D3,D6
000007FA  6700 03D6               1047      BEQ         MATCH_CC_LE_16
000007FE                          1048  
000007FE  6000 03D6               1049      BRA         ERROR
00000802                          1050  
00000802                          1051  
00000802                          1052  CHECK_BCC_32  
00000802                          1053  
00000802  6100 00A6               1054      BSR         ISOLATE_CC_CODE_FOR_BCC 
00000806                          1055      
00000806  1C3C 0000               1056      MOVE.B      #CC_T,D6
0000080A  BC03                    1057      CMP.B       D3,D6
0000080C  6700 036C               1058      BEQ         MATCH_CC_T_32
00000810                          1059      
00000810  1C3C 0001               1060      MOVE.B      #CC_F,D6
00000814  BC03                    1061      CMP.B       D3,D6
00000816  6700 0368               1062      BEQ         MATCH_CC_F_32
0000081A                          1063      
0000081A  1C3C 0002               1064      MOVE.B      #CC_HI,D6
0000081E  BC03                    1065      CMP.B       D3,D6
00000820  6700 0364               1066      BEQ         MATCH_CC_HI_32
00000824                          1067      
00000824  1C3C 0003               1068      MOVE.B      #CC_LS,D6
00000828  BC03                    1069      CMP.B       D3,D6
0000082A  6700 0360               1070      BEQ         MATCH_CC_LS_32
0000082E                          1071      
0000082E  1C3C 0004               1072      MOVE.B      #CC_CC,D6
00000832  BC03                    1073      CMP.B       D3,D6
00000834  6700 035C               1074      BEQ         MATCH_CC_CC_32
00000838                          1075      
00000838  1C3C 0005               1076      MOVE.B      #CC_CS,D6
0000083C  BC03                    1077      CMP.B       D3,D6
0000083E  6700 0358               1078      BEQ         MATCH_CC_CS_32
00000842                          1079      
00000842  1C3C 0006               1080      MOVE.B      #CC_NE,D6
00000846  BC03                    1081      CMP.B       D3,D6
00000848  6700 0354               1082      BEQ         MATCH_CC_NE_32
0000084C                          1083      
0000084C  1C3C 0007               1084      MOVE.B      #CC_EQ,D6
00000850  BC03                    1085      CMP.B       D3,D6
00000852  6700 0350               1086      BEQ         MATCH_CC_EQ_32
00000856                          1087      
00000856  1C3C 0008               1088      MOVE.B      #CC_VC,D6
0000085A  BC03                    1089      CMP.B       D3,D6
0000085C  6700 034C               1090      BEQ         MATCH_CC_VC_32
00000860                          1091      
00000860  1C3C 0009               1092      MOVE.B      #CC_VS,D6
00000864  BC03                    1093      CMP.B       D3,D6
00000866  6700 0348               1094      BEQ         MATCH_CC_VS_32
0000086A                          1095      
0000086A  1C3C 000A               1096      MOVE.B      #CC_PL,D6
0000086E  BC03                    1097      CMP.B       D3,D6
00000870  6700 0344               1098      BEQ         MATCH_CC_PL_32
00000874                          1099      
00000874  1C3C 000B               1100      MOVE.B      #CC_MI,D6
00000878  BC03                    1101      CMP.B       D3,D6
0000087A  6700 0340               1102      BEQ         MATCH_CC_MI_32
0000087E                          1103      
0000087E  1C3C 000C               1104      MOVE.B      #CC_GE,D6
00000882  BC03                    1105      CMP.B       D3,D6
00000884  6700 033C               1106      BEQ         MATCH_CC_GE_32
00000888                          1107      
00000888  1C3C 000D               1108      MOVE.B      #CC_LT,D6
0000088C  BC03                    1109      CMP.B       D3,D6
0000088E  6700 0338               1110      BEQ         MATCH_CC_LT_32
00000892                          1111      
00000892  1C3C 000E               1112      MOVE.B      #CC_GT,D6
00000896  BC03                    1113      CMP.B       D3,D6
00000898  6700 0334               1114      BEQ         MATCH_CC_GT_32
0000089C                          1115      
0000089C  1C3C 000F               1116      MOVE.B      #CC_LE,D6
000008A0  BC03                    1117      CMP.B       D3,D6
000008A2  6700 0330               1118      BEQ         MATCH_CC_LE_32
000008A6                          1119  
000008A6  6000 032E               1120      BRA         ERROR
000008AA                          1121   
000008AA                          1122  ISOLATE_CC_CODE_FOR_BCC
000008AA                          1123  
000008AA  48A7 2000               1124      MOVEM.W     D2, -(SP) 
000008AE                          1125      
000008AE  E94A                    1126      LSL.W       #4,D2
000008B0  1E3C 000C               1127      MOVE.B      #12,D7
000008B4  EE6A                    1128      LSR.W       D7,D2
000008B6                          1129      
000008B6  1602                    1130      MOVE.B      D2,D3      
000008B8                          1131  
000008B8  4C9F 0004               1132      MOVEM.W     (SP)+,D2 
000008BC  4E75                    1133      RTS
000008BE                          1134  CHECK_CMP
000008BE                          1135      
000008BE  6100 0232               1136      BSR         ISOLATE_OP_CODE
000008C2                          1137      
000008C2  1C3C 0000               1138      MOVE.B      #CMP_B,D6
000008C6  BC03                    1139      CMP.B       D3,D6
000008C8  6700 02A6               1140      BEQ         MATCH_CMP_B
000008CC                          1141      
000008CC  1C3C 0001               1142      MOVE.B      #CMP_W,D6
000008D0  BC03                    1143      CMP.B       D3,D6
000008D2  6700 029E               1144      BEQ         MATCH_CMP_W
000008D6                          1145      
000008D6  1C3C 0002               1146      MOVE.B      #CMP_L,D6
000008DA  BC03                    1147      CMP.B       D3,D6
000008DC  6700 0296               1148      BEQ         MATCH_CMP_L
000008E0                          1149      
000008E0  6000 02F4               1150      BRA         ERROR
000008E4                          1151  CHECK_MULS_LEA_CLR_JSR_RTS
000008E4                          1152  
000008E4  3C3C 4E75               1153      MOVE.W      #RTS,D6
000008E8  BC42                    1154      CMP.W       D2,D6
000008EA  6700 026A               1155      BEQ         MATCH_RTS
000008EE                          1156      
000008EE  6100 0202               1157      BSR         ISOLATE_OP_CODE
000008F2                          1158      
000008F2  1C3C 0007               1159      MOVE.B      #LEA,D6
000008F6  BC03                    1160      CMP.B       D3,D6
000008F8  6700 025E               1161      BEQ         MATCH_LEA
000008FC                          1162      
000008FC  6100 FCC2               1163      BSR         ReadFirstTenBits
00000900                          1164      
00000900  3C3C 013A               1165      MOVE.W      #JSR,D6
00000904  BC43                    1166      CMP.W       D3,D6
00000906  6700 0252               1167      BEQ         MATCH_JSR
0000090A                          1168      
0000090A  3C3C 0108               1169      MOVE.W      #CLR_B,D6
0000090E  BC43                    1170      CMP.W       D3,D6
00000910  6700 024A               1171      BEQ         MATCH_CLR_B
00000914                          1172      
00000914  3C3C 0109               1173      MOVE.W      #CLR_W,D6
00000918  BC43                    1174      CMP.W       D3,D6
0000091A  6700 0242               1175      BEQ         MATCH_CLR_W
0000091E                          1176      
0000091E  3C3C 010A               1177      MOVE.W      #CLR_L,D6
00000922  BC43                    1178      CMP.W       D3,D6
00000924  6700 023A               1179      BEQ         MATCH_CLR_L
00000928                          1180      
00000928  3C3C 0130               1181      MOVE.W      #MULS_L,D6  * Shouldn't need to check for the rest of the opcode..?
0000092C  BC43                    1182      CMP.W       D3,D6
0000092E  6700 0232               1183      BEQ         MATCH_MULS_L
00000932                          1184      
00000932  6000 02A2               1185      BRA         ERROR
00000936                          1186      
00000936                          1187  CHECK_MULS_W_AND
00000936                          1188  
00000936  6100 01BA               1189      BSR         ISOLATE_OP_CODE
0000093A                          1190      
0000093A  1C3C 0007               1191      MOVE.B      #MULS_OP_W,D6
0000093E  BC03                    1192      CMP.B       D3,D6
00000940  6700 0206               1193      BEQ         MATCH_MULS_W
00000944                          1194      
00000944  1C3C 0000               1195      MOVE.B      #DN_B,D6
00000948  BC03                    1196      CMP.B       D3,D6
0000094A  6700 01FE               1197      BEQ         MATCH_AND_DN_B
0000094E                          1198      
0000094E  1C3C 0001               1199      MOVE.B      #DN_W,D6
00000952  BC03                    1200      CMP.B       D3,D6
00000954  6700 01F6               1201      BEQ         MATCH_AND_DN_W
00000958                          1202      
00000958  1C3C 0002               1203      MOVE.B      #DN_L,D6
0000095C  BC03                    1204      CMP.B       D3,D6
0000095E  6700 01EE               1205      BEQ         MATCH_AND_DN_L
00000962                          1206      
00000962  1C3C 0004               1207      MOVE.B      #EA_B,D6
00000966  BC03                    1208      CMP.B       D3,D6
00000968  6700 01E6               1209      BEQ         MATCH_AND_EA_B
0000096C                          1210      
0000096C  1C3C 0005               1211      MOVE.B      #EA_W,D6
00000970  BC03                    1212      CMP.B       D3,D6
00000972  6700 01DE               1213      BEQ         MATCH_AND_EA_W
00000976                          1214      
00000976  1C3C 0006               1215      MOVE.B      #EA_L,D6
0000097A  BC03                    1216      CMP.B       D3,D6
0000097C  6700 01D6               1217      BEQ         MATCH_AND_EA_L
00000980                          1218      
00000980  6000 0254               1219      BRA         ERROR
00000984                          1220  
00000984                          1221  CHECK_DIVU_OR
00000984                          1222      
00000984  6100 016C               1223      BSR         ISOLATE_OP_CODE
00000988                          1224      
00000988  1C3C 0003               1225      MOVE.B      #DIVU,D6
0000098C  BC03                    1226      CMP.B       D3,D6
0000098E  6700 01AA               1227      BEQ         MATCH_DIVU
00000992                          1228      
00000992  1C3C 0000               1229      MOVE.B      #DN_B,D6
00000996  BC03                    1230      CMP.B       D3,D6
00000998  6700 01A2               1231      BEQ         MATCH_OR_DN_B
0000099C                          1232      
0000099C  1C3C 0001               1233      MOVE.B      #DN_W,D6
000009A0  BC03                    1234      CMP.B       D3,D6
000009A2  6700 019A               1235      BEQ         MATCH_OR_DN_W
000009A6                          1236      
000009A6  1C3C 0002               1237      MOVE.B      #DN_L,D6
000009AA  BC03                    1238      CMP.B       D3,D6
000009AC  6700 0192               1239      BEQ         MATCH_OR_DN_L
000009B0                          1240      
000009B0  1C3C 0004               1241      MOVE.B      #EA_B,D6
000009B4  BC03                    1242      CMP.B       D3,D6
000009B6  6700 018A               1243      BEQ         MATCH_OR_EA_B
000009BA                          1244      
000009BA  1C3C 0005               1245      MOVE.B      #EA_W,D6
000009BE  BC03                    1246      CMP.B       D3,D6
000009C0  6700 0182               1247      BEQ         MATCH_OR_EA_W
000009C4                          1248      
000009C4  1C3C 0006               1249      MOVE.B      #EA_L,D6
000009C8  BC03                    1250      CMP.B       D3,D6
000009CA  6700 017A               1251      BEQ         MATCH_OR_EA_L
000009CE                          1252      
000009CE  6000 0206               1253      BRA         ERROR
000009D2                          1254  
000009D2                          1255  CHECK_MOVEM
000009D2                          1256      
000009D2  6100 FBEC               1257      BSR         ReadFirstTenBits
000009D6                          1258      
000009D6  3C3C 0122               1259      MOVE.W      #MOVEM_TO_MEM_W,D6
000009DA  BC43                    1260      CMP.W       D3,D6
000009DC  6700 0144               1261      BEQ         MATCH_MOVEM_TO_MEM_W
000009E0                          1262      
000009E0  3C3C 0123               1263      MOVE.W      #MOVEM_TO_MEM_L,D6
000009E4  BC43                    1264      CMP.W       D3,D6
000009E6  6700 013C               1265      BEQ         MATCH_MOVEM_TO_MEM_L
000009EA                          1266      
000009EA  3C3C 0132               1267      MOVE.W      #MOVEM_TO_REG_W,D6
000009EE  BC43                    1268      CMP.W       D3,D6
000009F0  6700 0134               1269      BEQ         MATCH_MOVEM_TO_REG_W
000009F4                          1270      
000009F4  3C3C 0133               1271      MOVE.W      #MOVEM_TO_REG_L,D6
000009F8  BC43                    1272      CMP.W       D3,D6
000009FA  6700 012C               1273      BEQ         MATCH_MOVEM_TO_REG_L
000009FE                          1274      
000009FE  6000 FBA0               1275      BRA         MOVEM_RETURN
00000A02                          1276  CHECK_ADD_ADDA
00000A02                          1277      
00000A02  6100 00EE               1278      BSR         ISOLATE_OP_CODE
00000A06                          1279      
00000A06  3C3C 0000               1280      MOVE.W      #DN_B,D6
00000A0A  BC43                    1281      CMP.W       D3,D6
00000A0C  6700 F8DC               1282      BEQ         MATCH_ADD_TO_REG_B
00000A10                          1283      
00000A10  3C3C 0001               1284      MOVE.W      #DN_W,D6
00000A14  BC43                    1285      CMP.W       D3,D6
00000A16  6700 F916               1286      BEQ         MATCH_ADD_TO_REG_W
00000A1A                          1287      
00000A1A  3C3C 0002               1288      MOVE.W      #DN_L,D6
00000A1E  BC43                    1289      CMP.W       D3,D6
00000A20  6700 F950               1290      BEQ         MATCH_ADD_TO_REG_L
00000A24                          1291      
00000A24  3C3C 0004               1292      MOVE.W      #EA_B,D6
00000A28  BC43                    1293      CMP.W       D3,D6
00000A2A  6700 F98A               1294      BEQ         MATCH_ADD_TO_EA_B
00000A2E                          1295      
00000A2E  3C3C 0005               1296      MOVE.W      #EA_W,D6
00000A32  BC43                    1297      CMP.W       D3,D6
00000A34  6700 F9C4               1298      BEQ         MATCH_ADD_TO_EA_W
00000A38                          1299      
00000A38  3C3C 0006               1300      MOVE.W      #EA_L,D6
00000A3C  BC43                    1301      CMP.W       D3,D6
00000A3E  6700 F9FE               1302      BEQ         MATCH_ADD_TO_EA_L
00000A42                          1303      
00000A42  3C3C 0003               1304      MOVE.W      #ADDA_W,D6
00000A46  BC43                    1305      CMP.W       D3,D6
00000A48  6700 00E0               1306      BEQ         MATCH_ADDA_W
00000A4C                          1307      
00000A4C  3C3C 0007               1308      MOVE.W      #ADDA_L,D6
00000A50  BC43                    1309      CMP.W       D3,D6
00000A52  6700 00D8               1310      BEQ         MATCH_ADDA_L
00000A56                          1311      
00000A56  4E75                    1312      RTS ** Change later?
00000A58                          1313  CHECK_ADDQ
00000A58                          1314      
00000A58  6100 0098               1315      BSR         ISOLATE_OP_CODE
00000A5C                          1316      
00000A5C  3C3C 0000               1317      MOVE.W      #ADDQ_B,D6
00000A60  BC43                    1318      CMP.W       D3,D6
00000A62  6700 FA1E               1319      BEQ         MATCH_ADDQ_B
00000A66                          1320      
00000A66  3C3C 0001               1321      MOVE.W      #ADDQ_W,D6
00000A6A  BC43                    1322      CMP.W       D3,D6
00000A6C  6700 FA60               1323      BEQ         MATCH_ADDQ_W
00000A70                          1324      
00000A70  3C3C 0002               1325      MOVE.W      #ADDQ_L,D6
00000A74  BC43                    1326      CMP.W       D3,D6
00000A76  6700 FAA2               1327      BEQ         MATCH_ADDQ_L
00000A7A                          1328      
00000A7A                          1329  CHECK_ADDI
00000A7A                          1330  
00000A7A  6100 FB44               1331      BSR         ReadFirstTenBits
00000A7E                          1332      
00000A7E  3C3C 0018               1333      MOVE.W      #ADDI_B,D6
00000A82  BC43                    1334      CMP.W       D3,D6
00000A84  6700 F7A4               1335      BEQ         MATCH_ADDI_B
00000A88                          1336      
00000A88  3C3C 0019               1337      MOVE.W      #ADDI_W,D6
00000A8C  BC43                    1338      CMP.W       D3,D6
00000A8E  6700 F7DA               1339      BEQ         MATCH_ADDI_W
00000A92                          1340      
00000A92  3C3C 001A               1341      MOVE.W      #ADDI_L,D6
00000A96  BC43                    1342      CMP.W       D3,D6
00000A98  6700 F810               1343      BEQ         MATCH_ADDI_L
00000A9C                          1344      
00000A9C  6000 FB06               1345      BRA         ADDI_RETURN
00000AA0                          1346  CHECK_SUB
00000AA0                          1347      
00000AA0  6100 0050               1348      BSR         ISOLATE_OP_CODE
00000AA4                          1349      
00000AA4  3C3C 0000               1350      MOVE.W      #DN_B,D6
00000AA8  BC43                    1351      CMP.W       D3,D6
00000AAA  6700 0082               1352      BEQ         MATCH_SUB_TO_DN_B
00000AAE                          1353      
00000AAE  3C3C 0001               1354      MOVE.W      #DN_W,D6
00000AB2  BC43                    1355      CMP.W       D3,D6
00000AB4  6700 007A               1356      BEQ         MATCH_SUB_TO_DN_W
00000AB8                          1357      
00000AB8  3C3C 0002               1358      MOVE.W      #DN_L,D6
00000ABC  BC43                    1359      CMP.W       D3,D6
00000ABE  6700 0072               1360      BEQ         MATCH_SUB_TO_DN_L
00000AC2                          1361      
00000AC2  3C3C 0004               1362      MOVE.W      #EA_B,D6
00000AC6  BC43                    1363      CMP.W       D3,D6
00000AC8  6700 006A               1364      BEQ         MATCH_SUB_TO_EA_B
00000ACC                          1365      
00000ACC  3C3C 0005               1366      MOVE.W      #EA_W,D6
00000AD0  BC43                    1367      CMP.W       D3,D6
00000AD2  6700 0062               1368      BEQ         MATCH_SUB_TO_EA_W
00000AD6                          1369      
00000AD6  3C3C 0006               1370      MOVE.W      #EA_L,D6
00000ADA  BC43                    1371      CMP.W       D3,D6
00000ADC  6700 005A               1372      BEQ         MATCH_SUB_TO_EA_L
00000AE0                          1373  CHECK_MOVEA_W_AND_MOVE_W
00000AE0                          1374      
00000AE0  6100 0010               1375      BSR         ISOLATE_OP_CODE
00000AE4                          1376         
00000AE4  1C3C 0001               1377      MOVE.B      #MOVEA_WL,D6
00000AE8  BC03                    1378      CMP.B       D3,D6
00000AEA  6700 0030               1379      BEQ         MATCH_MOVEA_W
00000AEE                          1380      
00000AEE  6000 F6F4               1381      BRA         MATCH_MOVE_W 
00000AF2                          1382  ISOLATE_OP_CODE 
00000AF2                          1383  
00000AF2  48A7 2000               1384      MOVEM.W     D2, -(SP)    
00000AF6                          1385     
00000AF6  1E3C 0007               1386      MOVE.B      #7,D7          
00000AFA  EF6A                    1387      LSL.W       D7,D2
00000AFC  1E3C 000D               1388      MOVE.B      #13,D7
00000B00  EE6A                    1389      LSR.W       D7,D2
00000B02  1602                    1390      MOVE.B      D2,D3    
00000B04                          1391         
00000B04  4C9F 0004               1392      MOVEM.W     (SP)+,D2 
00000B08  4E75                    1393      RTS
00000B0A                          1394  CHECK_MOVEA_L_AND_MOVE_L
00000B0A                          1395      
00000B0A  61E6                    1396      BSR         ISOLATE_OP_CODE
00000B0C                          1397         
00000B0C  1C3C 0001               1398      MOVE.B      #MOVEA_WL,D6
00000B10  BC03                    1399      CMP.B       D3,D6
00000B12  6700 000A               1400      BEQ         MATCH_MOVEA_L 
00000B16                          1401      
00000B16  6000 0002               1402      BRA         MATCH_MOVE_L   
00000B1A                          1403   
00000B1A                          1404  MATCH_MOVE_L
00000B1A  3A02                    1405      MOVE.W      D2,D5       *REMOVE
00000B1C                          1406  MATCH_MOVEA_W
00000B1C  3A02                    1407      MOVE.W      D2,D5       *REMOVE
00000B1E                          1408  MATCH_MOVEA_L
00000B1E  3A02                    1409      MOVE.W      D2,D5       *REMOVE
00000B20                          1410  MATCH_MOVEQ
00000B20  3A02                    1411      MOVE.W      D2,D5       *REMOVE
00000B22                          1412      
00000B22                          1413  MATCH_MOVEM_TO_MEM_W
00000B22  3A02                    1414      MOVE.W      D2,D5       *REMOVE
00000B24                          1415  MATCH_MOVEM_TO_MEM_L
00000B24  3A02                    1416      MOVE.W      D2,D5       *REMOVE
00000B26                          1417  MATCH_MOVEM_TO_REG_W
00000B26  3A02                    1418      MOVE.W      D2,D5       *REMOVE
00000B28                          1419  MATCH_MOVEM_TO_REG_L
00000B28  3A02                    1420      MOVE.W      D2,D5       *REMOVE
00000B2A                          1421      
00000B2A                          1422  MATCH_ADDA_W
00000B2A  3A02                    1423      MOVE.W      D2,D5       *REMOVE
00000B2C                          1424  MATCH_ADDA_L
00000B2C  3A02                    1425      MOVE.W      D2,D5       *REMOVE
00000B2E                          1426  MATCH_SUB_TO_DN_B
00000B2E  3A02                    1427      MOVE.W      D2,D5       *REMOVE
00000B30                          1428  MATCH_SUB_TO_DN_W
00000B30  3A02                    1429      MOVE.W      D2,D5       *REMOVE
00000B32                          1430  MATCH_SUB_TO_DN_L
00000B32  3A02                    1431      MOVE.W      D2,D5       *REMOVE
00000B34                          1432  MATCH_SUB_TO_EA_B
00000B34  3A02                    1433      MOVE.W      D2,D5       *REMOVE
00000B36                          1434  MATCH_SUB_TO_EA_W
00000B36  3A02                    1435      MOVE.W      D2,D5       *REMOVE
00000B38                          1436  MATCH_SUB_TO_EA_L
00000B38  3A02                    1437      MOVE.W      D2,D5       *REMOVE
00000B3A                          1438  MATCH_DIVU
00000B3A  3A02                    1439      MOVE.W      D2,D5       *REMOVE
00000B3C                          1440  MATCH_OR_DN_B
00000B3C  3A02                    1441      MOVE.W      D2,D5       *REMOVE
00000B3E                          1442  MATCH_OR_DN_W
00000B3E  3A02                    1443      MOVE.W      D2,D5       *REMOVE
00000B40                          1444  MATCH_OR_DN_L
00000B40  3A02                    1445      MOVE.W      D2,D5       *REMOVE
00000B42                          1446  MATCH_OR_EA_B
00000B42  3A02                    1447      MOVE.W      D2,D5       *REMOVE
00000B44                          1448  MATCH_OR_EA_W
00000B44  3A02                    1449      MOVE.W      D2,D5       *REMOVE
00000B46                          1450  MATCH_OR_EA_L
00000B46  3A02                    1451      MOVE.W      D2,D5       *REMOVE
00000B48                          1452  MATCH_MULS_W
00000B48  3A02                    1453      MOVE.W      D2,D5       *REMOVE
00000B4A                          1454  MATCH_AND_DN_B
00000B4A  3A02                    1455      MOVE.W      D2,D5       *REMOVE
00000B4C                          1456  MATCH_AND_DN_W
00000B4C  3A02                    1457      MOVE.W      D2,D5       *REMOVE
00000B4E                          1458  MATCH_AND_DN_L
00000B4E  3A02                    1459      MOVE.W      D2,D5       *REMOVE
00000B50                          1460  MATCH_AND_EA_B
00000B50  3A02                    1461      MOVE.W      D2,D5       *REMOVE
00000B52                          1462  MATCH_AND_EA_W
00000B52  3A02                    1463      MOVE.W      D2,D5       *REMOVE
00000B54                          1464  MATCH_AND_EA_L
00000B54  3A02                    1465      MOVE.W      D2,D5       *REMOVE
00000B56                          1466  MATCH_RTS
00000B56  3A02                    1467      MOVE.W      D2,D5       *REMOVE
00000B58                          1468  MATCH_LEA
00000B58  3A02                    1469      MOVE.W      D2,D5       *REMOVE
00000B5A                          1470  MATCH_JSR
00000B5A  3A02                    1471      MOVE.W      D2,D5       *REMOVE
00000B5C                          1472  MATCH_CLR_B
00000B5C  3A02                    1473      MOVE.W      D2,D5       *REMOVE
00000B5E                          1474  MATCH_CLR_W
00000B5E  3A02                    1475      MOVE.W      D2,D5       *REMOVE
00000B60                          1476  MATCH_CLR_L
00000B60  3A02                    1477      MOVE.W      D2,D5       *REMOVE
00000B62                          1478  MATCH_MULS_L
00000B62  3A02                    1479      MOVE.W      D2,D5       *REMOVE
00000B64                          1480  MATCH_LSL
00000B64  3A02                    1481      MOVE.W      D2,D5       *REMOVE
00000B66                          1482  MATCH_LSR
00000B66  3A02                    1483      MOVE.W      D2,D5       *REMOVE
00000B68                          1484  MATCH_ASR
00000B68  3A02                    1485      MOVE.W      D2,D5       *REMOVE
00000B6A                          1486  MATCH_ASL
00000B6A  3A02                    1487      MOVE.W      D2,D5       *REMOVE
00000B6C                          1488  MATCH_ROL
00000B6C  3A02                    1489      MOVE.W      D2,D5       *REMOVE
00000B6E                          1490  MATCH_ROR
00000B6E  3A02                    1491      MOVE.W      D2,D5       *REMOVE
00000B70                          1492  MATCH_CMP_B
00000B70  3A02                    1493      MOVE.W      D2,D5       *REMOVE
00000B72                          1494  MATCH_CMP_W
00000B72  3A02                    1495      MOVE.W      D2,D5       *REMOVE
00000B74                          1496  MATCH_CMP_L
00000B74  3A02                    1497      MOVE.W      D2,D5       *REMOVE
00000B76                          1498      
00000B76                          1499  MATCH_CC_T_8
00000B76  3A02                    1500      MOVE.W      D2,D5       *REMOVE
00000B78                          1501  MATCH_CC_T_16
00000B78  3A02                    1502      MOVE.W      D2,D5       *REMOVE
00000B7A                          1503  MATCH_CC_T_32
00000B7A  3A02                    1504      MOVE.W      D2,D5       *REMOVE
00000B7C                          1505  MATCH_CC_F_8
00000B7C  3A02                    1506      MOVE.W      D2,D5       *REMOVE
00000B7E                          1507  MATCH_CC_F_16
00000B7E  3A02                    1508      MOVE.W      D2,D5       *REMOVE
00000B80                          1509  MATCH_CC_F_32
00000B80  3A02                    1510      MOVE.W      D2,D5       *REMOVE
00000B82                          1511  MATCH_CC_HI_8
00000B82  3A02                    1512      MOVE.W      D2,D5       *REMOVE
00000B84                          1513  MATCH_CC_HI_16
00000B84  3A02                    1514      MOVE.W      D2,D5       *REMOVE
00000B86                          1515  MATCH_CC_HI_32
00000B86  3A02                    1516      MOVE.W      D2,D5       *REMOVE
00000B88                          1517  MATCH_CC_LS_8
00000B88  3A02                    1518      MOVE.W      D2,D5       *REMOVE
00000B8A                          1519  MATCH_CC_LS_16
00000B8A  3A02                    1520      MOVE.W      D2,D5       *REMOVE
00000B8C                          1521  MATCH_CC_LS_32  
00000B8C  3A02                    1522      MOVE.W      D2,D5       *REMOVE
00000B8E                          1523  MATCH_CC_CC_8
00000B8E  3A02                    1524      MOVE.W      D2,D5       *REMOVE
00000B90                          1525  MATCH_CC_CC_16
00000B90  3A02                    1526      MOVE.W      D2,D5       *REMOVE
00000B92                          1527  MATCH_CC_CC_32
00000B92  3A02                    1528      MOVE.W      D2,D5       *REMOVE
00000B94                          1529  MATCH_CC_CS_8
00000B94  3A02                    1530      MOVE.W      D2,D5       *REMOVE
00000B96                          1531  MATCH_CC_CS_16
00000B96  3A02                    1532      MOVE.W      D2,D5       *REMOVE
00000B98                          1533  MATCH_CC_CS_32
00000B98  3A02                    1534      MOVE.W      D2,D5       *REMOVE
00000B9A                          1535  MATCH_CC_NE_8
00000B9A  3A02                    1536      MOVE.W      D2,D5       *REMOVE
00000B9C                          1537  MATCH_CC_NE_16
00000B9C  3A02                    1538      MOVE.W      D2,D5       *REMOVE
00000B9E                          1539  MATCH_CC_NE_32
00000B9E  3A02                    1540      MOVE.W      D2,D5       *REMOVE
00000BA0                          1541  MATCH_CC_EQ_8
00000BA0  3A02                    1542      MOVE.W      D2,D5       *REMOVE
00000BA2                          1543  MATCH_CC_EQ_16
00000BA2  3A02                    1544      MOVE.W      D2,D5       *REMOVE
00000BA4                          1545  MATCH_CC_EQ_32
00000BA4  3A02                    1546      MOVE.W      D2,D5       *REMOVE
00000BA6                          1547  MATCH_CC_VC_8
00000BA6  3A02                    1548      MOVE.W      D2,D5       *REMOVE
00000BA8                          1549  MATCH_CC_VC_16
00000BA8  3A02                    1550      MOVE.W      D2,D5       *REMOVE
00000BAA                          1551  MATCH_CC_VC_32
00000BAA  3A02                    1552      MOVE.W      D2,D5       *REMOVE
00000BAC                          1553  MATCH_CC_VS_8
00000BAC  3A02                    1554      MOVE.W      D2,D5       *REMOVE
00000BAE                          1555  MATCH_CC_VS_16
00000BAE  3A02                    1556      MOVE.W      D2,D5       *REMOVE
00000BB0                          1557  MATCH_CC_VS_32
00000BB0  3A02                    1558      MOVE.W      D2,D5       *REMOVE
00000BB2                          1559  MATCH_CC_PL_8
00000BB2  3A02                    1560      MOVE.W      D2,D5       *REMOVE
00000BB4                          1561  MATCH_CC_PL_16
00000BB4  3A02                    1562      MOVE.W      D2,D5       *REMOVE
00000BB6                          1563  MATCH_CC_PL_32
00000BB6  3A02                    1564      MOVE.W      D2,D5       *REMOVE
00000BB8                          1565  MATCH_CC_MI_8
00000BB8  3A02                    1566      MOVE.W      D2,D5       *REMOVE
00000BBA                          1567  MATCH_CC_MI_16
00000BBA  3A02                    1568      MOVE.W      D2,D5       *REMOVE
00000BBC                          1569  MATCH_CC_MI_32
00000BBC  3A02                    1570      MOVE.W      D2,D5       *REMOVE
00000BBE                          1571  MATCH_CC_GE_8
00000BBE  3A02                    1572      MOVE.W      D2,D5       *REMOVE
00000BC0                          1573  MATCH_CC_GE_16
00000BC0  3A02                    1574      MOVE.W      D2,D5       *REMOVE
00000BC2                          1575  MATCH_CC_GE_32
00000BC2  3A02                    1576      MOVE.W      D2,D5       *REMOVE
00000BC4                          1577  MATCH_CC_LT_8
00000BC4  3A02                    1578      MOVE.W      D2,D5       *REMOVE
00000BC6                          1579  MATCH_CC_LT_16
00000BC6  3A02                    1580      MOVE.W      D2,D5       *REMOVE
00000BC8                          1581  MATCH_CC_LT_32
00000BC8  3A02                    1582      MOVE.W      D2,D5       *REMOVE
00000BCA                          1583  MATCH_CC_GT_8
00000BCA  3A02                    1584      MOVE.W      D2,D5       *REMOVE
00000BCC                          1585  MATCH_CC_GT_16
00000BCC  3A02                    1586      MOVE.W      D2,D5       *REMOVE
00000BCE                          1587  MATCH_CC_GT_32
00000BCE  3A02                    1588      MOVE.W      D2,D5       *REMOVE
00000BD0                          1589  MATCH_CC_LE_8
00000BD0  3A02                    1590      MOVE.W      D2,D5       *REMOVE
00000BD2                          1591  MATCH_CC_LE_16
00000BD2  3A02                    1592      MOVE.W      D2,D5       *REMOVE
00000BD4                          1593  MATCH_CC_LE_32
00000BD4  3A02                    1594      MOVE.W      D2,D5       *REMOVE
00000BD6                          1595  ERROR
00000BD6  3A02                    1596      MOVE.W      D2,D5       *REMOVE
00000BD8                          1597  
00000BD8                          1598  
00000BD8                          1599  
00000BD8                          1600  -------------------- end include --------------------
00000BD8                          1601          
00000BD8= 45 6E 74 65 72 20 ...   1602  MESSAGE     DC.B    'Enter the address of compiled code: ',0
00000BFD= 49 6E 76 61 6C 69 ...   1603  ERROR_MSG   DC.B    'Invalid input, please rerun',0
00000C19= 20 00                   1604  SPACER      DC.B    ' ',0
00000C1B                          1605  
00001000                          1606  START:  ORG     $1000                
00001000                          1607  
00001000                          1608  
00001000                          1609  *------Code for input-------
00001000                          1610          
00001000  43F8 0BD8               1611          LEA     MESSAGE,A1      *Code block for first message
00001004  103C 000E               1612          MOVE.B  #14,D0
00001008  4E4F                    1613          TRAP    #15
0000100A                          1614         
0000100A  227C 00004000           1615          MOVEA.L #$4000, A1
00001010  103C 0002               1616          MOVE.B  #2,D0           *Code block for reading input
00001014  4E4F                    1617          TRAP    #15   
00001016  3001                    1618          MOVE.W  D1,D0
00001018                          1619          
00001018  2049                    1620          MOVEA.L A1,A0           *Move the contents of A1 to A0 for the conversion
0000101A  4EB8 0000               1621          JSR     A2H             *Branch to Connor's conversion code      
0000101E                          1622          
0000101E  2040                    1623          MOVEA.L D0,A0
00001020                          1624          
00001020  0C50 FFFF               1625          CMPI.W  #$FFFF,(A0)
00001024  6700 0026               1626          BEQ     input_error
00001028                          1627      
00001028                          1628  loop_start
00001028                          1629          
00001028  2208                    1630          MOVE.L  A0,D1           *Print out the address we're working on
0000102A  7410                    1631          MOVE.L  #16,D2          
0000102C  700F                    1632          MOVE.L  #15,D0          
0000102E  4E4F                    1633          TRAP    #15
00001030                          1634  
00001030  700E                    1635          MOVE.L  #14,D0
00001032  43F8 0C19               1636          LEA     SPACER,A1
00001036  4E4F                    1637          TRAP    #15
00001038                          1638          
00001038  3418                    1639          MOVE.W  (A0)+,D2
0000103A  0C42 FFFF               1640          CMPI.W  #$FFFF,D2
0000103E  6700 0014               1641          BEQ     Done
00001042                          1642          
00001042  4EB8 058E               1643          JSR     OpDecoder
00001046                          1644          
00001046  700D                    1645          MOVE.L  #13,D0
00001048  4E4F                    1646          TRAP    #15
0000104A                          1647          
0000104A  60DC                    1648          BRA     loop_start
0000104C                          1649          
0000104C                          1650  input_error        
0000104C  700D                    1651          MOVE.L  #13,D0
0000104E  43F8 0BFD               1652          LEA     ERROR_MSG,A1
00001052  4E4F                    1653          TRAP    #15
00001054                          1654  Done        
00001054                          1655  
00001054                          1656          END    $1000

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
A2H                 0
ABS_LONG            39
ABS_WORD            38
ADDA_L              7
ADDA_W              3
ADDBYTELOOP         24
ADDBYTES            1C
ADDI_B              18
ADDI_L              1A
ADDI_RETURN         5A4
ADDI_W              19
ADDQ                5
ADDQ_B              0
ADDQ_L              2
ADDQ_W              1
ADD_ADDA            D
ADD_TO_EA_B         4
ADD_TO_EA_L         6
ADD_TO_EA_W         5
ADD_TO_REG_B        0
ADD_TO_REG_L        2
ADD_TO_REG_W        1
AN                  8
ASL                 383
ASR                 387
BCC                 6
BCC_16              0
BCC_32              FF
CC_CC               4
CC_CS               5
CC_EQ               7
CC_F                1
CC_GE               C
CC_GT               E
CC_HI               2
CC_LE               F
CC_LS               3
CC_LT               D
CC_MI               B
CC_NE               6
CC_PL               A
CC_T                0
CC_VC               8
CC_VS               9
CHECK_ADDI          A7A
CHECK_ADDQ          A58
CHECK_ADD_ADDA      A02
CHECK_BCC           69A
CHECK_BCC_16        75A
CHECK_BCC_32        802
CHECK_BCC_8         6B2
CHECK_CMP           8BE
CHECK_DIVU_OR       984
CHECK_FOUR_BIT_SIG  61C
CHECK_MOVEA_L_AND_MOVE_L  B0A
CHECK_MOVEA_W_AND_MOVE_W  AE0
CHECK_MOVEM         9D2
CHECK_MULS_LEA_CLR_JSR_RTS  8E4
CHECK_MULS_W_AND    936
CHECK_NOP           60E
CHECK_SHIFT_AND_ROTATE  5CE
CHECK_SUB           AA0
CLR_B               108
CLR_L               10A
CLR_W               109
CMP                 B
CMP_B               0
CMP_L               2
CMP_W               1
CONV_END            2C
CR                  D
DEC_ABS_LONG        114
DEC_ABS_WORD        108
DEC_AN              12C
DEC_DN              120
DEC_IMMEDIATE       EC
DEC_INDIRECT        138
DEC_POST_INC        14C
DEC_PRE_DEC         166
DEC_RETURN          CE
DIVU                3
DIVU_OR             8
DN                  0
DN_B                0
DN_L                2
DN_W                1
DONE                1054
EADECODER           66
EADECODER_LEFT      4E
EA_B                4
EA_L                6
EA_W                5
ERROR               BD6
ERROR_MSG           BFD
FOUR_BIT_RETURN     59C
IMMEDIATE           3C
IMM_SKIP            E6
IMM_WORD            104
INDIRECT            10
INPUT_ERROR         104C
ISOLATE_CC_CODE_FOR_BCC  8AA
ISOLATE_OP_CODE     AF2
JSR                 13A
LEA                 7
LEFT_SKIP           6A
LF                  A
LOOP_START          1028
LSL                 38F
LSR                 38B
MATCH_ADDA_L        B2C
MATCH_ADDA_W        B2A
MATCH_ADDI_B        22A
MATCH_ADDI_L        2AA
MATCH_ADDI_W        26A
MATCH_ADDQ_B        482
MATCH_ADDQ_L        51A
MATCH_ADDQ_W        4CE
MATCH_ADD_TO_EA_B   3B6
MATCH_ADD_TO_EA_L   43E
MATCH_ADD_TO_EA_W   3FA
MATCH_ADD_TO_REG_B  2EA
MATCH_ADD_TO_REG_L  372
MATCH_ADD_TO_REG_W  32E
MATCH_AND_DN_B      B4A
MATCH_AND_DN_L      B4E
MATCH_AND_DN_W      B4C
MATCH_AND_EA_B      B50
MATCH_AND_EA_L      B54
MATCH_AND_EA_W      B52
MATCH_ASL           B6A
MATCH_ASR           B68
MATCH_CC_CC_16      B90
MATCH_CC_CC_32      B92
MATCH_CC_CC_8       B8E
MATCH_CC_CS_16      B96
MATCH_CC_CS_32      B98
MATCH_CC_CS_8       B94
MATCH_CC_EQ_16      BA2
MATCH_CC_EQ_32      BA4
MATCH_CC_EQ_8       BA0
MATCH_CC_F_16       B7E
MATCH_CC_F_32       B80
MATCH_CC_F_8        B7C
MATCH_CC_GE_16      BC0
MATCH_CC_GE_32      BC2
MATCH_CC_GE_8       BBE
MATCH_CC_GT_16      BCC
MATCH_CC_GT_32      BCE
MATCH_CC_GT_8       BCA
MATCH_CC_HI_16      B84
MATCH_CC_HI_32      B86
MATCH_CC_HI_8       B82
MATCH_CC_LE_16      BD2
MATCH_CC_LE_32      BD4
MATCH_CC_LE_8       BD0
MATCH_CC_LS_16      B8A
MATCH_CC_LS_32      B8C
MATCH_CC_LS_8       B88
MATCH_CC_LT_16      BC6
MATCH_CC_LT_32      BC8
MATCH_CC_LT_8       BC4
MATCH_CC_MI_16      BBA
MATCH_CC_MI_32      BBC
MATCH_CC_MI_8       BB8
MATCH_CC_NE_16      B9C
MATCH_CC_NE_32      B9E
MATCH_CC_NE_8       B9A
MATCH_CC_PL_16      BB4
MATCH_CC_PL_32      BB6
MATCH_CC_PL_8       BB2
MATCH_CC_T_16       B78
MATCH_CC_T_32       B7A
MATCH_CC_T_8        B76
MATCH_CC_VC_16      BA8
MATCH_CC_VC_32      BAA
MATCH_CC_VC_8       BA6
MATCH_CC_VS_16      BAE
MATCH_CC_VS_32      BB0
MATCH_CC_VS_8       BAC
MATCH_CLR_B         B5C
MATCH_CLR_L         B60
MATCH_CLR_W         B5E
MATCH_CMP_B         B70
MATCH_CMP_L         B74
MATCH_CMP_W         B72
MATCH_DIVU          B3A
MATCH_JSR           B5A
MATCH_LEA           B58
MATCH_LSL           B64
MATCH_LSR           B66
MATCH_MOVEA_L       B1E
MATCH_MOVEA_W       B1C
MATCH_MOVEM_TO_MEM_L  B24
MATCH_MOVEM_TO_MEM_W  B22
MATCH_MOVEM_TO_REG_L  B28
MATCH_MOVEM_TO_REG_W  B26
MATCH_MOVEQ         B20
MATCH_MOVE_B        19E
MATCH_MOVE_L        B1A
MATCH_MOVE_W        1E4
MATCH_MULS_L        B62
MATCH_MULS_W        B48
MATCH_NOP           18E
MATCH_OR_DN_B       B3C
MATCH_OR_DN_L       B40
MATCH_OR_DN_W       B3E
MATCH_OR_EA_B       B42
MATCH_OR_EA_L       B46
MATCH_OR_EA_W       B44
MATCH_ROL           B6C
MATCH_ROR           B6E
MATCH_RTS           B56
MATCH_SUB_TO_DN_B   B2E
MATCH_SUB_TO_DN_L   B32
MATCH_SUB_TO_DN_W   B30
MATCH_SUB_TO_EA_B   B34
MATCH_SUB_TO_EA_L   B38
MATCH_SUB_TO_EA_W   B36
MESSAGE             BD8
MOVEA_WL            1
MOVEM_RETURN        5A0
MOVEM_TO_MEM_L      123
MOVEM_TO_MEM_W      122
MOVEM_TO_REG_L      133
MOVEM_TO_REG_W      132
MOVEQ_              7
MOVE_B              1
MOVE_L              2
MOVE_W              3
MULS_L              130
MULS_LEA_CLR_JSR_RTS  4
MULS_OP_W           7
MULS_W_AND          C
NOP                 4E71
NOP_RETURN          598
NUMSUB              32
NUMSUBRTN           E
OPDECODER           58E
OPDEC_RETURN        5A8
OUTPUT              10000
POST_INC            18
PRE_DEC             20
PR_ADD              180
PR_ADDI             184
PR_ADDQ             189
PR_BYTE             56A
PR_COMMA            568
PR_LONG             570
PR_MOVE             577
PR_MOVEA            57C
PR_MOVEM            588
PR_MOVEQ            582
PR_NOP              573
PR_SPACE            566
PR_WORD             56D
READFIRSTFOURBITS   5AE
READFIRSTTENBITS    5C0
ROL                 39F
ROR                 39B
RTS                 4E75
SPACER              C19
START               1000
SUB                 9
SUB_TO_DN_B         0
SUB_TO_DN_L         2
SUB_TO_DN_W         1
SUB_TO_EA_B         4
SUB_TO_EA_L         6
SUB_TO_EA_W         5
UPSEND              46
UPSUB               3C
UPSUBRTN            16

00001000 Starting Address
Assembler used: EASy68K Editor/Assembler v5.15.04
Created On: 3/9/2017 12:20:46 PM

00000000                             1  *-----------------------------------------------------------
00000000                             2  * Title      : Main Driver Program
00000000                             3  * Written by : Arsany Azmy, Connor McGwire
00000000                             4  * Date       :
00000000                             5  * Description:
00000000                             6  *-----------------------------------------------------------
00000000  =0000000D                  7  CR      EQU     $0D
00000000  =0000000A                  8  LF      EQU     $0A   
00000000                             9          INCLUDE 'ASCII_HEX_Conversions.x68'
00000000                            10  
00000000                            11  
00000000                            12  
00000000                            13  A2H     *Converts and ASCII Byte string into HEX; Size WORD
00000000  48E7 7FFE                 14          MOVEM.L     D1-D7/A0-A6, -(SP)  
00000004                            15          
00000004  3400                      16          MOVE.W  D0,D2
00000006  3202                      17          MOVE.W  D2,D1                   *Store length of string into D1 for looping
00000008  2248                      18          MOVEA.L A0,A1                   *Copy starting point of string
0000000A                            19  
0000000A  6000 0026                 20          BRA     numSub
0000000E                            21  numSubRTN
0000000E  2049                      22          MOVEA.L A1,A0                   *Restore address position
00000010  3202                      23          MOVE.W  D2,D1                   *Reset loop counter
00000012                            24          
00000012  6000 0028                 25          BRA     upSub
00000016                            26  upSubRTN        
00000016  2049                      27          MOVEA.L A1,A0                   *Restore address position
00000018  3202                      28          MOVE.W  D2,D1                   *Reset loop counter
0000001A  4240                      29          CLR     D0                      *Clear D0
0000001C                            30  addBytes
0000001C  D018                      31          ADD.B   (A0)+,D0
0000001E  5301                      32          SUBI.B  #1,D1
00000020  6700 000A                 33          BEQ     conv_end
00000024                            34  addByteLoop
00000024  E980                      35          ASL.L   #4,D0
00000026  D018                      36          ADD.B   (A0)+,D0
00000028  5301                      37          SUBI.B  #1,D1
0000002A  66F8                      38          BNE     addByteLoop
0000002C                            39  conv_end
0000002C  4CDF 7FFE                 40          MOVEM.L     (SP)+, D1-D7/A0-A6
00000030  4E75                      41          RTS
00000032                            42          
00000032                            43  numSub  *Convert ASCII 'number' to true number byte; Should not be called outside of the A2H subroutines
00000032  0418 0030                 44          SUBI.B  #$30,(A0)+              *Subtract difference between null ASCII and '0' ASCII
00000036  5341                      45          SUB.W   #1,D1                   *Decrement loop counter
00000038  66F8                      46          BNE     numSub                  *If loop has not ended restart
0000003A  60D2                      47          BRA     numSubRTN
0000003C                            48  
0000003C                            49  upSub   *Loops through string to remove any upper case characters 
0000003C                            50          *that may remain in the string
0000003C  0C10 0009                 51          CMPI.B  #9,(A0)                 *Check if the value is greater than 0-9
00000040  6F00 0004                 52          BLE     upSEnd                  *If it's not, continue loop
00000044  5310                      53          SUBI.B  #1,(A0)                 *Otherwise, subtract difference between ASCII 'number' code and 'A' code
00000046                            54  upSEnd
00000046  5248                      55          ADDA.W  #1,A0                   *Increment to next position to check for uppercase
00000048  5341                      56          SUB.W   #1,D1                   *Decrement loop counter
0000004A  66F0                      57          BNE     upSub                   
0000004C  60C8                      58          BRA     upSubRTN
0000004E                            59  
0000004E                            60  
0000004E                            61  -------------------- end include --------------------
0000004E                            62          INCLUDE 'opcodes.x68'
0000004E                            63                  INCLUDE 'EADecoder.x68'
0000004E                            64  
0000004E                            65  
0000004E  =00010000                 66  output      EQU $00010000
0000004E                            67  
0000004E  =0000003C                 68  IMMEDIATE   EQU %00111100
0000004E  =00000038                 69  ABS_WORD    EQU %00111000
0000004E  =00000039                 70  ABS_LONG    EQU %00111001
0000004E  =00000000                 71  Dn          EQU %00000000
0000004E  =00000008                 72  An          EQU %00001000
0000004E  =00000010                 73  INDIRECT    EQU %00010000
0000004E  =00000018                 74  POST_INC    EQU %00011000
0000004E  =00000020                 75  PRE_DEC     EQU %00100000
0000004E                            76  
0000004E                            77  
0000004E                            78  
0000004E                            79  EADecoder_left
0000004E  48E7 FF7E                 80          MOVEM.L     D0-D7/A1-A6, -(SP)
00000052                            81          
00000052                            82          ** Swap the mode and register bits
00000052  1800                      83          MOVE.B  D0,D4
00000054  0200 0007                 84          ANDI.B  #%00000111,D0       * Mask mode
00000058  0204 0038                 85          ANDI.B  #%00111000,D4       * Mask register
0000005C  E708                      86          LSL.B   #3,D0               * Move mode bits over
0000005E  E60C                      87          LSR.B   #3,D4               * Move register bits over
00000060  8004                      88          OR.B    D4,D0               * Recombine
00000062                            89          
00000062  6000 0006                 90          BRA     left_skip
00000066                            91  
00000066                            92  EADecoder
00000066  48E7 FF7E                 93          MOVEM.L     D0-D7/A1-A6, -(SP) *Store registers on stack, except D0
0000006A                            94  left_skip   
0000006A  4242                      95          CLR     D2     
0000006C  1401                      96          MOVE.B  D1,D2 ** Store opcode size in bytes into D2
0000006E                            97          
0000006E  43F9 00010000             98          LEA     output,A1
00000074  45F9 00010000             99          LEA     output,A2
0000007A                           100          
0000007A                           101          *First, decoder will check for the 3 types with hard coded register values
0000007A  163C 0001                102          MOVE.B  #1,D3
0000007E  B07C 003C                103          CMP     #IMMEDIATE,D0
00000082  6700 0068                104          BEQ     dec_immediate
00000086                           105          
00000086  B07C 0038                106          CMP     #ABS_WORD,D0
0000008A  6700 007C                107          BEQ     dec_abs_word
0000008E                           108          
0000008E  B07C 0039                109          CMP     #ABS_LONG,D0
00000092  6700 0080                110          BEQ     dec_abs_long
00000096                           111          
00000096                           112          *If it was none of the above, store the register and mode seperately
00000096  4243                     113          CLR     D3
00000098  1200                     114          MOVE.B  D0,D1
0000009A  0201 0038                115          ANDI.B  #%00111000,D1           *Get mode value
0000009E  0200 0007                116          ANDI.B  #%00000111,D0           *Get register value
000000A2  0600 0030                117          ADDI.B  #$30,D0
000000A6                           118                
000000A6  B27C 0000                119          CMP     #Dn,D1
000000AA  6700 0074                120          BEQ     dec_Dn 
000000AE                           121          
000000AE  B27C 0008                122          CMP     #An,D1
000000B2  6700 0078                123          BEQ     dec_An
000000B6                           124                  
000000B6  B27C 0010                125          CMP     #INDIRECT,D1
000000BA  6700 007C                126          BEQ     dec_indirect
000000BE                           127                  
000000BE  B27C 0018                128          CMP     #POST_INC,D1
000000C2  6700 0088                129          BEQ     dec_post_inc
000000C6                           130                  
000000C6  B27C 0020                131          CMP     #PRE_DEC,D1
000000CA  6700 009A                132          BEQ     dec_pre_dec
000000CE                           133  
000000CE                           134  dec_return ** Common return for all types
000000CE                           135          
000000CE                           136          ** Print display string
000000CE  103C 000E                137          MOVE.B  #14,D0
000000D2  4E4F                     138          TRAP    #15
000000D4                           139          
000000D4                           140          ** If there is immediate data to print, print it
000000D4  B67C 0001                141          CMP     #1,D3
000000D8  6600 000C                142          BNE     imm_skip
000000DC                           143          
000000DC  103C 000F                144          MOVE.B  #15,D0
000000E0  143C 0010                145          MOVE.B  #16,D2
000000E4  4E4F                     146          TRAP    #15
000000E6                           147  
000000E6                           148  imm_skip
000000E6  4CDF 7EFF                149          MOVEM.L     (SP)+, D0-D7/A1-A6 *Return register data from stack, except D0
000000EA  4E75                     150          RTS
000000EC                           151          
000000EC                           152          * Individual EA decoders *
000000EC                           153  
000000EC                           154  dec_immediate   *DECODE IMMEDIATE VALUE*
000000EC  14FC 0023                155          MOVE.B  #'#',(A2)+  * Move '#' char into string
000000F0  14FC 0024                156          MOVE.B  #'$',(A2)+  * Move '$' char into string
000000F4  14FC 0000                157          MOVE.B  #$0,(A2)+   * Null terminate string
000000F8  B47C 0002                158          CMP     #2,D2       * Check if data is word length
000000FC  6700 0006                159          BEQ     imm_word    
00000100                           160          
00000100  2218                     161          MOVE.L  (A0)+,D1    * Length was long
00000102  60CA                     162          BRA     dec_return
00000104                           163          
00000104                           164  imm_word
00000104  3218                     165          MOVE.W  (A0)+,D1    * Length was word
00000106  60C6                     166          BRA     dec_return
00000108                           167  
00000108                           168  
00000108                           169  dec_abs_word    *DECODE ABSOLUTE WORD*
00000108  14FC 0024                170          MOVE.B  #'$',(A2)+  * Move '$' char into string
0000010C  14FC 0000                171          MOVE.B  #$0,(A2)+   * Null terminate string
00000110  3218                     172          MOVE.W  (A0)+,D1
00000112  60BA                     173          BRA     dec_return
00000114                           174          
00000114                           175  
00000114                           176  dec_abs_long    *DECODE ABSOLUTE LONG*
00000114  14FC 0024                177          MOVE.B  #'$',(A2)+  * Move '$' char into string
00000118  14FC 0000                178          MOVE.B  #$0,(A2)+   * Null terminate string
0000011C  2218                     179          MOVE.L  (A0)+,D1
0000011E  60AE                     180          BRA     dec_return
00000120                           181          
00000120                           182  
00000120                           183  dec_Dn          *DECODE DIRECT DATA*
00000120  14FC 0044                184          MOVE.B  #'D',(A2)+
00000124  14C0                     185          MOVE.B  D0,(A2)+
00000126  14FC 0000                186          MOVE.B  #$0,(A2)+
0000012A  60A2                     187          BRA     dec_return
0000012C                           188  
0000012C                           189          
0000012C                           190  dec_An          *DECODE DIRECT ADDRESS*
0000012C  14FC 0041                191          MOVE.B  #'A',(A2)+
00000130  14C0                     192          MOVE.B  D0,(A2)+
00000132  14FC 0000                193          MOVE.B  #$0,(A2)+
00000136  6096                     194          BRA     dec_return
00000138                           195  
00000138                           196  
00000138                           197  dec_indirect    *DECODE INDIRECT ACCESS*
00000138  14FC 0028                198          MOVE.B  #'(',(A2)+
0000013C  14FC 0041                199          MOVE.B  #'A',(A2)+
00000140  14C0                     200          MOVE.B  D0,(A2)+
00000142  14FC 0029                201          MOVE.B  #')',(A2)+
00000146  14FC 0000                202          MOVE.B  #$0,(A2)+
0000014A  6082                     203          BRA     dec_return
0000014C                           204          
0000014C                           205  
0000014C                           206  dec_post_inc    *DECODE INDIRECT POST INCREMENT*
0000014C  14FC 0028                207          MOVE.B  #'(',(A2)+
00000150  14FC 0041                208          MOVE.B  #'A',(A2)+
00000154  14C0                     209          MOVE.B  D0,(A2)+
00000156  14FC 0029                210          MOVE.B  #')',(A2)+
0000015A  14FC 002B                211          MOVE.B  #'+',(A2)+
0000015E  14FC 0000                212          MOVE.B  #$0,(A2)+
00000162  6000 FF6A                213          BRA     dec_return
00000166                           214          
00000166                           215          
00000166                           216  dec_pre_dec    *DECODE INDIRECT PRE DECREMENT*
00000166  14FC 002D                217          MOVE.B  #'-',(A2)+
0000016A  14FC 0028                218          MOVE.B  #'(',(A2)+
0000016E  14FC 0041                219          MOVE.B  #'A',(A2)+
00000172  14C0                     220          MOVE.B  D0,(A2)+
00000174  14FC 0029                221          MOVE.B  #')',(A2)+
00000178  14FC 0000                222          MOVE.B  #$0,(A2)+
0000017C  6000 FF50                223          BRA     dec_return
00000180                           224  
00000180                           225  
00000180                           226  
00000180                           227  
00000180                           228  
00000180                           229  
00000180                           230  
00000180                           231  
00000180                           232  -------------------- end include --------------------
00000180                           233                  INCLUDE 'connor_opcodes.x68'
00000180= 41 44 44 00              234  pr_ADD          DC.B    'ADD',0
00000184= 41 44 44 49 00           235  pr_ADDI         DC.B    'ADDI',0
00000189= 41 44 44 51 00           236  pr_ADDQ         DC.B    'ADDQ',0
0000018E                           237  
0000018E                           238  MATCH_NOP
0000018E  43F9 00000A05            239      LEA         pr_NOP,A1
00000194  103C 000E                240      MOVE.B      #14,D0
00000198  4E4F                     241      TRAP        #15
0000019A  6000 08BC                242      BRA         opdec_return
0000019E                           243      
0000019E                           244  MATCH_MOVE_B
0000019E                           245      ** Move command size into D1
0000019E  123C 0002                246      MOVE.B      #2,D1
000001A2                           247      ** Print command
000001A2  103C 000E                248      MOVE.B      #14,D0
000001A6  43F9 00000A09            249      LEA         pr_MOVE,A1
000001AC  4E4F                     250      TRAP        #15
000001AE                           251      ** Print size
000001AE  43F9 000009FC            252      LEA         pr_BYTE,A1
000001B4  4E4F                     253      TRAP        #15
000001B6                           254      ** Print space
000001B6  43F9 000009F8            255      LEA         pr_space,A1
000001BC  4E4F                     256      TRAP        #15
000001BE                           257      ** Decode right side ea
000001BE  1002                     258      MOVE.B      D2,D0
000001C0  0200 003F                259      ANDI.B      #%00111111,D0
000001C4  4EB8 0066                260      JSR         EADecoder
000001C8                           261      ** Add comma
000001C8  103C 000E                262      MOVE.B      #14,D0
000001CC  43F9 000009FA            263      LEA         pr_comma,A1
000001D2  4E4F                     264      TRAP        #15
000001D4                           265      ** Decode left side ea
000001D4  3002                     266      MOVE.W      D2,D0
000001D6  0240 0FC0                267      ANDI.W      #%0000111111000000,D0
000001DA  EC48                     268      LSR.W       #6,D0
000001DC  4EB8 004E                269      JSR         EADecoder_left
000001E0                           270      
000001E0  6000 0876                271      BRA         opdec_return
000001E4                           272      
000001E4                           273  MATCH_MOVE_W
000001E4                           274      ** Move command size into D1
000001E4  123C 0002                275      MOVE.B      #2,D1
000001E8                           276      ** Print command
000001E8  103C 000E                277      MOVE.B      #14,D0
000001EC  43F9 00000A09            278      LEA         pr_MOVE,A1
000001F2  4E4F                     279      TRAP        #15
000001F4                           280      ** Print size
000001F4  43F9 000009FF            281      LEA         pr_WORD,A1
000001FA  4E4F                     282      TRAP        #15
000001FC                           283      ** Print space
000001FC  43F9 000009F8            284      LEA         pr_space,A1
00000202  4E4F                     285      TRAP        #15
00000204                           286      ** Decode right side ea
00000204  1002                     287      MOVE.B      D2,D0
00000206  0200 003F                288      ANDI.B      #%00111111,D0
0000020A  4EB8 0066                289      JSR         EADecoder
0000020E                           290      ** Add comma
0000020E  103C 000E                291      MOVE.B      #14,D0
00000212  43F9 000009FA            292      LEA         pr_comma,A1
00000218  4E4F                     293      TRAP        #15
0000021A                           294      ** Decode left side ea
0000021A  3002                     295      MOVE.W      D2,D0
0000021C  0240 0FC0                296      ANDI.W      #%0000111111000000,D0
00000220  EC48                     297      LSR.W       #6,D0
00000222  4EB8 004E                298      JSR         EADecoder_left
00000226                           299      
00000226  6000 0830                300      BRA         opdec_return
0000022A                           301  
0000022A                           302  MATCH_ADDI_B
0000022A                           303      ** Move command size into D1
0000022A  123C 0002                304      MOVE.B      #2,D1
0000022E                           305      ** Print command
0000022E  103C 000E                306      MOVE.B      #14,D0
00000232  43F8 0184                307      LEA         pr_ADDI,A1
00000236  4E4F                     308      TRAP        #15
00000238                           309      ** Print size
00000238  43F9 000009FC            310      LEA         pr_BYTE,A1
0000023E  4E4F                     311      TRAP        #15
00000240                           312      ** Print space
00000240  43F9 000009F8            313      LEA         pr_space,A1
00000246  4E4F                     314      TRAP        #15
00000248                           315      ** Print Immediate data
00000248  103C 003C                316      MOVE.B      #%00111100,D0
0000024C  4EB8 0066                317      JSR         EADecoder
00000250                           318      ** Add comma
00000250  103C 000E                319      MOVE.B      #14,D0
00000254  43F9 000009FA            320      LEA         pr_comma,A1
0000025A  4E4F                     321      TRAP        #15
0000025C                           322      ** Decode right side ea
0000025C  1002                     323      MOVE.B      D2,D0
0000025E  0200 003F                324      ANDI.B      #%00111111,D0
00000262  4EB8 0066                325      JSR         EADecoder
00000266                           326      
00000266  6000 07F0                327      BRA         opdec_return
0000026A                           328      
0000026A                           329  MATCH_ADDI_W
0000026A                           330      ** Move command size into D1
0000026A  123C 0002                331      MOVE.B      #2,D1
0000026E                           332      ** Print command
0000026E  103C 000E                333      MOVE.B      #14,D0
00000272  43F8 0184                334      LEA         pr_ADDI,A1
00000276  4E4F                     335      TRAP        #15
00000278                           336      ** Print size
00000278  43F9 000009FF            337      LEA         pr_WORD,A1
0000027E  4E4F                     338      TRAP        #15
00000280                           339      ** Print space
00000280  43F9 000009F8            340      LEA         pr_space,A1
00000286  4E4F                     341      TRAP        #15
00000288                           342      ** Print Immediate data
00000288  103C 003C                343      MOVE.B      #%00111100,D0
0000028C  4EB8 0066                344      JSR         EADecoder
00000290                           345      ** Add comma
00000290  103C 000E                346      MOVE.B      #14,D0
00000294  43F9 000009FA            347      LEA         pr_comma,A1
0000029A  4E4F                     348      TRAP        #15
0000029C                           349      ** Decode right side ea
0000029C  1002                     350      MOVE.B      D2,D0
0000029E  0200 003F                351      ANDI.B      #%00111111,D0
000002A2  4EB8 0066                352      JSR         EADecoder
000002A6                           353      
000002A6  6000 07B0                354      BRA         opdec_return
000002AA                           355      
000002AA                           356  MATCH_ADDI_L
000002AA                           357      ** Move command size into D1
000002AA  123C 0004                358      MOVE.B      #4,D1
000002AE                           359      ** Print command
000002AE  103C 000E                360      MOVE.B      #14,D0
000002B2  43F8 0184                361      LEA         pr_ADDI,A1
000002B6  4E4F                     362      TRAP        #15
000002B8                           363      ** Print size
000002B8  43F9 00000A02            364      LEA         pr_LONG,A1
000002BE  4E4F                     365      TRAP        #15
000002C0                           366      ** Print space
000002C0  43F9 000009F8            367      LEA         pr_space,A1
000002C6  4E4F                     368      TRAP        #15
000002C8                           369      ** Print Immediate data
000002C8  103C 003C                370      MOVE.B      #%00111100,D0
000002CC  4EB8 0066                371      JSR         EADecoder
000002D0                           372      ** Add comma
000002D0  103C 000E                373      MOVE.B      #14,D0
000002D4  43F9 000009FA            374      LEA         pr_comma,A1
000002DA  4E4F                     375      TRAP        #15
000002DC                           376      ** Decode right side ea
000002DC  1002                     377      MOVE.B      D2,D0
000002DE  0200 003F                378      ANDI.B      #%00111111,D0
000002E2  4EB8 0066                379      JSR         EADecoder
000002E6                           380      
000002E6  6000 0770                381      BRA         opdec_return
000002EA                           382      
000002EA                           383  MATCH_ADD_TO_REG_B
000002EA                           384      ** Move command size into D1
000002EA  123C 0002                385      MOVE.B      #2,D1
000002EE                           386      ** Print command
000002EE  103C 000E                387      MOVE.B      #14,D0
000002F2  43F8 0180                388      LEA         pr_ADD,A1
000002F6  4E4F                     389      TRAP        #15
000002F8                           390      ** Print size
000002F8  43F9 000009FC            391      LEA         pr_BYTE,A1
000002FE  4E4F                     392      TRAP        #15
00000300                           393      ** Print space
00000300  43F9 000009F8            394      LEA         pr_space,A1
00000306  4E4F                     395      TRAP        #15
00000308                           396      ** Print source
00000308  1002                     397      MOVE.B      D2,D0
0000030A  0200 003F                398      ANDI.B      #%00111111,D0
0000030E  4EB8 0066                399      JSR         EADecoder
00000312                           400      ** Add comma
00000312  103C 000E                401      MOVE.B      #14,D0
00000316  43F9 000009FA            402      LEA         pr_comma,A1
0000031C  4E4F                     403      TRAP        #15
0000031E                           404      ** Print destination
0000031E  3002                     405      MOVE.W      D2,D0
00000320  0240 0E00                406      ANDI.W      #%0000111000000000,D0
00000324  EC48                     407      LSR.W       #6,D0
00000326  4EB8 004E                408      JSR         EADecoder_left
0000032A                           409      
0000032A  6000 072C                410      BRA         opdec_return
0000032E                           411      
0000032E                           412  MATCH_ADD_TO_REG_W
0000032E                           413      ** Move command size into D1
0000032E  123C 0002                414      MOVE.B      #2,D1
00000332                           415      ** Print command
00000332  103C 000E                416      MOVE.B      #14,D0
00000336  43F8 0180                417      LEA         pr_ADD,A1
0000033A  4E4F                     418      TRAP        #15
0000033C                           419      ** Print size
0000033C  43F9 000009FF            420      LEA         pr_WORD,A1
00000342  4E4F                     421      TRAP        #15
00000344                           422      ** Print space
00000344  43F9 000009F8            423      LEA         pr_space,A1
0000034A  4E4F                     424      TRAP        #15
0000034C                           425      ** Print source
0000034C  1002                     426      MOVE.B      D2,D0
0000034E  0200 003F                427      ANDI.B      #%00111111,D0
00000352  4EB8 0066                428      JSR         EADecoder
00000356                           429      ** Add comma
00000356  103C 000E                430      MOVE.B      #14,D0
0000035A  43F9 000009FA            431      LEA         pr_comma,A1
00000360  4E4F                     432      TRAP        #15
00000362                           433      ** Print destination
00000362  3002                     434      MOVE.W      D2,D0
00000364  0240 0E00                435      ANDI.W      #%0000111000000000,D0
00000368  EC48                     436      LSR.W       #6,D0
0000036A  4EB8 004E                437      JSR         EADecoder_left
0000036E                           438      
0000036E  6000 06E8                439      BRA         opdec_return
00000372                           440      
00000372                           441  MATCH_ADD_TO_REG_L
00000372                           442      ** Move command size into D1
00000372  123C 0004                443      MOVE.B      #4,D1
00000376                           444      ** Print command
00000376  103C 000E                445      MOVE.B      #14,D0
0000037A  43F8 0180                446      LEA         pr_ADD,A1
0000037E  4E4F                     447      TRAP        #15
00000380                           448      ** Print size
00000380  43F9 00000A02            449      LEA         pr_LONG,A1
00000386  4E4F                     450      TRAP        #15
00000388                           451      ** Print space
00000388  43F9 000009F8            452      LEA         pr_space,A1
0000038E  4E4F                     453      TRAP        #15
00000390                           454      ** Print source
00000390  1002                     455      MOVE.B      D2,D0
00000392  0200 003F                456      ANDI.B      #%00111111,D0
00000396  4EB8 0066                457      JSR         EADecoder
0000039A                           458      ** Add comma
0000039A  103C 000E                459      MOVE.B      #14,D0
0000039E  43F9 000009FA            460      LEA         pr_comma,A1
000003A4  4E4F                     461      TRAP        #15
000003A6                           462      ** Print destination
000003A6  3002                     463      MOVE.W      D2,D0
000003A8  0240 0E00                464      ANDI.W      #%0000111000000000,D0
000003AC  EC48                     465      LSR.W       #6,D0
000003AE  4EB8 004E                466      JSR         EADecoder_left
000003B2                           467      
000003B2  6000 06A4                468      BRA         opdec_return
000003B6                           469      
000003B6                           470  MATCH_ADD_TO_EA_B
000003B6                           471      ** Move command size into D1
000003B6  123C 0002                472      MOVE.B      #2,D1
000003BA                           473      ** Print command
000003BA  103C 000E                474      MOVE.B      #14,D0
000003BE  43F8 0180                475      LEA         pr_ADD,A1
000003C2  4E4F                     476      TRAP        #15
000003C4                           477      ** Print size
000003C4  43F9 000009FC            478      LEA         pr_BYTE,A1
000003CA  4E4F                     479      TRAP        #15
000003CC                           480      ** Print space
000003CC  43F9 000009F8            481      LEA         pr_space,A1
000003D2  4E4F                     482      TRAP        #15
000003D4                           483      ** Print Source
000003D4  3002                     484      MOVE.W      D2,D0
000003D6  0240 0E00                485      ANDI.W      #%0000111000000000,D0
000003DA  EC48                     486      LSR.W       #6,D0
000003DC  4EB8 004E                487      JSR         EADecoder_left
000003E0                           488      ** Add comma
000003E0  103C 000E                489      MOVE.B      #14,D0
000003E4  43F9 000009FA            490      LEA         pr_comma,A1
000003EA  4E4F                     491      TRAP        #15
000003EC                           492      ** Print source
000003EC  1002                     493      MOVE.B      D2,D0
000003EE  0200 003F                494      ANDI.B      #%00111111,D0
000003F2  4EB8 0066                495      JSR         EADecoder
000003F6                           496      
000003F6  6000 0660                497      BRA         opdec_return
000003FA                           498      
000003FA                           499  MATCH_ADD_TO_EA_W
000003FA                           500      ** Move command size into D1
000003FA  123C 0002                501      MOVE.B      #2,D1
000003FE                           502      ** Print command
000003FE  103C 000E                503      MOVE.B      #14,D0
00000402  43F8 0180                504      LEA         pr_ADD,A1
00000406  4E4F                     505      TRAP        #15
00000408                           506      ** Print size
00000408  43F9 000009FF            507      LEA         pr_WORD,A1
0000040E  4E4F                     508      TRAP        #15
00000410                           509      ** Print space
00000410  43F9 000009F8            510      LEA         pr_space,A1
00000416  4E4F                     511      TRAP        #15
00000418                           512      ** Print Source
00000418  3002                     513      MOVE.W      D2,D0
0000041A  0240 0E00                514      ANDI.W      #%0000111000000000,D0
0000041E  EC48                     515      LSR.W       #6,D0
00000420  4EB8 004E                516      JSR         EADecoder_left
00000424                           517      ** Add comma
00000424  103C 000E                518      MOVE.B      #14,D0
00000428  43F9 000009FA            519      LEA         pr_comma,A1
0000042E  4E4F                     520      TRAP        #15
00000430                           521      ** Print source
00000430  1002                     522      MOVE.B      D2,D0
00000432  0200 003F                523      ANDI.B      #%00111111,D0
00000436  4EB8 0066                524      JSR         EADecoder
0000043A                           525      
0000043A  6000 061C                526      BRA         opdec_return
0000043E                           527      
0000043E                           528  MATCH_ADD_TO_EA_L 
0000043E                           529      ** Move command size into D1
0000043E  123C 0004                530      MOVE.B      #4,D1
00000442                           531      ** Print command
00000442  103C 000E                532      MOVE.B      #14,D0
00000446  43F8 0180                533      LEA         pr_ADD,A1
0000044A  4E4F                     534      TRAP        #15
0000044C                           535      ** Print size
0000044C  43F9 00000A02            536      LEA         pr_LONG,A1
00000452  4E4F                     537      TRAP        #15
00000454                           538      ** Print space
00000454  43F9 000009F8            539      LEA         pr_space,A1
0000045A  4E4F                     540      TRAP        #15
0000045C                           541      ** Print Source
0000045C  3002                     542      MOVE.W      D2,D0
0000045E  0240 0E00                543      ANDI.W      #%0000111000000000,D0
00000462  EC48                     544      LSR.W       #6,D0
00000464  4EB8 004E                545      JSR         EADecoder_left
00000468                           546      ** Add comma
00000468  103C 000E                547      MOVE.B      #14,D0
0000046C  43F9 000009FA            548      LEA         pr_comma,A1
00000472  4E4F                     549      TRAP        #15
00000474                           550      ** Print source
00000474  1002                     551      MOVE.B      D2,D0
00000476  0200 003F                552      ANDI.B      #%00111111,D0
0000047A  4EB8 0066                553      JSR         EADecoder
0000047E                           554      
0000047E  6000 05D8                555      BRA         opdec_return
00000482                           556      
00000482                           557  MATCH_ADDQ_B
00000482                           558      ** Move command size into D1
00000482  123C 0002                559      MOVE.B      #2,D1
00000486                           560      ** Print command
00000486  103C 000E                561      MOVE.B      #14,D0
0000048A  43F8 0189                562      LEA         pr_ADDQ,A1
0000048E  4E4F                     563      TRAP        #15
00000490                           564      ** Print size
00000490  43F9 000009FC            565      LEA         pr_BYTE,A1
00000496  4E4F                     566      TRAP        #15
00000498                           567      ** Print space
00000498  43F9 000009F8            568      LEA         pr_space,A1
0000049E  4E4F                     569      TRAP        #15
000004A0                           570      ** Print Immediate data
000004A0  3602                     571      MOVE.W      D2,D3 * Temporarily move op data
000004A2  3202                     572      MOVE.W      D2,D1
000004A4  0241 0E00                573      ANDI.W      #%0000111000000000,D1
000004A8  143C 0010                574      MOVE.B      #16,D2
000004AC  303C 000F                575      MOVE.W      #15,D0
000004B0  4E4F                     576      TRAP        #15
000004B2                           577      
000004B2  3403                     578      MOVE.W      D3,D2 * Move op data back
000004B4                           579      
000004B4                           580      ** Add comma
000004B4  103C 000E                581      MOVE.B      #14,D0
000004B8  43F9 000009FA            582      LEA         pr_comma,A1
000004BE  4E4F                     583      TRAP        #15
000004C0                           584      ** Decode right side ea
000004C0  1002                     585      MOVE.B      D2,D0
000004C2  0200 003F                586      ANDI.B      #%00111111,D0
000004C6  4EB8 0066                587      JSR         EADecoder
000004CA                           588      
000004CA  6000 058C                589      BRA         opdec_return
000004CE                           590      
000004CE                           591  MATCH_ADDQ_W
000004CE                           592      ** Move command size into D1
000004CE  123C 0002                593      MOVE.B      #2,D1
000004D2                           594      ** Print command
000004D2  103C 000E                595      MOVE.B      #14,D0
000004D6  43F8 0189                596      LEA         pr_ADDQ,A1
000004DA  4E4F                     597      TRAP        #15
000004DC                           598      ** Print size
000004DC  43F9 000009FF            599      LEA         pr_WORD,A1
000004E2  4E4F                     600      TRAP        #15
000004E4                           601      ** Print space
000004E4  43F9 000009F8            602      LEA         pr_space,A1
000004EA  4E4F                     603      TRAP        #15
000004EC                           604      ** Print Immediate data
000004EC  3602                     605      MOVE.W      D2,D3 * Temporarily move op data
000004EE  3202                     606      MOVE.W      D2,D1
000004F0  0241 0E00                607      ANDI.W      #%0000111000000000,D1
000004F4  143C 0010                608      MOVE.B      #16,D2
000004F8  303C 000F                609      MOVE.W      #15,D0
000004FC  4E4F                     610      TRAP        #15
000004FE                           611      
000004FE  3403                     612      MOVE.W      D3,D2 * Move op data back
00000500                           613      
00000500                           614      ** Add comma
00000500  103C 000E                615      MOVE.B      #14,D0
00000504  43F9 000009FA            616      LEA         pr_comma,A1
0000050A  4E4F                     617      TRAP        #15
0000050C                           618      ** Decode right side ea
0000050C  1002                     619      MOVE.B      D2,D0
0000050E  0200 003F                620      ANDI.B      #%00111111,D0
00000512  4EB8 0066                621      JSR         EADecoder
00000516                           622      
00000516  6000 0540                623      BRA         opdec_return
0000051A                           624      
0000051A                           625  MATCH_ADDQ_L
0000051A                           626      ** Move command size into D1
0000051A  123C 0004                627      MOVE.B      #4,D1
0000051E                           628      ** Print command
0000051E  103C 000E                629      MOVE.B      #14,D0
00000522  43F8 0189                630      LEA         pr_ADDQ,A1
00000526  4E4F                     631      TRAP        #15
00000528                           632      ** Print size
00000528  43F9 00000A02            633      LEA         pr_LONG,A1
0000052E  4E4F                     634      TRAP        #15
00000530                           635      ** Print space
00000530  43F9 000009F8            636      LEA         pr_space,A1
00000536  4E4F                     637      TRAP        #15
00000538                           638      ** Print Immediate data
00000538  3602                     639      MOVE.W      D2,D3 * Temporarily move op data
0000053A  3202                     640      MOVE.W      D2,D1
0000053C  0241 0E00                641      ANDI.W      #%0000111000000000,D1
00000540  143C 0010                642      MOVE.B      #16,D2
00000544  303C 000F                643      MOVE.W      #15,D0
00000548  4E4F                     644      TRAP        #15
0000054A                           645      
0000054A  3403                     646      MOVE.W      D3,D2 * Move op data back
0000054C                           647      
0000054C                           648      ** Add comma
0000054C  103C 000E                649      MOVE.B      #14,D0
00000550  43F9 000009FA            650      LEA         pr_comma,A1
00000556  4E4F                     651      TRAP        #15
00000558                           652      ** Decode right side ea
00000558  1002                     653      MOVE.B      D2,D0
0000055A  0200 003F                654      ANDI.B      #%00111111,D0
0000055E  4EB8 0066                655      JSR         EADecoder
00000562                           656      
00000562  6000 04F4                657      BRA         opdec_return
00000566                           658  
00000566                           659  
00000566                           660  -------------------- end include --------------------
00000566                           661                  *INCLUDE 'spencer_opcodes.x68'
00000566                           662                  INCLUDE 'arsany_opcodes.x68'
00000566                           663  MATCH_MOVEA_W
00000566                           664      ** Move command size into D1
00000566  123C 0002                665      MOVE.B      #2,D1
0000056A                           666      ** Print command
0000056A  103C 000E                667      MOVE.B      #14,D0
0000056E  43F9 00000A0E            668      LEA         pr_MOVEA,A1
00000574  4E4F                     669      TRAP        #15
00000576                           670      ** Print size
00000576  43F9 000009FF            671      LEA         pr_WORD,A1
0000057C  4E4F                     672      TRAP        #15
0000057E                           673      ** Print space
0000057E  43F9 000009F8            674      LEA         pr_space,A1
00000584  4E4F                     675      TRAP        #15
00000586                           676      ** Decode right side ea
00000586  1002                     677      MOVE.B      D2,D0
00000588  0200 003F                678      ANDI.B      #%00111111,D0
0000058C  4EB8 0066                679      JSR         EADecoder
00000590                           680      ** Add comma
00000590  103C 000E                681      MOVE.B      #14,D0
00000594  43F9 000009FA            682      LEA         pr_comma,A1
0000059A  4E4F                     683      TRAP        #15
0000059C                           684      ** Decode left side ea
0000059C  3002                     685      MOVE.W      D2,D0
0000059E  0240 0FC0                686      ANDI.W      #%0000111111000000,D0
000005A2  EC88                     687      LSR.L       #6,D0
000005A4  4EB8 004E                688      JSR         EADecoder_left
000005A8                           689      
000005A8  6000 04AE                690      BRA         opdec_return
000005AC                           691  MATCH_MOVEA_L
000005AC                           692      ** Move command size into D1
000005AC  123C 0004                693      MOVE.B      #4,D1
000005B0                           694      ** Print command
000005B0  103C 000E                695      MOVE.B      #14,D0
000005B4  43F9 00000A0E            696      LEA         pr_MOVEA,A1
000005BA  4E4F                     697      TRAP        #15
000005BC                           698      ** Print size
000005BC  43F9 00000A02            699      LEA         pr_LONG,A1
000005C2  4E4F                     700      TRAP        #15
000005C4                           701      ** Print space
000005C4  43F9 000009F8            702      LEA         pr_space,A1
000005CA  4E4F                     703      TRAP        #15
000005CC                           704      ** Decode right side ea
000005CC  1002                     705      MOVE.B      D2,D0
000005CE  0200 003F                706      ANDI.B      #%00111111,D0
000005D2  4EB8 0066                707      JSR         EADecoder
000005D6                           708      ** Add comma
000005D6  103C 000E                709      MOVE.B      #14,D0
000005DA  43F9 000009FA            710      LEA         pr_comma,A1
000005E0  4E4F                     711      TRAP        #15
000005E2                           712      ** Decode left side ea
000005E2  3002                     713      MOVE.W      D2,D0
000005E4  0240 0FC0                714      ANDI.W      #%0000111111000000,D0
000005E8  EC88                     715      LSR.L       #6,D0
000005EA  4EB8 004E                716      JSR         EADecoder_left
000005EE                           717      
000005EE  6000 0468                718      BRA         opdec_return
000005F2                           719  MATCH_ADDA_W
000005F2                           720      ** Move command size into D1
000005F2  123C 0002                721      MOVE.B      #2,D1
000005F6                           722      ** Print command
000005F6  103C 000E                723      MOVE.B      #14,D0
000005FA  43F9 00000A20            724      LEA         pr_ADDA,A1
00000600  4E4F                     725      TRAP        #15
00000602                           726      ** Print size
00000602  43F9 000009FF            727      LEA         pr_WORD,A1
00000608  4E4F                     728      TRAP        #15
0000060A                           729      ** Print space
0000060A  43F9 000009F8            730      LEA         pr_space,A1
00000610  4E4F                     731      TRAP        #15
00000612                           732      ** Decode right side ea
00000612  1002                     733      MOVE.B      D2,D0
00000614  0200 003F                734      ANDI.B      #%00111111,D0
00000618  4EB8 0066                735      JSR         EADecoder
0000061C                           736      ** Add comma
0000061C  103C 000E                737      MOVE.B      #14,D0
00000620  43F9 000009FA            738      LEA         pr_comma,A1
00000626  4E4F                     739      TRAP        #15
00000628                           740      ** Decode left side ea
00000628  3002                     741      MOVE.W      D2,D0
0000062A  0240 0FC0                742      ANDI.W      #%0000111111000000,D0
0000062E  EC88                     743      LSR.L       #6,D0
00000630  4EB8 004E                744      JSR         EADecoder_left
00000634                           745      
00000634  6000 0422                746      BRA         opdec_return
00000638                           747  MATCH_ADDA_L
00000638                           748      ** Move command size into D1
00000638  123C 0004                749      MOVE.B      #4,D1
0000063C                           750      ** Print command
0000063C  103C 000E                751      MOVE.B      #14,D0
00000640  43F9 00000A20            752      LEA         pr_ADDA,A1
00000646  4E4F                     753      TRAP        #15
00000648                           754      ** Print size
00000648  43F9 00000A02            755      LEA         pr_LONG,A1
0000064E  4E4F                     756      TRAP        #15
00000650                           757      ** Print space
00000650  43F9 000009F8            758      LEA         pr_space,A1
00000656  4E4F                     759      TRAP        #15
00000658                           760      ** Decode right side ea
00000658  1002                     761      MOVE.B      D2,D0
0000065A  0200 003F                762      ANDI.B      #%00111111,D0
0000065E  4EB8 0066                763      JSR         EADecoder
00000662                           764      ** Add comma
00000662  103C 000E                765      MOVE.B      #14,D0
00000666  43F9 000009FA            766      LEA         pr_comma,A1
0000066C  4E4F                     767      TRAP        #15
0000066E                           768      ** Decode left side ea
0000066E  3002                     769      MOVE.W      D2,D0
00000670  0240 0FC0                770      ANDI.W      #%0000111111000000,D0
00000674  EC88                     771      LSR.L       #6,D0
00000676  4EB8 004E                772      JSR         EADecoder_left
0000067A                           773      
0000067A  6000 03DC                774      BRA         opdec_return
0000067E                           775  MATCH_MULS_W
0000067E                           776      ** Move command size into D1
0000067E  123C 0002                777      MOVE.B      #2,D1
00000682                           778      ** Print command
00000682  103C 000E                779      MOVE.B      #14,D0
00000686  43F9 00000A25            780      LEA         pr_MULS,A1
0000068C  4E4F                     781      TRAP        #15
0000068E                           782      ** Print size
0000068E  43F9 000009FF            783      LEA         pr_WORD,A1
00000694  4E4F                     784      TRAP        #15
00000696                           785      ** Print space
00000696  43F9 000009F8            786      LEA         pr_space,A1
0000069C  4E4F                     787      TRAP        #15
0000069E                           788      ** Decode right side ea
0000069E  1002                     789      MOVE.B      D2,D0
000006A0  0200 003F                790      ANDI.B      #%00111111,D0
000006A4  4EB8 0066                791      JSR         EADecoder
000006A8                           792      ** Add comma
000006A8  103C 000E                793      MOVE.B      #14,D0
000006AC  43F9 000009FA            794      LEA         pr_comma,A1
000006B2  4E4F                     795      TRAP        #15
000006B4                           796      ** Decode left side ea
000006B4  3002                     797      MOVE.W      D2,D0
000006B6  0240 0FC0                798      ANDI.W      #%0000111111000000,D0
000006BA  EC88                     799      LSR.L       #6,D0
000006BC  4EB8 004E                800      JSR         EADecoder_left    
000006C0                           801      
000006C0  6000 0396                802      BRA         opdec_return
000006C4                           803  MATCH_RTS
000006C4  43F9 00000A2E            804      LEA         pr_RTS,A1
000006CA  103C 000E                805      MOVE.B      #14,D0
000006CE  4E4F                     806      TRAP        #15
000006D0  6000 0386                807      BRA         opdec_return
000006D4                           808  MATCH_CMP_B
000006D4                           809      ** Move command size into D1
000006D4  123C 0002                810      MOVE.B      #2,D1
000006D8                           811      ** Print command
000006D8  103C 000E                812      MOVE.B      #14,D0
000006DC  43F9 00000A32            813      LEA         pr_CMP,A1
000006E2  4E4F                     814      TRAP        #15
000006E4                           815      ** Print size
000006E4  43F9 000009FC            816      LEA         pr_BYTE,A1
000006EA  4E4F                     817      TRAP        #15
000006EC                           818      ** Print space
000006EC  43F9 000009F8            819      LEA         pr_space,A1
000006F2  4E4F                     820      TRAP        #15
000006F4                           821      ** Decode right side ea
000006F4  1002                     822      MOVE.B      D2,D0
000006F6  0200 003F                823      ANDI.B      #%00111111,D0
000006FA  4EB8 0066                824      JSR         EADecoder
000006FE                           825      ** Add comma
000006FE  103C 000E                826      MOVE.B      #14,D0
00000702  43F9 000009FA            827      LEA         pr_comma,A1
00000708  4E4F                     828      TRAP        #15
0000070A                           829      ** Decode left side ea
0000070A  3002                     830      MOVE.W      D2,D0
0000070C  0240 0E00                831      ANDI.W      #%0000111000000000,D0
00000710  EC88                     832      LSR.L       #6,D0
00000712  4EB8 004E                833      JSR         EADecoder_left   
00000716                           834      
00000716  6000 0340                835      BRA         opdec_return
0000071A                           836  MATCH_CMP_W
0000071A                           837      ** Move command size into D1
0000071A  123C 0002                838      MOVE.B      #2,D1
0000071E                           839      ** Print command
0000071E  103C 000E                840      MOVE.B      #14,D0
00000722  43F9 00000A32            841      LEA         pr_CMP,A1
00000728  4E4F                     842      TRAP        #15
0000072A                           843      ** Print size
0000072A  43F9 000009FF            844      LEA         pr_WORD,A1
00000730  4E4F                     845      TRAP        #15
00000732                           846      ** Print space
00000732  43F9 000009F8            847      LEA         pr_space,A1
00000738  4E4F                     848      TRAP        #15
0000073A  4240                     849      CLR         D0
0000073C                           850      ** Decode right side ea
0000073C  1002                     851      MOVE.B      D2,D0
0000073E  0200 003F                852      ANDI.B      #%00111111,D0
00000742  4EB8 0066                853      JSR         EADecoder
00000746                           854      ** Add comma
00000746  103C 000E                855      MOVE.B      #14,D0
0000074A  43F9 000009FA            856      LEA         pr_comma,A1
00000750  4E4F                     857      TRAP        #15
00000752                           858      ** Decode left side ea
00000752  3002                     859      MOVE.W      D2,D0
00000754  0240 0E00                860      ANDI.W      #%0000111000000000,D0
00000758  EC88                     861      LSR.L       #6,D0
0000075A  4EB8 004E                862      JSR         EADecoder_left   
0000075E                           863      
0000075E  6000 02F8                864      BRA         opdec_return
00000762                           865  MATCH_CMP_L
00000762                           866      ** Move command size into D1
00000762  123C 0004                867      MOVE.B      #4,D1
00000766                           868      ** Print command
00000766  103C 000E                869      MOVE.B      #14,D0
0000076A  43F9 00000A32            870      LEA         pr_CMP,A1
00000770  4E4F                     871      TRAP        #15
00000772                           872      ** Print size
00000772  43F9 00000A02            873      LEA         pr_LONG,A1
00000778  4E4F                     874      TRAP        #15
0000077A                           875      ** Print space
0000077A  43F9 000009F8            876      LEA         pr_space,A1
00000780  4E4F                     877      TRAP        #15
00000782                           878      ** Decode right side ea
00000782  1002                     879      MOVE.B      D2,D0
00000784  0200 003F                880      ANDI.B      #%00111111,D0
00000788  4EB8 0066                881      JSR         EADecoder
0000078C                           882      ** Add comma
0000078C  103C 000E                883      MOVE.B      #14,D0
00000790  43F9 000009FA            884      LEA         pr_comma,A1
00000796  4E4F                     885      TRAP        #15
00000798                           886      ** Decode left side ea
00000798  3002                     887      MOVE.W      D2,D0
0000079A  0240 0E00                888      ANDI.W      #%0000111000000000,D0
0000079E  EC88                     889      LSR.L       #6,D0
000007A0  4EB8 004E                890      JSR         EADecoder_left     
000007A4                           891      
000007A4  6000 02B2                892      BRA         opdec_return
000007A8                           893  MATCH_JSR
000007A8                           894      ** Print command
000007A8  103C 000E                895      MOVE.B      #14,D0
000007AC  43F9 00000A36            896      LEA         pr_JSR,A1
000007B2  4E4F                     897      TRAP        #15
000007B4                           898      ** Print space
000007B4  43F9 000009F8            899      LEA         pr_space,A1
000007BA  4E4F                     900      TRAP        #15
000007BC                           901      ** Decode right side ea
000007BC  1002                     902      MOVE.B      D2,D0
000007BE  0200 003F                903      ANDI.B      #%00111111,D0
000007C2  4EB8 0066                904      JSR         EADecoder 
000007C6                           905      
000007C6  6000 0290                906      BRA         opdec_return
000007CA                           907  MATCH_CLR_B 
000007CA                           908      ** Move command size into D1
000007CA  123C 0002                909      MOVE.B      #2,D1
000007CE                           910      ** Print command
000007CE  103C 000E                911      MOVE.B      #14,D0
000007D2  43F9 00000A2A            912      LEA         pr_CLR,A1
000007D8  4E4F                     913      TRAP        #15
000007DA                           914      ** Print size
000007DA  43F9 000009FC            915      LEA         pr_BYTE,A1
000007E0  4E4F                     916      TRAP        #15
000007E2                           917      ** Print space
000007E2  43F9 000009F8            918      LEA         pr_space,A1
000007E8  4E4F                     919      TRAP        #15
000007EA                           920      ** Decode right side ea
000007EA  1002                     921      MOVE.B      D2,D0
000007EC  0200 003F                922      ANDI.B      #%00111111,D0
000007F0  4EB8 0066                923      JSR         EADecoder
000007F4                           924      
000007F4  6000 0262                925      BRA         opdec_return
000007F8                           926  MATCH_CLR_W
000007F8                           927      ** Move command size into D1
000007F8  123C 0002                928      MOVE.B      #2,D1
000007FC                           929      ** Print command
000007FC  103C 000E                930      MOVE.B      #14,D0
00000800  43F9 00000A2A            931      LEA         pr_CLR,A1
00000806  4E4F                     932      TRAP        #15
00000808                           933      ** Print size
00000808  43F9 000009FF            934      LEA         pr_WORD,A1
0000080E  4E4F                     935      TRAP        #15
00000810                           936      ** Print space
00000810  43F9 000009F8            937      LEA         pr_space,A1
00000816  4E4F                     938      TRAP        #15
00000818                           939      ** Decode right side ea
00000818  1002                     940      MOVE.B      D2,D0
0000081A  0200 003F                941      ANDI.B      #%00111111,D0
0000081E  4EB8 0066                942      JSR         EADecoder 
00000822                           943      
00000822  6000 0234                944      BRA         opdec_return
00000826                           945  MATCH_CLR_L
00000826                           946      ** Move command size into D1
00000826  123C 0004                947      MOVE.B      #4,D1
0000082A                           948      ** Print command
0000082A  103C 000E                949      MOVE.B      #14,D0
0000082E  43F9 00000A2A            950      LEA         pr_CLR,A1
00000834  4E4F                     951      TRAP        #15
00000836                           952      ** Print size
00000836  43F9 00000A02            953      LEA         pr_LONG,A1
0000083C  4E4F                     954      TRAP        #15
0000083E                           955      ** Print space
0000083E  43F9 000009F8            956      LEA         pr_space,A1
00000844  4E4F                     957      TRAP        #15
00000846                           958      ** Decode right side ea
00000846  1002                     959      MOVE.B      D2,D0
00000848  0200 003F                960      ANDI.B      #%00111111,D0
0000084C  4EB8 0066                961      JSR         EADecoder 
00000850                           962      
00000850  6000 0206                963      BRA         opdec_return
00000854                           964  MATCH_AND_DN_B
00000854                           965      ** Move command size into D1
00000854  123C 0002                966      MOVE.B      #2,D1
00000858                           967      ** Print command
00000858  103C 000E                968      MOVE.B      #14,D0
0000085C  43F9 00000A3A            969      LEA         pr_AND,A1
00000862  4E4F                     970      TRAP        #15
00000864                           971      ** Print size
00000864  43F9 000009FC            972      LEA         pr_BYTE,A1
0000086A  4E4F                     973      TRAP        #15
0000086C                           974      ** Print space
0000086C  43F9 000009F8            975      LEA         pr_space,A1
00000872  4E4F                     976      TRAP        #15
00000874                           977      ** Decode right side ea
00000874  1002                     978      MOVE.B      D2,D0
00000876  0200 003F                979      ANDI.B      #%00111111,D0
0000087A  4EB8 0066                980      JSR         EADecoder
0000087E                           981      ** Add comma
0000087E  103C 000E                982      MOVE.B      #14,D0
00000882  43F9 000009FA            983      LEA         pr_comma,A1
00000888  4E4F                     984      TRAP        #15
0000088A                           985      ** Decode left side ea
0000088A  3002                     986      MOVE.W      D2,D0
0000088C  0240 0E00                987      ANDI.W      #%0000111000000000,D0
00000890  EC88                     988      LSR.L       #6,D0
00000892  4EB8 004E                989      JSR         EADecoder_left   
00000896                           990      
00000896  6000 01C0                991      BRA         opdec_return
0000089A                           992  MATCH_AND_DN_W
0000089A                           993      ** Move command size into D1
0000089A  123C 0002                994      MOVE.B      #2,D1
0000089E                           995      ** Print command
0000089E  103C 000E                996      MOVE.B      #14,D0
000008A2  43F9 00000A3A            997      LEA         pr_AND,A1
000008A8  4E4F                     998      TRAP        #15
000008AA                           999      ** Print size
000008AA  43F9 000009FF           1000      LEA         pr_WORD,A1
000008B0  4E4F                    1001      TRAP        #15
000008B2                          1002      ** Print space
000008B2  43F9 000009F8           1003      LEA         pr_space,A1
000008B8  4E4F                    1004      TRAP        #15
000008BA                          1005      ** Decode right side ea
000008BA  1002                    1006      MOVE.B      D2,D0
000008BC  0200 003F               1007      ANDI.B      #%00111111,D0
000008C0  4EB8 0066               1008      JSR         EADecoder
000008C4                          1009      ** Add comma
000008C4  103C 000E               1010      MOVE.B      #14,D0
000008C8  43F9 000009FA           1011      LEA         pr_comma,A1
000008CE  4E4F                    1012      TRAP        #15
000008D0                          1013      ** Decode left side ea
000008D0  3002                    1014      MOVE.W      D2,D0
000008D2  0240 0E00               1015      ANDI.W      #%0000111000000000,D0
000008D6  EC88                    1016      LSR.L       #6,D0
000008D8  4EB8 004E               1017      JSR         EADecoder_left  
000008DC                          1018      
000008DC  6000 017A               1019      BRA         opdec_return
000008E0                          1020  MATCH_AND_DN_L
000008E0                          1021      ** Move command size into D1
000008E0  123C 0004               1022      MOVE.B      #4,D1
000008E4                          1023      ** Print command
000008E4  103C 000E               1024      MOVE.B      #14,D0
000008E8  43F9 00000A3A           1025      LEA         pr_AND,A1
000008EE  4E4F                    1026      TRAP        #15
000008F0                          1027      ** Print size
000008F0  43F9 00000A02           1028      LEA         pr_LONG,A1
000008F6  4E4F                    1029      TRAP        #15
000008F8                          1030      ** Print space
000008F8  43F9 000009F8           1031      LEA         pr_space,A1
000008FE  4E4F                    1032      TRAP        #15
00000900                          1033      ** Decode right side ea
00000900  1002                    1034      MOVE.B      D2,D0
00000902  0200 003F               1035      ANDI.B      #%00111111,D0
00000906  4EB8 0066               1036      JSR         EADecoder
0000090A                          1037      ** Add comma
0000090A  103C 000E               1038      MOVE.B      #14,D0
0000090E  43F9 000009FA           1039      LEA         pr_comma,A1
00000914  4E4F                    1040      TRAP        #15
00000916                          1041      ** Decode left side ea
00000916  3002                    1042      MOVE.W      D2,D0
00000918  0240 0E00               1043      ANDI.W      #%0000111000000000,D0
0000091C  EC88                    1044      LSR.L       #6,D0
0000091E  4EB8 004E               1045      JSR         EADecoder_left  
00000922                          1046      
00000922  6000 0134               1047      BRA         opdec_return
00000926                          1048      
00000926                          1049  MATCH_AND_EA_B
00000926                          1050      ** Move command size into D1
00000926  123C 0002               1051      MOVE.B      #2,D1
0000092A                          1052      ** Print command
0000092A  103C 000E               1053      MOVE.B      #14,D0
0000092E  43F9 00000A3A           1054      LEA         pr_AND,A1
00000934  4E4F                    1055      TRAP        #15
00000936                          1056      ** Print size
00000936  43F9 000009FC           1057      LEA         pr_BYTE,A1
0000093C  4E4F                    1058      TRAP        #15
0000093E                          1059      ** Print space
0000093E  43F9 000009F8           1060      LEA         pr_space,A1
00000944  4E4F                    1061      TRAP        #15
00000946                          1062      ** Decode left side ea
00000946  3002                    1063      MOVE.W      D2,D0
00000948  0240 0E00               1064      ANDI.W      #%0000111000000000,D0
0000094C  EC88                    1065      LSR.L       #6,D0
0000094E  4EB8 004E               1066      JSR         EADecoder_left
00000952                          1067      ** Add comma
00000952  103C 000E               1068      MOVE.B      #14,D0
00000956  43F9 000009FA           1069      LEA         pr_comma,A1
0000095C  4E4F                    1070      TRAP        #15
0000095E                          1071      ** Decode right side ea
0000095E  1002                    1072      MOVE.B      D2,D0
00000960  0200 003F               1073      ANDI.B      #%00111111,D0
00000964  4EB8 0066               1074      JSR         EADecoder
00000968                          1075      
00000968  6000 00EE               1076      BRA         opdec_return
0000096C                          1077  MATCH_AND_EA_W
0000096C                          1078      ** Move command size into D1
0000096C  123C 0002               1079      MOVE.B      #2,D1
00000970                          1080      ** Print command
00000970  103C 000E               1081      MOVE.B      #14,D0
00000974  43F9 00000A3A           1082      LEA         pr_AND,A1
0000097A  4E4F                    1083      TRAP        #15
0000097C                          1084      ** Print size
0000097C  43F9 000009FF           1085      LEA         pr_WORD,A1
00000982  4E4F                    1086      TRAP        #15
00000984                          1087      ** Print space
00000984  43F9 000009F8           1088      LEA         pr_space,A1
0000098A  4E4F                    1089      TRAP        #15
0000098C                          1090      ** Decode left side ea
0000098C  3002                    1091      MOVE.W      D2,D0
0000098E  0240 0E00               1092      ANDI.W      #%0000111000000000,D0
00000992  EC88                    1093      LSR.L       #6,D0
00000994  4EB8 004E               1094      JSR         EADecoder_left
00000998                          1095      ** Add comma
00000998  103C 000E               1096      MOVE.B      #14,D0
0000099C  43F9 000009FA           1097      LEA         pr_comma,A1
000009A2  4E4F                    1098      TRAP        #15
000009A4                          1099      ** Decode right side ea
000009A4  1002                    1100      MOVE.B      D2,D0
000009A6  0200 003F               1101      ANDI.B      #%00111111,D0
000009AA  4EB8 0066               1102      JSR         EADecoder
000009AE                          1103      
000009AE  6000 00A8               1104      BRA         opdec_return
000009B2                          1105  MATCH_AND_EA_L
000009B2                          1106      ** Move command size into D1
000009B2  123C 0004               1107      MOVE.B      #4,D1
000009B6                          1108      ** Print command
000009B6  103C 000E               1109      MOVE.B      #14,D0
000009BA  43F9 00000A3A           1110      LEA         pr_AND,A1
000009C0  4E4F                    1111      TRAP        #15
000009C2                          1112      ** Print size
000009C2  43F9 00000A02           1113      LEA         pr_LONG,A1
000009C8  4E4F                    1114      TRAP        #15
000009CA                          1115      ** Print space
000009CA  43F9 000009F8           1116      LEA         pr_space,A1
000009D0  4E4F                    1117      TRAP        #15
000009D2                          1118      ** Decode left side ea
000009D2  3002                    1119      MOVE.W      D2,D0
000009D4  0240 0E00               1120      ANDI.W      #%0000111000000000,D0
000009D8  EC88                    1121      LSR.L       #6,D0
000009DA  4EB8 004E               1122      JSR         EADecoder_left
000009DE                          1123      ** Add comma
000009DE  103C 000E               1124      MOVE.B      #14,D0
000009E2  43F9 000009FA           1125      LEA         pr_comma,A1
000009E8  4E4F                    1126      TRAP        #15
000009EA                          1127      ** Decode right side ea
000009EA  1002                    1128      MOVE.B      D2,D0
000009EC  0200 003F               1129      ANDI.B      #%00111111,D0
000009F0  4EB8 0066               1130      JSR         EADecoder
000009F4                          1131      
000009F4  6000 0062               1132      BRA         opdec_return
000009F8                          1133  
000009F8                          1134  
000009F8                          1135  
000009F8                          1136  
000009F8                          1137  -------------------- end include --------------------
000009F8                          1138  
000009F8  =00004E71               1139  NOP             EQU $4E71
000009F8  =00000001               1140  MOVE_B          EQU %0001
000009F8  =00000003               1141  MOVE_W          EQU %0011
000009F8  =00000002               1142  MOVE_L          EQU %0010
000009F8  =00000001               1143  MOVEA_WL        EQU %001 
000009F8  =00000007               1144  MOVEQ_          EQU %0111
000009F8  =00000122               1145  MOVEM_TO_MEM_W  EQU %0100100010
000009F8  =00000123               1146  MOVEM_TO_MEM_L  EQU %0100100011
000009F8  =00000132               1147  MOVEM_TO_REG_W  EQU %0100110010
000009F8  =00000133               1148  MOVEM_TO_REG_L  EQU %0100110011
000009F8                          1149  
000009F8  =00000018               1150  ADDI_B          EQU %0000011000
000009F8  =00000019               1151  ADDI_W          EQU %0000011001
000009F8  =0000001A               1152  ADDI_L          EQU %0000011010
000009F8                          1153  
000009F8  =0000000D               1154  ADD_ADDA        EQU %1101
000009F8  =00000000               1155  ADD_TO_REG_B    EQU %000
000009F8  =00000001               1156  ADD_TO_REG_W    EQU %001
000009F8  =00000002               1157  ADD_TO_REG_L    EQU %010
000009F8  =00000004               1158  ADD_TO_EA_B     EQU %100
000009F8  =00000005               1159  ADD_TO_EA_W     EQU %101
000009F8  =00000006               1160  ADD_TO_EA_L     EQU %110
000009F8  =00000003               1161  ADDA_W          EQU %011
000009F8  =00000007               1162  ADDA_L          EQU %111
000009F8                          1163  
000009F8  =00000005               1164  ADDQ            EQU %0101
000009F8  =00000000               1165  ADDQ_B          EQU %000
000009F8  =00000001               1166  ADDQ_W          EQU %001
000009F8  =00000002               1167  ADDQ_L          EQU %010
000009F8                          1168  
000009F8  =0000000C               1169  MULS_W_AND      EQU %1100
000009F8  =00000007               1170  MULS_OP_W       EQU %111 
000009F8                          1171  
000009F8  =00000009               1172  SUB             EQU %1001
000009F8  =00000000               1173  SUB_TO_DN_B     EQU %000
000009F8  =00000001               1174  SUB_TO_DN_W     EQU %001
000009F8  =00000002               1175  SUB_TO_DN_L     EQU %010
000009F8  =00000004               1176  SUB_TO_EA_B     EQU %100
000009F8  =00000005               1177  SUB_TO_EA_W     EQU %101
000009F8  =00000006               1178  SUB_TO_EA_L     EQU %110
000009F8                          1179  
000009F8  =00000008               1180  DIVU_OR         EQU %1000
000009F8  =00000003               1181  DIVU            EQU %011
000009F8                          1182  
000009F8  =00000000               1183  DN_B            EQU %000
000009F8  =00000001               1184  DN_W            EQU %001
000009F8  =00000002               1185  DN_L            EQU %010
000009F8  =00000004               1186  EA_B            EQU %100
000009F8  =00000005               1187  EA_W            EQU %101
000009F8  =00000006               1188  EA_L            EQU %110
000009F8                          1189  
000009F8  =00000004               1190  MULS_LEA_CLR_JSR_RTS    EQU %0100
000009F8  =00004E75               1191  RTS             EQU $4E75
000009F8  =00000007               1192  LEA             EQU %111
000009F8  =0000013A               1193  JSR             EQU %0100111010
000009F8  =00000108               1194  CLR_B           EQU %0100001000
000009F8  =00000109               1195  CLR_W           EQU %0100001001
000009F8  =0000010A               1196  CLR_L           EQU %0100001010
000009F8  =00000130               1197  MULS_L          EQU %0100110000
000009F8                          1198  
000009F8  =0000038F               1199  LSL             EQU %1110001111
000009F8  =0000038B               1200  LSR             EQU %1110001011
000009F8  =00000387               1201  ASR             EQU %1110000111
000009F8  =00000383               1202  ASL             EQU %1110000011
000009F8  =0000039F               1203  ROL             EQU %1110011111
000009F8  =0000039B               1204  ROR             EQU %1110011011
000009F8                          1205  
000009F8  =0000000B               1206  CMP             EQU %1011
000009F8  =00000000               1207  CMP_B           EQU %000
000009F8  =00000001               1208  CMP_W           EQU %001
000009F8  =00000002               1209  CMP_L           EQU %010
000009F8                          1210  
000009F8  =00000006               1211  BCC             EQU %0110
000009F8  =00000000               1212  BCC_16          EQU %00000000
000009F8  =000000FF               1213  BCC_32          EQU $FF
000009F8  =00000000               1214  CC_T                EQU %0000
000009F8  =00000001               1215  CC_F                EQU %0001
000009F8  =00000002               1216  CC_HI           EQU %0010
000009F8  =00000003               1217  CC_LS           EQU %0011
000009F8  =00000004               1218  CC_CC           EQU %0100
000009F8  =00000005               1219  CC_CS           EQU %0101
000009F8  =00000006               1220  CC_NE           EQU %0110
000009F8  =00000007               1221  CC_EQ           EQU %0111
000009F8  =00000008               1222  CC_VC           EQU %1000
000009F8  =00000009               1223  CC_VS           EQU %1001
000009F8  =0000000A               1224  CC_PL           EQU %1010
000009F8  =0000000B               1225  CC_MI           EQU %1011
000009F8  =0000000C               1226  CC_GE           EQU %1100
000009F8  =0000000D               1227  CC_LT           EQU %1101
000009F8  =0000000E               1228  CC_GT           EQU %1110
000009F8  =0000000F               1229  CC_LE           EQU %1111
000009F8                          1230  
000009F8= 20 00                   1231  pr_space    DC.B    ' ',0
000009FA= 2C 00                   1232  pr_comma    DC.B    ',',0
000009FC= 2E 42 00                1233  pr_BYTE     DC.B    '.B',0
000009FF= 2E 57 00                1234  pr_WORD     DC.B    '.W',0
00000A02= 2E 4C 00                1235  pr_LONG     DC.B    '.L',0
00000A05                          1236  
00000A05= 4E 4F 50 00             1237  pr_NOP      DC.B    'NOP',0
00000A09= 4D 4F 56 45 00          1238  pr_MOVE     DC.B    'MOVE',0
00000A0E= 4D 4F 56 45 41 00       1239  pr_MOVEA    DC.B    'MOVEA',0
00000A14= 4D 4F 56 45 51 00       1240  pr_MOVEQ    DC.B    'MOVEQ',0
00000A1A= 4D 4F 56 45 4D 00       1241  pr_MOVEM    DC.B    'MOVEM',0
00000A20= 41 44 44 41 00          1242  pr_ADDA     DC.B    'ADDA',0
00000A25= 4D 55 4C 53 00          1243  pr_MULS     DC.B    'MULS',0
00000A2A= 43 4C 52 00             1244  pr_CLR      DC.B    'CLR',0
00000A2E= 52 54 53 00             1245  pr_RTS      DC.B    'RTS',0
00000A32= 43 4D 50 00             1246  pr_CMP      DC.B    'CMP',0
00000A36= 4A 53 52 00             1247  pr_JSR      DC.B    'JSR',0
00000A3A= 41 4E 44 00             1248  pr_AND      DC.B    'AND',0
00000A3E                          1249  
00000A3E                          1250  
00000A3E                          1251  
00000A3E                          1252  OpDecoder
00000A3E  48E7 FF7E               1253      MOVEM.L     D0-D7/A1-A6, -(SP)
00000A42  4241                    1254      CLR         D1
00000A44  6000 0078               1255      BRA         CHECK_NOP
00000A48                          1256  NOP_RETURN
00000A48  6000 0082               1257      BRA         CHECK_FOUR_BIT_SIG
00000A4C                          1258  FOUR_BIT_RETURN
00000A4C  6000 0434               1259      BRA         CHECK_MOVEM
00000A50                          1260  MOVEM_RETURN
00000A50  6000 04D8               1261      BRA         CHECK_ADDI
00000A54                          1262  ADDI_RETURN
00000A54  6000 0028               1263      BRA         CHECK_SHIFT_AND_ROTATE
00000A58                          1264      
00000A58                          1265  opdec_return
00000A58  4CDF 7EFF               1266      MOVEM.L     (SP)+, D0-D7/A1-A6
00000A5C  4E75                    1267      RTS
00000A5E                          1268  
00000A5E                          1269  ReadFirstFourBits
00000A5E                          1270  
00000A5E  48A7 2000               1271      MOVEM.W     D2, -(SP)
00000A62                          1272  
00000A62  1E3C 000C               1273      MOVE.B      #12,D7 
00000A66  EE6A                    1274      LSR.W       D7,D2 
00000A68  1602                    1275      MOVE.B      D2,D3
00000A6A                          1276      
00000A6A  4C9F 0004               1277      MOVEM.W     (SP)+,D2
00000A6E  4E75                    1278      RTS
00000A70                          1279      
00000A70                          1280  ReadFirstTenBits
00000A70                          1281      
00000A70  48A7 2000               1282      MOVEM.W     D2, -(SP)
00000A74                          1283   
00000A74  EC4A                    1284      LSR.W       #6,D2 
00000A76  3602                    1285      MOVE.W      D2,D3
00000A78                          1286      
00000A78  4C9F 0004               1287      MOVEM.W     (SP)+,D2
00000A7C  4E75                    1288      RTS
00000A7E                          1289  CHECK_SHIFT_AND_ROTATE
00000A7E                          1290  
00000A7E  61F0                    1291      BSR         ReadFirstTenBits
00000A80                          1292      
00000A80  3C3C 038F               1293      MOVE.W      #LSL,D6
00000A84  BC43                    1294      CMP.W       D3,D6
00000A86  6700 056C               1295      BEQ         MATCH_LSL
00000A8A                          1296      
00000A8A  3C3C 038B               1297      MOVE.W      #LSR,D6
00000A8E  BC43                    1298      CMP.W       D3,D6
00000A90  6700 0564               1299      BEQ         MATCH_LSR
00000A94                          1300      
00000A94  3C3C 0387               1301      MOVE.W      #ASR,D6
00000A98  BC43                    1302      CMP.W       D3,D6
00000A9A  6700 055C               1303      BEQ         MATCH_ASR
00000A9E                          1304      
00000A9E  3C3C 0383               1305      MOVE.W      #ASL,D6
00000AA2  BC43                    1306      CMP.W       D3,D6
00000AA4  6700 0554               1307      BEQ         MATCH_ASL
00000AA8                          1308      
00000AA8  3C3C 039F               1309      MOVE.W      #ROL,D6
00000AAC  BC43                    1310      CMP.W       D3,D6
00000AAE  6700 054C               1311      BEQ         MATCH_ROL
00000AB2                          1312      
00000AB2  3C3C 039B               1313      MOVE.W      #ROR,D6
00000AB6  BC43                    1314      CMP.W       D3,D6
00000AB8  6700 0544               1315      BEQ         MATCH_ROR
00000ABC                          1316      
00000ABC  609A                    1317      BRA         opdec_return
00000ABE                          1318      
00000ABE                          1319  CHECK_NOP
00000ABE                          1320      
00000ABE  3C3C 4E71               1321      MOVE.W      #NOP,D6
00000AC2  BC42                    1322      CMP.W       D2,D6
00000AC4  6700 F6C8               1323      BEQ         MATCH_NOP
00000AC8                          1324      
00000AC8  6000 FF7E               1325      BRA         NOP_RETURN
00000ACC                          1326  
00000ACC                          1327  CHECK_FOUR_BIT_SIG
00000ACC                          1328  
00000ACC  6190                    1329      BSR         ReadFirstFourBits
00000ACE                          1330      
00000ACE  1C3C 0001               1331      MOVE.B      #MOVE_B,D6
00000AD2  BC03                    1332      CMP.B       D3,D6
00000AD4  6700 F6C8               1333      BEQ         MATCH_MOVE_B
00000AD8                          1334  
00000AD8  1C3C 0003               1335      MOVE.B      #MOVE_W,D6
00000ADC  BC03                    1336      CMP.B       D3,D6
00000ADE  6700 04B0               1337      BEQ         CHECK_MOVEA_W_AND_MOVE_W
00000AE2                          1338      
00000AE2  1C3C 0002               1339      MOVE.B      #MOVE_L,D6
00000AE6  BC03                    1340      CMP.B       D3,D6
00000AE8  6700 04D0               1341      BEQ         CHECK_MOVEA_L_AND_MOVE_L
00000AEC                          1342   
00000AEC  1C3C 0007               1343      MOVE.B      #MOVEQ_,D6
00000AF0  BC03                    1344      CMP.B       D3,D6
00000AF2  6700 04D8               1345      BEQ         MATCH_MOVEQ
00000AF6                          1346      
00000AF6  1C3C 000D               1347      MOVE.B      #ADD_ADDA,D6
00000AFA  BC03                    1348      CMP.B       D3,D6
00000AFC  6700 03B4               1349      BEQ         CHECK_ADD_ADDA
00000B00                          1350      
00000B00  1C3C 0005               1351      MOVE.B      #ADDQ,D6
00000B04  BC03                    1352      CMP.B       D3,D6
00000B06  6700 0400               1353      BEQ         CHECK_ADDQ
00000B0A                          1354      
00000B0A  1C3C 0009               1355      MOVE.B      #SUB,D6
00000B0E  BC03                    1356      CMP.B       D3,D6
00000B10  6700 043E               1357      BEQ         CHECK_SUB
00000B14                          1358      
00000B14  1C3C 0008               1359      MOVE.B      #DIVU_OR,D6
00000B18  BC03                    1360      CMP.B       D3,D6
00000B1A  6700 0318               1361      BEQ         CHECK_DIVU_OR
00000B1E                          1362      
00000B1E  1C3C 000C               1363      MOVE.B      #MULS_W_AND,D6
00000B22  BC03                    1364      CMP.B       D3,D6
00000B24  6700 02C0               1365      BEQ         CHECK_MULS_W_AND
00000B28                          1366      
00000B28  1C3C 0004               1367      MOVE.B      #MULS_LEA_CLR_JSR_RTS,D6
00000B2C  BC03                    1368      CMP.B       D3,D6
00000B2E  6700 0264               1369      BEQ         CHECK_MULS_LEA_CLR_JSR_RTS
00000B32                          1370      
00000B32  1C3C 000B               1371      MOVE.B      #CMP,D6
00000B36  BC03                    1372      CMP.B       D3,D6
00000B38  6700 0234               1373      BEQ         CHECK_CMP
00000B3C                          1374      
00000B3C  1C3C 0006               1375      MOVE.B      #BCC,D6
00000B40  BC03                    1376      CMP.B       D3,D6
00000B42  6700 0006               1377      BEQ         CHECK_BCC
00000B46                          1378      
00000B46  6000 FF04               1379      BRA         FOUR_BIT_RETURN
00000B4A                          1380  CHECK_BCC
00000B4A                          1381      
00000B4A  1C3C 0000               1382      MOVE.B      #BCC_16,D6
00000B4E  BC02                    1383      CMP.B       D2,D6
00000B50  6700 00B8               1384      BEQ         CHECK_BCC_16
00000B54                          1385      
00000B54  1C3C 00FF               1386      MOVE.B      #BCC_32,D6
00000B58  BC02                    1387      CMP.B       D2,D6
00000B5A  6700 0156               1388      BEQ         CHECK_BCC_32
00000B5E                          1389      
00000B5E  6000 0002               1390      BRA         CHECK_BCC_8
00000B62                          1391      
00000B62                          1392  CHECK_BCC_8
00000B62                          1393      
00000B62  6100 01F6               1394      BSR         ISOLATE_CC_CODE_FOR_BCC
00000B66                          1395      
00000B66  1C3C 0000               1396      MOVE.B      #CC_T,D6
00000B6A  BC03                    1397      CMP.B       D3,D6
00000B6C  6700 0492               1398      BEQ         MATCH_CC_T_8
00000B70                          1399      
00000B70  1C3C 0001               1400      MOVE.B      #CC_F,D6
00000B74  BC03                    1401      CMP.B       D3,D6
00000B76  6700 048E               1402      BEQ         MATCH_CC_F_8
00000B7A                          1403      
00000B7A  1C3C 0002               1404      MOVE.B      #CC_HI,D6
00000B7E  BC03                    1405      CMP.B       D3,D6
00000B80  6700 048A               1406      BEQ         MATCH_CC_HI_8
00000B84                          1407      
00000B84  1C3C 0003               1408      MOVE.B      #CC_LS,D6
00000B88  BC03                    1409      CMP.B       D3,D6
00000B8A  6700 0486               1410      BEQ         MATCH_CC_LS_8
00000B8E                          1411      
00000B8E  1C3C 0004               1412      MOVE.B      #CC_CC,D6
00000B92  BC03                    1413      CMP.B       D3,D6
00000B94  6700 0482               1414      BEQ         MATCH_CC_CC_8
00000B98                          1415      
00000B98  1C3C 0005               1416      MOVE.B      #CC_CS,D6
00000B9C  BC03                    1417      CMP.B       D3,D6
00000B9E  6700 047E               1418      BEQ         MATCH_CC_CS_8
00000BA2                          1419      
00000BA2  1C3C 0006               1420      MOVE.B      #CC_NE,D6
00000BA6  BC03                    1421      CMP.B       D3,D6
00000BA8  6700 047A               1422      BEQ         MATCH_CC_NE_8
00000BAC                          1423      
00000BAC  1C3C 0007               1424      MOVE.B      #CC_EQ,D6
00000BB0  BC03                    1425      CMP.B       D3,D6
00000BB2  6700 0476               1426      BEQ         MATCH_CC_EQ_8
00000BB6                          1427      
00000BB6  1C3C 0008               1428      MOVE.B      #CC_VC,D6
00000BBA  BC03                    1429      CMP.B       D3,D6
00000BBC  6700 0472               1430      BEQ         MATCH_CC_VC_8
00000BC0                          1431      
00000BC0  1C3C 0009               1432      MOVE.B      #CC_VS,D6
00000BC4  BC03                    1433      CMP.B       D3,D6
00000BC6  6700 046E               1434      BEQ         MATCH_CC_VS_8
00000BCA                          1435      
00000BCA  1C3C 000A               1436      MOVE.B      #CC_PL,D6
00000BCE  BC03                    1437      CMP.B       D3,D6
00000BD0  6700 046A               1438      BEQ         MATCH_CC_PL_8
00000BD4                          1439      
00000BD4  1C3C 000B               1440      MOVE.B      #CC_MI,D6
00000BD8  BC03                    1441      CMP.B       D3,D6
00000BDA  6700 0466               1442      BEQ         MATCH_CC_MI_8
00000BDE                          1443      
00000BDE  1C3C 000C               1444      MOVE.B      #CC_GE,D6
00000BE2  BC03                    1445      CMP.B       D3,D6
00000BE4  6700 0462               1446      BEQ         MATCH_CC_GE_8
00000BE8                          1447      
00000BE8  1C3C 000D               1448      MOVE.B      #CC_LT,D6
00000BEC  BC03                    1449      CMP.B       D3,D6
00000BEE  6700 045E               1450      BEQ         MATCH_CC_LT_8
00000BF2                          1451      
00000BF2  1C3C 000E               1452      MOVE.B      #CC_GT,D6
00000BF6  BC03                    1453      CMP.B       D3,D6
00000BF8  6700 045A               1454      BEQ         MATCH_CC_GT_8
00000BFC                          1455      
00000BFC  1C3C 000F               1456      MOVE.B      #CC_LE,D6
00000C00  BC03                    1457      CMP.B       D3,D6
00000C02  6700 0456               1458      BEQ         MATCH_CC_LE_8
00000C06                          1459  
00000C06  6000 0458               1460      BRA         ERROR
00000C0A                          1461      
00000C0A                          1462  CHECK_BCC_16
00000C0A                          1463  
00000C0A  6100 014E               1464      BSR         ISOLATE_CC_CODE_FOR_BCC
00000C0E                          1465      
00000C0E  1C3C 0000               1466      MOVE.B      #CC_T,D6
00000C12  BC03                    1467      CMP.B       D3,D6
00000C14  6700 03EC               1468      BEQ         MATCH_CC_T_16
00000C18                          1469      
00000C18  1C3C 0001               1470      MOVE.B      #CC_F,D6
00000C1C  BC03                    1471      CMP.B       D3,D6
00000C1E  6700 03E8               1472      BEQ         MATCH_CC_F_16
00000C22                          1473      
00000C22  1C3C 0002               1474      MOVE.B      #CC_HI,D6
00000C26  BC03                    1475      CMP.B       D3,D6
00000C28  6700 03E4               1476      BEQ         MATCH_CC_HI_16
00000C2C                          1477      
00000C2C  1C3C 0003               1478      MOVE.B      #CC_LS,D6
00000C30  BC03                    1479      CMP.B       D3,D6
00000C32  6700 03E0               1480      BEQ         MATCH_CC_LS_16
00000C36                          1481      
00000C36  1C3C 0004               1482      MOVE.B      #CC_CC,D6
00000C3A  BC03                    1483      CMP.B       D3,D6
00000C3C  6700 03DC               1484      BEQ         MATCH_CC_CC_16
00000C40                          1485      
00000C40  1C3C 0005               1486      MOVE.B      #CC_CS,D6
00000C44  BC03                    1487      CMP.B       D3,D6
00000C46  6700 03D8               1488      BEQ         MATCH_CC_CS_16
00000C4A                          1489      
00000C4A  1C3C 0006               1490      MOVE.B      #CC_NE,D6
00000C4E  BC03                    1491      CMP.B       D3,D6
00000C50  6700 03D4               1492      BEQ         MATCH_CC_NE_16
00000C54                          1493      
00000C54  1C3C 0007               1494      MOVE.B      #CC_EQ,D6
00000C58  BC03                    1495      CMP.B       D3,D6
00000C5A  6700 03D0               1496      BEQ         MATCH_CC_EQ_16
00000C5E                          1497      
00000C5E  1C3C 0008               1498      MOVE.B      #CC_VC,D6
00000C62  BC03                    1499      CMP.B       D3,D6
00000C64  6700 03CC               1500      BEQ         MATCH_CC_VC_16
00000C68                          1501      
00000C68  1C3C 0009               1502      MOVE.B      #CC_VS,D6
00000C6C  BC03                    1503      CMP.B       D3,D6
00000C6E  6700 03C8               1504      BEQ         MATCH_CC_VS_16
00000C72                          1505      
00000C72  1C3C 000A               1506      MOVE.B      #CC_PL,D6
00000C76  BC03                    1507      CMP.B       D3,D6
00000C78  6700 03C4               1508      BEQ         MATCH_CC_PL_16
00000C7C                          1509      
00000C7C  1C3C 000B               1510      MOVE.B      #CC_MI,D6
00000C80  BC03                    1511      CMP.B       D3,D6
00000C82  6700 03C0               1512      BEQ         MATCH_CC_MI_16
00000C86                          1513      
00000C86  1C3C 000C               1514      MOVE.B      #CC_GE,D6
00000C8A  BC03                    1515      CMP.B       D3,D6
00000C8C  6700 03BC               1516      BEQ         MATCH_CC_GE_16
00000C90                          1517      
00000C90  1C3C 000D               1518      MOVE.B      #CC_LT,D6
00000C94  BC03                    1519      CMP.B       D3,D6
00000C96  6700 03B8               1520      BEQ         MATCH_CC_LT_16
00000C9A                          1521      
00000C9A  1C3C 000E               1522      MOVE.B      #CC_GT,D6
00000C9E  BC03                    1523      CMP.B       D3,D6
00000CA0  6700 03B4               1524      BEQ         MATCH_CC_GT_16
00000CA4                          1525      
00000CA4  1C3C 000F               1526      MOVE.B      #CC_LE,D6
00000CA8  BC03                    1527      CMP.B       D3,D6
00000CAA  6700 03B0               1528      BEQ         MATCH_CC_LE_16
00000CAE                          1529  
00000CAE  6000 03B0               1530      BRA         ERROR
00000CB2                          1531  
00000CB2                          1532  
00000CB2                          1533  CHECK_BCC_32  
00000CB2                          1534  
00000CB2  6100 00A6               1535      BSR         ISOLATE_CC_CODE_FOR_BCC 
00000CB6                          1536      
00000CB6  1C3C 0000               1537      MOVE.B      #CC_T,D6
00000CBA  BC03                    1538      CMP.B       D3,D6
00000CBC  6700 0346               1539      BEQ         MATCH_CC_T_32
00000CC0                          1540      
00000CC0  1C3C 0001               1541      MOVE.B      #CC_F,D6
00000CC4  BC03                    1542      CMP.B       D3,D6
00000CC6  6700 0342               1543      BEQ         MATCH_CC_F_32
00000CCA                          1544      
00000CCA  1C3C 0002               1545      MOVE.B      #CC_HI,D6
00000CCE  BC03                    1546      CMP.B       D3,D6
00000CD0  6700 033E               1547      BEQ         MATCH_CC_HI_32
00000CD4                          1548      
00000CD4  1C3C 0003               1549      MOVE.B      #CC_LS,D6
00000CD8  BC03                    1550      CMP.B       D3,D6
00000CDA  6700 033A               1551      BEQ         MATCH_CC_LS_32
00000CDE                          1552      
00000CDE  1C3C 0004               1553      MOVE.B      #CC_CC,D6
00000CE2  BC03                    1554      CMP.B       D3,D6
00000CE4  6700 0336               1555      BEQ         MATCH_CC_CC_32
00000CE8                          1556      
00000CE8  1C3C 0005               1557      MOVE.B      #CC_CS,D6
00000CEC  BC03                    1558      CMP.B       D3,D6
00000CEE  6700 0332               1559      BEQ         MATCH_CC_CS_32
00000CF2                          1560      
00000CF2  1C3C 0006               1561      MOVE.B      #CC_NE,D6
00000CF6  BC03                    1562      CMP.B       D3,D6
00000CF8  6700 032E               1563      BEQ         MATCH_CC_NE_32
00000CFC                          1564      
00000CFC  1C3C 0007               1565      MOVE.B      #CC_EQ,D6
00000D00  BC03                    1566      CMP.B       D3,D6
00000D02  6700 032A               1567      BEQ         MATCH_CC_EQ_32
00000D06                          1568      
00000D06  1C3C 0008               1569      MOVE.B      #CC_VC,D6
00000D0A  BC03                    1570      CMP.B       D3,D6
00000D0C  6700 0326               1571      BEQ         MATCH_CC_VC_32
00000D10                          1572      
00000D10  1C3C 0009               1573      MOVE.B      #CC_VS,D6
00000D14  BC03                    1574      CMP.B       D3,D6
00000D16  6700 0322               1575      BEQ         MATCH_CC_VS_32
00000D1A                          1576      
00000D1A  1C3C 000A               1577      MOVE.B      #CC_PL,D6
00000D1E  BC03                    1578      CMP.B       D3,D6
00000D20  6700 031E               1579      BEQ         MATCH_CC_PL_32
00000D24                          1580      
00000D24  1C3C 000B               1581      MOVE.B      #CC_MI,D6
00000D28  BC03                    1582      CMP.B       D3,D6
00000D2A  6700 031A               1583      BEQ         MATCH_CC_MI_32
00000D2E                          1584      
00000D2E  1C3C 000C               1585      MOVE.B      #CC_GE,D6
00000D32  BC03                    1586      CMP.B       D3,D6
00000D34  6700 0316               1587      BEQ         MATCH_CC_GE_32
00000D38                          1588      
00000D38  1C3C 000D               1589      MOVE.B      #CC_LT,D6
00000D3C  BC03                    1590      CMP.B       D3,D6
00000D3E  6700 0312               1591      BEQ         MATCH_CC_LT_32
00000D42                          1592      
00000D42  1C3C 000E               1593      MOVE.B      #CC_GT,D6
00000D46  BC03                    1594      CMP.B       D3,D6
00000D48  6700 030E               1595      BEQ         MATCH_CC_GT_32
00000D4C                          1596      
00000D4C  1C3C 000F               1597      MOVE.B      #CC_LE,D6
00000D50  BC03                    1598      CMP.B       D3,D6
00000D52  6700 030A               1599      BEQ         MATCH_CC_LE_32
00000D56                          1600  
00000D56  6000 0308               1601      BRA         ERROR
00000D5A                          1602   
00000D5A                          1603  ISOLATE_CC_CODE_FOR_BCC
00000D5A                          1604  
00000D5A  48A7 2000               1605      MOVEM.W     D2, -(SP) 
00000D5E                          1606      
00000D5E  E94A                    1607      LSL.W       #4,D2
00000D60  1E3C 000C               1608      MOVE.B      #12,D7
00000D64  EE6A                    1609      LSR.W       D7,D2
00000D66                          1610      
00000D66  1602                    1611      MOVE.B      D2,D3      
00000D68                          1612  
00000D68  4C9F 0004               1613      MOVEM.W     (SP)+,D2 
00000D6C  4E75                    1614      RTS
00000D6E                          1615  CHECK_CMP
00000D6E                          1616      
00000D6E  6100 0232               1617      BSR         ISOLATE_OP_CODE
00000D72                          1618      
00000D72  1C3C 0000               1619      MOVE.B      #CMP_B,D6
00000D76  BC03                    1620      CMP.B       D3,D6
00000D78  6700 F95A               1621      BEQ         MATCH_CMP_B
00000D7C                          1622      
00000D7C  1C3C 0001               1623      MOVE.B      #CMP_W,D6
00000D80  BC03                    1624      CMP.B       D3,D6
00000D82  6700 F996               1625      BEQ         MATCH_CMP_W
00000D86                          1626      
00000D86  1C3C 0002               1627      MOVE.B      #CMP_L,D6
00000D8A  BC03                    1628      CMP.B       D3,D6
00000D8C  6700 F9D4               1629      BEQ         MATCH_CMP_L
00000D90                          1630      
00000D90  6000 02CE               1631      BRA         ERROR
00000D94                          1632  CHECK_MULS_LEA_CLR_JSR_RTS
00000D94                          1633  
00000D94  3C3C 4E75               1634      MOVE.W      #RTS,D6
00000D98  BC42                    1635      CMP.W       D2,D6
00000D9A  6700 F928               1636      BEQ         MATCH_RTS
00000D9E                          1637      
00000D9E  6100 0202               1638      BSR         ISOLATE_OP_CODE
00000DA2                          1639      
00000DA2  1C3C 0007               1640      MOVE.B      #LEA,D6
00000DA6  BC03                    1641      CMP.B       D3,D6
00000DA8  6700 0246               1642      BEQ         MATCH_LEA
00000DAC                          1643      
00000DAC  6100 FCC2               1644      BSR         ReadFirstTenBits
00000DB0                          1645      
00000DB0  3C3C 013A               1646      MOVE.W      #JSR,D6
00000DB4  BC43                    1647      CMP.W       D3,D6
00000DB6  6700 F9F0               1648      BEQ         MATCH_JSR
00000DBA                          1649      
00000DBA  3C3C 0108               1650      MOVE.W      #CLR_B,D6
00000DBE  BC43                    1651      CMP.W       D3,D6
00000DC0  6700 FA08               1652      BEQ         MATCH_CLR_B
00000DC4                          1653      
00000DC4  3C3C 0109               1654      MOVE.W      #CLR_W,D6
00000DC8  BC43                    1655      CMP.W       D3,D6
00000DCA  6700 FA2C               1656      BEQ         MATCH_CLR_W
00000DCE                          1657      
00000DCE  3C3C 010A               1658      MOVE.W      #CLR_L,D6
00000DD2  BC43                    1659      CMP.W       D3,D6
00000DD4  6700 FA50               1660      BEQ         MATCH_CLR_L
00000DD8                          1661      
00000DD8  3C3C 0130               1662      MOVE.W      #MULS_L,D6  * Shouldn't need to check for the rest of the opcode..?
00000DDC  BC43                    1663      CMP.W       D3,D6
00000DDE  6700 0212               1664      BEQ         MATCH_MULS_L
00000DE2                          1665      
00000DE2  6000 027C               1666      BRA         ERROR
00000DE6                          1667      
00000DE6                          1668  CHECK_MULS_W_AND
00000DE6                          1669  
00000DE6  6100 01BA               1670      BSR         ISOLATE_OP_CODE
00000DEA                          1671      
00000DEA  1C3C 0007               1672      MOVE.B      #MULS_OP_W,D6
00000DEE  BC03                    1673      CMP.B       D3,D6
00000DF0  6700 F88C               1674      BEQ         MATCH_MULS_W
00000DF4                          1675      
00000DF4  1C3C 0000               1676      MOVE.B      #DN_B,D6
00000DF8  BC03                    1677      CMP.B       D3,D6
00000DFA  6700 FA58               1678      BEQ         MATCH_AND_DN_B
00000DFE                          1679      
00000DFE  1C3C 0001               1680      MOVE.B      #DN_W,D6
00000E02  BC03                    1681      CMP.B       D3,D6
00000E04  6700 FA94               1682      BEQ         MATCH_AND_DN_W
00000E08                          1683      
00000E08  1C3C 0002               1684      MOVE.B      #DN_L,D6
00000E0C  BC03                    1685      CMP.B       D3,D6
00000E0E  6700 FAD0               1686      BEQ         MATCH_AND_DN_L
00000E12                          1687      
00000E12  1C3C 0004               1688      MOVE.B      #EA_B,D6
00000E16  BC03                    1689      CMP.B       D3,D6
00000E18  6700 FB0C               1690      BEQ         MATCH_AND_EA_B
00000E1C                          1691      
00000E1C  1C3C 0005               1692      MOVE.B      #EA_W,D6
00000E20  BC03                    1693      CMP.B       D3,D6
00000E22  6700 FB48               1694      BEQ         MATCH_AND_EA_W
00000E26                          1695      
00000E26  1C3C 0006               1696      MOVE.B      #EA_L,D6
00000E2A  BC03                    1697      CMP.B       D3,D6
00000E2C  6700 FB84               1698      BEQ         MATCH_AND_EA_L
00000E30                          1699      
00000E30  6000 022E               1700      BRA         ERROR
00000E34                          1701  
00000E34                          1702  CHECK_DIVU_OR
00000E34                          1703      
00000E34  6100 016C               1704      BSR         ISOLATE_OP_CODE
00000E38                          1705      
00000E38  1C3C 0003               1706      MOVE.B      #DIVU,D6
00000E3C  BC03                    1707      CMP.B       D3,D6
00000E3E  6700 01A2               1708      BEQ         MATCH_DIVU
00000E42                          1709      
00000E42  1C3C 0000               1710      MOVE.B      #DN_B,D6
00000E46  BC03                    1711      CMP.B       D3,D6
00000E48  6700 019A               1712      BEQ         MATCH_OR_DN_B
00000E4C                          1713      
00000E4C  1C3C 0001               1714      MOVE.B      #DN_W,D6
00000E50  BC03                    1715      CMP.B       D3,D6
00000E52  6700 0192               1716      BEQ         MATCH_OR_DN_W
00000E56                          1717      
00000E56  1C3C 0002               1718      MOVE.B      #DN_L,D6
00000E5A  BC03                    1719      CMP.B       D3,D6
00000E5C  6700 018A               1720      BEQ         MATCH_OR_DN_L
00000E60                          1721      
00000E60  1C3C 0004               1722      MOVE.B      #EA_B,D6
00000E64  BC03                    1723      CMP.B       D3,D6
00000E66  6700 0182               1724      BEQ         MATCH_OR_EA_B
00000E6A                          1725      
00000E6A  1C3C 0005               1726      MOVE.B      #EA_W,D6
00000E6E  BC03                    1727      CMP.B       D3,D6
00000E70  6700 017A               1728      BEQ         MATCH_OR_EA_W
00000E74                          1729      
00000E74  1C3C 0006               1730      MOVE.B      #EA_L,D6
00000E78  BC03                    1731      CMP.B       D3,D6
00000E7A  6700 0172               1732      BEQ         MATCH_OR_EA_L
00000E7E                          1733      
00000E7E  6000 01E0               1734      BRA         ERROR
00000E82                          1735  
00000E82                          1736  CHECK_MOVEM
00000E82                          1737      
00000E82  6100 FBEC               1738      BSR         ReadFirstTenBits
00000E86                          1739      
00000E86  3C3C 0122               1740      MOVE.W      #MOVEM_TO_MEM_W,D6
00000E8A  BC43                    1741      CMP.W       D3,D6
00000E8C  6700 0140               1742      BEQ         MATCH_MOVEM_TO_MEM_W
00000E90                          1743      
00000E90  3C3C 0123               1744      MOVE.W      #MOVEM_TO_MEM_L,D6
00000E94  BC43                    1745      CMP.W       D3,D6
00000E96  6700 0138               1746      BEQ         MATCH_MOVEM_TO_MEM_L
00000E9A                          1747      
00000E9A  3C3C 0132               1748      MOVE.W      #MOVEM_TO_REG_W,D6
00000E9E  BC43                    1749      CMP.W       D3,D6
00000EA0  6700 0130               1750      BEQ         MATCH_MOVEM_TO_REG_W
00000EA4                          1751      
00000EA4  3C3C 0133               1752      MOVE.W      #MOVEM_TO_REG_L,D6
00000EA8  BC43                    1753      CMP.W       D3,D6
00000EAA  6700 0128               1754      BEQ         MATCH_MOVEM_TO_REG_L
00000EAE                          1755      
00000EAE  6000 FBA0               1756      BRA         MOVEM_RETURN
00000EB2                          1757  CHECK_ADD_ADDA
00000EB2                          1758      
00000EB2  6100 00EE               1759      BSR         ISOLATE_OP_CODE
00000EB6                          1760      
00000EB6  3C3C 0000               1761      MOVE.W      #DN_B,D6
00000EBA  BC43                    1762      CMP.W       D3,D6
00000EBC  6700 F42C               1763      BEQ         MATCH_ADD_TO_REG_B
00000EC0                          1764      
00000EC0  3C3C 0001               1765      MOVE.W      #DN_W,D6
00000EC4  BC43                    1766      CMP.W       D3,D6
00000EC6  6700 F466               1767      BEQ         MATCH_ADD_TO_REG_W
00000ECA                          1768      
00000ECA  3C3C 0002               1769      MOVE.W      #DN_L,D6
00000ECE  BC43                    1770      CMP.W       D3,D6
00000ED0  6700 F4A0               1771      BEQ         MATCH_ADD_TO_REG_L
00000ED4                          1772      
00000ED4  3C3C 0004               1773      MOVE.W      #EA_B,D6
00000ED8  BC43                    1774      CMP.W       D3,D6
00000EDA  6700 F4DA               1775      BEQ         MATCH_ADD_TO_EA_B
00000EDE                          1776      
00000EDE  3C3C 0005               1777      MOVE.W      #EA_W,D6
00000EE2  BC43                    1778      CMP.W       D3,D6
00000EE4  6700 F514               1779      BEQ         MATCH_ADD_TO_EA_W
00000EE8                          1780      
00000EE8  3C3C 0006               1781      MOVE.W      #EA_L,D6
00000EEC  BC43                    1782      CMP.W       D3,D6
00000EEE  6700 F54E               1783      BEQ         MATCH_ADD_TO_EA_L
00000EF2                          1784      
00000EF2  3C3C 0003               1785      MOVE.W      #ADDA_W,D6
00000EF6  BC43                    1786      CMP.W       D3,D6
00000EF8  6700 F6F8               1787      BEQ         MATCH_ADDA_W
00000EFC                          1788      
00000EFC  3C3C 0007               1789      MOVE.W      #ADDA_L,D6
00000F00  BC43                    1790      CMP.W       D3,D6
00000F02  6700 F734               1791      BEQ         MATCH_ADDA_L
00000F06                          1792      
00000F06  4E75                    1793      RTS ** Change later?
00000F08                          1794  CHECK_ADDQ
00000F08                          1795      
00000F08  6100 0098               1796      BSR         ISOLATE_OP_CODE
00000F0C                          1797      
00000F0C  3C3C 0000               1798      MOVE.W      #ADDQ_B,D6
00000F10  BC43                    1799      CMP.W       D3,D6
00000F12  6700 F56E               1800      BEQ         MATCH_ADDQ_B
00000F16                          1801      
00000F16  3C3C 0001               1802      MOVE.W      #ADDQ_W,D6
00000F1A  BC43                    1803      CMP.W       D3,D6
00000F1C  6700 F5B0               1804      BEQ         MATCH_ADDQ_W
00000F20                          1805      
00000F20  3C3C 0002               1806      MOVE.W      #ADDQ_L,D6
00000F24  BC43                    1807      CMP.W       D3,D6
00000F26  6700 F5F2               1808      BEQ         MATCH_ADDQ_L
00000F2A                          1809      
00000F2A                          1810  CHECK_ADDI
00000F2A                          1811  
00000F2A  6100 FB44               1812      BSR         ReadFirstTenBits
00000F2E                          1813      
00000F2E  3C3C 0018               1814      MOVE.W      #ADDI_B,D6
00000F32  BC43                    1815      CMP.W       D3,D6
00000F34  6700 F2F4               1816      BEQ         MATCH_ADDI_B
00000F38                          1817      
00000F38  3C3C 0019               1818      MOVE.W      #ADDI_W,D6
00000F3C  BC43                    1819      CMP.W       D3,D6
00000F3E  6700 F32A               1820      BEQ         MATCH_ADDI_W
00000F42                          1821      
00000F42  3C3C 001A               1822      MOVE.W      #ADDI_L,D6
00000F46  BC43                    1823      CMP.W       D3,D6
00000F48  6700 F360               1824      BEQ         MATCH_ADDI_L
00000F4C                          1825      
00000F4C  6000 FB06               1826      BRA         ADDI_RETURN
00000F50                          1827  CHECK_SUB
00000F50                          1828      
00000F50  6100 0050               1829      BSR         ISOLATE_OP_CODE
00000F54                          1830      
00000F54  3C3C 0000               1831      MOVE.W      #DN_B,D6
00000F58  BC43                    1832      CMP.W       D3,D6
00000F5A  6700 007A               1833      BEQ         MATCH_SUB_TO_DN_B
00000F5E                          1834      
00000F5E  3C3C 0001               1835      MOVE.W      #DN_W,D6
00000F62  BC43                    1836      CMP.W       D3,D6
00000F64  6700 0072               1837      BEQ         MATCH_SUB_TO_DN_W
00000F68                          1838      
00000F68  3C3C 0002               1839      MOVE.W      #DN_L,D6
00000F6C  BC43                    1840      CMP.W       D3,D6
00000F6E  6700 006A               1841      BEQ         MATCH_SUB_TO_DN_L
00000F72                          1842      
00000F72  3C3C 0004               1843      MOVE.W      #EA_B,D6
00000F76  BC43                    1844      CMP.W       D3,D6
00000F78  6700 0062               1845      BEQ         MATCH_SUB_TO_EA_B
00000F7C                          1846      
00000F7C  3C3C 0005               1847      MOVE.W      #EA_W,D6
00000F80  BC43                    1848      CMP.W       D3,D6
00000F82  6700 005A               1849      BEQ         MATCH_SUB_TO_EA_W
00000F86                          1850      
00000F86  3C3C 0006               1851      MOVE.W      #EA_L,D6
00000F8A  BC43                    1852      CMP.W       D3,D6
00000F8C  6700 0052               1853      BEQ         MATCH_SUB_TO_EA_L
00000F90                          1854  CHECK_MOVEA_W_AND_MOVE_W
00000F90                          1855      
00000F90  6100 0010               1856      BSR         ISOLATE_OP_CODE
00000F94                          1857         
00000F94  1C3C 0001               1858      MOVE.B      #MOVEA_WL,D6
00000F98  BC03                    1859      CMP.B       D3,D6
00000F9A  6700 F5CA               1860      BEQ         MATCH_MOVEA_W
00000F9E                          1861      
00000F9E  6000 F244               1862      BRA         MATCH_MOVE_W 
00000FA2                          1863  ISOLATE_OP_CODE 
00000FA2                          1864  
00000FA2  48A7 2000               1865      MOVEM.W     D2, -(SP)    
00000FA6                          1866     
00000FA6  1E3C 0007               1867      MOVE.B      #7,D7          
00000FAA  EF6A                    1868      LSL.W       D7,D2
00000FAC  1E3C 000D               1869      MOVE.B      #13,D7
00000FB0  EE6A                    1870      LSR.W       D7,D2
00000FB2  1602                    1871      MOVE.B      D2,D3    
00000FB4                          1872         
00000FB4  4C9F 0004               1873      MOVEM.W     (SP)+,D2 
00000FB8  4E75                    1874      RTS
00000FBA                          1875  CHECK_MOVEA_L_AND_MOVE_L
00000FBA                          1876      
00000FBA  61E6                    1877      BSR         ISOLATE_OP_CODE
00000FBC                          1878         
00000FBC  1C3C 0001               1879      MOVE.B      #MOVEA_WL,D6
00000FC0  BC03                    1880      CMP.B       D3,D6
00000FC2  6700 F5E8               1881      BEQ         MATCH_MOVEA_L 
00000FC6                          1882      
00000FC6  6000 0002               1883      BRA         MATCH_MOVE_L   
00000FCA                          1884   
00000FCA                          1885  MATCH_MOVE_L
00000FCA  3A02                    1886      MOVE.W      D2,D5       *REMOVE
00000FCC                          1887  
00000FCC                          1888  MATCH_MOVEQ
00000FCC  3A02                    1889      MOVE.W      D2,D5       *REMOVE
00000FCE                          1890      
00000FCE                          1891  MATCH_MOVEM_TO_MEM_W
00000FCE  3A02                    1892      MOVE.W      D2,D5       *REMOVE
00000FD0                          1893  MATCH_MOVEM_TO_MEM_L
00000FD0  3A02                    1894      MOVE.W      D2,D5       *REMOVE
00000FD2                          1895  MATCH_MOVEM_TO_REG_W
00000FD2  3A02                    1896      MOVE.W      D2,D5       *REMOVE
00000FD4                          1897  MATCH_MOVEM_TO_REG_L
00000FD4  3A02                    1898      MOVE.W      D2,D5       *REMOVE
00000FD6                          1899      
00000FD6                          1900  MATCH_SUB_TO_DN_B
00000FD6  3A02                    1901      MOVE.W      D2,D5       *REMOVE
00000FD8                          1902  MATCH_SUB_TO_DN_W
00000FD8  3A02                    1903      MOVE.W      D2,D5       *REMOVE
00000FDA                          1904  MATCH_SUB_TO_DN_L
00000FDA  3A02                    1905      MOVE.W      D2,D5       *REMOVE
00000FDC                          1906  MATCH_SUB_TO_EA_B
00000FDC  3A02                    1907      MOVE.W      D2,D5       *REMOVE
00000FDE                          1908  MATCH_SUB_TO_EA_W
00000FDE  3A02                    1909      MOVE.W      D2,D5       *REMOVE
00000FE0                          1910  MATCH_SUB_TO_EA_L
00000FE0  3A02                    1911      MOVE.W      D2,D5       *REMOVE
00000FE2                          1912  MATCH_DIVU
00000FE2  3A02                    1913      MOVE.W      D2,D5       *REMOVE
00000FE4                          1914  MATCH_OR_DN_B
00000FE4  3A02                    1915      MOVE.W      D2,D5       *REMOVE
00000FE6                          1916  MATCH_OR_DN_W
00000FE6  3A02                    1917      MOVE.W      D2,D5       *REMOVE
00000FE8                          1918  MATCH_OR_DN_L
00000FE8  3A02                    1919      MOVE.W      D2,D5       *REMOVE
00000FEA                          1920  MATCH_OR_EA_B
00000FEA  3A02                    1921      MOVE.W      D2,D5       *REMOVE
00000FEC                          1922  MATCH_OR_EA_W
00000FEC  3A02                    1923      MOVE.W      D2,D5       *REMOVE
00000FEE                          1924  MATCH_OR_EA_L
00000FEE  3A02                    1925      MOVE.W      D2,D5       *REMOVE
00000FF0                          1926  
00000FF0                          1927  MATCH_LEA
00000FF0  3A02                    1928      MOVE.W      D2,D5       *REMOVE
00000FF2                          1929  
00000FF2                          1930  MATCH_MULS_L
00000FF2  3A02                    1931      MOVE.W      D2,D5       *REMOVE
00000FF4                          1932  MATCH_LSL
00000FF4  3A02                    1933      MOVE.W      D2,D5       *REMOVE
00000FF6                          1934  MATCH_LSR
00000FF6  3A02                    1935      MOVE.W      D2,D5       *REMOVE
00000FF8                          1936  MATCH_ASR
00000FF8  3A02                    1937      MOVE.W      D2,D5       *REMOVE
00000FFA                          1938  MATCH_ASL
00000FFA  3A02                    1939      MOVE.W      D2,D5       *REMOVE
00000FFC                          1940  MATCH_ROL
00000FFC  3A02                    1941      MOVE.W      D2,D5       *REMOVE
00000FFE                          1942  MATCH_ROR
00000FFE  3A02                    1943      MOVE.W      D2,D5       *REMOVE
00001000                          1944      
00001000                          1945  MATCH_CC_T_8
00001000  3A02                    1946      MOVE.W      D2,D5       *REMOVE
00001002                          1947  MATCH_CC_T_16
00001002  3A02                    1948      MOVE.W      D2,D5       *REMOVE
00001004                          1949  MATCH_CC_T_32
00001004  3A02                    1950      MOVE.W      D2,D5       *REMOVE
00001006                          1951  MATCH_CC_F_8
00001006  3A02                    1952      MOVE.W      D2,D5       *REMOVE
00001008                          1953  MATCH_CC_F_16
00001008  3A02                    1954      MOVE.W      D2,D5       *REMOVE
0000100A                          1955  MATCH_CC_F_32
0000100A  3A02                    1956      MOVE.W      D2,D5       *REMOVE
0000100C                          1957  MATCH_CC_HI_8
0000100C  3A02                    1958      MOVE.W      D2,D5       *REMOVE
0000100E                          1959  MATCH_CC_HI_16
0000100E  3A02                    1960      MOVE.W      D2,D5       *REMOVE
00001010                          1961  MATCH_CC_HI_32
00001010  3A02                    1962      MOVE.W      D2,D5       *REMOVE
00001012                          1963  MATCH_CC_LS_8
00001012  3A02                    1964      MOVE.W      D2,D5       *REMOVE
00001014                          1965  MATCH_CC_LS_16
00001014  3A02                    1966      MOVE.W      D2,D5       *REMOVE
00001016                          1967  MATCH_CC_LS_32  
00001016  3A02                    1968      MOVE.W      D2,D5       *REMOVE
00001018                          1969  MATCH_CC_CC_8
00001018  3A02                    1970      MOVE.W      D2,D5       *REMOVE
0000101A                          1971  MATCH_CC_CC_16
0000101A  3A02                    1972      MOVE.W      D2,D5       *REMOVE
0000101C                          1973  MATCH_CC_CC_32
0000101C  3A02                    1974      MOVE.W      D2,D5       *REMOVE
0000101E                          1975  MATCH_CC_CS_8
0000101E  3A02                    1976      MOVE.W      D2,D5       *REMOVE
00001020                          1977  MATCH_CC_CS_16
00001020  3A02                    1978      MOVE.W      D2,D5       *REMOVE
00001022                          1979  MATCH_CC_CS_32
00001022  3A02                    1980      MOVE.W      D2,D5       *REMOVE
00001024                          1981  MATCH_CC_NE_8
00001024  3A02                    1982      MOVE.W      D2,D5       *REMOVE
00001026                          1983  MATCH_CC_NE_16
00001026  3A02                    1984      MOVE.W      D2,D5       *REMOVE
00001028                          1985  MATCH_CC_NE_32
00001028  3A02                    1986      MOVE.W      D2,D5       *REMOVE
0000102A                          1987  MATCH_CC_EQ_8
0000102A  3A02                    1988      MOVE.W      D2,D5       *REMOVE
0000102C                          1989  MATCH_CC_EQ_16
0000102C  3A02                    1990      MOVE.W      D2,D5       *REMOVE
0000102E                          1991  MATCH_CC_EQ_32
0000102E  3A02                    1992      MOVE.W      D2,D5       *REMOVE
00001030                          1993  MATCH_CC_VC_8
00001030  3A02                    1994      MOVE.W      D2,D5       *REMOVE
00001032                          1995  MATCH_CC_VC_16
00001032  3A02                    1996      MOVE.W      D2,D5       *REMOVE
00001034                          1997  MATCH_CC_VC_32
00001034  3A02                    1998      MOVE.W      D2,D5       *REMOVE
00001036                          1999  MATCH_CC_VS_8
00001036  3A02                    2000      MOVE.W      D2,D5       *REMOVE
00001038                          2001  MATCH_CC_VS_16
00001038  3A02                    2002      MOVE.W      D2,D5       *REMOVE
0000103A                          2003  MATCH_CC_VS_32
0000103A  3A02                    2004      MOVE.W      D2,D5       *REMOVE
0000103C                          2005  MATCH_CC_PL_8
0000103C  3A02                    2006      MOVE.W      D2,D5       *REMOVE
0000103E                          2007  MATCH_CC_PL_16
0000103E  3A02                    2008      MOVE.W      D2,D5       *REMOVE
00001040                          2009  MATCH_CC_PL_32
00001040  3A02                    2010      MOVE.W      D2,D5       *REMOVE
00001042                          2011  MATCH_CC_MI_8
00001042  3A02                    2012      MOVE.W      D2,D5       *REMOVE
00001044                          2013  MATCH_CC_MI_16
00001044  3A02                    2014      MOVE.W      D2,D5       *REMOVE
00001046                          2015  MATCH_CC_MI_32
00001046  3A02                    2016      MOVE.W      D2,D5       *REMOVE
00001048                          2017  MATCH_CC_GE_8
00001048  3A02                    2018      MOVE.W      D2,D5       *REMOVE
0000104A                          2019  MATCH_CC_GE_16
0000104A  3A02                    2020      MOVE.W      D2,D5       *REMOVE
0000104C                          2021  MATCH_CC_GE_32
0000104C  3A02                    2022      MOVE.W      D2,D5       *REMOVE
0000104E                          2023  MATCH_CC_LT_8
0000104E  3A02                    2024      MOVE.W      D2,D5       *REMOVE
00001050                          2025  MATCH_CC_LT_16
00001050  3A02                    2026      MOVE.W      D2,D5       *REMOVE
00001052                          2027  MATCH_CC_LT_32
00001052  3A02                    2028      MOVE.W      D2,D5       *REMOVE
00001054                          2029  MATCH_CC_GT_8
00001054  3A02                    2030      MOVE.W      D2,D5       *REMOVE
00001056                          2031  MATCH_CC_GT_16
00001056  3A02                    2032      MOVE.W      D2,D5       *REMOVE
00001058                          2033  MATCH_CC_GT_32
00001058  3A02                    2034      MOVE.W      D2,D5       *REMOVE
0000105A                          2035  MATCH_CC_LE_8
0000105A  3A02                    2036      MOVE.W      D2,D5       *REMOVE
0000105C                          2037  MATCH_CC_LE_16
0000105C  3A02                    2038      MOVE.W      D2,D5       *REMOVE
0000105E                          2039  MATCH_CC_LE_32
0000105E  3A02                    2040      MOVE.W      D2,D5       *REMOVE
00001060                          2041  ERROR
00001060  3A02                    2042      MOVE.W      D2,D5       *REMOVE
00001062                          2043  
00001062                          2044  
00001062                          2045  
00001062                          2046  
00001062                          2047  -------------------- end include --------------------
00001062                          2048          
00001062= 45 6E 74 65 72 20 ...   2049  MESSAGE     DC.B    'Enter the address of compiled code: ',0
00001087= 49 6E 76 61 6C 69 ...   2050  ERROR_MSG   DC.B    'Invalid input, please rerun',0
000010A3= 20 00                   2051  SPACER      DC.B    ' ',0
000010A5                          2052  
000010A5                          2053  
00001000                          2054          ORG     $1000
00001000                          2055  program_start        
00001000                          2056  
00001000                          2057  
00001000                          2058  *------Code for input-------
00001000                          2059          
00001000  43F8 1062               2060          LEA     MESSAGE,A1      *Code block for first message
00001004  103C 000E               2061          MOVE.B  #14,D0
00001008  4E4F                    2062          TRAP    #15
0000100A                          2063         
0000100A  227C 00004000           2064          MOVEA.L #$4000, A1
00001010  103C 0002               2065          MOVE.B  #2,D0           *Code block for reading input
00001014  4E4F                    2066          TRAP    #15   
00001016  3001                    2067          MOVE.W  D1,D0
00001018                          2068          
00001018  2049                    2069          MOVEA.L A1,A0           *Move the contents of A1 to A0 for the conversion
0000101A  4EB8 0000               2070          JSR     A2H             *Branch to Connor's conversion code      
0000101E                          2071          
0000101E  2040                    2072          MOVEA.L D0,A0
00001020                          2073          
00001020  0C50 FFFF               2074          CMPI.W  #$FFFF,(A0)
00001024  6700 0026               2075          BEQ     input_error
00001028                          2076      
00001028                          2077  loop_start
00001028                          2078          
00001028  2208                    2079          MOVE.L  A0,D1           *Print out the address we're working on
0000102A  7410                    2080          MOVE.L  #16,D2          
0000102C  700F                    2081          MOVE.L  #15,D0          
0000102E  4E4F                    2082          TRAP    #15
00001030                          2083  
00001030  700E                    2084          MOVE.L  #14,D0
00001032  43F8 10A3               2085          LEA     SPACER,A1
00001036  4E4F                    2086          TRAP    #15
00001038                          2087          
00001038  3418                    2088          MOVE.W  (A0)+,D2
0000103A  0C42 FFFF               2089          CMPI.W  #$FFFF,D2
0000103E  6700 0014               2090          BEQ     Done
00001042                          2091          
00001042  4EB8 0A3E               2092          JSR     OpDecoder
00001046                          2093          
00001046  700D                    2094          MOVE.L  #13,D0
00001048  4E4F                    2095          TRAP    #15
0000104A                          2096          
0000104A  60DC                    2097          BRA     loop_start
0000104C                          2098          
0000104C                          2099  input_error        
0000104C  700D                    2100          MOVE.L  #13,D0
0000104E  43F8 1087               2101          LEA     ERROR_MSG,A1
00001052  4E4F                    2102          TRAP    #15
00001054                          2103  Done        
00001054                          2104  
00001054                          2105          END    $1000

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
A2H                 0
ABS_LONG            39
ABS_WORD            38
ADDA_L              7
ADDA_W              3
ADDBYTELOOP         24
ADDBYTES            1C
ADDI_B              18
ADDI_L              1A
ADDI_RETURN         A54
ADDI_W              19
ADDQ                5
ADDQ_B              0
ADDQ_L              2
ADDQ_W              1
ADD_ADDA            D
ADD_TO_EA_B         4
ADD_TO_EA_L         6
ADD_TO_EA_W         5
ADD_TO_REG_B        0
ADD_TO_REG_L        2
ADD_TO_REG_W        1
AN                  8
ASL                 383
ASR                 387
BCC                 6
BCC_16              0
BCC_32              FF
CC_CC               4
CC_CS               5
CC_EQ               7
CC_F                1
CC_GE               C
CC_GT               E
CC_HI               2
CC_LE               F
CC_LS               3
CC_LT               D
CC_MI               B
CC_NE               6
CC_PL               A
CC_T                0
CC_VC               8
CC_VS               9
CHECK_ADDI          F2A
CHECK_ADDQ          F08
CHECK_ADD_ADDA      EB2
CHECK_BCC           B4A
CHECK_BCC_16        C0A
CHECK_BCC_32        CB2
CHECK_BCC_8         B62
CHECK_CMP           D6E
CHECK_DIVU_OR       E34
CHECK_FOUR_BIT_SIG  ACC
CHECK_MOVEA_L_AND_MOVE_L  FBA
CHECK_MOVEA_W_AND_MOVE_W  F90
CHECK_MOVEM         E82
CHECK_MULS_LEA_CLR_JSR_RTS  D94
CHECK_MULS_W_AND    DE6
CHECK_NOP           ABE
CHECK_SHIFT_AND_ROTATE  A7E
CHECK_SUB           F50
CLR_B               108
CLR_L               10A
CLR_W               109
CMP                 B
CMP_B               0
CMP_L               2
CMP_W               1
CONV_END            2C
CR                  D
DEC_ABS_LONG        114
DEC_ABS_WORD        108
DEC_AN              12C
DEC_DN              120
DEC_IMMEDIATE       EC
DEC_INDIRECT        138
DEC_POST_INC        14C
DEC_PRE_DEC         166
DEC_RETURN          CE
DIVU                3
DIVU_OR             8
DN                  0
DN_B                0
DN_L                2
DN_W                1
DONE                1054
EADECODER           66
EADECODER_LEFT      4E
EA_B                4
EA_L                6
EA_W                5
ERROR               1060
ERROR_MSG           1087
FOUR_BIT_RETURN     A4C
IMMEDIATE           3C
IMM_SKIP            E6
IMM_WORD            104
INDIRECT            10
INPUT_ERROR         104C
ISOLATE_CC_CODE_FOR_BCC  D5A
ISOLATE_OP_CODE     FA2
JSR                 13A
LEA                 7
LEFT_SKIP           6A
LF                  A
LOOP_START          1028
LSL                 38F
LSR                 38B
MATCH_ADDA_L        638
MATCH_ADDA_W        5F2
MATCH_ADDI_B        22A
MATCH_ADDI_L        2AA
MATCH_ADDI_W        26A
MATCH_ADDQ_B        482
MATCH_ADDQ_L        51A
MATCH_ADDQ_W        4CE
MATCH_ADD_TO_EA_B   3B6
MATCH_ADD_TO_EA_L   43E
MATCH_ADD_TO_EA_W   3FA
MATCH_ADD_TO_REG_B  2EA
MATCH_ADD_TO_REG_L  372
MATCH_ADD_TO_REG_W  32E
MATCH_AND_DN_B      854
MATCH_AND_DN_L      8E0
MATCH_AND_DN_W      89A
MATCH_AND_EA_B      926
MATCH_AND_EA_L      9B2
MATCH_AND_EA_W      96C
MATCH_ASL           FFA
MATCH_ASR           FF8
MATCH_CC_CC_16      101A
MATCH_CC_CC_32      101C
MATCH_CC_CC_8       1018
MATCH_CC_CS_16      1020
MATCH_CC_CS_32      1022
MATCH_CC_CS_8       101E
MATCH_CC_EQ_16      102C
MATCH_CC_EQ_32      102E
MATCH_CC_EQ_8       102A
MATCH_CC_F_16       1008
MATCH_CC_F_32       100A
MATCH_CC_F_8        1006
MATCH_CC_GE_16      104A
MATCH_CC_GE_32      104C
MATCH_CC_GE_8       1048
MATCH_CC_GT_16      1056
MATCH_CC_GT_32      1058
MATCH_CC_GT_8       1054
MATCH_CC_HI_16      100E
MATCH_CC_HI_32      1010
MATCH_CC_HI_8       100C
MATCH_CC_LE_16      105C
MATCH_CC_LE_32      105E
MATCH_CC_LE_8       105A
MATCH_CC_LS_16      1014
MATCH_CC_LS_32      1016
MATCH_CC_LS_8       1012
MATCH_CC_LT_16      1050
MATCH_CC_LT_32      1052
MATCH_CC_LT_8       104E
MATCH_CC_MI_16      1044
MATCH_CC_MI_32      1046
MATCH_CC_MI_8       1042
MATCH_CC_NE_16      1026
MATCH_CC_NE_32      1028
MATCH_CC_NE_8       1024
MATCH_CC_PL_16      103E
MATCH_CC_PL_32      1040
MATCH_CC_PL_8       103C
MATCH_CC_T_16       1002
MATCH_CC_T_32       1004
MATCH_CC_T_8        1000
MATCH_CC_VC_16      1032
MATCH_CC_VC_32      1034
MATCH_CC_VC_8       1030
MATCH_CC_VS_16      1038
MATCH_CC_VS_32      103A
MATCH_CC_VS_8       1036
MATCH_CLR_B         7CA
MATCH_CLR_L         826
MATCH_CLR_W         7F8
MATCH_CMP_B         6D4
MATCH_CMP_L         762
MATCH_CMP_W         71A
MATCH_DIVU          FE2
MATCH_JSR           7A8
MATCH_LEA           FF0
MATCH_LSL           FF4
MATCH_LSR           FF6
MATCH_MOVEA_L       5AC
MATCH_MOVEA_W       566
MATCH_MOVEM_TO_MEM_L  FD0
MATCH_MOVEM_TO_MEM_W  FCE
MATCH_MOVEM_TO_REG_L  FD4
MATCH_MOVEM_TO_REG_W  FD2
MATCH_MOVEQ         FCC
MATCH_MOVE_B        19E
MATCH_MOVE_L        FCA
MATCH_MOVE_W        1E4
MATCH_MULS_L        FF2
MATCH_MULS_W        67E
MATCH_NOP           18E
MATCH_OR_DN_B       FE4
MATCH_OR_DN_L       FE8
MATCH_OR_DN_W       FE6
MATCH_OR_EA_B       FEA
MATCH_OR_EA_L       FEE
MATCH_OR_EA_W       FEC
MATCH_ROL           FFC
MATCH_ROR           FFE
MATCH_RTS           6C4
MATCH_SUB_TO_DN_B   FD6
MATCH_SUB_TO_DN_L   FDA
MATCH_SUB_TO_DN_W   FD8
MATCH_SUB_TO_EA_B   FDC
MATCH_SUB_TO_EA_L   FE0
MATCH_SUB_TO_EA_W   FDE
MESSAGE             1062
MOVEA_WL            1
MOVEM_RETURN        A50
MOVEM_TO_MEM_L      123
MOVEM_TO_MEM_W      122
MOVEM_TO_REG_L      133
MOVEM_TO_REG_W      132
MOVEQ_              7
MOVE_B              1
MOVE_L              2
MOVE_W              3
MULS_L              130
MULS_LEA_CLR_JSR_RTS  4
MULS_OP_W           7
MULS_W_AND          C
NOP                 4E71
NOP_RETURN          A48
NUMSUB              32
NUMSUBRTN           E
OPDECODER           A3E
OPDEC_RETURN        A58
OUTPUT              10000
POST_INC            18
PRE_DEC             20
PROGRAM_START       1000
PR_ADD              180
PR_ADDA             A20
PR_ADDI             184
PR_ADDQ             189
PR_AND              A3A
PR_BYTE             9FC
PR_CLR              A2A
PR_CMP              A32
PR_COMMA            9FA
PR_JSR              A36
PR_LONG             A02
PR_MOVE             A09
PR_MOVEA            A0E
PR_MOVEM            A1A
PR_MOVEQ            A14
PR_MULS             A25
PR_NOP              A05
PR_RTS              A2E
PR_SPACE            9F8
PR_WORD             9FF
READFIRSTFOURBITS   A5E
READFIRSTTENBITS    A70
ROL                 39F
ROR                 39B
RTS                 4E75
SPACER              10A3
SUB                 9
SUB_TO_DN_B         0
SUB_TO_DN_L         2
SUB_TO_DN_W         1
SUB_TO_EA_B         4
SUB_TO_EA_L         6
SUB_TO_EA_W         5
UPSEND              46
UPSUB               3C
UPSUBRTN            16

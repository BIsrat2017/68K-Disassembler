00001000 Starting Address
Assembler used: EASy68K Editor/Assembler v5.15.04
Created On: 3/9/2017 12:35:37 PM

00000000                             1  *-----------------------------------------------------------
00000000                             2  * Title      : Main Driver Program
00000000                             3  * Written by : Arsany Azmy, Connor McGwire
00000000                             4  * Date       :
00000000                             5  * Description:
00000000                             6  *-----------------------------------------------------------
00000000  =0000000D                  7  CR      EQU     $0D
00000000  =0000000A                  8  LF      EQU     $0A   
00000000                             9          INCLUDE 'ASCII_HEX_Conversions.x68'
00000000                            10  
00000000                            11  
00000000                            12  
00000000                            13  A2H     *Converts and ASCII Byte string into HEX; Size WORD
00000000  48E7 7FFE                 14          MOVEM.L     D1-D7/A0-A6, -(SP)  
00000004                            15          
00000004  3400                      16          MOVE.W  D0,D2
00000006  3202                      17          MOVE.W  D2,D1                   *Store length of string into D1 for looping
00000008  2248                      18          MOVEA.L A0,A1                   *Copy starting point of string
0000000A                            19  
0000000A  6000 0026                 20          BRA     numSub
0000000E                            21  numSubRTN
0000000E  2049                      22          MOVEA.L A1,A0                   *Restore address position
00000010  3202                      23          MOVE.W  D2,D1                   *Reset loop counter
00000012                            24          
00000012  6000 0028                 25          BRA     upSub
00000016                            26  upSubRTN        
00000016  2049                      27          MOVEA.L A1,A0                   *Restore address position
00000018  3202                      28          MOVE.W  D2,D1                   *Reset loop counter
0000001A  4240                      29          CLR     D0                      *Clear D0
0000001C                            30  addBytes
0000001C  D018                      31          ADD.B   (A0)+,D0
0000001E  5301                      32          SUBI.B  #1,D1
00000020  6700 000A                 33          BEQ     conv_end
00000024                            34  addByteLoop
00000024  E980                      35          ASL.L   #4,D0
00000026  D018                      36          ADD.B   (A0)+,D0
00000028  5301                      37          SUBI.B  #1,D1
0000002A  66F8                      38          BNE     addByteLoop
0000002C                            39  conv_end
0000002C  4CDF 7FFE                 40          MOVEM.L     (SP)+, D1-D7/A0-A6
00000030  4E75                      41          RTS
00000032                            42          
00000032                            43  numSub  *Convert ASCII 'number' to true number byte; Should not be called outside of the A2H subroutines
00000032  0418 0030                 44          SUBI.B  #$30,(A0)+              *Subtract difference between null ASCII and '0' ASCII
00000036  5341                      45          SUB.W   #1,D1                   *Decrement loop counter
00000038  66F8                      46          BNE     numSub                  *If loop has not ended restart
0000003A  60D2                      47          BRA     numSubRTN
0000003C                            48  
0000003C                            49  upSub   *Loops through string to remove any upper case characters 
0000003C                            50          *that may remain in the string
0000003C  0C10 0009                 51          CMPI.B  #9,(A0)                 *Check if the value is greater than 0-9
00000040  6F00 0004                 52          BLE     upSEnd                  *If it's not, continue loop
00000044  5310                      53          SUBI.B  #1,(A0)                 *Otherwise, subtract difference between ASCII 'number' code and 'A' code
00000046                            54  upSEnd
00000046  5248                      55          ADDA.W  #1,A0                   *Increment to next position to check for uppercase
00000048  5341                      56          SUB.W   #1,D1                   *Decrement loop counter
0000004A  66F0                      57          BNE     upSub                   
0000004C  60C8                      58          BRA     upSubRTN
0000004E                            59  
0000004E                            60  
0000004E                            61  -------------------- end include --------------------
0000004E                            62          INCLUDE 'opcodes.x68'
0000004E                            63                  INCLUDE 'EADecoder.x68'
0000004E                            64  
0000004E                            65  
0000004E  =00010000                 66  output      EQU $00010000
0000004E                            67  
0000004E  =0000003C                 68  IMMEDIATE   EQU %00111100
0000004E  =00000038                 69  ABS_WORD    EQU %00111000
0000004E  =00000039                 70  ABS_LONG    EQU %00111001
0000004E  =00000000                 71  Dn          EQU %00000000
0000004E  =00000008                 72  An          EQU %00001000
0000004E  =00000010                 73  INDIRECT    EQU %00010000
0000004E  =00000018                 74  POST_INC    EQU %00011000
0000004E  =00000020                 75  PRE_DEC     EQU %00100000
0000004E                            76  
0000004E                            77  
0000004E                            78  
0000004E                            79  EADecoder_left
0000004E  48E7 FF7E                 80          MOVEM.L     D0-D7/A1-A6, -(SP)
00000052                            81          
00000052                            82          ** Swap the mode and register bits
00000052  1800                      83          MOVE.B  D0,D4
00000054  0200 0007                 84          ANDI.B  #%00000111,D0       * Mask mode
00000058  0204 0038                 85          ANDI.B  #%00111000,D4       * Mask register
0000005C  E708                      86          LSL.B   #3,D0               * Move mode bits over
0000005E  E60C                      87          LSR.B   #3,D4               * Move register bits over
00000060  8004                      88          OR.B    D4,D0               * Recombine
00000062                            89          
00000062  6000 0006                 90          BRA     left_skip
00000066                            91  
00000066                            92  EADecoder
00000066  48E7 FF7E                 93          MOVEM.L     D0-D7/A1-A6, -(SP) *Store registers on stack, except D0
0000006A                            94  left_skip   
0000006A  4242                      95          CLR     D2    
0000006C  4243                      96          CLR     D3 
0000006E  1401                      97          MOVE.B  D1,D2 ** Store opcode size in bytes into D2
00000070                            98          
00000070  43F9 00010000             99          LEA     output,A1
00000076  45F9 00010000            100          LEA     output,A2
0000007C                           101          
0000007C                           102          *First, decoder will check for the 3 types with hard coded register values
0000007C  163C 0001                103          MOVE.B  #1,D3
00000080  B07C 003C                104          CMP     #IMMEDIATE,D0
00000084  6700 0068                105          BEQ     dec_immediate
00000088                           106          
00000088  B07C 0038                107          CMP     #ABS_WORD,D0
0000008C  6700 007C                108          BEQ     dec_abs_word
00000090                           109          
00000090  B07C 0039                110          CMP     #ABS_LONG,D0
00000094  6700 0080                111          BEQ     dec_abs_long
00000098                           112          
00000098                           113          *If it was none of the above, store the register and mode seperately
00000098  4243                     114          CLR     D3
0000009A  1200                     115          MOVE.B  D0,D1
0000009C  0201 0038                116          ANDI.B  #%00111000,D1           *Get mode value
000000A0  0200 0007                117          ANDI.B  #%00000111,D0           *Get register value
000000A4  0600 0030                118          ADDI.B  #$30,D0
000000A8                           119                
000000A8  B27C 0000                120          CMP     #Dn,D1
000000AC  6700 0074                121          BEQ     dec_Dn 
000000B0                           122          
000000B0  B27C 0008                123          CMP     #An,D1
000000B4  6700 0078                124          BEQ     dec_An
000000B8                           125                  
000000B8  B27C 0010                126          CMP     #INDIRECT,D1
000000BC  6700 007C                127          BEQ     dec_indirect
000000C0                           128                  
000000C0  B27C 0018                129          CMP     #POST_INC,D1
000000C4  6700 0088                130          BEQ     dec_post_inc
000000C8                           131                  
000000C8  B27C 0020                132          CMP     #PRE_DEC,D1
000000CC  6700 009A                133          BEQ     dec_pre_dec
000000D0                           134  
000000D0                           135  dec_return ** Common return for all types
000000D0                           136          
000000D0                           137          ** Print display string
000000D0  103C 000E                138          MOVE.B  #14,D0
000000D4  4E4F                     139          TRAP    #15
000000D6                           140          
000000D6                           141          ** If there is immediate data to print, print it
000000D6  B67C 0001                142          CMP     #1,D3
000000DA  6600 000C                143          BNE     imm_skip
000000DE                           144          
000000DE  103C 000F                145          MOVE.B  #15,D0
000000E2  143C 0010                146          MOVE.B  #16,D2
000000E6  4E4F                     147          TRAP    #15
000000E8                           148  
000000E8                           149  imm_skip
000000E8  4CDF 7EFF                150          MOVEM.L     (SP)+, D0-D7/A1-A6 *Return register data from stack, except D0
000000EC  4E75                     151          RTS
000000EE                           152          
000000EE                           153          * Individual EA decoders *
000000EE                           154  
000000EE                           155  dec_immediate   *DECODE IMMEDIATE VALUE*
000000EE  14FC 0023                156          MOVE.B  #'#',(A2)+  * Move '#' char into string
000000F2  14FC 0024                157          MOVE.B  #'$',(A2)+  * Move '$' char into string
000000F6  14FC 0000                158          MOVE.B  #$0,(A2)+   * Null terminate string
000000FA  B47C 0002                159          CMP     #2,D2       * Check if data is word length
000000FE  6700 0006                160          BEQ     imm_word    
00000102                           161          
00000102  2218                     162          MOVE.L  (A0)+,D1    * Length was long
00000104  60CA                     163          BRA     dec_return
00000106                           164          
00000106                           165  imm_word
00000106  3218                     166          MOVE.W  (A0)+,D1    * Length was word
00000108  60C6                     167          BRA     dec_return
0000010A                           168  
0000010A                           169  
0000010A                           170  dec_abs_word    *DECODE ABSOLUTE WORD*
0000010A  14FC 0024                171          MOVE.B  #'$',(A2)+  * Move '$' char into string
0000010E  14FC 0000                172          MOVE.B  #$0,(A2)+   * Null terminate string
00000112  3218                     173          MOVE.W  (A0)+,D1
00000114  60BA                     174          BRA     dec_return
00000116                           175          
00000116                           176  
00000116                           177  dec_abs_long    *DECODE ABSOLUTE LONG*
00000116  14FC 0024                178          MOVE.B  #'$',(A2)+  * Move '$' char into string
0000011A  14FC 0000                179          MOVE.B  #$0,(A2)+   * Null terminate string
0000011E  2218                     180          MOVE.L  (A0)+,D1
00000120  60AE                     181          BRA     dec_return
00000122                           182          
00000122                           183  
00000122                           184  dec_Dn          *DECODE DIRECT DATA*
00000122  14FC 0044                185          MOVE.B  #'D',(A2)+
00000126  14C0                     186          MOVE.B  D0,(A2)+
00000128  14FC 0000                187          MOVE.B  #$0,(A2)+
0000012C  60A2                     188          BRA     dec_return
0000012E                           189  
0000012E                           190          
0000012E                           191  dec_An          *DECODE DIRECT ADDRESS*
0000012E  14FC 0041                192          MOVE.B  #'A',(A2)+
00000132  14C0                     193          MOVE.B  D0,(A2)+
00000134  14FC 0000                194          MOVE.B  #$0,(A2)+
00000138  6096                     195          BRA     dec_return
0000013A                           196  
0000013A                           197  
0000013A                           198  dec_indirect    *DECODE INDIRECT ACCESS*
0000013A  14FC 0028                199          MOVE.B  #'(',(A2)+
0000013E  14FC 0041                200          MOVE.B  #'A',(A2)+
00000142  14C0                     201          MOVE.B  D0,(A2)+
00000144  14FC 0029                202          MOVE.B  #')',(A2)+
00000148  14FC 0000                203          MOVE.B  #$0,(A2)+
0000014C  6082                     204          BRA     dec_return
0000014E                           205          
0000014E                           206  
0000014E                           207  dec_post_inc    *DECODE INDIRECT POST INCREMENT*
0000014E  14FC 0028                208          MOVE.B  #'(',(A2)+
00000152  14FC 0041                209          MOVE.B  #'A',(A2)+
00000156  14C0                     210          MOVE.B  D0,(A2)+
00000158  14FC 0029                211          MOVE.B  #')',(A2)+
0000015C  14FC 002B                212          MOVE.B  #'+',(A2)+
00000160  14FC 0000                213          MOVE.B  #$0,(A2)+
00000164  6000 FF6A                214          BRA     dec_return
00000168                           215          
00000168                           216          
00000168                           217  dec_pre_dec    *DECODE INDIRECT PRE DECREMENT*
00000168  14FC 002D                218          MOVE.B  #'-',(A2)+
0000016C  14FC 0028                219          MOVE.B  #'(',(A2)+
00000170  14FC 0041                220          MOVE.B  #'A',(A2)+
00000174  14C0                     221          MOVE.B  D0,(A2)+
00000176  14FC 0029                222          MOVE.B  #')',(A2)+
0000017A  14FC 0000                223          MOVE.B  #$0,(A2)+
0000017E  6000 FF50                224          BRA     dec_return
00000182                           225  
00000182                           226  
00000182                           227  
00000182                           228  
00000182                           229  
00000182                           230  
00000182                           231  
00000182                           232  
00000182                           233  
00000182                           234  -------------------- end include --------------------
00000182                           235                  INCLUDE 'connor_opcodes.x68'
00000182= 41 44 44 00              236  pr_ADD          DC.B    'ADD',0
00000186= 41 44 44 49 00           237  pr_ADDI         DC.B    'ADDI',0
0000018B= 41 44 44 51 00           238  pr_ADDQ         DC.B    'ADDQ',0
00000190                           239  
00000190                           240  MATCH_NOP
00000190  43F9 00000A07            241      LEA         pr_NOP,A1
00000196  103C 000E                242      MOVE.B      #14,D0
0000019A  4E4F                     243      TRAP        #15
0000019C  6000 08BC                244      BRA         opdec_return
000001A0                           245      
000001A0                           246  MATCH_MOVE_B
000001A0                           247      ** Move command size into D1
000001A0  123C 0002                248      MOVE.B      #2,D1
000001A4                           249      ** Print command
000001A4  103C 000E                250      MOVE.B      #14,D0
000001A8  43F9 00000A0B            251      LEA         pr_MOVE,A1
000001AE  4E4F                     252      TRAP        #15
000001B0                           253      ** Print size
000001B0  43F9 000009FE            254      LEA         pr_BYTE,A1
000001B6  4E4F                     255      TRAP        #15
000001B8                           256      ** Print space
000001B8  43F9 000009FA            257      LEA         pr_space,A1
000001BE  4E4F                     258      TRAP        #15
000001C0                           259      ** Decode right side ea
000001C0  1002                     260      MOVE.B      D2,D0
000001C2  0200 003F                261      ANDI.B      #%00111111,D0
000001C6  4EB8 0066                262      JSR         EADecoder
000001CA                           263      ** Add comma
000001CA  103C 000E                264      MOVE.B      #14,D0
000001CE  43F9 000009FC            265      LEA         pr_comma,A1
000001D4  4E4F                     266      TRAP        #15
000001D6                           267      ** Decode left side ea
000001D6  3002                     268      MOVE.W      D2,D0
000001D8  0240 0FC0                269      ANDI.W      #%0000111111000000,D0
000001DC  EC48                     270      LSR.W       #6,D0
000001DE  4EB8 004E                271      JSR         EADecoder_left
000001E2                           272      
000001E2  6000 0876                273      BRA         opdec_return
000001E6                           274      
000001E6                           275  MATCH_MOVE_W
000001E6                           276      ** Move command size into D1
000001E6  123C 0002                277      MOVE.B      #2,D1
000001EA                           278      ** Print command
000001EA  103C 000E                279      MOVE.B      #14,D0
000001EE  43F9 00000A0B            280      LEA         pr_MOVE,A1
000001F4  4E4F                     281      TRAP        #15
000001F6                           282      ** Print size
000001F6  43F9 00000A01            283      LEA         pr_WORD,A1
000001FC  4E4F                     284      TRAP        #15
000001FE                           285      ** Print space
000001FE  43F9 000009FA            286      LEA         pr_space,A1
00000204  4E4F                     287      TRAP        #15
00000206                           288      ** Decode right side ea
00000206  1002                     289      MOVE.B      D2,D0
00000208  0200 003F                290      ANDI.B      #%00111111,D0
0000020C  4EB8 0066                291      JSR         EADecoder
00000210                           292      ** Add comma
00000210  103C 000E                293      MOVE.B      #14,D0
00000214  43F9 000009FC            294      LEA         pr_comma,A1
0000021A  4E4F                     295      TRAP        #15
0000021C                           296      ** Decode left side ea
0000021C  3002                     297      MOVE.W      D2,D0
0000021E  0240 0FC0                298      ANDI.W      #%0000111111000000,D0
00000222  EC48                     299      LSR.W       #6,D0
00000224  4EB8 004E                300      JSR         EADecoder_left
00000228                           301      
00000228  6000 0830                302      BRA         opdec_return
0000022C                           303  
0000022C                           304  MATCH_ADDI_B
0000022C                           305      ** Move command size into D1
0000022C  123C 0002                306      MOVE.B      #2,D1
00000230                           307      ** Print command
00000230  103C 000E                308      MOVE.B      #14,D0
00000234  43F8 0186                309      LEA         pr_ADDI,A1
00000238  4E4F                     310      TRAP        #15
0000023A                           311      ** Print size
0000023A  43F9 000009FE            312      LEA         pr_BYTE,A1
00000240  4E4F                     313      TRAP        #15
00000242                           314      ** Print space
00000242  43F9 000009FA            315      LEA         pr_space,A1
00000248  4E4F                     316      TRAP        #15
0000024A                           317      ** Print Immediate data
0000024A  103C 003C                318      MOVE.B      #%00111100,D0
0000024E  4EB8 0066                319      JSR         EADecoder
00000252                           320      ** Add comma
00000252  103C 000E                321      MOVE.B      #14,D0
00000256  43F9 000009FC            322      LEA         pr_comma,A1
0000025C  4E4F                     323      TRAP        #15
0000025E                           324      ** Decode right side ea
0000025E  1002                     325      MOVE.B      D2,D0
00000260  0200 003F                326      ANDI.B      #%00111111,D0
00000264  4EB8 0066                327      JSR         EADecoder
00000268                           328      
00000268  6000 07F0                329      BRA         opdec_return
0000026C                           330      
0000026C                           331  MATCH_ADDI_W
0000026C                           332      ** Move command size into D1
0000026C  123C 0002                333      MOVE.B      #2,D1
00000270                           334      ** Print command
00000270  103C 000E                335      MOVE.B      #14,D0
00000274  43F8 0186                336      LEA         pr_ADDI,A1
00000278  4E4F                     337      TRAP        #15
0000027A                           338      ** Print size
0000027A  43F9 00000A01            339      LEA         pr_WORD,A1
00000280  4E4F                     340      TRAP        #15
00000282                           341      ** Print space
00000282  43F9 000009FA            342      LEA         pr_space,A1
00000288  4E4F                     343      TRAP        #15
0000028A                           344      ** Print Immediate data
0000028A  103C 003C                345      MOVE.B      #%00111100,D0
0000028E  4EB8 0066                346      JSR         EADecoder
00000292                           347      ** Add comma
00000292  103C 000E                348      MOVE.B      #14,D0
00000296  43F9 000009FC            349      LEA         pr_comma,A1
0000029C  4E4F                     350      TRAP        #15
0000029E                           351      ** Decode right side ea
0000029E  1002                     352      MOVE.B      D2,D0
000002A0  0200 003F                353      ANDI.B      #%00111111,D0
000002A4  4EB8 0066                354      JSR         EADecoder
000002A8                           355      
000002A8  6000 07B0                356      BRA         opdec_return
000002AC                           357      
000002AC                           358  MATCH_ADDI_L
000002AC                           359      ** Move command size into D1
000002AC  123C 0004                360      MOVE.B      #4,D1
000002B0                           361      ** Print command
000002B0  103C 000E                362      MOVE.B      #14,D0
000002B4  43F8 0186                363      LEA         pr_ADDI,A1
000002B8  4E4F                     364      TRAP        #15
000002BA                           365      ** Print size
000002BA  43F9 00000A04            366      LEA         pr_LONG,A1
000002C0  4E4F                     367      TRAP        #15
000002C2                           368      ** Print space
000002C2  43F9 000009FA            369      LEA         pr_space,A1
000002C8  4E4F                     370      TRAP        #15
000002CA                           371      ** Print Immediate data
000002CA  103C 003C                372      MOVE.B      #%00111100,D0
000002CE  4EB8 0066                373      JSR         EADecoder
000002D2                           374      ** Add comma
000002D2  103C 000E                375      MOVE.B      #14,D0
000002D6  43F9 000009FC            376      LEA         pr_comma,A1
000002DC  4E4F                     377      TRAP        #15
000002DE                           378      ** Decode right side ea
000002DE  1002                     379      MOVE.B      D2,D0
000002E0  0200 003F                380      ANDI.B      #%00111111,D0
000002E4  4EB8 0066                381      JSR         EADecoder
000002E8                           382      
000002E8  6000 0770                383      BRA         opdec_return
000002EC                           384      
000002EC                           385  MATCH_ADD_TO_REG_B
000002EC                           386      ** Move command size into D1
000002EC  123C 0002                387      MOVE.B      #2,D1
000002F0                           388      ** Print command
000002F0  103C 000E                389      MOVE.B      #14,D0
000002F4  43F8 0182                390      LEA         pr_ADD,A1
000002F8  4E4F                     391      TRAP        #15
000002FA                           392      ** Print size
000002FA  43F9 000009FE            393      LEA         pr_BYTE,A1
00000300  4E4F                     394      TRAP        #15
00000302                           395      ** Print space
00000302  43F9 000009FA            396      LEA         pr_space,A1
00000308  4E4F                     397      TRAP        #15
0000030A                           398      ** Print source
0000030A  1002                     399      MOVE.B      D2,D0
0000030C  0200 003F                400      ANDI.B      #%00111111,D0
00000310  4EB8 0066                401      JSR         EADecoder
00000314                           402      ** Add comma
00000314  103C 000E                403      MOVE.B      #14,D0
00000318  43F9 000009FC            404      LEA         pr_comma,A1
0000031E  4E4F                     405      TRAP        #15
00000320                           406      ** Print destination
00000320  3002                     407      MOVE.W      D2,D0
00000322  0240 0E00                408      ANDI.W      #%0000111000000000,D0
00000326  EC48                     409      LSR.W       #6,D0
00000328  4EB8 004E                410      JSR         EADecoder_left
0000032C                           411      
0000032C  6000 072C                412      BRA         opdec_return
00000330                           413      
00000330                           414  MATCH_ADD_TO_REG_W
00000330                           415      ** Move command size into D1
00000330  123C 0002                416      MOVE.B      #2,D1
00000334                           417      ** Print command
00000334  103C 000E                418      MOVE.B      #14,D0
00000338  43F8 0182                419      LEA         pr_ADD,A1
0000033C  4E4F                     420      TRAP        #15
0000033E                           421      ** Print size
0000033E  43F9 00000A01            422      LEA         pr_WORD,A1
00000344  4E4F                     423      TRAP        #15
00000346                           424      ** Print space
00000346  43F9 000009FA            425      LEA         pr_space,A1
0000034C  4E4F                     426      TRAP        #15
0000034E                           427      ** Print source
0000034E  1002                     428      MOVE.B      D2,D0
00000350  0200 003F                429      ANDI.B      #%00111111,D0
00000354  4EB8 0066                430      JSR         EADecoder
00000358                           431      ** Add comma
00000358  103C 000E                432      MOVE.B      #14,D0
0000035C  43F9 000009FC            433      LEA         pr_comma,A1
00000362  4E4F                     434      TRAP        #15
00000364                           435      ** Print destination
00000364  3002                     436      MOVE.W      D2,D0
00000366  0240 0E00                437      ANDI.W      #%0000111000000000,D0
0000036A  EC48                     438      LSR.W       #6,D0
0000036C  4EB8 004E                439      JSR         EADecoder_left
00000370                           440      
00000370  6000 06E8                441      BRA         opdec_return
00000374                           442      
00000374                           443  MATCH_ADD_TO_REG_L
00000374                           444      ** Move command size into D1
00000374  123C 0004                445      MOVE.B      #4,D1
00000378                           446      ** Print command
00000378  103C 000E                447      MOVE.B      #14,D0
0000037C  43F8 0182                448      LEA         pr_ADD,A1
00000380  4E4F                     449      TRAP        #15
00000382                           450      ** Print size
00000382  43F9 00000A04            451      LEA         pr_LONG,A1
00000388  4E4F                     452      TRAP        #15
0000038A                           453      ** Print space
0000038A  43F9 000009FA            454      LEA         pr_space,A1
00000390  4E4F                     455      TRAP        #15
00000392                           456      ** Print source
00000392  1002                     457      MOVE.B      D2,D0
00000394  0200 003F                458      ANDI.B      #%00111111,D0
00000398  4EB8 0066                459      JSR         EADecoder
0000039C                           460      ** Add comma
0000039C  103C 000E                461      MOVE.B      #14,D0
000003A0  43F9 000009FC            462      LEA         pr_comma,A1
000003A6  4E4F                     463      TRAP        #15
000003A8                           464      ** Print destination
000003A8  3002                     465      MOVE.W      D2,D0
000003AA  0240 0E00                466      ANDI.W      #%0000111000000000,D0
000003AE  EC48                     467      LSR.W       #6,D0
000003B0  4EB8 004E                468      JSR         EADecoder_left
000003B4                           469      
000003B4  6000 06A4                470      BRA         opdec_return
000003B8                           471      
000003B8                           472  MATCH_ADD_TO_EA_B
000003B8                           473      ** Move command size into D1
000003B8  123C 0002                474      MOVE.B      #2,D1
000003BC                           475      ** Print command
000003BC  103C 000E                476      MOVE.B      #14,D0
000003C0  43F8 0182                477      LEA         pr_ADD,A1
000003C4  4E4F                     478      TRAP        #15
000003C6                           479      ** Print size
000003C6  43F9 000009FE            480      LEA         pr_BYTE,A1
000003CC  4E4F                     481      TRAP        #15
000003CE                           482      ** Print space
000003CE  43F9 000009FA            483      LEA         pr_space,A1
000003D4  4E4F                     484      TRAP        #15
000003D6                           485      ** Print Source
000003D6  3002                     486      MOVE.W      D2,D0
000003D8  0240 0E00                487      ANDI.W      #%0000111000000000,D0
000003DC  EC48                     488      LSR.W       #6,D0
000003DE  4EB8 004E                489      JSR         EADecoder_left
000003E2                           490      ** Add comma
000003E2  103C 000E                491      MOVE.B      #14,D0
000003E6  43F9 000009FC            492      LEA         pr_comma,A1
000003EC  4E4F                     493      TRAP        #15
000003EE                           494      ** Print source
000003EE  1002                     495      MOVE.B      D2,D0
000003F0  0200 003F                496      ANDI.B      #%00111111,D0
000003F4  4EB8 0066                497      JSR         EADecoder
000003F8                           498      
000003F8  6000 0660                499      BRA         opdec_return
000003FC                           500      
000003FC                           501  MATCH_ADD_TO_EA_W
000003FC                           502      ** Move command size into D1
000003FC  123C 0002                503      MOVE.B      #2,D1
00000400                           504      ** Print command
00000400  103C 000E                505      MOVE.B      #14,D0
00000404  43F8 0182                506      LEA         pr_ADD,A1
00000408  4E4F                     507      TRAP        #15
0000040A                           508      ** Print size
0000040A  43F9 00000A01            509      LEA         pr_WORD,A1
00000410  4E4F                     510      TRAP        #15
00000412                           511      ** Print space
00000412  43F9 000009FA            512      LEA         pr_space,A1
00000418  4E4F                     513      TRAP        #15
0000041A                           514      ** Print Source
0000041A  3002                     515      MOVE.W      D2,D0
0000041C  0240 0E00                516      ANDI.W      #%0000111000000000,D0
00000420  EC48                     517      LSR.W       #6,D0
00000422  4EB8 004E                518      JSR         EADecoder_left
00000426                           519      ** Add comma
00000426  103C 000E                520      MOVE.B      #14,D0
0000042A  43F9 000009FC            521      LEA         pr_comma,A1
00000430  4E4F                     522      TRAP        #15
00000432                           523      ** Print source
00000432  1002                     524      MOVE.B      D2,D0
00000434  0200 003F                525      ANDI.B      #%00111111,D0
00000438  4EB8 0066                526      JSR         EADecoder
0000043C                           527      
0000043C  6000 061C                528      BRA         opdec_return
00000440                           529      
00000440                           530  MATCH_ADD_TO_EA_L 
00000440                           531      ** Move command size into D1
00000440  123C 0004                532      MOVE.B      #4,D1
00000444                           533      ** Print command
00000444  103C 000E                534      MOVE.B      #14,D0
00000448  43F8 0182                535      LEA         pr_ADD,A1
0000044C  4E4F                     536      TRAP        #15
0000044E                           537      ** Print size
0000044E  43F9 00000A04            538      LEA         pr_LONG,A1
00000454  4E4F                     539      TRAP        #15
00000456                           540      ** Print space
00000456  43F9 000009FA            541      LEA         pr_space,A1
0000045C  4E4F                     542      TRAP        #15
0000045E                           543      ** Print Source
0000045E  3002                     544      MOVE.W      D2,D0
00000460  0240 0E00                545      ANDI.W      #%0000111000000000,D0
00000464  EC48                     546      LSR.W       #6,D0
00000466  4EB8 004E                547      JSR         EADecoder_left
0000046A                           548      ** Add comma
0000046A  103C 000E                549      MOVE.B      #14,D0
0000046E  43F9 000009FC            550      LEA         pr_comma,A1
00000474  4E4F                     551      TRAP        #15
00000476                           552      ** Print source
00000476  1002                     553      MOVE.B      D2,D0
00000478  0200 003F                554      ANDI.B      #%00111111,D0
0000047C  4EB8 0066                555      JSR         EADecoder
00000480                           556      
00000480  6000 05D8                557      BRA         opdec_return
00000484                           558      
00000484                           559  MATCH_ADDQ_B
00000484                           560      ** Move command size into D1
00000484  123C 0002                561      MOVE.B      #2,D1
00000488                           562      ** Print command
00000488  103C 000E                563      MOVE.B      #14,D0
0000048C  43F8 018B                564      LEA         pr_ADDQ,A1
00000490  4E4F                     565      TRAP        #15
00000492                           566      ** Print size
00000492  43F9 000009FE            567      LEA         pr_BYTE,A1
00000498  4E4F                     568      TRAP        #15
0000049A                           569      ** Print space
0000049A  43F9 000009FA            570      LEA         pr_space,A1
000004A0  4E4F                     571      TRAP        #15
000004A2                           572      ** Print Immediate data
000004A2  3602                     573      MOVE.W      D2,D3 * Temporarily move op data
000004A4  3202                     574      MOVE.W      D2,D1
000004A6  0241 0E00                575      ANDI.W      #%0000111000000000,D1
000004AA  143C 0010                576      MOVE.B      #16,D2
000004AE  303C 000F                577      MOVE.W      #15,D0
000004B2  4E4F                     578      TRAP        #15
000004B4                           579      
000004B4  3403                     580      MOVE.W      D3,D2 * Move op data back
000004B6                           581      
000004B6                           582      ** Add comma
000004B6  103C 000E                583      MOVE.B      #14,D0
000004BA  43F9 000009FC            584      LEA         pr_comma,A1
000004C0  4E4F                     585      TRAP        #15
000004C2                           586      ** Decode right side ea
000004C2  1002                     587      MOVE.B      D2,D0
000004C4  0200 003F                588      ANDI.B      #%00111111,D0
000004C8  4EB8 0066                589      JSR         EADecoder
000004CC                           590      
000004CC  6000 058C                591      BRA         opdec_return
000004D0                           592      
000004D0                           593  MATCH_ADDQ_W
000004D0                           594      ** Move command size into D1
000004D0  123C 0002                595      MOVE.B      #2,D1
000004D4                           596      ** Print command
000004D4  103C 000E                597      MOVE.B      #14,D0
000004D8  43F8 018B                598      LEA         pr_ADDQ,A1
000004DC  4E4F                     599      TRAP        #15
000004DE                           600      ** Print size
000004DE  43F9 00000A01            601      LEA         pr_WORD,A1
000004E4  4E4F                     602      TRAP        #15
000004E6                           603      ** Print space
000004E6  43F9 000009FA            604      LEA         pr_space,A1
000004EC  4E4F                     605      TRAP        #15
000004EE                           606      ** Print Immediate data
000004EE  3602                     607      MOVE.W      D2,D3 * Temporarily move op data
000004F0  3202                     608      MOVE.W      D2,D1
000004F2  0241 0E00                609      ANDI.W      #%0000111000000000,D1
000004F6  143C 0010                610      MOVE.B      #16,D2
000004FA  303C 000F                611      MOVE.W      #15,D0
000004FE  4E4F                     612      TRAP        #15
00000500                           613      
00000500  3403                     614      MOVE.W      D3,D2 * Move op data back
00000502                           615      
00000502                           616      ** Add comma
00000502  103C 000E                617      MOVE.B      #14,D0
00000506  43F9 000009FC            618      LEA         pr_comma,A1
0000050C  4E4F                     619      TRAP        #15
0000050E                           620      ** Decode right side ea
0000050E  1002                     621      MOVE.B      D2,D0
00000510  0200 003F                622      ANDI.B      #%00111111,D0
00000514  4EB8 0066                623      JSR         EADecoder
00000518                           624      
00000518  6000 0540                625      BRA         opdec_return
0000051C                           626      
0000051C                           627  MATCH_ADDQ_L
0000051C                           628      ** Move command size into D1
0000051C  123C 0004                629      MOVE.B      #4,D1
00000520                           630      ** Print command
00000520  103C 000E                631      MOVE.B      #14,D0
00000524  43F8 018B                632      LEA         pr_ADDQ,A1
00000528  4E4F                     633      TRAP        #15
0000052A                           634      ** Print size
0000052A  43F9 00000A04            635      LEA         pr_LONG,A1
00000530  4E4F                     636      TRAP        #15
00000532                           637      ** Print space
00000532  43F9 000009FA            638      LEA         pr_space,A1
00000538  4E4F                     639      TRAP        #15
0000053A                           640      ** Print Immediate data
0000053A  3602                     641      MOVE.W      D2,D3 * Temporarily move op data
0000053C  3202                     642      MOVE.W      D2,D1
0000053E  0241 0E00                643      ANDI.W      #%0000111000000000,D1
00000542  143C 0010                644      MOVE.B      #16,D2
00000546  303C 000F                645      MOVE.W      #15,D0
0000054A  4E4F                     646      TRAP        #15
0000054C                           647      
0000054C  3403                     648      MOVE.W      D3,D2 * Move op data back
0000054E                           649      
0000054E                           650      ** Add comma
0000054E  103C 000E                651      MOVE.B      #14,D0
00000552  43F9 000009FC            652      LEA         pr_comma,A1
00000558  4E4F                     653      TRAP        #15
0000055A                           654      ** Decode right side ea
0000055A  1002                     655      MOVE.B      D2,D0
0000055C  0200 003F                656      ANDI.B      #%00111111,D0
00000560  4EB8 0066                657      JSR         EADecoder
00000564                           658      
00000564  6000 04F4                659      BRA         opdec_return
00000568                           660  
00000568                           661  
00000568                           662  -------------------- end include --------------------
00000568                           663                  *INCLUDE 'spencer_opcodes.x68'
00000568                           664                  INCLUDE 'arsany_opcodes.x68'
00000568                           665  MATCH_MOVEA_W
00000568                           666      ** Move command size into D1
00000568  123C 0002                667      MOVE.B      #2,D1
0000056C                           668      ** Print command
0000056C  103C 000E                669      MOVE.B      #14,D0
00000570  43F9 00000A10            670      LEA         pr_MOVEA,A1
00000576  4E4F                     671      TRAP        #15
00000578                           672      ** Print size
00000578  43F9 00000A01            673      LEA         pr_WORD,A1
0000057E  4E4F                     674      TRAP        #15
00000580                           675      ** Print space
00000580  43F9 000009FA            676      LEA         pr_space,A1
00000586  4E4F                     677      TRAP        #15
00000588                           678      ** Decode right side ea
00000588  1002                     679      MOVE.B      D2,D0
0000058A  0200 003F                680      ANDI.B      #%00111111,D0
0000058E  4EB8 0066                681      JSR         EADecoder
00000592                           682      ** Add comma
00000592  103C 000E                683      MOVE.B      #14,D0
00000596  43F9 000009FC            684      LEA         pr_comma,A1
0000059C  4E4F                     685      TRAP        #15
0000059E                           686      ** Decode left side ea
0000059E  3002                     687      MOVE.W      D2,D0
000005A0  0240 0FC0                688      ANDI.W      #%0000111111000000,D0
000005A4  EC88                     689      LSR.L       #6,D0
000005A6  4EB8 004E                690      JSR         EADecoder_left
000005AA                           691      
000005AA  6000 04AE                692      BRA         opdec_return
000005AE                           693  MATCH_MOVEA_L
000005AE                           694      ** Move command size into D1
000005AE  123C 0004                695      MOVE.B      #4,D1
000005B2                           696      ** Print command
000005B2  103C 000E                697      MOVE.B      #14,D0
000005B6  43F9 00000A10            698      LEA         pr_MOVEA,A1
000005BC  4E4F                     699      TRAP        #15
000005BE                           700      ** Print size
000005BE  43F9 00000A04            701      LEA         pr_LONG,A1
000005C4  4E4F                     702      TRAP        #15
000005C6                           703      ** Print space
000005C6  43F9 000009FA            704      LEA         pr_space,A1
000005CC  4E4F                     705      TRAP        #15
000005CE                           706      ** Decode right side ea
000005CE  1002                     707      MOVE.B      D2,D0
000005D0  0200 003F                708      ANDI.B      #%00111111,D0
000005D4  4EB8 0066                709      JSR         EADecoder
000005D8                           710      ** Add comma
000005D8  103C 000E                711      MOVE.B      #14,D0
000005DC  43F9 000009FC            712      LEA         pr_comma,A1
000005E2  4E4F                     713      TRAP        #15
000005E4                           714      ** Decode left side ea
000005E4  3002                     715      MOVE.W      D2,D0
000005E6  0240 0FC0                716      ANDI.W      #%0000111111000000,D0
000005EA  EC88                     717      LSR.L       #6,D0
000005EC  4EB8 004E                718      JSR         EADecoder_left
000005F0                           719      
000005F0  6000 0468                720      BRA         opdec_return
000005F4                           721  MATCH_ADDA_W
000005F4                           722      ** Move command size into D1
000005F4  123C 0002                723      MOVE.B      #2,D1
000005F8                           724      ** Print command
000005F8  103C 000E                725      MOVE.B      #14,D0
000005FC  43F9 00000A22            726      LEA         pr_ADDA,A1
00000602  4E4F                     727      TRAP        #15
00000604                           728      ** Print size
00000604  43F9 00000A01            729      LEA         pr_WORD,A1
0000060A  4E4F                     730      TRAP        #15
0000060C                           731      ** Print space
0000060C  43F9 000009FA            732      LEA         pr_space,A1
00000612  4E4F                     733      TRAP        #15
00000614                           734      ** Decode right side ea
00000614  1002                     735      MOVE.B      D2,D0
00000616  0200 003F                736      ANDI.B      #%00111111,D0
0000061A  4EB8 0066                737      JSR         EADecoder
0000061E                           738      ** Add comma
0000061E  103C 000E                739      MOVE.B      #14,D0
00000622  43F9 000009FC            740      LEA         pr_comma,A1
00000628  4E4F                     741      TRAP        #15
0000062A                           742      ** Decode left side ea
0000062A  3002                     743      MOVE.W      D2,D0
0000062C  0240 0FC0                744      ANDI.W      #%0000111111000000,D0
00000630  EC88                     745      LSR.L       #6,D0
00000632  4EB8 004E                746      JSR         EADecoder_left
00000636                           747      
00000636  6000 0422                748      BRA         opdec_return
0000063A                           749  MATCH_ADDA_L
0000063A                           750      ** Move command size into D1
0000063A  123C 0004                751      MOVE.B      #4,D1
0000063E                           752      ** Print command
0000063E  103C 000E                753      MOVE.B      #14,D0
00000642  43F9 00000A22            754      LEA         pr_ADDA,A1
00000648  4E4F                     755      TRAP        #15
0000064A                           756      ** Print size
0000064A  43F9 00000A04            757      LEA         pr_LONG,A1
00000650  4E4F                     758      TRAP        #15
00000652                           759      ** Print space
00000652  43F9 000009FA            760      LEA         pr_space,A1
00000658  4E4F                     761      TRAP        #15
0000065A                           762      ** Decode right side ea
0000065A  1002                     763      MOVE.B      D2,D0
0000065C  0200 003F                764      ANDI.B      #%00111111,D0
00000660  4EB8 0066                765      JSR         EADecoder
00000664                           766      ** Add comma
00000664  103C 000E                767      MOVE.B      #14,D0
00000668  43F9 000009FC            768      LEA         pr_comma,A1
0000066E  4E4F                     769      TRAP        #15
00000670                           770      ** Decode left side ea
00000670  3002                     771      MOVE.W      D2,D0
00000672  0240 0FC0                772      ANDI.W      #%0000111111000000,D0
00000676  EC88                     773      LSR.L       #6,D0
00000678  4EB8 004E                774      JSR         EADecoder_left
0000067C                           775      
0000067C  6000 03DC                776      BRA         opdec_return
00000680                           777  MATCH_MULS_W
00000680                           778      ** Move command size into D1
00000680  123C 0002                779      MOVE.B      #2,D1
00000684                           780      ** Print command
00000684  103C 000E                781      MOVE.B      #14,D0
00000688  43F9 00000A27            782      LEA         pr_MULS,A1
0000068E  4E4F                     783      TRAP        #15
00000690                           784      ** Print size
00000690  43F9 00000A01            785      LEA         pr_WORD,A1
00000696  4E4F                     786      TRAP        #15
00000698                           787      ** Print space
00000698  43F9 000009FA            788      LEA         pr_space,A1
0000069E  4E4F                     789      TRAP        #15
000006A0                           790      ** Decode right side ea
000006A0  1002                     791      MOVE.B      D2,D0
000006A2  0200 003F                792      ANDI.B      #%00111111,D0
000006A6  4EB8 0066                793      JSR         EADecoder
000006AA                           794      ** Add comma
000006AA  103C 000E                795      MOVE.B      #14,D0
000006AE  43F9 000009FC            796      LEA         pr_comma,A1
000006B4  4E4F                     797      TRAP        #15
000006B6                           798      ** Decode left side ea
000006B6  3002                     799      MOVE.W      D2,D0
000006B8  0240 0FC0                800      ANDI.W      #%0000111111000000,D0
000006BC  EC88                     801      LSR.L       #6,D0
000006BE  4EB8 004E                802      JSR         EADecoder_left    
000006C2                           803      
000006C2  6000 0396                804      BRA         opdec_return
000006C6                           805  MATCH_RTS
000006C6  43F9 00000A30            806      LEA         pr_RTS,A1
000006CC  103C 000E                807      MOVE.B      #14,D0
000006D0  4E4F                     808      TRAP        #15
000006D2  6000 0386                809      BRA         opdec_return
000006D6                           810  MATCH_CMP_B
000006D6                           811      ** Move command size into D1
000006D6  123C 0002                812      MOVE.B      #2,D1
000006DA                           813      ** Print command
000006DA  103C 000E                814      MOVE.B      #14,D0
000006DE  43F9 00000A34            815      LEA         pr_CMP,A1
000006E4  4E4F                     816      TRAP        #15
000006E6                           817      ** Print size
000006E6  43F9 000009FE            818      LEA         pr_BYTE,A1
000006EC  4E4F                     819      TRAP        #15
000006EE                           820      ** Print space
000006EE  43F9 000009FA            821      LEA         pr_space,A1
000006F4  4E4F                     822      TRAP        #15
000006F6                           823      ** Decode right side ea
000006F6  1002                     824      MOVE.B      D2,D0
000006F8  0200 003F                825      ANDI.B      #%00111111,D0
000006FC  4EB8 0066                826      JSR         EADecoder
00000700                           827      ** Add comma
00000700  103C 000E                828      MOVE.B      #14,D0
00000704  43F9 000009FC            829      LEA         pr_comma,A1
0000070A  4E4F                     830      TRAP        #15
0000070C                           831      ** Decode left side ea
0000070C  3002                     832      MOVE.W      D2,D0
0000070E  0240 0E00                833      ANDI.W      #%0000111000000000,D0
00000712  EC88                     834      LSR.L       #6,D0
00000714  4EB8 004E                835      JSR         EADecoder_left   
00000718                           836      
00000718  6000 0340                837      BRA         opdec_return
0000071C                           838  MATCH_CMP_W
0000071C                           839      ** Move command size into D1
0000071C  123C 0002                840      MOVE.B      #2,D1
00000720                           841      ** Print command
00000720  103C 000E                842      MOVE.B      #14,D0
00000724  43F9 00000A34            843      LEA         pr_CMP,A1
0000072A  4E4F                     844      TRAP        #15
0000072C                           845      ** Print size
0000072C  43F9 00000A01            846      LEA         pr_WORD,A1
00000732  4E4F                     847      TRAP        #15
00000734                           848      ** Print space
00000734  43F9 000009FA            849      LEA         pr_space,A1
0000073A  4E4F                     850      TRAP        #15
0000073C  4240                     851      CLR         D0
0000073E                           852      ** Decode right side ea
0000073E  1002                     853      MOVE.B      D2,D0
00000740  0200 003F                854      ANDI.B      #%00111111,D0
00000744  4EB8 0066                855      JSR         EADecoder
00000748                           856      ** Add comma
00000748  103C 000E                857      MOVE.B      #14,D0
0000074C  43F9 000009FC            858      LEA         pr_comma,A1
00000752  4E4F                     859      TRAP        #15
00000754                           860      ** Decode left side ea
00000754  3002                     861      MOVE.W      D2,D0
00000756  0240 0E00                862      ANDI.W      #%0000111000000000,D0
0000075A  EC88                     863      LSR.L       #6,D0
0000075C  4EB8 004E                864      JSR         EADecoder_left   
00000760                           865      
00000760  6000 02F8                866      BRA         opdec_return
00000764                           867  MATCH_CMP_L
00000764                           868      ** Move command size into D1
00000764  123C 0004                869      MOVE.B      #4,D1
00000768                           870      ** Print command
00000768  103C 000E                871      MOVE.B      #14,D0
0000076C  43F9 00000A34            872      LEA         pr_CMP,A1
00000772  4E4F                     873      TRAP        #15
00000774                           874      ** Print size
00000774  43F9 00000A04            875      LEA         pr_LONG,A1
0000077A  4E4F                     876      TRAP        #15
0000077C                           877      ** Print space
0000077C  43F9 000009FA            878      LEA         pr_space,A1
00000782  4E4F                     879      TRAP        #15
00000784                           880      ** Decode right side ea
00000784  1002                     881      MOVE.B      D2,D0
00000786  0200 003F                882      ANDI.B      #%00111111,D0
0000078A  4EB8 0066                883      JSR         EADecoder
0000078E                           884      ** Add comma
0000078E  103C 000E                885      MOVE.B      #14,D0
00000792  43F9 000009FC            886      LEA         pr_comma,A1
00000798  4E4F                     887      TRAP        #15
0000079A                           888      ** Decode left side ea
0000079A  3002                     889      MOVE.W      D2,D0
0000079C  0240 0E00                890      ANDI.W      #%0000111000000000,D0
000007A0  EC88                     891      LSR.L       #6,D0
000007A2  4EB8 004E                892      JSR         EADecoder_left     
000007A6                           893      
000007A6  6000 02B2                894      BRA         opdec_return
000007AA                           895  MATCH_JSR
000007AA                           896      ** Print command
000007AA  103C 000E                897      MOVE.B      #14,D0
000007AE  43F9 00000A38            898      LEA         pr_JSR,A1
000007B4  4E4F                     899      TRAP        #15
000007B6                           900      ** Print space
000007B6  43F9 000009FA            901      LEA         pr_space,A1
000007BC  4E4F                     902      TRAP        #15
000007BE                           903      ** Decode right side ea
000007BE  1002                     904      MOVE.B      D2,D0
000007C0  0200 003F                905      ANDI.B      #%00111111,D0
000007C4  4EB8 0066                906      JSR         EADecoder 
000007C8                           907      
000007C8  6000 0290                908      BRA         opdec_return
000007CC                           909  MATCH_CLR_B 
000007CC                           910      ** Move command size into D1
000007CC  123C 0002                911      MOVE.B      #2,D1
000007D0                           912      ** Print command
000007D0  103C 000E                913      MOVE.B      #14,D0
000007D4  43F9 00000A2C            914      LEA         pr_CLR,A1
000007DA  4E4F                     915      TRAP        #15
000007DC                           916      ** Print size
000007DC  43F9 000009FE            917      LEA         pr_BYTE,A1
000007E2  4E4F                     918      TRAP        #15
000007E4                           919      ** Print space
000007E4  43F9 000009FA            920      LEA         pr_space,A1
000007EA  4E4F                     921      TRAP        #15
000007EC                           922      ** Decode right side ea
000007EC  1002                     923      MOVE.B      D2,D0
000007EE  0200 003F                924      ANDI.B      #%00111111,D0
000007F2  4EB8 0066                925      JSR         EADecoder
000007F6                           926      
000007F6  6000 0262                927      BRA         opdec_return
000007FA                           928  MATCH_CLR_W
000007FA                           929      ** Move command size into D1
000007FA  123C 0002                930      MOVE.B      #2,D1
000007FE                           931      ** Print command
000007FE  103C 000E                932      MOVE.B      #14,D0
00000802  43F9 00000A2C            933      LEA         pr_CLR,A1
00000808  4E4F                     934      TRAP        #15
0000080A                           935      ** Print size
0000080A  43F9 00000A01            936      LEA         pr_WORD,A1
00000810  4E4F                     937      TRAP        #15
00000812                           938      ** Print space
00000812  43F9 000009FA            939      LEA         pr_space,A1
00000818  4E4F                     940      TRAP        #15
0000081A                           941      ** Decode right side ea
0000081A  1002                     942      MOVE.B      D2,D0
0000081C  0200 003F                943      ANDI.B      #%00111111,D0
00000820  4EB8 0066                944      JSR         EADecoder 
00000824                           945      
00000824  6000 0234                946      BRA         opdec_return
00000828                           947  MATCH_CLR_L
00000828                           948      ** Move command size into D1
00000828  123C 0004                949      MOVE.B      #4,D1
0000082C                           950      ** Print command
0000082C  103C 000E                951      MOVE.B      #14,D0
00000830  43F9 00000A2C            952      LEA         pr_CLR,A1
00000836  4E4F                     953      TRAP        #15
00000838                           954      ** Print size
00000838  43F9 00000A04            955      LEA         pr_LONG,A1
0000083E  4E4F                     956      TRAP        #15
00000840                           957      ** Print space
00000840  43F9 000009FA            958      LEA         pr_space,A1
00000846  4E4F                     959      TRAP        #15
00000848                           960      ** Decode right side ea
00000848  1002                     961      MOVE.B      D2,D0
0000084A  0200 003F                962      ANDI.B      #%00111111,D0
0000084E  4EB8 0066                963      JSR         EADecoder 
00000852                           964      
00000852  6000 0206                965      BRA         opdec_return
00000856                           966  MATCH_AND_DN_B
00000856                           967      ** Move command size into D1
00000856  123C 0002                968      MOVE.B      #2,D1
0000085A                           969      ** Print command
0000085A  103C 000E                970      MOVE.B      #14,D0
0000085E  43F9 00000A3C            971      LEA         pr_AND,A1
00000864  4E4F                     972      TRAP        #15
00000866                           973      ** Print size
00000866  43F9 000009FE            974      LEA         pr_BYTE,A1
0000086C  4E4F                     975      TRAP        #15
0000086E                           976      ** Print space
0000086E  43F9 000009FA            977      LEA         pr_space,A1
00000874  4E4F                     978      TRAP        #15
00000876                           979      ** Decode right side ea
00000876  1002                     980      MOVE.B      D2,D0
00000878  0200 003F                981      ANDI.B      #%00111111,D0
0000087C  4EB8 0066                982      JSR         EADecoder
00000880                           983      ** Add comma
00000880  103C 000E                984      MOVE.B      #14,D0
00000884  43F9 000009FC            985      LEA         pr_comma,A1
0000088A  4E4F                     986      TRAP        #15
0000088C                           987      ** Decode left side ea
0000088C  3002                     988      MOVE.W      D2,D0
0000088E  0240 0E00                989      ANDI.W      #%0000111000000000,D0
00000892  EC88                     990      LSR.L       #6,D0
00000894  4EB8 004E                991      JSR         EADecoder_left   
00000898                           992      
00000898  6000 01C0                993      BRA         opdec_return
0000089C                           994  MATCH_AND_DN_W
0000089C                           995      ** Move command size into D1
0000089C  123C 0002                996      MOVE.B      #2,D1
000008A0                           997      ** Print command
000008A0  103C 000E                998      MOVE.B      #14,D0
000008A4  43F9 00000A3C            999      LEA         pr_AND,A1
000008AA  4E4F                    1000      TRAP        #15
000008AC                          1001      ** Print size
000008AC  43F9 00000A01           1002      LEA         pr_WORD,A1
000008B2  4E4F                    1003      TRAP        #15
000008B4                          1004      ** Print space
000008B4  43F9 000009FA           1005      LEA         pr_space,A1
000008BA  4E4F                    1006      TRAP        #15
000008BC                          1007      ** Decode right side ea
000008BC  1002                    1008      MOVE.B      D2,D0
000008BE  0200 003F               1009      ANDI.B      #%00111111,D0
000008C2  4EB8 0066               1010      JSR         EADecoder
000008C6                          1011      ** Add comma
000008C6  103C 000E               1012      MOVE.B      #14,D0
000008CA  43F9 000009FC           1013      LEA         pr_comma,A1
000008D0  4E4F                    1014      TRAP        #15
000008D2                          1015      ** Decode left side ea
000008D2  3002                    1016      MOVE.W      D2,D0
000008D4  0240 0E00               1017      ANDI.W      #%0000111000000000,D0
000008D8  EC88                    1018      LSR.L       #6,D0
000008DA  4EB8 004E               1019      JSR         EADecoder_left  
000008DE                          1020      
000008DE  6000 017A               1021      BRA         opdec_return
000008E2                          1022  MATCH_AND_DN_L
000008E2                          1023      ** Move command size into D1
000008E2  123C 0004               1024      MOVE.B      #4,D1
000008E6                          1025      ** Print command
000008E6  103C 000E               1026      MOVE.B      #14,D0
000008EA  43F9 00000A3C           1027      LEA         pr_AND,A1
000008F0  4E4F                    1028      TRAP        #15
000008F2                          1029      ** Print size
000008F2  43F9 00000A04           1030      LEA         pr_LONG,A1
000008F8  4E4F                    1031      TRAP        #15
000008FA                          1032      ** Print space
000008FA  43F9 000009FA           1033      LEA         pr_space,A1
00000900  4E4F                    1034      TRAP        #15
00000902                          1035      ** Decode right side ea
00000902  1002                    1036      MOVE.B      D2,D0
00000904  0200 003F               1037      ANDI.B      #%00111111,D0
00000908  4EB8 0066               1038      JSR         EADecoder
0000090C                          1039      ** Add comma
0000090C  103C 000E               1040      MOVE.B      #14,D0
00000910  43F9 000009FC           1041      LEA         pr_comma,A1
00000916  4E4F                    1042      TRAP        #15
00000918                          1043      ** Decode left side ea
00000918  3002                    1044      MOVE.W      D2,D0
0000091A  0240 0E00               1045      ANDI.W      #%0000111000000000,D0
0000091E  EC88                    1046      LSR.L       #6,D0
00000920  4EB8 004E               1047      JSR         EADecoder_left  
00000924                          1048      
00000924  6000 0134               1049      BRA         opdec_return
00000928                          1050      
00000928                          1051  MATCH_AND_EA_B
00000928                          1052      ** Move command size into D1
00000928  123C 0002               1053      MOVE.B      #2,D1
0000092C                          1054      ** Print command
0000092C  103C 000E               1055      MOVE.B      #14,D0
00000930  43F9 00000A3C           1056      LEA         pr_AND,A1
00000936  4E4F                    1057      TRAP        #15
00000938                          1058      ** Print size
00000938  43F9 000009FE           1059      LEA         pr_BYTE,A1
0000093E  4E4F                    1060      TRAP        #15
00000940                          1061      ** Print space
00000940  43F9 000009FA           1062      LEA         pr_space,A1
00000946  4E4F                    1063      TRAP        #15
00000948                          1064      ** Decode left side ea
00000948  3002                    1065      MOVE.W      D2,D0
0000094A  0240 0E00               1066      ANDI.W      #%0000111000000000,D0
0000094E  EC88                    1067      LSR.L       #6,D0
00000950  4EB8 004E               1068      JSR         EADecoder_left
00000954                          1069      ** Add comma
00000954  103C 000E               1070      MOVE.B      #14,D0
00000958  43F9 000009FC           1071      LEA         pr_comma,A1
0000095E  4E4F                    1072      TRAP        #15
00000960                          1073      ** Decode right side ea
00000960  1002                    1074      MOVE.B      D2,D0
00000962  0200 003F               1075      ANDI.B      #%00111111,D0
00000966  4EB8 0066               1076      JSR         EADecoder
0000096A                          1077      
0000096A  6000 00EE               1078      BRA         opdec_return
0000096E                          1079  MATCH_AND_EA_W
0000096E                          1080      ** Move command size into D1
0000096E  123C 0002               1081      MOVE.B      #2,D1
00000972                          1082      ** Print command
00000972  103C 000E               1083      MOVE.B      #14,D0
00000976  43F9 00000A3C           1084      LEA         pr_AND,A1
0000097C  4E4F                    1085      TRAP        #15
0000097E                          1086      ** Print size
0000097E  43F9 00000A01           1087      LEA         pr_WORD,A1
00000984  4E4F                    1088      TRAP        #15
00000986                          1089      ** Print space
00000986  43F9 000009FA           1090      LEA         pr_space,A1
0000098C  4E4F                    1091      TRAP        #15
0000098E                          1092      ** Decode left side ea
0000098E  3002                    1093      MOVE.W      D2,D0
00000990  0240 0E00               1094      ANDI.W      #%0000111000000000,D0
00000994  EC88                    1095      LSR.L       #6,D0
00000996  4EB8 004E               1096      JSR         EADecoder_left
0000099A                          1097      ** Add comma
0000099A  103C 000E               1098      MOVE.B      #14,D0
0000099E  43F9 000009FC           1099      LEA         pr_comma,A1
000009A4  4E4F                    1100      TRAP        #15
000009A6                          1101      ** Decode right side ea
000009A6  1002                    1102      MOVE.B      D2,D0
000009A8  0200 003F               1103      ANDI.B      #%00111111,D0
000009AC  4EB8 0066               1104      JSR         EADecoder
000009B0                          1105      
000009B0  6000 00A8               1106      BRA         opdec_return
000009B4                          1107  MATCH_AND_EA_L
000009B4                          1108      ** Move command size into D1
000009B4  123C 0004               1109      MOVE.B      #4,D1
000009B8                          1110      ** Print command
000009B8  103C 000E               1111      MOVE.B      #14,D0
000009BC  43F9 00000A3C           1112      LEA         pr_AND,A1
000009C2  4E4F                    1113      TRAP        #15
000009C4                          1114      ** Print size
000009C4  43F9 00000A04           1115      LEA         pr_LONG,A1
000009CA  4E4F                    1116      TRAP        #15
000009CC                          1117      ** Print space
000009CC  43F9 000009FA           1118      LEA         pr_space,A1
000009D2  4E4F                    1119      TRAP        #15
000009D4                          1120      ** Decode left side ea
000009D4  3002                    1121      MOVE.W      D2,D0
000009D6  0240 0E00               1122      ANDI.W      #%0000111000000000,D0
000009DA  EC88                    1123      LSR.L       #6,D0
000009DC  4EB8 004E               1124      JSR         EADecoder_left
000009E0                          1125      ** Add comma
000009E0  103C 000E               1126      MOVE.B      #14,D0
000009E4  43F9 000009FC           1127      LEA         pr_comma,A1
000009EA  4E4F                    1128      TRAP        #15
000009EC                          1129      ** Decode right side ea
000009EC  1002                    1130      MOVE.B      D2,D0
000009EE  0200 003F               1131      ANDI.B      #%00111111,D0
000009F2  4EB8 0066               1132      JSR         EADecoder
000009F6                          1133      
000009F6  6000 0062               1134      BRA         opdec_return
000009FA                          1135  
000009FA                          1136  
000009FA                          1137  
000009FA                          1138  
000009FA                          1139  -------------------- end include --------------------
000009FA                          1140  
000009FA  =00004E71               1141  NOP             EQU $4E71
000009FA  =00000001               1142  MOVE_B          EQU %0001
000009FA  =00000003               1143  MOVE_W          EQU %0011
000009FA  =00000002               1144  MOVE_L          EQU %0010
000009FA  =00000001               1145  MOVEA_WL        EQU %001 
000009FA  =00000007               1146  MOVEQ_          EQU %0111
000009FA  =00000122               1147  MOVEM_TO_MEM_W  EQU %0100100010
000009FA  =00000123               1148  MOVEM_TO_MEM_L  EQU %0100100011
000009FA  =00000132               1149  MOVEM_TO_REG_W  EQU %0100110010
000009FA  =00000133               1150  MOVEM_TO_REG_L  EQU %0100110011
000009FA                          1151  
000009FA  =00000018               1152  ADDI_B          EQU %0000011000
000009FA  =00000019               1153  ADDI_W          EQU %0000011001
000009FA  =0000001A               1154  ADDI_L          EQU %0000011010
000009FA                          1155  
000009FA  =0000000D               1156  ADD_ADDA        EQU %1101
000009FA  =00000000               1157  ADD_TO_REG_B    EQU %000
000009FA  =00000001               1158  ADD_TO_REG_W    EQU %001
000009FA  =00000002               1159  ADD_TO_REG_L    EQU %010
000009FA  =00000004               1160  ADD_TO_EA_B     EQU %100
000009FA  =00000005               1161  ADD_TO_EA_W     EQU %101
000009FA  =00000006               1162  ADD_TO_EA_L     EQU %110
000009FA  =00000003               1163  ADDA_W          EQU %011
000009FA  =00000007               1164  ADDA_L          EQU %111
000009FA                          1165  
000009FA  =00000005               1166  ADDQ            EQU %0101
000009FA  =00000000               1167  ADDQ_B          EQU %000
000009FA  =00000001               1168  ADDQ_W          EQU %001
000009FA  =00000002               1169  ADDQ_L          EQU %010
000009FA                          1170  
000009FA  =0000000C               1171  MULS_W_AND      EQU %1100
000009FA  =00000007               1172  MULS_OP_W       EQU %111 
000009FA                          1173  
000009FA  =00000009               1174  SUB             EQU %1001
000009FA  =00000000               1175  SUB_TO_DN_B     EQU %000
000009FA  =00000001               1176  SUB_TO_DN_W     EQU %001
000009FA  =00000002               1177  SUB_TO_DN_L     EQU %010
000009FA  =00000004               1178  SUB_TO_EA_B     EQU %100
000009FA  =00000005               1179  SUB_TO_EA_W     EQU %101
000009FA  =00000006               1180  SUB_TO_EA_L     EQU %110
000009FA                          1181  
000009FA  =00000008               1182  DIVU_OR         EQU %1000
000009FA  =00000003               1183  DIVU            EQU %011
000009FA                          1184  
000009FA  =00000000               1185  DN_B            EQU %000
000009FA  =00000001               1186  DN_W            EQU %001
000009FA  =00000002               1187  DN_L            EQU %010
000009FA  =00000004               1188  EA_B            EQU %100
000009FA  =00000005               1189  EA_W            EQU %101
000009FA  =00000006               1190  EA_L            EQU %110
000009FA                          1191  
000009FA  =00000004               1192  MULS_LEA_CLR_JSR_RTS    EQU %0100
000009FA  =00004E75               1193  RTS             EQU $4E75
000009FA  =00000007               1194  LEA             EQU %111
000009FA  =0000013A               1195  JSR             EQU %0100111010
000009FA  =00000108               1196  CLR_B           EQU %0100001000
000009FA  =00000109               1197  CLR_W           EQU %0100001001
000009FA  =0000010A               1198  CLR_L           EQU %0100001010
000009FA  =00000130               1199  MULS_L          EQU %0100110000
000009FA                          1200  
000009FA  =0000038F               1201  LSL             EQU %1110001111
000009FA  =0000038B               1202  LSR             EQU %1110001011
000009FA  =00000387               1203  ASR             EQU %1110000111
000009FA  =00000383               1204  ASL             EQU %1110000011
000009FA  =0000039F               1205  ROL             EQU %1110011111
000009FA  =0000039B               1206  ROR             EQU %1110011011
000009FA                          1207  
000009FA  =0000000B               1208  CMP             EQU %1011
000009FA  =00000000               1209  CMP_B           EQU %000
000009FA  =00000001               1210  CMP_W           EQU %001
000009FA  =00000002               1211  CMP_L           EQU %010
000009FA                          1212  
000009FA  =00000006               1213  BCC             EQU %0110
000009FA  =00000000               1214  BCC_16          EQU %00000000
000009FA  =000000FF               1215  BCC_32          EQU $FF
000009FA  =00000000               1216  CC_T                EQU %0000
000009FA  =00000001               1217  CC_F                EQU %0001
000009FA  =00000002               1218  CC_HI           EQU %0010
000009FA  =00000003               1219  CC_LS           EQU %0011
000009FA  =00000004               1220  CC_CC           EQU %0100
000009FA  =00000005               1221  CC_CS           EQU %0101
000009FA  =00000006               1222  CC_NE           EQU %0110
000009FA  =00000007               1223  CC_EQ           EQU %0111
000009FA  =00000008               1224  CC_VC           EQU %1000
000009FA  =00000009               1225  CC_VS           EQU %1001
000009FA  =0000000A               1226  CC_PL           EQU %1010
000009FA  =0000000B               1227  CC_MI           EQU %1011
000009FA  =0000000C               1228  CC_GE           EQU %1100
000009FA  =0000000D               1229  CC_LT           EQU %1101
000009FA  =0000000E               1230  CC_GT           EQU %1110
000009FA  =0000000F               1231  CC_LE           EQU %1111
000009FA                          1232  
000009FA= 20 00                   1233  pr_space    DC.B    ' ',0
000009FC= 2C 00                   1234  pr_comma    DC.B    ',',0
000009FE= 2E 42 00                1235  pr_BYTE     DC.B    '.B',0
00000A01= 2E 57 00                1236  pr_WORD     DC.B    '.W',0
00000A04= 2E 4C 00                1237  pr_LONG     DC.B    '.L',0
00000A07                          1238  
00000A07= 4E 4F 50 00             1239  pr_NOP      DC.B    'NOP',0
00000A0B= 4D 4F 56 45 00          1240  pr_MOVE     DC.B    'MOVE',0
00000A10= 4D 4F 56 45 41 00       1241  pr_MOVEA    DC.B    'MOVEA',0
00000A16= 4D 4F 56 45 51 00       1242  pr_MOVEQ    DC.B    'MOVEQ',0
00000A1C= 4D 4F 56 45 4D 00       1243  pr_MOVEM    DC.B    'MOVEM',0
00000A22= 41 44 44 41 00          1244  pr_ADDA     DC.B    'ADDA',0
00000A27= 4D 55 4C 53 00          1245  pr_MULS     DC.B    'MULS',0
00000A2C= 43 4C 52 00             1246  pr_CLR      DC.B    'CLR',0
00000A30= 52 54 53 00             1247  pr_RTS      DC.B    'RTS',0
00000A34= 43 4D 50 00             1248  pr_CMP      DC.B    'CMP',0
00000A38= 4A 53 52 00             1249  pr_JSR      DC.B    'JSR',0
00000A3C= 41 4E 44 00             1250  pr_AND      DC.B    'AND',0
00000A40                          1251  
00000A40                          1252  
00000A40                          1253  
00000A40                          1254  OpDecoder
00000A40  48E7 FF7E               1255      MOVEM.L     D0-D7/A1-A6, -(SP)
00000A44  4241                    1256      CLR         D1
00000A46  6000 0078               1257      BRA         CHECK_NOP
00000A4A                          1258  NOP_RETURN
00000A4A  6000 0082               1259      BRA         CHECK_FOUR_BIT_SIG
00000A4E                          1260  FOUR_BIT_RETURN
00000A4E  6000 0434               1261      BRA         CHECK_MOVEM
00000A52                          1262  MOVEM_RETURN
00000A52  6000 04D8               1263      BRA         CHECK_ADDI
00000A56                          1264  ADDI_RETURN
00000A56  6000 0028               1265      BRA         CHECK_SHIFT_AND_ROTATE
00000A5A                          1266      
00000A5A                          1267  opdec_return
00000A5A  4CDF 7EFF               1268      MOVEM.L     (SP)+, D0-D7/A1-A6
00000A5E  4E75                    1269      RTS
00000A60                          1270  
00000A60                          1271  ReadFirstFourBits
00000A60                          1272  
00000A60  48A7 2000               1273      MOVEM.W     D2, -(SP)
00000A64                          1274  
00000A64  1E3C 000C               1275      MOVE.B      #12,D7 
00000A68  EE6A                    1276      LSR.W       D7,D2 
00000A6A  1602                    1277      MOVE.B      D2,D3
00000A6C                          1278      
00000A6C  4C9F 0004               1279      MOVEM.W     (SP)+,D2
00000A70  4E75                    1280      RTS
00000A72                          1281      
00000A72                          1282  ReadFirstTenBits
00000A72                          1283      
00000A72  48A7 2000               1284      MOVEM.W     D2, -(SP)
00000A76                          1285   
00000A76  EC4A                    1286      LSR.W       #6,D2 
00000A78  3602                    1287      MOVE.W      D2,D3
00000A7A                          1288      
00000A7A  4C9F 0004               1289      MOVEM.W     (SP)+,D2
00000A7E  4E75                    1290      RTS
00000A80                          1291  CHECK_SHIFT_AND_ROTATE
00000A80                          1292  
00000A80  61F0                    1293      BSR         ReadFirstTenBits
00000A82                          1294      
00000A82  3C3C 038F               1295      MOVE.W      #LSL,D6
00000A86  BC43                    1296      CMP.W       D3,D6
00000A88  6700 056C               1297      BEQ         MATCH_LSL
00000A8C                          1298      
00000A8C  3C3C 038B               1299      MOVE.W      #LSR,D6
00000A90  BC43                    1300      CMP.W       D3,D6
00000A92  6700 0564               1301      BEQ         MATCH_LSR
00000A96                          1302      
00000A96  3C3C 0387               1303      MOVE.W      #ASR,D6
00000A9A  BC43                    1304      CMP.W       D3,D6
00000A9C  6700 055C               1305      BEQ         MATCH_ASR
00000AA0                          1306      
00000AA0  3C3C 0383               1307      MOVE.W      #ASL,D6
00000AA4  BC43                    1308      CMP.W       D3,D6
00000AA6  6700 0554               1309      BEQ         MATCH_ASL
00000AAA                          1310      
00000AAA  3C3C 039F               1311      MOVE.W      #ROL,D6
00000AAE  BC43                    1312      CMP.W       D3,D6
00000AB0  6700 054C               1313      BEQ         MATCH_ROL
00000AB4                          1314      
00000AB4  3C3C 039B               1315      MOVE.W      #ROR,D6
00000AB8  BC43                    1316      CMP.W       D3,D6
00000ABA  6700 0544               1317      BEQ         MATCH_ROR
00000ABE                          1318      
00000ABE  609A                    1319      BRA         opdec_return
00000AC0                          1320      
00000AC0                          1321  CHECK_NOP
00000AC0                          1322      
00000AC0  3C3C 4E71               1323      MOVE.W      #NOP,D6
00000AC4  BC42                    1324      CMP.W       D2,D6
00000AC6  6700 F6C8               1325      BEQ         MATCH_NOP
00000ACA                          1326      
00000ACA  6000 FF7E               1327      BRA         NOP_RETURN
00000ACE                          1328  
00000ACE                          1329  CHECK_FOUR_BIT_SIG
00000ACE                          1330  
00000ACE  6190                    1331      BSR         ReadFirstFourBits
00000AD0                          1332      
00000AD0  1C3C 0001               1333      MOVE.B      #MOVE_B,D6
00000AD4  BC03                    1334      CMP.B       D3,D6
00000AD6  6700 F6C8               1335      BEQ         MATCH_MOVE_B
00000ADA                          1336  
00000ADA  1C3C 0003               1337      MOVE.B      #MOVE_W,D6
00000ADE  BC03                    1338      CMP.B       D3,D6
00000AE0  6700 04B0               1339      BEQ         CHECK_MOVEA_W_AND_MOVE_W
00000AE4                          1340      
00000AE4  1C3C 0002               1341      MOVE.B      #MOVE_L,D6
00000AE8  BC03                    1342      CMP.B       D3,D6
00000AEA  6700 04D0               1343      BEQ         CHECK_MOVEA_L_AND_MOVE_L
00000AEE                          1344   
00000AEE  1C3C 0007               1345      MOVE.B      #MOVEQ_,D6
00000AF2  BC03                    1346      CMP.B       D3,D6
00000AF4  6700 04D8               1347      BEQ         MATCH_MOVEQ
00000AF8                          1348      
00000AF8  1C3C 000D               1349      MOVE.B      #ADD_ADDA,D6
00000AFC  BC03                    1350      CMP.B       D3,D6
00000AFE  6700 03B4               1351      BEQ         CHECK_ADD_ADDA
00000B02                          1352      
00000B02  1C3C 0005               1353      MOVE.B      #ADDQ,D6
00000B06  BC03                    1354      CMP.B       D3,D6
00000B08  6700 0400               1355      BEQ         CHECK_ADDQ
00000B0C                          1356      
00000B0C  1C3C 0009               1357      MOVE.B      #SUB,D6
00000B10  BC03                    1358      CMP.B       D3,D6
00000B12  6700 043E               1359      BEQ         CHECK_SUB
00000B16                          1360      
00000B16  1C3C 0008               1361      MOVE.B      #DIVU_OR,D6
00000B1A  BC03                    1362      CMP.B       D3,D6
00000B1C  6700 0318               1363      BEQ         CHECK_DIVU_OR
00000B20                          1364      
00000B20  1C3C 000C               1365      MOVE.B      #MULS_W_AND,D6
00000B24  BC03                    1366      CMP.B       D3,D6
00000B26  6700 02C0               1367      BEQ         CHECK_MULS_W_AND
00000B2A                          1368      
00000B2A  1C3C 0004               1369      MOVE.B      #MULS_LEA_CLR_JSR_RTS,D6
00000B2E  BC03                    1370      CMP.B       D3,D6
00000B30  6700 0264               1371      BEQ         CHECK_MULS_LEA_CLR_JSR_RTS
00000B34                          1372      
00000B34  1C3C 000B               1373      MOVE.B      #CMP,D6
00000B38  BC03                    1374      CMP.B       D3,D6
00000B3A  6700 0234               1375      BEQ         CHECK_CMP
00000B3E                          1376      
00000B3E  1C3C 0006               1377      MOVE.B      #BCC,D6
00000B42  BC03                    1378      CMP.B       D3,D6
00000B44  6700 0006               1379      BEQ         CHECK_BCC
00000B48                          1380      
00000B48  6000 FF04               1381      BRA         FOUR_BIT_RETURN
00000B4C                          1382  CHECK_BCC
00000B4C                          1383      
00000B4C  1C3C 0000               1384      MOVE.B      #BCC_16,D6
00000B50  BC02                    1385      CMP.B       D2,D6
00000B52  6700 00B8               1386      BEQ         CHECK_BCC_16
00000B56                          1387      
00000B56  1C3C 00FF               1388      MOVE.B      #BCC_32,D6
00000B5A  BC02                    1389      CMP.B       D2,D6
00000B5C  6700 0156               1390      BEQ         CHECK_BCC_32
00000B60                          1391      
00000B60  6000 0002               1392      BRA         CHECK_BCC_8
00000B64                          1393      
00000B64                          1394  CHECK_BCC_8
00000B64                          1395      
00000B64  6100 01F6               1396      BSR         ISOLATE_CC_CODE_FOR_BCC
00000B68                          1397      
00000B68  1C3C 0000               1398      MOVE.B      #CC_T,D6
00000B6C  BC03                    1399      CMP.B       D3,D6
00000B6E  6700 0492               1400      BEQ         MATCH_CC_T_8
00000B72                          1401      
00000B72  1C3C 0001               1402      MOVE.B      #CC_F,D6
00000B76  BC03                    1403      CMP.B       D3,D6
00000B78  6700 048E               1404      BEQ         MATCH_CC_F_8
00000B7C                          1405      
00000B7C  1C3C 0002               1406      MOVE.B      #CC_HI,D6
00000B80  BC03                    1407      CMP.B       D3,D6
00000B82  6700 048A               1408      BEQ         MATCH_CC_HI_8
00000B86                          1409      
00000B86  1C3C 0003               1410      MOVE.B      #CC_LS,D6
00000B8A  BC03                    1411      CMP.B       D3,D6
00000B8C  6700 0486               1412      BEQ         MATCH_CC_LS_8
00000B90                          1413      
00000B90  1C3C 0004               1414      MOVE.B      #CC_CC,D6
00000B94  BC03                    1415      CMP.B       D3,D6
00000B96  6700 0482               1416      BEQ         MATCH_CC_CC_8
00000B9A                          1417      
00000B9A  1C3C 0005               1418      MOVE.B      #CC_CS,D6
00000B9E  BC03                    1419      CMP.B       D3,D6
00000BA0  6700 047E               1420      BEQ         MATCH_CC_CS_8
00000BA4                          1421      
00000BA4  1C3C 0006               1422      MOVE.B      #CC_NE,D6
00000BA8  BC03                    1423      CMP.B       D3,D6
00000BAA  6700 047A               1424      BEQ         MATCH_CC_NE_8
00000BAE                          1425      
00000BAE  1C3C 0007               1426      MOVE.B      #CC_EQ,D6
00000BB2  BC03                    1427      CMP.B       D3,D6
00000BB4  6700 0476               1428      BEQ         MATCH_CC_EQ_8
00000BB8                          1429      
00000BB8  1C3C 0008               1430      MOVE.B      #CC_VC,D6
00000BBC  BC03                    1431      CMP.B       D3,D6
00000BBE  6700 0472               1432      BEQ         MATCH_CC_VC_8
00000BC2                          1433      
00000BC2  1C3C 0009               1434      MOVE.B      #CC_VS,D6
00000BC6  BC03                    1435      CMP.B       D3,D6
00000BC8  6700 046E               1436      BEQ         MATCH_CC_VS_8
00000BCC                          1437      
00000BCC  1C3C 000A               1438      MOVE.B      #CC_PL,D6
00000BD0  BC03                    1439      CMP.B       D3,D6
00000BD2  6700 046A               1440      BEQ         MATCH_CC_PL_8
00000BD6                          1441      
00000BD6  1C3C 000B               1442      MOVE.B      #CC_MI,D6
00000BDA  BC03                    1443      CMP.B       D3,D6
00000BDC  6700 0466               1444      BEQ         MATCH_CC_MI_8
00000BE0                          1445      
00000BE0  1C3C 000C               1446      MOVE.B      #CC_GE,D6
00000BE4  BC03                    1447      CMP.B       D3,D6
00000BE6  6700 0462               1448      BEQ         MATCH_CC_GE_8
00000BEA                          1449      
00000BEA  1C3C 000D               1450      MOVE.B      #CC_LT,D6
00000BEE  BC03                    1451      CMP.B       D3,D6
00000BF0  6700 045E               1452      BEQ         MATCH_CC_LT_8
00000BF4                          1453      
00000BF4  1C3C 000E               1454      MOVE.B      #CC_GT,D6
00000BF8  BC03                    1455      CMP.B       D3,D6
00000BFA  6700 045A               1456      BEQ         MATCH_CC_GT_8
00000BFE                          1457      
00000BFE  1C3C 000F               1458      MOVE.B      #CC_LE,D6
00000C02  BC03                    1459      CMP.B       D3,D6
00000C04  6700 0456               1460      BEQ         MATCH_CC_LE_8
00000C08                          1461  
00000C08  6000 0458               1462      BRA         ERROR
00000C0C                          1463      
00000C0C                          1464  CHECK_BCC_16
00000C0C                          1465  
00000C0C  6100 014E               1466      BSR         ISOLATE_CC_CODE_FOR_BCC
00000C10                          1467      
00000C10  1C3C 0000               1468      MOVE.B      #CC_T,D6
00000C14  BC03                    1469      CMP.B       D3,D6
00000C16  6700 03EC               1470      BEQ         MATCH_CC_T_16
00000C1A                          1471      
00000C1A  1C3C 0001               1472      MOVE.B      #CC_F,D6
00000C1E  BC03                    1473      CMP.B       D3,D6
00000C20  6700 03E8               1474      BEQ         MATCH_CC_F_16
00000C24                          1475      
00000C24  1C3C 0002               1476      MOVE.B      #CC_HI,D6
00000C28  BC03                    1477      CMP.B       D3,D6
00000C2A  6700 03E4               1478      BEQ         MATCH_CC_HI_16
00000C2E                          1479      
00000C2E  1C3C 0003               1480      MOVE.B      #CC_LS,D6
00000C32  BC03                    1481      CMP.B       D3,D6
00000C34  6700 03E0               1482      BEQ         MATCH_CC_LS_16
00000C38                          1483      
00000C38  1C3C 0004               1484      MOVE.B      #CC_CC,D6
00000C3C  BC03                    1485      CMP.B       D3,D6
00000C3E  6700 03DC               1486      BEQ         MATCH_CC_CC_16
00000C42                          1487      
00000C42  1C3C 0005               1488      MOVE.B      #CC_CS,D6
00000C46  BC03                    1489      CMP.B       D3,D6
00000C48  6700 03D8               1490      BEQ         MATCH_CC_CS_16
00000C4C                          1491      
00000C4C  1C3C 0006               1492      MOVE.B      #CC_NE,D6
00000C50  BC03                    1493      CMP.B       D3,D6
00000C52  6700 03D4               1494      BEQ         MATCH_CC_NE_16
00000C56                          1495      
00000C56  1C3C 0007               1496      MOVE.B      #CC_EQ,D6
00000C5A  BC03                    1497      CMP.B       D3,D6
00000C5C  6700 03D0               1498      BEQ         MATCH_CC_EQ_16
00000C60                          1499      
00000C60  1C3C 0008               1500      MOVE.B      #CC_VC,D6
00000C64  BC03                    1501      CMP.B       D3,D6
00000C66  6700 03CC               1502      BEQ         MATCH_CC_VC_16
00000C6A                          1503      
00000C6A  1C3C 0009               1504      MOVE.B      #CC_VS,D6
00000C6E  BC03                    1505      CMP.B       D3,D6
00000C70  6700 03C8               1506      BEQ         MATCH_CC_VS_16
00000C74                          1507      
00000C74  1C3C 000A               1508      MOVE.B      #CC_PL,D6
00000C78  BC03                    1509      CMP.B       D3,D6
00000C7A  6700 03C4               1510      BEQ         MATCH_CC_PL_16
00000C7E                          1511      
00000C7E  1C3C 000B               1512      MOVE.B      #CC_MI,D6
00000C82  BC03                    1513      CMP.B       D3,D6
00000C84  6700 03C0               1514      BEQ         MATCH_CC_MI_16
00000C88                          1515      
00000C88  1C3C 000C               1516      MOVE.B      #CC_GE,D6
00000C8C  BC03                    1517      CMP.B       D3,D6
00000C8E  6700 03BC               1518      BEQ         MATCH_CC_GE_16
00000C92                          1519      
00000C92  1C3C 000D               1520      MOVE.B      #CC_LT,D6
00000C96  BC03                    1521      CMP.B       D3,D6
00000C98  6700 03B8               1522      BEQ         MATCH_CC_LT_16
00000C9C                          1523      
00000C9C  1C3C 000E               1524      MOVE.B      #CC_GT,D6
00000CA0  BC03                    1525      CMP.B       D3,D6
00000CA2  6700 03B4               1526      BEQ         MATCH_CC_GT_16
00000CA6                          1527      
00000CA6  1C3C 000F               1528      MOVE.B      #CC_LE,D6
00000CAA  BC03                    1529      CMP.B       D3,D6
00000CAC  6700 03B0               1530      BEQ         MATCH_CC_LE_16
00000CB0                          1531  
00000CB0  6000 03B0               1532      BRA         ERROR
00000CB4                          1533  
00000CB4                          1534  
00000CB4                          1535  CHECK_BCC_32  
00000CB4                          1536  
00000CB4  6100 00A6               1537      BSR         ISOLATE_CC_CODE_FOR_BCC 
00000CB8                          1538      
00000CB8  1C3C 0000               1539      MOVE.B      #CC_T,D6
00000CBC  BC03                    1540      CMP.B       D3,D6
00000CBE  6700 0346               1541      BEQ         MATCH_CC_T_32
00000CC2                          1542      
00000CC2  1C3C 0001               1543      MOVE.B      #CC_F,D6
00000CC6  BC03                    1544      CMP.B       D3,D6
00000CC8  6700 0342               1545      BEQ         MATCH_CC_F_32
00000CCC                          1546      
00000CCC  1C3C 0002               1547      MOVE.B      #CC_HI,D6
00000CD0  BC03                    1548      CMP.B       D3,D6
00000CD2  6700 033E               1549      BEQ         MATCH_CC_HI_32
00000CD6                          1550      
00000CD6  1C3C 0003               1551      MOVE.B      #CC_LS,D6
00000CDA  BC03                    1552      CMP.B       D3,D6
00000CDC  6700 033A               1553      BEQ         MATCH_CC_LS_32
00000CE0                          1554      
00000CE0  1C3C 0004               1555      MOVE.B      #CC_CC,D6
00000CE4  BC03                    1556      CMP.B       D3,D6
00000CE6  6700 0336               1557      BEQ         MATCH_CC_CC_32
00000CEA                          1558      
00000CEA  1C3C 0005               1559      MOVE.B      #CC_CS,D6
00000CEE  BC03                    1560      CMP.B       D3,D6
00000CF0  6700 0332               1561      BEQ         MATCH_CC_CS_32
00000CF4                          1562      
00000CF4  1C3C 0006               1563      MOVE.B      #CC_NE,D6
00000CF8  BC03                    1564      CMP.B       D3,D6
00000CFA  6700 032E               1565      BEQ         MATCH_CC_NE_32
00000CFE                          1566      
00000CFE  1C3C 0007               1567      MOVE.B      #CC_EQ,D6
00000D02  BC03                    1568      CMP.B       D3,D6
00000D04  6700 032A               1569      BEQ         MATCH_CC_EQ_32
00000D08                          1570      
00000D08  1C3C 0008               1571      MOVE.B      #CC_VC,D6
00000D0C  BC03                    1572      CMP.B       D3,D6
00000D0E  6700 0326               1573      BEQ         MATCH_CC_VC_32
00000D12                          1574      
00000D12  1C3C 0009               1575      MOVE.B      #CC_VS,D6
00000D16  BC03                    1576      CMP.B       D3,D6
00000D18  6700 0322               1577      BEQ         MATCH_CC_VS_32
00000D1C                          1578      
00000D1C  1C3C 000A               1579      MOVE.B      #CC_PL,D6
00000D20  BC03                    1580      CMP.B       D3,D6
00000D22  6700 031E               1581      BEQ         MATCH_CC_PL_32
00000D26                          1582      
00000D26  1C3C 000B               1583      MOVE.B      #CC_MI,D6
00000D2A  BC03                    1584      CMP.B       D3,D6
00000D2C  6700 031A               1585      BEQ         MATCH_CC_MI_32
00000D30                          1586      
00000D30  1C3C 000C               1587      MOVE.B      #CC_GE,D6
00000D34  BC03                    1588      CMP.B       D3,D6
00000D36  6700 0316               1589      BEQ         MATCH_CC_GE_32
00000D3A                          1590      
00000D3A  1C3C 000D               1591      MOVE.B      #CC_LT,D6
00000D3E  BC03                    1592      CMP.B       D3,D6
00000D40  6700 0312               1593      BEQ         MATCH_CC_LT_32
00000D44                          1594      
00000D44  1C3C 000E               1595      MOVE.B      #CC_GT,D6
00000D48  BC03                    1596      CMP.B       D3,D6
00000D4A  6700 030E               1597      BEQ         MATCH_CC_GT_32
00000D4E                          1598      
00000D4E  1C3C 000F               1599      MOVE.B      #CC_LE,D6
00000D52  BC03                    1600      CMP.B       D3,D6
00000D54  6700 030A               1601      BEQ         MATCH_CC_LE_32
00000D58                          1602  
00000D58  6000 0308               1603      BRA         ERROR
00000D5C                          1604   
00000D5C                          1605  ISOLATE_CC_CODE_FOR_BCC
00000D5C                          1606  
00000D5C  48A7 2000               1607      MOVEM.W     D2, -(SP) 
00000D60                          1608      
00000D60  E94A                    1609      LSL.W       #4,D2
00000D62  1E3C 000C               1610      MOVE.B      #12,D7
00000D66  EE6A                    1611      LSR.W       D7,D2
00000D68                          1612      
00000D68  1602                    1613      MOVE.B      D2,D3      
00000D6A                          1614  
00000D6A  4C9F 0004               1615      MOVEM.W     (SP)+,D2 
00000D6E  4E75                    1616      RTS
00000D70                          1617  CHECK_CMP
00000D70                          1618      
00000D70  6100 0232               1619      BSR         ISOLATE_OP_CODE
00000D74                          1620      
00000D74  1C3C 0000               1621      MOVE.B      #CMP_B,D6
00000D78  BC03                    1622      CMP.B       D3,D6
00000D7A  6700 F95A               1623      BEQ         MATCH_CMP_B
00000D7E                          1624      
00000D7E  1C3C 0001               1625      MOVE.B      #CMP_W,D6
00000D82  BC03                    1626      CMP.B       D3,D6
00000D84  6700 F996               1627      BEQ         MATCH_CMP_W
00000D88                          1628      
00000D88  1C3C 0002               1629      MOVE.B      #CMP_L,D6
00000D8C  BC03                    1630      CMP.B       D3,D6
00000D8E  6700 F9D4               1631      BEQ         MATCH_CMP_L
00000D92                          1632      
00000D92  6000 02CE               1633      BRA         ERROR
00000D96                          1634  CHECK_MULS_LEA_CLR_JSR_RTS
00000D96                          1635  
00000D96  3C3C 4E75               1636      MOVE.W      #RTS,D6
00000D9A  BC42                    1637      CMP.W       D2,D6
00000D9C  6700 F928               1638      BEQ         MATCH_RTS
00000DA0                          1639      
00000DA0  6100 0202               1640      BSR         ISOLATE_OP_CODE
00000DA4                          1641      
00000DA4  1C3C 0007               1642      MOVE.B      #LEA,D6
00000DA8  BC03                    1643      CMP.B       D3,D6
00000DAA  6700 0246               1644      BEQ         MATCH_LEA
00000DAE                          1645      
00000DAE  6100 FCC2               1646      BSR         ReadFirstTenBits
00000DB2                          1647      
00000DB2  3C3C 013A               1648      MOVE.W      #JSR,D6
00000DB6  BC43                    1649      CMP.W       D3,D6
00000DB8  6700 F9F0               1650      BEQ         MATCH_JSR
00000DBC                          1651      
00000DBC  3C3C 0108               1652      MOVE.W      #CLR_B,D6
00000DC0  BC43                    1653      CMP.W       D3,D6
00000DC2  6700 FA08               1654      BEQ         MATCH_CLR_B
00000DC6                          1655      
00000DC6  3C3C 0109               1656      MOVE.W      #CLR_W,D6
00000DCA  BC43                    1657      CMP.W       D3,D6
00000DCC  6700 FA2C               1658      BEQ         MATCH_CLR_W
00000DD0                          1659      
00000DD0  3C3C 010A               1660      MOVE.W      #CLR_L,D6
00000DD4  BC43                    1661      CMP.W       D3,D6
00000DD6  6700 FA50               1662      BEQ         MATCH_CLR_L
00000DDA                          1663      
00000DDA  3C3C 0130               1664      MOVE.W      #MULS_L,D6  * Shouldn't need to check for the rest of the opcode..?
00000DDE  BC43                    1665      CMP.W       D3,D6
00000DE0  6700 0212               1666      BEQ         MATCH_MULS_L
00000DE4                          1667      
00000DE4  6000 027C               1668      BRA         ERROR
00000DE8                          1669      
00000DE8                          1670  CHECK_MULS_W_AND
00000DE8                          1671  
00000DE8  6100 01BA               1672      BSR         ISOLATE_OP_CODE
00000DEC                          1673      
00000DEC  1C3C 0007               1674      MOVE.B      #MULS_OP_W,D6
00000DF0  BC03                    1675      CMP.B       D3,D6
00000DF2  6700 F88C               1676      BEQ         MATCH_MULS_W
00000DF6                          1677      
00000DF6  1C3C 0000               1678      MOVE.B      #DN_B,D6
00000DFA  BC03                    1679      CMP.B       D3,D6
00000DFC  6700 FA58               1680      BEQ         MATCH_AND_DN_B
00000E00                          1681      
00000E00  1C3C 0001               1682      MOVE.B      #DN_W,D6
00000E04  BC03                    1683      CMP.B       D3,D6
00000E06  6700 FA94               1684      BEQ         MATCH_AND_DN_W
00000E0A                          1685      
00000E0A  1C3C 0002               1686      MOVE.B      #DN_L,D6
00000E0E  BC03                    1687      CMP.B       D3,D6
00000E10  6700 FAD0               1688      BEQ         MATCH_AND_DN_L
00000E14                          1689      
00000E14  1C3C 0004               1690      MOVE.B      #EA_B,D6
00000E18  BC03                    1691      CMP.B       D3,D6
00000E1A  6700 FB0C               1692      BEQ         MATCH_AND_EA_B
00000E1E                          1693      
00000E1E  1C3C 0005               1694      MOVE.B      #EA_W,D6
00000E22  BC03                    1695      CMP.B       D3,D6
00000E24  6700 FB48               1696      BEQ         MATCH_AND_EA_W
00000E28                          1697      
00000E28  1C3C 0006               1698      MOVE.B      #EA_L,D6
00000E2C  BC03                    1699      CMP.B       D3,D6
00000E2E  6700 FB84               1700      BEQ         MATCH_AND_EA_L
00000E32                          1701      
00000E32  6000 022E               1702      BRA         ERROR
00000E36                          1703  
00000E36                          1704  CHECK_DIVU_OR
00000E36                          1705      
00000E36  6100 016C               1706      BSR         ISOLATE_OP_CODE
00000E3A                          1707      
00000E3A  1C3C 0003               1708      MOVE.B      #DIVU,D6
00000E3E  BC03                    1709      CMP.B       D3,D6
00000E40  6700 01A2               1710      BEQ         MATCH_DIVU
00000E44                          1711      
00000E44  1C3C 0000               1712      MOVE.B      #DN_B,D6
00000E48  BC03                    1713      CMP.B       D3,D6
00000E4A  6700 019A               1714      BEQ         MATCH_OR_DN_B
00000E4E                          1715      
00000E4E  1C3C 0001               1716      MOVE.B      #DN_W,D6
00000E52  BC03                    1717      CMP.B       D3,D6
00000E54  6700 0192               1718      BEQ         MATCH_OR_DN_W
00000E58                          1719      
00000E58  1C3C 0002               1720      MOVE.B      #DN_L,D6
00000E5C  BC03                    1721      CMP.B       D3,D6
00000E5E  6700 018A               1722      BEQ         MATCH_OR_DN_L
00000E62                          1723      
00000E62  1C3C 0004               1724      MOVE.B      #EA_B,D6
00000E66  BC03                    1725      CMP.B       D3,D6
00000E68  6700 0182               1726      BEQ         MATCH_OR_EA_B
00000E6C                          1727      
00000E6C  1C3C 0005               1728      MOVE.B      #EA_W,D6
00000E70  BC03                    1729      CMP.B       D3,D6
00000E72  6700 017A               1730      BEQ         MATCH_OR_EA_W
00000E76                          1731      
00000E76  1C3C 0006               1732      MOVE.B      #EA_L,D6
00000E7A  BC03                    1733      CMP.B       D3,D6
00000E7C  6700 0172               1734      BEQ         MATCH_OR_EA_L
00000E80                          1735      
00000E80  6000 01E0               1736      BRA         ERROR
00000E84                          1737  
00000E84                          1738  CHECK_MOVEM
00000E84                          1739      
00000E84  6100 FBEC               1740      BSR         ReadFirstTenBits
00000E88                          1741      
00000E88  3C3C 0122               1742      MOVE.W      #MOVEM_TO_MEM_W,D6
00000E8C  BC43                    1743      CMP.W       D3,D6
00000E8E  6700 0140               1744      BEQ         MATCH_MOVEM_TO_MEM_W
00000E92                          1745      
00000E92  3C3C 0123               1746      MOVE.W      #MOVEM_TO_MEM_L,D6
00000E96  BC43                    1747      CMP.W       D3,D6
00000E98  6700 0138               1748      BEQ         MATCH_MOVEM_TO_MEM_L
00000E9C                          1749      
00000E9C  3C3C 0132               1750      MOVE.W      #MOVEM_TO_REG_W,D6
00000EA0  BC43                    1751      CMP.W       D3,D6
00000EA2  6700 0130               1752      BEQ         MATCH_MOVEM_TO_REG_W
00000EA6                          1753      
00000EA6  3C3C 0133               1754      MOVE.W      #MOVEM_TO_REG_L,D6
00000EAA  BC43                    1755      CMP.W       D3,D6
00000EAC  6700 0128               1756      BEQ         MATCH_MOVEM_TO_REG_L
00000EB0                          1757      
00000EB0  6000 FBA0               1758      BRA         MOVEM_RETURN
00000EB4                          1759  CHECK_ADD_ADDA
00000EB4                          1760      
00000EB4  6100 00EE               1761      BSR         ISOLATE_OP_CODE
00000EB8                          1762      
00000EB8  3C3C 0000               1763      MOVE.W      #DN_B,D6
00000EBC  BC43                    1764      CMP.W       D3,D6
00000EBE  6700 F42C               1765      BEQ         MATCH_ADD_TO_REG_B
00000EC2                          1766      
00000EC2  3C3C 0001               1767      MOVE.W      #DN_W,D6
00000EC6  BC43                    1768      CMP.W       D3,D6
00000EC8  6700 F466               1769      BEQ         MATCH_ADD_TO_REG_W
00000ECC                          1770      
00000ECC  3C3C 0002               1771      MOVE.W      #DN_L,D6
00000ED0  BC43                    1772      CMP.W       D3,D6
00000ED2  6700 F4A0               1773      BEQ         MATCH_ADD_TO_REG_L
00000ED6                          1774      
00000ED6  3C3C 0004               1775      MOVE.W      #EA_B,D6
00000EDA  BC43                    1776      CMP.W       D3,D6
00000EDC  6700 F4DA               1777      BEQ         MATCH_ADD_TO_EA_B
00000EE0                          1778      
00000EE0  3C3C 0005               1779      MOVE.W      #EA_W,D6
00000EE4  BC43                    1780      CMP.W       D3,D6
00000EE6  6700 F514               1781      BEQ         MATCH_ADD_TO_EA_W
00000EEA                          1782      
00000EEA  3C3C 0006               1783      MOVE.W      #EA_L,D6
00000EEE  BC43                    1784      CMP.W       D3,D6
00000EF0  6700 F54E               1785      BEQ         MATCH_ADD_TO_EA_L
00000EF4                          1786      
00000EF4  3C3C 0003               1787      MOVE.W      #ADDA_W,D6
00000EF8  BC43                    1788      CMP.W       D3,D6
00000EFA  6700 F6F8               1789      BEQ         MATCH_ADDA_W
00000EFE                          1790      
00000EFE  3C3C 0007               1791      MOVE.W      #ADDA_L,D6
00000F02  BC43                    1792      CMP.W       D3,D6
00000F04  6700 F734               1793      BEQ         MATCH_ADDA_L
00000F08                          1794      
00000F08  4E75                    1795      RTS ** Change later?
00000F0A                          1796  CHECK_ADDQ
00000F0A                          1797      
00000F0A  6100 0098               1798      BSR         ISOLATE_OP_CODE
00000F0E                          1799      
00000F0E  3C3C 0000               1800      MOVE.W      #ADDQ_B,D6
00000F12  BC43                    1801      CMP.W       D3,D6
00000F14  6700 F56E               1802      BEQ         MATCH_ADDQ_B
00000F18                          1803      
00000F18  3C3C 0001               1804      MOVE.W      #ADDQ_W,D6
00000F1C  BC43                    1805      CMP.W       D3,D6
00000F1E  6700 F5B0               1806      BEQ         MATCH_ADDQ_W
00000F22                          1807      
00000F22  3C3C 0002               1808      MOVE.W      #ADDQ_L,D6
00000F26  BC43                    1809      CMP.W       D3,D6
00000F28  6700 F5F2               1810      BEQ         MATCH_ADDQ_L
00000F2C                          1811      
00000F2C                          1812  CHECK_ADDI
00000F2C                          1813  
00000F2C  6100 FB44               1814      BSR         ReadFirstTenBits
00000F30                          1815      
00000F30  3C3C 0018               1816      MOVE.W      #ADDI_B,D6
00000F34  BC43                    1817      CMP.W       D3,D6
00000F36  6700 F2F4               1818      BEQ         MATCH_ADDI_B
00000F3A                          1819      
00000F3A  3C3C 0019               1820      MOVE.W      #ADDI_W,D6
00000F3E  BC43                    1821      CMP.W       D3,D6
00000F40  6700 F32A               1822      BEQ         MATCH_ADDI_W
00000F44                          1823      
00000F44  3C3C 001A               1824      MOVE.W      #ADDI_L,D6
00000F48  BC43                    1825      CMP.W       D3,D6
00000F4A  6700 F360               1826      BEQ         MATCH_ADDI_L
00000F4E                          1827      
00000F4E  6000 FB06               1828      BRA         ADDI_RETURN
00000F52                          1829  CHECK_SUB
00000F52                          1830      
00000F52  6100 0050               1831      BSR         ISOLATE_OP_CODE
00000F56                          1832      
00000F56  3C3C 0000               1833      MOVE.W      #DN_B,D6
00000F5A  BC43                    1834      CMP.W       D3,D6
00000F5C  6700 007A               1835      BEQ         MATCH_SUB_TO_DN_B
00000F60                          1836      
00000F60  3C3C 0001               1837      MOVE.W      #DN_W,D6
00000F64  BC43                    1838      CMP.W       D3,D6
00000F66  6700 0072               1839      BEQ         MATCH_SUB_TO_DN_W
00000F6A                          1840      
00000F6A  3C3C 0002               1841      MOVE.W      #DN_L,D6
00000F6E  BC43                    1842      CMP.W       D3,D6
00000F70  6700 006A               1843      BEQ         MATCH_SUB_TO_DN_L
00000F74                          1844      
00000F74  3C3C 0004               1845      MOVE.W      #EA_B,D6
00000F78  BC43                    1846      CMP.W       D3,D6
00000F7A  6700 0062               1847      BEQ         MATCH_SUB_TO_EA_B
00000F7E                          1848      
00000F7E  3C3C 0005               1849      MOVE.W      #EA_W,D6
00000F82  BC43                    1850      CMP.W       D3,D6
00000F84  6700 005A               1851      BEQ         MATCH_SUB_TO_EA_W
00000F88                          1852      
00000F88  3C3C 0006               1853      MOVE.W      #EA_L,D6
00000F8C  BC43                    1854      CMP.W       D3,D6
00000F8E  6700 0052               1855      BEQ         MATCH_SUB_TO_EA_L
00000F92                          1856  CHECK_MOVEA_W_AND_MOVE_W
00000F92                          1857      
00000F92  6100 0010               1858      BSR         ISOLATE_OP_CODE
00000F96                          1859         
00000F96  1C3C 0001               1860      MOVE.B      #MOVEA_WL,D6
00000F9A  BC03                    1861      CMP.B       D3,D6
00000F9C  6700 F5CA               1862      BEQ         MATCH_MOVEA_W
00000FA0                          1863      
00000FA0  6000 F244               1864      BRA         MATCH_MOVE_W 
00000FA4                          1865  ISOLATE_OP_CODE 
00000FA4                          1866  
00000FA4  48A7 2000               1867      MOVEM.W     D2, -(SP)    
00000FA8                          1868     
00000FA8  1E3C 0007               1869      MOVE.B      #7,D7          
00000FAC  EF6A                    1870      LSL.W       D7,D2
00000FAE  1E3C 000D               1871      MOVE.B      #13,D7
00000FB2  EE6A                    1872      LSR.W       D7,D2
00000FB4  1602                    1873      MOVE.B      D2,D3    
00000FB6                          1874         
00000FB6  4C9F 0004               1875      MOVEM.W     (SP)+,D2 
00000FBA  4E75                    1876      RTS
00000FBC                          1877  CHECK_MOVEA_L_AND_MOVE_L
00000FBC                          1878      
00000FBC  61E6                    1879      BSR         ISOLATE_OP_CODE
00000FBE                          1880         
00000FBE  1C3C 0001               1881      MOVE.B      #MOVEA_WL,D6
00000FC2  BC03                    1882      CMP.B       D3,D6
00000FC4  6700 F5E8               1883      BEQ         MATCH_MOVEA_L 
00000FC8                          1884      
00000FC8  6000 0002               1885      BRA         MATCH_MOVE_L   
00000FCC                          1886   
00000FCC                          1887  MATCH_MOVE_L
00000FCC  3A02                    1888      MOVE.W      D2,D5       *REMOVE
00000FCE                          1889  
00000FCE                          1890  MATCH_MOVEQ
00000FCE  3A02                    1891      MOVE.W      D2,D5       *REMOVE
00000FD0                          1892      
00000FD0                          1893  MATCH_MOVEM_TO_MEM_W
00000FD0  3A02                    1894      MOVE.W      D2,D5       *REMOVE
00000FD2                          1895  MATCH_MOVEM_TO_MEM_L
00000FD2  3A02                    1896      MOVE.W      D2,D5       *REMOVE
00000FD4                          1897  MATCH_MOVEM_TO_REG_W
00000FD4  3A02                    1898      MOVE.W      D2,D5       *REMOVE
00000FD6                          1899  MATCH_MOVEM_TO_REG_L
00000FD6  3A02                    1900      MOVE.W      D2,D5       *REMOVE
00000FD8                          1901      
00000FD8                          1902  MATCH_SUB_TO_DN_B
00000FD8  3A02                    1903      MOVE.W      D2,D5       *REMOVE
00000FDA                          1904  MATCH_SUB_TO_DN_W
00000FDA  3A02                    1905      MOVE.W      D2,D5       *REMOVE
00000FDC                          1906  MATCH_SUB_TO_DN_L
00000FDC  3A02                    1907      MOVE.W      D2,D5       *REMOVE
00000FDE                          1908  MATCH_SUB_TO_EA_B
00000FDE  3A02                    1909      MOVE.W      D2,D5       *REMOVE
00000FE0                          1910  MATCH_SUB_TO_EA_W
00000FE0  3A02                    1911      MOVE.W      D2,D5       *REMOVE
00000FE2                          1912  MATCH_SUB_TO_EA_L
00000FE2  3A02                    1913      MOVE.W      D2,D5       *REMOVE
00000FE4                          1914  MATCH_DIVU
00000FE4  3A02                    1915      MOVE.W      D2,D5       *REMOVE
00000FE6                          1916  MATCH_OR_DN_B
00000FE6  3A02                    1917      MOVE.W      D2,D5       *REMOVE
00000FE8                          1918  MATCH_OR_DN_W
00000FE8  3A02                    1919      MOVE.W      D2,D5       *REMOVE
00000FEA                          1920  MATCH_OR_DN_L
00000FEA  3A02                    1921      MOVE.W      D2,D5       *REMOVE
00000FEC                          1922  MATCH_OR_EA_B
00000FEC  3A02                    1923      MOVE.W      D2,D5       *REMOVE
00000FEE                          1924  MATCH_OR_EA_W
00000FEE  3A02                    1925      MOVE.W      D2,D5       *REMOVE
00000FF0                          1926  MATCH_OR_EA_L
00000FF0  3A02                    1927      MOVE.W      D2,D5       *REMOVE
00000FF2                          1928  
00000FF2                          1929  MATCH_LEA
00000FF2  3A02                    1930      MOVE.W      D2,D5       *REMOVE
00000FF4                          1931  
00000FF4                          1932  MATCH_MULS_L
00000FF4  3A02                    1933      MOVE.W      D2,D5       *REMOVE
00000FF6                          1934  MATCH_LSL
00000FF6  3A02                    1935      MOVE.W      D2,D5       *REMOVE
00000FF8                          1936  MATCH_LSR
00000FF8  3A02                    1937      MOVE.W      D2,D5       *REMOVE
00000FFA                          1938  MATCH_ASR
00000FFA  3A02                    1939      MOVE.W      D2,D5       *REMOVE
00000FFC                          1940  MATCH_ASL
00000FFC  3A02                    1941      MOVE.W      D2,D5       *REMOVE
00000FFE                          1942  MATCH_ROL
00000FFE  3A02                    1943      MOVE.W      D2,D5       *REMOVE
00001000                          1944  MATCH_ROR
00001000  3A02                    1945      MOVE.W      D2,D5       *REMOVE
00001002                          1946      
00001002                          1947  MATCH_CC_T_8
00001002  3A02                    1948      MOVE.W      D2,D5       *REMOVE
00001004                          1949  MATCH_CC_T_16
00001004  3A02                    1950      MOVE.W      D2,D5       *REMOVE
00001006                          1951  MATCH_CC_T_32
00001006  3A02                    1952      MOVE.W      D2,D5       *REMOVE
00001008                          1953  MATCH_CC_F_8
00001008  3A02                    1954      MOVE.W      D2,D5       *REMOVE
0000100A                          1955  MATCH_CC_F_16
0000100A  3A02                    1956      MOVE.W      D2,D5       *REMOVE
0000100C                          1957  MATCH_CC_F_32
0000100C  3A02                    1958      MOVE.W      D2,D5       *REMOVE
0000100E                          1959  MATCH_CC_HI_8
0000100E  3A02                    1960      MOVE.W      D2,D5       *REMOVE
00001010                          1961  MATCH_CC_HI_16
00001010  3A02                    1962      MOVE.W      D2,D5       *REMOVE
00001012                          1963  MATCH_CC_HI_32
00001012  3A02                    1964      MOVE.W      D2,D5       *REMOVE
00001014                          1965  MATCH_CC_LS_8
00001014  3A02                    1966      MOVE.W      D2,D5       *REMOVE
00001016                          1967  MATCH_CC_LS_16
00001016  3A02                    1968      MOVE.W      D2,D5       *REMOVE
00001018                          1969  MATCH_CC_LS_32  
00001018  3A02                    1970      MOVE.W      D2,D5       *REMOVE
0000101A                          1971  MATCH_CC_CC_8
0000101A  3A02                    1972      MOVE.W      D2,D5       *REMOVE
0000101C                          1973  MATCH_CC_CC_16
0000101C  3A02                    1974      MOVE.W      D2,D5       *REMOVE
0000101E                          1975  MATCH_CC_CC_32
0000101E  3A02                    1976      MOVE.W      D2,D5       *REMOVE
00001020                          1977  MATCH_CC_CS_8
00001020  3A02                    1978      MOVE.W      D2,D5       *REMOVE
00001022                          1979  MATCH_CC_CS_16
00001022  3A02                    1980      MOVE.W      D2,D5       *REMOVE
00001024                          1981  MATCH_CC_CS_32
00001024  3A02                    1982      MOVE.W      D2,D5       *REMOVE
00001026                          1983  MATCH_CC_NE_8
00001026  3A02                    1984      MOVE.W      D2,D5       *REMOVE
00001028                          1985  MATCH_CC_NE_16
00001028  3A02                    1986      MOVE.W      D2,D5       *REMOVE
0000102A                          1987  MATCH_CC_NE_32
0000102A  3A02                    1988      MOVE.W      D2,D5       *REMOVE
0000102C                          1989  MATCH_CC_EQ_8
0000102C  3A02                    1990      MOVE.W      D2,D5       *REMOVE
0000102E                          1991  MATCH_CC_EQ_16
0000102E  3A02                    1992      MOVE.W      D2,D5       *REMOVE
00001030                          1993  MATCH_CC_EQ_32
00001030  3A02                    1994      MOVE.W      D2,D5       *REMOVE
00001032                          1995  MATCH_CC_VC_8
00001032  3A02                    1996      MOVE.W      D2,D5       *REMOVE
00001034                          1997  MATCH_CC_VC_16
00001034  3A02                    1998      MOVE.W      D2,D5       *REMOVE
00001036                          1999  MATCH_CC_VC_32
00001036  3A02                    2000      MOVE.W      D2,D5       *REMOVE
00001038                          2001  MATCH_CC_VS_8
00001038  3A02                    2002      MOVE.W      D2,D5       *REMOVE
0000103A                          2003  MATCH_CC_VS_16
0000103A  3A02                    2004      MOVE.W      D2,D5       *REMOVE
0000103C                          2005  MATCH_CC_VS_32
0000103C  3A02                    2006      MOVE.W      D2,D5       *REMOVE
0000103E                          2007  MATCH_CC_PL_8
0000103E  3A02                    2008      MOVE.W      D2,D5       *REMOVE
00001040                          2009  MATCH_CC_PL_16
00001040  3A02                    2010      MOVE.W      D2,D5       *REMOVE
00001042                          2011  MATCH_CC_PL_32
00001042  3A02                    2012      MOVE.W      D2,D5       *REMOVE
00001044                          2013  MATCH_CC_MI_8
00001044  3A02                    2014      MOVE.W      D2,D5       *REMOVE
00001046                          2015  MATCH_CC_MI_16
00001046  3A02                    2016      MOVE.W      D2,D5       *REMOVE
00001048                          2017  MATCH_CC_MI_32
00001048  3A02                    2018      MOVE.W      D2,D5       *REMOVE
0000104A                          2019  MATCH_CC_GE_8
0000104A  3A02                    2020      MOVE.W      D2,D5       *REMOVE
0000104C                          2021  MATCH_CC_GE_16
0000104C  3A02                    2022      MOVE.W      D2,D5       *REMOVE
0000104E                          2023  MATCH_CC_GE_32
0000104E  3A02                    2024      MOVE.W      D2,D5       *REMOVE
00001050                          2025  MATCH_CC_LT_8
00001050  3A02                    2026      MOVE.W      D2,D5       *REMOVE
00001052                          2027  MATCH_CC_LT_16
00001052  3A02                    2028      MOVE.W      D2,D5       *REMOVE
00001054                          2029  MATCH_CC_LT_32
00001054  3A02                    2030      MOVE.W      D2,D5       *REMOVE
00001056                          2031  MATCH_CC_GT_8
00001056  3A02                    2032      MOVE.W      D2,D5       *REMOVE
00001058                          2033  MATCH_CC_GT_16
00001058  3A02                    2034      MOVE.W      D2,D5       *REMOVE
0000105A                          2035  MATCH_CC_GT_32
0000105A  3A02                    2036      MOVE.W      D2,D5       *REMOVE
0000105C                          2037  MATCH_CC_LE_8
0000105C  3A02                    2038      MOVE.W      D2,D5       *REMOVE
0000105E                          2039  MATCH_CC_LE_16
0000105E  3A02                    2040      MOVE.W      D2,D5       *REMOVE
00001060                          2041  MATCH_CC_LE_32
00001060  3A02                    2042      MOVE.W      D2,D5       *REMOVE
00001062                          2043  ERROR
00001062  3A02                    2044      MOVE.W      D2,D5       *REMOVE
00001064                          2045  
00001064                          2046  
00001064                          2047  
00001064                          2048  
00001064                          2049  -------------------- end include --------------------
00001064                          2050          
00001064= 45 6E 74 65 72 20 ...   2051  MESSAGE     DC.B    'Enter the address of compiled code: ',0
00001089= 49 6E 76 61 6C 69 ...   2052  ERROR_MSG   DC.B    'Invalid input, please rerun',0
000010A5= 20 00                   2053  SPACER      DC.B    ' ',0
000010A7                          2054  
000010A7                          2055  
00001000                          2056          ORG     $1000
00001000                          2057  program_start        
00001000                          2058  
00001000                          2059  
00001000                          2060  *------Code for input-------
00001000                          2061          
00001000  43F8 1064               2062          LEA     MESSAGE,A1      *Code block for first message
00001004  103C 000E               2063          MOVE.B  #14,D0
00001008  4E4F                    2064          TRAP    #15
0000100A                          2065         
0000100A  227C 00004000           2066          MOVEA.L #$4000, A1
00001010  103C 0002               2067          MOVE.B  #2,D0           *Code block for reading input
00001014  4E4F                    2068          TRAP    #15   
00001016  3001                    2069          MOVE.W  D1,D0
00001018                          2070          
00001018  2049                    2071          MOVEA.L A1,A0           *Move the contents of A1 to A0 for the conversion
0000101A  4EB8 0000               2072          JSR     A2H             *Branch to Connor's conversion code      
0000101E                          2073          
0000101E  2040                    2074          MOVEA.L D0,A0
00001020                          2075          
00001020  0C50 FFFF               2076          CMPI.W  #$FFFF,(A0)
00001024  6700 0026               2077          BEQ     input_error
00001028                          2078      
00001028                          2079  loop_start
00001028                          2080          
00001028  2208                    2081          MOVE.L  A0,D1           *Print out the address we're working on
0000102A  7410                    2082          MOVE.L  #16,D2          
0000102C  700F                    2083          MOVE.L  #15,D0          
0000102E  4E4F                    2084          TRAP    #15
00001030                          2085  
00001030  700E                    2086          MOVE.L  #14,D0
00001032  43F8 10A5               2087          LEA     SPACER,A1
00001036  4E4F                    2088          TRAP    #15
00001038                          2089          
00001038  3418                    2090          MOVE.W  (A0)+,D2
0000103A  0C42 FFFF               2091          CMPI.W  #$FFFF,D2
0000103E  6700 0014               2092          BEQ     Done
00001042                          2093          
00001042  4EB8 0A40               2094          JSR     OpDecoder
00001046                          2095          
00001046  700D                    2096          MOVE.L  #13,D0
00001048  4E4F                    2097          TRAP    #15
0000104A                          2098          
0000104A  60DC                    2099          BRA     loop_start
0000104C                          2100          
0000104C                          2101  input_error        
0000104C  700D                    2102          MOVE.L  #13,D0
0000104E  43F8 1089               2103          LEA     ERROR_MSG,A1
00001052  4E4F                    2104          TRAP    #15
00001054                          2105  Done        
00001054                          2106  
00001054                          2107          END    $1000

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
A2H                 0
ABS_LONG            39
ABS_WORD            38
ADDA_L              7
ADDA_W              3
ADDBYTELOOP         24
ADDBYTES            1C
ADDI_B              18
ADDI_L              1A
ADDI_RETURN         A56
ADDI_W              19
ADDQ                5
ADDQ_B              0
ADDQ_L              2
ADDQ_W              1
ADD_ADDA            D
ADD_TO_EA_B         4
ADD_TO_EA_L         6
ADD_TO_EA_W         5
ADD_TO_REG_B        0
ADD_TO_REG_L        2
ADD_TO_REG_W        1
AN                  8
ASL                 383
ASR                 387
BCC                 6
BCC_16              0
BCC_32              FF
CC_CC               4
CC_CS               5
CC_EQ               7
CC_F                1
CC_GE               C
CC_GT               E
CC_HI               2
CC_LE               F
CC_LS               3
CC_LT               D
CC_MI               B
CC_NE               6
CC_PL               A
CC_T                0
CC_VC               8
CC_VS               9
CHECK_ADDI          F2C
CHECK_ADDQ          F0A
CHECK_ADD_ADDA      EB4
CHECK_BCC           B4C
CHECK_BCC_16        C0C
CHECK_BCC_32        CB4
CHECK_BCC_8         B64
CHECK_CMP           D70
CHECK_DIVU_OR       E36
CHECK_FOUR_BIT_SIG  ACE
CHECK_MOVEA_L_AND_MOVE_L  FBC
CHECK_MOVEA_W_AND_MOVE_W  F92
CHECK_MOVEM         E84
CHECK_MULS_LEA_CLR_JSR_RTS  D96
CHECK_MULS_W_AND    DE8
CHECK_NOP           AC0
CHECK_SHIFT_AND_ROTATE  A80
CHECK_SUB           F52
CLR_B               108
CLR_L               10A
CLR_W               109
CMP                 B
CMP_B               0
CMP_L               2
CMP_W               1
CONV_END            2C
CR                  D
DEC_ABS_LONG        116
DEC_ABS_WORD        10A
DEC_AN              12E
DEC_DN              122
DEC_IMMEDIATE       EE
DEC_INDIRECT        13A
DEC_POST_INC        14E
DEC_PRE_DEC         168
DEC_RETURN          D0
DIVU                3
DIVU_OR             8
DN                  0
DN_B                0
DN_L                2
DN_W                1
DONE                1054
EADECODER           66
EADECODER_LEFT      4E
EA_B                4
EA_L                6
EA_W                5
ERROR               1062
ERROR_MSG           1089
FOUR_BIT_RETURN     A4E
IMMEDIATE           3C
IMM_SKIP            E8
IMM_WORD            106
INDIRECT            10
INPUT_ERROR         104C
ISOLATE_CC_CODE_FOR_BCC  D5C
ISOLATE_OP_CODE     FA4
JSR                 13A
LEA                 7
LEFT_SKIP           6A
LF                  A
LOOP_START          1028
LSL                 38F
LSR                 38B
MATCH_ADDA_L        63A
MATCH_ADDA_W        5F4
MATCH_ADDI_B        22C
MATCH_ADDI_L        2AC
MATCH_ADDI_W        26C
MATCH_ADDQ_B        484
MATCH_ADDQ_L        51C
MATCH_ADDQ_W        4D0
MATCH_ADD_TO_EA_B   3B8
MATCH_ADD_TO_EA_L   440
MATCH_ADD_TO_EA_W   3FC
MATCH_ADD_TO_REG_B  2EC
MATCH_ADD_TO_REG_L  374
MATCH_ADD_TO_REG_W  330
MATCH_AND_DN_B      856
MATCH_AND_DN_L      8E2
MATCH_AND_DN_W      89C
MATCH_AND_EA_B      928
MATCH_AND_EA_L      9B4
MATCH_AND_EA_W      96E
MATCH_ASL           FFC
MATCH_ASR           FFA
MATCH_CC_CC_16      101C
MATCH_CC_CC_32      101E
MATCH_CC_CC_8       101A
MATCH_CC_CS_16      1022
MATCH_CC_CS_32      1024
MATCH_CC_CS_8       1020
MATCH_CC_EQ_16      102E
MATCH_CC_EQ_32      1030
MATCH_CC_EQ_8       102C
MATCH_CC_F_16       100A
MATCH_CC_F_32       100C
MATCH_CC_F_8        1008
MATCH_CC_GE_16      104C
MATCH_CC_GE_32      104E
MATCH_CC_GE_8       104A
MATCH_CC_GT_16      1058
MATCH_CC_GT_32      105A
MATCH_CC_GT_8       1056
MATCH_CC_HI_16      1010
MATCH_CC_HI_32      1012
MATCH_CC_HI_8       100E
MATCH_CC_LE_16      105E
MATCH_CC_LE_32      1060
MATCH_CC_LE_8       105C
MATCH_CC_LS_16      1016
MATCH_CC_LS_32      1018
MATCH_CC_LS_8       1014
MATCH_CC_LT_16      1052
MATCH_CC_LT_32      1054
MATCH_CC_LT_8       1050
MATCH_CC_MI_16      1046
MATCH_CC_MI_32      1048
MATCH_CC_MI_8       1044
MATCH_CC_NE_16      1028
MATCH_CC_NE_32      102A
MATCH_CC_NE_8       1026
MATCH_CC_PL_16      1040
MATCH_CC_PL_32      1042
MATCH_CC_PL_8       103E
MATCH_CC_T_16       1004
MATCH_CC_T_32       1006
MATCH_CC_T_8        1002
MATCH_CC_VC_16      1034
MATCH_CC_VC_32      1036
MATCH_CC_VC_8       1032
MATCH_CC_VS_16      103A
MATCH_CC_VS_32      103C
MATCH_CC_VS_8       1038
MATCH_CLR_B         7CC
MATCH_CLR_L         828
MATCH_CLR_W         7FA
MATCH_CMP_B         6D6
MATCH_CMP_L         764
MATCH_CMP_W         71C
MATCH_DIVU          FE4
MATCH_JSR           7AA
MATCH_LEA           FF2
MATCH_LSL           FF6
MATCH_LSR           FF8
MATCH_MOVEA_L       5AE
MATCH_MOVEA_W       568
MATCH_MOVEM_TO_MEM_L  FD2
MATCH_MOVEM_TO_MEM_W  FD0
MATCH_MOVEM_TO_REG_L  FD6
MATCH_MOVEM_TO_REG_W  FD4
MATCH_MOVEQ         FCE
MATCH_MOVE_B        1A0
MATCH_MOVE_L        FCC
MATCH_MOVE_W        1E6
MATCH_MULS_L        FF4
MATCH_MULS_W        680
MATCH_NOP           190
MATCH_OR_DN_B       FE6
MATCH_OR_DN_L       FEA
MATCH_OR_DN_W       FE8
MATCH_OR_EA_B       FEC
MATCH_OR_EA_L       FF0
MATCH_OR_EA_W       FEE
MATCH_ROL           FFE
MATCH_ROR           1000
MATCH_RTS           6C6
MATCH_SUB_TO_DN_B   FD8
MATCH_SUB_TO_DN_L   FDC
MATCH_SUB_TO_DN_W   FDA
MATCH_SUB_TO_EA_B   FDE
MATCH_SUB_TO_EA_L   FE2
MATCH_SUB_TO_EA_W   FE0
MESSAGE             1064
MOVEA_WL            1
MOVEM_RETURN        A52
MOVEM_TO_MEM_L      123
MOVEM_TO_MEM_W      122
MOVEM_TO_REG_L      133
MOVEM_TO_REG_W      132
MOVEQ_              7
MOVE_B              1
MOVE_L              2
MOVE_W              3
MULS_L              130
MULS_LEA_CLR_JSR_RTS  4
MULS_OP_W           7
MULS_W_AND          C
NOP                 4E71
NOP_RETURN          A4A
NUMSUB              32
NUMSUBRTN           E
OPDECODER           A40
OPDEC_RETURN        A5A
OUTPUT              10000
POST_INC            18
PRE_DEC             20
PROGRAM_START       1000
PR_ADD              182
PR_ADDA             A22
PR_ADDI             186
PR_ADDQ             18B
PR_AND              A3C
PR_BYTE             9FE
PR_CLR              A2C
PR_CMP              A34
PR_COMMA            9FC
PR_JSR              A38
PR_LONG             A04
PR_MOVE             A0B
PR_MOVEA            A10
PR_MOVEM            A1C
PR_MOVEQ            A16
PR_MULS             A27
PR_NOP              A07
PR_RTS              A30
PR_SPACE            9FA
PR_WORD             A01
READFIRSTFOURBITS   A60
READFIRSTTENBITS    A72
ROL                 39F
ROR                 39B
RTS                 4E75
SPACER              10A5
SUB                 9
SUB_TO_DN_B         0
SUB_TO_DN_L         2
SUB_TO_DN_W         1
SUB_TO_EA_B         4
SUB_TO_EA_L         6
SUB_TO_EA_W         5
UPSEND              46
UPSUB               3C
UPSUBRTN            16

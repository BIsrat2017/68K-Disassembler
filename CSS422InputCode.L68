00001000 Starting Address
Assembler used: EASy68K Editor/Assembler v5.15.04
Created On: 3/9/2017 12:04:16 PM

00000000                             1  *-----------------------------------------------------------
00000000                             2  * Title      : Main Driver Program
00000000                             3  * Written by : Arsany Azmy, Connor McGwire
00000000                             4  * Date       :
00000000                             5  * Description:
00000000                             6  *-----------------------------------------------------------
00000000  =0000000D                  7  CR      EQU     $0D
00000000  =0000000A                  8  LF      EQU     $0A   
00000000                             9          INCLUDE 'ASCII_HEX_Conversions.x68'
00000000                            10  
00000000                            11  
00000000                            12  
00000000                            13  A2H     *Converts and ASCII Byte string into HEX; Size WORD
00000000  48E7 7FFE                 14          MOVEM.L     D1-D7/A0-A6, -(SP)  
00000004                            15          
00000004  3400                      16          MOVE.W  D0,D2
00000006  3202                      17          MOVE.W  D2,D1                   *Store length of string into D1 for looping
00000008  2248                      18          MOVEA.L A0,A1                   *Copy starting point of string
0000000A                            19  
0000000A  6000 0026                 20          BRA     numSub
0000000E                            21  numSubRTN
0000000E  2049                      22          MOVEA.L A1,A0                   *Restore address position
00000010  3202                      23          MOVE.W  D2,D1                   *Reset loop counter
00000012                            24          
00000012  6000 0028                 25          BRA     upSub
00000016                            26  upSubRTN        
00000016  2049                      27          MOVEA.L A1,A0                   *Restore address position
00000018  3202                      28          MOVE.W  D2,D1                   *Reset loop counter
0000001A  4240                      29          CLR     D0                      *Clear D0
0000001C                            30  addBytes
0000001C  D018                      31          ADD.B   (A0)+,D0
0000001E  5301                      32          SUBI.B  #1,D1
00000020  6700 000A                 33          BEQ     conv_end
00000024                            34  addByteLoop
00000024  E980                      35          ASL.L   #4,D0
00000026  D018                      36          ADD.B   (A0)+,D0
00000028  5301                      37          SUBI.B  #1,D1
0000002A  66F8                      38          BNE     addByteLoop
0000002C                            39  conv_end
0000002C  4CDF 7FFE                 40          MOVEM.L     (SP)+, D1-D7/A0-A6
00000030  4E75                      41          RTS
00000032                            42          
00000032                            43  numSub  *Convert ASCII 'number' to true number byte; Should not be called outside of the A2H subroutines
00000032  0418 0030                 44          SUBI.B  #$30,(A0)+              *Subtract difference between null ASCII and '0' ASCII
00000036  5341                      45          SUB.W   #1,D1                   *Decrement loop counter
00000038  66F8                      46          BNE     numSub                  *If loop has not ended restart
0000003A  60D2                      47          BRA     numSubRTN
0000003C                            48  
0000003C                            49  upSub   *Loops through string to remove any upper case characters 
0000003C                            50          *that may remain in the string
0000003C  0C10 0009                 51          CMPI.B  #9,(A0)                 *Check if the value is greater than 0-9
00000040  6F00 0004                 52          BLE     upSEnd                  *If it's not, continue loop
00000044  5310                      53          SUBI.B  #1,(A0)                 *Otherwise, subtract difference between ASCII 'number' code and 'A' code
00000046                            54  upSEnd
00000046  5248                      55          ADDA.W  #1,A0                   *Increment to next position to check for uppercase
00000048  5341                      56          SUB.W   #1,D1                   *Decrement loop counter
0000004A  66F0                      57          BNE     upSub                   
0000004C  60C8                      58          BRA     upSubRTN
0000004E                            59  
0000004E                            60  
0000004E                            61  -------------------- end include --------------------
0000004E                            62          INCLUDE 'opcodes.x68'
0000004E                            63                  INCLUDE 'EADecoder.x68'
0000004E                            64  
0000004E                            65  
0000004E  =00010000                 66  output      EQU $00010000
0000004E                            67  
0000004E  =0000003C                 68  IMMEDIATE   EQU %00111100
0000004E  =00000038                 69  ABS_WORD    EQU %00111000
0000004E  =00000039                 70  ABS_LONG    EQU %00111001
0000004E  =00000000                 71  Dn          EQU %00000000
0000004E  =00000008                 72  An          EQU %00001000
0000004E  =00000010                 73  INDIRECT    EQU %00010000
0000004E  =00000018                 74  POST_INC    EQU %00011000
0000004E  =00000020                 75  PRE_DEC     EQU %00100000
0000004E                            76  
0000004E                            77  
0000004E                            78  
0000004E                            79  EADecoder_left
0000004E  48E7 FF7E                 80          MOVEM.L     D0-D7/A1-A6, -(SP)
00000052                            81          
00000052                            82          ** Swap the mode and register bits
00000052  1800                      83          MOVE.B  D0,D4
00000054  0200 0007                 84          ANDI.B  #%00000111,D0       * Mask mode
00000058  0204 0038                 85          ANDI.B  #%00111000,D4       * Mask register
0000005C  E708                      86          LSL.B   #3,D0               * Move mode bits over
0000005E  E60C                      87          LSR.B   #3,D4               * Move register bits over
00000060  8004                      88          OR.B    D4,D0               * Recombine
00000062                            89          
00000062  6000 0006                 90          BRA     left_skip
00000066                            91  
00000066                            92  EADecoder
00000066  48E7 FF7E                 93          MOVEM.L     D0-D7/A1-A6, -(SP) *Store registers on stack, except D0
0000006A                            94  left_skip   
0000006A  4242                      95          CLR     D2     
0000006C  1401                      96          MOVE.B  D1,D2 ** Store opcode size in bytes into D2
0000006E                            97          
0000006E  43F9 00010000             98          LEA     output,A1
00000074  45F9 00010000             99          LEA     output,A2
0000007A                           100          
0000007A                           101          *First, decoder will check for the 3 types with hard coded register values
0000007A  163C 0001                102          MOVE.B  #1,D3
0000007E  B07C 003C                103          CMP     #IMMEDIATE,D0
00000082  6700 0068                104          BEQ     dec_immediate
00000086                           105          
00000086  B07C 0038                106          CMP     #ABS_WORD,D0
0000008A  6700 007C                107          BEQ     dec_abs_word
0000008E                           108          
0000008E  B07C 0039                109          CMP     #ABS_LONG,D0
00000092  6700 0080                110          BEQ     dec_abs_long
00000096                           111          
00000096                           112          *If it was none of the above, store the register and mode seperately
00000096  4243                     113          CLR     D3
00000098  1200                     114          MOVE.B  D0,D1
0000009A  0201 0038                115          ANDI.B  #%00111000,D1           *Get mode value
0000009E  0200 0007                116          ANDI.B  #%00000111,D0           *Get register value
000000A2  0600 0030                117          ADDI.B  #$30,D0
000000A6                           118                
000000A6  B27C 0000                119          CMP     #Dn,D1
000000AA  6700 0074                120          BEQ     dec_Dn 
000000AE                           121          
000000AE  B27C 0008                122          CMP     #An,D1
000000B2  6700 0078                123          BEQ     dec_An
000000B6                           124                  
000000B6  B27C 0010                125          CMP     #INDIRECT,D1
000000BA  6700 007C                126          BEQ     dec_indirect
000000BE                           127                  
000000BE  B27C 0018                128          CMP     #POST_INC,D1
000000C2  6700 0088                129          BEQ     dec_post_inc
000000C6                           130                  
000000C6  B27C 0020                131          CMP     #PRE_DEC,D1
000000CA  6700 009A                132          BEQ     dec_pre_dec
000000CE                           133  
000000CE                           134  dec_return ** Common return for all types
000000CE                           135          
000000CE                           136          ** Print display string
000000CE  103C 000E                137          MOVE.B  #14,D0
000000D2  4E4F                     138          TRAP    #15
000000D4                           139          
000000D4                           140          ** If there is immediate data to print, print it
000000D4  B67C 0001                141          CMP     #1,D3
000000D8  6600 000C                142          BNE     imm_skip
000000DC                           143          
000000DC  103C 000F                144          MOVE.B  #15,D0
000000E0  143C 0010                145          MOVE.B  #16,D2
000000E4  4E4F                     146          TRAP    #15
000000E6                           147  
000000E6                           148  imm_skip
000000E6  4CDF 7EFF                149          MOVEM.L     (SP)+, D0-D7/A1-A6 *Return register data from stack, except D0
000000EA  4E75                     150          RTS
000000EC                           151          
000000EC                           152          * Individual EA decoders *
000000EC                           153  
000000EC                           154  dec_immediate   *DECODE IMMEDIATE VALUE*
000000EC  14FC 0023                155          MOVE.B  #'#',(A2)+  * Move '#' char into string
000000F0  14FC 0024                156          MOVE.B  #'$',(A2)+  * Move '$' char into string
000000F4  14FC 0000                157          MOVE.B  #$0,(A2)+   * Null terminate string
000000F8  B47C 0002                158          CMP     #2,D2       * Check if data is word length
000000FC  6700 0006                159          BEQ     imm_word    
00000100                           160          
00000100  2218                     161          MOVE.L  (A0)+,D1    * Length was long
00000102  60CA                     162          BRA     dec_return
00000104                           163          
00000104                           164  imm_word
00000104  3218                     165          MOVE.W  (A0)+,D1    * Length was word
00000106  60C6                     166          BRA     dec_return
00000108                           167  
00000108                           168  
00000108                           169  dec_abs_word    *DECODE ABSOLUTE WORD*
00000108  14FC 0024                170          MOVE.B  #'$',(A2)+  * Move '$' char into string
0000010C  14FC 0000                171          MOVE.B  #$0,(A2)+   * Null terminate string
00000110  3218                     172          MOVE.W  (A0)+,D1
00000112  60BA                     173          BRA     dec_return
00000114                           174          
00000114                           175  
00000114                           176  dec_abs_long    *DECODE ABSOLUTE LONG*
00000114  14FC 0024                177          MOVE.B  #'$',(A2)+  * Move '$' char into string
00000118  14FC 0000                178          MOVE.B  #$0,(A2)+   * Null terminate string
0000011C  2218                     179          MOVE.L  (A0)+,D1
0000011E  60AE                     180          BRA     dec_return
00000120                           181          
00000120                           182  
00000120                           183  dec_Dn          *DECODE DIRECT DATA*
00000120  14FC 0044                184          MOVE.B  #'D',(A2)+
00000124  14C0                     185          MOVE.B  D0,(A2)+
00000126  14FC 0000                186          MOVE.B  #$0,(A2)+
0000012A  60A2                     187          BRA     dec_return
0000012C                           188  
0000012C                           189          
0000012C                           190  dec_An          *DECODE DIRECT ADDRESS*
0000012C  14FC 0041                191          MOVE.B  #'A',(A2)+
00000130  14C0                     192          MOVE.B  D0,(A2)+
00000132  14FC 0000                193          MOVE.B  #$0,(A2)+
00000136  6096                     194          BRA     dec_return
00000138                           195  
00000138                           196  
00000138                           197  dec_indirect    *DECODE INDIRECT ACCESS*
00000138  14FC 0028                198          MOVE.B  #'(',(A2)+
0000013C  14FC 0041                199          MOVE.B  #'A',(A2)+
00000140  14C0                     200          MOVE.B  D0,(A2)+
00000142  14FC 0029                201          MOVE.B  #')',(A2)+
00000146  14FC 0000                202          MOVE.B  #$0,(A2)+
0000014A  6082                     203          BRA     dec_return
0000014C                           204          
0000014C                           205  
0000014C                           206  dec_post_inc    *DECODE INDIRECT POST INCREMENT*
0000014C  14FC 0028                207          MOVE.B  #'(',(A2)+
00000150  14FC 0041                208          MOVE.B  #'A',(A2)+
00000154  14C0                     209          MOVE.B  D0,(A2)+
00000156  14FC 0029                210          MOVE.B  #')',(A2)+
0000015A  14FC 002B                211          MOVE.B  #'+',(A2)+
0000015E  14FC 0000                212          MOVE.B  #$0,(A2)+
00000162  6000 FF6A                213          BRA     dec_return
00000166                           214          
00000166                           215          
00000166                           216  dec_pre_dec    *DECODE INDIRECT PRE DECREMENT*
00000166  14FC 002D                217          MOVE.B  #'-',(A2)+
0000016A  14FC 0028                218          MOVE.B  #'(',(A2)+
0000016E  14FC 0041                219          MOVE.B  #'A',(A2)+
00000172  14C0                     220          MOVE.B  D0,(A2)+
00000174  14FC 0029                221          MOVE.B  #')',(A2)+
00000178  14FC 0000                222          MOVE.B  #$0,(A2)+
0000017C  6000 FF50                223          BRA     dec_return
00000180                           224  
00000180                           225  
00000180                           226  
00000180                           227  
00000180                           228  
00000180                           229  
00000180                           230  
00000180                           231  
00000180                           232  -------------------- end include --------------------
00000180                           233                  INCLUDE 'connor_opcodes.x68'
00000180= 41 44 44 00              234  pr_ADD          DC.B    'ADD',0
00000184= 41 44 44 49 00           235  pr_ADDI         DC.B    'ADDI',0
00000189= 41 44 44 51 00           236  pr_ADDQ         DC.B    'ADDQ',0
0000018E                           237  
0000018E                           238  MATCH_NOP
0000018E  43F9 00000A03            239      LEA         pr_NOP,A1
00000194  103C 000E                240      MOVE.B      #14,D0
00000198  4E4F                     241      TRAP        #15
0000019A  6000 08BA                242      BRA         opdec_return
0000019E                           243      
0000019E                           244  MATCH_MOVE_B
0000019E                           245      ** Move command size into D1
0000019E  123C 0002                246      MOVE.B      #2,D1
000001A2                           247      ** Print command
000001A2  103C 000E                248      MOVE.B      #14,D0
000001A6  43F9 00000A07            249      LEA         pr_MOVE,A1
000001AC  4E4F                     250      TRAP        #15
000001AE                           251      ** Print size
000001AE  43F9 000009FA            252      LEA         pr_BYTE,A1
000001B4  4E4F                     253      TRAP        #15
000001B6                           254      ** Print space
000001B6  43F9 000009F6            255      LEA         pr_space,A1
000001BC  4E4F                     256      TRAP        #15
000001BE                           257      ** Decode right side ea
000001BE  1002                     258      MOVE.B      D2,D0
000001C0  0200 003F                259      ANDI.B      #%00111111,D0
000001C4  4EB8 0066                260      JSR         EADecoder
000001C8                           261      ** Add comma
000001C8  103C 000E                262      MOVE.B      #14,D0
000001CC  43F9 000009F8            263      LEA         pr_comma,A1
000001D2  4E4F                     264      TRAP        #15
000001D4                           265      ** Decode left side ea
000001D4  3002                     266      MOVE.W      D2,D0
000001D6  0240 0FC0                267      ANDI.W      #%0000111111000000,D0
000001DA  EC48                     268      LSR.W       #6,D0
000001DC  4EB8 004E                269      JSR         EADecoder_left
000001E0                           270      
000001E0  6000 0874                271      BRA         opdec_return
000001E4                           272      
000001E4                           273  MATCH_MOVE_W
000001E4                           274      ** Move command size into D1
000001E4  123C 0002                275      MOVE.B      #2,D1
000001E8                           276      ** Print command
000001E8  103C 000E                277      MOVE.B      #14,D0
000001EC  43F9 00000A07            278      LEA         pr_MOVE,A1
000001F2  4E4F                     279      TRAP        #15
000001F4                           280      ** Print size
000001F4  43F9 000009FD            281      LEA         pr_WORD,A1
000001FA  4E4F                     282      TRAP        #15
000001FC                           283      ** Print space
000001FC  43F9 000009F6            284      LEA         pr_space,A1
00000202  4E4F                     285      TRAP        #15
00000204                           286      ** Decode right side ea
00000204  1002                     287      MOVE.B      D2,D0
00000206  0200 003F                288      ANDI.B      #%00111111,D0
0000020A  4EB8 0066                289      JSR         EADecoder
0000020E                           290      ** Add comma
0000020E  103C 000E                291      MOVE.B      #14,D0
00000212  43F9 000009F8            292      LEA         pr_comma,A1
00000218  4E4F                     293      TRAP        #15
0000021A                           294      ** Decode left side ea
0000021A  3002                     295      MOVE.W      D2,D0
0000021C  0240 0FC0                296      ANDI.W      #%0000111111000000,D0
00000220  EC48                     297      LSR.W       #6,D0
00000222  4EB8 004E                298      JSR         EADecoder_left
00000226                           299      
00000226  6000 082E                300      BRA         opdec_return
0000022A                           301  
0000022A                           302  MATCH_ADDI_B
0000022A                           303      ** Move command size into D1
0000022A  123C 0002                304      MOVE.B      #2,D1
0000022E                           305      ** Print command
0000022E  103C 000E                306      MOVE.B      #14,D0
00000232  43F8 0184                307      LEA         pr_ADDI,A1
00000236  4E4F                     308      TRAP        #15
00000238                           309      ** Print size
00000238  43F9 000009FA            310      LEA         pr_BYTE,A1
0000023E  4E4F                     311      TRAP        #15
00000240                           312      ** Print space
00000240  43F9 000009F6            313      LEA         pr_space,A1
00000246  4E4F                     314      TRAP        #15
00000248                           315      ** Print Immediate data
00000248  103C 003C                316      MOVE.B      #%00111100,D0
0000024C  4EB8 0066                317      JSR         EADecoder
00000250                           318      ** Add comma
00000250  103C 000E                319      MOVE.B      #14,D0
00000254  43F9 000009F8            320      LEA         pr_comma,A1
0000025A  4E4F                     321      TRAP        #15
0000025C                           322      ** Decode right side ea
0000025C  1002                     323      MOVE.B      D2,D0
0000025E  0200 003F                324      ANDI.B      #%00111111,D0
00000262  4EB8 0066                325      JSR         EADecoder
00000266                           326      
00000266  6000 07EE                327      BRA         opdec_return
0000026A                           328      
0000026A                           329  MATCH_ADDI_W
0000026A                           330      ** Move command size into D1
0000026A  123C 0002                331      MOVE.B      #2,D1
0000026E                           332      ** Print command
0000026E  103C 000E                333      MOVE.B      #14,D0
00000272  43F8 0184                334      LEA         pr_ADDI,A1
00000276  4E4F                     335      TRAP        #15
00000278                           336      ** Print size
00000278  43F9 000009FD            337      LEA         pr_WORD,A1
0000027E  4E4F                     338      TRAP        #15
00000280                           339      ** Print space
00000280  43F9 000009F6            340      LEA         pr_space,A1
00000286  4E4F                     341      TRAP        #15
00000288                           342      ** Print Immediate data
00000288  103C 003C                343      MOVE.B      #%00111100,D0
0000028C  4EB8 0066                344      JSR         EADecoder
00000290                           345      ** Add comma
00000290  103C 000E                346      MOVE.B      #14,D0
00000294  43F9 000009F8            347      LEA         pr_comma,A1
0000029A  4E4F                     348      TRAP        #15
0000029C                           349      ** Decode right side ea
0000029C  1002                     350      MOVE.B      D2,D0
0000029E  0200 003F                351      ANDI.B      #%00111111,D0
000002A2  4EB8 0066                352      JSR         EADecoder
000002A6                           353      
000002A6  6000 07AE                354      BRA         opdec_return
000002AA                           355      
000002AA                           356  MATCH_ADDI_L
000002AA                           357      ** Move command size into D1
000002AA  123C 0004                358      MOVE.B      #4,D1
000002AE                           359      ** Print command
000002AE  103C 000E                360      MOVE.B      #14,D0
000002B2  43F8 0184                361      LEA         pr_ADDI,A1
000002B6  4E4F                     362      TRAP        #15
000002B8                           363      ** Print size
000002B8  43F9 00000A00            364      LEA         pr_LONG,A1
000002BE  4E4F                     365      TRAP        #15
000002C0                           366      ** Print space
000002C0  43F9 000009F6            367      LEA         pr_space,A1
000002C6  4E4F                     368      TRAP        #15
000002C8                           369      ** Print Immediate data
000002C8  103C 003C                370      MOVE.B      #%00111100,D0
000002CC  4EB8 0066                371      JSR         EADecoder
000002D0                           372      ** Add comma
000002D0  103C 000E                373      MOVE.B      #14,D0
000002D4  43F9 000009F8            374      LEA         pr_comma,A1
000002DA  4E4F                     375      TRAP        #15
000002DC                           376      ** Decode right side ea
000002DC  1002                     377      MOVE.B      D2,D0
000002DE  0200 003F                378      ANDI.B      #%00111111,D0
000002E2  4EB8 0066                379      JSR         EADecoder
000002E6                           380      
000002E6  6000 076E                381      BRA         opdec_return
000002EA                           382      
000002EA                           383  MATCH_ADD_TO_REG_B
000002EA                           384      ** Move command size into D1
000002EA  123C 0002                385      MOVE.B      #2,D1
000002EE                           386      ** Print command
000002EE  103C 000E                387      MOVE.B      #14,D0
000002F2  43F8 0180                388      LEA         pr_ADD,A1
000002F6  4E4F                     389      TRAP        #15
000002F8                           390      ** Print size
000002F8  43F9 000009FA            391      LEA         pr_BYTE,A1
000002FE  4E4F                     392      TRAP        #15
00000300                           393      ** Print space
00000300  43F9 000009F6            394      LEA         pr_space,A1
00000306  4E4F                     395      TRAP        #15
00000308                           396      ** Print source
00000308  1002                     397      MOVE.B      D2,D0
0000030A  0200 003F                398      ANDI.B      #%00111111,D0
0000030E  4EB8 0066                399      JSR         EADecoder
00000312                           400      ** Add comma
00000312  103C 000E                401      MOVE.B      #14,D0
00000316  43F9 000009F8            402      LEA         pr_comma,A1
0000031C  4E4F                     403      TRAP        #15
0000031E                           404      ** Print destination
0000031E  3002                     405      MOVE.W      D2,D0
00000320  0240 0E00                406      ANDI.W      #%0000111000000000,D0
00000324  EC48                     407      LSR.W       #6,D0
00000326  4EB8 004E                408      JSR         EADecoder_left
0000032A                           409      
0000032A  6000 072A                410      BRA         opdec_return
0000032E                           411      
0000032E                           412  MATCH_ADD_TO_REG_W
0000032E                           413      ** Move command size into D1
0000032E  123C 0002                414      MOVE.B      #2,D1
00000332                           415      ** Print command
00000332  103C 000E                416      MOVE.B      #14,D0
00000336  43F8 0180                417      LEA         pr_ADD,A1
0000033A  4E4F                     418      TRAP        #15
0000033C                           419      ** Print size
0000033C  43F9 000009FD            420      LEA         pr_WORD,A1
00000342  4E4F                     421      TRAP        #15
00000344                           422      ** Print space
00000344  43F9 000009F6            423      LEA         pr_space,A1
0000034A  4E4F                     424      TRAP        #15
0000034C                           425      ** Print source
0000034C  1002                     426      MOVE.B      D2,D0
0000034E  0200 003F                427      ANDI.B      #%00111111,D0
00000352  4EB8 0066                428      JSR         EADecoder
00000356                           429      ** Add comma
00000356  103C 000E                430      MOVE.B      #14,D0
0000035A  43F9 000009F8            431      LEA         pr_comma,A1
00000360  4E4F                     432      TRAP        #15
00000362                           433      ** Print destination
00000362  3002                     434      MOVE.W      D2,D0
00000364  0240 0E00                435      ANDI.W      #%0000111000000000,D0
00000368  EC48                     436      LSR.W       #6,D0
0000036A  4EB8 004E                437      JSR         EADecoder_left
0000036E                           438      
0000036E  6000 06E6                439      BRA         opdec_return
00000372                           440      
00000372                           441  MATCH_ADD_TO_REG_L
00000372                           442      ** Move command size into D1
00000372  123C 0004                443      MOVE.B      #4,D1
00000376                           444      ** Print command
00000376  103C 000E                445      MOVE.B      #14,D0
0000037A  43F8 0180                446      LEA         pr_ADD,A1
0000037E  4E4F                     447      TRAP        #15
00000380                           448      ** Print size
00000380  43F9 00000A00            449      LEA         pr_LONG,A1
00000386  4E4F                     450      TRAP        #15
00000388                           451      ** Print space
00000388  43F9 000009F6            452      LEA         pr_space,A1
0000038E  4E4F                     453      TRAP        #15
00000390                           454      ** Print source
00000390  1002                     455      MOVE.B      D2,D0
00000392  0200 003F                456      ANDI.B      #%00111111,D0
00000396  4EB8 0066                457      JSR         EADecoder
0000039A                           458      ** Add comma
0000039A  103C 000E                459      MOVE.B      #14,D0
0000039E  43F9 000009F8            460      LEA         pr_comma,A1
000003A4  4E4F                     461      TRAP        #15
000003A6                           462      ** Print destination
000003A6  3002                     463      MOVE.W      D2,D0
000003A8  0240 0E00                464      ANDI.W      #%0000111000000000,D0
000003AC  EC48                     465      LSR.W       #6,D0
000003AE  4EB8 004E                466      JSR         EADecoder_left
000003B2                           467      
000003B2  6000 06A2                468      BRA         opdec_return
000003B6                           469      
000003B6                           470  MATCH_ADD_TO_EA_B
000003B6                           471      ** Move command size into D1
000003B6  123C 0002                472      MOVE.B      #2,D1
000003BA                           473      ** Print command
000003BA  103C 000E                474      MOVE.B      #14,D0
000003BE  43F8 0180                475      LEA         pr_ADD,A1
000003C2  4E4F                     476      TRAP        #15
000003C4                           477      ** Print size
000003C4  43F9 000009FA            478      LEA         pr_BYTE,A1
000003CA  4E4F                     479      TRAP        #15
000003CC                           480      ** Print space
000003CC  43F9 000009F6            481      LEA         pr_space,A1
000003D2  4E4F                     482      TRAP        #15
000003D4                           483      ** Print Source
000003D4  3002                     484      MOVE.W      D2,D0
000003D6  0240 0E00                485      ANDI.W      #%0000111000000000,D0
000003DA  EC48                     486      LSR.W       #6,D0
000003DC  4EB8 004E                487      JSR         EADecoder_left
000003E0                           488      ** Add comma
000003E0  103C 000E                489      MOVE.B      #14,D0
000003E4  43F9 000009F8            490      LEA         pr_comma,A1
000003EA  4E4F                     491      TRAP        #15
000003EC                           492      ** Print source
000003EC  1002                     493      MOVE.B      D2,D0
000003EE  0200 003F                494      ANDI.B      #%00111111,D0
000003F2  4EB8 0066                495      JSR         EADecoder
000003F6                           496      
000003F6  6000 065E                497      BRA         opdec_return
000003FA                           498      
000003FA                           499  MATCH_ADD_TO_EA_W
000003FA                           500      ** Move command size into D1
000003FA  123C 0002                501      MOVE.B      #2,D1
000003FE                           502      ** Print command
000003FE  103C 000E                503      MOVE.B      #14,D0
00000402  43F8 0180                504      LEA         pr_ADD,A1
00000406  4E4F                     505      TRAP        #15
00000408                           506      ** Print size
00000408  43F9 000009FD            507      LEA         pr_WORD,A1
0000040E  4E4F                     508      TRAP        #15
00000410                           509      ** Print space
00000410  43F9 000009F6            510      LEA         pr_space,A1
00000416  4E4F                     511      TRAP        #15
00000418                           512      ** Print Source
00000418  3002                     513      MOVE.W      D2,D0
0000041A  0240 0E00                514      ANDI.W      #%0000111000000000,D0
0000041E  EC48                     515      LSR.W       #6,D0
00000420  4EB8 004E                516      JSR         EADecoder_left
00000424                           517      ** Add comma
00000424  103C 000E                518      MOVE.B      #14,D0
00000428  43F9 000009F8            519      LEA         pr_comma,A1
0000042E  4E4F                     520      TRAP        #15
00000430                           521      ** Print source
00000430  1002                     522      MOVE.B      D2,D0
00000432  0200 003F                523      ANDI.B      #%00111111,D0
00000436  4EB8 0066                524      JSR         EADecoder
0000043A                           525      
0000043A  6000 061A                526      BRA         opdec_return
0000043E                           527      
0000043E                           528  MATCH_ADD_TO_EA_L 
0000043E                           529      ** Move command size into D1
0000043E  123C 0004                530      MOVE.B      #4,D1
00000442                           531      ** Print command
00000442  103C 000E                532      MOVE.B      #14,D0
00000446  43F8 0180                533      LEA         pr_ADD,A1
0000044A  4E4F                     534      TRAP        #15
0000044C                           535      ** Print size
0000044C  43F9 00000A00            536      LEA         pr_LONG,A1
00000452  4E4F                     537      TRAP        #15
00000454                           538      ** Print space
00000454  43F9 000009F6            539      LEA         pr_space,A1
0000045A  4E4F                     540      TRAP        #15
0000045C                           541      ** Print Source
0000045C  3002                     542      MOVE.W      D2,D0
0000045E  0240 0E00                543      ANDI.W      #%0000111000000000,D0
00000462  EC48                     544      LSR.W       #6,D0
00000464  4EB8 004E                545      JSR         EADecoder_left
00000468                           546      ** Add comma
00000468  103C 000E                547      MOVE.B      #14,D0
0000046C  43F9 000009F8            548      LEA         pr_comma,A1
00000472  4E4F                     549      TRAP        #15
00000474                           550      ** Print source
00000474  1002                     551      MOVE.B      D2,D0
00000476  0200 003F                552      ANDI.B      #%00111111,D0
0000047A  4EB8 0066                553      JSR         EADecoder
0000047E                           554      
0000047E  6000 05D6                555      BRA         opdec_return
00000482                           556      
00000482                           557  MATCH_ADDQ_B
00000482                           558      ** Move command size into D1
00000482  123C 0002                559      MOVE.B      #2,D1
00000486                           560      ** Print command
00000486  103C 000E                561      MOVE.B      #14,D0
0000048A  43F8 0189                562      LEA         pr_ADDQ,A1
0000048E  4E4F                     563      TRAP        #15
00000490                           564      ** Print size
00000490  43F9 000009FA            565      LEA         pr_BYTE,A1
00000496  4E4F                     566      TRAP        #15
00000498                           567      ** Print space
00000498  43F9 000009F6            568      LEA         pr_space,A1
0000049E  4E4F                     569      TRAP        #15
000004A0                           570      ** Print Immediate data
000004A0  3602                     571      MOVE.W      D2,D3 * Temporarily move op data
000004A2  3202                     572      MOVE.W      D2,D1
000004A4  0241 0E00                573      ANDI.W      #%0000111000000000,D1
000004A8  143C 0010                574      MOVE.B      #16,D2
000004AC  303C 000F                575      MOVE.W      #15,D0
000004B0  4E4F                     576      TRAP        #15
000004B2                           577      
000004B2  3403                     578      MOVE.W      D3,D2 * Move op data back
000004B4                           579      
000004B4                           580      ** Add comma
000004B4  103C 000E                581      MOVE.B      #14,D0
000004B8  43F9 000009F8            582      LEA         pr_comma,A1
000004BE  4E4F                     583      TRAP        #15
000004C0                           584      ** Decode right side ea
000004C0  1002                     585      MOVE.B      D2,D0
000004C2  0200 003F                586      ANDI.B      #%00111111,D0
000004C6  4EB8 0066                587      JSR         EADecoder
000004CA                           588      
000004CA  6000 058A                589      BRA         opdec_return
000004CE                           590      
000004CE                           591  MATCH_ADDQ_W
000004CE                           592      ** Move command size into D1
000004CE  123C 0002                593      MOVE.B      #2,D1
000004D2                           594      ** Print command
000004D2  103C 000E                595      MOVE.B      #14,D0
000004D6  43F8 0189                596      LEA         pr_ADDQ,A1
000004DA  4E4F                     597      TRAP        #15
000004DC                           598      ** Print size
000004DC  43F9 000009FD            599      LEA         pr_WORD,A1
000004E2  4E4F                     600      TRAP        #15
000004E4                           601      ** Print space
000004E4  43F9 000009F6            602      LEA         pr_space,A1
000004EA  4E4F                     603      TRAP        #15
000004EC                           604      ** Print Immediate data
000004EC  3602                     605      MOVE.W      D2,D3 * Temporarily move op data
000004EE  3202                     606      MOVE.W      D2,D1
000004F0  0241 0E00                607      ANDI.W      #%0000111000000000,D1
000004F4  143C 0010                608      MOVE.B      #16,D2
000004F8  303C 000F                609      MOVE.W      #15,D0
000004FC  4E4F                     610      TRAP        #15
000004FE                           611      
000004FE  3403                     612      MOVE.W      D3,D2 * Move op data back
00000500                           613      
00000500                           614      ** Add comma
00000500  103C 000E                615      MOVE.B      #14,D0
00000504  43F9 000009F8            616      LEA         pr_comma,A1
0000050A  4E4F                     617      TRAP        #15
0000050C                           618      ** Decode right side ea
0000050C  1002                     619      MOVE.B      D2,D0
0000050E  0200 003F                620      ANDI.B      #%00111111,D0
00000512  4EB8 0066                621      JSR         EADecoder
00000516                           622      
00000516  6000 053E                623      BRA         opdec_return
0000051A                           624      
0000051A                           625  MATCH_ADDQ_L
0000051A                           626      ** Move command size into D1
0000051A  123C 0004                627      MOVE.B      #4,D1
0000051E                           628      ** Print command
0000051E  103C 000E                629      MOVE.B      #14,D0
00000522  43F8 0189                630      LEA         pr_ADDQ,A1
00000526  4E4F                     631      TRAP        #15
00000528                           632      ** Print size
00000528  43F9 00000A00            633      LEA         pr_LONG,A1
0000052E  4E4F                     634      TRAP        #15
00000530                           635      ** Print space
00000530  43F9 000009F6            636      LEA         pr_space,A1
00000536  4E4F                     637      TRAP        #15
00000538                           638      ** Print Immediate data
00000538  3602                     639      MOVE.W      D2,D3 * Temporarily move op data
0000053A  3202                     640      MOVE.W      D2,D1
0000053C  0241 0E00                641      ANDI.W      #%0000111000000000,D1
00000540  143C 0010                642      MOVE.B      #16,D2
00000544  303C 000F                643      MOVE.W      #15,D0
00000548  4E4F                     644      TRAP        #15
0000054A                           645      
0000054A  3403                     646      MOVE.W      D3,D2 * Move op data back
0000054C                           647      
0000054C                           648      ** Add comma
0000054C  103C 000E                649      MOVE.B      #14,D0
00000550  43F9 000009F8            650      LEA         pr_comma,A1
00000556  4E4F                     651      TRAP        #15
00000558                           652      ** Decode right side ea
00000558  1002                     653      MOVE.B      D2,D0
0000055A  0200 003F                654      ANDI.B      #%00111111,D0
0000055E  4EB8 0066                655      JSR         EADecoder
00000562                           656      
00000562  6000 04F2                657      BRA         opdec_return
00000566                           658  
00000566                           659  
00000566                           660  -------------------- end include --------------------
00000566                           661                  *INCLUDE 'spencer_opcodes.x68'
00000566                           662                  INCLUDE 'arsany_opcodes.x68'
00000566                           663  MATCH_MOVEA_W
00000566                           664      ** Move command size into D1
00000566  123C 0002                665      MOVE.B      #2,D1
0000056A                           666      ** Print command
0000056A  103C 000E                667      MOVE.B      #14,D0
0000056E  43F9 00000A0C            668      LEA         pr_MOVEA,A1
00000574  4E4F                     669      TRAP        #15
00000576                           670      ** Print size
00000576  43F9 000009FD            671      LEA         pr_WORD,A1
0000057C  4E4F                     672      TRAP        #15
0000057E                           673      ** Print space
0000057E  43F9 000009F6            674      LEA         pr_space,A1
00000584  4E4F                     675      TRAP        #15
00000586                           676      ** Decode right side ea
00000586  1002                     677      MOVE.B      D2,D0
00000588  0200 003F                678      ANDI.B      #%00111111,D0
0000058C  4EB8 0066                679      JSR         EADecoder
00000590                           680      ** Add comma
00000590  103C 000E                681      MOVE.B      #14,D0
00000594  43F9 000009F8            682      LEA         pr_comma,A1
0000059A  4E4F                     683      TRAP        #15
0000059C                           684      ** Decode left side ea
0000059C  3002                     685      MOVE.W      D2,D0
0000059E  0240 0FC0                686      ANDI.W      #%0000111111000000,D0
000005A2  EC88                     687      LSR.L       #6,D0
000005A4  4EB8 004E                688      JSR         EADecoder_left
000005A8                           689      
000005A8  6000 04AC                690      BRA         opdec_return
000005AC                           691  MATCH_MOVEA_L
000005AC                           692      ** Move command size into D1
000005AC  123C 0004                693      MOVE.B      #4,D1
000005B0                           694      ** Print command
000005B0  103C 000E                695      MOVE.B      #14,D0
000005B4  43F9 00000A0C            696      LEA         pr_MOVEA,A1
000005BA  4E4F                     697      TRAP        #15
000005BC                           698      ** Print size
000005BC  43F9 00000A00            699      LEA         pr_LONG,A1
000005C2  4E4F                     700      TRAP        #15
000005C4                           701      ** Print space
000005C4  43F9 000009F6            702      LEA         pr_space,A1
000005CA  4E4F                     703      TRAP        #15
000005CC                           704      ** Decode right side ea
000005CC  1002                     705      MOVE.B      D2,D0
000005CE  0200 003F                706      ANDI.B      #%00111111,D0
000005D2  4EB8 0066                707      JSR         EADecoder
000005D6                           708      ** Add comma
000005D6  103C 000E                709      MOVE.B      #14,D0
000005DA  43F9 000009F8            710      LEA         pr_comma,A1
000005E0  4E4F                     711      TRAP        #15
000005E2                           712      ** Decode left side ea
000005E2  3002                     713      MOVE.W      D2,D0
000005E4  0240 0FC0                714      ANDI.W      #%0000111111000000,D0
000005E8  EC88                     715      LSR.L       #6,D0
000005EA  4EB8 004E                716      JSR         EADecoder_left
000005EE                           717      
000005EE  6000 0466                718      BRA         opdec_return
000005F2                           719  MATCH_ADDA_W
000005F2                           720      ** Move command size into D1
000005F2  123C 0002                721      MOVE.B      #2,D1
000005F6                           722      ** Print command
000005F6  103C 000E                723      MOVE.B      #14,D0
000005FA  43F9 00000A1E            724      LEA         pr_ADDA,A1
00000600  4E4F                     725      TRAP        #15
00000602                           726      ** Print size
00000602  43F9 000009FD            727      LEA         pr_WORD,A1
00000608  4E4F                     728      TRAP        #15
0000060A                           729      ** Print space
0000060A  43F9 000009F6            730      LEA         pr_space,A1
00000610  4E4F                     731      TRAP        #15
00000612                           732      ** Decode right side ea
00000612  1002                     733      MOVE.B      D2,D0
00000614  0200 003F                734      ANDI.B      #%00111111,D0
00000618  4EB8 0066                735      JSR         EADecoder
0000061C                           736      ** Add comma
0000061C  103C 000E                737      MOVE.B      #14,D0
00000620  43F9 000009F8            738      LEA         pr_comma,A1
00000626  4E4F                     739      TRAP        #15
00000628                           740      ** Decode left side ea
00000628  3002                     741      MOVE.W      D2,D0
0000062A  0240 0FC0                742      ANDI.W      #%0000111111000000,D0
0000062E  EC88                     743      LSR.L       #6,D0
00000630  4EB8 004E                744      JSR         EADecoder_left
00000634                           745      
00000634  6000 0420                746      BRA         opdec_return
00000638                           747  MATCH_ADDA_L
00000638                           748      ** Move command size into D1
00000638  123C 0004                749      MOVE.B      #4,D1
0000063C                           750      ** Print command
0000063C  103C 000E                751      MOVE.B      #14,D0
00000640  43F9 00000A1E            752      LEA         pr_ADDA,A1
00000646  4E4F                     753      TRAP        #15
00000648                           754      ** Print size
00000648  43F9 00000A00            755      LEA         pr_LONG,A1
0000064E  4E4F                     756      TRAP        #15
00000650                           757      ** Print space
00000650  43F9 000009F6            758      LEA         pr_space,A1
00000656  4E4F                     759      TRAP        #15
00000658                           760      ** Decode right side ea
00000658  1002                     761      MOVE.B      D2,D0
0000065A  0200 003F                762      ANDI.B      #%00111111,D0
0000065E  4EB8 0066                763      JSR         EADecoder
00000662                           764      ** Add comma
00000662  103C 000E                765      MOVE.B      #14,D0
00000666  43F9 000009F8            766      LEA         pr_comma,A1
0000066C  4E4F                     767      TRAP        #15
0000066E                           768      ** Decode left side ea
0000066E  3002                     769      MOVE.W      D2,D0
00000670  0240 0FC0                770      ANDI.W      #%0000111111000000,D0
00000674  EC88                     771      LSR.L       #6,D0
00000676  4EB8 004E                772      JSR         EADecoder_left
0000067A                           773      
0000067A  6000 03DA                774      BRA         opdec_return
0000067E                           775  MATCH_MULS_W
0000067E                           776      ** Move command size into D1
0000067E  123C 0002                777      MOVE.B      #2,D1
00000682                           778      ** Print command
00000682  103C 000E                779      MOVE.B      #14,D0
00000686  43F9 00000A23            780      LEA         pr_MULS,A1
0000068C  4E4F                     781      TRAP        #15
0000068E                           782      ** Print size
0000068E  43F9 000009FD            783      LEA         pr_WORD,A1
00000694  4E4F                     784      TRAP        #15
00000696                           785      ** Print space
00000696  43F9 000009F6            786      LEA         pr_space,A1
0000069C  4E4F                     787      TRAP        #15
0000069E                           788      ** Decode right side ea
0000069E  1002                     789      MOVE.B      D2,D0
000006A0  0200 003F                790      ANDI.B      #%00111111,D0
000006A4  4EB8 0066                791      JSR         EADecoder
000006A8                           792      ** Add comma
000006A8  103C 000E                793      MOVE.B      #14,D0
000006AC  43F9 000009F8            794      LEA         pr_comma,A1
000006B2  4E4F                     795      TRAP        #15
000006B4                           796      ** Decode left side ea
000006B4  3002                     797      MOVE.W      D2,D0
000006B6  0240 0FC0                798      ANDI.W      #%0000111111000000,D0
000006BA  EC88                     799      LSR.L       #6,D0
000006BC  4EB8 004E                800      JSR         EADecoder_left    
000006C0                           801      
000006C0  6000 0394                802      BRA         opdec_return
000006C4                           803  MATCH_RTS
000006C4  43F9 00000A2C            804      LEA         pr_RTS,A1
000006CA  103C 000E                805      MOVE.B      #14,D0
000006CE  4E4F                     806      TRAP        #15
000006D0  6000 0384                807      BRA         opdec_return
000006D4                           808  MATCH_CMP_B
000006D4                           809      ** Move command size into D1
000006D4  123C 0002                810      MOVE.B      #2,D1
000006D8                           811      ** Print command
000006D8  103C 000E                812      MOVE.B      #14,D0
000006DC  43F9 00000A30            813      LEA         pr_CMP,A1
000006E2  4E4F                     814      TRAP        #15
000006E4                           815      ** Print size
000006E4  43F9 000009FA            816      LEA         pr_BYTE,A1
000006EA  4E4F                     817      TRAP        #15
000006EC                           818      ** Print space
000006EC  43F9 000009F6            819      LEA         pr_space,A1
000006F2  4E4F                     820      TRAP        #15
000006F4                           821      ** Decode right side ea
000006F4  1002                     822      MOVE.B      D2,D0
000006F6  0200 003F                823      ANDI.B      #%00111111,D0
000006FA  4EB8 0066                824      JSR         EADecoder
000006FE                           825      ** Add comma
000006FE  103C 000E                826      MOVE.B      #14,D0
00000702  43F9 000009F8            827      LEA         pr_comma,A1
00000708  4E4F                     828      TRAP        #15
0000070A                           829      ** Decode left side ea
0000070A  3002                     830      MOVE.W      D2,D0
0000070C  0240 0FC0                831      ANDI.W      #%0000111111000000,D0
00000710  EC88                     832      LSR.L       #6,D0
00000712  4EB8 004E                833      JSR         EADecoder_left   
00000716                           834      
00000716  6000 033E                835      BRA         opdec_return
0000071A                           836  MATCH_CMP_W
0000071A                           837      ** Move command size into D1
0000071A  123C 0002                838      MOVE.B      #2,D1
0000071E                           839      ** Print command
0000071E  103C 000E                840      MOVE.B      #14,D0
00000722  43F9 00000A30            841      LEA         pr_CMP,A1
00000728  4E4F                     842      TRAP        #15
0000072A                           843      ** Print size
0000072A  43F9 000009FD            844      LEA         pr_WORD,A1
00000730  4E4F                     845      TRAP        #15
00000732                           846      ** Print space
00000732  43F9 000009F6            847      LEA         pr_space,A1
00000738  4E4F                     848      TRAP        #15
0000073A                           849      ** Decode right side ea
0000073A  1002                     850      MOVE.B      D2,D0
0000073C  0200 003F                851      ANDI.B      #%00111111,D0
00000740  4EB8 0066                852      JSR         EADecoder
00000744                           853      ** Add comma
00000744  103C 000E                854      MOVE.B      #14,D0
00000748  43F9 000009F8            855      LEA         pr_comma,A1
0000074E  4E4F                     856      TRAP        #15
00000750                           857      ** Decode left side ea
00000750  3002                     858      MOVE.W      D2,D0
00000752  0240 0FC0                859      ANDI.W      #%0000111111000000,D0
00000756  EC88                     860      LSR.L       #6,D0
00000758  4EB8 004E                861      JSR         EADecoder_left   
0000075C                           862      
0000075C  6000 02F8                863      BRA         opdec_return
00000760                           864  MATCH_CMP_L
00000760                           865      ** Move command size into D1
00000760  123C 0004                866      MOVE.B      #4,D1
00000764                           867      ** Print command
00000764  103C 000E                868      MOVE.B      #14,D0
00000768  43F9 00000A30            869      LEA         pr_CMP,A1
0000076E  4E4F                     870      TRAP        #15
00000770                           871      ** Print size
00000770  43F9 00000A00            872      LEA         pr_LONG,A1
00000776  4E4F                     873      TRAP        #15
00000778                           874      ** Print space
00000778  43F9 000009F6            875      LEA         pr_space,A1
0000077E  4E4F                     876      TRAP        #15
00000780                           877      ** Decode right side ea
00000780  1002                     878      MOVE.B      D2,D0
00000782  0200 003F                879      ANDI.B      #%00111111,D0
00000786  4EB8 0066                880      JSR         EADecoder
0000078A                           881      ** Add comma
0000078A  103C 000E                882      MOVE.B      #14,D0
0000078E  43F9 000009F8            883      LEA         pr_comma,A1
00000794  4E4F                     884      TRAP        #15
00000796                           885      ** Decode left side ea
00000796  3002                     886      MOVE.W      D2,D0
00000798  0240 0FC0                887      ANDI.W      #%0000111111000000,D0
0000079C  EC88                     888      LSR.L       #6,D0
0000079E  4EB8 004E                889      JSR         EADecoder_left   
000007A2                           890      
000007A2  6000 02B2                891      BRA         opdec_return
000007A6                           892  MATCH_JSR
000007A6                           893      ** Print command
000007A6  103C 000E                894      MOVE.B      #14,D0
000007AA  43F9 00000A34            895      LEA         pr_JSR,A1
000007B0  4E4F                     896      TRAP        #15
000007B2                           897      ** Print space
000007B2  43F9 000009F6            898      LEA         pr_space,A1
000007B8  4E4F                     899      TRAP        #15
000007BA                           900      ** Decode right side ea
000007BA  1002                     901      MOVE.B      D2,D0
000007BC  0200 003F                902      ANDI.B      #%00111111,D0
000007C0  4EB8 0066                903      JSR         EADecoder 
000007C4                           904      
000007C4  6000 0290                905      BRA         opdec_return
000007C8                           906  MATCH_CLR_B 
000007C8                           907      ** Move command size into D1
000007C8  123C 0002                908      MOVE.B      #2,D1
000007CC                           909      ** Print command
000007CC  103C 000E                910      MOVE.B      #14,D0
000007D0  43F9 00000A28            911      LEA         pr_CLR,A1
000007D6  4E4F                     912      TRAP        #15
000007D8                           913      ** Print size
000007D8  43F9 000009FA            914      LEA         pr_BYTE,A1
000007DE  4E4F                     915      TRAP        #15
000007E0                           916      ** Print space
000007E0  43F9 000009F6            917      LEA         pr_space,A1
000007E6  4E4F                     918      TRAP        #15
000007E8                           919      ** Decode right side ea
000007E8  1002                     920      MOVE.B      D2,D0
000007EA  0200 003F                921      ANDI.B      #%00111111,D0
000007EE  4EB8 0066                922      JSR         EADecoder
000007F2                           923      
000007F2  6000 0262                924      BRA         opdec_return
000007F6                           925  MATCH_CLR_W
000007F6                           926      ** Move command size into D1
000007F6  123C 0002                927      MOVE.B      #2,D1
000007FA                           928      ** Print command
000007FA  103C 000E                929      MOVE.B      #14,D0
000007FE  43F9 00000A28            930      LEA         pr_CLR,A1
00000804  4E4F                     931      TRAP        #15
00000806                           932      ** Print size
00000806  43F9 000009FD            933      LEA         pr_WORD,A1
0000080C  4E4F                     934      TRAP        #15
0000080E                           935      ** Print space
0000080E  43F9 000009F6            936      LEA         pr_space,A1
00000814  4E4F                     937      TRAP        #15
00000816                           938      ** Decode right side ea
00000816  1002                     939      MOVE.B      D2,D0
00000818  0200 003F                940      ANDI.B      #%00111111,D0
0000081C  4EB8 0066                941      JSR         EADecoder 
00000820                           942      
00000820  6000 0234                943      BRA         opdec_return
00000824                           944  MATCH_CLR_L
00000824                           945      ** Move command size into D1
00000824  123C 0004                946      MOVE.B      #4,D1
00000828                           947      ** Print command
00000828  103C 000E                948      MOVE.B      #14,D0
0000082C  43F9 00000A28            949      LEA         pr_CLR,A1
00000832  4E4F                     950      TRAP        #15
00000834                           951      ** Print size
00000834  43F9 00000A00            952      LEA         pr_LONG,A1
0000083A  4E4F                     953      TRAP        #15
0000083C                           954      ** Print space
0000083C  43F9 000009F6            955      LEA         pr_space,A1
00000842  4E4F                     956      TRAP        #15
00000844                           957      ** Decode right side ea
00000844  1002                     958      MOVE.B      D2,D0
00000846  0200 003F                959      ANDI.B      #%00111111,D0
0000084A  4EB8 0066                960      JSR         EADecoder 
0000084E                           961      
0000084E  6000 0206                962      BRA         opdec_return
00000852                           963  MATCH_AND_DN_B
00000852                           964      ** Move command size into D1
00000852  123C 0002                965      MOVE.B      #2,D1
00000856                           966      ** Print command
00000856  103C 000E                967      MOVE.B      #14,D0
0000085A  43F9 00000A38            968      LEA         pr_AND,A1
00000860  4E4F                     969      TRAP        #15
00000862                           970      ** Print size
00000862  43F9 000009FA            971      LEA         pr_BYTE,A1
00000868  4E4F                     972      TRAP        #15
0000086A                           973      ** Print space
0000086A  43F9 000009F6            974      LEA         pr_space,A1
00000870  4E4F                     975      TRAP        #15
00000872                           976      ** Decode right side ea
00000872  1002                     977      MOVE.B      D2,D0
00000874  0200 003F                978      ANDI.B      #%00111111,D0
00000878  4EB8 0066                979      JSR         EADecoder
0000087C                           980      ** Add comma
0000087C  103C 000E                981      MOVE.B      #14,D0
00000880  43F9 000009F8            982      LEA         pr_comma,A1
00000886  4E4F                     983      TRAP        #15
00000888                           984      ** Decode left side ea
00000888  3002                     985      MOVE.W      D2,D0
0000088A  0240 0FC0                986      ANDI.W      #%0000111111000000,D0
0000088E  EC88                     987      LSR.L       #6,D0
00000890  4EB8 004E                988      JSR         EADecoder_left   
00000894                           989      
00000894  6000 01C0                990      BRA         opdec_return
00000898                           991  MATCH_AND_DN_W
00000898                           992      ** Move command size into D1
00000898  123C 0002                993      MOVE.B      #2,D1
0000089C                           994      ** Print command
0000089C  103C 000E                995      MOVE.B      #14,D0
000008A0  43F9 00000A38            996      LEA         pr_AND,A1
000008A6  4E4F                     997      TRAP        #15
000008A8                           998      ** Print size
000008A8  43F9 000009FD            999      LEA         pr_WORD,A1
000008AE  4E4F                    1000      TRAP        #15
000008B0                          1001      ** Print space
000008B0  43F9 000009F6           1002      LEA         pr_space,A1
000008B6  4E4F                    1003      TRAP        #15
000008B8                          1004      ** Decode right side ea
000008B8  1002                    1005      MOVE.B      D2,D0
000008BA  0200 003F               1006      ANDI.B      #%00111111,D0
000008BE  4EB8 0066               1007      JSR         EADecoder
000008C2                          1008      ** Add comma
000008C2  103C 000E               1009      MOVE.B      #14,D0
000008C6  43F9 000009F8           1010      LEA         pr_comma,A1
000008CC  4E4F                    1011      TRAP        #15
000008CE                          1012      ** Decode left side ea
000008CE  3002                    1013      MOVE.W      D2,D0
000008D0  0240 0FC0               1014      ANDI.W      #%0000111111000000,D0
000008D4  EC88                    1015      LSR.L       #6,D0
000008D6  4EB8 004E               1016      JSR         EADecoder_left   
000008DA                          1017      
000008DA  6000 017A               1018      BRA         opdec_return
000008DE                          1019  MATCH_AND_DN_L
000008DE                          1020      ** Move command size into D1
000008DE  123C 0004               1021      MOVE.B      #4,D1
000008E2                          1022      ** Print command
000008E2  103C 000E               1023      MOVE.B      #14,D0
000008E6  43F9 00000A38           1024      LEA         pr_AND,A1
000008EC  4E4F                    1025      TRAP        #15
000008EE                          1026      ** Print size
000008EE  43F9 00000A00           1027      LEA         pr_LONG,A1
000008F4  4E4F                    1028      TRAP        #15
000008F6                          1029      ** Print space
000008F6  43F9 000009F6           1030      LEA         pr_space,A1
000008FC  4E4F                    1031      TRAP        #15
000008FE                          1032      ** Decode right side ea
000008FE  1002                    1033      MOVE.B      D2,D0
00000900  0200 003F               1034      ANDI.B      #%00111111,D0
00000904  4EB8 0066               1035      JSR         EADecoder
00000908                          1036      ** Add comma
00000908  103C 000E               1037      MOVE.B      #14,D0
0000090C  43F9 000009F8           1038      LEA         pr_comma,A1
00000912  4E4F                    1039      TRAP        #15
00000914                          1040      ** Decode left side ea
00000914  3002                    1041      MOVE.W      D2,D0
00000916  0240 0FC0               1042      ANDI.W      #%0000111111000000,D0
0000091A  EC88                    1043      LSR.L       #6,D0
0000091C  4EB8 004E               1044      JSR         EADecoder_left   
00000920                          1045      
00000920  6000 0134               1046      BRA         opdec_return
00000924                          1047  MATCH_AND_EA_B
00000924                          1048      ** Move command size into D1
00000924  123C 0002               1049      MOVE.B      #2,D1
00000928                          1050      ** Print command
00000928  103C 000E               1051      MOVE.B      #14,D0
0000092C  43F9 00000A38           1052      LEA         pr_AND,A1
00000932  4E4F                    1053      TRAP        #15
00000934                          1054      ** Print size
00000934  43F9 000009FA           1055      LEA         pr_BYTE,A1
0000093A  4E4F                    1056      TRAP        #15
0000093C                          1057      ** Print space
0000093C  43F9 000009F6           1058      LEA         pr_space,A1
00000942  4E4F                    1059      TRAP        #15
00000944                          1060      ** Decode right side ea
00000944  1002                    1061      MOVE.B      D2,D0
00000946  0200 003F               1062      ANDI.B      #%00111111,D0
0000094A  4EB8 004E               1063      JSR         EADecoder_left
0000094E                          1064      ** Add comma
0000094E  103C 000E               1065      MOVE.B      #14,D0
00000952  43F9 000009F8           1066      LEA         pr_comma,A1
00000958  4E4F                    1067      TRAP        #15
0000095A                          1068      ** Decode left side ea
0000095A  3002                    1069      MOVE.W      D2,D0
0000095C  0240 0FC0               1070      ANDI.W      #%0000111111000000,D0
00000960  EC88                    1071      LSR.L       #6,D0
00000962  4EB8 0066               1072      JSR         EADecoder 
00000966                          1073      
00000966  6000 00EE               1074      BRA         opdec_return
0000096A                          1075  MATCH_AND_EA_W
0000096A                          1076      ** Move command size into D1
0000096A  123C 0002               1077      MOVE.B      #2,D1
0000096E                          1078      ** Print command
0000096E  103C 000E               1079      MOVE.B      #14,D0
00000972  43F9 00000A38           1080      LEA         pr_AND,A1
00000978  4E4F                    1081      TRAP        #15
0000097A                          1082      ** Print size
0000097A  43F9 000009FD           1083      LEA         pr_WORD,A1
00000980  4E4F                    1084      TRAP        #15
00000982                          1085      ** Print space
00000982  43F9 000009F6           1086      LEA         pr_space,A1
00000988  4E4F                    1087      TRAP        #15
0000098A                          1088      ** Decode right side ea
0000098A  1002                    1089      MOVE.B      D2,D0
0000098C  0200 003F               1090      ANDI.B      #%00111111,D0
00000990  4EB8 004E               1091      JSR         EADecoder_left
00000994                          1092      ** Add comma
00000994  103C 000E               1093      MOVE.B      #14,D0
00000998  43F9 000009F8           1094      LEA         pr_comma,A1
0000099E  4E4F                    1095      TRAP        #15
000009A0                          1096      ** Decode left side ea
000009A0  3002                    1097      MOVE.W      D2,D0
000009A2  0240 0FC0               1098      ANDI.W      #%0000111111000000,D0
000009A6  EC88                    1099      LSR.L       #6,D0
000009A8  4EB8 0066               1100      JSR         EADecoder 
000009AC                          1101      
000009AC  6000 00A8               1102      BRA         opdec_return
000009B0                          1103  MATCH_AND_EA_L
000009B0                          1104      ** Move command size into D1
000009B0  123C 0004               1105      MOVE.B      #4,D1
000009B4                          1106      ** Print command
000009B4  103C 000E               1107      MOVE.B      #14,D0
000009B8  43F9 00000A38           1108      LEA         pr_AND,A1
000009BE  4E4F                    1109      TRAP        #15
000009C0                          1110      ** Print size
000009C0  43F9 00000A00           1111      LEA         pr_LONG,A1
000009C6  4E4F                    1112      TRAP        #15
000009C8                          1113      ** Print space
000009C8  43F9 000009F6           1114      LEA         pr_space,A1
000009CE  4E4F                    1115      TRAP        #15
000009D0                          1116      ** Decode right side ea
000009D0  1002                    1117      MOVE.B      D2,D0
000009D2  0200 003F               1118      ANDI.B      #%00111111,D0
000009D6  4EB8 004E               1119      JSR         EADecoder_left
000009DA                          1120      ** Add comma
000009DA  103C 000E               1121      MOVE.B      #14,D0
000009DE  43F9 000009F8           1122      LEA         pr_comma,A1
000009E4  4E4F                    1123      TRAP        #15
000009E6                          1124      ** Decode left side ea
000009E6  3002                    1125      MOVE.W      D2,D0
000009E8  0240 0FC0               1126      ANDI.W      #%0000111111000000,D0
000009EC  EC88                    1127      LSR.L       #6,D0
000009EE  4EB8 0066               1128      JSR         EADecoder   
000009F2                          1129      
000009F2  6000 0062               1130      BRA         opdec_return
000009F6                          1131  
000009F6                          1132  
000009F6                          1133  
000009F6                          1134  
000009F6                          1135  -------------------- end include --------------------
000009F6                          1136  
000009F6  =00004E71               1137  NOP             EQU $4E71
000009F6  =00000001               1138  MOVE_B          EQU %0001
000009F6  =00000003               1139  MOVE_W          EQU %0011
000009F6  =00000002               1140  MOVE_L          EQU %0010
000009F6  =00000001               1141  MOVEA_WL        EQU %001 
000009F6  =00000007               1142  MOVEQ_          EQU %0111
000009F6  =00000122               1143  MOVEM_TO_MEM_W  EQU %0100100010
000009F6  =00000123               1144  MOVEM_TO_MEM_L  EQU %0100100011
000009F6  =00000132               1145  MOVEM_TO_REG_W  EQU %0100110010
000009F6  =00000133               1146  MOVEM_TO_REG_L  EQU %0100110011
000009F6                          1147  
000009F6  =00000018               1148  ADDI_B          EQU %0000011000
000009F6  =00000019               1149  ADDI_W          EQU %0000011001
000009F6  =0000001A               1150  ADDI_L          EQU %0000011010
000009F6                          1151  
000009F6  =0000000D               1152  ADD_ADDA        EQU %1101
000009F6  =00000000               1153  ADD_TO_REG_B    EQU %000
000009F6  =00000001               1154  ADD_TO_REG_W    EQU %001
000009F6  =00000002               1155  ADD_TO_REG_L    EQU %010
000009F6  =00000004               1156  ADD_TO_EA_B     EQU %100
000009F6  =00000005               1157  ADD_TO_EA_W     EQU %101
000009F6  =00000006               1158  ADD_TO_EA_L     EQU %110
000009F6  =00000003               1159  ADDA_W          EQU %011
000009F6  =00000007               1160  ADDA_L          EQU %111
000009F6                          1161  
000009F6  =00000005               1162  ADDQ            EQU %0101
000009F6  =00000000               1163  ADDQ_B          EQU %000
000009F6  =00000001               1164  ADDQ_W          EQU %001
000009F6  =00000002               1165  ADDQ_L          EQU %010
000009F6                          1166  
000009F6  =0000000C               1167  MULS_W_AND      EQU %1100
000009F6  =00000007               1168  MULS_OP_W       EQU %111 
000009F6                          1169  
000009F6  =00000009               1170  SUB             EQU %1001
000009F6  =00000000               1171  SUB_TO_DN_B     EQU %000
000009F6  =00000001               1172  SUB_TO_DN_W     EQU %001
000009F6  =00000002               1173  SUB_TO_DN_L     EQU %010
000009F6  =00000004               1174  SUB_TO_EA_B     EQU %100
000009F6  =00000005               1175  SUB_TO_EA_W     EQU %101
000009F6  =00000006               1176  SUB_TO_EA_L     EQU %110
000009F6                          1177  
000009F6  =00000008               1178  DIVU_OR         EQU %1000
000009F6  =00000003               1179  DIVU            EQU %011
000009F6                          1180  
000009F6  =00000000               1181  DN_B            EQU %000
000009F6  =00000001               1182  DN_W            EQU %001
000009F6  =00000002               1183  DN_L            EQU %010
000009F6  =00000004               1184  EA_B            EQU %100
000009F6  =00000005               1185  EA_W            EQU %101
000009F6  =00000006               1186  EA_L            EQU %110
000009F6                          1187  
000009F6  =00000004               1188  MULS_LEA_CLR_JSR_RTS    EQU %0100
000009F6  =00004E75               1189  RTS             EQU $4E75
000009F6  =00000007               1190  LEA             EQU %111
000009F6  =0000013A               1191  JSR             EQU %0100111010
000009F6  =00000108               1192  CLR_B           EQU %0100001000
000009F6  =00000109               1193  CLR_W           EQU %0100001001
000009F6  =0000010A               1194  CLR_L           EQU %0100001010
000009F6  =00000130               1195  MULS_L          EQU %0100110000
000009F6                          1196  
000009F6  =0000038F               1197  LSL             EQU %1110001111
000009F6  =0000038B               1198  LSR             EQU %1110001011
000009F6  =00000387               1199  ASR             EQU %1110000111
000009F6  =00000383               1200  ASL             EQU %1110000011
000009F6  =0000039F               1201  ROL             EQU %1110011111
000009F6  =0000039B               1202  ROR             EQU %1110011011
000009F6                          1203  
000009F6  =0000000B               1204  CMP             EQU %1011
000009F6  =00000000               1205  CMP_B           EQU %000
000009F6  =00000001               1206  CMP_W           EQU %001
000009F6  =00000002               1207  CMP_L           EQU %010
000009F6                          1208  
000009F6  =00000006               1209  BCC             EQU %0110
000009F6  =00000000               1210  BCC_16          EQU %00000000
000009F6  =000000FF               1211  BCC_32          EQU $FF
000009F6  =00000000               1212  CC_T                EQU %0000
000009F6  =00000001               1213  CC_F                EQU %0001
000009F6  =00000002               1214  CC_HI           EQU %0010
000009F6  =00000003               1215  CC_LS           EQU %0011
000009F6  =00000004               1216  CC_CC           EQU %0100
000009F6  =00000005               1217  CC_CS           EQU %0101
000009F6  =00000006               1218  CC_NE           EQU %0110
000009F6  =00000007               1219  CC_EQ           EQU %0111
000009F6  =00000008               1220  CC_VC           EQU %1000
000009F6  =00000009               1221  CC_VS           EQU %1001
000009F6  =0000000A               1222  CC_PL           EQU %1010
000009F6  =0000000B               1223  CC_MI           EQU %1011
000009F6  =0000000C               1224  CC_GE           EQU %1100
000009F6  =0000000D               1225  CC_LT           EQU %1101
000009F6  =0000000E               1226  CC_GT           EQU %1110
000009F6  =0000000F               1227  CC_LE           EQU %1111
000009F6                          1228  
000009F6= 20 00                   1229  pr_space    DC.B    ' ',0
000009F8= 2C 00                   1230  pr_comma    DC.B    ',',0
000009FA= 2E 42 00                1231  pr_BYTE     DC.B    '.B',0
000009FD= 2E 57 00                1232  pr_WORD     DC.B    '.W',0
00000A00= 2E 4C 00                1233  pr_LONG     DC.B    '.L',0
00000A03                          1234  
00000A03= 4E 4F 50 00             1235  pr_NOP      DC.B    'NOP',0
00000A07= 4D 4F 56 45 00          1236  pr_MOVE     DC.B    'MOVE',0
00000A0C= 4D 4F 56 45 41 00       1237  pr_MOVEA    DC.B    'MOVEA',0
00000A12= 4D 4F 56 45 51 00       1238  pr_MOVEQ    DC.B    'MOVEQ',0
00000A18= 4D 4F 56 45 4D 00       1239  pr_MOVEM    DC.B    'MOVEM',0
00000A1E= 41 44 44 41 00          1240  pr_ADDA     DC.B    'ADDA',0
00000A23= 4D 55 4C 53 00          1241  pr_MULS     DC.B    'MULS',0
00000A28= 43 4C 52 00             1242  pr_CLR      DC.B    'CLR',0
00000A2C= 52 54 53 00             1243  pr_RTS      DC.B    'RTS',0
00000A30= 43 4D 50 00             1244  pr_CMP      DC.B    'CMP',0
00000A34= 4A 53 52 00             1245  pr_JSR      DC.B    'JSR',0
00000A38= 41 4E 44 00             1246  pr_AND      DC.B    'AND',0
00000A3C                          1247  
00000A3C                          1248  
00000A3C                          1249  
00000A3C                          1250  OpDecoder
00000A3C  48E7 FF7E               1251      MOVEM.L     D0-D7/A1-A6, -(SP)
00000A40  4241                    1252      CLR         D1
00000A42  6000 0078               1253      BRA         CHECK_NOP
00000A46                          1254  NOP_RETURN
00000A46  6000 0082               1255      BRA         CHECK_FOUR_BIT_SIG
00000A4A                          1256  FOUR_BIT_RETURN
00000A4A  6000 0434               1257      BRA         CHECK_MOVEM
00000A4E                          1258  MOVEM_RETURN
00000A4E  6000 04D8               1259      BRA         CHECK_ADDI
00000A52                          1260  ADDI_RETURN
00000A52  6000 0028               1261      BRA         CHECK_SHIFT_AND_ROTATE
00000A56                          1262      
00000A56                          1263  opdec_return
00000A56  4CDF 7EFF               1264      MOVEM.L     (SP)+, D0-D7/A1-A6
00000A5A  4E75                    1265      RTS
00000A5C                          1266  
00000A5C                          1267  ReadFirstFourBits
00000A5C                          1268  
00000A5C  48A7 2000               1269      MOVEM.W     D2, -(SP)
00000A60                          1270  
00000A60  1E3C 000C               1271      MOVE.B      #12,D7 
00000A64  EE6A                    1272      LSR.W       D7,D2 
00000A66  1602                    1273      MOVE.B      D2,D3
00000A68                          1274      
00000A68  4C9F 0004               1275      MOVEM.W     (SP)+,D2
00000A6C  4E75                    1276      RTS
00000A6E                          1277      
00000A6E                          1278  ReadFirstTenBits
00000A6E                          1279      
00000A6E  48A7 2000               1280      MOVEM.W     D2, -(SP)
00000A72                          1281   
00000A72  EC4A                    1282      LSR.W       #6,D2 
00000A74  3602                    1283      MOVE.W      D2,D3
00000A76                          1284      
00000A76  4C9F 0004               1285      MOVEM.W     (SP)+,D2
00000A7A  4E75                    1286      RTS
00000A7C                          1287  CHECK_SHIFT_AND_ROTATE
00000A7C                          1288  
00000A7C  61F0                    1289      BSR         ReadFirstTenBits
00000A7E                          1290      
00000A7E  3C3C 038F               1291      MOVE.W      #LSL,D6
00000A82  BC43                    1292      CMP.W       D3,D6
00000A84  6700 056C               1293      BEQ         MATCH_LSL
00000A88                          1294      
00000A88  3C3C 038B               1295      MOVE.W      #LSR,D6
00000A8C  BC43                    1296      CMP.W       D3,D6
00000A8E  6700 0564               1297      BEQ         MATCH_LSR
00000A92                          1298      
00000A92  3C3C 0387               1299      MOVE.W      #ASR,D6
00000A96  BC43                    1300      CMP.W       D3,D6
00000A98  6700 055C               1301      BEQ         MATCH_ASR
00000A9C                          1302      
00000A9C  3C3C 0383               1303      MOVE.W      #ASL,D6
00000AA0  BC43                    1304      CMP.W       D3,D6
00000AA2  6700 0554               1305      BEQ         MATCH_ASL
00000AA6                          1306      
00000AA6  3C3C 039F               1307      MOVE.W      #ROL,D6
00000AAA  BC43                    1308      CMP.W       D3,D6
00000AAC  6700 054C               1309      BEQ         MATCH_ROL
00000AB0                          1310      
00000AB0  3C3C 039B               1311      MOVE.W      #ROR,D6
00000AB4  BC43                    1312      CMP.W       D3,D6
00000AB6  6700 0544               1313      BEQ         MATCH_ROR
00000ABA                          1314      
00000ABA  609A                    1315      BRA         opdec_return
00000ABC                          1316      
00000ABC                          1317  CHECK_NOP
00000ABC                          1318      
00000ABC  3C3C 4E71               1319      MOVE.W      #NOP,D6
00000AC0  BC42                    1320      CMP.W       D2,D6
00000AC2  6700 F6CA               1321      BEQ         MATCH_NOP
00000AC6                          1322      
00000AC6  6000 FF7E               1323      BRA         NOP_RETURN
00000ACA                          1324  
00000ACA                          1325  CHECK_FOUR_BIT_SIG
00000ACA                          1326  
00000ACA  6190                    1327      BSR         ReadFirstFourBits
00000ACC                          1328      
00000ACC  1C3C 0001               1329      MOVE.B      #MOVE_B,D6
00000AD0  BC03                    1330      CMP.B       D3,D6
00000AD2  6700 F6CA               1331      BEQ         MATCH_MOVE_B
00000AD6                          1332  
00000AD6  1C3C 0003               1333      MOVE.B      #MOVE_W,D6
00000ADA  BC03                    1334      CMP.B       D3,D6
00000ADC  6700 04B0               1335      BEQ         CHECK_MOVEA_W_AND_MOVE_W
00000AE0                          1336      
00000AE0  1C3C 0002               1337      MOVE.B      #MOVE_L,D6
00000AE4  BC03                    1338      CMP.B       D3,D6
00000AE6  6700 04D0               1339      BEQ         CHECK_MOVEA_L_AND_MOVE_L
00000AEA                          1340   
00000AEA  1C3C 0007               1341      MOVE.B      #MOVEQ_,D6
00000AEE  BC03                    1342      CMP.B       D3,D6
00000AF0  6700 04D8               1343      BEQ         MATCH_MOVEQ
00000AF4                          1344      
00000AF4  1C3C 000D               1345      MOVE.B      #ADD_ADDA,D6
00000AF8  BC03                    1346      CMP.B       D3,D6
00000AFA  6700 03B4               1347      BEQ         CHECK_ADD_ADDA
00000AFE                          1348      
00000AFE  1C3C 0005               1349      MOVE.B      #ADDQ,D6
00000B02  BC03                    1350      CMP.B       D3,D6
00000B04  6700 0400               1351      BEQ         CHECK_ADDQ
00000B08                          1352      
00000B08  1C3C 0009               1353      MOVE.B      #SUB,D6
00000B0C  BC03                    1354      CMP.B       D3,D6
00000B0E  6700 043E               1355      BEQ         CHECK_SUB
00000B12                          1356      
00000B12  1C3C 0008               1357      MOVE.B      #DIVU_OR,D6
00000B16  BC03                    1358      CMP.B       D3,D6
00000B18  6700 0318               1359      BEQ         CHECK_DIVU_OR
00000B1C                          1360      
00000B1C  1C3C 000C               1361      MOVE.B      #MULS_W_AND,D6
00000B20  BC03                    1362      CMP.B       D3,D6
00000B22  6700 02C0               1363      BEQ         CHECK_MULS_W_AND
00000B26                          1364      
00000B26  1C3C 0004               1365      MOVE.B      #MULS_LEA_CLR_JSR_RTS,D6
00000B2A  BC03                    1366      CMP.B       D3,D6
00000B2C  6700 0264               1367      BEQ         CHECK_MULS_LEA_CLR_JSR_RTS
00000B30                          1368      
00000B30  1C3C 000B               1369      MOVE.B      #CMP,D6
00000B34  BC03                    1370      CMP.B       D3,D6
00000B36  6700 0234               1371      BEQ         CHECK_CMP
00000B3A                          1372      
00000B3A  1C3C 0006               1373      MOVE.B      #BCC,D6
00000B3E  BC03                    1374      CMP.B       D3,D6
00000B40  6700 0006               1375      BEQ         CHECK_BCC
00000B44                          1376      
00000B44  6000 FF04               1377      BRA         FOUR_BIT_RETURN
00000B48                          1378  CHECK_BCC
00000B48                          1379      
00000B48  1C3C 0000               1380      MOVE.B      #BCC_16,D6
00000B4C  BC02                    1381      CMP.B       D2,D6
00000B4E  6700 00B8               1382      BEQ         CHECK_BCC_16
00000B52                          1383      
00000B52  1C3C 00FF               1384      MOVE.B      #BCC_32,D6
00000B56  BC02                    1385      CMP.B       D2,D6
00000B58  6700 0156               1386      BEQ         CHECK_BCC_32
00000B5C                          1387      
00000B5C  6000 0002               1388      BRA         CHECK_BCC_8
00000B60                          1389      
00000B60                          1390  CHECK_BCC_8
00000B60                          1391      
00000B60  6100 01F6               1392      BSR         ISOLATE_CC_CODE_FOR_BCC
00000B64                          1393      
00000B64  1C3C 0000               1394      MOVE.B      #CC_T,D6
00000B68  BC03                    1395      CMP.B       D3,D6
00000B6A  6700 0492               1396      BEQ         MATCH_CC_T_8
00000B6E                          1397      
00000B6E  1C3C 0001               1398      MOVE.B      #CC_F,D6
00000B72  BC03                    1399      CMP.B       D3,D6
00000B74  6700 048E               1400      BEQ         MATCH_CC_F_8
00000B78                          1401      
00000B78  1C3C 0002               1402      MOVE.B      #CC_HI,D6
00000B7C  BC03                    1403      CMP.B       D3,D6
00000B7E  6700 048A               1404      BEQ         MATCH_CC_HI_8
00000B82                          1405      
00000B82  1C3C 0003               1406      MOVE.B      #CC_LS,D6
00000B86  BC03                    1407      CMP.B       D3,D6
00000B88  6700 0486               1408      BEQ         MATCH_CC_LS_8
00000B8C                          1409      
00000B8C  1C3C 0004               1410      MOVE.B      #CC_CC,D6
00000B90  BC03                    1411      CMP.B       D3,D6
00000B92  6700 0482               1412      BEQ         MATCH_CC_CC_8
00000B96                          1413      
00000B96  1C3C 0005               1414      MOVE.B      #CC_CS,D6
00000B9A  BC03                    1415      CMP.B       D3,D6
00000B9C  6700 047E               1416      BEQ         MATCH_CC_CS_8
00000BA0                          1417      
00000BA0  1C3C 0006               1418      MOVE.B      #CC_NE,D6
00000BA4  BC03                    1419      CMP.B       D3,D6
00000BA6  6700 047A               1420      BEQ         MATCH_CC_NE_8
00000BAA                          1421      
00000BAA  1C3C 0007               1422      MOVE.B      #CC_EQ,D6
00000BAE  BC03                    1423      CMP.B       D3,D6
00000BB0  6700 0476               1424      BEQ         MATCH_CC_EQ_8
00000BB4                          1425      
00000BB4  1C3C 0008               1426      MOVE.B      #CC_VC,D6
00000BB8  BC03                    1427      CMP.B       D3,D6
00000BBA  6700 0472               1428      BEQ         MATCH_CC_VC_8
00000BBE                          1429      
00000BBE  1C3C 0009               1430      MOVE.B      #CC_VS,D6
00000BC2  BC03                    1431      CMP.B       D3,D6
00000BC4  6700 046E               1432      BEQ         MATCH_CC_VS_8
00000BC8                          1433      
00000BC8  1C3C 000A               1434      MOVE.B      #CC_PL,D6
00000BCC  BC03                    1435      CMP.B       D3,D6
00000BCE  6700 046A               1436      BEQ         MATCH_CC_PL_8
00000BD2                          1437      
00000BD2  1C3C 000B               1438      MOVE.B      #CC_MI,D6
00000BD6  BC03                    1439      CMP.B       D3,D6
00000BD8  6700 0466               1440      BEQ         MATCH_CC_MI_8
00000BDC                          1441      
00000BDC  1C3C 000C               1442      MOVE.B      #CC_GE,D6
00000BE0  BC03                    1443      CMP.B       D3,D6
00000BE2  6700 0462               1444      BEQ         MATCH_CC_GE_8
00000BE6                          1445      
00000BE6  1C3C 000D               1446      MOVE.B      #CC_LT,D6
00000BEA  BC03                    1447      CMP.B       D3,D6
00000BEC  6700 045E               1448      BEQ         MATCH_CC_LT_8
00000BF0                          1449      
00000BF0  1C3C 000E               1450      MOVE.B      #CC_GT,D6
00000BF4  BC03                    1451      CMP.B       D3,D6
00000BF6  6700 045A               1452      BEQ         MATCH_CC_GT_8
00000BFA                          1453      
00000BFA  1C3C 000F               1454      MOVE.B      #CC_LE,D6
00000BFE  BC03                    1455      CMP.B       D3,D6
00000C00  6700 0456               1456      BEQ         MATCH_CC_LE_8
00000C04                          1457  
00000C04  6000 0458               1458      BRA         ERROR
00000C08                          1459      
00000C08                          1460  CHECK_BCC_16
00000C08                          1461  
00000C08  6100 014E               1462      BSR         ISOLATE_CC_CODE_FOR_BCC
00000C0C                          1463      
00000C0C  1C3C 0000               1464      MOVE.B      #CC_T,D6
00000C10  BC03                    1465      CMP.B       D3,D6
00000C12  6700 03EC               1466      BEQ         MATCH_CC_T_16
00000C16                          1467      
00000C16  1C3C 0001               1468      MOVE.B      #CC_F,D6
00000C1A  BC03                    1469      CMP.B       D3,D6
00000C1C  6700 03E8               1470      BEQ         MATCH_CC_F_16
00000C20                          1471      
00000C20  1C3C 0002               1472      MOVE.B      #CC_HI,D6
00000C24  BC03                    1473      CMP.B       D3,D6
00000C26  6700 03E4               1474      BEQ         MATCH_CC_HI_16
00000C2A                          1475      
00000C2A  1C3C 0003               1476      MOVE.B      #CC_LS,D6
00000C2E  BC03                    1477      CMP.B       D3,D6
00000C30  6700 03E0               1478      BEQ         MATCH_CC_LS_16
00000C34                          1479      
00000C34  1C3C 0004               1480      MOVE.B      #CC_CC,D6
00000C38  BC03                    1481      CMP.B       D3,D6
00000C3A  6700 03DC               1482      BEQ         MATCH_CC_CC_16
00000C3E                          1483      
00000C3E  1C3C 0005               1484      MOVE.B      #CC_CS,D6
00000C42  BC03                    1485      CMP.B       D3,D6
00000C44  6700 03D8               1486      BEQ         MATCH_CC_CS_16
00000C48                          1487      
00000C48  1C3C 0006               1488      MOVE.B      #CC_NE,D6
00000C4C  BC03                    1489      CMP.B       D3,D6
00000C4E  6700 03D4               1490      BEQ         MATCH_CC_NE_16
00000C52                          1491      
00000C52  1C3C 0007               1492      MOVE.B      #CC_EQ,D6
00000C56  BC03                    1493      CMP.B       D3,D6
00000C58  6700 03D0               1494      BEQ         MATCH_CC_EQ_16
00000C5C                          1495      
00000C5C  1C3C 0008               1496      MOVE.B      #CC_VC,D6
00000C60  BC03                    1497      CMP.B       D3,D6
00000C62  6700 03CC               1498      BEQ         MATCH_CC_VC_16
00000C66                          1499      
00000C66  1C3C 0009               1500      MOVE.B      #CC_VS,D6
00000C6A  BC03                    1501      CMP.B       D3,D6
00000C6C  6700 03C8               1502      BEQ         MATCH_CC_VS_16
00000C70                          1503      
00000C70  1C3C 000A               1504      MOVE.B      #CC_PL,D6
00000C74  BC03                    1505      CMP.B       D3,D6
00000C76  6700 03C4               1506      BEQ         MATCH_CC_PL_16
00000C7A                          1507      
00000C7A  1C3C 000B               1508      MOVE.B      #CC_MI,D6
00000C7E  BC03                    1509      CMP.B       D3,D6
00000C80  6700 03C0               1510      BEQ         MATCH_CC_MI_16
00000C84                          1511      
00000C84  1C3C 000C               1512      MOVE.B      #CC_GE,D6
00000C88  BC03                    1513      CMP.B       D3,D6
00000C8A  6700 03BC               1514      BEQ         MATCH_CC_GE_16
00000C8E                          1515      
00000C8E  1C3C 000D               1516      MOVE.B      #CC_LT,D6
00000C92  BC03                    1517      CMP.B       D3,D6
00000C94  6700 03B8               1518      BEQ         MATCH_CC_LT_16
00000C98                          1519      
00000C98  1C3C 000E               1520      MOVE.B      #CC_GT,D6
00000C9C  BC03                    1521      CMP.B       D3,D6
00000C9E  6700 03B4               1522      BEQ         MATCH_CC_GT_16
00000CA2                          1523      
00000CA2  1C3C 000F               1524      MOVE.B      #CC_LE,D6
00000CA6  BC03                    1525      CMP.B       D3,D6
00000CA8  6700 03B0               1526      BEQ         MATCH_CC_LE_16
00000CAC                          1527  
00000CAC  6000 03B0               1528      BRA         ERROR
00000CB0                          1529  
00000CB0                          1530  
00000CB0                          1531  CHECK_BCC_32  
00000CB0                          1532  
00000CB0  6100 00A6               1533      BSR         ISOLATE_CC_CODE_FOR_BCC 
00000CB4                          1534      
00000CB4  1C3C 0000               1535      MOVE.B      #CC_T,D6
00000CB8  BC03                    1536      CMP.B       D3,D6
00000CBA  6700 0346               1537      BEQ         MATCH_CC_T_32
00000CBE                          1538      
00000CBE  1C3C 0001               1539      MOVE.B      #CC_F,D6
00000CC2  BC03                    1540      CMP.B       D3,D6
00000CC4  6700 0342               1541      BEQ         MATCH_CC_F_32
00000CC8                          1542      
00000CC8  1C3C 0002               1543      MOVE.B      #CC_HI,D6
00000CCC  BC03                    1544      CMP.B       D3,D6
00000CCE  6700 033E               1545      BEQ         MATCH_CC_HI_32
00000CD2                          1546      
00000CD2  1C3C 0003               1547      MOVE.B      #CC_LS,D6
00000CD6  BC03                    1548      CMP.B       D3,D6
00000CD8  6700 033A               1549      BEQ         MATCH_CC_LS_32
00000CDC                          1550      
00000CDC  1C3C 0004               1551      MOVE.B      #CC_CC,D6
00000CE0  BC03                    1552      CMP.B       D3,D6
00000CE2  6700 0336               1553      BEQ         MATCH_CC_CC_32
00000CE6                          1554      
00000CE6  1C3C 0005               1555      MOVE.B      #CC_CS,D6
00000CEA  BC03                    1556      CMP.B       D3,D6
00000CEC  6700 0332               1557      BEQ         MATCH_CC_CS_32
00000CF0                          1558      
00000CF0  1C3C 0006               1559      MOVE.B      #CC_NE,D6
00000CF4  BC03                    1560      CMP.B       D3,D6
00000CF6  6700 032E               1561      BEQ         MATCH_CC_NE_32
00000CFA                          1562      
00000CFA  1C3C 0007               1563      MOVE.B      #CC_EQ,D6
00000CFE  BC03                    1564      CMP.B       D3,D6
00000D00  6700 032A               1565      BEQ         MATCH_CC_EQ_32
00000D04                          1566      
00000D04  1C3C 0008               1567      MOVE.B      #CC_VC,D6
00000D08  BC03                    1568      CMP.B       D3,D6
00000D0A  6700 0326               1569      BEQ         MATCH_CC_VC_32
00000D0E                          1570      
00000D0E  1C3C 0009               1571      MOVE.B      #CC_VS,D6
00000D12  BC03                    1572      CMP.B       D3,D6
00000D14  6700 0322               1573      BEQ         MATCH_CC_VS_32
00000D18                          1574      
00000D18  1C3C 000A               1575      MOVE.B      #CC_PL,D6
00000D1C  BC03                    1576      CMP.B       D3,D6
00000D1E  6700 031E               1577      BEQ         MATCH_CC_PL_32
00000D22                          1578      
00000D22  1C3C 000B               1579      MOVE.B      #CC_MI,D6
00000D26  BC03                    1580      CMP.B       D3,D6
00000D28  6700 031A               1581      BEQ         MATCH_CC_MI_32
00000D2C                          1582      
00000D2C  1C3C 000C               1583      MOVE.B      #CC_GE,D6
00000D30  BC03                    1584      CMP.B       D3,D6
00000D32  6700 0316               1585      BEQ         MATCH_CC_GE_32
00000D36                          1586      
00000D36  1C3C 000D               1587      MOVE.B      #CC_LT,D6
00000D3A  BC03                    1588      CMP.B       D3,D6
00000D3C  6700 0312               1589      BEQ         MATCH_CC_LT_32
00000D40                          1590      
00000D40  1C3C 000E               1591      MOVE.B      #CC_GT,D6
00000D44  BC03                    1592      CMP.B       D3,D6
00000D46  6700 030E               1593      BEQ         MATCH_CC_GT_32
00000D4A                          1594      
00000D4A  1C3C 000F               1595      MOVE.B      #CC_LE,D6
00000D4E  BC03                    1596      CMP.B       D3,D6
00000D50  6700 030A               1597      BEQ         MATCH_CC_LE_32
00000D54                          1598  
00000D54  6000 0308               1599      BRA         ERROR
00000D58                          1600   
00000D58                          1601  ISOLATE_CC_CODE_FOR_BCC
00000D58                          1602  
00000D58  48A7 2000               1603      MOVEM.W     D2, -(SP) 
00000D5C                          1604      
00000D5C  E94A                    1605      LSL.W       #4,D2
00000D5E  1E3C 000C               1606      MOVE.B      #12,D7
00000D62  EE6A                    1607      LSR.W       D7,D2
00000D64                          1608      
00000D64  1602                    1609      MOVE.B      D2,D3      
00000D66                          1610  
00000D66  4C9F 0004               1611      MOVEM.W     (SP)+,D2 
00000D6A  4E75                    1612      RTS
00000D6C                          1613  CHECK_CMP
00000D6C                          1614      
00000D6C  6100 0232               1615      BSR         ISOLATE_OP_CODE
00000D70                          1616      
00000D70  1C3C 0000               1617      MOVE.B      #CMP_B,D6
00000D74  BC03                    1618      CMP.B       D3,D6
00000D76  6700 F95C               1619      BEQ         MATCH_CMP_B
00000D7A                          1620      
00000D7A  1C3C 0001               1621      MOVE.B      #CMP_W,D6
00000D7E  BC03                    1622      CMP.B       D3,D6
00000D80  6700 F998               1623      BEQ         MATCH_CMP_W
00000D84                          1624      
00000D84  1C3C 0002               1625      MOVE.B      #CMP_L,D6
00000D88  BC03                    1626      CMP.B       D3,D6
00000D8A  6700 F9D4               1627      BEQ         MATCH_CMP_L
00000D8E                          1628      
00000D8E  6000 02CE               1629      BRA         ERROR
00000D92                          1630  CHECK_MULS_LEA_CLR_JSR_RTS
00000D92                          1631  
00000D92  3C3C 4E75               1632      MOVE.W      #RTS,D6
00000D96  BC42                    1633      CMP.W       D2,D6
00000D98  6700 F92A               1634      BEQ         MATCH_RTS
00000D9C                          1635      
00000D9C  6100 0202               1636      BSR         ISOLATE_OP_CODE
00000DA0                          1637      
00000DA0  1C3C 0007               1638      MOVE.B      #LEA,D6
00000DA4  BC03                    1639      CMP.B       D3,D6
00000DA6  6700 0246               1640      BEQ         MATCH_LEA
00000DAA                          1641      
00000DAA  6100 FCC2               1642      BSR         ReadFirstTenBits
00000DAE                          1643      
00000DAE  3C3C 013A               1644      MOVE.W      #JSR,D6
00000DB2  BC43                    1645      CMP.W       D3,D6
00000DB4  6700 F9F0               1646      BEQ         MATCH_JSR
00000DB8                          1647      
00000DB8  3C3C 0108               1648      MOVE.W      #CLR_B,D6
00000DBC  BC43                    1649      CMP.W       D3,D6
00000DBE  6700 FA08               1650      BEQ         MATCH_CLR_B
00000DC2                          1651      
00000DC2  3C3C 0109               1652      MOVE.W      #CLR_W,D6
00000DC6  BC43                    1653      CMP.W       D3,D6
00000DC8  6700 FA2C               1654      BEQ         MATCH_CLR_W
00000DCC                          1655      
00000DCC  3C3C 010A               1656      MOVE.W      #CLR_L,D6
00000DD0  BC43                    1657      CMP.W       D3,D6
00000DD2  6700 FA50               1658      BEQ         MATCH_CLR_L
00000DD6                          1659      
00000DD6  3C3C 0130               1660      MOVE.W      #MULS_L,D6  * Shouldn't need to check for the rest of the opcode..?
00000DDA  BC43                    1661      CMP.W       D3,D6
00000DDC  6700 0212               1662      BEQ         MATCH_MULS_L
00000DE0                          1663      
00000DE0  6000 027C               1664      BRA         ERROR
00000DE4                          1665      
00000DE4                          1666  CHECK_MULS_W_AND
00000DE4                          1667  
00000DE4  6100 01BA               1668      BSR         ISOLATE_OP_CODE
00000DE8                          1669      
00000DE8  1C3C 0007               1670      MOVE.B      #MULS_OP_W,D6
00000DEC  BC03                    1671      CMP.B       D3,D6
00000DEE  6700 F88E               1672      BEQ         MATCH_MULS_W
00000DF2                          1673      
00000DF2  1C3C 0000               1674      MOVE.B      #DN_B,D6
00000DF6  BC03                    1675      CMP.B       D3,D6
00000DF8  6700 FA58               1676      BEQ         MATCH_AND_DN_B
00000DFC                          1677      
00000DFC  1C3C 0001               1678      MOVE.B      #DN_W,D6
00000E00  BC03                    1679      CMP.B       D3,D6
00000E02  6700 FA94               1680      BEQ         MATCH_AND_DN_W
00000E06                          1681      
00000E06  1C3C 0002               1682      MOVE.B      #DN_L,D6
00000E0A  BC03                    1683      CMP.B       D3,D6
00000E0C  6700 FAD0               1684      BEQ         MATCH_AND_DN_L
00000E10                          1685      
00000E10  1C3C 0004               1686      MOVE.B      #EA_B,D6
00000E14  BC03                    1687      CMP.B       D3,D6
00000E16  6700 FB0C               1688      BEQ         MATCH_AND_EA_B
00000E1A                          1689      
00000E1A  1C3C 0005               1690      MOVE.B      #EA_W,D6
00000E1E  BC03                    1691      CMP.B       D3,D6
00000E20  6700 FB48               1692      BEQ         MATCH_AND_EA_W
00000E24                          1693      
00000E24  1C3C 0006               1694      MOVE.B      #EA_L,D6
00000E28  BC03                    1695      CMP.B       D3,D6
00000E2A  6700 FB84               1696      BEQ         MATCH_AND_EA_L
00000E2E                          1697      
00000E2E  6000 022E               1698      BRA         ERROR
00000E32                          1699  
00000E32                          1700  CHECK_DIVU_OR
00000E32                          1701      
00000E32  6100 016C               1702      BSR         ISOLATE_OP_CODE
00000E36                          1703      
00000E36  1C3C 0003               1704      MOVE.B      #DIVU,D6
00000E3A  BC03                    1705      CMP.B       D3,D6
00000E3C  6700 01A2               1706      BEQ         MATCH_DIVU
00000E40                          1707      
00000E40  1C3C 0000               1708      MOVE.B      #DN_B,D6
00000E44  BC03                    1709      CMP.B       D3,D6
00000E46  6700 019A               1710      BEQ         MATCH_OR_DN_B
00000E4A                          1711      
00000E4A  1C3C 0001               1712      MOVE.B      #DN_W,D6
00000E4E  BC03                    1713      CMP.B       D3,D6
00000E50  6700 0192               1714      BEQ         MATCH_OR_DN_W
00000E54                          1715      
00000E54  1C3C 0002               1716      MOVE.B      #DN_L,D6
00000E58  BC03                    1717      CMP.B       D3,D6
00000E5A  6700 018A               1718      BEQ         MATCH_OR_DN_L
00000E5E                          1719      
00000E5E  1C3C 0004               1720      MOVE.B      #EA_B,D6
00000E62  BC03                    1721      CMP.B       D3,D6
00000E64  6700 0182               1722      BEQ         MATCH_OR_EA_B
00000E68                          1723      
00000E68  1C3C 0005               1724      MOVE.B      #EA_W,D6
00000E6C  BC03                    1725      CMP.B       D3,D6
00000E6E  6700 017A               1726      BEQ         MATCH_OR_EA_W
00000E72                          1727      
00000E72  1C3C 0006               1728      MOVE.B      #EA_L,D6
00000E76  BC03                    1729      CMP.B       D3,D6
00000E78  6700 0172               1730      BEQ         MATCH_OR_EA_L
00000E7C                          1731      
00000E7C  6000 01E0               1732      BRA         ERROR
00000E80                          1733  
00000E80                          1734  CHECK_MOVEM
00000E80                          1735      
00000E80  6100 FBEC               1736      BSR         ReadFirstTenBits
00000E84                          1737      
00000E84  3C3C 0122               1738      MOVE.W      #MOVEM_TO_MEM_W,D6
00000E88  BC43                    1739      CMP.W       D3,D6
00000E8A  6700 0140               1740      BEQ         MATCH_MOVEM_TO_MEM_W
00000E8E                          1741      
00000E8E  3C3C 0123               1742      MOVE.W      #MOVEM_TO_MEM_L,D6
00000E92  BC43                    1743      CMP.W       D3,D6
00000E94  6700 0138               1744      BEQ         MATCH_MOVEM_TO_MEM_L
00000E98                          1745      
00000E98  3C3C 0132               1746      MOVE.W      #MOVEM_TO_REG_W,D6
00000E9C  BC43                    1747      CMP.W       D3,D6
00000E9E  6700 0130               1748      BEQ         MATCH_MOVEM_TO_REG_W
00000EA2                          1749      
00000EA2  3C3C 0133               1750      MOVE.W      #MOVEM_TO_REG_L,D6
00000EA6  BC43                    1751      CMP.W       D3,D6
00000EA8  6700 0128               1752      BEQ         MATCH_MOVEM_TO_REG_L
00000EAC                          1753      
00000EAC  6000 FBA0               1754      BRA         MOVEM_RETURN
00000EB0                          1755  CHECK_ADD_ADDA
00000EB0                          1756      
00000EB0  6100 00EE               1757      BSR         ISOLATE_OP_CODE
00000EB4                          1758      
00000EB4  3C3C 0000               1759      MOVE.W      #DN_B,D6
00000EB8  BC43                    1760      CMP.W       D3,D6
00000EBA  6700 F42E               1761      BEQ         MATCH_ADD_TO_REG_B
00000EBE                          1762      
00000EBE  3C3C 0001               1763      MOVE.W      #DN_W,D6
00000EC2  BC43                    1764      CMP.W       D3,D6
00000EC4  6700 F468               1765      BEQ         MATCH_ADD_TO_REG_W
00000EC8                          1766      
00000EC8  3C3C 0002               1767      MOVE.W      #DN_L,D6
00000ECC  BC43                    1768      CMP.W       D3,D6
00000ECE  6700 F4A2               1769      BEQ         MATCH_ADD_TO_REG_L
00000ED2                          1770      
00000ED2  3C3C 0004               1771      MOVE.W      #EA_B,D6
00000ED6  BC43                    1772      CMP.W       D3,D6
00000ED8  6700 F4DC               1773      BEQ         MATCH_ADD_TO_EA_B
00000EDC                          1774      
00000EDC  3C3C 0005               1775      MOVE.W      #EA_W,D6
00000EE0  BC43                    1776      CMP.W       D3,D6
00000EE2  6700 F516               1777      BEQ         MATCH_ADD_TO_EA_W
00000EE6                          1778      
00000EE6  3C3C 0006               1779      MOVE.W      #EA_L,D6
00000EEA  BC43                    1780      CMP.W       D3,D6
00000EEC  6700 F550               1781      BEQ         MATCH_ADD_TO_EA_L
00000EF0                          1782      
00000EF0  3C3C 0003               1783      MOVE.W      #ADDA_W,D6
00000EF4  BC43                    1784      CMP.W       D3,D6
00000EF6  6700 F6FA               1785      BEQ         MATCH_ADDA_W
00000EFA                          1786      
00000EFA  3C3C 0007               1787      MOVE.W      #ADDA_L,D6
00000EFE  BC43                    1788      CMP.W       D3,D6
00000F00  6700 F736               1789      BEQ         MATCH_ADDA_L
00000F04                          1790      
00000F04  4E75                    1791      RTS ** Change later?
00000F06                          1792  CHECK_ADDQ
00000F06                          1793      
00000F06  6100 0098               1794      BSR         ISOLATE_OP_CODE
00000F0A                          1795      
00000F0A  3C3C 0000               1796      MOVE.W      #ADDQ_B,D6
00000F0E  BC43                    1797      CMP.W       D3,D6
00000F10  6700 F570               1798      BEQ         MATCH_ADDQ_B
00000F14                          1799      
00000F14  3C3C 0001               1800      MOVE.W      #ADDQ_W,D6
00000F18  BC43                    1801      CMP.W       D3,D6
00000F1A  6700 F5B2               1802      BEQ         MATCH_ADDQ_W
00000F1E                          1803      
00000F1E  3C3C 0002               1804      MOVE.W      #ADDQ_L,D6
00000F22  BC43                    1805      CMP.W       D3,D6
00000F24  6700 F5F4               1806      BEQ         MATCH_ADDQ_L
00000F28                          1807      
00000F28                          1808  CHECK_ADDI
00000F28                          1809  
00000F28  6100 FB44               1810      BSR         ReadFirstTenBits
00000F2C                          1811      
00000F2C  3C3C 0018               1812      MOVE.W      #ADDI_B,D6
00000F30  BC43                    1813      CMP.W       D3,D6
00000F32  6700 F2F6               1814      BEQ         MATCH_ADDI_B
00000F36                          1815      
00000F36  3C3C 0019               1816      MOVE.W      #ADDI_W,D6
00000F3A  BC43                    1817      CMP.W       D3,D6
00000F3C  6700 F32C               1818      BEQ         MATCH_ADDI_W
00000F40                          1819      
00000F40  3C3C 001A               1820      MOVE.W      #ADDI_L,D6
00000F44  BC43                    1821      CMP.W       D3,D6
00000F46  6700 F362               1822      BEQ         MATCH_ADDI_L
00000F4A                          1823      
00000F4A  6000 FB06               1824      BRA         ADDI_RETURN
00000F4E                          1825  CHECK_SUB
00000F4E                          1826      
00000F4E  6100 0050               1827      BSR         ISOLATE_OP_CODE
00000F52                          1828      
00000F52  3C3C 0000               1829      MOVE.W      #DN_B,D6
00000F56  BC43                    1830      CMP.W       D3,D6
00000F58  6700 007A               1831      BEQ         MATCH_SUB_TO_DN_B
00000F5C                          1832      
00000F5C  3C3C 0001               1833      MOVE.W      #DN_W,D6
00000F60  BC43                    1834      CMP.W       D3,D6
00000F62  6700 0072               1835      BEQ         MATCH_SUB_TO_DN_W
00000F66                          1836      
00000F66  3C3C 0002               1837      MOVE.W      #DN_L,D6
00000F6A  BC43                    1838      CMP.W       D3,D6
00000F6C  6700 006A               1839      BEQ         MATCH_SUB_TO_DN_L
00000F70                          1840      
00000F70  3C3C 0004               1841      MOVE.W      #EA_B,D6
00000F74  BC43                    1842      CMP.W       D3,D6
00000F76  6700 0062               1843      BEQ         MATCH_SUB_TO_EA_B
00000F7A                          1844      
00000F7A  3C3C 0005               1845      MOVE.W      #EA_W,D6
00000F7E  BC43                    1846      CMP.W       D3,D6
00000F80  6700 005A               1847      BEQ         MATCH_SUB_TO_EA_W
00000F84                          1848      
00000F84  3C3C 0006               1849      MOVE.W      #EA_L,D6
00000F88  BC43                    1850      CMP.W       D3,D6
00000F8A  6700 0052               1851      BEQ         MATCH_SUB_TO_EA_L
00000F8E                          1852  CHECK_MOVEA_W_AND_MOVE_W
00000F8E                          1853      
00000F8E  6100 0010               1854      BSR         ISOLATE_OP_CODE
00000F92                          1855         
00000F92  1C3C 0001               1856      MOVE.B      #MOVEA_WL,D6
00000F96  BC03                    1857      CMP.B       D3,D6
00000F98  6700 F5CC               1858      BEQ         MATCH_MOVEA_W
00000F9C                          1859      
00000F9C  6000 F246               1860      BRA         MATCH_MOVE_W 
00000FA0                          1861  ISOLATE_OP_CODE 
00000FA0                          1862  
00000FA0  48A7 2000               1863      MOVEM.W     D2, -(SP)    
00000FA4                          1864     
00000FA4  1E3C 0007               1865      MOVE.B      #7,D7          
00000FA8  EF6A                    1866      LSL.W       D7,D2
00000FAA  1E3C 000D               1867      MOVE.B      #13,D7
00000FAE  EE6A                    1868      LSR.W       D7,D2
00000FB0  1602                    1869      MOVE.B      D2,D3    
00000FB2                          1870         
00000FB2  4C9F 0004               1871      MOVEM.W     (SP)+,D2 
00000FB6  4E75                    1872      RTS
00000FB8                          1873  CHECK_MOVEA_L_AND_MOVE_L
00000FB8                          1874      
00000FB8  61E6                    1875      BSR         ISOLATE_OP_CODE
00000FBA                          1876         
00000FBA  1C3C 0001               1877      MOVE.B      #MOVEA_WL,D6
00000FBE  BC03                    1878      CMP.B       D3,D6
00000FC0  6700 F5EA               1879      BEQ         MATCH_MOVEA_L 
00000FC4                          1880      
00000FC4  6000 0002               1881      BRA         MATCH_MOVE_L   
00000FC8                          1882   
00000FC8                          1883  MATCH_MOVE_L
00000FC8  3A02                    1884      MOVE.W      D2,D5       *REMOVE
00000FCA                          1885  
00000FCA                          1886  MATCH_MOVEQ
00000FCA  3A02                    1887      MOVE.W      D2,D5       *REMOVE
00000FCC                          1888      
00000FCC                          1889  MATCH_MOVEM_TO_MEM_W
00000FCC  3A02                    1890      MOVE.W      D2,D5       *REMOVE
00000FCE                          1891  MATCH_MOVEM_TO_MEM_L
00000FCE  3A02                    1892      MOVE.W      D2,D5       *REMOVE
00000FD0                          1893  MATCH_MOVEM_TO_REG_W
00000FD0  3A02                    1894      MOVE.W      D2,D5       *REMOVE
00000FD2                          1895  MATCH_MOVEM_TO_REG_L
00000FD2  3A02                    1896      MOVE.W      D2,D5       *REMOVE
00000FD4                          1897      
00000FD4                          1898  MATCH_SUB_TO_DN_B
00000FD4  3A02                    1899      MOVE.W      D2,D5       *REMOVE
00000FD6                          1900  MATCH_SUB_TO_DN_W
00000FD6  3A02                    1901      MOVE.W      D2,D5       *REMOVE
00000FD8                          1902  MATCH_SUB_TO_DN_L
00000FD8  3A02                    1903      MOVE.W      D2,D5       *REMOVE
00000FDA                          1904  MATCH_SUB_TO_EA_B
00000FDA  3A02                    1905      MOVE.W      D2,D5       *REMOVE
00000FDC                          1906  MATCH_SUB_TO_EA_W
00000FDC  3A02                    1907      MOVE.W      D2,D5       *REMOVE
00000FDE                          1908  MATCH_SUB_TO_EA_L
00000FDE  3A02                    1909      MOVE.W      D2,D5       *REMOVE
00000FE0                          1910  MATCH_DIVU
00000FE0  3A02                    1911      MOVE.W      D2,D5       *REMOVE
00000FE2                          1912  MATCH_OR_DN_B
00000FE2  3A02                    1913      MOVE.W      D2,D5       *REMOVE
00000FE4                          1914  MATCH_OR_DN_W
00000FE4  3A02                    1915      MOVE.W      D2,D5       *REMOVE
00000FE6                          1916  MATCH_OR_DN_L
00000FE6  3A02                    1917      MOVE.W      D2,D5       *REMOVE
00000FE8                          1918  MATCH_OR_EA_B
00000FE8  3A02                    1919      MOVE.W      D2,D5       *REMOVE
00000FEA                          1920  MATCH_OR_EA_W
00000FEA  3A02                    1921      MOVE.W      D2,D5       *REMOVE
00000FEC                          1922  MATCH_OR_EA_L
00000FEC  3A02                    1923      MOVE.W      D2,D5       *REMOVE
00000FEE                          1924  
00000FEE                          1925  MATCH_LEA
00000FEE  3A02                    1926      MOVE.W      D2,D5       *REMOVE
00000FF0                          1927  
00000FF0                          1928  MATCH_MULS_L
00000FF0  3A02                    1929      MOVE.W      D2,D5       *REMOVE
00000FF2                          1930  MATCH_LSL
00000FF2  3A02                    1931      MOVE.W      D2,D5       *REMOVE
00000FF4                          1932  MATCH_LSR
00000FF4  3A02                    1933      MOVE.W      D2,D5       *REMOVE
00000FF6                          1934  MATCH_ASR
00000FF6  3A02                    1935      MOVE.W      D2,D5       *REMOVE
00000FF8                          1936  MATCH_ASL
00000FF8  3A02                    1937      MOVE.W      D2,D5       *REMOVE
00000FFA                          1938  MATCH_ROL
00000FFA  3A02                    1939      MOVE.W      D2,D5       *REMOVE
00000FFC                          1940  MATCH_ROR
00000FFC  3A02                    1941      MOVE.W      D2,D5       *REMOVE
00000FFE                          1942      
00000FFE                          1943  MATCH_CC_T_8
00000FFE  3A02                    1944      MOVE.W      D2,D5       *REMOVE
00001000                          1945  MATCH_CC_T_16
00001000  3A02                    1946      MOVE.W      D2,D5       *REMOVE
00001002                          1947  MATCH_CC_T_32
00001002  3A02                    1948      MOVE.W      D2,D5       *REMOVE
00001004                          1949  MATCH_CC_F_8
00001004  3A02                    1950      MOVE.W      D2,D5       *REMOVE
00001006                          1951  MATCH_CC_F_16
00001006  3A02                    1952      MOVE.W      D2,D5       *REMOVE
00001008                          1953  MATCH_CC_F_32
00001008  3A02                    1954      MOVE.W      D2,D5       *REMOVE
0000100A                          1955  MATCH_CC_HI_8
0000100A  3A02                    1956      MOVE.W      D2,D5       *REMOVE
0000100C                          1957  MATCH_CC_HI_16
0000100C  3A02                    1958      MOVE.W      D2,D5       *REMOVE
0000100E                          1959  MATCH_CC_HI_32
0000100E  3A02                    1960      MOVE.W      D2,D5       *REMOVE
00001010                          1961  MATCH_CC_LS_8
00001010  3A02                    1962      MOVE.W      D2,D5       *REMOVE
00001012                          1963  MATCH_CC_LS_16
00001012  3A02                    1964      MOVE.W      D2,D5       *REMOVE
00001014                          1965  MATCH_CC_LS_32  
00001014  3A02                    1966      MOVE.W      D2,D5       *REMOVE
00001016                          1967  MATCH_CC_CC_8
00001016  3A02                    1968      MOVE.W      D2,D5       *REMOVE
00001018                          1969  MATCH_CC_CC_16
00001018  3A02                    1970      MOVE.W      D2,D5       *REMOVE
0000101A                          1971  MATCH_CC_CC_32
0000101A  3A02                    1972      MOVE.W      D2,D5       *REMOVE
0000101C                          1973  MATCH_CC_CS_8
0000101C  3A02                    1974      MOVE.W      D2,D5       *REMOVE
0000101E                          1975  MATCH_CC_CS_16
0000101E  3A02                    1976      MOVE.W      D2,D5       *REMOVE
00001020                          1977  MATCH_CC_CS_32
00001020  3A02                    1978      MOVE.W      D2,D5       *REMOVE
00001022                          1979  MATCH_CC_NE_8
00001022  3A02                    1980      MOVE.W      D2,D5       *REMOVE
00001024                          1981  MATCH_CC_NE_16
00001024  3A02                    1982      MOVE.W      D2,D5       *REMOVE
00001026                          1983  MATCH_CC_NE_32
00001026  3A02                    1984      MOVE.W      D2,D5       *REMOVE
00001028                          1985  MATCH_CC_EQ_8
00001028  3A02                    1986      MOVE.W      D2,D5       *REMOVE
0000102A                          1987  MATCH_CC_EQ_16
0000102A  3A02                    1988      MOVE.W      D2,D5       *REMOVE
0000102C                          1989  MATCH_CC_EQ_32
0000102C  3A02                    1990      MOVE.W      D2,D5       *REMOVE
0000102E                          1991  MATCH_CC_VC_8
0000102E  3A02                    1992      MOVE.W      D2,D5       *REMOVE
00001030                          1993  MATCH_CC_VC_16
00001030  3A02                    1994      MOVE.W      D2,D5       *REMOVE
00001032                          1995  MATCH_CC_VC_32
00001032  3A02                    1996      MOVE.W      D2,D5       *REMOVE
00001034                          1997  MATCH_CC_VS_8
00001034  3A02                    1998      MOVE.W      D2,D5       *REMOVE
00001036                          1999  MATCH_CC_VS_16
00001036  3A02                    2000      MOVE.W      D2,D5       *REMOVE
00001038                          2001  MATCH_CC_VS_32
00001038  3A02                    2002      MOVE.W      D2,D5       *REMOVE
0000103A                          2003  MATCH_CC_PL_8
0000103A  3A02                    2004      MOVE.W      D2,D5       *REMOVE
0000103C                          2005  MATCH_CC_PL_16
0000103C  3A02                    2006      MOVE.W      D2,D5       *REMOVE
0000103E                          2007  MATCH_CC_PL_32
0000103E  3A02                    2008      MOVE.W      D2,D5       *REMOVE
00001040                          2009  MATCH_CC_MI_8
00001040  3A02                    2010      MOVE.W      D2,D5       *REMOVE
00001042                          2011  MATCH_CC_MI_16
00001042  3A02                    2012      MOVE.W      D2,D5       *REMOVE
00001044                          2013  MATCH_CC_MI_32
00001044  3A02                    2014      MOVE.W      D2,D5       *REMOVE
00001046                          2015  MATCH_CC_GE_8
00001046  3A02                    2016      MOVE.W      D2,D5       *REMOVE
00001048                          2017  MATCH_CC_GE_16
00001048  3A02                    2018      MOVE.W      D2,D5       *REMOVE
0000104A                          2019  MATCH_CC_GE_32
0000104A  3A02                    2020      MOVE.W      D2,D5       *REMOVE
0000104C                          2021  MATCH_CC_LT_8
0000104C  3A02                    2022      MOVE.W      D2,D5       *REMOVE
0000104E                          2023  MATCH_CC_LT_16
0000104E  3A02                    2024      MOVE.W      D2,D5       *REMOVE
00001050                          2025  MATCH_CC_LT_32
00001050  3A02                    2026      MOVE.W      D2,D5       *REMOVE
00001052                          2027  MATCH_CC_GT_8
00001052  3A02                    2028      MOVE.W      D2,D5       *REMOVE
00001054                          2029  MATCH_CC_GT_16
00001054  3A02                    2030      MOVE.W      D2,D5       *REMOVE
00001056                          2031  MATCH_CC_GT_32
00001056  3A02                    2032      MOVE.W      D2,D5       *REMOVE
00001058                          2033  MATCH_CC_LE_8
00001058  3A02                    2034      MOVE.W      D2,D5       *REMOVE
0000105A                          2035  MATCH_CC_LE_16
0000105A  3A02                    2036      MOVE.W      D2,D5       *REMOVE
0000105C                          2037  MATCH_CC_LE_32
0000105C  3A02                    2038      MOVE.W      D2,D5       *REMOVE
0000105E                          2039  ERROR
0000105E  3A02                    2040      MOVE.W      D2,D5       *REMOVE
00001060                          2041  
00001060                          2042  
00001060                          2043  
00001060                          2044  
00001060                          2045  -------------------- end include --------------------
00001060                          2046          
00001060= 45 6E 74 65 72 20 ...   2047  MESSAGE     DC.B    'Enter the address of compiled code: ',0
00001085= 49 6E 76 61 6C 69 ...   2048  ERROR_MSG   DC.B    'Invalid input, please rerun',0
000010A1= 20 00                   2049  SPACER      DC.B    ' ',0
000010A3                          2050  
000010A3                          2051  
00001000                          2052          ORG     $1000
00001000                          2053  program_start        
00001000                          2054  
00001000                          2055  
00001000                          2056  *------Code for input-------
00001000                          2057          
00001000  43F8 1060               2058          LEA     MESSAGE,A1      *Code block for first message
00001004  103C 000E               2059          MOVE.B  #14,D0
00001008  4E4F                    2060          TRAP    #15
0000100A                          2061         
0000100A  227C 00004000           2062          MOVEA.L #$4000, A1
00001010  103C 0002               2063          MOVE.B  #2,D0           *Code block for reading input
00001014  4E4F                    2064          TRAP    #15   
00001016  3001                    2065          MOVE.W  D1,D0
00001018                          2066          
00001018  2049                    2067          MOVEA.L A1,A0           *Move the contents of A1 to A0 for the conversion
0000101A  4EB8 0000               2068          JSR     A2H             *Branch to Connor's conversion code      
0000101E                          2069          
0000101E  2040                    2070          MOVEA.L D0,A0
00001020                          2071          
00001020  0C50 FFFF               2072          CMPI.W  #$FFFF,(A0)
00001024  6700 0026               2073          BEQ     input_error
00001028                          2074      
00001028                          2075  loop_start
00001028                          2076          
00001028  2208                    2077          MOVE.L  A0,D1           *Print out the address we're working on
0000102A  7410                    2078          MOVE.L  #16,D2          
0000102C  700F                    2079          MOVE.L  #15,D0          
0000102E  4E4F                    2080          TRAP    #15
00001030                          2081  
00001030  700E                    2082          MOVE.L  #14,D0
00001032  43F8 10A1               2083          LEA     SPACER,A1
00001036  4E4F                    2084          TRAP    #15
00001038                          2085          
00001038  3418                    2086          MOVE.W  (A0)+,D2
0000103A  0C42 FFFF               2087          CMPI.W  #$FFFF,D2
0000103E  6700 0014               2088          BEQ     Done
00001042                          2089          
00001042  4EB8 0A3C               2090          JSR     OpDecoder
00001046                          2091          
00001046  700D                    2092          MOVE.L  #13,D0
00001048  4E4F                    2093          TRAP    #15
0000104A                          2094          
0000104A  60DC                    2095          BRA     loop_start
0000104C                          2096          
0000104C                          2097  input_error        
0000104C  700D                    2098          MOVE.L  #13,D0
0000104E  43F8 1085               2099          LEA     ERROR_MSG,A1
00001052  4E4F                    2100          TRAP    #15
00001054                          2101  Done        
00001054                          2102  
00001054                          2103          END    $1000

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
A2H                 0
ABS_LONG            39
ABS_WORD            38
ADDA_L              7
ADDA_W              3
ADDBYTELOOP         24
ADDBYTES            1C
ADDI_B              18
ADDI_L              1A
ADDI_RETURN         A52
ADDI_W              19
ADDQ                5
ADDQ_B              0
ADDQ_L              2
ADDQ_W              1
ADD_ADDA            D
ADD_TO_EA_B         4
ADD_TO_EA_L         6
ADD_TO_EA_W         5
ADD_TO_REG_B        0
ADD_TO_REG_L        2
ADD_TO_REG_W        1
AN                  8
ASL                 383
ASR                 387
BCC                 6
BCC_16              0
BCC_32              FF
CC_CC               4
CC_CS               5
CC_EQ               7
CC_F                1
CC_GE               C
CC_GT               E
CC_HI               2
CC_LE               F
CC_LS               3
CC_LT               D
CC_MI               B
CC_NE               6
CC_PL               A
CC_T                0
CC_VC               8
CC_VS               9
CHECK_ADDI          F28
CHECK_ADDQ          F06
CHECK_ADD_ADDA      EB0
CHECK_BCC           B48
CHECK_BCC_16        C08
CHECK_BCC_32        CB0
CHECK_BCC_8         B60
CHECK_CMP           D6C
CHECK_DIVU_OR       E32
CHECK_FOUR_BIT_SIG  ACA
CHECK_MOVEA_L_AND_MOVE_L  FB8
CHECK_MOVEA_W_AND_MOVE_W  F8E
CHECK_MOVEM         E80
CHECK_MULS_LEA_CLR_JSR_RTS  D92
CHECK_MULS_W_AND    DE4
CHECK_NOP           ABC
CHECK_SHIFT_AND_ROTATE  A7C
CHECK_SUB           F4E
CLR_B               108
CLR_L               10A
CLR_W               109
CMP                 B
CMP_B               0
CMP_L               2
CMP_W               1
CONV_END            2C
CR                  D
DEC_ABS_LONG        114
DEC_ABS_WORD        108
DEC_AN              12C
DEC_DN              120
DEC_IMMEDIATE       EC
DEC_INDIRECT        138
DEC_POST_INC        14C
DEC_PRE_DEC         166
DEC_RETURN          CE
DIVU                3
DIVU_OR             8
DN                  0
DN_B                0
DN_L                2
DN_W                1
DONE                1054
EADECODER           66
EADECODER_LEFT      4E
EA_B                4
EA_L                6
EA_W                5
ERROR               105E
ERROR_MSG           1085
FOUR_BIT_RETURN     A4A
IMMEDIATE           3C
IMM_SKIP            E6
IMM_WORD            104
INDIRECT            10
INPUT_ERROR         104C
ISOLATE_CC_CODE_FOR_BCC  D58
ISOLATE_OP_CODE     FA0
JSR                 13A
LEA                 7
LEFT_SKIP           6A
LF                  A
LOOP_START          1028
LSL                 38F
LSR                 38B
MATCH_ADDA_L        638
MATCH_ADDA_W        5F2
MATCH_ADDI_B        22A
MATCH_ADDI_L        2AA
MATCH_ADDI_W        26A
MATCH_ADDQ_B        482
MATCH_ADDQ_L        51A
MATCH_ADDQ_W        4CE
MATCH_ADD_TO_EA_B   3B6
MATCH_ADD_TO_EA_L   43E
MATCH_ADD_TO_EA_W   3FA
MATCH_ADD_TO_REG_B  2EA
MATCH_ADD_TO_REG_L  372
MATCH_ADD_TO_REG_W  32E
MATCH_AND_DN_B      852
MATCH_AND_DN_L      8DE
MATCH_AND_DN_W      898
MATCH_AND_EA_B      924
MATCH_AND_EA_L      9B0
MATCH_AND_EA_W      96A
MATCH_ASL           FF8
MATCH_ASR           FF6
MATCH_CC_CC_16      1018
MATCH_CC_CC_32      101A
MATCH_CC_CC_8       1016
MATCH_CC_CS_16      101E
MATCH_CC_CS_32      1020
MATCH_CC_CS_8       101C
MATCH_CC_EQ_16      102A
MATCH_CC_EQ_32      102C
MATCH_CC_EQ_8       1028
MATCH_CC_F_16       1006
MATCH_CC_F_32       1008
MATCH_CC_F_8        1004
MATCH_CC_GE_16      1048
MATCH_CC_GE_32      104A
MATCH_CC_GE_8       1046
MATCH_CC_GT_16      1054
MATCH_CC_GT_32      1056
MATCH_CC_GT_8       1052
MATCH_CC_HI_16      100C
MATCH_CC_HI_32      100E
MATCH_CC_HI_8       100A
MATCH_CC_LE_16      105A
MATCH_CC_LE_32      105C
MATCH_CC_LE_8       1058
MATCH_CC_LS_16      1012
MATCH_CC_LS_32      1014
MATCH_CC_LS_8       1010
MATCH_CC_LT_16      104E
MATCH_CC_LT_32      1050
MATCH_CC_LT_8       104C
MATCH_CC_MI_16      1042
MATCH_CC_MI_32      1044
MATCH_CC_MI_8       1040
MATCH_CC_NE_16      1024
MATCH_CC_NE_32      1026
MATCH_CC_NE_8       1022
MATCH_CC_PL_16      103C
MATCH_CC_PL_32      103E
MATCH_CC_PL_8       103A
MATCH_CC_T_16       1000
MATCH_CC_T_32       1002
MATCH_CC_T_8        FFE
MATCH_CC_VC_16      1030
MATCH_CC_VC_32      1032
MATCH_CC_VC_8       102E
MATCH_CC_VS_16      1036
MATCH_CC_VS_32      1038
MATCH_CC_VS_8       1034
MATCH_CLR_B         7C8
MATCH_CLR_L         824
MATCH_CLR_W         7F6
MATCH_CMP_B         6D4
MATCH_CMP_L         760
MATCH_CMP_W         71A
MATCH_DIVU          FE0
MATCH_JSR           7A6
MATCH_LEA           FEE
MATCH_LSL           FF2
MATCH_LSR           FF4
MATCH_MOVEA_L       5AC
MATCH_MOVEA_W       566
MATCH_MOVEM_TO_MEM_L  FCE
MATCH_MOVEM_TO_MEM_W  FCC
MATCH_MOVEM_TO_REG_L  FD2
MATCH_MOVEM_TO_REG_W  FD0
MATCH_MOVEQ         FCA
MATCH_MOVE_B        19E
MATCH_MOVE_L        FC8
MATCH_MOVE_W        1E4
MATCH_MULS_L        FF0
MATCH_MULS_W        67E
MATCH_NOP           18E
MATCH_OR_DN_B       FE2
MATCH_OR_DN_L       FE6
MATCH_OR_DN_W       FE4
MATCH_OR_EA_B       FE8
MATCH_OR_EA_L       FEC
MATCH_OR_EA_W       FEA
MATCH_ROL           FFA
MATCH_ROR           FFC
MATCH_RTS           6C4
MATCH_SUB_TO_DN_B   FD4
MATCH_SUB_TO_DN_L   FD8
MATCH_SUB_TO_DN_W   FD6
MATCH_SUB_TO_EA_B   FDA
MATCH_SUB_TO_EA_L   FDE
MATCH_SUB_TO_EA_W   FDC
MESSAGE             1060
MOVEA_WL            1
MOVEM_RETURN        A4E
MOVEM_TO_MEM_L      123
MOVEM_TO_MEM_W      122
MOVEM_TO_REG_L      133
MOVEM_TO_REG_W      132
MOVEQ_              7
MOVE_B              1
MOVE_L              2
MOVE_W              3
MULS_L              130
MULS_LEA_CLR_JSR_RTS  4
MULS_OP_W           7
MULS_W_AND          C
NOP                 4E71
NOP_RETURN          A46
NUMSUB              32
NUMSUBRTN           E
OPDECODER           A3C
OPDEC_RETURN        A56
OUTPUT              10000
POST_INC            18
PRE_DEC             20
PROGRAM_START       1000
PR_ADD              180
PR_ADDA             A1E
PR_ADDI             184
PR_ADDQ             189
PR_AND              A38
PR_BYTE             9FA
PR_CLR              A28
PR_CMP              A30
PR_COMMA            9F8
PR_JSR              A34
PR_LONG             A00
PR_MOVE             A07
PR_MOVEA            A0C
PR_MOVEM            A18
PR_MOVEQ            A12
PR_MULS             A23
PR_NOP              A03
PR_RTS              A2C
PR_SPACE            9F6
PR_WORD             9FD
READFIRSTFOURBITS   A5C
READFIRSTTENBITS    A6E
ROL                 39F
ROR                 39B
RTS                 4E75
SPACER              10A1
SUB                 9
SUB_TO_DN_B         0
SUB_TO_DN_L         2
SUB_TO_DN_W         1
SUB_TO_EA_B         4
SUB_TO_EA_L         6
SUB_TO_EA_W         5
UPSEND              46
UPSUB               3C
UPSUBRTN            16

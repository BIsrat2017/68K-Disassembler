00001000 Starting Address
Assembler used: EASy68K Editor/Assembler v5.15.04
Created On: 3/8/2017 5:15:44 PM

00000000                             1  *-----------------------------------------------------------
00000000                             2  * Title      :
00000000                             3  * Written by :
00000000                             4  * Date       :
00000000                             5  * Description:
00000000                             6  *-----------------------------------------------------------
00000000  =0000000D                  7  CR      EQU     $0D
00000000  =0000000A                  8  LF      EQU     $0A   
00000000                             9          INCLUDE 'ASCII_HEX_Conversions.x68'
00000000                            10  
00000000                            11  
00000000                            12  
00000000                            13  A2H     *Converts and ASCII Byte string into HEX; Size WORD
00000000  48E7 7FFE                 14          MOVEM.L     D1-D7/A0-A6, -(SP)  
00000004                            15          
00000004  3400                      16          MOVE.W  D0,D2
00000006  3202                      17          MOVE.W  D2,D1                   *Store length of string into D1 for looping
00000008  2248                      18          MOVEA.L A0,A1                   *Copy starting point of string
0000000A                            19  
0000000A  6000 0026                 20          BRA     numSub
0000000E                            21  numSubRTN
0000000E  2049                      22          MOVEA.L A1,A0                   *Restore address position
00000010  3202                      23          MOVE.W  D2,D1                   *Reset loop counter
00000012                            24          
00000012  6000 0028                 25          BRA     upSub
00000016                            26  upSubRTN        
00000016  2049                      27          MOVEA.L A1,A0                   *Restore address position
00000018  3202                      28          MOVE.W  D2,D1                   *Reset loop counter
0000001A  4240                      29          CLR     D0                      *Clear D0
0000001C                            30  addBytes
0000001C  D018                      31          ADD.B   (A0)+,D0
0000001E  5301                      32          SUBI.B  #1,D1
00000020  6700 000A                 33          BEQ     conv_end
00000024                            34  addByteLoop
00000024  E980                      35          ASL.L   #4,D0
00000026  D018                      36          ADD.B   (A0)+,D0
00000028  5301                      37          SUBI.B  #1,D1
0000002A  66F8                      38          BNE     addByteLoop
0000002C                            39  conv_end
0000002C  4CDF 7FFE                 40          MOVEM.L     (SP)+, D1-D7/A0-A6
00000030  4E75                      41          RTS
00000032                            42          
00000032                            43  numSub  *Convert ASCII 'number' to true number byte; Should not be called outside of the A2H subroutines
00000032  0418 0030                 44          SUBI.B  #$30,(A0)+              *Subtract difference between null ASCII and '0' ASCII
00000036  5341                      45          SUB.W   #1,D1                   *Decrement loop counter
00000038  66F8                      46          BNE     numSub                  *If loop has not ended restart
0000003A  60D2                      47          BRA     numSubRTN
0000003C                            48  
0000003C                            49  upSub   *Loops through string to remove any upper case characters 
0000003C                            50          *that may remain in the string
0000003C  0C10 0009                 51          CMPI.B  #9,(A0)                 *Check if the value is greater than 0-9
00000040  6F00 0004                 52          BLE     upSEnd                  *If it's not, continue loop
00000044  5310                      53          SUBI.B  #1,(A0)                 *Otherwise, subtract difference between ASCII 'number' code and 'A' code
00000046                            54  upSEnd
00000046  5248                      55          ADDA.W  #1,A0                   *Increment to next position to check for uppercase
00000048  5341                      56          SUB.W   #1,D1                   *Decrement loop counter
0000004A  66F0                      57          BNE     upSub                   
0000004C  60C8                      58          BRA     upSubRTN
0000004E                            59  
0000004E                            60  
0000004E                            61  -------------------- end include --------------------
0000004E                            62          INCLUDE 'opcodes.x68'
0000004E                            63                  INCLUDE 'EADecoder.x68'
0000004E                            64  
0000004E                            65  
0000004E  =00010000                 66  output      EQU $00010000
0000004E                            67  
0000004E  =0000003C                 68  IMMEDIATE   EQU %00111100
0000004E  =00000039                 69  ABS_WORD    EQU %00111001
0000004E  =00000038                 70  ABS_LONG    EQU %00111000
0000004E  =00000000                 71  Dn          EQU %00000000
0000004E  =00000008                 72  An          EQU %00001000
0000004E  =00000010                 73  INDIRECT    EQU %00010000
0000004E  =00000018                 74  POST_INC    EQU %00011000
0000004E  =00000020                 75  PRE_DEC     EQU %00100000
0000004E                            76  
0000004E                            77  
0000004E                            78  
0000004E                            79  EADecoder_left
0000004E  48E7 FF7E                 80          MOVEM.L     D0-D7/A1-A6, -(SP)
00000052                            81          
00000052                            82          ** Swap the mode and register bits
00000052  1800                      83          MOVE.B  D0,D4
00000054  0200 0007                 84          ANDI.B  #%00000111,D0       * Mask mode
00000058  0204 0038                 85          ANDI.B  #%00111000,D4       * Mask register
0000005C  E708                      86          LSL.B   #3,D0               * Move mode bits over
0000005E  E60C                      87          LSR.B   #3,D4               * Move register bits over
00000060  8004                      88          OR.B    D4,D0               * Recombine
00000062                            89          
00000062  6000 0006                 90          BRA     left_skip
00000066                            91  
00000066                            92  EADecoder
00000066  48E7 FF7E                 93          MOVEM.L     D0-D7/A1-A6, -(SP) *Store registers on stack, except D0
0000006A                            94  left_skip        
0000006A  2401                      95          MOVE.L  D1,D2 ** Store opcode size in bytes into D2
0000006C                            96          
0000006C  43F9 00010000             97          LEA     output,A1
00000072  45F9 00010000             98          LEA     output,A2
00000078                            99          
00000078                           100          *First, decoder will check for the 3 types with hard coded register values
00000078  163C 0001                101          MOVE.B  #1,D3
0000007C  B07C 003C                102          CMP     #IMMEDIATE,D0
00000080  6700 0068                103          BEQ     dec_immediate
00000084                           104          
00000084  B07C 0039                105          CMP     #ABS_WORD,D0
00000088  6700 007C                106          BEQ     dec_abs_word
0000008C                           107          
0000008C  B07C 0038                108          CMP     #ABS_LONG,D0
00000090  6700 0080                109          BEQ     dec_abs_long
00000094                           110          
00000094                           111          *If it was none of the above, store the register and mode seperately
00000094  4243                     112          CLR     D3
00000096  1200                     113          MOVE.B  D0,D1
00000098  0201 0038                114          ANDI.B  #%00111000,D1           *Get mode value
0000009C  0200 0007                115          ANDI.B  #%00000111,D0           *Get register value
000000A0  0600 0030                116          ADDI.B  #$30,D0
000000A4                           117                
000000A4  B27C 0000                118          CMP     #Dn,D1
000000A8  6700 0074                119          BEQ     dec_Dn 
000000AC                           120          
000000AC  B27C 0008                121          CMP     #An,D1
000000B0  6700 0078                122          BEQ     dec_An
000000B4                           123                  
000000B4  B27C 0010                124          CMP     #INDIRECT,D1
000000B8  6700 007C                125          BEQ     dec_indirect
000000BC                           126                  
000000BC  B27C 0018                127          CMP     #POST_INC,D1
000000C0  6700 0088                128          BEQ     dec_post_inc
000000C4                           129                  
000000C4  B27C 0020                130          CMP     #PRE_DEC,D1
000000C8  6700 009A                131          BEQ     dec_pre_dec
000000CC                           132  
000000CC                           133  dec_return ** Common return for all types
000000CC                           134          
000000CC                           135          ** Print display string
000000CC  103C 000E                136          MOVE.B  #14,D0
000000D0  4E4F                     137          TRAP    #15
000000D2                           138          
000000D2                           139          ** If there is immediate data to print, print it
000000D2  B67C 0001                140          CMP     #1,D3
000000D6  6600 000C                141          BNE     imm_skip
000000DA                           142          
000000DA  103C 000F                143          MOVE.B  #15,D0
000000DE  143C 0010                144          MOVE.B  #16,D2
000000E2  4E4F                     145          TRAP    #15
000000E4                           146  
000000E4                           147  imm_skip
000000E4  4CDF 7EFF                148          MOVEM.L     (SP)+, D0-D7/A1-A6 *Return register data from stack, except D0
000000E8  4E75                     149          RTS
000000EA                           150          
000000EA                           151          * Individual EA decoders *
000000EA                           152  
000000EA                           153  dec_immediate   *DECODE IMMEDIATE VALUE*
000000EA  14FC 0023                154          MOVE.B  #'#',(A2)+  * Move '#' char into string
000000EE  14FC 0024                155          MOVE.B  #'$',(A2)+  * Move '$' char into string
000000F2  14FC 0000                156          MOVE.B  #$0,(A2)+   * Null terminate string
000000F6  B47C 0002                157          CMP     #2,D2       * Check if data is word length
000000FA  6700 0006                158          BEQ     imm_word    
000000FE                           159          
000000FE  2218                     160          MOVE.L  (A0)+,D1    * Length was long
00000100  60CA                     161          BRA     dec_return
00000102                           162          
00000102                           163  imm_word
00000102  3218                     164          MOVE.W  (A0)+,D1    * Length was word
00000104  60C6                     165          BRA     dec_return
00000106                           166  
00000106                           167  
00000106                           168  dec_abs_word    *DECODE ABSOLUTE WORD*
00000106  14FC 0024                169          MOVE.B  #'$',(A2)+  * Move '$' char into string
0000010A  14FC 0000                170          MOVE.B  #$0,(A2)+   * Null terminate string
0000010E  3218                     171          MOVE.W  (A0)+,D1
00000110  60BA                     172          BRA     dec_return
00000112                           173          
00000112                           174  
00000112                           175  dec_abs_long    *DECODE ABSOLUTE LONG*
00000112  14FC 0024                176          MOVE.B  #'$',(A2)+  * Move '$' char into string
00000116  14FC 0000                177          MOVE.B  #$0,(A2)+   * Null terminate string
0000011A  2218                     178          MOVE.L  (A0)+,D1
0000011C  60AE                     179          BRA     dec_return
0000011E                           180          
0000011E                           181  
0000011E                           182  dec_Dn          *DECODE DIRECT DATA*
0000011E  14FC 0044                183          MOVE.B  #'D',(A2)+
00000122  14C0                     184          MOVE.B  D0,(A2)+
00000124  14FC 0000                185          MOVE.B  #$0,(A2)+
00000128  60A2                     186          BRA     dec_return
0000012A                           187  
0000012A                           188          
0000012A                           189  dec_An          *DECODE DIRECT ADDRESS*
0000012A  14FC 0041                190          MOVE.B  #'A',(A2)+
0000012E  14C0                     191          MOVE.B  D0,(A2)+
00000130  14FC 0000                192          MOVE.B  #$0,(A2)+
00000134  6096                     193          BRA     dec_return
00000136                           194  
00000136                           195  
00000136                           196  dec_indirect    *DECODE INDIRECT ACCESS*
00000136  14FC 0028                197          MOVE.B  #'(',(A2)+
0000013A  14FC 0041                198          MOVE.B  #'A',(A2)+
0000013E  14C0                     199          MOVE.B  D0,(A2)+
00000140  14FC 0029                200          MOVE.B  #')',(A2)+
00000144  14FC 0000                201          MOVE.B  #$0,(A2)+
00000148  6082                     202          BRA     dec_return
0000014A                           203          
0000014A                           204  
0000014A                           205  dec_post_inc    *DECODE INDIRECT POST INCREMENT*
0000014A  14FC 0028                206          MOVE.B  #'(',(A2)+
0000014E  14FC 0041                207          MOVE.B  #'A',(A2)+
00000152  14C0                     208          MOVE.B  D0,(A2)+
00000154  14FC 0029                209          MOVE.B  #')',(A2)+
00000158  14FC 002B                210          MOVE.B  #'+',(A2)+
0000015C  14FC 0000                211          MOVE.B  #$0,(A2)+
00000160  6000 FF6A                212          BRA     dec_return
00000164                           213          
00000164                           214          
00000164                           215  dec_pre_dec    *DECODE INDIRECT PRE DECREMENT*
00000164  14FC 002D                216          MOVE.B  #'-',(A2)+
00000168  14FC 0028                217          MOVE.B  #'(',(A2)+
0000016C  14FC 0041                218          MOVE.B  #'A',(A2)+
00000170  14C0                     219          MOVE.B  D0,(A2)+
00000172  14FC 0029                220          MOVE.B  #')',(A2)+
00000176  14FC 0000                221          MOVE.B  #$0,(A2)+
0000017A  6000 FF50                222          BRA     dec_return
0000017E                           223  
0000017E                           224  
0000017E                           225  
0000017E                           226  
0000017E                           227  
0000017E                           228  
0000017E                           229  -------------------- end include --------------------
0000017E                           230  
0000017E  =00004E71                231  NOP             EQU $4E71
0000017E  =00000001                232  MOVE_B          EQU %0001
0000017E  =00000003                233  MOVE_W          EQU %0011
0000017E  =00000002                234  MOVE_L          EQU %0010
0000017E  =00000001                235  MOVEA_WL        EQU %001 
0000017E  =00000007                236  MOVEQ_          EQU %0111
0000017E  =00000122                237  MOVEM_TO_MEM_W  EQU %0100100010
0000017E  =00000123                238  MOVEM_TO_MEM_L  EQU %0100100011
0000017E  =00000132                239  MOVEM_TO_REG_W  EQU %0100110010
0000017E  =00000133                240  MOVEM_TO_REG_L  EQU %0100110011
0000017E                           241  
0000017E  =00000018                242  ADDI_B          EQU %0000011000
0000017E  =00000019                243  ADDI_W          EQU %0000011001
0000017E  =0000001A                244  ADDI_L          EQU %0000011010
0000017E                           245  
0000017E  =0000000D                246  ADD_ADDA        EQU %1101
0000017E  =00000000                247  ADD_TO_REG_B    EQU %000
0000017E  =00000001                248  ADD_TO_REG_W    EQU %001
0000017E  =00000002                249  ADD_TO_REG_L    EQU %010
0000017E  =00000004                250  ADD_TO_EA_B     EQU %100
0000017E  =00000005                251  ADD_TO_EA_W     EQU %101
0000017E  =00000006                252  ADD_TO_EA_L     EQU %110
0000017E  =00000003                253  ADDA_W          EQU %011
0000017E  =00000007                254  ADDA_L          EQU %111
0000017E                           255  
0000017E  =00000005                256  ADDQ            EQU %0101
0000017E  =00000000                257  ADDQ_B          EQU %000
0000017E  =00000001                258  ADDQ_W          EQU %001
0000017E  =00000002                259  ADDQ_L          EQU %010
0000017E                           260  
0000017E  =0000000C                261  MULS_W_AND      EQU %1100
0000017E  =00000007                262  MULS_OP_W       EQU %111 
0000017E                           263  
0000017E  =00000009                264  SUB             EQU %1001
0000017E  =00000000                265  SUB_TO_DN_B     EQU %000
0000017E  =00000001                266  SUB_TO_DN_W     EQU %001
0000017E  =00000002                267  SUB_TO_DN_L     EQU %010
0000017E  =00000004                268  SUB_TO_EA_B     EQU %100
0000017E  =00000005                269  SUB_TO_EA_W     EQU %101
0000017E  =00000006                270  SUB_TO_EA_L     EQU %110
0000017E                           271  
0000017E  =00000008                272  DIVU_OR         EQU %1000
0000017E  =00000003                273  DIVU            EQU %011
0000017E                           274  
0000017E  =00000000                275  DN_B            EQU %000
0000017E  =00000001                276  DN_W            EQU %001
0000017E  =00000002                277  DN_L            EQU %010
0000017E  =00000004                278  EA_B            EQU %100
0000017E  =00000005                279  EA_W            EQU %101
0000017E  =00000006                280  EA_L            EQU %110
0000017E                           281  
0000017E  =00000004                282  MULS_LEA_CLR_JSR_RTS    EQU %0100
0000017E  =00004E75                283  RTS             EQU $4E75
0000017E  =00000007                284  LEA             EQU %111
0000017E  =0000013A                285  JSR             EQU %0100111010
0000017E  =00000108                286  CLR_B           EQU %0100001000
0000017E  =00000109                287  CLR_W           EQU %0100001001
0000017E  =0000010A                288  CLR_L           EQU %0100001010
0000017E  =00000130                289  MULS_L          EQU %0100110000
0000017E                           290  
0000017E  =0000038F                291  LSL             EQU %1110001111
0000017E  =0000038B                292  LSR             EQU %1110001011
0000017E  =00000387                293  ASR             EQU %1110000111
0000017E  =00000383                294  ASL             EQU %1110000011
0000017E  =0000039F                295  ROL             EQU %1110011111
0000017E  =0000039B                296  ROR             EQU %1110011011
0000017E                           297  
0000017E  =0000000B                298  CMP             EQU %1011
0000017E  =00000000                299  CMP_B           EQU %000
0000017E  =00000001                300  CMP_W           EQU %001
0000017E  =00000002                301  CMP_L           EQU %010
0000017E                           302  
0000017E  =00000006                303  BCC             EQU %0110
0000017E  =00000000                304  BCC_16          EQU %00000000
0000017E  =000000FF                305  BCC_32          EQU $FF
0000017E  =00000000                306  CC_T            EQU %0000
0000017E  =00000001                307  CC_F            EQU %0001
0000017E  =00000002                308  CC_HI           EQU %0010
0000017E  =00000003                309  CC_LS           EQU %0011
0000017E  =00000004                310  CC_CC           EQU %0100
0000017E  =00000005                311  CC_CS           EQU %0101
0000017E  =00000006                312  CC_NE           EQU %0110
0000017E  =00000007                313  CC_EQ           EQU %0111
0000017E  =00000008                314  CC_VC           EQU %1000
0000017E  =00000009                315  CC_VS           EQU %1001
0000017E  =0000000A                316  CC_PL           EQU %1010
0000017E  =0000000B                317  CC_MI           EQU %1011
0000017E  =0000000C                318  CC_GE           EQU %1100
0000017E  =0000000D                319  CC_LT           EQU %1101
0000017E  =0000000E                320  CC_GT           EQU %1110
0000017E  =0000000F                321  CC_LE           EQU %1111
0000017E                           322  
0000017E= 20 00                    323  pr_space    DC.B    ' ',0
00000180= 2C 00                    324  pr_comma    DC.B    ',',0
00000182= 2E 42 00                 325  pr_BYTE     DC.B    '.B',0
00000185= 2E 57 00                 326  pr_WORD     DC.B    '.W',0
00000188= 2E 4C 00                 327  pr_LONG     DC.B    '.L',0
0000018B                           328  
0000018B= 4E 4F 50 00              329  pr_NOP      DC.B    'NOP',0
0000018F= 4D 4F 56 45 00           330  pr_MOVE     DC.B    'MOVE',0
00000194= 4D 4F 56 45 41 00        331  pr_MOVEA    DC.B    'MOVEA',0
0000019A= 4D 4F 56 45 51 00        332  pr_MOVEQ    DC.B    'MOVEQ',0
000001A0= 4D 4F 56 45 4D 00        333  pr_MOVEM    DC.B    'MOVEM',0
000001A6                           334  
000001A6                           335  
000001A6                           336  
000001A6                           337  
000001A6                           338  OpDecoder
000001A6  48E7 FF7E                339      MOVEM.L     D0-D7/A1-A6, -(SP)
000001AA                           340      
000001AA  6000 0078                341      BRA         CHECK_NOP
000001AE  6000 007E                342      BRA         CHECK_MOVE_AND_MOVEA_AND_MOVEQ
000001B2  6000 0430                343      BRA         Check_MOVEM
000001B6  6000 04D4                344      BRA         Check_ADDI
000001BA  6000 0028                345      BRA         CHECK_SHIFT_AND_ROTATE
000001BE                           346      
000001BE                           347  opdec_return
000001BE  4CDF 7EFF                348      MOVEM.L     (SP)+, D0-D7/A1-A6
000001C2  4E75                     349      RTS
000001C4                           350  
000001C4                           351  ReadFirstFourBits
000001C4                           352  
000001C4  48A7 2000                353      MOVEM.W     D2, -(SP)
000001C8                           354  
000001C8  1E3C 000C                355      MOVE.B      #12,D7 
000001CC  EE6A                     356      LSR.W       D7,D2 
000001CE  1602                     357      MOVE.B      D2,D3
000001D0                           358      
000001D0  4C9F 0004                359      MOVEM.W     (SP)+,D2
000001D4  4E75                     360      RTS
000001D6                           361      
000001D6                           362  ReadFirstTenBits
000001D6                           363      
000001D6  48A7 2000                364      MOVEM.W     D2, -(SP)
000001DA                           365   
000001DA  EC4A                     366      LSR.W       #6,D2 
000001DC  3602                     367      MOVE.W      D2,D3
000001DE                           368      
000001DE  4C9F 0004                369      MOVEM.W     (SP)+,D2
000001E2  4E75                     370      RTS
000001E4                           371  CHECK_SHIFT_AND_ROTATE
000001E4                           372  
000001E4  61F0                     373      BSR         ReadFirstTenBits
000001E6                           374      
000001E6  3C3C 038F                375      MOVE.W      #LSL,D6
000001EA  BC43                     376      CMP.W       D3,D6
000001EC  6700 062A                377      BEQ         MATCH_LSL
000001F0                           378      
000001F0  3C3C 038B                379      MOVE.W      #LSR,D6
000001F4  BC43                     380      CMP.W       D3,D6
000001F6  6700 0622                381      BEQ         MATCH_LSR
000001FA                           382      
000001FA  3C3C 0387                383      MOVE.W      #ASR,D6
000001FE  BC43                     384      CMP.W       D3,D6
00000200  6700 061A                385      BEQ         MATCH_ASR
00000204                           386      
00000204  3C3C 0383                387      MOVE.W      #ASL,D6
00000208  BC43                     388      CMP.W       D3,D6
0000020A  6700 0612                389      BEQ         MATCH_ASL
0000020E                           390      
0000020E  3C3C 039F                391      MOVE.W      #ROL,D6
00000212  BC43                     392      CMP.W       D3,D6
00000214  6700 060A                393      BEQ         MATCH_ROL
00000218                           394      
00000218  3C3C 039B                395      MOVE.W      #ROR,D6
0000021C  BC43                     396      CMP.W       D3,D6
0000021E  6700 0602                397      BEQ         MATCH_ROR
00000222                           398      
00000222  609A                     399      BRA         opdec_return
00000224                           400      
00000224                           401  CHECK_NOP
00000224                           402      
00000224  3C3C 4E71                403      MOVE.W      #NOP,D6
00000228  BC42                     404      CMP.W       D2,D6
0000022A  6700 0500                405      BEQ         MATCH_NOP
0000022E                           406  
0000022E                           407  CHECK_MOVE_AND_MOVEA_AND_MOVEQ
0000022E                           408  
0000022E  6194                     409      BSR     ReadFirstFourBits
00000230                           410      
00000230  1C3C 0001                411      MOVE.B      #MOVE_B,D6
00000234  BC03                     412      CMP.B       D3,D6
00000236  6700 0502                413      BEQ         MATCH_MOVE_B
0000023A                           414      
0000023A  1C3C 0003                415      MOVE.B      #MOVE_W,D6
0000023E  BC03                     416      CMP.B       D3,D6
00000240  6700 04B0                417      BEQ         CHECK_MOVEA_W_AND_MOVE_W
00000244                           418      
00000244  1C3C 0002                419      MOVE.B      #MOVE_L,D6
00000248  BC03                     420      CMP.B       D3,D6
0000024A  6700 04D0                421      BEQ         CHECK_MOVEA_L_AND_MOVE_L
0000024E                           422   
0000024E  1C3C 0007                423      MOVE.B      #MOVEQ_,D6
00000252  BC03                     424      CMP.B       D3,D6
00000254  6700 0566                425      BEQ         MATCH_MOVEQ
00000258                           426      
00000258  1C3C 000D                427      MOVE.B      #ADD_ADDA,D6
0000025C  BC03                     428      CMP.B       D3,D6
0000025E  6700 03B4                429      BEQ         CHECK_ADD_ADDA
00000262                           430      
00000262  1C3C 0005                431      MOVE.B      #ADDQ,D6
00000266  BC03                     432      CMP.B       D3,D6
00000268  6700 0400                433      BEQ         CHECK_ADDQ
0000026C                           434      
0000026C  1C3C 0009                435      MOVE.B      #SUB,D6
00000270  BC03                     436      CMP.B       D3,D6
00000272  6700 043E                437      BEQ         CHECK_SUB
00000276                           438      
00000276  1C3C 0008                439      MOVE.B      #DIVU_OR,D6
0000027A  BC03                     440      CMP.B       D3,D6
0000027C  6700 0318                441      BEQ         CHECK_DIVU_OR
00000280                           442      
00000280  1C3C 000C                443      MOVE.B      #MULS_W_AND,D6
00000284  BC03                     444      CMP.B       D3,D6
00000286  6700 02C0                445      BEQ         CHECK_MULS_W_AND
0000028A                           446      
0000028A  1C3C 0004                447      MOVE.B      #MULS_LEA_CLR_JSR_RTS,D6
0000028E  BC03                     448      CMP.B       D3,D6
00000290  6700 0264                449      BEQ         CHECK_MULS_LEA_CLR_JSR_RTS
00000294                           450      
00000294  1C3C 000B                451      MOVE.B      #CMP,D6
00000298  BC03                     452      CMP.B       D3,D6
0000029A  6700 0234                453      BEQ         CHECK_CMP
0000029E                           454      
0000029E  1C3C 0006                455      MOVE.B      #BCC,D6
000002A2  BC03                     456      CMP.B       D3,D6
000002A4  6700 0006                457      BEQ         CHECK_BCC
000002A8                           458      
000002A8  6000 FF14                459      BRA         opdec_return
000002AC                           460  CHECK_BCC
000002AC                           461      
000002AC  1C3C 0000                462      MOVE.B      #BCC_16,D6
000002B0  BC02                     463      CMP.B       D2,D6
000002B2  6700 00B8                464      BEQ         CHECK_BCC_16
000002B6                           465      
000002B6  1C3C 00FF                466      MOVE.B      #BCC_32,D6
000002BA  BC02                     467      CMP.B       D2,D6
000002BC  6700 0156                468      BEQ         CHECK_BCC_32
000002C0                           469      
000002C0  6000 0002                470      BRA         CHECK_BCC_8
000002C4                           471      
000002C4                           472  CHECK_BCC_8
000002C4                           473      
000002C4  6100 01F6                474      BSR         ISOLATE_CC_CODE_FOR_BCC
000002C8                           475      
000002C8  1C3C 0000                476      MOVE.B      #CC_T,D6
000002CC  BC03                     477      CMP.B       D3,D6
000002CE  6700 055A                478      BEQ         MATCH_CC_T_8
000002D2                           479      
000002D2  1C3C 0001                480      MOVE.B      #CC_F,D6
000002D6  BC03                     481      CMP.B       D3,D6
000002D8  6700 0556                482      BEQ         MATCH_CC_F_8
000002DC                           483      
000002DC  1C3C 0002                484      MOVE.B      #CC_HI,D6
000002E0  BC03                     485      CMP.B       D3,D6
000002E2  6700 0552                486      BEQ         MATCH_CC_HI_8
000002E6                           487      
000002E6  1C3C 0003                488      MOVE.B      #CC_LS,D6
000002EA  BC03                     489      CMP.B       D3,D6
000002EC  6700 054E                490      BEQ         MATCH_CC_LS_8
000002F0                           491      
000002F0  1C3C 0004                492      MOVE.B      #CC_CC,D6
000002F4  BC03                     493      CMP.B       D3,D6
000002F6  6700 054A                494      BEQ         MATCH_CC_CC_8
000002FA                           495      
000002FA  1C3C 0005                496      MOVE.B      #CC_CS,D6
000002FE  BC03                     497      CMP.B       D3,D6
00000300  6700 0546                498      BEQ         MATCH_CC_CS_8
00000304                           499      
00000304  1C3C 0006                500      MOVE.B      #CC_NE,D6
00000308  BC03                     501      CMP.B       D3,D6
0000030A  6700 0542                502      BEQ         MATCH_CC_NE_8
0000030E                           503      
0000030E  1C3C 0007                504      MOVE.B      #CC_EQ,D6
00000312  BC03                     505      CMP.B       D3,D6
00000314  6700 053E                506      BEQ         MATCH_CC_EQ_8
00000318                           507      
00000318  1C3C 0008                508      MOVE.B      #CC_VC,D6
0000031C  BC03                     509      CMP.B       D3,D6
0000031E  6700 053A                510      BEQ         MATCH_CC_VC_8
00000322                           511      
00000322  1C3C 0009                512      MOVE.B      #CC_VS,D6
00000326  BC03                     513      CMP.B       D3,D6
00000328  6700 0536                514      BEQ         MATCH_CC_VS_8
0000032C                           515      
0000032C  1C3C 000A                516      MOVE.B      #CC_PL,D6
00000330  BC03                     517      CMP.B       D3,D6
00000332  6700 0532                518      BEQ         MATCH_CC_PL_8
00000336                           519      
00000336  1C3C 000B                520      MOVE.B      #CC_MI,D6
0000033A  BC03                     521      CMP.B       D3,D6
0000033C  6700 052E                522      BEQ         MATCH_CC_MI_8
00000340                           523      
00000340  1C3C 000C                524      MOVE.B      #CC_GE,D6
00000344  BC03                     525      CMP.B       D3,D6
00000346  6700 052A                526      BEQ         MATCH_CC_GE_8
0000034A                           527      
0000034A  1C3C 000D                528      MOVE.B      #CC_LT,D6
0000034E  BC03                     529      CMP.B       D3,D6
00000350  6700 0526                530      BEQ         MATCH_CC_LT_8
00000354                           531      
00000354  1C3C 000E                532      MOVE.B      #CC_GT,D6
00000358  BC03                     533      CMP.B       D3,D6
0000035A  6700 0522                534      BEQ         MATCH_CC_GT_8
0000035E                           535      
0000035E  1C3C 000F                536      MOVE.B      #CC_LE,D6
00000362  BC03                     537      CMP.B       D3,D6
00000364  6700 051E                538      BEQ         MATCH_CC_LE_8
00000368                           539  
00000368  6000 0520                540      BRA         ERROR
0000036C                           541      
0000036C                           542  CHECK_BCC_16
0000036C                           543  
0000036C  6100 014E                544      BSR         ISOLATE_CC_CODE_FOR_BCC
00000370                           545      
00000370  1C3C 0000                546      MOVE.B      #CC_T,D6
00000374  BC03                     547      CMP.B       D3,D6
00000376  6700 04B4                548      BEQ         MATCH_CC_T_16
0000037A                           549      
0000037A  1C3C 0001                550      MOVE.B      #CC_F,D6
0000037E  BC03                     551      CMP.B       D3,D6
00000380  6700 04B0                552      BEQ         MATCH_CC_F_16
00000384                           553      
00000384  1C3C 0002                554      MOVE.B      #CC_HI,D6
00000388  BC03                     555      CMP.B       D3,D6
0000038A  6700 04AC                556      BEQ         MATCH_CC_HI_16
0000038E                           557      
0000038E  1C3C 0003                558      MOVE.B      #CC_LS,D6
00000392  BC03                     559      CMP.B       D3,D6
00000394  6700 04A8                560      BEQ         MATCH_CC_LS_16
00000398                           561      
00000398  1C3C 0004                562      MOVE.B      #CC_CC,D6
0000039C  BC03                     563      CMP.B       D3,D6
0000039E  6700 04A4                564      BEQ         MATCH_CC_CC_16
000003A2                           565      
000003A2  1C3C 0005                566      MOVE.B      #CC_CS,D6
000003A6  BC03                     567      CMP.B       D3,D6
000003A8  6700 04A0                568      BEQ         MATCH_CC_CS_16
000003AC                           569      
000003AC  1C3C 0006                570      MOVE.B      #CC_NE,D6
000003B0  BC03                     571      CMP.B       D3,D6
000003B2  6700 049C                572      BEQ         MATCH_CC_NE_16
000003B6                           573      
000003B6  1C3C 0007                574      MOVE.B      #CC_EQ,D6
000003BA  BC03                     575      CMP.B       D3,D6
000003BC  6700 0498                576      BEQ         MATCH_CC_EQ_16
000003C0                           577      
000003C0  1C3C 0008                578      MOVE.B      #CC_VC,D6
000003C4  BC03                     579      CMP.B       D3,D6
000003C6  6700 0494                580      BEQ         MATCH_CC_VC_16
000003CA                           581      
000003CA  1C3C 0009                582      MOVE.B      #CC_VS,D6
000003CE  BC03                     583      CMP.B       D3,D6
000003D0  6700 0490                584      BEQ         MATCH_CC_VS_16
000003D4                           585      
000003D4  1C3C 000A                586      MOVE.B      #CC_PL,D6
000003D8  BC03                     587      CMP.B       D3,D6
000003DA  6700 048C                588      BEQ         MATCH_CC_PL_16
000003DE                           589      
000003DE  1C3C 000B                590      MOVE.B      #CC_MI,D6
000003E2  BC03                     591      CMP.B       D3,D6
000003E4  6700 0488                592      BEQ         MATCH_CC_MI_16
000003E8                           593      
000003E8  1C3C 000C                594      MOVE.B      #CC_GE,D6
000003EC  BC03                     595      CMP.B       D3,D6
000003EE  6700 0484                596      BEQ         MATCH_CC_GE_16
000003F2                           597      
000003F2  1C3C 000D                598      MOVE.B      #CC_LT,D6
000003F6  BC03                     599      CMP.B       D3,D6
000003F8  6700 0480                600      BEQ         MATCH_CC_LT_16
000003FC                           601      
000003FC  1C3C 000E                602      MOVE.B      #CC_GT,D6
00000400  BC03                     603      CMP.B       D3,D6
00000402  6700 047C                604      BEQ         MATCH_CC_GT_16
00000406                           605      
00000406  1C3C 000F                606      MOVE.B      #CC_LE,D6
0000040A  BC03                     607      CMP.B       D3,D6
0000040C  6700 0478                608      BEQ         MATCH_CC_LE_16
00000410                           609  
00000410  6000 0478                610      BRA         ERROR
00000414                           611  
00000414                           612  CHECK_BCC_32  
00000414                           613  
00000414  6100 00A6                614      BSR         ISOLATE_CC_CODE_FOR_BCC 
00000418                           615      
00000418  1C3C 0000                616      MOVE.B      #CC_T,D6
0000041C  BC03                     617      CMP.B       D3,D6
0000041E  6700 040E                618      BEQ         MATCH_CC_T_32
00000422                           619      
00000422  1C3C 0001                620      MOVE.B      #CC_F,D6
00000426  BC03                     621      CMP.B       D3,D6
00000428  6700 040A                622      BEQ         MATCH_CC_F_32
0000042C                           623      
0000042C  1C3C 0002                624      MOVE.B      #CC_HI,D6
00000430  BC03                     625      CMP.B       D3,D6
00000432  6700 0406                626      BEQ         MATCH_CC_HI_32
00000436                           627      
00000436  1C3C 0003                628      MOVE.B      #CC_LS,D6
0000043A  BC03                     629      CMP.B       D3,D6
0000043C  6700 0402                630      BEQ         MATCH_CC_LS_32
00000440                           631      
00000440  1C3C 0004                632      MOVE.B      #CC_CC,D6
00000444  BC03                     633      CMP.B       D3,D6
00000446  6700 03FE                634      BEQ         MATCH_CC_CC_32
0000044A                           635      
0000044A  1C3C 0005                636      MOVE.B      #CC_CS,D6
0000044E  BC03                     637      CMP.B       D3,D6
00000450  6700 03FA                638      BEQ         MATCH_CC_CS_32
00000454                           639      
00000454  1C3C 0006                640      MOVE.B      #CC_NE,D6
00000458  BC03                     641      CMP.B       D3,D6
0000045A  6700 03F6                642      BEQ         MATCH_CC_NE_32
0000045E                           643      
0000045E  1C3C 0007                644      MOVE.B      #CC_EQ,D6
00000462  BC03                     645      CMP.B       D3,D6
00000464  6700 03F2                646      BEQ         MATCH_CC_EQ_32
00000468                           647      
00000468  1C3C 0008                648      MOVE.B      #CC_VC,D6
0000046C  BC03                     649      CMP.B       D3,D6
0000046E  6700 03EE                650      BEQ         MATCH_CC_VC_32
00000472                           651      
00000472  1C3C 0009                652      MOVE.B      #CC_VS,D6
00000476  BC03                     653      CMP.B       D3,D6
00000478  6700 03EA                654      BEQ         MATCH_CC_VS_32
0000047C                           655      
0000047C  1C3C 000A                656      MOVE.B      #CC_PL,D6
00000480  BC03                     657      CMP.B       D3,D6
00000482  6700 03E6                658      BEQ         MATCH_CC_PL_32
00000486                           659      
00000486  1C3C 000B                660      MOVE.B      #CC_MI,D6
0000048A  BC03                     661      CMP.B       D3,D6
0000048C  6700 03E2                662      BEQ         MATCH_CC_MI_32
00000490                           663      
00000490  1C3C 000C                664      MOVE.B      #CC_GE,D6
00000494  BC03                     665      CMP.B       D3,D6
00000496  6700 03DE                666      BEQ         MATCH_CC_GE_32
0000049A                           667      
0000049A  1C3C 000D                668      MOVE.B      #CC_LT,D6
0000049E  BC03                     669      CMP.B       D3,D6
000004A0  6700 03DA                670      BEQ         MATCH_CC_LT_32
000004A4                           671      
000004A4  1C3C 000E                672      MOVE.B      #CC_GT,D6
000004A8  BC03                     673      CMP.B       D3,D6
000004AA  6700 03D6                674      BEQ         MATCH_CC_GT_32
000004AE                           675      
000004AE  1C3C 000F                676      MOVE.B      #CC_LE,D6
000004B2  BC03                     677      CMP.B       D3,D6
000004B4  6700 03D2                678      BEQ         MATCH_CC_LE_32
000004B8                           679  
000004B8  6000 03D0                680      BRA         ERROR
000004BC                           681   
000004BC                           682  ISOLATE_CC_CODE_FOR_BCC
000004BC                           683  
000004BC  48A7 2000                684      MOVEM.W     D2, -(SP) 
000004C0                           685      
000004C0  E94A                     686      LSL.W       #4,D2
000004C2  1E3C 000C                687      MOVE.B      #12,D7
000004C6  EE6A                     688      LSR.W       D7,D2
000004C8                           689      
000004C8  1602                     690      MOVE.B      D2,D3      
000004CA                           691  
000004CA  4C9F 0004                692      MOVEM.W     (SP)+,D2 
000004CE  4E75                     693      RTS
000004D0                           694  CHECK_CMP
000004D0                           695      
000004D0  6100 0232                696      BSR         ISOLATE_OP_CODE
000004D4                           697      
000004D4  1C3C 0000                698      MOVE.B      #CMP_B,D6
000004D8  BC03                     699      CMP.B       D3,D6
000004DA  6700 0348                700      BEQ         MATCH_CMP_B
000004DE                           701      
000004DE  1C3C 0001                702      MOVE.B      #CMP_W,D6
000004E2  BC03                     703      CMP.B       D3,D6
000004E4  6700 0340                704      BEQ         MATCH_CMP_W
000004E8                           705      
000004E8  1C3C 0002                706      MOVE.B      #CMP_L,D6
000004EC  BC03                     707      CMP.B       D3,D6
000004EE  6700 0338                708      BEQ         MATCH_CMP_L
000004F2                           709      
000004F2  6000 0396                710      BRA         ERROR
000004F6                           711  CHECK_MULS_LEA_CLR_JSR_RTS
000004F6                           712  
000004F6  3C3C 4E75                713      MOVE.W      #RTS,D6
000004FA  BC42                     714      CMP.W       D2,D6
000004FC  6700 030C                715      BEQ         MATCH_RTS
00000500                           716      
00000500  6100 0202                717      BSR         ISOLATE_OP_CODE
00000504                           718      
00000504  1C3C 0007                719      MOVE.B      #LEA,D6
00000508  BC03                     720      CMP.B       D3,D6
0000050A  6700 0300                721      BEQ         MATCH_LEA
0000050E                           722      
0000050E  6100 FCC6                723      BSR         ReadFirstTenBits
00000512                           724      
00000512  3C3C 013A                725      MOVE.W      #JSR,D6
00000516  BC43                     726      CMP.W       D3,D6
00000518  6700 02F4                727      BEQ         MATCH_JSR
0000051C                           728      
0000051C  3C3C 0108                729      MOVE.W      #CLR_B,D6
00000520  BC43                     730      CMP.W       D3,D6
00000522  6700 02EC                731      BEQ         MATCH_CLR_B
00000526                           732      
00000526  3C3C 0109                733      MOVE.W      #CLR_W,D6
0000052A  BC43                     734      CMP.W       D3,D6
0000052C  6700 02E4                735      BEQ         MATCH_CLR_W
00000530                           736      
00000530  3C3C 010A                737      MOVE.W      #CLR_L,D6
00000534  BC43                     738      CMP.W       D3,D6
00000536  6700 02DC                739      BEQ         MATCH_CLR_L
0000053A                           740      
0000053A  3C3C 0130                741      MOVE.W      #MULS_L,D6  * Shouldn't need to check for the rest of the opcode..?
0000053E  BC43                     742      CMP.W       D3,D6
00000540  6700 02D4                743      BEQ         MATCH_MULS_L
00000544                           744      
00000544  6000 0344                745      BRA         ERROR
00000548                           746      
00000548                           747  CHECK_MULS_W_AND
00000548                           748  
00000548  6100 01BA                749      BSR         ISOLATE_OP_CODE
0000054C                           750      
0000054C  1C3C 0007                751      MOVE.B      #MULS_OP_W,D6
00000550  BC03                     752      CMP.B       D3,D6
00000552  6700 02A8                753      BEQ         MATCH_MULS_W
00000556                           754      
00000556  1C3C 0000                755      MOVE.B      #DN_B,D6
0000055A  BC03                     756      CMP.B       D3,D6
0000055C  6700 02A0                757      BEQ         MATCH_AND_DN_B
00000560                           758      
00000560  1C3C 0001                759      MOVE.B      #DN_W,D6
00000564  BC03                     760      CMP.B       D3,D6
00000566  6700 0298                761      BEQ         MATCH_AND_DN_W
0000056A                           762      
0000056A  1C3C 0002                763      MOVE.B      #DN_L,D6
0000056E  BC03                     764      CMP.B       D3,D6
00000570  6700 0290                765      BEQ         MATCH_AND_DN_L
00000574                           766      
00000574  1C3C 0004                767      MOVE.B      #EA_B,D6
00000578  BC03                     768      CMP.B       D3,D6
0000057A  6700 0288                769      BEQ         MATCH_AND_EA_B
0000057E                           770      
0000057E  1C3C 0005                771      MOVE.B      #EA_W,D6
00000582  BC03                     772      CMP.B       D3,D6
00000584  6700 0280                773      BEQ         MATCH_AND_EA_W
00000588                           774      
00000588  1C3C 0006                775      MOVE.B      #EA_L,D6
0000058C  BC03                     776      CMP.B       D3,D6
0000058E  6700 0278                777      BEQ         MATCH_AND_EA_L
00000592                           778      
00000592  6000 02F6                779      BRA         ERROR
00000596                           780  CHECK_DIVU_OR
00000596                           781      
00000596  6100 016C                782      BSR         ISOLATE_OP_CODE
0000059A                           783      
0000059A  1C3C 0003                784      MOVE.B      #DIVU,D6
0000059E  BC03                     785      CMP.B       D3,D6
000005A0  6700 024C                786      BEQ         MATCH_DIVU
000005A4                           787      
000005A4  1C3C 0000                788      MOVE.B      #DN_B,D6
000005A8  BC03                     789      CMP.B       D3,D6
000005AA  6700 0244                790      BEQ         MATCH_OR_DN_B
000005AE                           791      
000005AE  1C3C 0001                792      MOVE.B      #DN_W,D6
000005B2  BC03                     793      CMP.B       D3,D6
000005B4  6700 023C                794      BEQ         MATCH_OR_DN_W
000005B8                           795      
000005B8  1C3C 0002                796      MOVE.B      #DN_L,D6
000005BC  BC03                     797      CMP.B       D3,D6
000005BE  6700 0234                798      BEQ         MATCH_OR_DN_L
000005C2                           799      
000005C2  1C3C 0004                800      MOVE.B      #EA_B,D6
000005C6  BC03                     801      CMP.B       D3,D6
000005C8  6700 022C                802      BEQ         MATCH_OR_EA_B
000005CC                           803      
000005CC  1C3C 0005                804      MOVE.B      #EA_W,D6
000005D0  BC03                     805      CMP.B       D3,D6
000005D2  6700 0224                806      BEQ         MATCH_OR_EA_W
000005D6                           807      
000005D6  1C3C 0006                808      MOVE.B      #EA_L,D6
000005DA  BC03                     809      CMP.B       D3,D6
000005DC  6700 021C                810      BEQ         MATCH_OR_EA_L
000005E0                           811      
000005E0  6000 02A8                812      BRA         ERROR
000005E4                           813  CHECK_MOVEM
000005E4                           814      
000005E4  6100 FBF0                815      BSR         ReadFirstTenBits
000005E8                           816      
000005E8  3C3C 0122                817      MOVE.W      #MOVEM_TO_MEM_W,D6
000005EC  BC43                     818      CMP.W       D3,D6
000005EE  6700 01CE                819      BEQ         MATCH_MOVEM_TO_MEM_W
000005F2                           820      
000005F2  3C3C 0123                821      MOVE.W      #MOVEM_TO_MEM_L,D6
000005F6  BC43                     822      CMP.W       D3,D6
000005F8  6700 01C6                823      BEQ         MATCH_MOVEM_TO_MEM_L
000005FC                           824      
000005FC  3C3C 0132                825      MOVE.W      #MOVEM_TO_REG_W,D6
00000600  BC43                     826      CMP.W       D3,D6
00000602  6700 01BE                827      BEQ         MATCH_MOVEM_TO_REG_W
00000606                           828      
00000606  3C3C 0133                829      MOVE.W      #MOVEM_TO_REG_L,D6
0000060A  BC43                     830      CMP.W       D3,D6
0000060C  6700 01B6                831      BEQ         MATCH_MOVEM_TO_REG_L
00000610                           832      
00000610  6000 FBAC                833      BRA         opdec_return
00000614                           834  CHECK_ADD_ADDA
00000614                           835      
00000614  6100 00EE                836      BSR         ISOLATE_OP_CODE
00000618                           837      
00000618  3C3C 0000                838      MOVE.W      #DN_B,D6
0000061C  BC43                     839      CMP.W       D3,D6
0000061E  6700 01AC                840      BEQ         MATCH_ADD_TO_REG_B
00000622                           841      
00000622  3C3C 0001                842      MOVE.W      #DN_W,D6
00000626  BC43                     843      CMP.W       D3,D6
00000628  6700 01A4                844      BEQ         MATCH_ADD_TO_REG_W
0000062C                           845      
0000062C  3C3C 0002                846      MOVE.W      #DN_L,D6
00000630  BC43                     847      CMP.W       D3,D6
00000632  6700 019C                848      BEQ         MATCH_ADD_TO_REG_L
00000636                           849      
00000636  3C3C 0004                850      MOVE.W      #EA_B,D6
0000063A  BC43                     851      CMP.W       D3,D6
0000063C  6700 0194                852      BEQ         MATCH_ADD_TO_EA_B
00000640                           853      
00000640  3C3C 0005                854      MOVE.W      #EA_W,D6
00000644  BC43                     855      CMP.W       D3,D6
00000646  6700 018C                856      BEQ         MATCH_ADD_TO_EA_W
0000064A                           857      
0000064A  3C3C 0006                858      MOVE.W      #EA_L,D6
0000064E  BC43                     859      CMP.W       D3,D6
00000650  6700 0184                860      BEQ         MATCH_ADD_TO_EA_L
00000654                           861      
00000654  3C3C 0003                862      MOVE.W      #ADDA_W,D6
00000658  BC43                     863      CMP.W       D3,D6
0000065A  6700 017C                864      BEQ         MATCH_ADDA_W
0000065E                           865      
0000065E  3C3C 0007                866      MOVE.W      #ADDA_L,D6
00000662  BC43                     867      CMP.W       D3,D6
00000664  6700 0174                868      BEQ         MATCH_ADDA_L
00000668                           869      
00000668  4E75                     870      RTS ** Change later?
0000066A                           871  CHECK_ADDQ
0000066A                           872      
0000066A  6100 0098                873      BSR         ISOLATE_OP_CODE
0000066E                           874      
0000066E  3C3C 0000                875      MOVE.W      #ADDQ_B,D6
00000672  BC43                     876      CMP.W       D3,D6
00000674  6700 0166                877      BEQ         MATCH_ADDQ_B
00000678                           878      
00000678  3C3C 0001                879      MOVE.W      #ADDQ_W,D6
0000067C  BC43                     880      CMP.W       D3,D6
0000067E  6700 015E                881      BEQ         MATCH_ADDQ_W
00000682                           882      
00000682  3C3C 0002                883      MOVE.W      #ADDQ_L,D6
00000686  BC43                     884      CMP.W       D3,D6
00000688  6700 0156                885      BEQ         MATCH_ADDQ_L
0000068C                           886      
0000068C                           887  CHECK_ADDI
0000068C                           888  
0000068C  6100 FB48                889      BSR         ReadFirstTenBits
00000690                           890      
00000690  3C3C 0018                891      MOVE.W      #ADDI_B,D6
00000694  BC43                     892      CMP.W       D3,D6
00000696  6700 012E                893      BEQ         MATCH_ADDI_B
0000069A                           894      
0000069A  3C3C 0019                895      MOVE.W      #ADDI_W,D6
0000069E  BC43                     896      CMP.W       D3,D6
000006A0  6700 0126                897      BEQ         MATCH_ADDI_W
000006A4                           898      
000006A4  3C3C 001A                899      MOVE.W      #ADDI_L,D6
000006A8  BC43                     900      CMP.W       D3,D6
000006AA  6700 011E                901      BEQ         MATCH_ADDI_L
000006AE                           902      
000006AE  6000 FB0E                903      BRA         opdec_return
000006B2                           904  CHECK_SUB
000006B2                           905      
000006B2  6100 0050                906      BSR         ISOLATE_OP_CODE
000006B6                           907      
000006B6  3C3C 0000                908      MOVE.W      #DN_B,D6
000006BA  BC43                     909      CMP.W       D3,D6
000006BC  6700 0124                910      BEQ         MATCH_SUB_TO_DN_B
000006C0                           911      
000006C0  3C3C 0001                912      MOVE.W      #DN_W,D6
000006C4  BC43                     913      CMP.W       D3,D6
000006C6  6700 011C                914      BEQ         MATCH_SUB_TO_DN_W
000006CA                           915      
000006CA  3C3C 0002                916      MOVE.W      #DN_L,D6
000006CE  BC43                     917      CMP.W       D3,D6
000006D0  6700 0114                918      BEQ         MATCH_SUB_TO_DN_L
000006D4                           919      
000006D4  3C3C 0004                920      MOVE.W      #EA_B,D6
000006D8  BC43                     921      CMP.W       D3,D6
000006DA  6700 010C                922      BEQ         MATCH_SUB_TO_EA_B
000006DE                           923      
000006DE  3C3C 0005                924      MOVE.W      #EA_W,D6
000006E2  BC43                     925      CMP.W       D3,D6
000006E4  6700 0104                926      BEQ         MATCH_SUB_TO_EA_W
000006E8                           927      
000006E8  3C3C 0006                928      MOVE.W      #EA_L,D6
000006EC  BC43                     929      CMP.W       D3,D6
000006EE  6700 00FC                930      BEQ         MATCH_SUB_TO_EA_L
000006F2                           931  CHECK_MOVEA_W_AND_MOVE_W
000006F2                           932      
000006F2  6100 0010                933      BSR         ISOLATE_OP_CODE
000006F6                           934         
000006F6  1C3C 0001                935      MOVE.B      #MOVEA_WL,D6
000006FA  BC03                     936      CMP.B       D3,D6
000006FC  6700 00BA                937      BEQ         MATCH_MOVEA_W
00000700                           938      
00000700  6000 0076                939      BRA         MATCH_MOVE_W 
00000704                           940  ISOLATE_OP_CODE 
00000704                           941  
00000704  48A7 2000                942      MOVEM.W     D2, -(SP)    
00000708                           943     
00000708  1E3C 0007                944      MOVE.B      #7,D7          
0000070C  EF6A                     945      LSL.W       D7,D2
0000070E  1E3C 000D                946      MOVE.B      #13,D7
00000712  EE6A                     947      LSR.W       D7,D2
00000714  1602                     948      MOVE.B      D2,D3    
00000716                           949         
00000716  4C9F 0004                950      MOVEM.W     (SP)+,D2 
0000071A  4E75                     951      RTS
0000071C                           952  CHECK_MOVEA_L_AND_MOVE_L
0000071C                           953      
0000071C  61E6                     954      BSR         ISOLATE_OP_CODE
0000071E                           955         
0000071E  1C3C 0001                956      MOVE.B      #MOVEA_WL,D6
00000722  BC03                     957      CMP.B       D3,D6
00000724  6700 0094                958      BEQ         MATCH_MOVEA_L 
00000728                           959      
00000728  6000 008C                960      BRA         MATCH_MOVE_L   
0000072C                           961  
0000072C                           962  MATCH_NOP
0000072C  43F8 018B                963      LEA         pr_NOP,A1
00000730  103C 000E                964      MOVE.B      #14,D0
00000734  4E4F                     965      TRAP        #15
00000736  6000 FA86                966      BRA         opdec_return
0000073A                           967      
0000073A                           968  MATCH_MOVE_B
0000073A                           969      ** Move command size into D1
0000073A  123C 0002                970      MOVE.B      #2,D1
0000073E                           971      ** Print command
0000073E  103C 000E                972      MOVE.B      #14,D0
00000742  43F8 018F                973      LEA         pr_MOVE,A1
00000746  4E4F                     974      TRAP        #15
00000748                           975      ** Print size
00000748  43F8 0182                976      LEA         pr_BYTE,A1
0000074C  4E4F                     977      TRAP        #15
0000074E                           978      ** Print space
0000074E  43F8 017E                979      LEA         pr_space,A1
00000752  4E4F                     980      TRAP        #15
00000754                           981      ** Decode right side ea
00000754  1002                     982      MOVE.B      D2,D0
00000756  0200 003F                983      ANDI.B      #%00111111,D0
0000075A  4EB8 0066                984      JSR         EADecoder
0000075E                           985      ** Add comma
0000075E  103C 000E                986      MOVE.B      #14,D0
00000762  43F8 0180                987      LEA         pr_comma,A1
00000766  4E4F                     988      TRAP        #15
00000768                           989      ** Decode left side ea
00000768  3002                     990      MOVE.W      D2,D0
0000076A  0240 0FC0                991      ANDI.W      #%0000111111000000,D0
0000076E  EC48                     992      LSR.W       #6,D0
00000770  4EB8 004E                993      JSR         EADecoder_left
00000774                           994      
00000774  6000 FA48                995      BRA         opdec_return
00000778                           996      
00000778                           997  MATCH_MOVE_W
00000778                           998      ** Move command size into D1
00000778  123C 0002                999      MOVE.B      #2,D1
0000077C                          1000      ** Print command
0000077C  103C 000E               1001      MOVE.B      #14,D0
00000780  43F8 018F               1002      LEA         pr_MOVE,A1
00000784  4E4F                    1003      TRAP        #15
00000786                          1004      ** Print size
00000786  43F8 0185               1005      LEA         pr_WORD,A1
0000078A  4E4F                    1006      TRAP        #15
0000078C                          1007      ** Print space
0000078C  43F8 017E               1008      LEA         pr_space,A1
00000790  4E4F                    1009      TRAP        #15
00000792                          1010      ** Decode right side ea
00000792  1002                    1011      MOVE.B      D2,D0
00000794  0200 003F               1012      ANDI.B      #%00111111,D0
00000798  4EB8 0066               1013      JSR         EADecoder
0000079C                          1014      ** Add comma
0000079C  103C 000E               1015      MOVE.B      #14,D0
000007A0  43F8 0180               1016      LEA         pr_comma,A1
000007A4  4E4F                    1017      TRAP        #15
000007A6                          1018      ** Decode left side ea
000007A6  3002                    1019      MOVE.W      D2,D0
000007A8  0240 0FC0               1020      ANDI.W      #%0000111111000000,D0
000007AC  EC48                    1021      LSR.W       #6,D0
000007AE  4EB8 004E               1022      JSR         EADecoder_left
000007B2                          1023      
000007B2  6000 FA0A               1024      BRA         opdec_return
000007B6                          1025      
000007B6                          1026  MATCH_MOVE_L
000007B6  3A02                    1027      MOVE.W      D2,D5       *REMOVE
000007B8                          1028  MATCH_MOVEA_W
000007B8  3A02                    1029      MOVE.W      D2,D5       *REMOVE
000007BA                          1030  MATCH_MOVEA_L
000007BA  3A02                    1031      MOVE.W      D2,D5       *REMOVE
000007BC                          1032  MATCH_MOVEQ
000007BC  3A02                    1033      MOVE.W      D2,D5       *REMOVE
000007BE                          1034  MATCH_MOVEM_TO_MEM_W
000007BE  3A02                    1035      MOVE.W      D2,D5       *REMOVE
000007C0                          1036  MATCH_MOVEM_TO_MEM_L
000007C0  3A02                    1037      MOVE.W      D2,D5       *REMOVE
000007C2                          1038  MATCH_MOVEM_TO_REG_W
000007C2  3A02                    1039      MOVE.W      D2,D5       *REMOVE
000007C4                          1040  MATCH_MOVEM_TO_REG_L
000007C4  3A02                    1041      MOVE.W      D2,D5       *REMOVE
000007C6                          1042  MATCH_ADDI_B
000007C6  3A02                    1043      MOVE.W      D2,D5       *REMOVE
000007C8                          1044  MATCH_ADDI_W
000007C8  3A02                    1045      MOVE.W      D2,D5       *REMOVE
000007CA                          1046  MATCH_ADDI_L
000007CA  3A02                    1047      MOVE.W      D2,D5       *REMOVE
000007CC                          1048  MATCH_ADD_TO_REG_B
000007CC  3A02                    1049      MOVE.W      D2,D5       *REMOVE
000007CE                          1050  MATCH_ADD_TO_REG_W
000007CE  3A02                    1051      MOVE.W      D2,D5       *REMOVE
000007D0                          1052  MATCH_ADD_TO_REG_L
000007D0  3A02                    1053      MOVE.W      D2,D5       *REMOVE
000007D2                          1054  MATCH_ADD_TO_EA_B
000007D2  3A02                    1055      MOVE.W      D2,D5       *REMOVE
000007D4                          1056  MATCH_ADD_TO_EA_W
000007D4  3A02                    1057      MOVE.W      D2,D5       *REMOVE
000007D6                          1058  MATCH_ADD_TO_EA_L 
000007D6  3A02                    1059      MOVE.W      D2,D5       *REMOVE
000007D8                          1060  MATCH_ADDA_W
000007D8  3A02                    1061      MOVE.W      D2,D5       *REMOVE
000007DA                          1062  MATCH_ADDA_L
000007DA  3A02                    1063      MOVE.W      D2,D5       *REMOVE
000007DC                          1064  MATCH_ADDQ_B
000007DC  3A02                    1065      MOVE.W      D2,D5       *REMOVE
000007DE                          1066  MATCH_ADDQ_W
000007DE  3A02                    1067      MOVE.W      D2,D5       *REMOVE
000007E0                          1068  MATCH_ADDQ_L
000007E0  3A02                    1069      MOVE.W      D2,D5       *REMOVE
000007E2                          1070  MATCH_SUB_TO_DN_B
000007E2  3A02                    1071      MOVE.W      D2,D5       *REMOVE
000007E4                          1072  MATCH_SUB_TO_DN_W
000007E4  3A02                    1073      MOVE.W      D2,D5       *REMOVE
000007E6                          1074  MATCH_SUB_TO_DN_L
000007E6  3A02                    1075      MOVE.W      D2,D5       *REMOVE
000007E8                          1076  MATCH_SUB_TO_EA_B
000007E8  3A02                    1077      MOVE.W      D2,D5       *REMOVE
000007EA                          1078  MATCH_SUB_TO_EA_W
000007EA  3A02                    1079      MOVE.W      D2,D5       *REMOVE
000007EC                          1080  MATCH_SUB_TO_EA_L
000007EC  3A02                    1081      MOVE.W      D2,D5       *REMOVE
000007EE                          1082  MATCH_DIVU
000007EE  3A02                    1083      MOVE.W      D2,D5       *REMOVE
000007F0                          1084  MATCH_OR_DN_B
000007F0  3A02                    1085      MOVE.W      D2,D5       *REMOVE
000007F2                          1086  MATCH_OR_DN_W
000007F2  3A02                    1087      MOVE.W      D2,D5       *REMOVE
000007F4                          1088  MATCH_OR_DN_L
000007F4  3A02                    1089      MOVE.W      D2,D5       *REMOVE
000007F6                          1090  MATCH_OR_EA_B
000007F6  3A02                    1091      MOVE.W      D2,D5       *REMOVE
000007F8                          1092  MATCH_OR_EA_W
000007F8  3A02                    1093      MOVE.W      D2,D5       *REMOVE
000007FA                          1094  MATCH_OR_EA_L
000007FA  3A02                    1095      MOVE.W      D2,D5       *REMOVE
000007FC                          1096  MATCH_MULS_W
000007FC  3A02                    1097      MOVE.W      D2,D5       *REMOVE
000007FE                          1098  MATCH_AND_DN_B
000007FE  3A02                    1099      MOVE.W      D2,D5       *REMOVE
00000800                          1100  MATCH_AND_DN_W
00000800  3A02                    1101      MOVE.W      D2,D5       *REMOVE
00000802                          1102  MATCH_AND_DN_L
00000802  3A02                    1103      MOVE.W      D2,D5       *REMOVE
00000804                          1104  MATCH_AND_EA_B
00000804  3A02                    1105      MOVE.W      D2,D5       *REMOVE
00000806                          1106  MATCH_AND_EA_W
00000806  3A02                    1107      MOVE.W      D2,D5       *REMOVE
00000808                          1108  MATCH_AND_EA_L
00000808  3A02                    1109      MOVE.W      D2,D5       *REMOVE
0000080A                          1110  MATCH_RTS
0000080A  3A02                    1111      MOVE.W      D2,D5       *REMOVE
0000080C                          1112  MATCH_LEA
0000080C  3A02                    1113      MOVE.W      D2,D5       *REMOVE
0000080E                          1114  MATCH_JSR
0000080E  3A02                    1115      MOVE.W      D2,D5       *REMOVE
00000810                          1116  MATCH_CLR_B
00000810  3A02                    1117      MOVE.W      D2,D5       *REMOVE
00000812                          1118  MATCH_CLR_W
00000812  3A02                    1119      MOVE.W      D2,D5       *REMOVE
00000814                          1120  MATCH_CLR_L
00000814  3A02                    1121      MOVE.W      D2,D5       *REMOVE
00000816                          1122  MATCH_MULS_L
00000816  3A02                    1123      MOVE.W      D2,D5       *REMOVE
00000818                          1124  MATCH_LSL
00000818  3A02                    1125      MOVE.W      D2,D5       *REMOVE
0000081A                          1126  MATCH_LSR
0000081A  3A02                    1127      MOVE.W      D2,D5       *REMOVE
0000081C                          1128  MATCH_ASR
0000081C  3A02                    1129      MOVE.W      D2,D5       *REMOVE
0000081E                          1130  MATCH_ASL
0000081E  3A02                    1131      MOVE.W      D2,D5       *REMOVE
00000820                          1132  MATCH_ROL
00000820  3A02                    1133      MOVE.W      D2,D5       *REMOVE
00000822                          1134  MATCH_ROR
00000822  3A02                    1135      MOVE.W      D2,D5       *REMOVE
00000824                          1136  MATCH_CMP_B
00000824  3A02                    1137      MOVE.W      D2,D5       *REMOVE
00000826                          1138  MATCH_CMP_W
00000826  3A02                    1139      MOVE.W      D2,D5       *REMOVE
00000828                          1140  MATCH_CMP_L
00000828  3A02                    1141      MOVE.W      D2,D5       *REMOVE
0000082A                          1142      
0000082A                          1143  MATCH_CC_T_8
0000082A  3A02                    1144      MOVE.W      D2,D5       *REMOVE
0000082C                          1145  MATCH_CC_T_16
0000082C  3A02                    1146      MOVE.W      D2,D5       *REMOVE
0000082E                          1147  MATCH_CC_T_32
0000082E  3A02                    1148      MOVE.W      D2,D5       *REMOVE
00000830                          1149  MATCH_CC_F_8
00000830  3A02                    1150      MOVE.W      D2,D5       *REMOVE
00000832                          1151  MATCH_CC_F_16
00000832  3A02                    1152      MOVE.W      D2,D5       *REMOVE
00000834                          1153  MATCH_CC_F_32
00000834  3A02                    1154      MOVE.W      D2,D5       *REMOVE
00000836                          1155  MATCH_CC_HI_8
00000836  3A02                    1156      MOVE.W      D2,D5       *REMOVE
00000838                          1157  MATCH_CC_HI_16
00000838  3A02                    1158      MOVE.W      D2,D5       *REMOVE
0000083A                          1159  MATCH_CC_HI_32
0000083A  3A02                    1160      MOVE.W      D2,D5       *REMOVE
0000083C                          1161  MATCH_CC_LS_8
0000083C  3A02                    1162      MOVE.W      D2,D5       *REMOVE
0000083E                          1163  MATCH_CC_LS_16
0000083E  3A02                    1164      MOVE.W      D2,D5       *REMOVE
00000840                          1165  MATCH_CC_LS_32  
00000840  3A02                    1166      MOVE.W      D2,D5       *REMOVE
00000842                          1167  MATCH_CC_CC_8
00000842  3A02                    1168      MOVE.W      D2,D5       *REMOVE
00000844                          1169  MATCH_CC_CC_16
00000844  3A02                    1170      MOVE.W      D2,D5       *REMOVE
00000846                          1171  MATCH_CC_CC_32
00000846  3A02                    1172      MOVE.W      D2,D5       *REMOVE
00000848                          1173  MATCH_CC_CS_8
00000848  3A02                    1174      MOVE.W      D2,D5       *REMOVE
0000084A                          1175  MATCH_CC_CS_16
0000084A  3A02                    1176      MOVE.W      D2,D5       *REMOVE
0000084C                          1177  MATCH_CC_CS_32
0000084C  3A02                    1178      MOVE.W      D2,D5       *REMOVE
0000084E                          1179  MATCH_CC_NE_8
0000084E  3A02                    1180      MOVE.W      D2,D5       *REMOVE
00000850                          1181  MATCH_CC_NE_16
00000850  3A02                    1182      MOVE.W      D2,D5       *REMOVE
00000852                          1183  MATCH_CC_NE_32
00000852  3A02                    1184      MOVE.W      D2,D5       *REMOVE
00000854                          1185  MATCH_CC_EQ_8
00000854  3A02                    1186      MOVE.W      D2,D5       *REMOVE
00000856                          1187  MATCH_CC_EQ_16
00000856  3A02                    1188      MOVE.W      D2,D5       *REMOVE
00000858                          1189  MATCH_CC_EQ_32
00000858  3A02                    1190      MOVE.W      D2,D5       *REMOVE
0000085A                          1191  MATCH_CC_VC_8
0000085A  3A02                    1192      MOVE.W      D2,D5       *REMOVE
0000085C                          1193  MATCH_CC_VC_16
0000085C  3A02                    1194      MOVE.W      D2,D5       *REMOVE
0000085E                          1195  MATCH_CC_VC_32
0000085E  3A02                    1196      MOVE.W      D2,D5       *REMOVE
00000860                          1197  MATCH_CC_VS_8
00000860  3A02                    1198      MOVE.W      D2,D5       *REMOVE
00000862                          1199  MATCH_CC_VS_16
00000862  3A02                    1200      MOVE.W      D2,D5       *REMOVE
00000864                          1201  MATCH_CC_VS_32
00000864  3A02                    1202      MOVE.W      D2,D5       *REMOVE
00000866                          1203  MATCH_CC_PL_8
00000866  3A02                    1204      MOVE.W      D2,D5       *REMOVE
00000868                          1205  MATCH_CC_PL_16
00000868  3A02                    1206      MOVE.W      D2,D5       *REMOVE
0000086A                          1207  MATCH_CC_PL_32
0000086A  3A02                    1208      MOVE.W      D2,D5       *REMOVE
0000086C                          1209  MATCH_CC_MI_8
0000086C  3A02                    1210      MOVE.W      D2,D5       *REMOVE
0000086E                          1211  MATCH_CC_MI_16
0000086E  3A02                    1212      MOVE.W      D2,D5       *REMOVE
00000870                          1213  MATCH_CC_MI_32
00000870  3A02                    1214      MOVE.W      D2,D5       *REMOVE
00000872                          1215  MATCH_CC_GE_8
00000872  3A02                    1216      MOVE.W      D2,D5       *REMOVE
00000874                          1217  MATCH_CC_GE_16
00000874  3A02                    1218      MOVE.W      D2,D5       *REMOVE
00000876                          1219  MATCH_CC_GE_32
00000876  3A02                    1220      MOVE.W      D2,D5       *REMOVE
00000878                          1221  MATCH_CC_LT_8
00000878  3A02                    1222      MOVE.W      D2,D5       *REMOVE
0000087A                          1223  MATCH_CC_LT_16
0000087A  3A02                    1224      MOVE.W      D2,D5       *REMOVE
0000087C                          1225  MATCH_CC_LT_32
0000087C  3A02                    1226      MOVE.W      D2,D5       *REMOVE
0000087E                          1227  MATCH_CC_GT_8
0000087E  3A02                    1228      MOVE.W      D2,D5       *REMOVE
00000880                          1229  MATCH_CC_GT_16
00000880  3A02                    1230      MOVE.W      D2,D5       *REMOVE
00000882                          1231  MATCH_CC_GT_32
00000882  3A02                    1232      MOVE.W      D2,D5       *REMOVE
00000884                          1233  MATCH_CC_LE_8
00000884  3A02                    1234      MOVE.W      D2,D5       *REMOVE
00000886                          1235  MATCH_CC_LE_16
00000886  3A02                    1236      MOVE.W      D2,D5       *REMOVE
00000888                          1237  MATCH_CC_LE_32
00000888  3A02                    1238      MOVE.W      D2,D5       *REMOVE
0000088A                          1239  ERROR
0000088A  3A02                    1240      MOVE.W      D2,D5       *REMOVE
0000088C                          1241  
0000088C                          1242  -------------------- end include --------------------
00001000                          1243  START:  ORG     $1000                
00001000                          1244  
00001000                          1245  * Put program code here
00001000                          1246  *------Code for output-------
00001000                          1247          
00001000  43F9 0000103E           1248          LEA     MESSAGE,A1      *Code block for first message
00001006  103C 000E               1249          MOVE.B  #14,D0
0000100A  4E4F                    1250          TRAP    #15
0000100C                          1251         
0000100C  227C 00004000           1252          MOVEA.L #$4000, A1
00001012  103C 0002               1253          MOVE.B  #2,D0           *Code block for reading input
00001016  4E4F                    1254          TRAP    #15   
00001018  3001                    1255          MOVE.W  D1,D0
0000101A                          1256          
0000101A  2049                    1257          MOVEA.L A1,A0           *Move the contents of A1 to A0 for the conversion
0000101C  4EB8 0000               1258          JSR     A2H             *Branch to Connor's conversion code      
00001020                          1259          
00001020  2040                    1260          MOVEA.L D0,A0
00001022                          1261  loop_start
00001022                          1262          
00001022  3200                    1263          MOVE    D0,D1           *Print out the address we're working on
00001024  343C 0010               1264          MOVE    #16,D2          
00001028  103C 000F               1265          MOVE.B  #15,D0          
0000102C  4E4F                    1266          TRAP    #15
0000102E                          1267          
0000102E  3418                    1268          MOVE.W  (A0)+,D2
00001030  0C42 FFFF               1269          CMPI.W  #$FFFF,D2
00001034  6700 0008               1270          BEQ     Done
00001038                          1271          
00001038  4EB8 01A6               1272          JSR     OpDecoder
0000103C                          1273          
0000103C  60E4                    1274          BRA     loop_start
0000103E                          1275  Done        
0000103E= 45 6E 74 65 72 20 ...   1276  MESSAGE DC.B    'Enter a number: ',0
0000104F                          1277    
0000104F                          1278  
00001050  FFFF FFFF               1279      SIMHALT             ; halt simulator
00001054                          1280  
00001054                          1281  * Put variables and constants here
00001054                          1282  
00001054                          1283      END    START        ; last line of source

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
A2H                 0
ABS_LONG            38
ABS_WORD            39
ADDA_L              7
ADDA_W              3
ADDBYTELOOP         24
ADDBYTES            1C
ADDI_B              18
ADDI_L              1A
ADDI_W              19
ADDQ                5
ADDQ_B              0
ADDQ_L              2
ADDQ_W              1
ADD_ADDA            D
ADD_TO_EA_B         4
ADD_TO_EA_L         6
ADD_TO_EA_W         5
ADD_TO_REG_B        0
ADD_TO_REG_L        2
ADD_TO_REG_W        1
AN                  8
ASL                 383
ASR                 387
BCC                 6
BCC_16              0
BCC_32              FF
CC_CC               4
CC_CS               5
CC_EQ               7
CC_F                1
CC_GE               C
CC_GT               E
CC_HI               2
CC_LE               F
CC_LS               3
CC_LT               D
CC_MI               B
CC_NE               6
CC_PL               A
CC_T                0
CC_VC               8
CC_VS               9
CHECK_ADDI          68C
CHECK_ADDQ          66A
CHECK_ADD_ADDA      614
CHECK_BCC           2AC
CHECK_BCC_16        36C
CHECK_BCC_32        414
CHECK_BCC_8         2C4
CHECK_CMP           4D0
CHECK_DIVU_OR       596
CHECK_MOVEA_L_AND_MOVE_L  71C
CHECK_MOVEA_W_AND_MOVE_W  6F2
CHECK_MOVEM         5E4
CHECK_MOVE_AND_MOVEA_AND_MOVEQ  22E
CHECK_MULS_LEA_CLR_JSR_RTS  4F6
CHECK_MULS_W_AND    548
CHECK_NOP           224
CHECK_SHIFT_AND_ROTATE  1E4
CHECK_SUB           6B2
CLR_B               108
CLR_L               10A
CLR_W               109
CMP                 B
CMP_B               0
CMP_L               2
CMP_W               1
CONV_END            2C
CR                  D
DEC_ABS_LONG        112
DEC_ABS_WORD        106
DEC_AN              12A
DEC_DN              11E
DEC_IMMEDIATE       EA
DEC_INDIRECT        136
DEC_POST_INC        14A
DEC_PRE_DEC         164
DEC_RETURN          CC
DIVU                3
DIVU_OR             8
DN                  0
DN_B                0
DN_L                2
DN_W                1
DONE                103E
EADECODER           66
EADECODER_LEFT      4E
EA_B                4
EA_L                6
EA_W                5
ERROR               88A
IMMEDIATE           3C
IMM_SKIP            E4
IMM_WORD            102
INDIRECT            10
ISOLATE_CC_CODE_FOR_BCC  4BC
ISOLATE_OP_CODE     704
JSR                 13A
LEA                 7
LEFT_SKIP           6A
LF                  A
LOOP_START          1022
LSL                 38F
LSR                 38B
MATCH_ADDA_L        7DA
MATCH_ADDA_W        7D8
MATCH_ADDI_B        7C6
MATCH_ADDI_L        7CA
MATCH_ADDI_W        7C8
MATCH_ADDQ_B        7DC
MATCH_ADDQ_L        7E0
MATCH_ADDQ_W        7DE
MATCH_ADD_TO_EA_B   7D2
MATCH_ADD_TO_EA_L   7D6
MATCH_ADD_TO_EA_W   7D4
MATCH_ADD_TO_REG_B  7CC
MATCH_ADD_TO_REG_L  7D0
MATCH_ADD_TO_REG_W  7CE
MATCH_AND_DN_B      7FE
MATCH_AND_DN_L      802
MATCH_AND_DN_W      800
MATCH_AND_EA_B      804
MATCH_AND_EA_L      808
MATCH_AND_EA_W      806
MATCH_ASL           81E
MATCH_ASR           81C
MATCH_CC_CC_16      844
MATCH_CC_CC_32      846
MATCH_CC_CC_8       842
MATCH_CC_CS_16      84A
MATCH_CC_CS_32      84C
MATCH_CC_CS_8       848
MATCH_CC_EQ_16      856
MATCH_CC_EQ_32      858
MATCH_CC_EQ_8       854
MATCH_CC_F_16       832
MATCH_CC_F_32       834
MATCH_CC_F_8        830
MATCH_CC_GE_16      874
MATCH_CC_GE_32      876
MATCH_CC_GE_8       872
MATCH_CC_GT_16      880
MATCH_CC_GT_32      882
MATCH_CC_GT_8       87E
MATCH_CC_HI_16      838
MATCH_CC_HI_32      83A
MATCH_CC_HI_8       836
MATCH_CC_LE_16      886
MATCH_CC_LE_32      888
MATCH_CC_LE_8       884
MATCH_CC_LS_16      83E
MATCH_CC_LS_32      840
MATCH_CC_LS_8       83C
MATCH_CC_LT_16      87A
MATCH_CC_LT_32      87C
MATCH_CC_LT_8       878
MATCH_CC_MI_16      86E
MATCH_CC_MI_32      870
MATCH_CC_MI_8       86C
MATCH_CC_NE_16      850
MATCH_CC_NE_32      852
MATCH_CC_NE_8       84E
MATCH_CC_PL_16      868
MATCH_CC_PL_32      86A
MATCH_CC_PL_8       866
MATCH_CC_T_16       82C
MATCH_CC_T_32       82E
MATCH_CC_T_8        82A
MATCH_CC_VC_16      85C
MATCH_CC_VC_32      85E
MATCH_CC_VC_8       85A
MATCH_CC_VS_16      862
MATCH_CC_VS_32      864
MATCH_CC_VS_8       860
MATCH_CLR_B         810
MATCH_CLR_L         814
MATCH_CLR_W         812
MATCH_CMP_B         824
MATCH_CMP_L         828
MATCH_CMP_W         826
MATCH_DIVU          7EE
MATCH_JSR           80E
MATCH_LEA           80C
MATCH_LSL           818
MATCH_LSR           81A
MATCH_MOVEA_L       7BA
MATCH_MOVEA_W       7B8
MATCH_MOVEM_TO_MEM_L  7C0
MATCH_MOVEM_TO_MEM_W  7BE
MATCH_MOVEM_TO_REG_L  7C4
MATCH_MOVEM_TO_REG_W  7C2
MATCH_MOVEQ         7BC
MATCH_MOVE_B        73A
MATCH_MOVE_L        7B6
MATCH_MOVE_W        778
MATCH_MULS_L        816
MATCH_MULS_W        7FC
MATCH_NOP           72C
MATCH_OR_DN_B       7F0
MATCH_OR_DN_L       7F4
MATCH_OR_DN_W       7F2
MATCH_OR_EA_B       7F6
MATCH_OR_EA_L       7FA
MATCH_OR_EA_W       7F8
MATCH_ROL           820
MATCH_ROR           822
MATCH_RTS           80A
MATCH_SUB_TO_DN_B   7E2
MATCH_SUB_TO_DN_L   7E6
MATCH_SUB_TO_DN_W   7E4
MATCH_SUB_TO_EA_B   7E8
MATCH_SUB_TO_EA_L   7EC
MATCH_SUB_TO_EA_W   7EA
MESSAGE             103E
MOVEA_WL            1
MOVEM_TO_MEM_L      123
MOVEM_TO_MEM_W      122
MOVEM_TO_REG_L      133
MOVEM_TO_REG_W      132
MOVEQ_              7
MOVE_B              1
MOVE_L              2
MOVE_W              3
MULS_L              130
MULS_LEA_CLR_JSR_RTS  4
MULS_OP_W           7
MULS_W_AND          C
NOP                 4E71
NUMSUB              32
NUMSUBRTN           E
OPDECODER           1A6
OPDEC_RETURN        1BE
OUTPUT              10000
POST_INC            18
PRE_DEC             20
PR_BYTE             182
PR_COMMA            180
PR_LONG             188
PR_MOVE             18F
PR_MOVEA            194
PR_MOVEM            1A0
PR_MOVEQ            19A
PR_NOP              18B
PR_SPACE            17E
PR_WORD             185
READFIRSTFOURBITS   1C4
READFIRSTTENBITS    1D6
ROL                 39F
ROR                 39B
RTS                 4E75
START               1000
SUB                 9
SUB_TO_DN_B         0
SUB_TO_DN_L         2
SUB_TO_DN_W         1
SUB_TO_EA_B         4
SUB_TO_EA_L         6
SUB_TO_EA_W         5
UPSEND              46
UPSUB               3C
UPSUBRTN            16

00001000 Starting Address
Assembler used: EASy68K Editor/Assembler v5.15.04
Created On: 3/8/2017 7:45:54 PM

00000000                             1  *-----------------------------------------------------------
00000000                             2  * Title      :
00000000                             3  * Written by :
00000000                             4  * Date       :
00000000                             5  * Description:
00000000                             6  *-----------------------------------------------------------
00000000  =0000000D                  7  CR      EQU     $0D
00000000  =0000000A                  8  LF      EQU     $0A   
00000000                             9          INCLUDE 'ASCII_HEX_Conversions.x68'
00000000                            10  
00000000                            11  
00000000                            12  
00000000                            13  A2H     *Converts and ASCII Byte string into HEX; Size WORD
00000000  48E7 7FFE                 14          MOVEM.L     D1-D7/A0-A6, -(SP)  
00000004                            15          
00000004  3400                      16          MOVE.W  D0,D2
00000006  3202                      17          MOVE.W  D2,D1                   *Store length of string into D1 for looping
00000008  2248                      18          MOVEA.L A0,A1                   *Copy starting point of string
0000000A                            19  
0000000A  6000 0026                 20          BRA     numSub
0000000E                            21  numSubRTN
0000000E  2049                      22          MOVEA.L A1,A0                   *Restore address position
00000010  3202                      23          MOVE.W  D2,D1                   *Reset loop counter
00000012                            24          
00000012  6000 0028                 25          BRA     upSub
00000016                            26  upSubRTN        
00000016  2049                      27          MOVEA.L A1,A0                   *Restore address position
00000018  3202                      28          MOVE.W  D2,D1                   *Reset loop counter
0000001A  4240                      29          CLR     D0                      *Clear D0
0000001C                            30  addBytes
0000001C  D018                      31          ADD.B   (A0)+,D0
0000001E  5301                      32          SUBI.B  #1,D1
00000020  6700 000A                 33          BEQ     conv_end
00000024                            34  addByteLoop
00000024  E980                      35          ASL.L   #4,D0
00000026  D018                      36          ADD.B   (A0)+,D0
00000028  5301                      37          SUBI.B  #1,D1
0000002A  66F8                      38          BNE     addByteLoop
0000002C                            39  conv_end
0000002C  4CDF 7FFE                 40          MOVEM.L     (SP)+, D1-D7/A0-A6
00000030  4E75                      41          RTS
00000032                            42          
00000032                            43  numSub  *Convert ASCII 'number' to true number byte; Should not be called outside of the A2H subroutines
00000032  0418 0030                 44          SUBI.B  #$30,(A0)+              *Subtract difference between null ASCII and '0' ASCII
00000036  5341                      45          SUB.W   #1,D1                   *Decrement loop counter
00000038  66F8                      46          BNE     numSub                  *If loop has not ended restart
0000003A  60D2                      47          BRA     numSubRTN
0000003C                            48  
0000003C                            49  upSub   *Loops through string to remove any upper case characters 
0000003C                            50          *that may remain in the string
0000003C  0C10 0009                 51          CMPI.B  #9,(A0)                 *Check if the value is greater than 0-9
00000040  6F00 0004                 52          BLE     upSEnd                  *If it's not, continue loop
00000044  5310                      53          SUBI.B  #1,(A0)                 *Otherwise, subtract difference between ASCII 'number' code and 'A' code
00000046                            54  upSEnd
00000046  5248                      55          ADDA.W  #1,A0                   *Increment to next position to check for uppercase
00000048  5341                      56          SUB.W   #1,D1                   *Decrement loop counter
0000004A  66F0                      57          BNE     upSub                   
0000004C  60C8                      58          BRA     upSubRTN
0000004E                            59  
0000004E                            60  
0000004E                            61  -------------------- end include --------------------
0000004E                            62          INCLUDE 'opcodes.x68'
0000004E                            63                  INCLUDE 'EADecoder.x68'
0000004E                            64  
0000004E                            65  
0000004E  =00010000                 66  output      EQU $00010000
0000004E                            67  
0000004E  =0000003C                 68  IMMEDIATE   EQU %00111100
0000004E  =00000038                 69  ABS_WORD    EQU %00111000
0000004E  =00000039                 70  ABS_LONG    EQU %00111001
0000004E  =00000000                 71  Dn          EQU %00000000
0000004E  =00000008                 72  An          EQU %00001000
0000004E  =00000010                 73  INDIRECT    EQU %00010000
0000004E  =00000018                 74  POST_INC    EQU %00011000
0000004E  =00000020                 75  PRE_DEC     EQU %00100000
0000004E                            76  
0000004E                            77  
0000004E                            78  
0000004E                            79  EADecoder_left
0000004E  48E7 FF7E                 80          MOVEM.L     D0-D7/A1-A6, -(SP)
00000052                            81          
00000052                            82          ** Swap the mode and register bits
00000052  1800                      83          MOVE.B  D0,D4
00000054  0200 0007                 84          ANDI.B  #%00000111,D0       * Mask mode
00000058  0204 0038                 85          ANDI.B  #%00111000,D4       * Mask register
0000005C  E708                      86          LSL.B   #3,D0               * Move mode bits over
0000005E  E60C                      87          LSR.B   #3,D4               * Move register bits over
00000060  8004                      88          OR.B    D4,D0               * Recombine
00000062                            89          
00000062  6000 0006                 90          BRA     left_skip
00000066                            91  
00000066                            92  EADecoder
00000066  48E7 FF7E                 93          MOVEM.L     D0-D7/A1-A6, -(SP) *Store registers on stack, except D0
0000006A                            94  left_skip   
0000006A  4242                      95          CLR     D2     
0000006C  1401                      96          MOVE.B  D1,D2 ** Store opcode size in bytes into D2
0000006E                            97          
0000006E  43F9 00010000             98          LEA     output,A1
00000074  45F9 00010000             99          LEA     output,A2
0000007A                           100          
0000007A                           101          *First, decoder will check for the 3 types with hard coded register values
0000007A  163C 0001                102          MOVE.B  #1,D3
0000007E  B07C 003C                103          CMP     #IMMEDIATE,D0
00000082  6700 0068                104          BEQ     dec_immediate
00000086                           105          
00000086  B07C 0038                106          CMP     #ABS_WORD,D0
0000008A  6700 007C                107          BEQ     dec_abs_word
0000008E                           108          
0000008E  B07C 0039                109          CMP     #ABS_LONG,D0
00000092  6700 0080                110          BEQ     dec_abs_long
00000096                           111          
00000096                           112          *If it was none of the above, store the register and mode seperately
00000096  4243                     113          CLR     D3
00000098  1200                     114          MOVE.B  D0,D1
0000009A  0201 0038                115          ANDI.B  #%00111000,D1           *Get mode value
0000009E  0200 0007                116          ANDI.B  #%00000111,D0           *Get register value
000000A2  0600 0030                117          ADDI.B  #$30,D0
000000A6                           118                
000000A6  B27C 0000                119          CMP     #Dn,D1
000000AA  6700 0074                120          BEQ     dec_Dn 
000000AE                           121          
000000AE  B27C 0008                122          CMP     #An,D1
000000B2  6700 0078                123          BEQ     dec_An
000000B6                           124                  
000000B6  B27C 0010                125          CMP     #INDIRECT,D1
000000BA  6700 007C                126          BEQ     dec_indirect
000000BE                           127                  
000000BE  B27C 0018                128          CMP     #POST_INC,D1
000000C2  6700 0088                129          BEQ     dec_post_inc
000000C6                           130                  
000000C6  B27C 0020                131          CMP     #PRE_DEC,D1
000000CA  6700 009A                132          BEQ     dec_pre_dec
000000CE                           133  
000000CE                           134  dec_return ** Common return for all types
000000CE                           135          
000000CE                           136          ** Print display string
000000CE  103C 000E                137          MOVE.B  #14,D0
000000D2  4E4F                     138          TRAP    #15
000000D4                           139          
000000D4                           140          ** If there is immediate data to print, print it
000000D4  B67C 0001                141          CMP     #1,D3
000000D8  6600 000C                142          BNE     imm_skip
000000DC                           143          
000000DC  103C 000F                144          MOVE.B  #15,D0
000000E0  143C 0010                145          MOVE.B  #16,D2
000000E4  4E4F                     146          TRAP    #15
000000E6                           147  
000000E6                           148  imm_skip
000000E6  4CDF 7EFF                149          MOVEM.L     (SP)+, D0-D7/A1-A6 *Return register data from stack, except D0
000000EA  4E75                     150          RTS
000000EC                           151          
000000EC                           152          * Individual EA decoders *
000000EC                           153  
000000EC                           154  dec_immediate   *DECODE IMMEDIATE VALUE*
000000EC  14FC 0023                155          MOVE.B  #'#',(A2)+  * Move '#' char into string
000000F0  14FC 0024                156          MOVE.B  #'$',(A2)+  * Move '$' char into string
000000F4  14FC 0000                157          MOVE.B  #$0,(A2)+   * Null terminate string
000000F8  B47C 0002                158          CMP     #2,D2       * Check if data is word length
000000FC  6700 0006                159          BEQ     imm_word    
00000100                           160          
00000100  2218                     161          MOVE.L  (A0)+,D1    * Length was long
00000102  60CA                     162          BRA     dec_return
00000104                           163          
00000104                           164  imm_word
00000104  3218                     165          MOVE.W  (A0)+,D1    * Length was word
00000106  60C6                     166          BRA     dec_return
00000108                           167  
00000108                           168  
00000108                           169  dec_abs_word    *DECODE ABSOLUTE WORD*
00000108  14FC 0024                170          MOVE.B  #'$',(A2)+  * Move '$' char into string
0000010C  14FC 0000                171          MOVE.B  #$0,(A2)+   * Null terminate string
00000110  3218                     172          MOVE.W  (A0)+,D1
00000112  60BA                     173          BRA     dec_return
00000114                           174          
00000114                           175  
00000114                           176  dec_abs_long    *DECODE ABSOLUTE LONG*
00000114  14FC 0024                177          MOVE.B  #'$',(A2)+  * Move '$' char into string
00000118  14FC 0000                178          MOVE.B  #$0,(A2)+   * Null terminate string
0000011C  2218                     179          MOVE.L  (A0)+,D1
0000011E  60AE                     180          BRA     dec_return
00000120                           181          
00000120                           182  
00000120                           183  dec_Dn          *DECODE DIRECT DATA*
00000120  14FC 0044                184          MOVE.B  #'D',(A2)+
00000124  14C0                     185          MOVE.B  D0,(A2)+
00000126  14FC 0000                186          MOVE.B  #$0,(A2)+
0000012A  60A2                     187          BRA     dec_return
0000012C                           188  
0000012C                           189          
0000012C                           190  dec_An          *DECODE DIRECT ADDRESS*
0000012C  14FC 0041                191          MOVE.B  #'A',(A2)+
00000130  14C0                     192          MOVE.B  D0,(A2)+
00000132  14FC 0000                193          MOVE.B  #$0,(A2)+
00000136  6096                     194          BRA     dec_return
00000138                           195  
00000138                           196  
00000138                           197  dec_indirect    *DECODE INDIRECT ACCESS*
00000138  14FC 0028                198          MOVE.B  #'(',(A2)+
0000013C  14FC 0041                199          MOVE.B  #'A',(A2)+
00000140  14C0                     200          MOVE.B  D0,(A2)+
00000142  14FC 0029                201          MOVE.B  #')',(A2)+
00000146  14FC 0000                202          MOVE.B  #$0,(A2)+
0000014A  6082                     203          BRA     dec_return
0000014C                           204          
0000014C                           205  
0000014C                           206  dec_post_inc    *DECODE INDIRECT POST INCREMENT*
0000014C  14FC 0028                207          MOVE.B  #'(',(A2)+
00000150  14FC 0041                208          MOVE.B  #'A',(A2)+
00000154  14C0                     209          MOVE.B  D0,(A2)+
00000156  14FC 0029                210          MOVE.B  #')',(A2)+
0000015A  14FC 002B                211          MOVE.B  #'+',(A2)+
0000015E  14FC 0000                212          MOVE.B  #$0,(A2)+
00000162  6000 FF6A                213          BRA     dec_return
00000166                           214          
00000166                           215          
00000166                           216  dec_pre_dec    *DECODE INDIRECT PRE DECREMENT*
00000166  14FC 002D                217          MOVE.B  #'-',(A2)+
0000016A  14FC 0028                218          MOVE.B  #'(',(A2)+
0000016E  14FC 0041                219          MOVE.B  #'A',(A2)+
00000172  14C0                     220          MOVE.B  D0,(A2)+
00000174  14FC 0029                221          MOVE.B  #')',(A2)+
00000178  14FC 0000                222          MOVE.B  #$0,(A2)+
0000017C  6000 FF50                223          BRA     dec_return
00000180                           224  
00000180                           225  
00000180                           226  
00000180                           227  
00000180                           228  
00000180                           229  
00000180                           230  
00000180                           231  -------------------- end include --------------------
00000180                           232                  INCLUDE 'connor_opcodes.x68'
00000180                           233  
00000180                           234  MATCH_NOP
00000180  43F9 00000229            235      LEA         pr_NOP,A1
00000186  103C 000E                236      MOVE.B      #14,D0
0000018A  4E4F                     237      TRAP        #15
0000018C  6000 00D0                238      BRA         opdec_return
00000190                           239      
00000190                           240  MATCH_MOVE_B
00000190                           241      ** Move command size into D1
00000190  123C 0002                242      MOVE.B      #2,D1
00000194                           243      ** Print command
00000194  103C 000E                244      MOVE.B      #14,D0
00000198  43F9 0000022D            245      LEA         pr_MOVE,A1
0000019E  4E4F                     246      TRAP        #15
000001A0                           247      ** Print size
000001A0  43F9 00000220            248      LEA         pr_BYTE,A1
000001A6  4E4F                     249      TRAP        #15
000001A8                           250      ** Print space
000001A8  43F9 0000021C            251      LEA         pr_space,A1
000001AE  4E4F                     252      TRAP        #15
000001B0                           253      ** Decode right side ea
000001B0  1002                     254      MOVE.B      D2,D0
000001B2  0200 003F                255      ANDI.B      #%00111111,D0
000001B6  4EB8 0066                256      JSR         EADecoder
000001BA                           257      ** Add comma
000001BA  103C 000E                258      MOVE.B      #14,D0
000001BE  43F9 0000021E            259      LEA         pr_comma,A1
000001C4  4E4F                     260      TRAP        #15
000001C6                           261      ** Decode left side ea
000001C6  3002                     262      MOVE.W      D2,D0
000001C8  0240 0FC0                263      ANDI.W      #%0000111111000000,D0
000001CC  EC48                     264      LSR.W       #6,D0
000001CE  4EB8 004E                265      JSR         EADecoder_left
000001D2                           266      
000001D2  6000 008A                267      BRA         opdec_return
000001D6                           268      
000001D6                           269  MATCH_MOVE_W
000001D6                           270      ** Move command size into D1
000001D6  123C 0002                271      MOVE.B      #2,D1
000001DA                           272      ** Print command
000001DA  103C 000E                273      MOVE.B      #14,D0
000001DE  43F9 0000022D            274      LEA         pr_MOVE,A1
000001E4  4E4F                     275      TRAP        #15
000001E6                           276      ** Print size
000001E6  43F9 00000223            277      LEA         pr_WORD,A1
000001EC  4E4F                     278      TRAP        #15
000001EE                           279      ** Print space
000001EE  43F9 0000021C            280      LEA         pr_space,A1
000001F4  4E4F                     281      TRAP        #15
000001F6                           282      ** Decode right side ea
000001F6  1002                     283      MOVE.B      D2,D0
000001F8  0200 003F                284      ANDI.B      #%00111111,D0
000001FC  4EB8 0066                285      JSR         EADecoder
00000200                           286      ** Add comma
00000200  103C 000E                287      MOVE.B      #14,D0
00000204  43F9 0000021E            288      LEA         pr_comma,A1
0000020A  4E4F                     289      TRAP        #15
0000020C                           290      ** Decode left side ea
0000020C  3002                     291      MOVE.W      D2,D0
0000020E  0240 0FC0                292      ANDI.W      #%0000111111000000,D0
00000212  EC48                     293      LSR.W       #6,D0
00000214  4EB8 004E                294      JSR         EADecoder_left
00000218                           295      
00000218  6000 0044                296      BRA         opdec_return
0000021C                           297  
0000021C                           298  -------------------- end include --------------------
0000021C                           299  
0000021C  =00004E71                300  NOP             EQU $4E71
0000021C  =00000001                301  MOVE_B          EQU %0001
0000021C  =00000003                302  MOVE_W          EQU %0011
0000021C  =00000002                303  MOVE_L          EQU %0010
0000021C  =00000001                304  MOVEA_WL        EQU %001 
0000021C  =00000007                305  MOVEQ_          EQU %0111
0000021C  =00000122                306  MOVEM_TO_MEM_W  EQU %0100100010
0000021C  =00000123                307  MOVEM_TO_MEM_L  EQU %0100100011
0000021C  =00000132                308  MOVEM_TO_REG_W  EQU %0100110010
0000021C  =00000133                309  MOVEM_TO_REG_L  EQU %0100110011
0000021C                           310  
0000021C  =00000018                311  ADDI_B          EQU %0000011000
0000021C  =00000019                312  ADDI_W          EQU %0000011001
0000021C  =0000001A                313  ADDI_L          EQU %0000011010
0000021C                           314  
0000021C  =0000000D                315  ADD_ADDA        EQU %1101
0000021C  =00000000                316  ADD_TO_REG_B    EQU %000
0000021C  =00000001                317  ADD_TO_REG_W    EQU %001
0000021C  =00000002                318  ADD_TO_REG_L    EQU %010
0000021C  =00000004                319  ADD_TO_EA_B     EQU %100
0000021C  =00000005                320  ADD_TO_EA_W     EQU %101
0000021C  =00000006                321  ADD_TO_EA_L     EQU %110
0000021C  =00000003                322  ADDA_W          EQU %011
0000021C  =00000007                323  ADDA_L          EQU %111
0000021C                           324  
0000021C  =00000005                325  ADDQ            EQU %0101
0000021C  =00000000                326  ADDQ_B          EQU %000
0000021C  =00000001                327  ADDQ_W          EQU %001
0000021C  =00000002                328  ADDQ_L          EQU %010
0000021C                           329  
0000021C  =0000000C                330  MULS_W_AND      EQU %1100
0000021C  =00000007                331  MULS_OP_W       EQU %111 
0000021C                           332  
0000021C  =00000009                333  SUB             EQU %1001
0000021C  =00000000                334  SUB_TO_DN_B     EQU %000
0000021C  =00000001                335  SUB_TO_DN_W     EQU %001
0000021C  =00000002                336  SUB_TO_DN_L     EQU %010
0000021C  =00000004                337  SUB_TO_EA_B     EQU %100
0000021C  =00000005                338  SUB_TO_EA_W     EQU %101
0000021C  =00000006                339  SUB_TO_EA_L     EQU %110
0000021C                           340  
0000021C  =00000008                341  DIVU_OR         EQU %1000
0000021C  =00000003                342  DIVU            EQU %011
0000021C                           343  
0000021C  =00000000                344  DN_B            EQU %000
0000021C  =00000001                345  DN_W            EQU %001
0000021C  =00000002                346  DN_L            EQU %010
0000021C  =00000004                347  EA_B            EQU %100
0000021C  =00000005                348  EA_W            EQU %101
0000021C  =00000006                349  EA_L            EQU %110
0000021C                           350  
0000021C  =00000004                351  MULS_LEA_CLR_JSR_RTS    EQU %0100
0000021C  =00004E75                352  RTS             EQU $4E75
0000021C  =00000007                353  LEA             EQU %111
0000021C  =0000013A                354  JSR             EQU %0100111010
0000021C  =00000108                355  CLR_B           EQU %0100001000
0000021C  =00000109                356  CLR_W           EQU %0100001001
0000021C  =0000010A                357  CLR_L           EQU %0100001010
0000021C  =00000130                358  MULS_L          EQU %0100110000
0000021C                           359  
0000021C  =0000038F                360  LSL             EQU %1110001111
0000021C  =0000038B                361  LSR             EQU %1110001011
0000021C  =00000387                362  ASR             EQU %1110000111
0000021C  =00000383                363  ASL             EQU %1110000011
0000021C  =0000039F                364  ROL             EQU %1110011111
0000021C  =0000039B                365  ROR             EQU %1110011011
0000021C                           366  
0000021C  =0000000B                367  CMP             EQU %1011
0000021C  =00000000                368  CMP_B           EQU %000
0000021C  =00000001                369  CMP_W           EQU %001
0000021C  =00000002                370  CMP_L           EQU %010
0000021C                           371  
0000021C  =00000006                372  BCC             EQU %0110
0000021C  =00000000                373  BCC_16          EQU %00000000
0000021C  =000000FF                374  BCC_32          EQU $FF
0000021C  =00000000                375  CC_T            EQU %0000
0000021C  =00000001                376  CC_F            EQU %0001
0000021C  =00000002                377  CC_HI           EQU %0010
0000021C  =00000003                378  CC_LS           EQU %0011
0000021C  =00000004                379  CC_CC           EQU %0100
0000021C  =00000005                380  CC_CS           EQU %0101
0000021C  =00000006                381  CC_NE           EQU %0110
0000021C  =00000007                382  CC_EQ           EQU %0111
0000021C  =00000008                383  CC_VC           EQU %1000
0000021C  =00000009                384  CC_VS           EQU %1001
0000021C  =0000000A                385  CC_PL           EQU %1010
0000021C  =0000000B                386  CC_MI           EQU %1011
0000021C  =0000000C                387  CC_GE           EQU %1100
0000021C  =0000000D                388  CC_LT           EQU %1101
0000021C  =0000000E                389  CC_GT           EQU %1110
0000021C  =0000000F                390  CC_LE           EQU %1111
0000021C                           391  
0000021C= 20 00                    392  pr_space    DC.B    ' ',0
0000021E= 2C 00                    393  pr_comma    DC.B    ',',0
00000220= 2E 42 00                 394  pr_BYTE     DC.B    '.B',0
00000223= 2E 57 00                 395  pr_WORD     DC.B    '.W',0
00000226= 2E 4C 00                 396  pr_LONG     DC.B    '.L',0
00000229                           397  
00000229= 4E 4F 50 00              398  pr_NOP      DC.B    'NOP',0
0000022D= 4D 4F 56 45 00           399  pr_MOVE     DC.B    'MOVE',0
00000232= 4D 4F 56 45 41 00        400  pr_MOVEA    DC.B    'MOVEA',0
00000238= 4D 4F 56 45 51 00        401  pr_MOVEQ    DC.B    'MOVEQ',0
0000023E= 4D 4F 56 45 4D 00        402  pr_MOVEM    DC.B    'MOVEM',0
00000244                           403  
00000244                           404  
00000244                           405  
00000244                           406  
00000244                           407  OpDecoder
00000244  48E7 FF7E                408      MOVEM.L     D0-D7/A1-A6, -(SP)
00000248  4241                     409      CLR         D1
0000024A  6000 0078                410      BRA         CHECK_NOP
0000024E  6000 007E                411      BRA         CHECK_MOVE_AND_MOVEA_AND_MOVEQ
00000252  6000 0430                412      BRA         Check_MOVEM
00000256  6000 04D4                413      BRA         Check_ADDI
0000025A  6000 0028                414      BRA         CHECK_SHIFT_AND_ROTATE
0000025E                           415      
0000025E                           416  opdec_return
0000025E  4CDF 7EFF                417      MOVEM.L     (SP)+, D0-D7/A1-A6
00000262  4E75                     418      RTS
00000264                           419  
00000264                           420  ReadFirstFourBits
00000264                           421  
00000264  48A7 2000                422      MOVEM.W     D2, -(SP)
00000268                           423  
00000268  1E3C 000C                424      MOVE.B      #12,D7 
0000026C  EE6A                     425      LSR.W       D7,D2 
0000026E  1602                     426      MOVE.B      D2,D3
00000270                           427      
00000270  4C9F 0004                428      MOVEM.W     (SP)+,D2
00000274  4E75                     429      RTS
00000276                           430      
00000276                           431  ReadFirstTenBits
00000276                           432      
00000276  48A7 2000                433      MOVEM.W     D2, -(SP)
0000027A                           434   
0000027A  EC4A                     435      LSR.W       #6,D2 
0000027C  3602                     436      MOVE.W      D2,D3
0000027E                           437      
0000027E  4C9F 0004                438      MOVEM.W     (SP)+,D2
00000282  4E75                     439      RTS
00000284                           440  CHECK_SHIFT_AND_ROTATE
00000284                           441  
00000284  61F0                     442      BSR         ReadFirstTenBits
00000286                           443      
00000286  3C3C 038F                444      MOVE.W      #LSL,D6
0000028A  BC43                     445      CMP.W       D3,D6
0000028C  6700 05A0                446      BEQ         MATCH_LSL
00000290                           447      
00000290  3C3C 038B                448      MOVE.W      #LSR,D6
00000294  BC43                     449      CMP.W       D3,D6
00000296  6700 0598                450      BEQ         MATCH_LSR
0000029A                           451      
0000029A  3C3C 0387                452      MOVE.W      #ASR,D6
0000029E  BC43                     453      CMP.W       D3,D6
000002A0  6700 0590                454      BEQ         MATCH_ASR
000002A4                           455      
000002A4  3C3C 0383                456      MOVE.W      #ASL,D6
000002A8  BC43                     457      CMP.W       D3,D6
000002AA  6700 0588                458      BEQ         MATCH_ASL
000002AE                           459      
000002AE  3C3C 039F                460      MOVE.W      #ROL,D6
000002B2  BC43                     461      CMP.W       D3,D6
000002B4  6700 0580                462      BEQ         MATCH_ROL
000002B8                           463      
000002B8  3C3C 039B                464      MOVE.W      #ROR,D6
000002BC  BC43                     465      CMP.W       D3,D6
000002BE  6700 0578                466      BEQ         MATCH_ROR
000002C2                           467      
000002C2  609A                     468      BRA         opdec_return
000002C4                           469      
000002C4                           470  CHECK_NOP
000002C4                           471      
000002C4  3C3C 4E71                472      MOVE.W      #NOP,D6
000002C8  BC42                     473      CMP.W       D2,D6
000002CA  6700 FEB4                474      BEQ         MATCH_NOP
000002CE                           475  
000002CE                           476  CHECK_MOVE_AND_MOVEA_AND_MOVEQ
000002CE                           477  
000002CE  6194                     478      BSR     ReadFirstFourBits
000002D0                           479      
000002D0  1C3C 0001                480      MOVE.B      #MOVE_B,D6
000002D4  BC03                     481      CMP.B       D3,D6
000002D6  6700 FEB8                482      BEQ         MATCH_MOVE_B
000002DA                           483      
000002DA  1C3C 0003                484      MOVE.B      #MOVE_W,D6
000002DE  BC03                     485      CMP.B       D3,D6
000002E0  6700 04B0                486      BEQ         CHECK_MOVEA_W_AND_MOVE_W
000002E4                           487      
000002E4  1C3C 0002                488      MOVE.B      #MOVE_L,D6
000002E8  BC03                     489      CMP.B       D3,D6
000002EA  6700 04D0                490      BEQ         CHECK_MOVEA_L_AND_MOVE_L
000002EE                           491   
000002EE  1C3C 0007                492      MOVE.B      #MOVEQ_,D6
000002F2  BC03                     493      CMP.B       D3,D6
000002F4  6700 04DC                494      BEQ         MATCH_MOVEQ
000002F8                           495      
000002F8  1C3C 000D                496      MOVE.B      #ADD_ADDA,D6
000002FC  BC03                     497      CMP.B       D3,D6
000002FE  6700 03B4                498      BEQ         CHECK_ADD_ADDA
00000302                           499      
00000302  1C3C 0005                500      MOVE.B      #ADDQ,D6
00000306  BC03                     501      CMP.B       D3,D6
00000308  6700 0400                502      BEQ         CHECK_ADDQ
0000030C                           503      
0000030C  1C3C 0009                504      MOVE.B      #SUB,D6
00000310  BC03                     505      CMP.B       D3,D6
00000312  6700 043E                506      BEQ         CHECK_SUB
00000316                           507      
00000316  1C3C 0008                508      MOVE.B      #DIVU_OR,D6
0000031A  BC03                     509      CMP.B       D3,D6
0000031C  6700 0318                510      BEQ         CHECK_DIVU_OR
00000320                           511      
00000320  1C3C 000C                512      MOVE.B      #MULS_W_AND,D6
00000324  BC03                     513      CMP.B       D3,D6
00000326  6700 02C0                514      BEQ         CHECK_MULS_W_AND
0000032A                           515      
0000032A  1C3C 0004                516      MOVE.B      #MULS_LEA_CLR_JSR_RTS,D6
0000032E  BC03                     517      CMP.B       D3,D6
00000330  6700 0264                518      BEQ         CHECK_MULS_LEA_CLR_JSR_RTS
00000334                           519      
00000334  1C3C 000B                520      MOVE.B      #CMP,D6
00000338  BC03                     521      CMP.B       D3,D6
0000033A  6700 0234                522      BEQ         CHECK_CMP
0000033E                           523      
0000033E  1C3C 0006                524      MOVE.B      #BCC,D6
00000342  BC03                     525      CMP.B       D3,D6
00000344  6700 0006                526      BEQ         CHECK_BCC
00000348                           527      
00000348  6000 FF14                528      BRA         opdec_return
0000034C                           529  CHECK_BCC
0000034C                           530      
0000034C  1C3C 0000                531      MOVE.B      #BCC_16,D6
00000350  BC02                     532      CMP.B       D2,D6
00000352  6700 00B8                533      BEQ         CHECK_BCC_16
00000356                           534      
00000356  1C3C 00FF                535      MOVE.B      #BCC_32,D6
0000035A  BC02                     536      CMP.B       D2,D6
0000035C  6700 0156                537      BEQ         CHECK_BCC_32
00000360                           538      
00000360  6000 0002                539      BRA         CHECK_BCC_8
00000364                           540      
00000364                           541  CHECK_BCC_8
00000364                           542      
00000364  6100 01F6                543      BSR         ISOLATE_CC_CODE_FOR_BCC
00000368                           544      
00000368  1C3C 0000                545      MOVE.B      #CC_T,D6
0000036C  BC03                     546      CMP.B       D3,D6
0000036E  6700 04D0                547      BEQ         MATCH_CC_T_8
00000372                           548      
00000372  1C3C 0001                549      MOVE.B      #CC_F,D6
00000376  BC03                     550      CMP.B       D3,D6
00000378  6700 04CC                551      BEQ         MATCH_CC_F_8
0000037C                           552      
0000037C  1C3C 0002                553      MOVE.B      #CC_HI,D6
00000380  BC03                     554      CMP.B       D3,D6
00000382  6700 04C8                555      BEQ         MATCH_CC_HI_8
00000386                           556      
00000386  1C3C 0003                557      MOVE.B      #CC_LS,D6
0000038A  BC03                     558      CMP.B       D3,D6
0000038C  6700 04C4                559      BEQ         MATCH_CC_LS_8
00000390                           560      
00000390  1C3C 0004                561      MOVE.B      #CC_CC,D6
00000394  BC03                     562      CMP.B       D3,D6
00000396  6700 04C0                563      BEQ         MATCH_CC_CC_8
0000039A                           564      
0000039A  1C3C 0005                565      MOVE.B      #CC_CS,D6
0000039E  BC03                     566      CMP.B       D3,D6
000003A0  6700 04BC                567      BEQ         MATCH_CC_CS_8
000003A4                           568      
000003A4  1C3C 0006                569      MOVE.B      #CC_NE,D6
000003A8  BC03                     570      CMP.B       D3,D6
000003AA  6700 04B8                571      BEQ         MATCH_CC_NE_8
000003AE                           572      
000003AE  1C3C 0007                573      MOVE.B      #CC_EQ,D6
000003B2  BC03                     574      CMP.B       D3,D6
000003B4  6700 04B4                575      BEQ         MATCH_CC_EQ_8
000003B8                           576      
000003B8  1C3C 0008                577      MOVE.B      #CC_VC,D6
000003BC  BC03                     578      CMP.B       D3,D6
000003BE  6700 04B0                579      BEQ         MATCH_CC_VC_8
000003C2                           580      
000003C2  1C3C 0009                581      MOVE.B      #CC_VS,D6
000003C6  BC03                     582      CMP.B       D3,D6
000003C8  6700 04AC                583      BEQ         MATCH_CC_VS_8
000003CC                           584      
000003CC  1C3C 000A                585      MOVE.B      #CC_PL,D6
000003D0  BC03                     586      CMP.B       D3,D6
000003D2  6700 04A8                587      BEQ         MATCH_CC_PL_8
000003D6                           588      
000003D6  1C3C 000B                589      MOVE.B      #CC_MI,D6
000003DA  BC03                     590      CMP.B       D3,D6
000003DC  6700 04A4                591      BEQ         MATCH_CC_MI_8
000003E0                           592      
000003E0  1C3C 000C                593      MOVE.B      #CC_GE,D6
000003E4  BC03                     594      CMP.B       D3,D6
000003E6  6700 04A0                595      BEQ         MATCH_CC_GE_8
000003EA                           596      
000003EA  1C3C 000D                597      MOVE.B      #CC_LT,D6
000003EE  BC03                     598      CMP.B       D3,D6
000003F0  6700 049C                599      BEQ         MATCH_CC_LT_8
000003F4                           600      
000003F4  1C3C 000E                601      MOVE.B      #CC_GT,D6
000003F8  BC03                     602      CMP.B       D3,D6
000003FA  6700 0498                603      BEQ         MATCH_CC_GT_8
000003FE                           604      
000003FE  1C3C 000F                605      MOVE.B      #CC_LE,D6
00000402  BC03                     606      CMP.B       D3,D6
00000404  6700 0494                607      BEQ         MATCH_CC_LE_8
00000408                           608  
00000408  6000 0496                609      BRA         ERROR
0000040C                           610      
0000040C                           611  CHECK_BCC_16
0000040C                           612  
0000040C  6100 014E                613      BSR         ISOLATE_CC_CODE_FOR_BCC
00000410                           614      
00000410  1C3C 0000                615      MOVE.B      #CC_T,D6
00000414  BC03                     616      CMP.B       D3,D6
00000416  6700 042A                617      BEQ         MATCH_CC_T_16
0000041A                           618      
0000041A  1C3C 0001                619      MOVE.B      #CC_F,D6
0000041E  BC03                     620      CMP.B       D3,D6
00000420  6700 0426                621      BEQ         MATCH_CC_F_16
00000424                           622      
00000424  1C3C 0002                623      MOVE.B      #CC_HI,D6
00000428  BC03                     624      CMP.B       D3,D6
0000042A  6700 0422                625      BEQ         MATCH_CC_HI_16
0000042E                           626      
0000042E  1C3C 0003                627      MOVE.B      #CC_LS,D6
00000432  BC03                     628      CMP.B       D3,D6
00000434  6700 041E                629      BEQ         MATCH_CC_LS_16
00000438                           630      
00000438  1C3C 0004                631      MOVE.B      #CC_CC,D6
0000043C  BC03                     632      CMP.B       D3,D6
0000043E  6700 041A                633      BEQ         MATCH_CC_CC_16
00000442                           634      
00000442  1C3C 0005                635      MOVE.B      #CC_CS,D6
00000446  BC03                     636      CMP.B       D3,D6
00000448  6700 0416                637      BEQ         MATCH_CC_CS_16
0000044C                           638      
0000044C  1C3C 0006                639      MOVE.B      #CC_NE,D6
00000450  BC03                     640      CMP.B       D3,D6
00000452  6700 0412                641      BEQ         MATCH_CC_NE_16
00000456                           642      
00000456  1C3C 0007                643      MOVE.B      #CC_EQ,D6
0000045A  BC03                     644      CMP.B       D3,D6
0000045C  6700 040E                645      BEQ         MATCH_CC_EQ_16
00000460                           646      
00000460  1C3C 0008                647      MOVE.B      #CC_VC,D6
00000464  BC03                     648      CMP.B       D3,D6
00000466  6700 040A                649      BEQ         MATCH_CC_VC_16
0000046A                           650      
0000046A  1C3C 0009                651      MOVE.B      #CC_VS,D6
0000046E  BC03                     652      CMP.B       D3,D6
00000470  6700 0406                653      BEQ         MATCH_CC_VS_16
00000474                           654      
00000474  1C3C 000A                655      MOVE.B      #CC_PL,D6
00000478  BC03                     656      CMP.B       D3,D6
0000047A  6700 0402                657      BEQ         MATCH_CC_PL_16
0000047E                           658      
0000047E  1C3C 000B                659      MOVE.B      #CC_MI,D6
00000482  BC03                     660      CMP.B       D3,D6
00000484  6700 03FE                661      BEQ         MATCH_CC_MI_16
00000488                           662      
00000488  1C3C 000C                663      MOVE.B      #CC_GE,D6
0000048C  BC03                     664      CMP.B       D3,D6
0000048E  6700 03FA                665      BEQ         MATCH_CC_GE_16
00000492                           666      
00000492  1C3C 000D                667      MOVE.B      #CC_LT,D6
00000496  BC03                     668      CMP.B       D3,D6
00000498  6700 03F6                669      BEQ         MATCH_CC_LT_16
0000049C                           670      
0000049C  1C3C 000E                671      MOVE.B      #CC_GT,D6
000004A0  BC03                     672      CMP.B       D3,D6
000004A2  6700 03F2                673      BEQ         MATCH_CC_GT_16
000004A6                           674      
000004A6  1C3C 000F                675      MOVE.B      #CC_LE,D6
000004AA  BC03                     676      CMP.B       D3,D6
000004AC  6700 03EE                677      BEQ         MATCH_CC_LE_16
000004B0                           678  
000004B0  6000 03EE                679      BRA         ERROR
000004B4                           680  
000004B4                           681  CHECK_BCC_32  
000004B4                           682  
000004B4  6100 00A6                683      BSR         ISOLATE_CC_CODE_FOR_BCC 
000004B8                           684      
000004B8  1C3C 0000                685      MOVE.B      #CC_T,D6
000004BC  BC03                     686      CMP.B       D3,D6
000004BE  6700 0384                687      BEQ         MATCH_CC_T_32
000004C2                           688      
000004C2  1C3C 0001                689      MOVE.B      #CC_F,D6
000004C6  BC03                     690      CMP.B       D3,D6
000004C8  6700 0380                691      BEQ         MATCH_CC_F_32
000004CC                           692      
000004CC  1C3C 0002                693      MOVE.B      #CC_HI,D6
000004D0  BC03                     694      CMP.B       D3,D6
000004D2  6700 037C                695      BEQ         MATCH_CC_HI_32
000004D6                           696      
000004D6  1C3C 0003                697      MOVE.B      #CC_LS,D6
000004DA  BC03                     698      CMP.B       D3,D6
000004DC  6700 0378                699      BEQ         MATCH_CC_LS_32
000004E0                           700      
000004E0  1C3C 0004                701      MOVE.B      #CC_CC,D6
000004E4  BC03                     702      CMP.B       D3,D6
000004E6  6700 0374                703      BEQ         MATCH_CC_CC_32
000004EA                           704      
000004EA  1C3C 0005                705      MOVE.B      #CC_CS,D6
000004EE  BC03                     706      CMP.B       D3,D6
000004F0  6700 0370                707      BEQ         MATCH_CC_CS_32
000004F4                           708      
000004F4  1C3C 0006                709      MOVE.B      #CC_NE,D6
000004F8  BC03                     710      CMP.B       D3,D6
000004FA  6700 036C                711      BEQ         MATCH_CC_NE_32
000004FE                           712      
000004FE  1C3C 0007                713      MOVE.B      #CC_EQ,D6
00000502  BC03                     714      CMP.B       D3,D6
00000504  6700 0368                715      BEQ         MATCH_CC_EQ_32
00000508                           716      
00000508  1C3C 0008                717      MOVE.B      #CC_VC,D6
0000050C  BC03                     718      CMP.B       D3,D6
0000050E  6700 0364                719      BEQ         MATCH_CC_VC_32
00000512                           720      
00000512  1C3C 0009                721      MOVE.B      #CC_VS,D6
00000516  BC03                     722      CMP.B       D3,D6
00000518  6700 0360                723      BEQ         MATCH_CC_VS_32
0000051C                           724      
0000051C  1C3C 000A                725      MOVE.B      #CC_PL,D6
00000520  BC03                     726      CMP.B       D3,D6
00000522  6700 035C                727      BEQ         MATCH_CC_PL_32
00000526                           728      
00000526  1C3C 000B                729      MOVE.B      #CC_MI,D6
0000052A  BC03                     730      CMP.B       D3,D6
0000052C  6700 0358                731      BEQ         MATCH_CC_MI_32
00000530                           732      
00000530  1C3C 000C                733      MOVE.B      #CC_GE,D6
00000534  BC03                     734      CMP.B       D3,D6
00000536  6700 0354                735      BEQ         MATCH_CC_GE_32
0000053A                           736      
0000053A  1C3C 000D                737      MOVE.B      #CC_LT,D6
0000053E  BC03                     738      CMP.B       D3,D6
00000540  6700 0350                739      BEQ         MATCH_CC_LT_32
00000544                           740      
00000544  1C3C 000E                741      MOVE.B      #CC_GT,D6
00000548  BC03                     742      CMP.B       D3,D6
0000054A  6700 034C                743      BEQ         MATCH_CC_GT_32
0000054E                           744      
0000054E  1C3C 000F                745      MOVE.B      #CC_LE,D6
00000552  BC03                     746      CMP.B       D3,D6
00000554  6700 0348                747      BEQ         MATCH_CC_LE_32
00000558                           748  
00000558  6000 0346                749      BRA         ERROR
0000055C                           750   
0000055C                           751  ISOLATE_CC_CODE_FOR_BCC
0000055C                           752  
0000055C  48A7 2000                753      MOVEM.W     D2, -(SP) 
00000560                           754      
00000560  E94A                     755      LSL.W       #4,D2
00000562  1E3C 000C                756      MOVE.B      #12,D7
00000566  EE6A                     757      LSR.W       D7,D2
00000568                           758      
00000568  1602                     759      MOVE.B      D2,D3      
0000056A                           760  
0000056A  4C9F 0004                761      MOVEM.W     (SP)+,D2 
0000056E  4E75                     762      RTS
00000570                           763  CHECK_CMP
00000570                           764      
00000570  6100 0232                765      BSR         ISOLATE_OP_CODE
00000574                           766      
00000574  1C3C 0000                767      MOVE.B      #CMP_B,D6
00000578  BC03                     768      CMP.B       D3,D6
0000057A  6700 02BE                769      BEQ         MATCH_CMP_B
0000057E                           770      
0000057E  1C3C 0001                771      MOVE.B      #CMP_W,D6
00000582  BC03                     772      CMP.B       D3,D6
00000584  6700 02B6                773      BEQ         MATCH_CMP_W
00000588                           774      
00000588  1C3C 0002                775      MOVE.B      #CMP_L,D6
0000058C  BC03                     776      CMP.B       D3,D6
0000058E  6700 02AE                777      BEQ         MATCH_CMP_L
00000592                           778      
00000592  6000 030C                779      BRA         ERROR
00000596                           780  CHECK_MULS_LEA_CLR_JSR_RTS
00000596                           781  
00000596  3C3C 4E75                782      MOVE.W      #RTS,D6
0000059A  BC42                     783      CMP.W       D2,D6
0000059C  6700 0282                784      BEQ         MATCH_RTS
000005A0                           785      
000005A0  6100 0202                786      BSR         ISOLATE_OP_CODE
000005A4                           787      
000005A4  1C3C 0007                788      MOVE.B      #LEA,D6
000005A8  BC03                     789      CMP.B       D3,D6
000005AA  6700 0276                790      BEQ         MATCH_LEA
000005AE                           791      
000005AE  6100 FCC6                792      BSR         ReadFirstTenBits
000005B2                           793      
000005B2  3C3C 013A                794      MOVE.W      #JSR,D6
000005B6  BC43                     795      CMP.W       D3,D6
000005B8  6700 026A                796      BEQ         MATCH_JSR
000005BC                           797      
000005BC  3C3C 0108                798      MOVE.W      #CLR_B,D6
000005C0  BC43                     799      CMP.W       D3,D6
000005C2  6700 0262                800      BEQ         MATCH_CLR_B
000005C6                           801      
000005C6  3C3C 0109                802      MOVE.W      #CLR_W,D6
000005CA  BC43                     803      CMP.W       D3,D6
000005CC  6700 025A                804      BEQ         MATCH_CLR_W
000005D0                           805      
000005D0  3C3C 010A                806      MOVE.W      #CLR_L,D6
000005D4  BC43                     807      CMP.W       D3,D6
000005D6  6700 0252                808      BEQ         MATCH_CLR_L
000005DA                           809      
000005DA  3C3C 0130                810      MOVE.W      #MULS_L,D6  * Shouldn't need to check for the rest of the opcode..?
000005DE  BC43                     811      CMP.W       D3,D6
000005E0  6700 024A                812      BEQ         MATCH_MULS_L
000005E4                           813      
000005E4  6000 02BA                814      BRA         ERROR
000005E8                           815      
000005E8                           816  CHECK_MULS_W_AND
000005E8                           817  
000005E8  6100 01BA                818      BSR         ISOLATE_OP_CODE
000005EC                           819      
000005EC  1C3C 0007                820      MOVE.B      #MULS_OP_W,D6
000005F0  BC03                     821      CMP.B       D3,D6
000005F2  6700 021E                822      BEQ         MATCH_MULS_W
000005F6                           823      
000005F6  1C3C 0000                824      MOVE.B      #DN_B,D6
000005FA  BC03                     825      CMP.B       D3,D6
000005FC  6700 0216                826      BEQ         MATCH_AND_DN_B
00000600                           827      
00000600  1C3C 0001                828      MOVE.B      #DN_W,D6
00000604  BC03                     829      CMP.B       D3,D6
00000606  6700 020E                830      BEQ         MATCH_AND_DN_W
0000060A                           831      
0000060A  1C3C 0002                832      MOVE.B      #DN_L,D6
0000060E  BC03                     833      CMP.B       D3,D6
00000610  6700 0206                834      BEQ         MATCH_AND_DN_L
00000614                           835      
00000614  1C3C 0004                836      MOVE.B      #EA_B,D6
00000618  BC03                     837      CMP.B       D3,D6
0000061A  6700 01FE                838      BEQ         MATCH_AND_EA_B
0000061E                           839      
0000061E  1C3C 0005                840      MOVE.B      #EA_W,D6
00000622  BC03                     841      CMP.B       D3,D6
00000624  6700 01F6                842      BEQ         MATCH_AND_EA_W
00000628                           843      
00000628  1C3C 0006                844      MOVE.B      #EA_L,D6
0000062C  BC03                     845      CMP.B       D3,D6
0000062E  6700 01EE                846      BEQ         MATCH_AND_EA_L
00000632                           847      
00000632  6000 026C                848      BRA         ERROR
00000636                           849  CHECK_DIVU_OR
00000636                           850      
00000636  6100 016C                851      BSR         ISOLATE_OP_CODE
0000063A                           852      
0000063A  1C3C 0003                853      MOVE.B      #DIVU,D6
0000063E  BC03                     854      CMP.B       D3,D6
00000640  6700 01C2                855      BEQ         MATCH_DIVU
00000644                           856      
00000644  1C3C 0000                857      MOVE.B      #DN_B,D6
00000648  BC03                     858      CMP.B       D3,D6
0000064A  6700 01BA                859      BEQ         MATCH_OR_DN_B
0000064E                           860      
0000064E  1C3C 0001                861      MOVE.B      #DN_W,D6
00000652  BC03                     862      CMP.B       D3,D6
00000654  6700 01B2                863      BEQ         MATCH_OR_DN_W
00000658                           864      
00000658  1C3C 0002                865      MOVE.B      #DN_L,D6
0000065C  BC03                     866      CMP.B       D3,D6
0000065E  6700 01AA                867      BEQ         MATCH_OR_DN_L
00000662                           868      
00000662  1C3C 0004                869      MOVE.B      #EA_B,D6
00000666  BC03                     870      CMP.B       D3,D6
00000668  6700 01A2                871      BEQ         MATCH_OR_EA_B
0000066C                           872      
0000066C  1C3C 0005                873      MOVE.B      #EA_W,D6
00000670  BC03                     874      CMP.B       D3,D6
00000672  6700 019A                875      BEQ         MATCH_OR_EA_W
00000676                           876      
00000676  1C3C 0006                877      MOVE.B      #EA_L,D6
0000067A  BC03                     878      CMP.B       D3,D6
0000067C  6700 0192                879      BEQ         MATCH_OR_EA_L
00000680                           880      
00000680  6000 021E                881      BRA         ERROR
00000684                           882  CHECK_MOVEM
00000684                           883      
00000684  6100 FBF0                884      BSR         ReadFirstTenBits
00000688                           885      
00000688  3C3C 0122                886      MOVE.W      #MOVEM_TO_MEM_W,D6
0000068C  BC43                     887      CMP.W       D3,D6
0000068E  6700 0144                888      BEQ         MATCH_MOVEM_TO_MEM_W
00000692                           889      
00000692  3C3C 0123                890      MOVE.W      #MOVEM_TO_MEM_L,D6
00000696  BC43                     891      CMP.W       D3,D6
00000698  6700 013C                892      BEQ         MATCH_MOVEM_TO_MEM_L
0000069C                           893      
0000069C  3C3C 0132                894      MOVE.W      #MOVEM_TO_REG_W,D6
000006A0  BC43                     895      CMP.W       D3,D6
000006A2  6700 0134                896      BEQ         MATCH_MOVEM_TO_REG_W
000006A6                           897      
000006A6  3C3C 0133                898      MOVE.W      #MOVEM_TO_REG_L,D6
000006AA  BC43                     899      CMP.W       D3,D6
000006AC  6700 012C                900      BEQ         MATCH_MOVEM_TO_REG_L
000006B0                           901      
000006B0  6000 FBAC                902      BRA         opdec_return
000006B4                           903  CHECK_ADD_ADDA
000006B4                           904      
000006B4  6100 00EE                905      BSR         ISOLATE_OP_CODE
000006B8                           906      
000006B8  3C3C 0000                907      MOVE.W      #DN_B,D6
000006BC  BC43                     908      CMP.W       D3,D6
000006BE  6700 0122                909      BEQ         MATCH_ADD_TO_REG_B
000006C2                           910      
000006C2  3C3C 0001                911      MOVE.W      #DN_W,D6
000006C6  BC43                     912      CMP.W       D3,D6
000006C8  6700 011A                913      BEQ         MATCH_ADD_TO_REG_W
000006CC                           914      
000006CC  3C3C 0002                915      MOVE.W      #DN_L,D6
000006D0  BC43                     916      CMP.W       D3,D6
000006D2  6700 0112                917      BEQ         MATCH_ADD_TO_REG_L
000006D6                           918      
000006D6  3C3C 0004                919      MOVE.W      #EA_B,D6
000006DA  BC43                     920      CMP.W       D3,D6
000006DC  6700 010A                921      BEQ         MATCH_ADD_TO_EA_B
000006E0                           922      
000006E0  3C3C 0005                923      MOVE.W      #EA_W,D6
000006E4  BC43                     924      CMP.W       D3,D6
000006E6  6700 0102                925      BEQ         MATCH_ADD_TO_EA_W
000006EA                           926      
000006EA  3C3C 0006                927      MOVE.W      #EA_L,D6
000006EE  BC43                     928      CMP.W       D3,D6
000006F0  6700 00FA                929      BEQ         MATCH_ADD_TO_EA_L
000006F4                           930      
000006F4  3C3C 0003                931      MOVE.W      #ADDA_W,D6
000006F8  BC43                     932      CMP.W       D3,D6
000006FA  6700 00F2                933      BEQ         MATCH_ADDA_W
000006FE                           934      
000006FE  3C3C 0007                935      MOVE.W      #ADDA_L,D6
00000702  BC43                     936      CMP.W       D3,D6
00000704  6700 00EA                937      BEQ         MATCH_ADDA_L
00000708                           938      
00000708  4E75                     939      RTS ** Change later?
0000070A                           940  CHECK_ADDQ
0000070A                           941      
0000070A  6100 0098                942      BSR         ISOLATE_OP_CODE
0000070E                           943      
0000070E  3C3C 0000                944      MOVE.W      #ADDQ_B,D6
00000712  BC43                     945      CMP.W       D3,D6
00000714  6700 00DC                946      BEQ         MATCH_ADDQ_B
00000718                           947      
00000718  3C3C 0001                948      MOVE.W      #ADDQ_W,D6
0000071C  BC43                     949      CMP.W       D3,D6
0000071E  6700 00D4                950      BEQ         MATCH_ADDQ_W
00000722                           951      
00000722  3C3C 0002                952      MOVE.W      #ADDQ_L,D6
00000726  BC43                     953      CMP.W       D3,D6
00000728  6700 00CC                954      BEQ         MATCH_ADDQ_L
0000072C                           955      
0000072C                           956  CHECK_ADDI
0000072C                           957  
0000072C  6100 FB48                958      BSR         ReadFirstTenBits
00000730                           959      
00000730  3C3C 0018                960      MOVE.W      #ADDI_B,D6
00000734  BC43                     961      CMP.W       D3,D6
00000736  6700 00A4                962      BEQ         MATCH_ADDI_B
0000073A                           963      
0000073A  3C3C 0019                964      MOVE.W      #ADDI_W,D6
0000073E  BC43                     965      CMP.W       D3,D6
00000740  6700 009C                966      BEQ         MATCH_ADDI_W
00000744                           967      
00000744  3C3C 001A                968      MOVE.W      #ADDI_L,D6
00000748  BC43                     969      CMP.W       D3,D6
0000074A  6700 0094                970      BEQ         MATCH_ADDI_L
0000074E                           971      
0000074E  6000 FB0E                972      BRA         opdec_return
00000752                           973  CHECK_SUB
00000752                           974      
00000752  6100 0050                975      BSR         ISOLATE_OP_CODE
00000756                           976      
00000756  3C3C 0000                977      MOVE.W      #DN_B,D6
0000075A  BC43                     978      CMP.W       D3,D6
0000075C  6700 009A                979      BEQ         MATCH_SUB_TO_DN_B
00000760                           980      
00000760  3C3C 0001                981      MOVE.W      #DN_W,D6
00000764  BC43                     982      CMP.W       D3,D6
00000766  6700 0092                983      BEQ         MATCH_SUB_TO_DN_W
0000076A                           984      
0000076A  3C3C 0002                985      MOVE.W      #DN_L,D6
0000076E  BC43                     986      CMP.W       D3,D6
00000770  6700 008A                987      BEQ         MATCH_SUB_TO_DN_L
00000774                           988      
00000774  3C3C 0004                989      MOVE.W      #EA_B,D6
00000778  BC43                     990      CMP.W       D3,D6
0000077A  6700 0082                991      BEQ         MATCH_SUB_TO_EA_B
0000077E                           992      
0000077E  3C3C 0005                993      MOVE.W      #EA_W,D6
00000782  BC43                     994      CMP.W       D3,D6
00000784  6700 007A                995      BEQ         MATCH_SUB_TO_EA_W
00000788                           996      
00000788  3C3C 0006                997      MOVE.W      #EA_L,D6
0000078C  BC43                     998      CMP.W       D3,D6
0000078E  6700 0072                999      BEQ         MATCH_SUB_TO_EA_L
00000792                          1000  CHECK_MOVEA_W_AND_MOVE_W
00000792                          1001      
00000792  6100 0010               1002      BSR         ISOLATE_OP_CODE
00000796                          1003         
00000796  1C3C 0001               1004      MOVE.B      #MOVEA_WL,D6
0000079A  BC03                    1005      CMP.B       D3,D6
0000079C  6700 0030               1006      BEQ         MATCH_MOVEA_W
000007A0                          1007      
000007A0  6000 FA34               1008      BRA         MATCH_MOVE_W 
000007A4                          1009  ISOLATE_OP_CODE 
000007A4                          1010  
000007A4  48A7 2000               1011      MOVEM.W     D2, -(SP)    
000007A8                          1012     
000007A8  1E3C 0007               1013      MOVE.B      #7,D7          
000007AC  EF6A                    1014      LSL.W       D7,D2
000007AE  1E3C 000D               1015      MOVE.B      #13,D7
000007B2  EE6A                    1016      LSR.W       D7,D2
000007B4  1602                    1017      MOVE.B      D2,D3    
000007B6                          1018         
000007B6  4C9F 0004               1019      MOVEM.W     (SP)+,D2 
000007BA  4E75                    1020      RTS
000007BC                          1021  CHECK_MOVEA_L_AND_MOVE_L
000007BC                          1022      
000007BC  61E6                    1023      BSR         ISOLATE_OP_CODE
000007BE                          1024         
000007BE  1C3C 0001               1025      MOVE.B      #MOVEA_WL,D6
000007C2  BC03                    1026      CMP.B       D3,D6
000007C4  6700 000A               1027      BEQ         MATCH_MOVEA_L 
000007C8                          1028      
000007C8  6000 0002               1029      BRA         MATCH_MOVE_L   
000007CC                          1030  
000007CC                          1031      
000007CC                          1032  MATCH_MOVE_L
000007CC  3A02                    1033      MOVE.W      D2,D5       *REMOVE
000007CE                          1034  MATCH_MOVEA_W
000007CE  3A02                    1035      MOVE.W      D2,D5       *REMOVE
000007D0                          1036  MATCH_MOVEA_L
000007D0  3A02                    1037      MOVE.W      D2,D5       *REMOVE
000007D2                          1038  MATCH_MOVEQ
000007D2  3A02                    1039      MOVE.W      D2,D5       *REMOVE
000007D4                          1040  MATCH_MOVEM_TO_MEM_W
000007D4  3A02                    1041      MOVE.W      D2,D5       *REMOVE
000007D6                          1042  MATCH_MOVEM_TO_MEM_L
000007D6  3A02                    1043      MOVE.W      D2,D5       *REMOVE
000007D8                          1044  MATCH_MOVEM_TO_REG_W
000007D8  3A02                    1045      MOVE.W      D2,D5       *REMOVE
000007DA                          1046  MATCH_MOVEM_TO_REG_L
000007DA  3A02                    1047      MOVE.W      D2,D5       *REMOVE
000007DC                          1048  MATCH_ADDI_B
000007DC  3A02                    1049      MOVE.W      D2,D5       *REMOVE
000007DE                          1050  MATCH_ADDI_W
000007DE  3A02                    1051      MOVE.W      D2,D5       *REMOVE
000007E0                          1052  MATCH_ADDI_L
000007E0  3A02                    1053      MOVE.W      D2,D5       *REMOVE
000007E2                          1054  MATCH_ADD_TO_REG_B
000007E2  3A02                    1055      MOVE.W      D2,D5       *REMOVE
000007E4                          1056  MATCH_ADD_TO_REG_W
000007E4  3A02                    1057      MOVE.W      D2,D5       *REMOVE
000007E6                          1058  MATCH_ADD_TO_REG_L
000007E6  3A02                    1059      MOVE.W      D2,D5       *REMOVE
000007E8                          1060  MATCH_ADD_TO_EA_B
000007E8  3A02                    1061      MOVE.W      D2,D5       *REMOVE
000007EA                          1062  MATCH_ADD_TO_EA_W
000007EA  3A02                    1063      MOVE.W      D2,D5       *REMOVE
000007EC                          1064  MATCH_ADD_TO_EA_L 
000007EC  3A02                    1065      MOVE.W      D2,D5       *REMOVE
000007EE                          1066  MATCH_ADDA_W
000007EE  3A02                    1067      MOVE.W      D2,D5       *REMOVE
000007F0                          1068  MATCH_ADDA_L
000007F0  3A02                    1069      MOVE.W      D2,D5       *REMOVE
000007F2                          1070  MATCH_ADDQ_B
000007F2  3A02                    1071      MOVE.W      D2,D5       *REMOVE
000007F4                          1072  MATCH_ADDQ_W
000007F4  3A02                    1073      MOVE.W      D2,D5       *REMOVE
000007F6                          1074  MATCH_ADDQ_L
000007F6  3A02                    1075      MOVE.W      D2,D5       *REMOVE
000007F8                          1076  MATCH_SUB_TO_DN_B
000007F8  3A02                    1077      MOVE.W      D2,D5       *REMOVE
000007FA                          1078  MATCH_SUB_TO_DN_W
000007FA  3A02                    1079      MOVE.W      D2,D5       *REMOVE
000007FC                          1080  MATCH_SUB_TO_DN_L
000007FC  3A02                    1081      MOVE.W      D2,D5       *REMOVE
000007FE                          1082  MATCH_SUB_TO_EA_B
000007FE  3A02                    1083      MOVE.W      D2,D5       *REMOVE
00000800                          1084  MATCH_SUB_TO_EA_W
00000800  3A02                    1085      MOVE.W      D2,D5       *REMOVE
00000802                          1086  MATCH_SUB_TO_EA_L
00000802  3A02                    1087      MOVE.W      D2,D5       *REMOVE
00000804                          1088  MATCH_DIVU
00000804  3A02                    1089      MOVE.W      D2,D5       *REMOVE
00000806                          1090  MATCH_OR_DN_B
00000806  3A02                    1091      MOVE.W      D2,D5       *REMOVE
00000808                          1092  MATCH_OR_DN_W
00000808  3A02                    1093      MOVE.W      D2,D5       *REMOVE
0000080A                          1094  MATCH_OR_DN_L
0000080A  3A02                    1095      MOVE.W      D2,D5       *REMOVE
0000080C                          1096  MATCH_OR_EA_B
0000080C  3A02                    1097      MOVE.W      D2,D5       *REMOVE
0000080E                          1098  MATCH_OR_EA_W
0000080E  3A02                    1099      MOVE.W      D2,D5       *REMOVE
00000810                          1100  MATCH_OR_EA_L
00000810  3A02                    1101      MOVE.W      D2,D5       *REMOVE
00000812                          1102  MATCH_MULS_W
00000812  3A02                    1103      MOVE.W      D2,D5       *REMOVE
00000814                          1104  MATCH_AND_DN_B
00000814  3A02                    1105      MOVE.W      D2,D5       *REMOVE
00000816                          1106  MATCH_AND_DN_W
00000816  3A02                    1107      MOVE.W      D2,D5       *REMOVE
00000818                          1108  MATCH_AND_DN_L
00000818  3A02                    1109      MOVE.W      D2,D5       *REMOVE
0000081A                          1110  MATCH_AND_EA_B
0000081A  3A02                    1111      MOVE.W      D2,D5       *REMOVE
0000081C                          1112  MATCH_AND_EA_W
0000081C  3A02                    1113      MOVE.W      D2,D5       *REMOVE
0000081E                          1114  MATCH_AND_EA_L
0000081E  3A02                    1115      MOVE.W      D2,D5       *REMOVE
00000820                          1116  MATCH_RTS
00000820  3A02                    1117      MOVE.W      D2,D5       *REMOVE
00000822                          1118  MATCH_LEA
00000822  3A02                    1119      MOVE.W      D2,D5       *REMOVE
00000824                          1120  MATCH_JSR
00000824  3A02                    1121      MOVE.W      D2,D5       *REMOVE
00000826                          1122  MATCH_CLR_B
00000826  3A02                    1123      MOVE.W      D2,D5       *REMOVE
00000828                          1124  MATCH_CLR_W
00000828  3A02                    1125      MOVE.W      D2,D5       *REMOVE
0000082A                          1126  MATCH_CLR_L
0000082A  3A02                    1127      MOVE.W      D2,D5       *REMOVE
0000082C                          1128  MATCH_MULS_L
0000082C  3A02                    1129      MOVE.W      D2,D5       *REMOVE
0000082E                          1130  MATCH_LSL
0000082E  3A02                    1131      MOVE.W      D2,D5       *REMOVE
00000830                          1132  MATCH_LSR
00000830  3A02                    1133      MOVE.W      D2,D5       *REMOVE
00000832                          1134  MATCH_ASR
00000832  3A02                    1135      MOVE.W      D2,D5       *REMOVE
00000834                          1136  MATCH_ASL
00000834  3A02                    1137      MOVE.W      D2,D5       *REMOVE
00000836                          1138  MATCH_ROL
00000836  3A02                    1139      MOVE.W      D2,D5       *REMOVE
00000838                          1140  MATCH_ROR
00000838  3A02                    1141      MOVE.W      D2,D5       *REMOVE
0000083A                          1142  MATCH_CMP_B
0000083A  3A02                    1143      MOVE.W      D2,D5       *REMOVE
0000083C                          1144  MATCH_CMP_W
0000083C  3A02                    1145      MOVE.W      D2,D5       *REMOVE
0000083E                          1146  MATCH_CMP_L
0000083E  3A02                    1147      MOVE.W      D2,D5       *REMOVE
00000840                          1148      
00000840                          1149  MATCH_CC_T_8
00000840  3A02                    1150      MOVE.W      D2,D5       *REMOVE
00000842                          1151  MATCH_CC_T_16
00000842  3A02                    1152      MOVE.W      D2,D5       *REMOVE
00000844                          1153  MATCH_CC_T_32
00000844  3A02                    1154      MOVE.W      D2,D5       *REMOVE
00000846                          1155  MATCH_CC_F_8
00000846  3A02                    1156      MOVE.W      D2,D5       *REMOVE
00000848                          1157  MATCH_CC_F_16
00000848  3A02                    1158      MOVE.W      D2,D5       *REMOVE
0000084A                          1159  MATCH_CC_F_32
0000084A  3A02                    1160      MOVE.W      D2,D5       *REMOVE
0000084C                          1161  MATCH_CC_HI_8
0000084C  3A02                    1162      MOVE.W      D2,D5       *REMOVE
0000084E                          1163  MATCH_CC_HI_16
0000084E  3A02                    1164      MOVE.W      D2,D5       *REMOVE
00000850                          1165  MATCH_CC_HI_32
00000850  3A02                    1166      MOVE.W      D2,D5       *REMOVE
00000852                          1167  MATCH_CC_LS_8
00000852  3A02                    1168      MOVE.W      D2,D5       *REMOVE
00000854                          1169  MATCH_CC_LS_16
00000854  3A02                    1170      MOVE.W      D2,D5       *REMOVE
00000856                          1171  MATCH_CC_LS_32  
00000856  3A02                    1172      MOVE.W      D2,D5       *REMOVE
00000858                          1173  MATCH_CC_CC_8
00000858  3A02                    1174      MOVE.W      D2,D5       *REMOVE
0000085A                          1175  MATCH_CC_CC_16
0000085A  3A02                    1176      MOVE.W      D2,D5       *REMOVE
0000085C                          1177  MATCH_CC_CC_32
0000085C  3A02                    1178      MOVE.W      D2,D5       *REMOVE
0000085E                          1179  MATCH_CC_CS_8
0000085E  3A02                    1180      MOVE.W      D2,D5       *REMOVE
00000860                          1181  MATCH_CC_CS_16
00000860  3A02                    1182      MOVE.W      D2,D5       *REMOVE
00000862                          1183  MATCH_CC_CS_32
00000862  3A02                    1184      MOVE.W      D2,D5       *REMOVE
00000864                          1185  MATCH_CC_NE_8
00000864  3A02                    1186      MOVE.W      D2,D5       *REMOVE
00000866                          1187  MATCH_CC_NE_16
00000866  3A02                    1188      MOVE.W      D2,D5       *REMOVE
00000868                          1189  MATCH_CC_NE_32
00000868  3A02                    1190      MOVE.W      D2,D5       *REMOVE
0000086A                          1191  MATCH_CC_EQ_8
0000086A  3A02                    1192      MOVE.W      D2,D5       *REMOVE
0000086C                          1193  MATCH_CC_EQ_16
0000086C  3A02                    1194      MOVE.W      D2,D5       *REMOVE
0000086E                          1195  MATCH_CC_EQ_32
0000086E  3A02                    1196      MOVE.W      D2,D5       *REMOVE
00000870                          1197  MATCH_CC_VC_8
00000870  3A02                    1198      MOVE.W      D2,D5       *REMOVE
00000872                          1199  MATCH_CC_VC_16
00000872  3A02                    1200      MOVE.W      D2,D5       *REMOVE
00000874                          1201  MATCH_CC_VC_32
00000874  3A02                    1202      MOVE.W      D2,D5       *REMOVE
00000876                          1203  MATCH_CC_VS_8
00000876  3A02                    1204      MOVE.W      D2,D5       *REMOVE
00000878                          1205  MATCH_CC_VS_16
00000878  3A02                    1206      MOVE.W      D2,D5       *REMOVE
0000087A                          1207  MATCH_CC_VS_32
0000087A  3A02                    1208      MOVE.W      D2,D5       *REMOVE
0000087C                          1209  MATCH_CC_PL_8
0000087C  3A02                    1210      MOVE.W      D2,D5       *REMOVE
0000087E                          1211  MATCH_CC_PL_16
0000087E  3A02                    1212      MOVE.W      D2,D5       *REMOVE
00000880                          1213  MATCH_CC_PL_32
00000880  3A02                    1214      MOVE.W      D2,D5       *REMOVE
00000882                          1215  MATCH_CC_MI_8
00000882  3A02                    1216      MOVE.W      D2,D5       *REMOVE
00000884                          1217  MATCH_CC_MI_16
00000884  3A02                    1218      MOVE.W      D2,D5       *REMOVE
00000886                          1219  MATCH_CC_MI_32
00000886  3A02                    1220      MOVE.W      D2,D5       *REMOVE
00000888                          1221  MATCH_CC_GE_8
00000888  3A02                    1222      MOVE.W      D2,D5       *REMOVE
0000088A                          1223  MATCH_CC_GE_16
0000088A  3A02                    1224      MOVE.W      D2,D5       *REMOVE
0000088C                          1225  MATCH_CC_GE_32
0000088C  3A02                    1226      MOVE.W      D2,D5       *REMOVE
0000088E                          1227  MATCH_CC_LT_8
0000088E  3A02                    1228      MOVE.W      D2,D5       *REMOVE
00000890                          1229  MATCH_CC_LT_16
00000890  3A02                    1230      MOVE.W      D2,D5       *REMOVE
00000892                          1231  MATCH_CC_LT_32
00000892  3A02                    1232      MOVE.W      D2,D5       *REMOVE
00000894                          1233  MATCH_CC_GT_8
00000894  3A02                    1234      MOVE.W      D2,D5       *REMOVE
00000896                          1235  MATCH_CC_GT_16
00000896  3A02                    1236      MOVE.W      D2,D5       *REMOVE
00000898                          1237  MATCH_CC_GT_32
00000898  3A02                    1238      MOVE.W      D2,D5       *REMOVE
0000089A                          1239  MATCH_CC_LE_8
0000089A  3A02                    1240      MOVE.W      D2,D5       *REMOVE
0000089C                          1241  MATCH_CC_LE_16
0000089C  3A02                    1242      MOVE.W      D2,D5       *REMOVE
0000089E                          1243  MATCH_CC_LE_32
0000089E  3A02                    1244      MOVE.W      D2,D5       *REMOVE
000008A0                          1245  ERROR
000008A0  3A02                    1246      MOVE.W      D2,D5       *REMOVE
000008A2                          1247  
000008A2                          1248  
000008A2                          1249  -------------------- end include --------------------
000008A2                          1250          
000008A2= 45 6E 74 65 72 20 ...   1251  MESSAGE     DC.B    'Enter the address of compiled code: ',0
000008C7= 49 6E 76 61 6C 69 ...   1252  ERROR_MSG   DC.B    'Invalid input, please rerun',0
000008E3= 20 00                   1253  SPACER      DC.B    ' ',0
000008E5                          1254  
00001000                          1255  START:  ORG     $1000                
00001000                          1256  
00001000                          1257  
00001000                          1258  *------Code for input-------
00001000                          1259          
00001000  43F8 08A2               1260          LEA     MESSAGE,A1      *Code block for first message
00001004  103C 000E               1261          MOVE.B  #14,D0
00001008  4E4F                    1262          TRAP    #15
0000100A                          1263         
0000100A  227C 00004000           1264          MOVEA.L #$4000, A1
00001010  103C 0002               1265          MOVE.B  #2,D0           *Code block for reading input
00001014  4E4F                    1266          TRAP    #15   
00001016  3001                    1267          MOVE.W  D1,D0
00001018                          1268          
00001018  2049                    1269          MOVEA.L A1,A0           *Move the contents of A1 to A0 for the conversion
0000101A  4EB8 0000               1270          JSR     A2H             *Branch to Connor's conversion code      
0000101E                          1271          
0000101E  2040                    1272          MOVEA.L D0,A0
00001020                          1273          
00001020  0C50 FFFF               1274          CMPI.W  #$FFFF,(A0)
00001024  6700 0026               1275          BEQ     input_error
00001028                          1276      
00001028                          1277  loop_start
00001028                          1278          
00001028  2208                    1279          MOVE.L  A0,D1           *Print out the address we're working on
0000102A  7410                    1280          MOVE.L  #16,D2          
0000102C  700F                    1281          MOVE.L  #15,D0          
0000102E  4E4F                    1282          TRAP    #15
00001030                          1283  
00001030  700E                    1284          MOVE.L  #14,D0
00001032  43F8 08E3               1285          LEA     SPACER,A1
00001036  4E4F                    1286          TRAP    #15
00001038                          1287          
00001038  3418                    1288          MOVE.W  (A0)+,D2
0000103A  0C42 FFFF               1289          CMPI.W  #$FFFF,D2
0000103E  6700 0014               1290          BEQ     Done
00001042                          1291          
00001042  4EB8 0244               1292          JSR     OpDecoder
00001046                          1293          
00001046  700D                    1294          MOVE.L  #13,D0
00001048  4E4F                    1295          TRAP    #15
0000104A                          1296          
0000104A  60DC                    1297          BRA     loop_start
0000104C                          1298          
0000104C                          1299  input_error        
0000104C  700D                    1300          MOVE.L  #13,D0
0000104E  43F8 08C7               1301          LEA     ERROR_MSG,A1
00001052  4E4F                    1302          TRAP    #15
00001054                          1303  Done        
00001054                          1304  
00001054                          1305          END    $1000

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
A2H                 0
ABS_LONG            39
ABS_WORD            38
ADDA_L              7
ADDA_W              3
ADDBYTELOOP         24
ADDBYTES            1C
ADDI_B              18
ADDI_L              1A
ADDI_W              19
ADDQ                5
ADDQ_B              0
ADDQ_L              2
ADDQ_W              1
ADD_ADDA            D
ADD_TO_EA_B         4
ADD_TO_EA_L         6
ADD_TO_EA_W         5
ADD_TO_REG_B        0
ADD_TO_REG_L        2
ADD_TO_REG_W        1
AN                  8
ASL                 383
ASR                 387
BCC                 6
BCC_16              0
BCC_32              FF
CC_CC               4
CC_CS               5
CC_EQ               7
CC_F                1
CC_GE               C
CC_GT               E
CC_HI               2
CC_LE               F
CC_LS               3
CC_LT               D
CC_MI               B
CC_NE               6
CC_PL               A
CC_T                0
CC_VC               8
CC_VS               9
CHECK_ADDI          72C
CHECK_ADDQ          70A
CHECK_ADD_ADDA      6B4
CHECK_BCC           34C
CHECK_BCC_16        40C
CHECK_BCC_32        4B4
CHECK_BCC_8         364
CHECK_CMP           570
CHECK_DIVU_OR       636
CHECK_MOVEA_L_AND_MOVE_L  7BC
CHECK_MOVEA_W_AND_MOVE_W  792
CHECK_MOVEM         684
CHECK_MOVE_AND_MOVEA_AND_MOVEQ  2CE
CHECK_MULS_LEA_CLR_JSR_RTS  596
CHECK_MULS_W_AND    5E8
CHECK_NOP           2C4
CHECK_SHIFT_AND_ROTATE  284
CHECK_SUB           752
CLR_B               108
CLR_L               10A
CLR_W               109
CMP                 B
CMP_B               0
CMP_L               2
CMP_W               1
CONV_END            2C
CR                  D
DEC_ABS_LONG        114
DEC_ABS_WORD        108
DEC_AN              12C
DEC_DN              120
DEC_IMMEDIATE       EC
DEC_INDIRECT        138
DEC_POST_INC        14C
DEC_PRE_DEC         166
DEC_RETURN          CE
DIVU                3
DIVU_OR             8
DN                  0
DN_B                0
DN_L                2
DN_W                1
DONE                1054
EADECODER           66
EADECODER_LEFT      4E
EA_B                4
EA_L                6
EA_W                5
ERROR               8A0
ERROR_MSG           8C7
IMMEDIATE           3C
IMM_SKIP            E6
IMM_WORD            104
INDIRECT            10
INPUT_ERROR         104C
ISOLATE_CC_CODE_FOR_BCC  55C
ISOLATE_OP_CODE     7A4
JSR                 13A
LEA                 7
LEFT_SKIP           6A
LF                  A
LOOP_START          1028
LSL                 38F
LSR                 38B
MATCH_ADDA_L        7F0
MATCH_ADDA_W        7EE
MATCH_ADDI_B        7DC
MATCH_ADDI_L        7E0
MATCH_ADDI_W        7DE
MATCH_ADDQ_B        7F2
MATCH_ADDQ_L        7F6
MATCH_ADDQ_W        7F4
MATCH_ADD_TO_EA_B   7E8
MATCH_ADD_TO_EA_L   7EC
MATCH_ADD_TO_EA_W   7EA
MATCH_ADD_TO_REG_B  7E2
MATCH_ADD_TO_REG_L  7E6
MATCH_ADD_TO_REG_W  7E4
MATCH_AND_DN_B      814
MATCH_AND_DN_L      818
MATCH_AND_DN_W      816
MATCH_AND_EA_B      81A
MATCH_AND_EA_L      81E
MATCH_AND_EA_W      81C
MATCH_ASL           834
MATCH_ASR           832
MATCH_CC_CC_16      85A
MATCH_CC_CC_32      85C
MATCH_CC_CC_8       858
MATCH_CC_CS_16      860
MATCH_CC_CS_32      862
MATCH_CC_CS_8       85E
MATCH_CC_EQ_16      86C
MATCH_CC_EQ_32      86E
MATCH_CC_EQ_8       86A
MATCH_CC_F_16       848
MATCH_CC_F_32       84A
MATCH_CC_F_8        846
MATCH_CC_GE_16      88A
MATCH_CC_GE_32      88C
MATCH_CC_GE_8       888
MATCH_CC_GT_16      896
MATCH_CC_GT_32      898
MATCH_CC_GT_8       894
MATCH_CC_HI_16      84E
MATCH_CC_HI_32      850
MATCH_CC_HI_8       84C
MATCH_CC_LE_16      89C
MATCH_CC_LE_32      89E
MATCH_CC_LE_8       89A
MATCH_CC_LS_16      854
MATCH_CC_LS_32      856
MATCH_CC_LS_8       852
MATCH_CC_LT_16      890
MATCH_CC_LT_32      892
MATCH_CC_LT_8       88E
MATCH_CC_MI_16      884
MATCH_CC_MI_32      886
MATCH_CC_MI_8       882
MATCH_CC_NE_16      866
MATCH_CC_NE_32      868
MATCH_CC_NE_8       864
MATCH_CC_PL_16      87E
MATCH_CC_PL_32      880
MATCH_CC_PL_8       87C
MATCH_CC_T_16       842
MATCH_CC_T_32       844
MATCH_CC_T_8        840
MATCH_CC_VC_16      872
MATCH_CC_VC_32      874
MATCH_CC_VC_8       870
MATCH_CC_VS_16      878
MATCH_CC_VS_32      87A
MATCH_CC_VS_8       876
MATCH_CLR_B         826
MATCH_CLR_L         82A
MATCH_CLR_W         828
MATCH_CMP_B         83A
MATCH_CMP_L         83E
MATCH_CMP_W         83C
MATCH_DIVU          804
MATCH_JSR           824
MATCH_LEA           822
MATCH_LSL           82E
MATCH_LSR           830
MATCH_MOVEA_L       7D0
MATCH_MOVEA_W       7CE
MATCH_MOVEM_TO_MEM_L  7D6
MATCH_MOVEM_TO_MEM_W  7D4
MATCH_MOVEM_TO_REG_L  7DA
MATCH_MOVEM_TO_REG_W  7D8
MATCH_MOVEQ         7D2
MATCH_MOVE_B        190
MATCH_MOVE_L        7CC
MATCH_MOVE_W        1D6
MATCH_MULS_L        82C
MATCH_MULS_W        812
MATCH_NOP           180
MATCH_OR_DN_B       806
MATCH_OR_DN_L       80A
MATCH_OR_DN_W       808
MATCH_OR_EA_B       80C
MATCH_OR_EA_L       810
MATCH_OR_EA_W       80E
MATCH_ROL           836
MATCH_ROR           838
MATCH_RTS           820
MATCH_SUB_TO_DN_B   7F8
MATCH_SUB_TO_DN_L   7FC
MATCH_SUB_TO_DN_W   7FA
MATCH_SUB_TO_EA_B   7FE
MATCH_SUB_TO_EA_L   802
MATCH_SUB_TO_EA_W   800
MESSAGE             8A2
MOVEA_WL            1
MOVEM_TO_MEM_L      123
MOVEM_TO_MEM_W      122
MOVEM_TO_REG_L      133
MOVEM_TO_REG_W      132
MOVEQ_              7
MOVE_B              1
MOVE_L              2
MOVE_W              3
MULS_L              130
MULS_LEA_CLR_JSR_RTS  4
MULS_OP_W           7
MULS_W_AND          C
NOP                 4E71
NUMSUB              32
NUMSUBRTN           E
OPDECODER           244
OPDEC_RETURN        25E
OUTPUT              10000
POST_INC            18
PRE_DEC             20
PR_BYTE             220
PR_COMMA            21E
PR_LONG             226
PR_MOVE             22D
PR_MOVEA            232
PR_MOVEM            23E
PR_MOVEQ            238
PR_NOP              229
PR_SPACE            21C
PR_WORD             223
READFIRSTFOURBITS   264
READFIRSTTENBITS    276
ROL                 39F
ROR                 39B
RTS                 4E75
SPACER              8E3
START               1000
SUB                 9
SUB_TO_DN_B         0
SUB_TO_DN_L         2
SUB_TO_DN_W         1
SUB_TO_EA_B         4
SUB_TO_EA_L         6
SUB_TO_EA_W         5
UPSEND              46
UPSUB               3C
UPSUBRTN            16

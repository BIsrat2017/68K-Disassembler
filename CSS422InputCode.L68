00001000 Starting Address
Assembler used: EASy68K Editor/Assembler v5.15.04
Created On: 3/8/2017 7:50:11 PM

00000000                             1  *-----------------------------------------------------------
00000000                             2  * Title      :
00000000                             3  * Written by :
00000000                             4  * Date       :
00000000                             5  * Description:
00000000                             6  *-----------------------------------------------------------
00000000  =0000000D                  7  CR      EQU     $0D
00000000  =0000000A                  8  LF      EQU     $0A   
00000000                             9          INCLUDE 'ASCII_HEX_Conversions.x68'
00000000                            10  
00000000                            11  
00000000                            12  
00000000                            13  A2H     *Converts and ASCII Byte string into HEX; Size WORD
00000000  48E7 7FFE                 14          MOVEM.L     D1-D7/A0-A6, -(SP)  
00000004                            15          
00000004  3400                      16          MOVE.W  D0,D2
00000006  3202                      17          MOVE.W  D2,D1                   *Store length of string into D1 for looping
00000008  2248                      18          MOVEA.L A0,A1                   *Copy starting point of string
0000000A                            19  
0000000A  6000 0026                 20          BRA     numSub
0000000E                            21  numSubRTN
0000000E  2049                      22          MOVEA.L A1,A0                   *Restore address position
00000010  3202                      23          MOVE.W  D2,D1                   *Reset loop counter
00000012                            24          
00000012  6000 0028                 25          BRA     upSub
00000016                            26  upSubRTN        
00000016  2049                      27          MOVEA.L A1,A0                   *Restore address position
00000018  3202                      28          MOVE.W  D2,D1                   *Reset loop counter
0000001A  4240                      29          CLR     D0                      *Clear D0
0000001C                            30  addBytes
0000001C  D018                      31          ADD.B   (A0)+,D0
0000001E  5301                      32          SUBI.B  #1,D1
00000020  6700 000A                 33          BEQ     conv_end
00000024                            34  addByteLoop
00000024  E980                      35          ASL.L   #4,D0
00000026  D018                      36          ADD.B   (A0)+,D0
00000028  5301                      37          SUBI.B  #1,D1
0000002A  66F8                      38          BNE     addByteLoop
0000002C                            39  conv_end
0000002C  4CDF 7FFE                 40          MOVEM.L     (SP)+, D1-D7/A0-A6
00000030  4E75                      41          RTS
00000032                            42          
00000032                            43  numSub  *Convert ASCII 'number' to true number byte; Should not be called outside of the A2H subroutines
00000032  0418 0030                 44          SUBI.B  #$30,(A0)+              *Subtract difference between null ASCII and '0' ASCII
00000036  5341                      45          SUB.W   #1,D1                   *Decrement loop counter
00000038  66F8                      46          BNE     numSub                  *If loop has not ended restart
0000003A  60D2                      47          BRA     numSubRTN
0000003C                            48  
0000003C                            49  upSub   *Loops through string to remove any upper case characters 
0000003C                            50          *that may remain in the string
0000003C  0C10 0009                 51          CMPI.B  #9,(A0)                 *Check if the value is greater than 0-9
00000040  6F00 0004                 52          BLE     upSEnd                  *If it's not, continue loop
00000044  5310                      53          SUBI.B  #1,(A0)                 *Otherwise, subtract difference between ASCII 'number' code and 'A' code
00000046                            54  upSEnd
00000046  5248                      55          ADDA.W  #1,A0                   *Increment to next position to check for uppercase
00000048  5341                      56          SUB.W   #1,D1                   *Decrement loop counter
0000004A  66F0                      57          BNE     upSub                   
0000004C  60C8                      58          BRA     upSubRTN
0000004E                            59  
0000004E                            60  
0000004E                            61  -------------------- end include --------------------
0000004E                            62          INCLUDE 'opcodes.x68'
0000004E                            63                  INCLUDE 'EADecoder.x68'
0000004E                            64  
0000004E                            65  
0000004E  =00010000                 66  output      EQU $00010000
0000004E                            67  
0000004E  =0000003C                 68  IMMEDIATE   EQU %00111100
0000004E  =00000038                 69  ABS_WORD    EQU %00111000
0000004E  =00000039                 70  ABS_LONG    EQU %00111001
0000004E  =00000000                 71  Dn          EQU %00000000
0000004E  =00000008                 72  An          EQU %00001000
0000004E  =00000010                 73  INDIRECT    EQU %00010000
0000004E  =00000018                 74  POST_INC    EQU %00011000
0000004E  =00000020                 75  PRE_DEC     EQU %00100000
0000004E                            76  
0000004E                            77  
0000004E                            78  
0000004E                            79  EADecoder_left
0000004E  48E7 FF7E                 80          MOVEM.L     D0-D7/A1-A6, -(SP)
00000052                            81          
00000052                            82          ** Swap the mode and register bits
00000052  1800                      83          MOVE.B  D0,D4
00000054  0200 0007                 84          ANDI.B  #%00000111,D0       * Mask mode
00000058  0204 0038                 85          ANDI.B  #%00111000,D4       * Mask register
0000005C  E708                      86          LSL.B   #3,D0               * Move mode bits over
0000005E  E60C                      87          LSR.B   #3,D4               * Move register bits over
00000060  8004                      88          OR.B    D4,D0               * Recombine
00000062                            89          
00000062  6000 0006                 90          BRA     left_skip
00000066                            91  
00000066                            92  EADecoder
00000066  48E7 FF7E                 93          MOVEM.L     D0-D7/A1-A6, -(SP) *Store registers on stack, except D0
0000006A                            94  left_skip   
0000006A  4242                      95          CLR     D2     
0000006C  1401                      96          MOVE.B  D1,D2 ** Store opcode size in bytes into D2
0000006E                            97          
0000006E  43F9 00010000             98          LEA     output,A1
00000074  45F9 00010000             99          LEA     output,A2
0000007A                           100          
0000007A                           101          *First, decoder will check for the 3 types with hard coded register values
0000007A  163C 0001                102          MOVE.B  #1,D3
0000007E  B07C 003C                103          CMP     #IMMEDIATE,D0
00000082  6700 0068                104          BEQ     dec_immediate
00000086                           105          
00000086  B07C 0038                106          CMP     #ABS_WORD,D0
0000008A  6700 007C                107          BEQ     dec_abs_word
0000008E                           108          
0000008E  B07C 0039                109          CMP     #ABS_LONG,D0
00000092  6700 0080                110          BEQ     dec_abs_long
00000096                           111          
00000096                           112          *If it was none of the above, store the register and mode seperately
00000096  4243                     113          CLR     D3
00000098  1200                     114          MOVE.B  D0,D1
0000009A  0201 0038                115          ANDI.B  #%00111000,D1           *Get mode value
0000009E  0200 0007                116          ANDI.B  #%00000111,D0           *Get register value
000000A2  0600 0030                117          ADDI.B  #$30,D0
000000A6                           118                
000000A6  B27C 0000                119          CMP     #Dn,D1
000000AA  6700 0074                120          BEQ     dec_Dn 
000000AE                           121          
000000AE  B27C 0008                122          CMP     #An,D1
000000B2  6700 0078                123          BEQ     dec_An
000000B6                           124                  
000000B6  B27C 0010                125          CMP     #INDIRECT,D1
000000BA  6700 007C                126          BEQ     dec_indirect
000000BE                           127                  
000000BE  B27C 0018                128          CMP     #POST_INC,D1
000000C2  6700 0088                129          BEQ     dec_post_inc
000000C6                           130                  
000000C6  B27C 0020                131          CMP     #PRE_DEC,D1
000000CA  6700 009A                132          BEQ     dec_pre_dec
000000CE                           133  
000000CE                           134  dec_return ** Common return for all types
000000CE                           135          
000000CE                           136          ** Print display string
000000CE  103C 000E                137          MOVE.B  #14,D0
000000D2  4E4F                     138          TRAP    #15
000000D4                           139          
000000D4                           140          ** If there is immediate data to print, print it
000000D4  B67C 0001                141          CMP     #1,D3
000000D8  6600 000C                142          BNE     imm_skip
000000DC                           143          
000000DC  103C 000F                144          MOVE.B  #15,D0
000000E0  143C 0010                145          MOVE.B  #16,D2
000000E4  4E4F                     146          TRAP    #15
000000E6                           147  
000000E6                           148  imm_skip
000000E6  4CDF 7EFF                149          MOVEM.L     (SP)+, D0-D7/A1-A6 *Return register data from stack, except D0
000000EA  4E75                     150          RTS
000000EC                           151          
000000EC                           152          * Individual EA decoders *
000000EC                           153  
000000EC                           154  dec_immediate   *DECODE IMMEDIATE VALUE*
000000EC  14FC 0023                155          MOVE.B  #'#',(A2)+  * Move '#' char into string
000000F0  14FC 0024                156          MOVE.B  #'$',(A2)+  * Move '$' char into string
000000F4  14FC 0000                157          MOVE.B  #$0,(A2)+   * Null terminate string
000000F8  B47C 0002                158          CMP     #2,D2       * Check if data is word length
000000FC  6700 0006                159          BEQ     imm_word    
00000100                           160          
00000100  2218                     161          MOVE.L  (A0)+,D1    * Length was long
00000102  60CA                     162          BRA     dec_return
00000104                           163          
00000104                           164  imm_word
00000104  3218                     165          MOVE.W  (A0)+,D1    * Length was word
00000106  60C6                     166          BRA     dec_return
00000108                           167  
00000108                           168  
00000108                           169  dec_abs_word    *DECODE ABSOLUTE WORD*
00000108  14FC 0024                170          MOVE.B  #'$',(A2)+  * Move '$' char into string
0000010C  14FC 0000                171          MOVE.B  #$0,(A2)+   * Null terminate string
00000110  3218                     172          MOVE.W  (A0)+,D1
00000112  60BA                     173          BRA     dec_return
00000114                           174          
00000114                           175  
00000114                           176  dec_abs_long    *DECODE ABSOLUTE LONG*
00000114  14FC 0024                177          MOVE.B  #'$',(A2)+  * Move '$' char into string
00000118  14FC 0000                178          MOVE.B  #$0,(A2)+   * Null terminate string
0000011C  2218                     179          MOVE.L  (A0)+,D1
0000011E  60AE                     180          BRA     dec_return
00000120                           181          
00000120                           182  
00000120                           183  dec_Dn          *DECODE DIRECT DATA*
00000120  14FC 0044                184          MOVE.B  #'D',(A2)+
00000124  14C0                     185          MOVE.B  D0,(A2)+
00000126  14FC 0000                186          MOVE.B  #$0,(A2)+
0000012A  60A2                     187          BRA     dec_return
0000012C                           188  
0000012C                           189          
0000012C                           190  dec_An          *DECODE DIRECT ADDRESS*
0000012C  14FC 0041                191          MOVE.B  #'A',(A2)+
00000130  14C0                     192          MOVE.B  D0,(A2)+
00000132  14FC 0000                193          MOVE.B  #$0,(A2)+
00000136  6096                     194          BRA     dec_return
00000138                           195  
00000138                           196  
00000138                           197  dec_indirect    *DECODE INDIRECT ACCESS*
00000138  14FC 0028                198          MOVE.B  #'(',(A2)+
0000013C  14FC 0041                199          MOVE.B  #'A',(A2)+
00000140  14C0                     200          MOVE.B  D0,(A2)+
00000142  14FC 0029                201          MOVE.B  #')',(A2)+
00000146  14FC 0000                202          MOVE.B  #$0,(A2)+
0000014A  6082                     203          BRA     dec_return
0000014C                           204          
0000014C                           205  
0000014C                           206  dec_post_inc    *DECODE INDIRECT POST INCREMENT*
0000014C  14FC 0028                207          MOVE.B  #'(',(A2)+
00000150  14FC 0041                208          MOVE.B  #'A',(A2)+
00000154  14C0                     209          MOVE.B  D0,(A2)+
00000156  14FC 0029                210          MOVE.B  #')',(A2)+
0000015A  14FC 002B                211          MOVE.B  #'+',(A2)+
0000015E  14FC 0000                212          MOVE.B  #$0,(A2)+
00000162  6000 FF6A                213          BRA     dec_return
00000166                           214          
00000166                           215          
00000166                           216  dec_pre_dec    *DECODE INDIRECT PRE DECREMENT*
00000166  14FC 002D                217          MOVE.B  #'-',(A2)+
0000016A  14FC 0028                218          MOVE.B  #'(',(A2)+
0000016E  14FC 0041                219          MOVE.B  #'A',(A2)+
00000172  14C0                     220          MOVE.B  D0,(A2)+
00000174  14FC 0029                221          MOVE.B  #')',(A2)+
00000178  14FC 0000                222          MOVE.B  #$0,(A2)+
0000017C  6000 FF50                223          BRA     dec_return
00000180                           224  
00000180                           225  
00000180                           226  
00000180                           227  
00000180                           228  
00000180                           229  
00000180                           230  
00000180                           231  -------------------- end include --------------------
00000180                           232                  INCLUDE 'connor_opcodes.x68'
00000180                           233  
00000180                           234  MATCH_NOP
00000180  43F9 00000229            235      LEA         pr_NOP,A1
00000186  103C 000E                236      MOVE.B      #14,D0
0000018A  4E4F                     237      TRAP        #15
0000018C  6000 00D0                238      BRA         opdec_return
00000190                           239      
00000190                           240  MATCH_MOVE_B
00000190                           241      ** Move command size into D1
00000190  123C 0002                242      MOVE.B      #2,D1
00000194                           243      ** Print command
00000194  103C 000E                244      MOVE.B      #14,D0
00000198  43F9 0000022D            245      LEA         pr_MOVE,A1
0000019E  4E4F                     246      TRAP        #15
000001A0                           247      ** Print size
000001A0  43F9 00000220            248      LEA         pr_BYTE,A1
000001A6  4E4F                     249      TRAP        #15
000001A8                           250      ** Print space
000001A8  43F9 0000021C            251      LEA         pr_space,A1
000001AE  4E4F                     252      TRAP        #15
000001B0                           253      ** Decode right side ea
000001B0  1002                     254      MOVE.B      D2,D0
000001B2  0200 003F                255      ANDI.B      #%00111111,D0
000001B6  4EB8 0066                256      JSR         EADecoder
000001BA                           257      ** Add comma
000001BA  103C 000E                258      MOVE.B      #14,D0
000001BE  43F9 0000021E            259      LEA         pr_comma,A1
000001C4  4E4F                     260      TRAP        #15
000001C6                           261      ** Decode left side ea
000001C6  3002                     262      MOVE.W      D2,D0
000001C8  0240 0FC0                263      ANDI.W      #%0000111111000000,D0
000001CC  EC48                     264      LSR.W       #6,D0
000001CE  4EB8 004E                265      JSR         EADecoder_left
000001D2                           266      
000001D2  6000 008A                267      BRA         opdec_return
000001D6                           268      
000001D6                           269  MATCH_MOVE_W
000001D6                           270      ** Move command size into D1
000001D6  123C 0002                271      MOVE.B      #2,D1
000001DA                           272      ** Print command
000001DA  103C 000E                273      MOVE.B      #14,D0
000001DE  43F9 0000022D            274      LEA         pr_MOVE,A1
000001E4  4E4F                     275      TRAP        #15
000001E6                           276      ** Print size
000001E6  43F9 00000223            277      LEA         pr_WORD,A1
000001EC  4E4F                     278      TRAP        #15
000001EE                           279      ** Print space
000001EE  43F9 0000021C            280      LEA         pr_space,A1
000001F4  4E4F                     281      TRAP        #15
000001F6                           282      ** Decode right side ea
000001F6  1002                     283      MOVE.B      D2,D0
000001F8  0200 003F                284      ANDI.B      #%00111111,D0
000001FC  4EB8 0066                285      JSR         EADecoder
00000200                           286      ** Add comma
00000200  103C 000E                287      MOVE.B      #14,D0
00000204  43F9 0000021E            288      LEA         pr_comma,A1
0000020A  4E4F                     289      TRAP        #15
0000020C                           290      ** Decode left side ea
0000020C  3002                     291      MOVE.W      D2,D0
0000020E  0240 0FC0                292      ANDI.W      #%0000111111000000,D0
00000212  EC48                     293      LSR.W       #6,D0
00000214  4EB8 004E                294      JSR         EADecoder_left
00000218                           295      
00000218  6000 0044                296      BRA         opdec_return
0000021C                           297  
0000021C                           298  
0000021C                           299  -------------------- end include --------------------
0000021C                           300  
0000021C  =00004E71                301  NOP             EQU $4E71
0000021C  =00000001                302  MOVE_B          EQU %0001
0000021C  =00000003                303  MOVE_W          EQU %0011
0000021C  =00000002                304  MOVE_L          EQU %0010
0000021C  =00000001                305  MOVEA_WL        EQU %001 
0000021C  =00000007                306  MOVEQ_          EQU %0111
0000021C  =00000122                307  MOVEM_TO_MEM_W  EQU %0100100010
0000021C  =00000123                308  MOVEM_TO_MEM_L  EQU %0100100011
0000021C  =00000132                309  MOVEM_TO_REG_W  EQU %0100110010
0000021C  =00000133                310  MOVEM_TO_REG_L  EQU %0100110011
0000021C                           311  
0000021C  =00000018                312  ADDI_B          EQU %0000011000
0000021C  =00000019                313  ADDI_W          EQU %0000011001
0000021C  =0000001A                314  ADDI_L          EQU %0000011010
0000021C                           315  
0000021C  =0000000D                316  ADD_ADDA        EQU %1101
0000021C  =00000000                317  ADD_TO_REG_B    EQU %000
0000021C  =00000001                318  ADD_TO_REG_W    EQU %001
0000021C  =00000002                319  ADD_TO_REG_L    EQU %010
0000021C  =00000004                320  ADD_TO_EA_B     EQU %100
0000021C  =00000005                321  ADD_TO_EA_W     EQU %101
0000021C  =00000006                322  ADD_TO_EA_L     EQU %110
0000021C  =00000003                323  ADDA_W          EQU %011
0000021C  =00000007                324  ADDA_L          EQU %111
0000021C                           325  
0000021C  =00000005                326  ADDQ            EQU %0101
0000021C  =00000000                327  ADDQ_B          EQU %000
0000021C  =00000001                328  ADDQ_W          EQU %001
0000021C  =00000002                329  ADDQ_L          EQU %010
0000021C                           330  
0000021C  =0000000C                331  MULS_W_AND      EQU %1100
0000021C  =00000007                332  MULS_OP_W       EQU %111 
0000021C                           333  
0000021C  =00000009                334  SUB             EQU %1001
0000021C  =00000000                335  SUB_TO_DN_B     EQU %000
0000021C  =00000001                336  SUB_TO_DN_W     EQU %001
0000021C  =00000002                337  SUB_TO_DN_L     EQU %010
0000021C  =00000004                338  SUB_TO_EA_B     EQU %100
0000021C  =00000005                339  SUB_TO_EA_W     EQU %101
0000021C  =00000006                340  SUB_TO_EA_L     EQU %110
0000021C                           341  
0000021C  =00000008                342  DIVU_OR         EQU %1000
0000021C  =00000003                343  DIVU            EQU %011
0000021C                           344  
0000021C  =00000000                345  DN_B            EQU %000
0000021C  =00000001                346  DN_W            EQU %001
0000021C  =00000002                347  DN_L            EQU %010
0000021C  =00000004                348  EA_B            EQU %100
0000021C  =00000005                349  EA_W            EQU %101
0000021C  =00000006                350  EA_L            EQU %110
0000021C                           351  
0000021C  =00000004                352  MULS_LEA_CLR_JSR_RTS    EQU %0100
0000021C  =00004E75                353  RTS             EQU $4E75
0000021C  =00000007                354  LEA             EQU %111
0000021C  =0000013A                355  JSR             EQU %0100111010
0000021C  =00000108                356  CLR_B           EQU %0100001000
0000021C  =00000109                357  CLR_W           EQU %0100001001
0000021C  =0000010A                358  CLR_L           EQU %0100001010
0000021C  =00000130                359  MULS_L          EQU %0100110000
0000021C                           360  
0000021C  =0000038F                361  LSL             EQU %1110001111
0000021C  =0000038B                362  LSR             EQU %1110001011
0000021C  =00000387                363  ASR             EQU %1110000111
0000021C  =00000383                364  ASL             EQU %1110000011
0000021C  =0000039F                365  ROL             EQU %1110011111
0000021C  =0000039B                366  ROR             EQU %1110011011
0000021C                           367  
0000021C  =0000000B                368  CMP             EQU %1011
0000021C  =00000000                369  CMP_B           EQU %000
0000021C  =00000001                370  CMP_W           EQU %001
0000021C  =00000002                371  CMP_L           EQU %010
0000021C                           372  
0000021C  =00000006                373  BCC             EQU %0110
0000021C  =00000000                374  BCC_16          EQU %00000000
0000021C  =000000FF                375  BCC_32          EQU $FF
0000021C  =00000000                376  CC_T            EQU %0000
0000021C  =00000001                377  CC_F            EQU %0001
0000021C  =00000002                378  CC_HI           EQU %0010
0000021C  =00000003                379  CC_LS           EQU %0011
0000021C  =00000004                380  CC_CC           EQU %0100
0000021C  =00000005                381  CC_CS           EQU %0101
0000021C  =00000006                382  CC_NE           EQU %0110
0000021C  =00000007                383  CC_EQ           EQU %0111
0000021C  =00000008                384  CC_VC           EQU %1000
0000021C  =00000009                385  CC_VS           EQU %1001
0000021C  =0000000A                386  CC_PL           EQU %1010
0000021C  =0000000B                387  CC_MI           EQU %1011
0000021C  =0000000C                388  CC_GE           EQU %1100
0000021C  =0000000D                389  CC_LT           EQU %1101
0000021C  =0000000E                390  CC_GT           EQU %1110
0000021C  =0000000F                391  CC_LE           EQU %1111
0000021C                           392  
0000021C= 20 00                    393  pr_space    DC.B    ' ',0
0000021E= 2C 00                    394  pr_comma    DC.B    ',',0
00000220= 2E 42 00                 395  pr_BYTE     DC.B    '.B',0
00000223= 2E 57 00                 396  pr_WORD     DC.B    '.W',0
00000226= 2E 4C 00                 397  pr_LONG     DC.B    '.L',0
00000229                           398  
00000229= 4E 4F 50 00              399  pr_NOP      DC.B    'NOP',0
0000022D= 4D 4F 56 45 00           400  pr_MOVE     DC.B    'MOVE',0
00000232= 4D 4F 56 45 41 00        401  pr_MOVEA    DC.B    'MOVEA',0
00000238= 4D 4F 56 45 51 00        402  pr_MOVEQ    DC.B    'MOVEQ',0
0000023E= 4D 4F 56 45 4D 00        403  pr_MOVEM    DC.B    'MOVEM',0
00000244                           404  
00000244                           405  
00000244                           406  
00000244                           407  
00000244                           408  OpDecoder
00000244  48E7 FF7E                409      MOVEM.L     D0-D7/A1-A6, -(SP)
00000248  4241                     410      CLR         D1
0000024A  6000 0078                411      BRA         CHECK_NOP
0000024E  6000 007E                412      BRA         CHECK_MOVE_AND_MOVEA_AND_MOVEQ
00000252  6000 0430                413      BRA         Check_MOVEM
00000256  6000 04D4                414      BRA         Check_ADDI
0000025A  6000 0028                415      BRA         CHECK_SHIFT_AND_ROTATE
0000025E                           416      
0000025E                           417  opdec_return
0000025E  4CDF 7EFF                418      MOVEM.L     (SP)+, D0-D7/A1-A6
00000262  4E75                     419      RTS
00000264                           420  
00000264                           421  ReadFirstFourBits
00000264                           422  
00000264  48A7 2000                423      MOVEM.W     D2, -(SP)
00000268                           424  
00000268  1E3C 000C                425      MOVE.B      #12,D7 
0000026C  EE6A                     426      LSR.W       D7,D2 
0000026E  1602                     427      MOVE.B      D2,D3
00000270                           428      
00000270  4C9F 0004                429      MOVEM.W     (SP)+,D2
00000274  4E75                     430      RTS
00000276                           431      
00000276                           432  ReadFirstTenBits
00000276                           433      
00000276  48A7 2000                434      MOVEM.W     D2, -(SP)
0000027A                           435   
0000027A  EC4A                     436      LSR.W       #6,D2 
0000027C  3602                     437      MOVE.W      D2,D3
0000027E                           438      
0000027E  4C9F 0004                439      MOVEM.W     (SP)+,D2
00000282  4E75                     440      RTS
00000284                           441  CHECK_SHIFT_AND_ROTATE
00000284                           442  
00000284  61F0                     443      BSR         ReadFirstTenBits
00000286                           444      
00000286  3C3C 038F                445      MOVE.W      #LSL,D6
0000028A  BC43                     446      CMP.W       D3,D6
0000028C  6700 05A0                447      BEQ         MATCH_LSL
00000290                           448      
00000290  3C3C 038B                449      MOVE.W      #LSR,D6
00000294  BC43                     450      CMP.W       D3,D6
00000296  6700 0598                451      BEQ         MATCH_LSR
0000029A                           452      
0000029A  3C3C 0387                453      MOVE.W      #ASR,D6
0000029E  BC43                     454      CMP.W       D3,D6
000002A0  6700 0590                455      BEQ         MATCH_ASR
000002A4                           456      
000002A4  3C3C 0383                457      MOVE.W      #ASL,D6
000002A8  BC43                     458      CMP.W       D3,D6
000002AA  6700 0588                459      BEQ         MATCH_ASL
000002AE                           460      
000002AE  3C3C 039F                461      MOVE.W      #ROL,D6
000002B2  BC43                     462      CMP.W       D3,D6
000002B4  6700 0580                463      BEQ         MATCH_ROL
000002B8                           464      
000002B8  3C3C 039B                465      MOVE.W      #ROR,D6
000002BC  BC43                     466      CMP.W       D3,D6
000002BE  6700 0578                467      BEQ         MATCH_ROR
000002C2                           468      
000002C2  609A                     469      BRA         opdec_return
000002C4                           470      
000002C4                           471  CHECK_NOP
000002C4                           472      
000002C4  3C3C 4E71                473      MOVE.W      #NOP,D6
000002C8  BC42                     474      CMP.W       D2,D6
000002CA  6700 FEB4                475      BEQ         MATCH_NOP
000002CE                           476  
000002CE                           477  CHECK_MOVE_AND_MOVEA_AND_MOVEQ
000002CE                           478  
000002CE  6194                     479      BSR     ReadFirstFourBits
000002D0                           480      
000002D0  1C3C 0001                481      MOVE.B      #MOVE_B,D6
000002D4  BC03                     482      CMP.B       D3,D6
000002D6  6700 FEB8                483      BEQ         MATCH_MOVE_B
000002DA                           484      
000002DA  1C3C 0003                485      MOVE.B      #MOVE_W,D6
000002DE  BC03                     486      CMP.B       D3,D6
000002E0  6700 04B0                487      BEQ         CHECK_MOVEA_W_AND_MOVE_W
000002E4                           488      
000002E4  1C3C 0002                489      MOVE.B      #MOVE_L,D6
000002E8  BC03                     490      CMP.B       D3,D6
000002EA  6700 04D0                491      BEQ         CHECK_MOVEA_L_AND_MOVE_L
000002EE                           492   
000002EE  1C3C 0007                493      MOVE.B      #MOVEQ_,D6
000002F2  BC03                     494      CMP.B       D3,D6
000002F4  6700 04DC                495      BEQ         MATCH_MOVEQ
000002F8                           496      
000002F8  1C3C 000D                497      MOVE.B      #ADD_ADDA,D6
000002FC  BC03                     498      CMP.B       D3,D6
000002FE  6700 03B4                499      BEQ         CHECK_ADD_ADDA
00000302                           500      
00000302  1C3C 0005                501      MOVE.B      #ADDQ,D6
00000306  BC03                     502      CMP.B       D3,D6
00000308  6700 0400                503      BEQ         CHECK_ADDQ
0000030C                           504      
0000030C  1C3C 0009                505      MOVE.B      #SUB,D6
00000310  BC03                     506      CMP.B       D3,D6
00000312  6700 043E                507      BEQ         CHECK_SUB
00000316                           508      
00000316  1C3C 0008                509      MOVE.B      #DIVU_OR,D6
0000031A  BC03                     510      CMP.B       D3,D6
0000031C  6700 0318                511      BEQ         CHECK_DIVU_OR
00000320                           512      
00000320  1C3C 000C                513      MOVE.B      #MULS_W_AND,D6
00000324  BC03                     514      CMP.B       D3,D6
00000326  6700 02C0                515      BEQ         CHECK_MULS_W_AND
0000032A                           516      
0000032A  1C3C 0004                517      MOVE.B      #MULS_LEA_CLR_JSR_RTS,D6
0000032E  BC03                     518      CMP.B       D3,D6
00000330  6700 0264                519      BEQ         CHECK_MULS_LEA_CLR_JSR_RTS
00000334                           520      
00000334  1C3C 000B                521      MOVE.B      #CMP,D6
00000338  BC03                     522      CMP.B       D3,D6
0000033A  6700 0234                523      BEQ         CHECK_CMP
0000033E                           524      
0000033E  1C3C 0006                525      MOVE.B      #BCC,D6
00000342  BC03                     526      CMP.B       D3,D6
00000344  6700 0006                527      BEQ         CHECK_BCC
00000348                           528      
00000348  6000 FF14                529      BRA         opdec_return
0000034C                           530  CHECK_BCC
0000034C                           531      
0000034C  1C3C 0000                532      MOVE.B      #BCC_16,D6
00000350  BC02                     533      CMP.B       D2,D6
00000352  6700 00B8                534      BEQ         CHECK_BCC_16
00000356                           535      
00000356  1C3C 00FF                536      MOVE.B      #BCC_32,D6
0000035A  BC02                     537      CMP.B       D2,D6
0000035C  6700 0156                538      BEQ         CHECK_BCC_32
00000360                           539      
00000360  6000 0002                540      BRA         CHECK_BCC_8
00000364                           541      
00000364                           542  CHECK_BCC_8
00000364                           543      
00000364  6100 01F6                544      BSR         ISOLATE_CC_CODE_FOR_BCC
00000368                           545      
00000368  1C3C 0000                546      MOVE.B      #CC_T,D6
0000036C  BC03                     547      CMP.B       D3,D6
0000036E  6700 04D0                548      BEQ         MATCH_CC_T_8
00000372                           549      
00000372  1C3C 0001                550      MOVE.B      #CC_F,D6
00000376  BC03                     551      CMP.B       D3,D6
00000378  6700 04CC                552      BEQ         MATCH_CC_F_8
0000037C                           553      
0000037C  1C3C 0002                554      MOVE.B      #CC_HI,D6
00000380  BC03                     555      CMP.B       D3,D6
00000382  6700 04C8                556      BEQ         MATCH_CC_HI_8
00000386                           557      
00000386  1C3C 0003                558      MOVE.B      #CC_LS,D6
0000038A  BC03                     559      CMP.B       D3,D6
0000038C  6700 04C4                560      BEQ         MATCH_CC_LS_8
00000390                           561      
00000390  1C3C 0004                562      MOVE.B      #CC_CC,D6
00000394  BC03                     563      CMP.B       D3,D6
00000396  6700 04C0                564      BEQ         MATCH_CC_CC_8
0000039A                           565      
0000039A  1C3C 0005                566      MOVE.B      #CC_CS,D6
0000039E  BC03                     567      CMP.B       D3,D6
000003A0  6700 04BC                568      BEQ         MATCH_CC_CS_8
000003A4                           569      
000003A4  1C3C 0006                570      MOVE.B      #CC_NE,D6
000003A8  BC03                     571      CMP.B       D3,D6
000003AA  6700 04B8                572      BEQ         MATCH_CC_NE_8
000003AE                           573      
000003AE  1C3C 0007                574      MOVE.B      #CC_EQ,D6
000003B2  BC03                     575      CMP.B       D3,D6
000003B4  6700 04B4                576      BEQ         MATCH_CC_EQ_8
000003B8                           577      
000003B8  1C3C 0008                578      MOVE.B      #CC_VC,D6
000003BC  BC03                     579      CMP.B       D3,D6
000003BE  6700 04B0                580      BEQ         MATCH_CC_VC_8
000003C2                           581      
000003C2  1C3C 0009                582      MOVE.B      #CC_VS,D6
000003C6  BC03                     583      CMP.B       D3,D6
000003C8  6700 04AC                584      BEQ         MATCH_CC_VS_8
000003CC                           585      
000003CC  1C3C 000A                586      MOVE.B      #CC_PL,D6
000003D0  BC03                     587      CMP.B       D3,D6
000003D2  6700 04A8                588      BEQ         MATCH_CC_PL_8
000003D6                           589      
000003D6  1C3C 000B                590      MOVE.B      #CC_MI,D6
000003DA  BC03                     591      CMP.B       D3,D6
000003DC  6700 04A4                592      BEQ         MATCH_CC_MI_8
000003E0                           593      
000003E0  1C3C 000C                594      MOVE.B      #CC_GE,D6
000003E4  BC03                     595      CMP.B       D3,D6
000003E6  6700 04A0                596      BEQ         MATCH_CC_GE_8
000003EA                           597      
000003EA  1C3C 000D                598      MOVE.B      #CC_LT,D6
000003EE  BC03                     599      CMP.B       D3,D6
000003F0  6700 049C                600      BEQ         MATCH_CC_LT_8
000003F4                           601      
000003F4  1C3C 000E                602      MOVE.B      #CC_GT,D6
000003F8  BC03                     603      CMP.B       D3,D6
000003FA  6700 0498                604      BEQ         MATCH_CC_GT_8
000003FE                           605      
000003FE  1C3C 000F                606      MOVE.B      #CC_LE,D6
00000402  BC03                     607      CMP.B       D3,D6
00000404  6700 0494                608      BEQ         MATCH_CC_LE_8
00000408                           609  
00000408  6000 0496                610      BRA         ERROR
0000040C                           611      
0000040C                           612  CHECK_BCC_16
0000040C                           613  
0000040C  6100 014E                614      BSR         ISOLATE_CC_CODE_FOR_BCC
00000410                           615      
00000410  1C3C 0000                616      MOVE.B      #CC_T,D6
00000414  BC03                     617      CMP.B       D3,D6
00000416  6700 042A                618      BEQ         MATCH_CC_T_16
0000041A                           619      
0000041A  1C3C 0001                620      MOVE.B      #CC_F,D6
0000041E  BC03                     621      CMP.B       D3,D6
00000420  6700 0426                622      BEQ         MATCH_CC_F_16
00000424                           623      
00000424  1C3C 0002                624      MOVE.B      #CC_HI,D6
00000428  BC03                     625      CMP.B       D3,D6
0000042A  6700 0422                626      BEQ         MATCH_CC_HI_16
0000042E                           627      
0000042E  1C3C 0003                628      MOVE.B      #CC_LS,D6
00000432  BC03                     629      CMP.B       D3,D6
00000434  6700 041E                630      BEQ         MATCH_CC_LS_16
00000438                           631      
00000438  1C3C 0004                632      MOVE.B      #CC_CC,D6
0000043C  BC03                     633      CMP.B       D3,D6
0000043E  6700 041A                634      BEQ         MATCH_CC_CC_16
00000442                           635      
00000442  1C3C 0005                636      MOVE.B      #CC_CS,D6
00000446  BC03                     637      CMP.B       D3,D6
00000448  6700 0416                638      BEQ         MATCH_CC_CS_16
0000044C                           639      
0000044C  1C3C 0006                640      MOVE.B      #CC_NE,D6
00000450  BC03                     641      CMP.B       D3,D6
00000452  6700 0412                642      BEQ         MATCH_CC_NE_16
00000456                           643      
00000456  1C3C 0007                644      MOVE.B      #CC_EQ,D6
0000045A  BC03                     645      CMP.B       D3,D6
0000045C  6700 040E                646      BEQ         MATCH_CC_EQ_16
00000460                           647      
00000460  1C3C 0008                648      MOVE.B      #CC_VC,D6
00000464  BC03                     649      CMP.B       D3,D6
00000466  6700 040A                650      BEQ         MATCH_CC_VC_16
0000046A                           651      
0000046A  1C3C 0009                652      MOVE.B      #CC_VS,D6
0000046E  BC03                     653      CMP.B       D3,D6
00000470  6700 0406                654      BEQ         MATCH_CC_VS_16
00000474                           655      
00000474  1C3C 000A                656      MOVE.B      #CC_PL,D6
00000478  BC03                     657      CMP.B       D3,D6
0000047A  6700 0402                658      BEQ         MATCH_CC_PL_16
0000047E                           659      
0000047E  1C3C 000B                660      MOVE.B      #CC_MI,D6
00000482  BC03                     661      CMP.B       D3,D6
00000484  6700 03FE                662      BEQ         MATCH_CC_MI_16
00000488                           663      
00000488  1C3C 000C                664      MOVE.B      #CC_GE,D6
0000048C  BC03                     665      CMP.B       D3,D6
0000048E  6700 03FA                666      BEQ         MATCH_CC_GE_16
00000492                           667      
00000492  1C3C 000D                668      MOVE.B      #CC_LT,D6
00000496  BC03                     669      CMP.B       D3,D6
00000498  6700 03F6                670      BEQ         MATCH_CC_LT_16
0000049C                           671      
0000049C  1C3C 000E                672      MOVE.B      #CC_GT,D6
000004A0  BC03                     673      CMP.B       D3,D6
000004A2  6700 03F2                674      BEQ         MATCH_CC_GT_16
000004A6                           675      
000004A6  1C3C 000F                676      MOVE.B      #CC_LE,D6
000004AA  BC03                     677      CMP.B       D3,D6
000004AC  6700 03EE                678      BEQ         MATCH_CC_LE_16
000004B0                           679  
000004B0  6000 03EE                680      BRA         ERROR
000004B4                           681  
000004B4                           682  CHECK_BCC_32  
000004B4                           683  
000004B4  6100 00A6                684      BSR         ISOLATE_CC_CODE_FOR_BCC 
000004B8                           685      
000004B8  1C3C 0000                686      MOVE.B      #CC_T,D6
000004BC  BC03                     687      CMP.B       D3,D6
000004BE  6700 0384                688      BEQ         MATCH_CC_T_32
000004C2                           689      
000004C2  1C3C 0001                690      MOVE.B      #CC_F,D6
000004C6  BC03                     691      CMP.B       D3,D6
000004C8  6700 0380                692      BEQ         MATCH_CC_F_32
000004CC                           693      
000004CC  1C3C 0002                694      MOVE.B      #CC_HI,D6
000004D0  BC03                     695      CMP.B       D3,D6
000004D2  6700 037C                696      BEQ         MATCH_CC_HI_32
000004D6                           697      
000004D6  1C3C 0003                698      MOVE.B      #CC_LS,D6
000004DA  BC03                     699      CMP.B       D3,D6
000004DC  6700 0378                700      BEQ         MATCH_CC_LS_32
000004E0                           701      
000004E0  1C3C 0004                702      MOVE.B      #CC_CC,D6
000004E4  BC03                     703      CMP.B       D3,D6
000004E6  6700 0374                704      BEQ         MATCH_CC_CC_32
000004EA                           705      
000004EA  1C3C 0005                706      MOVE.B      #CC_CS,D6
000004EE  BC03                     707      CMP.B       D3,D6
000004F0  6700 0370                708      BEQ         MATCH_CC_CS_32
000004F4                           709      
000004F4  1C3C 0006                710      MOVE.B      #CC_NE,D6
000004F8  BC03                     711      CMP.B       D3,D6
000004FA  6700 036C                712      BEQ         MATCH_CC_NE_32
000004FE                           713      
000004FE  1C3C 0007                714      MOVE.B      #CC_EQ,D6
00000502  BC03                     715      CMP.B       D3,D6
00000504  6700 0368                716      BEQ         MATCH_CC_EQ_32
00000508                           717      
00000508  1C3C 0008                718      MOVE.B      #CC_VC,D6
0000050C  BC03                     719      CMP.B       D3,D6
0000050E  6700 0364                720      BEQ         MATCH_CC_VC_32
00000512                           721      
00000512  1C3C 0009                722      MOVE.B      #CC_VS,D6
00000516  BC03                     723      CMP.B       D3,D6
00000518  6700 0360                724      BEQ         MATCH_CC_VS_32
0000051C                           725      
0000051C  1C3C 000A                726      MOVE.B      #CC_PL,D6
00000520  BC03                     727      CMP.B       D3,D6
00000522  6700 035C                728      BEQ         MATCH_CC_PL_32
00000526                           729      
00000526  1C3C 000B                730      MOVE.B      #CC_MI,D6
0000052A  BC03                     731      CMP.B       D3,D6
0000052C  6700 0358                732      BEQ         MATCH_CC_MI_32
00000530                           733      
00000530  1C3C 000C                734      MOVE.B      #CC_GE,D6
00000534  BC03                     735      CMP.B       D3,D6
00000536  6700 0354                736      BEQ         MATCH_CC_GE_32
0000053A                           737      
0000053A  1C3C 000D                738      MOVE.B      #CC_LT,D6
0000053E  BC03                     739      CMP.B       D3,D6
00000540  6700 0350                740      BEQ         MATCH_CC_LT_32
00000544                           741      
00000544  1C3C 000E                742      MOVE.B      #CC_GT,D6
00000548  BC03                     743      CMP.B       D3,D6
0000054A  6700 034C                744      BEQ         MATCH_CC_GT_32
0000054E                           745      
0000054E  1C3C 000F                746      MOVE.B      #CC_LE,D6
00000552  BC03                     747      CMP.B       D3,D6
00000554  6700 0348                748      BEQ         MATCH_CC_LE_32
00000558                           749  
00000558  6000 0346                750      BRA         ERROR
0000055C                           751   
0000055C                           752  ISOLATE_CC_CODE_FOR_BCC
0000055C                           753  
0000055C  48A7 2000                754      MOVEM.W     D2, -(SP) 
00000560                           755      
00000560  E94A                     756      LSL.W       #4,D2
00000562  1E3C 000C                757      MOVE.B      #12,D7
00000566  EE6A                     758      LSR.W       D7,D2
00000568                           759      
00000568  1602                     760      MOVE.B      D2,D3      
0000056A                           761  
0000056A  4C9F 0004                762      MOVEM.W     (SP)+,D2 
0000056E  4E75                     763      RTS
00000570                           764  CHECK_CMP
00000570                           765      
00000570  6100 0232                766      BSR         ISOLATE_OP_CODE
00000574                           767      
00000574  1C3C 0000                768      MOVE.B      #CMP_B,D6
00000578  BC03                     769      CMP.B       D3,D6
0000057A  6700 02BE                770      BEQ         MATCH_CMP_B
0000057E                           771      
0000057E  1C3C 0001                772      MOVE.B      #CMP_W,D6
00000582  BC03                     773      CMP.B       D3,D6
00000584  6700 02B6                774      BEQ         MATCH_CMP_W
00000588                           775      
00000588  1C3C 0002                776      MOVE.B      #CMP_L,D6
0000058C  BC03                     777      CMP.B       D3,D6
0000058E  6700 02AE                778      BEQ         MATCH_CMP_L
00000592                           779      
00000592  6000 030C                780      BRA         ERROR
00000596                           781  CHECK_MULS_LEA_CLR_JSR_RTS
00000596                           782  
00000596  3C3C 4E75                783      MOVE.W      #RTS,D6
0000059A  BC42                     784      CMP.W       D2,D6
0000059C  6700 0282                785      BEQ         MATCH_RTS
000005A0                           786      
000005A0  6100 0202                787      BSR         ISOLATE_OP_CODE
000005A4                           788      
000005A4  1C3C 0007                789      MOVE.B      #LEA,D6
000005A8  BC03                     790      CMP.B       D3,D6
000005AA  6700 0276                791      BEQ         MATCH_LEA
000005AE                           792      
000005AE  6100 FCC6                793      BSR         ReadFirstTenBits
000005B2                           794      
000005B2  3C3C 013A                795      MOVE.W      #JSR,D6
000005B6  BC43                     796      CMP.W       D3,D6
000005B8  6700 026A                797      BEQ         MATCH_JSR
000005BC                           798      
000005BC  3C3C 0108                799      MOVE.W      #CLR_B,D6
000005C0  BC43                     800      CMP.W       D3,D6
000005C2  6700 0262                801      BEQ         MATCH_CLR_B
000005C6                           802      
000005C6  3C3C 0109                803      MOVE.W      #CLR_W,D6
000005CA  BC43                     804      CMP.W       D3,D6
000005CC  6700 025A                805      BEQ         MATCH_CLR_W
000005D0                           806      
000005D0  3C3C 010A                807      MOVE.W      #CLR_L,D6
000005D4  BC43                     808      CMP.W       D3,D6
000005D6  6700 0252                809      BEQ         MATCH_CLR_L
000005DA                           810      
000005DA  3C3C 0130                811      MOVE.W      #MULS_L,D6  * Shouldn't need to check for the rest of the opcode..?
000005DE  BC43                     812      CMP.W       D3,D6
000005E0  6700 024A                813      BEQ         MATCH_MULS_L
000005E4                           814      
000005E4  6000 02BA                815      BRA         ERROR
000005E8                           816      
000005E8                           817  CHECK_MULS_W_AND
000005E8                           818  
000005E8  6100 01BA                819      BSR         ISOLATE_OP_CODE
000005EC                           820      
000005EC  1C3C 0007                821      MOVE.B      #MULS_OP_W,D6
000005F0  BC03                     822      CMP.B       D3,D6
000005F2  6700 021E                823      BEQ         MATCH_MULS_W
000005F6                           824      
000005F6  1C3C 0000                825      MOVE.B      #DN_B,D6
000005FA  BC03                     826      CMP.B       D3,D6
000005FC  6700 0216                827      BEQ         MATCH_AND_DN_B
00000600                           828      
00000600  1C3C 0001                829      MOVE.B      #DN_W,D6
00000604  BC03                     830      CMP.B       D3,D6
00000606  6700 020E                831      BEQ         MATCH_AND_DN_W
0000060A                           832      
0000060A  1C3C 0002                833      MOVE.B      #DN_L,D6
0000060E  BC03                     834      CMP.B       D3,D6
00000610  6700 0206                835      BEQ         MATCH_AND_DN_L
00000614                           836      
00000614  1C3C 0004                837      MOVE.B      #EA_B,D6
00000618  BC03                     838      CMP.B       D3,D6
0000061A  6700 01FE                839      BEQ         MATCH_AND_EA_B
0000061E                           840      
0000061E  1C3C 0005                841      MOVE.B      #EA_W,D6
00000622  BC03                     842      CMP.B       D3,D6
00000624  6700 01F6                843      BEQ         MATCH_AND_EA_W
00000628                           844      
00000628  1C3C 0006                845      MOVE.B      #EA_L,D6
0000062C  BC03                     846      CMP.B       D3,D6
0000062E  6700 01EE                847      BEQ         MATCH_AND_EA_L
00000632                           848      
00000632  6000 026C                849      BRA         ERROR
00000636                           850  CHECK_DIVU_OR
00000636                           851      
00000636  6100 016C                852      BSR         ISOLATE_OP_CODE
0000063A                           853      
0000063A  1C3C 0003                854      MOVE.B      #DIVU,D6
0000063E  BC03                     855      CMP.B       D3,D6
00000640  6700 01C2                856      BEQ         MATCH_DIVU
00000644                           857      
00000644  1C3C 0000                858      MOVE.B      #DN_B,D6
00000648  BC03                     859      CMP.B       D3,D6
0000064A  6700 01BA                860      BEQ         MATCH_OR_DN_B
0000064E                           861      
0000064E  1C3C 0001                862      MOVE.B      #DN_W,D6
00000652  BC03                     863      CMP.B       D3,D6
00000654  6700 01B2                864      BEQ         MATCH_OR_DN_W
00000658                           865      
00000658  1C3C 0002                866      MOVE.B      #DN_L,D6
0000065C  BC03                     867      CMP.B       D3,D6
0000065E  6700 01AA                868      BEQ         MATCH_OR_DN_L
00000662                           869      
00000662  1C3C 0004                870      MOVE.B      #EA_B,D6
00000666  BC03                     871      CMP.B       D3,D6
00000668  6700 01A2                872      BEQ         MATCH_OR_EA_B
0000066C                           873      
0000066C  1C3C 0005                874      MOVE.B      #EA_W,D6
00000670  BC03                     875      CMP.B       D3,D6
00000672  6700 019A                876      BEQ         MATCH_OR_EA_W
00000676                           877      
00000676  1C3C 0006                878      MOVE.B      #EA_L,D6
0000067A  BC03                     879      CMP.B       D3,D6
0000067C  6700 0192                880      BEQ         MATCH_OR_EA_L
00000680                           881      
00000680  6000 021E                882      BRA         ERROR
00000684                           883  CHECK_MOVEM
00000684                           884      
00000684  6100 FBF0                885      BSR         ReadFirstTenBits
00000688                           886      
00000688  3C3C 0122                887      MOVE.W      #MOVEM_TO_MEM_W,D6
0000068C  BC43                     888      CMP.W       D3,D6
0000068E  6700 0144                889      BEQ         MATCH_MOVEM_TO_MEM_W
00000692                           890      
00000692  3C3C 0123                891      MOVE.W      #MOVEM_TO_MEM_L,D6
00000696  BC43                     892      CMP.W       D3,D6
00000698  6700 013C                893      BEQ         MATCH_MOVEM_TO_MEM_L
0000069C                           894      
0000069C  3C3C 0132                895      MOVE.W      #MOVEM_TO_REG_W,D6
000006A0  BC43                     896      CMP.W       D3,D6
000006A2  6700 0134                897      BEQ         MATCH_MOVEM_TO_REG_W
000006A6                           898      
000006A6  3C3C 0133                899      MOVE.W      #MOVEM_TO_REG_L,D6
000006AA  BC43                     900      CMP.W       D3,D6
000006AC  6700 012C                901      BEQ         MATCH_MOVEM_TO_REG_L
000006B0                           902      
000006B0  6000 FBAC                903      BRA         opdec_return
000006B4                           904  CHECK_ADD_ADDA
000006B4                           905      
000006B4  6100 00EE                906      BSR         ISOLATE_OP_CODE
000006B8                           907      
000006B8  3C3C 0000                908      MOVE.W      #DN_B,D6
000006BC  BC43                     909      CMP.W       D3,D6
000006BE  6700 0122                910      BEQ         MATCH_ADD_TO_REG_B
000006C2                           911      
000006C2  3C3C 0001                912      MOVE.W      #DN_W,D6
000006C6  BC43                     913      CMP.W       D3,D6
000006C8  6700 011A                914      BEQ         MATCH_ADD_TO_REG_W
000006CC                           915      
000006CC  3C3C 0002                916      MOVE.W      #DN_L,D6
000006D0  BC43                     917      CMP.W       D3,D6
000006D2  6700 0112                918      BEQ         MATCH_ADD_TO_REG_L
000006D6                           919      
000006D6  3C3C 0004                920      MOVE.W      #EA_B,D6
000006DA  BC43                     921      CMP.W       D3,D6
000006DC  6700 010A                922      BEQ         MATCH_ADD_TO_EA_B
000006E0                           923      
000006E0  3C3C 0005                924      MOVE.W      #EA_W,D6
000006E4  BC43                     925      CMP.W       D3,D6
000006E6  6700 0102                926      BEQ         MATCH_ADD_TO_EA_W
000006EA                           927      
000006EA  3C3C 0006                928      MOVE.W      #EA_L,D6
000006EE  BC43                     929      CMP.W       D3,D6
000006F0  6700 00FA                930      BEQ         MATCH_ADD_TO_EA_L
000006F4                           931      
000006F4  3C3C 0003                932      MOVE.W      #ADDA_W,D6
000006F8  BC43                     933      CMP.W       D3,D6
000006FA  6700 00F2                934      BEQ         MATCH_ADDA_W
000006FE                           935      
000006FE  3C3C 0007                936      MOVE.W      #ADDA_L,D6
00000702  BC43                     937      CMP.W       D3,D6
00000704  6700 00EA                938      BEQ         MATCH_ADDA_L
00000708                           939      
00000708  4E75                     940      RTS ** Change later?
0000070A                           941  CHECK_ADDQ
0000070A                           942      
0000070A  6100 0098                943      BSR         ISOLATE_OP_CODE
0000070E                           944      
0000070E  3C3C 0000                945      MOVE.W      #ADDQ_B,D6
00000712  BC43                     946      CMP.W       D3,D6
00000714  6700 00DC                947      BEQ         MATCH_ADDQ_B
00000718                           948      
00000718  3C3C 0001                949      MOVE.W      #ADDQ_W,D6
0000071C  BC43                     950      CMP.W       D3,D6
0000071E  6700 00D4                951      BEQ         MATCH_ADDQ_W
00000722                           952      
00000722  3C3C 0002                953      MOVE.W      #ADDQ_L,D6
00000726  BC43                     954      CMP.W       D3,D6
00000728  6700 00CC                955      BEQ         MATCH_ADDQ_L
0000072C                           956      
0000072C                           957  CHECK_ADDI
0000072C                           958  
0000072C  6100 FB48                959      BSR         ReadFirstTenBits
00000730                           960      
00000730  3C3C 0018                961      MOVE.W      #ADDI_B,D6
00000734  BC43                     962      CMP.W       D3,D6
00000736  6700 00A4                963      BEQ         MATCH_ADDI_B
0000073A                           964      
0000073A  3C3C 0019                965      MOVE.W      #ADDI_W,D6
0000073E  BC43                     966      CMP.W       D3,D6
00000740  6700 009C                967      BEQ         MATCH_ADDI_W
00000744                           968      
00000744  3C3C 001A                969      MOVE.W      #ADDI_L,D6
00000748  BC43                     970      CMP.W       D3,D6
0000074A  6700 0094                971      BEQ         MATCH_ADDI_L
0000074E                           972      
0000074E  6000 FB0E                973      BRA         opdec_return
00000752                           974  CHECK_SUB
00000752                           975      
00000752  6100 0050                976      BSR         ISOLATE_OP_CODE
00000756                           977      
00000756  3C3C 0000                978      MOVE.W      #DN_B,D6
0000075A  BC43                     979      CMP.W       D3,D6
0000075C  6700 009A                980      BEQ         MATCH_SUB_TO_DN_B
00000760                           981      
00000760  3C3C 0001                982      MOVE.W      #DN_W,D6
00000764  BC43                     983      CMP.W       D3,D6
00000766  6700 0092                984      BEQ         MATCH_SUB_TO_DN_W
0000076A                           985      
0000076A  3C3C 0002                986      MOVE.W      #DN_L,D6
0000076E  BC43                     987      CMP.W       D3,D6
00000770  6700 008A                988      BEQ         MATCH_SUB_TO_DN_L
00000774                           989      
00000774  3C3C 0004                990      MOVE.W      #EA_B,D6
00000778  BC43                     991      CMP.W       D3,D6
0000077A  6700 0082                992      BEQ         MATCH_SUB_TO_EA_B
0000077E                           993      
0000077E  3C3C 0005                994      MOVE.W      #EA_W,D6
00000782  BC43                     995      CMP.W       D3,D6
00000784  6700 007A                996      BEQ         MATCH_SUB_TO_EA_W
00000788                           997      
00000788  3C3C 0006                998      MOVE.W      #EA_L,D6
0000078C  BC43                     999      CMP.W       D3,D6
0000078E  6700 0072               1000      BEQ         MATCH_SUB_TO_EA_L
00000792                          1001  CHECK_MOVEA_W_AND_MOVE_W
00000792                          1002      
00000792  6100 0010               1003      BSR         ISOLATE_OP_CODE
00000796                          1004         
00000796  1C3C 0001               1005      MOVE.B      #MOVEA_WL,D6
0000079A  BC03                    1006      CMP.B       D3,D6
0000079C  6700 0030               1007      BEQ         MATCH_MOVEA_W
000007A0                          1008      
000007A0  6000 FA34               1009      BRA         MATCH_MOVE_W 
000007A4                          1010  ISOLATE_OP_CODE 
000007A4                          1011  
000007A4  48A7 2000               1012      MOVEM.W     D2, -(SP)    
000007A8                          1013     
000007A8  1E3C 0007               1014      MOVE.B      #7,D7          
000007AC  EF6A                    1015      LSL.W       D7,D2
000007AE  1E3C 000D               1016      MOVE.B      #13,D7
000007B2  EE6A                    1017      LSR.W       D7,D2
000007B4  1602                    1018      MOVE.B      D2,D3    
000007B6                          1019         
000007B6  4C9F 0004               1020      MOVEM.W     (SP)+,D2 
000007BA  4E75                    1021      RTS
000007BC                          1022  CHECK_MOVEA_L_AND_MOVE_L
000007BC                          1023      
000007BC  61E6                    1024      BSR         ISOLATE_OP_CODE
000007BE                          1025         
000007BE  1C3C 0001               1026      MOVE.B      #MOVEA_WL,D6
000007C2  BC03                    1027      CMP.B       D3,D6
000007C4  6700 000A               1028      BEQ         MATCH_MOVEA_L 
000007C8                          1029      
000007C8  6000 0002               1030      BRA         MATCH_MOVE_L   
000007CC                          1031  
000007CC                          1032      
000007CC                          1033  MATCH_MOVE_L
000007CC  3A02                    1034      MOVE.W      D2,D5       *REMOVE
000007CE                          1035  MATCH_MOVEA_W
000007CE  3A02                    1036      MOVE.W      D2,D5       *REMOVE
000007D0                          1037  MATCH_MOVEA_L
000007D0  3A02                    1038      MOVE.W      D2,D5       *REMOVE
000007D2                          1039  MATCH_MOVEQ
000007D2  3A02                    1040      MOVE.W      D2,D5       *REMOVE
000007D4                          1041  MATCH_MOVEM_TO_MEM_W
000007D4  3A02                    1042      MOVE.W      D2,D5       *REMOVE
000007D6                          1043  MATCH_MOVEM_TO_MEM_L
000007D6  3A02                    1044      MOVE.W      D2,D5       *REMOVE
000007D8                          1045  MATCH_MOVEM_TO_REG_W
000007D8  3A02                    1046      MOVE.W      D2,D5       *REMOVE
000007DA                          1047  MATCH_MOVEM_TO_REG_L
000007DA  3A02                    1048      MOVE.W      D2,D5       *REMOVE
000007DC                          1049  MATCH_ADDI_B
000007DC  3A02                    1050      MOVE.W      D2,D5       *REMOVE
000007DE                          1051  MATCH_ADDI_W
000007DE  3A02                    1052      MOVE.W      D2,D5       *REMOVE
000007E0                          1053  MATCH_ADDI_L
000007E0  3A02                    1054      MOVE.W      D2,D5       *REMOVE
000007E2                          1055  MATCH_ADD_TO_REG_B
000007E2  3A02                    1056      MOVE.W      D2,D5       *REMOVE
000007E4                          1057  MATCH_ADD_TO_REG_W
000007E4  3A02                    1058      MOVE.W      D2,D5       *REMOVE
000007E6                          1059  MATCH_ADD_TO_REG_L
000007E6  3A02                    1060      MOVE.W      D2,D5       *REMOVE
000007E8                          1061  MATCH_ADD_TO_EA_B
000007E8  3A02                    1062      MOVE.W      D2,D5       *REMOVE
000007EA                          1063  MATCH_ADD_TO_EA_W
000007EA  3A02                    1064      MOVE.W      D2,D5       *REMOVE
000007EC                          1065  MATCH_ADD_TO_EA_L 
000007EC  3A02                    1066      MOVE.W      D2,D5       *REMOVE
000007EE                          1067  MATCH_ADDA_W
000007EE  3A02                    1068      MOVE.W      D2,D5       *REMOVE
000007F0                          1069  MATCH_ADDA_L
000007F0  3A02                    1070      MOVE.W      D2,D5       *REMOVE
000007F2                          1071  MATCH_ADDQ_B
000007F2  3A02                    1072      MOVE.W      D2,D5       *REMOVE
000007F4                          1073  MATCH_ADDQ_W
000007F4  3A02                    1074      MOVE.W      D2,D5       *REMOVE
000007F6                          1075  MATCH_ADDQ_L
000007F6  3A02                    1076      MOVE.W      D2,D5       *REMOVE
000007F8                          1077  MATCH_SUB_TO_DN_B
000007F8  3A02                    1078      MOVE.W      D2,D5       *REMOVE
000007FA                          1079  MATCH_SUB_TO_DN_W
000007FA  3A02                    1080      MOVE.W      D2,D5       *REMOVE
000007FC                          1081  MATCH_SUB_TO_DN_L
000007FC  3A02                    1082      MOVE.W      D2,D5       *REMOVE
000007FE                          1083  MATCH_SUB_TO_EA_B
000007FE  3A02                    1084      MOVE.W      D2,D5       *REMOVE
00000800                          1085  MATCH_SUB_TO_EA_W
00000800  3A02                    1086      MOVE.W      D2,D5       *REMOVE
00000802                          1087  MATCH_SUB_TO_EA_L
00000802  3A02                    1088      MOVE.W      D2,D5       *REMOVE
00000804                          1089  MATCH_DIVU
00000804  3A02                    1090      MOVE.W      D2,D5       *REMOVE
00000806                          1091  MATCH_OR_DN_B
00000806  3A02                    1092      MOVE.W      D2,D5       *REMOVE
00000808                          1093  MATCH_OR_DN_W
00000808  3A02                    1094      MOVE.W      D2,D5       *REMOVE
0000080A                          1095  MATCH_OR_DN_L
0000080A  3A02                    1096      MOVE.W      D2,D5       *REMOVE
0000080C                          1097  MATCH_OR_EA_B
0000080C  3A02                    1098      MOVE.W      D2,D5       *REMOVE
0000080E                          1099  MATCH_OR_EA_W
0000080E  3A02                    1100      MOVE.W      D2,D5       *REMOVE
00000810                          1101  MATCH_OR_EA_L
00000810  3A02                    1102      MOVE.W      D2,D5       *REMOVE
00000812                          1103  MATCH_MULS_W
00000812  3A02                    1104      MOVE.W      D2,D5       *REMOVE
00000814                          1105  MATCH_AND_DN_B
00000814  3A02                    1106      MOVE.W      D2,D5       *REMOVE
00000816                          1107  MATCH_AND_DN_W
00000816  3A02                    1108      MOVE.W      D2,D5       *REMOVE
00000818                          1109  MATCH_AND_DN_L
00000818  3A02                    1110      MOVE.W      D2,D5       *REMOVE
0000081A                          1111  MATCH_AND_EA_B
0000081A  3A02                    1112      MOVE.W      D2,D5       *REMOVE
0000081C                          1113  MATCH_AND_EA_W
0000081C  3A02                    1114      MOVE.W      D2,D5       *REMOVE
0000081E                          1115  MATCH_AND_EA_L
0000081E  3A02                    1116      MOVE.W      D2,D5       *REMOVE
00000820                          1117  MATCH_RTS
00000820  3A02                    1118      MOVE.W      D2,D5       *REMOVE
00000822                          1119  MATCH_LEA
00000822  3A02                    1120      MOVE.W      D2,D5       *REMOVE
00000824                          1121  MATCH_JSR
00000824  3A02                    1122      MOVE.W      D2,D5       *REMOVE
00000826                          1123  MATCH_CLR_B
00000826  3A02                    1124      MOVE.W      D2,D5       *REMOVE
00000828                          1125  MATCH_CLR_W
00000828  3A02                    1126      MOVE.W      D2,D5       *REMOVE
0000082A                          1127  MATCH_CLR_L
0000082A  3A02                    1128      MOVE.W      D2,D5       *REMOVE
0000082C                          1129  MATCH_MULS_L
0000082C  3A02                    1130      MOVE.W      D2,D5       *REMOVE
0000082E                          1131  MATCH_LSL
0000082E  3A02                    1132      MOVE.W      D2,D5       *REMOVE
00000830                          1133  MATCH_LSR
00000830  3A02                    1134      MOVE.W      D2,D5       *REMOVE
00000832                          1135  MATCH_ASR
00000832  3A02                    1136      MOVE.W      D2,D5       *REMOVE
00000834                          1137  MATCH_ASL
00000834  3A02                    1138      MOVE.W      D2,D5       *REMOVE
00000836                          1139  MATCH_ROL
00000836  3A02                    1140      MOVE.W      D2,D5       *REMOVE
00000838                          1141  MATCH_ROR
00000838  3A02                    1142      MOVE.W      D2,D5       *REMOVE
0000083A                          1143  MATCH_CMP_B
0000083A  3A02                    1144      MOVE.W      D2,D5       *REMOVE
0000083C                          1145  MATCH_CMP_W
0000083C  3A02                    1146      MOVE.W      D2,D5       *REMOVE
0000083E                          1147  MATCH_CMP_L
0000083E  3A02                    1148      MOVE.W      D2,D5       *REMOVE
00000840                          1149      
00000840                          1150  MATCH_CC_T_8
00000840  3A02                    1151      MOVE.W      D2,D5       *REMOVE
00000842                          1152  MATCH_CC_T_16
00000842  3A02                    1153      MOVE.W      D2,D5       *REMOVE
00000844                          1154  MATCH_CC_T_32
00000844  3A02                    1155      MOVE.W      D2,D5       *REMOVE
00000846                          1156  MATCH_CC_F_8
00000846  3A02                    1157      MOVE.W      D2,D5       *REMOVE
00000848                          1158  MATCH_CC_F_16
00000848  3A02                    1159      MOVE.W      D2,D5       *REMOVE
0000084A                          1160  MATCH_CC_F_32
0000084A  3A02                    1161      MOVE.W      D2,D5       *REMOVE
0000084C                          1162  MATCH_CC_HI_8
0000084C  3A02                    1163      MOVE.W      D2,D5       *REMOVE
0000084E                          1164  MATCH_CC_HI_16
0000084E  3A02                    1165      MOVE.W      D2,D5       *REMOVE
00000850                          1166  MATCH_CC_HI_32
00000850  3A02                    1167      MOVE.W      D2,D5       *REMOVE
00000852                          1168  MATCH_CC_LS_8
00000852  3A02                    1169      MOVE.W      D2,D5       *REMOVE
00000854                          1170  MATCH_CC_LS_16
00000854  3A02                    1171      MOVE.W      D2,D5       *REMOVE
00000856                          1172  MATCH_CC_LS_32  
00000856  3A02                    1173      MOVE.W      D2,D5       *REMOVE
00000858                          1174  MATCH_CC_CC_8
00000858  3A02                    1175      MOVE.W      D2,D5       *REMOVE
0000085A                          1176  MATCH_CC_CC_16
0000085A  3A02                    1177      MOVE.W      D2,D5       *REMOVE
0000085C                          1178  MATCH_CC_CC_32
0000085C  3A02                    1179      MOVE.W      D2,D5       *REMOVE
0000085E                          1180  MATCH_CC_CS_8
0000085E  3A02                    1181      MOVE.W      D2,D5       *REMOVE
00000860                          1182  MATCH_CC_CS_16
00000860  3A02                    1183      MOVE.W      D2,D5       *REMOVE
00000862                          1184  MATCH_CC_CS_32
00000862  3A02                    1185      MOVE.W      D2,D5       *REMOVE
00000864                          1186  MATCH_CC_NE_8
00000864  3A02                    1187      MOVE.W      D2,D5       *REMOVE
00000866                          1188  MATCH_CC_NE_16
00000866  3A02                    1189      MOVE.W      D2,D5       *REMOVE
00000868                          1190  MATCH_CC_NE_32
00000868  3A02                    1191      MOVE.W      D2,D5       *REMOVE
0000086A                          1192  MATCH_CC_EQ_8
0000086A  3A02                    1193      MOVE.W      D2,D5       *REMOVE
0000086C                          1194  MATCH_CC_EQ_16
0000086C  3A02                    1195      MOVE.W      D2,D5       *REMOVE
0000086E                          1196  MATCH_CC_EQ_32
0000086E  3A02                    1197      MOVE.W      D2,D5       *REMOVE
00000870                          1198  MATCH_CC_VC_8
00000870  3A02                    1199      MOVE.W      D2,D5       *REMOVE
00000872                          1200  MATCH_CC_VC_16
00000872  3A02                    1201      MOVE.W      D2,D5       *REMOVE
00000874                          1202  MATCH_CC_VC_32
00000874  3A02                    1203      MOVE.W      D2,D5       *REMOVE
00000876                          1204  MATCH_CC_VS_8
00000876  3A02                    1205      MOVE.W      D2,D5       *REMOVE
00000878                          1206  MATCH_CC_VS_16
00000878  3A02                    1207      MOVE.W      D2,D5       *REMOVE
0000087A                          1208  MATCH_CC_VS_32
0000087A  3A02                    1209      MOVE.W      D2,D5       *REMOVE
0000087C                          1210  MATCH_CC_PL_8
0000087C  3A02                    1211      MOVE.W      D2,D5       *REMOVE
0000087E                          1212  MATCH_CC_PL_16
0000087E  3A02                    1213      MOVE.W      D2,D5       *REMOVE
00000880                          1214  MATCH_CC_PL_32
00000880  3A02                    1215      MOVE.W      D2,D5       *REMOVE
00000882                          1216  MATCH_CC_MI_8
00000882  3A02                    1217      MOVE.W      D2,D5       *REMOVE
00000884                          1218  MATCH_CC_MI_16
00000884  3A02                    1219      MOVE.W      D2,D5       *REMOVE
00000886                          1220  MATCH_CC_MI_32
00000886  3A02                    1221      MOVE.W      D2,D5       *REMOVE
00000888                          1222  MATCH_CC_GE_8
00000888  3A02                    1223      MOVE.W      D2,D5       *REMOVE
0000088A                          1224  MATCH_CC_GE_16
0000088A  3A02                    1225      MOVE.W      D2,D5       *REMOVE
0000088C                          1226  MATCH_CC_GE_32
0000088C  3A02                    1227      MOVE.W      D2,D5       *REMOVE
0000088E                          1228  MATCH_CC_LT_8
0000088E  3A02                    1229      MOVE.W      D2,D5       *REMOVE
00000890                          1230  MATCH_CC_LT_16
00000890  3A02                    1231      MOVE.W      D2,D5       *REMOVE
00000892                          1232  MATCH_CC_LT_32
00000892  3A02                    1233      MOVE.W      D2,D5       *REMOVE
00000894                          1234  MATCH_CC_GT_8
00000894  3A02                    1235      MOVE.W      D2,D5       *REMOVE
00000896                          1236  MATCH_CC_GT_16
00000896  3A02                    1237      MOVE.W      D2,D5       *REMOVE
00000898                          1238  MATCH_CC_GT_32
00000898  3A02                    1239      MOVE.W      D2,D5       *REMOVE
0000089A                          1240  MATCH_CC_LE_8
0000089A  3A02                    1241      MOVE.W      D2,D5       *REMOVE
0000089C                          1242  MATCH_CC_LE_16
0000089C  3A02                    1243      MOVE.W      D2,D5       *REMOVE
0000089E                          1244  MATCH_CC_LE_32
0000089E  3A02                    1245      MOVE.W      D2,D5       *REMOVE
000008A0                          1246  ERROR
000008A0  3A02                    1247      MOVE.W      D2,D5       *REMOVE
000008A2                          1248  
000008A2                          1249  
000008A2                          1250  -------------------- end include --------------------
000008A2                          1251          
000008A2= 45 6E 74 65 72 20 ...   1252  MESSAGE     DC.B    'Enter the address of compiled code: ',0
000008C7= 49 6E 76 61 6C 69 ...   1253  ERROR_MSG   DC.B    'Invalid input, please rerun',0
000008E3= 20 00                   1254  SPACER      DC.B    ' ',0
000008E5                          1255  
00001000                          1256  START:  ORG     $1000                
00001000                          1257  
00001000                          1258  
00001000                          1259  *------Code for input-------
00001000                          1260          
00001000  43F8 08A2               1261          LEA     MESSAGE,A1      *Code block for first message
00001004  103C 000E               1262          MOVE.B  #14,D0
00001008  4E4F                    1263          TRAP    #15
0000100A                          1264         
0000100A  227C 00004000           1265          MOVEA.L #$4000, A1
00001010  103C 0002               1266          MOVE.B  #2,D0           *Code block for reading input
00001014  4E4F                    1267          TRAP    #15   
00001016  3001                    1268          MOVE.W  D1,D0
00001018                          1269          
00001018  2049                    1270          MOVEA.L A1,A0           *Move the contents of A1 to A0 for the conversion
0000101A  4EB8 0000               1271          JSR     A2H             *Branch to Connor's conversion code      
0000101E                          1272          
0000101E  2040                    1273          MOVEA.L D0,A0
00001020                          1274          
00001020  0C50 FFFF               1275          CMPI.W  #$FFFF,(A0)
00001024  6700 0026               1276          BEQ     input_error
00001028                          1277      
00001028                          1278  loop_start
00001028                          1279          
00001028  2208                    1280          MOVE.L  A0,D1           *Print out the address we're working on
0000102A  7410                    1281          MOVE.L  #16,D2          
0000102C  700F                    1282          MOVE.L  #15,D0          
0000102E  4E4F                    1283          TRAP    #15
00001030                          1284  
00001030  700E                    1285          MOVE.L  #14,D0
00001032  43F8 08E3               1286          LEA     SPACER,A1
00001036  4E4F                    1287          TRAP    #15
00001038                          1288          
00001038  3418                    1289          MOVE.W  (A0)+,D2
0000103A  0C42 FFFF               1290          CMPI.W  #$FFFF,D2
0000103E  6700 0014               1291          BEQ     Done
00001042                          1292          
00001042  4EB8 0244               1293          JSR     OpDecoder
00001046                          1294          
00001046  700D                    1295          MOVE.L  #13,D0
00001048  4E4F                    1296          TRAP    #15
0000104A                          1297          
0000104A  60DC                    1298          BRA     loop_start
0000104C                          1299          
0000104C                          1300  input_error        
0000104C  700D                    1301          MOVE.L  #13,D0
0000104E  43F8 08C7               1302          LEA     ERROR_MSG,A1
00001052  4E4F                    1303          TRAP    #15
00001054                          1304  Done        
00001054                          1305  
00001054                          1306          END    $1000

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
A2H                 0
ABS_LONG            39
ABS_WORD            38
ADDA_L              7
ADDA_W              3
ADDBYTELOOP         24
ADDBYTES            1C
ADDI_B              18
ADDI_L              1A
ADDI_W              19
ADDQ                5
ADDQ_B              0
ADDQ_L              2
ADDQ_W              1
ADD_ADDA            D
ADD_TO_EA_B         4
ADD_TO_EA_L         6
ADD_TO_EA_W         5
ADD_TO_REG_B        0
ADD_TO_REG_L        2
ADD_TO_REG_W        1
AN                  8
ASL                 383
ASR                 387
BCC                 6
BCC_16              0
BCC_32              FF
CC_CC               4
CC_CS               5
CC_EQ               7
CC_F                1
CC_GE               C
CC_GT               E
CC_HI               2
CC_LE               F
CC_LS               3
CC_LT               D
CC_MI               B
CC_NE               6
CC_PL               A
CC_T                0
CC_VC               8
CC_VS               9
CHECK_ADDI          72C
CHECK_ADDQ          70A
CHECK_ADD_ADDA      6B4
CHECK_BCC           34C
CHECK_BCC_16        40C
CHECK_BCC_32        4B4
CHECK_BCC_8         364
CHECK_CMP           570
CHECK_DIVU_OR       636
CHECK_MOVEA_L_AND_MOVE_L  7BC
CHECK_MOVEA_W_AND_MOVE_W  792
CHECK_MOVEM         684
CHECK_MOVE_AND_MOVEA_AND_MOVEQ  2CE
CHECK_MULS_LEA_CLR_JSR_RTS  596
CHECK_MULS_W_AND    5E8
CHECK_NOP           2C4
CHECK_SHIFT_AND_ROTATE  284
CHECK_SUB           752
CLR_B               108
CLR_L               10A
CLR_W               109
CMP                 B
CMP_B               0
CMP_L               2
CMP_W               1
CONV_END            2C
CR                  D
DEC_ABS_LONG        114
DEC_ABS_WORD        108
DEC_AN              12C
DEC_DN              120
DEC_IMMEDIATE       EC
DEC_INDIRECT        138
DEC_POST_INC        14C
DEC_PRE_DEC         166
DEC_RETURN          CE
DIVU                3
DIVU_OR             8
DN                  0
DN_B                0
DN_L                2
DN_W                1
DONE                1054
EADECODER           66
EADECODER_LEFT      4E
EA_B                4
EA_L                6
EA_W                5
ERROR               8A0
ERROR_MSG           8C7
IMMEDIATE           3C
IMM_SKIP            E6
IMM_WORD            104
INDIRECT            10
INPUT_ERROR         104C
ISOLATE_CC_CODE_FOR_BCC  55C
ISOLATE_OP_CODE     7A4
JSR                 13A
LEA                 7
LEFT_SKIP           6A
LF                  A
LOOP_START          1028
LSL                 38F
LSR                 38B
MATCH_ADDA_L        7F0
MATCH_ADDA_W        7EE
MATCH_ADDI_B        7DC
MATCH_ADDI_L        7E0
MATCH_ADDI_W        7DE
MATCH_ADDQ_B        7F2
MATCH_ADDQ_L        7F6
MATCH_ADDQ_W        7F4
MATCH_ADD_TO_EA_B   7E8
MATCH_ADD_TO_EA_L   7EC
MATCH_ADD_TO_EA_W   7EA
MATCH_ADD_TO_REG_B  7E2
MATCH_ADD_TO_REG_L  7E6
MATCH_ADD_TO_REG_W  7E4
MATCH_AND_DN_B      814
MATCH_AND_DN_L      818
MATCH_AND_DN_W      816
MATCH_AND_EA_B      81A
MATCH_AND_EA_L      81E
MATCH_AND_EA_W      81C
MATCH_ASL           834
MATCH_ASR           832
MATCH_CC_CC_16      85A
MATCH_CC_CC_32      85C
MATCH_CC_CC_8       858
MATCH_CC_CS_16      860
MATCH_CC_CS_32      862
MATCH_CC_CS_8       85E
MATCH_CC_EQ_16      86C
MATCH_CC_EQ_32      86E
MATCH_CC_EQ_8       86A
MATCH_CC_F_16       848
MATCH_CC_F_32       84A
MATCH_CC_F_8        846
MATCH_CC_GE_16      88A
MATCH_CC_GE_32      88C
MATCH_CC_GE_8       888
MATCH_CC_GT_16      896
MATCH_CC_GT_32      898
MATCH_CC_GT_8       894
MATCH_CC_HI_16      84E
MATCH_CC_HI_32      850
MATCH_CC_HI_8       84C
MATCH_CC_LE_16      89C
MATCH_CC_LE_32      89E
MATCH_CC_LE_8       89A
MATCH_CC_LS_16      854
MATCH_CC_LS_32      856
MATCH_CC_LS_8       852
MATCH_CC_LT_16      890
MATCH_CC_LT_32      892
MATCH_CC_LT_8       88E
MATCH_CC_MI_16      884
MATCH_CC_MI_32      886
MATCH_CC_MI_8       882
MATCH_CC_NE_16      866
MATCH_CC_NE_32      868
MATCH_CC_NE_8       864
MATCH_CC_PL_16      87E
MATCH_CC_PL_32      880
MATCH_CC_PL_8       87C
MATCH_CC_T_16       842
MATCH_CC_T_32       844
MATCH_CC_T_8        840
MATCH_CC_VC_16      872
MATCH_CC_VC_32      874
MATCH_CC_VC_8       870
MATCH_CC_VS_16      878
MATCH_CC_VS_32      87A
MATCH_CC_VS_8       876
MATCH_CLR_B         826
MATCH_CLR_L         82A
MATCH_CLR_W         828
MATCH_CMP_B         83A
MATCH_CMP_L         83E
MATCH_CMP_W         83C
MATCH_DIVU          804
MATCH_JSR           824
MATCH_LEA           822
MATCH_LSL           82E
MATCH_LSR           830
MATCH_MOVEA_L       7D0
MATCH_MOVEA_W       7CE
MATCH_MOVEM_TO_MEM_L  7D6
MATCH_MOVEM_TO_MEM_W  7D4
MATCH_MOVEM_TO_REG_L  7DA
MATCH_MOVEM_TO_REG_W  7D8
MATCH_MOVEQ         7D2
MATCH_MOVE_B        190
MATCH_MOVE_L        7CC
MATCH_MOVE_W        1D6
MATCH_MULS_L        82C
MATCH_MULS_W        812
MATCH_NOP           180
MATCH_OR_DN_B       806
MATCH_OR_DN_L       80A
MATCH_OR_DN_W       808
MATCH_OR_EA_B       80C
MATCH_OR_EA_L       810
MATCH_OR_EA_W       80E
MATCH_ROL           836
MATCH_ROR           838
MATCH_RTS           820
MATCH_SUB_TO_DN_B   7F8
MATCH_SUB_TO_DN_L   7FC
MATCH_SUB_TO_DN_W   7FA
MATCH_SUB_TO_EA_B   7FE
MATCH_SUB_TO_EA_L   802
MATCH_SUB_TO_EA_W   800
MESSAGE             8A2
MOVEA_WL            1
MOVEM_TO_MEM_L      123
MOVEM_TO_MEM_W      122
MOVEM_TO_REG_L      133
MOVEM_TO_REG_W      132
MOVEQ_              7
MOVE_B              1
MOVE_L              2
MOVE_W              3
MULS_L              130
MULS_LEA_CLR_JSR_RTS  4
MULS_OP_W           7
MULS_W_AND          C
NOP                 4E71
NUMSUB              32
NUMSUBRTN           E
OPDECODER           244
OPDEC_RETURN        25E
OUTPUT              10000
POST_INC            18
PRE_DEC             20
PR_BYTE             220
PR_COMMA            21E
PR_LONG             226
PR_MOVE             22D
PR_MOVEA            232
PR_MOVEM            23E
PR_MOVEQ            238
PR_NOP              229
PR_SPACE            21C
PR_WORD             223
READFIRSTFOURBITS   264
READFIRSTTENBITS    276
ROL                 39F
ROR                 39B
RTS                 4E75
SPACER              8E3
START               1000
SUB                 9
SUB_TO_DN_B         0
SUB_TO_DN_L         2
SUB_TO_DN_W         1
SUB_TO_EA_B         4
SUB_TO_EA_L         6
SUB_TO_EA_W         5
UPSEND              46
UPSUB               3C
UPSUBRTN            16

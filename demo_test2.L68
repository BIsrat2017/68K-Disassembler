00007000 Starting Address
Assembler used: EASy68K Editor/Assembler v5.15.04
Created On: 3/4/2017 10:14:20 PM

00000000                             1  *****************************
00000000                             2  *
00000000                             3  * demo_test.X68
00000000                             4  *
00000000                             5  * Created 06/02/2016
00000000                             6  *
00000000                             7  * Test program for CSS 422 Disassembler Project Demo
00000000                             8  *
00000000                             9  *****************************
00000000                            10  
00000000  =00007000                 11  start           EQU     $00007000       * ORG and END address
00000000                            12  
00000000                            13  * ORG the program so that it straddles the address boundary $00007FFF to $00008000
00000000                            14  
00007000                            15                  ORG     start
00007000                            16  
00007000                            17  * NOP and similar instructions. Should clearly differentiate NOP and RTS from others.
00007000                            18                  
00007000                            19                  *NOP                    *Required
00007000                            20                  *RTS                    *Required
00007000                            21  
00007000                            22  
00007000                            23  * This is a group of ADD instructions
00007000                            24  add_start       
00007000                            25                  *MOVE.B  D1,D2
00007000  3401                      26                  MOVE.W  D1,D2
00007002                            27                  *MOVE.L  D1,D2
00007002                            28                  *MOVEA.W D1,A5
00007002                            29                  *MOVEA.L D1,A5
00007002                            30                  
00007002                            31                 * MOVEM.W     D2, -(SP)
00007002                            32                  *MOVEM.L     D2, -(SP)
00007002                            33                  *MOVEM.W     (SP)+,D2
00007002                            34                  *MOVEM.L     (SP)+,D2
00007002                            35  
00007002                            36                  *ADD.W   D1,D2
00007002  0641 4E71                 37                  ADDI.W  #$4E71,D1
00007006  5E87                      38                  ADDQ.L  #07,D7          
00007008  D6DE                      39                  ADDA.W  (A6)+,A3
0000700A  DDFC 3000AAAA             40                  ADDA.L  #$3000AAAA,A6
00007010  0685 D50000AA             41                  ADDI.L  #$D50000AA,D5
00007016  0646 5555                 42                  ADDI.W  #$5555,D6
0000701A  0600 00FE                 43                  ADDI.B  #$FE,D0
0000701E  9441                      44                  SUB.W   D1,D2
00007020                            45  
00007020                            46  * Move instructions
00007020  1200                      47  moves           MOVE.B  D0,D1
00007022  33CE F30045BB             48                  MOVE.W  A6,$F30045BB
00007028  2000                      49                  MOVE.L  D0,D0
0000702A  2CC7                      50                  MOVE.L  D7,(A6)+
0000702C  36BC FFD0                 51                  MOVE.W  #$FFD0,(A3)
00007030  23F9 C00022AA 3000A0F8    52                  MOVE.L  $C00022AA,$3000A0F8
0000703A  2B08                      53                  MOVE.L  A0,-(A5)
0000703C  3056                      54                  MOVEA.W (A6),A0
0000703E  48A7 07E0                 55                  MOVEM.W A0/A1/A2/D5/D6/D7,-(SP)
00007042  4CD8 1B07                 56                  MOVEM.L (A0)+,D0/D1/D2/A4/A3/A0/A1
00007046  7401                      57                  MOVEQ   #1,D2
00007048                            58                  
00007048                            59  * Divide and multiple optional instructions
00007048                            60  *               ANDI.B  #$01,$4568
00007048  C6B9 8000A000             61  ands            AND.L   $8000A000,D3
0000704E  E128                      62  shifts          LSL.B   D0,D0
00007050  E848                      63                  LSR.W   #4,D0
00007052  E3DA                      64                  LSL.W   (A2)+
00007054  EC27                      65                  ASR.B   D6,D7
00007056  EB27                      66                  ASL.B   D5,D7
00007058  E5BB                      67  rolls           ROL.L   D2,D3
0000705A  E89E                      68                  ROR.L   #4,D6
0000705C                            69  
0000705C  4204                      70  clear           CLR.B   D4
0000705E  45F9 DC00FF00             71  load_addr       LEA     $DC00FF00,A2
00007064  49D5                      72                  LEA     (A5),A4
00007066                            73  *               LEA     (ands,PC),A3
00007066                            74  *               LEA     -$20(A2,D7),A2
00007066                            75  
00007066  BA13                      76  compares        CMP.B   (A3),D5
00007068  B4B9 ABC0FF00             77                  CMP.L   $ABC0FF00,D2
0000706E  B8C2                      78                  CMPA.W  D2,A4
00007070                            79  * Branches      
00007070                            80                  
00007070                            81  
00007070                            82  * Jump and branch instructions
00007070                            83  
00007070  4E93                      84  jmplabel        JSR     (A3)            * Address register indirect
00007072  64E8                      85                  BCC     clear           
00007074  6EF0                      86                  BGT     compares                
00007076  6F00 0002                 87                  BLE     multiply
0000707A                            88                  
0000707A                            89  *These are not required instructions
0000707A  C7C0                      90  multiply        MULS    D0,D3           *Optional instruction
0000707C  C1D6                      91                  MULS    (A6),D0         *Optional instruction
0000707E  C3FC 4567                 92                  MULS    #$4567,D1       *Optional instruction
00007082  8ADB                      93                  DIVU    (A3)+,D5        *Optional instruction
00007084  4E71                      94                  NOP
00007086  4E71                      95                  NOP
00007088  9882                      96                  SUB.L   D2,D4
0000708A  9E93                      97                  SUB.L   (A3),D7
0000708C                            98          
0000708C                            99  
0000708C                           100                  END     start

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
ADD_START           7000
ANDS                7048
CLEAR               705C
COMPARES            7066
JMPLABEL            7070
LOAD_ADDR           705E
MOVES               7020
MULTIPLY            707A
ROLLS               7058
SHIFTS              704E
START               7000

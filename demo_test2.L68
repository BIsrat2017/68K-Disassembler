00007000 Starting Address
Assembler used: EASy68K Editor/Assembler v5.15.04
Created On: 3/8/2017 9:41:44 PM

00000000                             1  *****************************
00000000                             2  *
00000000                             3  * demo_test.X68
00000000                             4  *
00000000                             5  * Created 06/02/2016
00000000                             6  *
00000000                             7  * Test program for CSS 422 Disassembler Project Demo
00000000                             8  *
00000000                             9  *****************************
00000000                            10  
00000000  =00007000                 11  start           EQU     $00007000       * ORG and END address
00000000                            12  
00000000                            13  * ORG the program so that it straddles the address boundary $00007FFF to $00008000
00000000                            14  
00007000                            15                  ORG     start
00007000                            16  
00007000                            17  * NOP and similar instructions. Should clearly differentiate NOP and RTS from others.
00007000                            18                  
00007000                            19                  *NOP                    *Required
00007000                            20                  *RTS                    *Required
00007000                            21  
00007000                            22  
00007000                            23  * This is a group of ADD instructions
00007000                            24  add_start       
00007000                            25                  
00007000                            26  label
00007000                            27  
00007000                            28                   
00007000  64FE                      29                  BCC.B  label    
00007002                            30                  *JSR    (A3)            * Address register indirect
00007002                            31                  *BCC    clear           
00007002                            32                  *BGT    compares                
00007002                            33                  *BLE    multiply
00007002                            34                  *CMP.B  (A3),D5
00007002                            35                  *CMP.L  $ABC0FF00,D2
00007002                            36                  *DIVU   (A3)+,D5
00007002                            37                  *MOVE.B  #$45,D2
00007002                            38                  *MOVE.W  D1,D2
00007002                            39                  *MOVE.L  D1,D2
00007002                            40                  *MOVEA.W D1,A5
00007002                            41                  *MOVEA.L D1,A5
00007002                            42                  
00007002                            43                 * MOVEM.W     D2, -(SP)
00007002                            44                  *MOVEM.L     D2, -(SP)
00007002                            45                  *MOVEM.W     (SP)+,D2
00007002                            46                  *MOVEM.L     (SP)+,D2
00007002                            47  
00007002                            48                  *ADD.W   D1,D2
00007002                            49                  *ADD.B   D1,D2
00007002                            50                  *ADD.L   D1,D2
00007002                            51                  *ADDI.W #$4E71,D1
00007002                            52                  *ADDQ.L #07,D7          
00007002                            53                  *ADDA.W (A6)+,A3
00007002                            54                  *ADDA.L #$3000AAAA,A6
00007002                            55                  *ADDI.L #$D50000AA,D5
00007002                            56                  *ADDI.W #$5555,D6
00007002                            57                  *ADDI.B #$FE,D0
00007002                            58                  *SUB.W   D1,D2
00007002                            59                  *AND.L  $8000A000,D3
00007002                            60                  *MULS   D0,D3
00007002                            61  
00007002                            62  * Move instructions
00007002  1200                      63  moves           MOVE.B  D0,D1
00007004  33CE F30045BB             64                  MOVE.W  A6,$F30045BB
0000700A  2000                      65                  MOVE.L  D0,D0
0000700C  2CC7                      66                  MOVE.L  D7,(A6)+
0000700E  36BC FFD0                 67                  MOVE.W  #$FFD0,(A3)
00007012  23F9 C00022AA 3000A0F8    68                  MOVE.L  $C00022AA,$3000A0F8
0000701C  2B08                      69                  MOVE.L  A0,-(A5)
0000701E  3056                      70                  MOVEA.W (A6),A0
00007020  48A7 07E0                 71                  MOVEM.W A0/A1/A2/D5/D6/D7,-(SP)
00007024  4CD8 1B07                 72                  MOVEM.L (A0)+,D0/D1/D2/A4/A3/A0/A1
00007028  7401                      73                  MOVEQ   #1,D2
0000702A                            74                  
0000702A                            75  * Divide and multiple optional instructions
0000702A                            76  *               ANDI.B  #$01,$4568
0000702A  C6B9 8000A000             77  ands            AND.L   $8000A000,D3
00007030  E128                      78  shifts          LSL.B   D0,D0
00007032  E848                      79                  LSR.W   #4,D0
00007034  E3DA                      80                  LSL.W   (A2)+
00007036  EC27                      81                  ASR.B   D6,D7
00007038  EB27                      82                  ASL.B   D5,D7
0000703A  E5BB                      83  rolls           ROL.L   D2,D3
0000703C  E89E                      84                  ROR.L   #4,D6
0000703E                            85  
0000703E  4204                      86  clear           CLR.B   D4
00007040  45F9 DC00FF00             87  load_addr       LEA     $DC00FF00,A2
00007046  49D5                      88                  LEA     (A5),A4
00007048                            89  *               LEA     (ands,PC),A3
00007048                            90  *               LEA     -$20(A2,D7),A2
00007048                            91  
00007048  BA13                      92  compares        CMP.B   (A3),D5
0000704A  B4B9 ABC0FF00             93                  CMP.L   $ABC0FF00,D2
00007050  B8C2                      94                  CMPA.W  D2,A4
00007052                            95  * Branches      
00007052                            96                  
00007052                            97  
00007052                            98  * Jump and branch instructions
00007052                            99  
00007052  4E93                     100  jmplabel        JSR     (A3)            * Address register indirect
00007054  64E8                     101                  BCC     clear           
00007056  6EF0                     102                  BGT     compares                
00007058  6F00 0002                103                  BLE     multiply
0000705C                           104                  
0000705C                           105  *These are not required instructions
0000705C  C7C0                     106  multiply        MULS    D0,D3           *Optional instruction
0000705E  C1D6                     107                  MULS    (A6),D0         *Optional instruction
00007060  C3FC 4567                108                  MULS    #$4567,D1       *Optional instruction
00007064  8ADB                     109                  DIVU    (A3)+,D5        *Optional instruction
00007066  4E71                     110                  NOP
00007068  4E71                     111                  NOP
0000706A  9882                     112                  SUB.L   D2,D4
0000706C  9E93                     113                  SUB.L   (A3),D7
0000706E                           114          
0000706E                           115  
0000706E                           116                  END     start

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
ADD_START           7000
ANDS                702A
CLEAR               703E
COMPARES            7048
JMPLABEL            7052
LABEL               7000
LOAD_ADDR           7040
MOVES               7002
MULTIPLY            705C
ROLLS               703A
SHIFTS              7030
START               7000

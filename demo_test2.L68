00007000 Starting Address
Assembler used: EASy68K Editor/Assembler v5.15.04
Created On: 3/9/2017 10:42:34 PM

00000000                             1  *****************************
00000000                             2  *
00000000                             3  * demo_test.X68
00000000                             4  *
00000000                             5  * Created 06/02/2016
00000000                             6  *
00000000                             7  * Test program for CSS 422 Disassembler Project Demo
00000000                             8  *
00000000                             9  *****************************
00000000                            10  
00000000  =00007000                 11  start           EQU     $00007000       * ORG and END address
00000000                            12  
00000000                            13  * ORG the program so that it straddles the address boundary $00007FFF to $00008000
00000000                            14  
00007000                            15                  ORG     start
00007000                            16  
00007000                            17  * NOP and similar instructions. Should clearly differentiate NOP and RTS from others.
00007000                            18                  
00007000                            19                  *NOP                    *Required
00007000                            20                  *RTS                    *Required
00007000                            21  
00007000                            22  
00007000                            23  * This is a group of ADD instructions
00007000  E128                      24  add_start       LSL.B   D0,D0
00007002  E848                      25                  LSR.W   #4,D0
00007004  E3DA                      26                  LSL.W   (A2)+
00007006                            27                  *JSR    (A3)            * Address register indirect
00007006                            28                  *BCC    clear           
00007006                            29                  *BGT    compares                
00007006                            30                  *BLE    multiply
00007006                            31                  *CMP.B  (A3),D5
00007006                            32                  *CMP.L  $ABC0FF00,D2
00007006                            33                  *DIVU   (A3)+,D5
00007006  143C 0045                 34                  MOVE.B  #$45,D2
0000700A                            35                  *MOVE.W  D1,D2
0000700A                            36                  *MOVE.L  D1,D2
0000700A                            37                  *MOVEA.W D1,A5
0000700A                            38                  *MOVEA.L D1,A5
0000700A                            39                  
0000700A                            40                 * MOVEM.W     D2, -(SP)
0000700A                            41                  *MOVEM.L     D2, -(SP)
0000700A                            42                  *MOVEM.W     (SP)+,D2
0000700A                            43                  *MOVEM.L     (SP)+,D2
0000700A                            44  
0000700A  D441                      45                  ADD.W   D1,D2
0000700C  D401                      46                  ADD.B   D1,D2
0000700E  D481                      47                  ADD.L   D1,D2
00007010  0641 4E71                 48                  ADDI.W  #$4E71,D1
00007014  5E87                      49                  ADDQ.L  #07,D7          
00007016  D6DE                      50                  ADDA.W  (A6)+,A3
00007018  DDFC 3000AAAA             51                  ADDA.L  #$3000AAAA,A6
0000701E  0685 D50000AA             52                  ADDI.L  #$D50000AA,D5
00007024  0646 5555                 53                  ADDI.W  #$5555,D6
00007028  0600 00FE                 54                  ADDI.B  #$FE,D0
0000702C                            55                  *SUB.W   D1,D2
0000702C                            56                  *AND.L  $8000A000,D3
0000702C                            57                  *MULS   D0,D3
0000702C                            58  
0000702C                            59  * Move instructions
0000702C  1200                      60  moves           MOVE.B  D0,D1
0000702E  33CE F30045BB             61                  MOVE.W  A6,$F30045BB
00007034  2000                      62                  MOVE.L  D0,D0
00007036  2CC7                      63                  MOVE.L  D7,(A6)+
00007038  36BC FFD0                 64                  MOVE.W  #$FFD0,(A3)
0000703C  23F9 C00022AA 3000A0F8    65                  MOVE.L  $C00022AA,$3000A0F8
00007046  2B08                      66                  MOVE.L  A0,-(A5)
00007048  3056                      67                  MOVEA.W (A6),A0
0000704A  48A7 07E0                 68                  MOVEM.W A0/A1/A2/D5/D6/D7,-(SP)
0000704E  4CD8 1B07                 69                  MOVEM.L (A0)+,D0/D1/D2/A4/A3/A0/A1
00007052  7401                      70                  MOVEQ   #1,D2
00007054                            71                  
00007054                            72  * Divide and multiple optional instructions
00007054                            73  *               ANDI.B  #$01,$4568
00007054  C6B9 8000A000             74  ands            AND.L   $8000A000,D3
0000705A  E128                      75  shifts          LSL.B   D0,D0
0000705C  E848                      76                  LSR.W   #4,D0
0000705E  E3DA                      77                  LSL.W   (A2)+
00007060  EC27                      78                  ASR.B   D6,D7
00007062  EB27                      79                  ASL.B   D5,D7
00007064  E5BB                      80  rolls           ROL.L   D2,D3
00007066  E89E                      81                  ROR.L   #4,D6
00007068                            82  
00007068  4204                      83  clear           CLR.B   D4
0000706A  45F9 DC00FF00             84  load_addr       LEA     $DC00FF00,A2
00007070  49D5                      85                  LEA     (A5),A4
00007072                            86  *               LEA     (ands,PC),A3
00007072                            87  *               LEA     -$20(A2,D7),A2
00007072                            88  
00007072  BA13                      89  compares        CMP.B   (A3),D5
00007074  B4B9 ABC0FF00             90                  CMP.L   $ABC0FF00,D2
0000707A  B8C2                      91                  CMPA.W  D2,A4
0000707C                            92  * Branches      
0000707C                            93                  
0000707C                            94  
0000707C                            95  * Jump and branch instructions
0000707C                            96  
0000707C  4E93                      97  jmplabel        JSR     (A3)            * Address register indirect
0000707E  64E8                      98                  BCC     clear           
00007080  6EF0                      99                  BGT     compares                
00007082  6F00 0002                100                  BLE     multiply
00007086                           101                  
00007086                           102  *These are not required instructions
00007086  C7C0                     103  multiply        MULS    D0,D3           *Optional instruction
00007088  C1D6                     104                  MULS    (A6),D0         *Optional instruction
0000708A  C3FC 4567                105                  MULS    #$4567,D1       *Optional instruction
0000708E  8ADB                     106                  DIVU    (A3)+,D5        *Optional instruction
00007090  4E71                     107                  NOP
00007092  4E71                     108                  NOP
00007094  9882                     109                  SUB.L   D2,D4
00007096  9E93                     110                  SUB.L   (A3),D7
00007098                           111          
00007098                           112  
00007098                           113                  END     start

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
ADD_START           7000
ANDS                7054
CLEAR               7068
COMPARES            7072
JMPLABEL            707C
LOAD_ADDR           706A
MOVES               702C
MULTIPLY            7086
ROLLS               7064
SHIFTS              705A
START               7000

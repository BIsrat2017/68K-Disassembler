00001000 Starting Address
Assembler used: EASy68K Editor/Assembler v5.15.04
Created On: 3/10/2017 2:16:32 PM

00000000                             1  *-----------------------------------------------------------
00000000                             2  * Title      : Main Driver Program
00000000                             3  * Written by : Arsany Azmy, Connor McGwire
00000000                             4  * Date       :
00000000                             5  * Description:
00000000                             6  *-----------------------------------------------------------
00000000  =0000000D                  7  CR      EQU     $0D
00000000  =0000000A                  8  LF      EQU     $0A
00000000                             9  
00000000                            10  
00000000                            11  *** Common strings for printing
00000000= 20 00                     12  pr_space    DC.B    ' ',0
00000002= 20 20 00                  13  pr_space2   DC.B    '  ',0
00000005= 20 20 20 00               14  pr_space3   DC.B    '   ',0
00000009= 20 20 20 20 00            15  pr_space4   DC.B    '    ',0
0000000E= 20 20 20 20 20 00         16  pr_space5   DC.B    '     ',0
00000014= 2C 00                     17  pr_comma    DC.B    ',',0
00000016= 2E 42 00                  18  pr_BYTE     DC.B    '.B',0
00000019= 2E 57 00                  19  pr_WORD     DC.B    '.W',0
0000001C= 2E 4C 00                  20  pr_LONG     DC.B    '.L',0
0000001F= 23 00                     21  pr_hash     DC.B    '#',0
00000021= 23 24 00                  22  pr_hextag   DC.B    '#$',0
00000024= 2D 00                     23  pr_hyphen   DC.B    '-',0
00000026= 2F 00                     24  pr_slash    DC.B    '/',0
00000028                            25  
00000028                            26  
00000028                            27  ** Command strings constants
00000028= 4E 4F 50 00               28  pr_NOP      DC.B    'NOP',0
0000002C= 4D 4F 56 45 00            29  pr_MOVE     DC.B    'MOVE',0
00000031= 4D 4F 56 45 41 00         30  pr_MOVEA    DC.B    'MOVEA',0
00000037= 4D 4F 56 45 4D 00         31  pr_MOVEM    DC.B    'MOVEM',0
0000003D= 41 44 44 41 00            32  pr_ADDA     DC.B    'ADDA',0
00000042= 4D 55 4C 53 00            33  pr_MULS     DC.B    'MULS',0
00000047= 43 4C 52 00               34  pr_CLR      DC.B    'CLR',0
0000004B= 52 54 53 00               35  pr_RTS      DC.B    'RTS',0
0000004F= 43 4D 50 00               36  pr_CMP      DC.B    'CMP',0
00000053= 4A 53 52 00               37  pr_JSR      DC.B    'JSR',0
00000057= 41 4E 44 00               38  pr_AND      DC.B    'AND',0
0000005B= 4D 4F 56 45 51 00         39  pr_MOVEQ    DC.B    'MOVEQ',0
00000061= 41 44 44 00               40  pr_ADD      DC.B    'ADD',0
00000065= 41 44 44 49 00            41  pr_ADDI     DC.B    'ADDI',0
0000006A= 41 44 44 51 00            42  pr_ADDQ     DC.B    'ADDQ',0
0000006F= 53 55 42 00               43  pr_SUB      DC.B    'SUB',0
00000073= 44 49 56 55 00            44  pr_DIVU     DC.B    'DIVU',0
00000078                            45  
00000078= 44 00                     46  pr_reg      DC.B    'D',0
0000007A                            47  
0000007A= 52 4F 00                  48  pr_SHIFT_RO   DC.B  'RO',0
0000007D= 41 53 00                  49  pr_SHIFT_AS   DC.B  'AS',0
00000080= 4C 53 00                  50  pr_SHIFT_LS   DC.B  'LS',0
00000083= 4C 00                     51  pr_SHIFT_L    DC.B  'L',0
00000085= 52 00                     52  pr_SHIFT_R    DC.B  'R',0
00000087                            53  
00000087= 45 52 52 4F 52 00         54  pr_ERROR    DC.B    'ERROR',0
0000008D                            55  
0000008D= 42 43 43 00               56  pr_BCC_CC   DC.B    'BCC',0
00000091= 42 43 53 00               57  pr_BCC_CS   DC.B    'BCS',0
00000095= 42 45 51 00               58  pr_BCC_EQ   DC.B    'BEQ',0
00000099= 42 47 45 00               59  pr_BCC_GE   DC.B    'BGE',0
0000009D= 42 47 54 00               60  pr_BCC_GT   DC.B    'BGT',0
000000A1= 42 48 49 00               61  pr_BCC_HI   DC.B    'BHI',0
000000A5= 42 4C 45 00               62  pr_BCC_LE   DC.B    'BLE',0
000000A9= 42 4C 53 00               63  pr_BCC_LS   DC.B    'BLS',0
000000AD= 42 4C 54 00               64  pr_BCC_LT   DC.B    'BLT',0
000000B1= 42 4D 49 00               65  pr_BCC_MI   DC.B    'BMI',0
000000B5= 42 4E 45 00               66  pr_BCC_NE   DC.B    'BNE',0
000000B9= 42 50 4C 00               67  pr_BCC_PL   DC.B    'BPL',0
000000BD= 42 56 43 00               68  pr_BCC_VC   DC.B    'BVC',0
000000C1= 42 56 53 00               69  pr_BCC_VS   DC.B    'BVS',0
000000C5                            70  
000000C5                            71  ** Register constants
000000C5= 44 30 00                  72  pr_d0       DC.B    'D0',0
000000C8= 44 31 00                  73  pr_d1       DC.B    'D1',0
000000CB= 44 32 00                  74  pr_d2       DC.B    'D2',0
000000CE= 44 33 00                  75  pr_d3       DC.B    'D3',0
000000D1= 44 34 00                  76  pr_d4       DC.B    'D4',0
000000D4= 44 35 00                  77  pr_d5       DC.B    'D5',0
000000D7= 44 36 00                  78  pr_d6       DC.B    'D6',0
000000DA= 44 37 00                  79  pr_d7       DC.B    'D7',0
000000DD                            80  
000000DD= 41 30 00                  81  pr_a0       DC.B    'A0',0
000000E0= 41 31 00                  82  pr_a1       DC.B    'A1',0
000000E3= 41 32 00                  83  pr_a2       DC.B    'A2',0
000000E6= 41 33 00                  84  pr_a3       DC.B    'A3',0
000000E9= 41 34 00                  85  pr_a4       DC.B    'A4',0
000000EC= 41 35 00                  86  pr_a5       DC.B    'A5',0
000000EF= 41 36 00                  87  pr_a6       DC.B    'A6',0
000000F2= 41 37 00                  88  pr_a7       DC.B    'A7',0
000000F5                            89  
000000F5                            90  ** Messages
000000F5= 45 6E 74 65 72 20 ...     91  MESSAGE     DC.B    'Enter the address of compiled code: ',0
0000011A= 49 6E 76 61 6C 69 ...     92  ERROR_MSG   DC.B    'Invalid input, please rerun',0
00000136= 45 6E 64 20 6F 66 ...     93  DONE_MSG    DC.B    'End of program found!',0
0000014C                            94  
00001000                            95  start   ORG     $1000
00001000                            96  
00001000                            97  program_start
00001000                            98  
00001000                            99  *------Code for input-------
00001000                           100  
00001000  43F8 00F5                101          LEA     MESSAGE,A1      *Code block for first message
00001004  103C 000E                102          MOVE.B  #14,D0
00001008  4E4F                     103          TRAP    #15
0000100A                           104  
0000100A  227C 00004000            105          MOVEA.L #$4000, A1
00001010  103C 0002                106          MOVE.B  #2,D0           *Code block for reading input
00001014  4E4F                     107          TRAP    #15
00001016  3001                     108          MOVE.W  D1,D0
00001018                           109  
00001018  2049                     110          MOVEA.L A1,A0           *Move the contents of A1 to A0 for the conversion
0000101A  4EB9 00001064            111          JSR     A2H             *Branch to Connor's conversion code
00001020                           112  
00001020  2040                     113          MOVEA.L D0,A0
00001022                           114  
00001022  0C50 FFFF                115          CMPI.W  #$FFFF,(A0)
00001026  6700 0028                116          BEQ     input_error
0000102A                           117  
0000102A                           118  loop_start
0000102A                           119  
0000102A  2208                     120          MOVE.L  A0,D1           *Print out the address we're working on
0000102C  7410                     121          MOVE.L  #16,D2
0000102E  700F                     122          MOVE.L  #15,D0
00001030  4E4F                     123          TRAP    #15
00001032                           124  
00001032  700E                     125          MOVE.L  #14,D0
00001034  43F8 0009                126          LEA     pr_space4,A1
00001038  4E4F                     127          TRAP    #15
0000103A                           128  
0000103A  3418                     129          MOVE.W  (A0)+,D2
0000103C  0C42 FFFF                130          CMPI.W  #$FFFF,D2
00001040  6700 0016                131          BEQ     Done
00001044                           132  
00001044  4EB9 000010B2            133          JSR     OpDecoder
0000104A                           134  
0000104A  700D                     135          MOVE.L  #13,D0
0000104C  4E4F                     136          TRAP    #15
0000104E                           137  
0000104E  60DA                     138          BRA     loop_start
00001050                           139  
00001050                           140  input_error
00001050  700D                     141          MOVE.L  #13,D0
00001052  43F8 011A                142          LEA     ERROR_MSG,A1
00001056  4E4F                     143          TRAP    #15
00001058                           144  Done
00001058  700E                     145          MOVE.L  #14,D0
0000105A  43F8 0136                146          LEA     DONE_MSG,A1
0000105E  4E4F                     147          TRAP    #15
00001060  FFFF FFFF                148          SIMHALT
00001064                           149  
00001064                           150          INCLUDE 'ASCII_HEX_Conversions.x68'
00001064                           151  
00001064                           152  
00001064                           153  
00001064                           154  A2H     *Converts and ASCII Byte string into HEX; Size WORD
00001064  48E7 7FFE                155          MOVEM.L     D1-D7/A0-A6, -(SP)  
00001068                           156          
00001068  3400                     157          MOVE.W  D0,D2
0000106A  3202                     158          MOVE.W  D2,D1                   *Store length of string into D1 for looping
0000106C  2248                     159          MOVEA.L A0,A1                   *Copy starting point of string
0000106E                           160  
0000106E  6000 0026                161          BRA     numSub
00001072                           162  numSubRTN
00001072  2049                     163          MOVEA.L A1,A0                   *Restore address position
00001074  3202                     164          MOVE.W  D2,D1                   *Reset loop counter
00001076                           165          
00001076  6000 0028                166          BRA     upSub
0000107A                           167  upSubRTN        
0000107A  2049                     168          MOVEA.L A1,A0                   *Restore address position
0000107C  3202                     169          MOVE.W  D2,D1                   *Reset loop counter
0000107E  4240                     170          CLR     D0                      *Clear D0
00001080                           171  addBytes
00001080  D018                     172          ADD.B   (A0)+,D0
00001082  5301                     173          SUBI.B  #1,D1
00001084  6700 000A                174          BEQ     conv_end
00001088                           175  addByteLoop
00001088  E980                     176          ASL.L   #4,D0
0000108A  D018                     177          ADD.B   (A0)+,D0
0000108C  5301                     178          SUBI.B  #1,D1
0000108E  66F8                     179          BNE     addByteLoop
00001090                           180  conv_end
00001090  4CDF 7FFE                181          MOVEM.L     (SP)+, D1-D7/A0-A6
00001094  4E75                     182          RTS
00001096                           183          
00001096                           184  numSub  *Convert ASCII 'number' to true number byte; Should not be called outside of the A2H subroutines
00001096  0418 0030                185          SUBI.B  #$30,(A0)+              *Subtract difference between null ASCII and '0' ASCII
0000109A  5341                     186          SUB.W   #1,D1                   *Decrement loop counter
0000109C  66F8                     187          BNE     numSub                  *If loop has not ended restart
0000109E  60D2                     188          BRA     numSubRTN
000010A0                           189  
000010A0                           190  upSub   *Loops through string to remove any upper case characters 
000010A0                           191          *that may remain in the string
000010A0  0C10 0009                192          CMPI.B  #9,(A0)                 *Check if the value is greater than 0-9
000010A4  6F00 0004                193          BLE     upSEnd                  *If it's not, continue loop
000010A8  5310                     194          SUBI.B  #1,(A0)                 *Otherwise, subtract difference between ASCII 'number' code and 'A' code
000010AA                           195  upSEnd
000010AA  5248                     196          ADDA.W  #1,A0                   *Increment to next position to check for uppercase
000010AC  5341                     197          SUB.W   #1,D1                   *Decrement loop counter
000010AE  66F0                     198          BNE     upSub                   
000010B0  60C8                     199          BRA     upSubRTN
000010B2                           200  
000010B2                           201  
000010B2                           202  -------------------- end include --------------------
000010B2                           203          INCLUDE 'opcodes.x68'
000010B2                           204  
000010B2  =00004E71                205  NOP             EQU $4E71
000010B2  =00000001                206  MOVE_B          EQU %0001
000010B2  =00000003                207  MOVE_W          EQU %0011
000010B2  =00000002                208  MOVE_L          EQU %0010
000010B2  =00000001                209  MOVEA_WL        EQU %001
000010B2  =00000007                210  MOVEQ_          EQU %0111
000010B2                           211  
000010B2  =00000018                212  ADDI_B          EQU %0000011000
000010B2  =00000019                213  ADDI_W          EQU %0000011001
000010B2  =0000001A                214  ADDI_L          EQU %0000011010
000010B2                           215  
000010B2  =0000000D                216  ADD_ADDA        EQU %1101
000010B2  =00000000                217  ADD_TO_REG_B    EQU %000
000010B2  =00000001                218  ADD_TO_REG_W    EQU %001
000010B2  =00000002                219  ADD_TO_REG_L    EQU %010
000010B2  =00000004                220  ADD_TO_EA_B     EQU %100
000010B2  =00000005                221  ADD_TO_EA_W     EQU %101
000010B2  =00000006                222  ADD_TO_EA_L     EQU %110
000010B2  =00000003                223  ADDA_W          EQU %011
000010B2  =00000007                224  ADDA_L          EQU %111
000010B2                           225  
000010B2  =00000005                226  ADDQ            EQU %0101
000010B2  =00000000                227  ADDQ_B          EQU %000
000010B2  =00000001                228  ADDQ_W          EQU %001
000010B2  =00000002                229  ADDQ_L          EQU %010
000010B2                           230  
000010B2  =0000000C                231  MULS_W_AND      EQU %1100
000010B2  =00000007                232  MULS_OP_W       EQU %111
000010B2                           233  
000010B2  =00000009                234  SUB             EQU %1001
000010B2  =00000000                235  SUB_TO_DN_B     EQU %000
000010B2  =00000001                236  SUB_TO_DN_W     EQU %001
000010B2  =00000002                237  SUB_TO_DN_L     EQU %010
000010B2  =00000004                238  SUB_TO_EA_B     EQU %100
000010B2  =00000005                239  SUB_TO_EA_W     EQU %101
000010B2  =00000006                240  SUB_TO_EA_L     EQU %110
000010B2                           241  
000010B2  =00000008                242  DIVU_OR         EQU %1000
000010B2  =00000003                243  DIVU            EQU %011
000010B2                           244  
000010B2  =00000000                245  DN_B            EQU %000
000010B2  =00000001                246  DN_W            EQU %001
000010B2  =00000002                247  DN_L            EQU %010
000010B2  =00000004                248  EA_B            EQU %100
000010B2  =00000005                249  EA_W            EQU %101
000010B2  =00000006                250  EA_L            EQU %110
000010B2                           251  
000010B2  =00000004                252  MULS_LEA_CLR_JSR_RTS_MOVEM    EQU %0100
000010B2  =00004E75                253  RTS             EQU $4E75
000010B2  =00000007                254  LEA             EQU %111
000010B2  =0000013A                255  JSR             EQU %0100111010
000010B2  =00000108                256  CLR_B           EQU %0100001000
000010B2  =00000109                257  CLR_W           EQU %0100001001
000010B2  =0000010A                258  CLR_L           EQU %0100001010
000010B2  =00000130                259  MULS_L          EQU %0100110000
000010B2                           260  
000010B2  =00000122                261  MOVEM_TO_MEM_W  EQU %0100100010
000010B2  =00000123                262  MOVEM_TO_MEM_L  EQU %0100100011
000010B2  =00000132                263  MOVEM_TO_REG_W  EQU %0100110010
000010B2  =00000133                264  MOVEM_TO_REG_L  EQU %0100110011
000010B2                           265  
000010B2  =0000038F                266  LSL             EQU %1110001111
000010B2  =0000038B                267  LSR             EQU %1110001011
000010B2  =00000387                268  ASR             EQU %1110000111
000010B2  =00000383                269  ASL             EQU %1110000011
000010B2  =0000039F                270  ROL             EQU %1110011111
000010B2  =0000039B                271  ROR             EQU %1110011011
000010B2                           272  
000010B2  =0000000B                273  CMP             EQU %1011
000010B2  =00000000                274  CMP_B           EQU %000
000010B2  =00000001                275  CMP_W           EQU %001
000010B2  =00000002                276  CMP_L           EQU %010
000010B2                           277  
000010B2  =00000006                278  BCC             EQU %0110
000010B2  =00000000                279  BCC_16          EQU %00000000
000010B2  =000000FF                280  BCC_32          EQU $FF
000010B2  =00000000                281  CC_T            EQU %0000
000010B2  =00000001                282  CC_F            EQU %0001
000010B2  =00000002                283  CC_HI           EQU %0010
000010B2  =00000003                284  CC_LS           EQU %0011
000010B2  =00000004                285  CC_CC           EQU %0100
000010B2  =00000005                286  CC_CS           EQU %0101
000010B2  =00000006                287  CC_NE           EQU %0110
000010B2  =00000007                288  CC_EQ           EQU %0111
000010B2  =00000008                289  CC_VC           EQU %1000
000010B2  =00000009                290  CC_VS           EQU %1001
000010B2  =0000000A                291  CC_PL           EQU %1010
000010B2  =0000000B                292  CC_MI           EQU %1011
000010B2  =0000000C                293  CC_GE           EQU %1100
000010B2  =0000000D                294  CC_LT           EQU %1101
000010B2  =0000000E                295  CC_GT           EQU %1110
000010B2  =0000000F                296  CC_LE           EQU %1111
000010B2                           297  
000010B2                           298  
000010B2                           299  
000010B2                           300  
000010B2                           301  
000010B2                           302  
000010B2                           303  OpDecoder
000010B2  48E7 FF7E                304      MOVEM.L     D0-D7/A1-A6, -(SP)
000010B6  4241                     305      CLR         D1
000010B8  6000 0074                306      BRA         CHECK_NOP
000010BC                           307  NOP_RETURN
000010BC  6000 007C                308      BRA         CHECK_FOUR_BIT_SIG
000010C0                           309  FOUR_BIT_RETURN
000010C0  6000 04E0                310      BRA         CHECK_ADDI
000010C4                           311  ADDI_RETURN
000010C4  6000 0028                312      BRA         CHECK_SHIFT_AND_ROTATE
000010C8                           313  
000010C8                           314  opdec_return
000010C8  4CDF 7EFF                315      MOVEM.L     (SP)+, D0-D7/A1-A6
000010CC  4E75                     316      RTS
000010CE                           317  
000010CE                           318  ReadFirstFourBits
000010CE                           319  
000010CE  48A7 2000                320      MOVEM.W     D2, -(SP)
000010D2                           321  
000010D2  1E3C 000C                322      MOVE.B      #12,D7
000010D6  EE6A                     323      LSR.W       D7,D2
000010D8  1602                     324      MOVE.B      D2,D3
000010DA                           325  
000010DA  4C9F 0004                326      MOVEM.W     (SP)+,D2
000010DE  4E75                     327      RTS
000010E0                           328  
000010E0                           329  ReadFirstTenBits
000010E0                           330  
000010E0  48A7 2000                331      MOVEM.W     D2, -(SP)
000010E4                           332  
000010E4  EC4A                     333      LSR.W       #6,D2
000010E6  3602                     334      MOVE.W      D2,D3
000010E8                           335  
000010E8  4C9F 0004                336      MOVEM.W     (SP)+,D2
000010EC  4E75                     337      RTS
000010EE                           338  CHECK_SHIFT_AND_ROTATE
000010EE                           339  
000010EE  61F0                     340      BSR         ReadFirstTenBits
000010F0                           341  
000010F0  3C3C 038F                342      MOVE.W      #LSL,D6
000010F4  BC43                     343      CMP.W       D3,D6
000010F6  6700 0D6C                344      BEQ         MATCH_LSL
000010FA                           345  
000010FA  3C3C 038B                346      MOVE.W      #LSR,D6
000010FE  BC43                     347      CMP.W       D3,D6
00001100  6700 0D64                348      BEQ         MATCH_LSR
00001104                           349  
00001104  3C3C 0387                350      MOVE.W      #ASR,D6
00001108  BC43                     351      CMP.W       D3,D6
0000110A  6700 0D5C                352      BEQ         MATCH_ASR
0000110E                           353  
0000110E  3C3C 0383                354      MOVE.W      #ASL,D6
00001112  BC43                     355      CMP.W       D3,D6
00001114  6700 0D54                356      BEQ         MATCH_ASL
00001118                           357  
00001118  3C3C 039F                358      MOVE.W      #ROL,D6
0000111C  BC43                     359      CMP.W       D3,D6
0000111E  6700 0D4C                360      BEQ         MATCH_ROL
00001122                           361  
00001122  3C3C 039B                362      MOVE.W      #ROR,D6
00001126  BC43                     363      CMP.W       D3,D6
00001128  6700 0D44                364      BEQ         MATCH_ROR
0000112C                           365  
0000112C  609A                     366      BRA         opdec_return
0000112E                           367  
0000112E                           368  CHECK_NOP
0000112E                           369  
0000112E  3C3C 4E71                370      MOVE.W      #NOP,D6
00001132  BC42                     371      CMP.W       D2,D6
00001134  6700 0650                372      BEQ         MATCH_NOP
00001138                           373  
00001138  6082                     374      BRA         NOP_RETURN
0000113A                           375  
0000113A                           376  CHECK_FOUR_BIT_SIG
0000113A                           377  
0000113A  6192                     378      BSR         ReadFirstFourBits
0000113C                           379  
0000113C  1C3C 0001                380      MOVE.B      #MOVE_B,D6
00001140  BC03                     381      CMP.B       D3,D6
00001142  6700 0650                382      BEQ         MATCH_MOVE_B
00001146                           383  
00001146  1C3C 0003                384      MOVE.B      #MOVE_W,D6
0000114A  BC03                     385      CMP.B       D3,D6
0000114C  6700 04BA                386      BEQ         CHECK_MOVEA_W_AND_MOVE_W
00001150                           387  
00001150  1C3C 0002                388      MOVE.B      #MOVE_L,D6
00001154  BC03                     389      CMP.B       D3,D6
00001156  6700 04DA                390      BEQ         CHECK_MOVEA_L_AND_MOVE_L
0000115A                           391  
0000115A  1C3C 0007                392      MOVE.B      #MOVEQ_,D6
0000115E  BC03                     393      CMP.B       D3,D6
00001160  6700 06A4                394      BEQ         MATCH_MOVEQ
00001164                           395  
00001164  1C3C 000D                396      MOVE.B      #ADD_ADDA,D6
00001168  BC03                     397      CMP.B       D3,D6
0000116A  6700 03BE                398      BEQ         CHECK_ADD_ADDA
0000116E                           399  
0000116E  1C3C 0005                400      MOVE.B      #ADDQ,D6
00001172  BC03                     401      CMP.B       D3,D6
00001174  6700 040A                402      BEQ         CHECK_ADDQ
00001178                           403  
00001178  1C3C 0009                404      MOVE.B      #SUB,D6
0000117C  BC03                     405      CMP.B       D3,D6
0000117E  6700 0448                406      BEQ         CHECK_SUB
00001182                           407  
00001182  1C3C 0008                408      MOVE.B      #DIVU_OR,D6
00001186  BC03                     409      CMP.B       D3,D6
00001188  6700 0322                410      BEQ         CHECK_DIVU_OR
0000118C                           411  
0000118C  1C3C 000C                412      MOVE.B      #MULS_W_AND,D6
00001190  BC03                     413      CMP.B       D3,D6
00001192  6700 02CA                414      BEQ         CHECK_MULS_W_AND
00001196                           415  
00001196  1C3C 0004                416      MOVE.B      #MULS_LEA_CLR_JSR_RTS_MOVEM,D6
0000119A  BC03                     417      CMP.B       D3,D6
0000119C  6700 026E                418      BEQ         CHECK_MULS_LEA_CLR_JSR_RTS
000011A0                           419  
000011A0  1C3C 000B                420      MOVE.B      #CMP,D6
000011A4  BC03                     421      CMP.B       D3,D6
000011A6  6700 023E                422      BEQ         CHECK_CMP
000011AA                           423  
000011AA  1C3C 0006                424      MOVE.B      #BCC,D6
000011AE  BC03                     425      CMP.B       D3,D6
000011B0  6700 0010                426      BEQ         CHECK_BCC
000011B4                           427  
000011B4  1C3C 000E                428      MOVE.B      #SHIFT,D6
000011B8  BC03                     429      CMP.B       D3,D6
000011BA  6700 0B2C                430      BEQ         CHECK_SHIFT
000011BE                           431  
000011BE  6000 FF00                432      BRA         FOUR_BIT_RETURN
000011C2                           433  CHECK_BCC
000011C2                           434  
000011C2  1C3C 0000                435      MOVE.B      #BCC_16,D6
000011C6  BC02                     436      CMP.B       D2,D6
000011C8  6700 00B8                437      BEQ         CHECK_BCC_16
000011CC                           438  
000011CC  1C3C 00FF                439      MOVE.B      #BCC_32,D6
000011D0  BC02                     440      CMP.B       D2,D6
000011D2  6700 0156                441      BEQ         CHECK_BCC_32
000011D6                           442  
000011D6  6000 0002                443      BRA         CHECK_BCC_8
000011DA                           444  
000011DA                           445  CHECK_BCC_8
000011DA                           446  
000011DA  6100 01F6                447      BSR         ISOLATE_CC_CODE_FOR_BCC
000011DE                           448  
000011DE  1C3C 0000                449      MOVE.B      #CC_T,D6
000011E2  BC03                     450      CMP.B       D3,D6
000011E4  6700 0CE8                451      BEQ         MATCH_CC_T_8
000011E8                           452  
000011E8  1C3C 0001                453      MOVE.B      #CC_F,D6
000011EC  BC03                     454      CMP.B       D3,D6
000011EE  6700 0CE4                455      BEQ         MATCH_CC_F_8
000011F2                           456  
000011F2  1C3C 0002                457      MOVE.B      #CC_HI,D6
000011F6  BC03                     458      CMP.B       D3,D6
000011F8  6700 0CE0                459      BEQ         MATCH_CC_HI_8
000011FC                           460  
000011FC  1C3C 0003                461      MOVE.B      #CC_LS,D6
00001200  BC03                     462      CMP.B       D3,D6
00001202  6700 0D3C                463      BEQ         MATCH_CC_LS_8
00001206                           464  
00001206  1C3C 0004                465      MOVE.B      #CC_CC,D6
0000120A  BC03                     466      CMP.B       D3,D6
0000120C  6700 0DB0                467      BEQ         MATCH_CC_CC_8
00001210                           468  
00001210  1C3C 0005                469      MOVE.B      #CC_CS,D6
00001214  BC03                     470      CMP.B       D3,D6
00001216  6700 0E24                471      BEQ         MATCH_CC_CS_8
0000121A                           472  
0000121A  1C3C 0006                473      MOVE.B      #CC_NE,D6
0000121E  BC03                     474      CMP.B       D3,D6
00001220  6700 0E98                475      BEQ         MATCH_CC_NE_8
00001224                           476  
00001224  1C3C 0007                477      MOVE.B      #CC_EQ,D6
00001228  BC03                     478      CMP.B       D3,D6
0000122A  6700 0F0C                479      BEQ         MATCH_CC_EQ_8
0000122E                           480  
0000122E  1C3C 0008                481      MOVE.B      #CC_VC,D6
00001232  BC03                     482      CMP.B       D3,D6
00001234  6700 0F80                483      BEQ         MATCH_CC_VC_8
00001238                           484  
00001238  1C3C 0009                485      MOVE.B      #CC_VS,D6
0000123C  BC03                     486      CMP.B       D3,D6
0000123E  6700 0FF4                487      BEQ         MATCH_CC_VS_8
00001242                           488  
00001242  1C3C 000A                489      MOVE.B      #CC_PL,D6
00001246  BC03                     490      CMP.B       D3,D6
00001248  6700 1068                491      BEQ         MATCH_CC_PL_8
0000124C                           492  
0000124C  1C3C 000B                493      MOVE.B      #CC_MI,D6
00001250  BC03                     494      CMP.B       D3,D6
00001252  6700 10DC                495      BEQ         MATCH_CC_MI_8
00001256                           496  
00001256  1C3C 000C                497      MOVE.B      #CC_GE,D6
0000125A  BC03                     498      CMP.B       D3,D6
0000125C  6700 1150                499      BEQ         MATCH_CC_GE_8
00001260                           500  
00001260  1C3C 000D                501      MOVE.B      #CC_LT,D6
00001264  BC03                     502      CMP.B       D3,D6
00001266  6700 11C4                503      BEQ         MATCH_CC_LT_8
0000126A                           504  
0000126A  1C3C 000E                505      MOVE.B      #CC_GT,D6
0000126E  BC03                     506      CMP.B       D3,D6
00001270  6700 1238                507      BEQ         MATCH_CC_GT_8
00001274                           508  
00001274  1C3C 000F                509      MOVE.B      #CC_LE,D6
00001278  BC03                     510      CMP.B       D3,D6
0000127A  6700 12AC                511      BEQ         MATCH_CC_LE_8
0000127E                           512  
0000127E  6000 1326                513      BRA         ERROR
00001282                           514  
00001282                           515  CHECK_BCC_16
00001282                           516  
00001282  6100 014E                517      BSR         ISOLATE_CC_CODE_FOR_BCC
00001286                           518  
00001286  1C3C 0000                519      MOVE.B      #CC_T,D6
0000128A  BC03                     520      CMP.B       D3,D6
0000128C  6700 0C42                521      BEQ         MATCH_CC_T_16
00001290                           522  
00001290  1C3C 0001                523      MOVE.B      #CC_F,D6
00001294  BC03                     524      CMP.B       D3,D6
00001296  6700 0C3E                525      BEQ         MATCH_CC_F_16
0000129A                           526  
0000129A  1C3C 0002                527      MOVE.B      #CC_HI,D6
0000129E  BC03                     528      CMP.B       D3,D6
000012A0  6700 0C54                529      BEQ         MATCH_CC_HI_16
000012A4                           530  
000012A4  1C3C 0003                531      MOVE.B      #CC_LS,D6
000012A8  BC03                     532      CMP.B       D3,D6
000012AA  6700 0CBE                533      BEQ         MATCH_CC_LS_16
000012AE                           534  
000012AE  1C3C 0004                535      MOVE.B      #CC_CC,D6
000012B2  BC03                     536      CMP.B       D3,D6
000012B4  6700 0D32                537      BEQ         MATCH_CC_CC_16
000012B8                           538  
000012B8  1C3C 0005                539      MOVE.B      #CC_CS,D6
000012BC  BC03                     540      CMP.B       D3,D6
000012BE  6700 0DA6                541      BEQ         MATCH_CC_CS_16
000012C2                           542  
000012C2  1C3C 0006                543      MOVE.B      #CC_NE,D6
000012C6  BC03                     544      CMP.B       D3,D6
000012C8  6700 0E1A                545      BEQ         MATCH_CC_NE_16
000012CC                           546  
000012CC  1C3C 0007                547      MOVE.B      #CC_EQ,D6
000012D0  BC03                     548      CMP.B       D3,D6
000012D2  6700 0E8E                549      BEQ         MATCH_CC_EQ_16
000012D6                           550  
000012D6  1C3C 0008                551      MOVE.B      #CC_VC,D6
000012DA  BC03                     552      CMP.B       D3,D6
000012DC  6700 0F02                553      BEQ         MATCH_CC_VC_16
000012E0                           554  
000012E0  1C3C 0009                555      MOVE.B      #CC_VS,D6
000012E4  BC03                     556      CMP.B       D3,D6
000012E6  6700 0F76                557      BEQ         MATCH_CC_VS_16
000012EA                           558  
000012EA  1C3C 000A                559      MOVE.B      #CC_PL,D6
000012EE  BC03                     560      CMP.B       D3,D6
000012F0  6700 0FEA                561      BEQ         MATCH_CC_PL_16
000012F4                           562  
000012F4  1C3C 000B                563      MOVE.B      #CC_MI,D6
000012F8  BC03                     564      CMP.B       D3,D6
000012FA  6700 105E                565      BEQ         MATCH_CC_MI_16
000012FE                           566  
000012FE  1C3C 000C                567      MOVE.B      #CC_GE,D6
00001302  BC03                     568      CMP.B       D3,D6
00001304  6700 10D2                569      BEQ         MATCH_CC_GE_16
00001308                           570  
00001308  1C3C 000D                571      MOVE.B      #CC_LT,D6
0000130C  BC03                     572      CMP.B       D3,D6
0000130E  6700 1146                573      BEQ         MATCH_CC_LT_16
00001312                           574  
00001312  1C3C 000E                575      MOVE.B      #CC_GT,D6
00001316  BC03                     576      CMP.B       D3,D6
00001318  6700 11BA                577      BEQ         MATCH_CC_GT_16
0000131C                           578  
0000131C  1C3C 000F                579      MOVE.B      #CC_LE,D6
00001320  BC03                     580      CMP.B       D3,D6
00001322  6700 122E                581      BEQ         MATCH_CC_LE_16
00001326                           582  
00001326  6000 127E                583      BRA         ERROR
0000132A                           584  
0000132A                           585  
0000132A                           586  CHECK_BCC_32
0000132A                           587  
0000132A  6100 00A6                588      BSR         ISOLATE_CC_CODE_FOR_BCC
0000132E                           589  
0000132E  1C3C 0000                590      MOVE.B      #CC_T,D6
00001332  BC03                     591      CMP.B       D3,D6
00001334  6700 0B9C                592      BEQ         MATCH_CC_T_32
00001338                           593  
00001338  1C3C 0001                594      MOVE.B      #CC_F,D6
0000133C  BC03                     595      CMP.B       D3,D6
0000133E  6700 0B98                596      BEQ         MATCH_CC_F_32
00001342                           597  
00001342  1C3C 0002                598      MOVE.B      #CC_HI,D6
00001346  BC03                     599      CMP.B       D3,D6
00001348  6700 0BD0                600      BEQ         MATCH_CC_HI_32
0000134C                           601  
0000134C  1C3C 0003                602      MOVE.B      #CC_LS,D6
00001350  BC03                     603      CMP.B       D3,D6
00001352  6700 0C40                604      BEQ         MATCH_CC_LS_32
00001356                           605  
00001356  1C3C 0004                606      MOVE.B      #CC_CC,D6
0000135A  BC03                     607      CMP.B       D3,D6
0000135C  6700 0CB4                608      BEQ         MATCH_CC_CC_32
00001360                           609  
00001360  1C3C 0005                610      MOVE.B      #CC_CS,D6
00001364  BC03                     611      CMP.B       D3,D6
00001366  6700 0D28                612      BEQ         MATCH_CC_CS_32
0000136A                           613  
0000136A  1C3C 0006                614      MOVE.B      #CC_NE,D6
0000136E  BC03                     615      CMP.B       D3,D6
00001370  6700 0D9C                616      BEQ         MATCH_CC_NE_32
00001374                           617  
00001374  1C3C 0007                618      MOVE.B      #CC_EQ,D6
00001378  BC03                     619      CMP.B       D3,D6
0000137A  6700 0E10                620      BEQ         MATCH_CC_EQ_32
0000137E                           621  
0000137E  1C3C 0008                622      MOVE.B      #CC_VC,D6
00001382  BC03                     623      CMP.B       D3,D6
00001384  6700 0E84                624      BEQ         MATCH_CC_VC_32
00001388                           625  
00001388  1C3C 0009                626      MOVE.B      #CC_VS,D6
0000138C  BC03                     627      CMP.B       D3,D6
0000138E  6700 0EF8                628      BEQ         MATCH_CC_VS_32
00001392                           629  
00001392  1C3C 000A                630      MOVE.B      #CC_PL,D6
00001396  BC03                     631      CMP.B       D3,D6
00001398  6700 0F6C                632      BEQ         MATCH_CC_PL_32
0000139C                           633  
0000139C  1C3C 000B                634      MOVE.B      #CC_MI,D6
000013A0  BC03                     635      CMP.B       D3,D6
000013A2  6700 0FE0                636      BEQ         MATCH_CC_MI_32
000013A6                           637  
000013A6  1C3C 000C                638      MOVE.B      #CC_GE,D6
000013AA  BC03                     639      CMP.B       D3,D6
000013AC  6700 1054                640      BEQ         MATCH_CC_GE_32
000013B0                           641  
000013B0  1C3C 000D                642      MOVE.B      #CC_LT,D6
000013B4  BC03                     643      CMP.B       D3,D6
000013B6  6700 10C8                644      BEQ         MATCH_CC_LT_32
000013BA                           645  
000013BA  1C3C 000E                646      MOVE.B      #CC_GT,D6
000013BE  BC03                     647      CMP.B       D3,D6
000013C0  6700 113C                648      BEQ         MATCH_CC_GT_32
000013C4                           649  
000013C4  1C3C 000F                650      MOVE.B      #CC_LE,D6
000013C8  BC03                     651      CMP.B       D3,D6
000013CA  6700 11B0                652      BEQ         MATCH_CC_LE_32
000013CE                           653  
000013CE  6000 11D6                654      BRA         ERROR
000013D2                           655  
000013D2                           656  ISOLATE_CC_CODE_FOR_BCC
000013D2                           657  
000013D2  48A7 2000                658      MOVEM.W     D2, -(SP)
000013D6                           659  
000013D6  E94A                     660      LSL.W       #4,D2
000013D8  1E3C 000C                661      MOVE.B      #12,D7
000013DC  EE6A                     662      LSR.W       D7,D2
000013DE                           663  
000013DE  1602                     664      MOVE.B      D2,D3
000013E0                           665  
000013E0  4C9F 0004                666      MOVEM.W     (SP)+,D2
000013E4  4E75                     667      RTS
000013E6                           668  CHECK_CMP
000013E6                           669  
000013E6  6100 0232                670      BSR         ISOLATE_OP_CODE
000013EA                           671  
000013EA  1C3C 0000                672      MOVE.B      #CMP_B,D6
000013EE  BC03                     673      CMP.B       D3,D6
000013F0  6700 12BC                674      BEQ         MATCH_CMP_B
000013F4                           675  
000013F4  1C3C 0001                676      MOVE.B      #CMP_W,D6
000013F8  BC03                     677      CMP.B       D3,D6
000013FA  6700 12CA                678      BEQ         MATCH_CMP_W
000013FE                           679  
000013FE  1C3C 0002                680      MOVE.B      #CMP_L,D6
00001402  BC03                     681      CMP.B       D3,D6
00001404  6700 12D8                682      BEQ         MATCH_CMP_L
00001408                           683  
00001408  6000 119C                684      BRA         ERROR
0000140C                           685  CHECK_MULS_LEA_CLR_JSR_RTS
0000140C                           686  
0000140C  3C3C 4E75                687      MOVE.W      #RTS,D6
00001410  BC42                     688      CMP.W       D2,D6
00001412  6700 128C                689      BEQ         MATCH_RTS
00001416                           690  
00001416  6100 0202                691      BSR         ISOLATE_OP_CODE
0000141A                           692  
0000141A  1C3C 0007                693      MOVE.B      #LEA,D6
0000141E  BC03                     694      CMP.B       D3,D6
00001420  6700 022C                695      BEQ         MATCH_LEA
00001424                           696  
00001424  6100 FCBA                697      BSR         ReadFirstTenBits
00001428                           698  
00001428  3C3C 013A                699      MOVE.W      #JSR,D6
0000142C  BC43                     700      CMP.W       D3,D6
0000142E  6700 12EE                701      BEQ         MATCH_JSR
00001432                           702  
00001432  3C3C 0108                703      MOVE.W      #CLR_B,D6
00001436  BC43                     704      CMP.W       D3,D6
00001438  6700 1302                705      BEQ         MATCH_CLR_B
0000143C                           706  
0000143C  3C3C 0109                707      MOVE.W      #CLR_W,D6
00001440  BC43                     708      CMP.W       D3,D6
00001442  6700 1310                709      BEQ         MATCH_CLR_W
00001446                           710  
00001446  3C3C 010A                711      MOVE.W      #CLR_L,D6
0000144A  BC43                     712      CMP.W       D3,D6
0000144C  6700 131E                713      BEQ         MATCH_CLR_L
00001450                           714  
00001450  3C3C 0130                715      MOVE.W      #MULS_L,D6  * Shouldn't need to check for the rest of the opcode..?
00001454  BC43                     716      CMP.W       D3,D6
00001456  6700 01F8                717      BEQ         MATCH_MULS_L
0000145A                           718      
0000145A  6000 009E                719      BRA         CHECK_MOVEM
0000145E                           720  
0000145E                           721  CHECK_MULS_W_AND
0000145E                           722  
0000145E  6100 01BA                723      BSR         ISOLATE_OP_CODE
00001462                           724  
00001462  1C3C 0007                725      MOVE.B      #MULS_OP_W,D6
00001466  BC03                     726      CMP.B       D3,D6
00001468  6700 11F8                727      BEQ         MATCH_MULS_W
0000146C                           728  
0000146C  1C3C 0000                729      MOVE.B      #DN_B,D6
00001470  BC03                     730      CMP.B       D3,D6
00001472  6700 1320                731      BEQ         MATCH_AND_DN_B
00001476                           732  
00001476  1C3C 0001                733      MOVE.B      #DN_W,D6
0000147A  BC03                     734      CMP.B       D3,D6
0000147C  6700 132E                735      BEQ         MATCH_AND_DN_W
00001480                           736  
00001480  1C3C 0002                737      MOVE.B      #DN_L,D6
00001484  BC03                     738      CMP.B       D3,D6
00001486  6700 133C                739      BEQ         MATCH_AND_DN_L
0000148A                           740  
0000148A  1C3C 0004                741      MOVE.B      #EA_B,D6
0000148E  BC03                     742      CMP.B       D3,D6
00001490  6700 1370                743      BEQ         MATCH_AND_EA_B
00001494                           744  
00001494  1C3C 0005                745      MOVE.B      #EA_W,D6
00001498  BC03                     746      CMP.B       D3,D6
0000149A  6700 137E                747      BEQ         MATCH_AND_EA_W
0000149E                           748  
0000149E  1C3C 0006                749      MOVE.B      #EA_L,D6
000014A2  BC03                     750      CMP.B       D3,D6
000014A4  6700 138C                751      BEQ         MATCH_AND_EA_L
000014A8                           752  
000014A8  6000 10FC                753      BRA         ERROR
000014AC                           754  
000014AC                           755  CHECK_DIVU_OR
000014AC                           756  
000014AC  6100 016C                757      BSR         ISOLATE_OP_CODE
000014B0                           758  
000014B0  1C3C 0003                759      MOVE.B      #DIVU,D6
000014B4  BC03                     760      CMP.B       D3,D6
000014B6  6700 05F2                761      BEQ         MATCH_DIVU
000014BA                           762  
000014BA  1C3C 0000                763      MOVE.B      #DN_B,D6
000014BE  BC03                     764      CMP.B       D3,D6
000014C0  6700 0180                765      BEQ         MATCH_OR_DN_B
000014C4                           766  
000014C4  1C3C 0001                767      MOVE.B      #DN_W,D6
000014C8  BC03                     768      CMP.B       D3,D6
000014CA  6700 0178                769      BEQ         MATCH_OR_DN_W
000014CE                           770  
000014CE  1C3C 0002                771      MOVE.B      #DN_L,D6
000014D2  BC03                     772      CMP.B       D3,D6
000014D4  6700 0170                773      BEQ         MATCH_OR_DN_L
000014D8                           774  
000014D8  1C3C 0004                775      MOVE.B      #EA_B,D6
000014DC  BC03                     776      CMP.B       D3,D6
000014DE  6700 0168                777      BEQ         MATCH_OR_EA_B
000014E2                           778  
000014E2  1C3C 0005                779      MOVE.B      #EA_W,D6
000014E6  BC03                     780      CMP.B       D3,D6
000014E8  6700 0160                781      BEQ         MATCH_OR_EA_W
000014EC                           782  
000014EC  1C3C 0006                783      MOVE.B      #EA_L,D6
000014F0  BC03                     784      CMP.B       D3,D6
000014F2  6700 0158                785      BEQ         MATCH_OR_EA_L
000014F6                           786  
000014F6  6000 10AE                787      BRA         ERROR
000014FA                           788  
000014FA                           789  CHECK_MOVEM
000014FA                           790  
000014FA  6100 FBE4                791      BSR         ReadFirstTenBits
000014FE                           792  
000014FE  3C3C 0122                793      MOVE.W      #MOVEM_TO_MEM_W,D6
00001502  BC43                     794      CMP.W       D3,D6
00001504  6700 05E2                795      BEQ         MATCH_MOVEM_TO_MEM_W
00001508                           796  
00001508  3C3C 0123                797      MOVE.W      #MOVEM_TO_MEM_L,D6
0000150C  BC43                     798      CMP.W       D3,D6
0000150E  6700 05F0                799      BEQ         MATCH_MOVEM_TO_MEM_L
00001512                           800  
00001512  3C3C 0132                801      MOVE.W      #MOVEM_TO_REG_W,D6
00001516  BC43                     802      CMP.W       D3,D6
00001518  6700 061C                803      BEQ         MATCH_MOVEM_TO_REG_W
0000151C                           804  
0000151C  3C3C 0133                805      MOVE.W      #MOVEM_TO_REG_L,D6
00001520  BC43                     806      CMP.W       D3,D6
00001522  6700 0614                807      BEQ         MATCH_MOVEM_TO_REG_L
00001526                           808  
00001526  6000 107E                809      BRA         ERROR
0000152A                           810  CHECK_ADD_ADDA
0000152A                           811  
0000152A  6100 00EE                812      BSR         ISOLATE_OP_CODE
0000152E                           813  
0000152E  3C3C 0000                814      MOVE.W      #DN_B,D6
00001532  BC43                     815      CMP.W       D3,D6
00001534  6700 037C                816      BEQ         MATCH_ADD_TO_REG_B
00001538                           817  
00001538  3C3C 0001                818      MOVE.W      #DN_W,D6
0000153C  BC43                     819      CMP.W       D3,D6
0000153E  6700 038A                820      BEQ         MATCH_ADD_TO_REG_W
00001542                           821  
00001542  3C3C 0002                822      MOVE.W      #DN_L,D6
00001546  BC43                     823      CMP.W       D3,D6
00001548  6700 0398                824      BEQ         MATCH_ADD_TO_REG_L
0000154C                           825  
0000154C  3C3C 0004                826      MOVE.W      #EA_B,D6
00001550  BC43                     827      CMP.W       D3,D6
00001552  6700 0418                828      BEQ         MATCH_ADD_TO_EA_B
00001556                           829  
00001556  3C3C 0005                830      MOVE.W      #EA_W,D6
0000155A  BC43                     831      CMP.W       D3,D6
0000155C  6700 0426                832      BEQ         MATCH_ADD_TO_EA_W
00001560                           833  
00001560  3C3C 0006                834      MOVE.W      #EA_L,D6
00001564  BC43                     835      CMP.W       D3,D6
00001566  6700 0434                836      BEQ         MATCH_ADD_TO_EA_L
0000156A                           837  
0000156A  3C3C 0003                838      MOVE.W      #ADDA_W,D6
0000156E  BC43                     839      CMP.W       D3,D6
00001570  6700 1096                840      BEQ         MATCH_ADDA_W
00001574                           841  
00001574  3C3C 0007                842      MOVE.W      #ADDA_L,D6
00001578  BC43                     843      CMP.W       D3,D6
0000157A  6700 10A4                844      BEQ         MATCH_ADDA_L
0000157E                           845  
0000157E  4E75                     846      RTS ** Change later?
00001580                           847  CHECK_ADDQ
00001580                           848  
00001580  6100 0098                849      BSR         ISOLATE_OP_CODE
00001584                           850  
00001584  3C3C 0000                851      MOVE.W      #ADDQ_B,D6
00001588  BC43                     852      CMP.W       D3,D6
0000158A  6700 049A                853      BEQ         MATCH_ADDQ_B
0000158E                           854  
0000158E  3C3C 0001                855      MOVE.W      #ADDQ_W,D6
00001592  BC43                     856      CMP.W       D3,D6
00001594  6700 04A8                857      BEQ         MATCH_ADDQ_W
00001598                           858  
00001598  3C3C 0002                859      MOVE.W      #ADDQ_L,D6
0000159C  BC43                     860      CMP.W       D3,D6
0000159E  6700 04B6                861      BEQ         MATCH_ADDQ_L
000015A2                           862  
000015A2                           863  CHECK_ADDI
000015A2                           864  
000015A2  6100 FB3C                865      BSR         ReadFirstTenBits
000015A6                           866  
000015A6  3C3C 0018                867      MOVE.W      #ADDI_B,D6
000015AA  BC43                     868      CMP.W       D3,D6
000015AC  6700 0296                869      BEQ         MATCH_ADDI_B
000015B0                           870  
000015B0  3C3C 0019                871      MOVE.W      #ADDI_W,D6
000015B4  BC43                     872      CMP.W       D3,D6
000015B6  6700 02A4                873      BEQ         MATCH_ADDI_W
000015BA                           874  
000015BA  3C3C 001A                875      MOVE.W      #ADDI_L,D6
000015BE  BC43                     876      CMP.W       D3,D6
000015C0  6700 02B2                877      BEQ         MATCH_ADDI_L
000015C4                           878  
000015C4  6000 FAFE                879      BRA         ADDI_RETURN
000015C8                           880  CHECK_SUB
000015C8                           881  
000015C8  6100 0050                882      BSR         ISOLATE_OP_CODE
000015CC                           883  
000015CC  3C3C 0000                884      MOVE.W      #DN_B,D6
000015D0  BC43                     885      CMP.W       D3,D6
000015D2  6700 0326                886      BEQ         MATCH_SUB_TO_DN_B
000015D6                           887  
000015D6  3C3C 0001                888      MOVE.W      #DN_W,D6
000015DA  BC43                     889      CMP.W       D3,D6
000015DC  6700 0334                890      BEQ         MATCH_SUB_TO_DN_W
000015E0                           891  
000015E0  3C3C 0002                892      MOVE.W      #DN_L,D6
000015E4  BC43                     893      CMP.W       D3,D6
000015E6  6700 0342                894      BEQ         MATCH_SUB_TO_DN_L
000015EA                           895  
000015EA  3C3C 0004                896      MOVE.W      #EA_B,D6
000015EE  BC43                     897      CMP.W       D3,D6
000015F0  6700 03C2                898      BEQ         MATCH_SUB_TO_EA_B
000015F4                           899  
000015F4  3C3C 0005                900      MOVE.W      #EA_W,D6
000015F8  BC43                     901      CMP.W       D3,D6
000015FA  6700 03D0                902      BEQ         MATCH_SUB_TO_EA_W
000015FE                           903  
000015FE  3C3C 0006                904      MOVE.W      #EA_L,D6
00001602  BC43                     905      CMP.W       D3,D6
00001604  6700 03DE                906      BEQ         MATCH_SUB_TO_EA_L
00001608                           907  CHECK_MOVEA_W_AND_MOVE_W
00001608                           908  
00001608  6100 0010                909      BSR         ISOLATE_OP_CODE
0000160C                           910  
0000160C  1C3C 0001                911      MOVE.B      #MOVEA_WL,D6
00001610  BC03                     912      CMP.B       D3,D6
00001612  6700 0F9E                913      BEQ         MATCH_MOVEA_W
00001616                           914  
00001616  6000 0194                915      BRA         MATCH_MOVE_W
0000161A                           916  ISOLATE_OP_CODE
0000161A                           917  
0000161A  48A7 2000                918      MOVEM.W     D2, -(SP)
0000161E                           919  
0000161E  1E3C 0007                920      MOVE.B      #7,D7
00001622  EF6A                     921      LSL.W       D7,D2
00001624  1E3C 000D                922      MOVE.B      #13,D7
00001628  EE6A                     923      LSR.W       D7,D2
0000162A  1602                     924      MOVE.B      D2,D3
0000162C                           925  
0000162C  4C9F 0004                926      MOVEM.W     (SP)+,D2
00001630  4E75                     927      RTS
00001632                           928  CHECK_MOVEA_L_AND_MOVE_L
00001632                           929  
00001632  61E6                     930      BSR         ISOLATE_OP_CODE
00001634                           931  
00001634  1C3C 0001                932      MOVE.B      #MOVEA_WL,D6
00001638  BC03                     933      CMP.B       D3,D6
0000163A  6700 0F8E                934      BEQ         MATCH_MOVEA_L
0000163E                           935  
0000163E  6000 0184                936      BRA         MATCH_MOVE_L
00001642                           937  
00001642                           938  
00001642                           939  
00001642                           940  MATCH_OR_DN_B
00001642  3A02                     941      MOVE.W      D2,D5       *REMOVE
00001644                           942  MATCH_OR_DN_W
00001644  3A02                     943      MOVE.W      D2,D5       *REMOVE
00001646                           944  MATCH_OR_DN_L
00001646  3A02                     945      MOVE.W      D2,D5       *REMOVE
00001648                           946  MATCH_OR_EA_B
00001648  3A02                     947      MOVE.W      D2,D5       *REMOVE
0000164A                           948  MATCH_OR_EA_W
0000164A  3A02                     949      MOVE.W      D2,D5       *REMOVE
0000164C                           950  MATCH_OR_EA_L
0000164C  3A02                     951      MOVE.W      D2,D5       *REMOVE
0000164E                           952  
0000164E                           953  MATCH_LEA
0000164E  3A02                     954      MOVE.W      D2,D5       *REMOVE
00001650                           955  
00001650                           956  MATCH_MULS_L
00001650  3A02                     957      MOVE.W      D2,D5       *REMOVE
00001652                           958  
00001652                           959  
00001652                           960                  INCLUDE 'EADecoder.x68'
00001652                           961  
00001652                           962  
00001652  =00010000                963  output      EQU $00010000
00001652                           964  
00001652  =0000003C                965  IMMEDIATE   EQU %00111100
00001652  =00000038                966  ABS_WORD    EQU %00111000
00001652  =00000039                967  ABS_LONG    EQU %00111001
00001652  =00000000                968  Dn          EQU %00000000
00001652  =00000008                969  An          EQU %00001000
00001652  =00000010                970  INDIRECT    EQU %00010000
00001652  =00000018                971  POST_INC    EQU %00011000
00001652  =00000020                972  PRE_DEC     EQU %00100000
00001652                           973  
00001652                           974  
00001652                           975  
00001652                           976  EADecoder_left
00001652  48E7 FF7E                977          MOVEM.L     D0-D7/A1-A6, -(SP)
00001656                           978          
00001656                           979          ** Swap the mode and register bits
00001656  1800                     980          MOVE.B  D0,D4
00001658  0200 0007                981          ANDI.B  #%00000111,D0       * Mask mode
0000165C  0204 0038                982          ANDI.B  #%00111000,D4       * Mask register
00001660  E708                     983          LSL.B   #3,D0               * Move mode bits over
00001662  E60C                     984          LSR.B   #3,D4               * Move register bits over
00001664  8004                     985          OR.B    D4,D0               * Recombine
00001666                           986          
00001666  6000 0006                987          BRA     left_skip
0000166A                           988  
0000166A                           989  EADecoder
0000166A  48E7 FF7E                990          MOVEM.L     D0-D7/A1-A6, -(SP) *Store registers on stack, except D0
0000166E                           991  left_skip   
0000166E  4242                     992          CLR     D2    
00001670  4243                     993          CLR     D3 
00001672  1401                     994          MOVE.B  D1,D2 ** Store opcode size in bytes into D2
00001674                           995          
00001674  43F9 00010000            996          LEA     output,A1
0000167A  45F9 00010000            997          LEA     output,A2
00001680                           998          
00001680                           999          *First, decoder will check for the 3 types with hard coded register values
00001680  163C 0001               1000          MOVE.B  #1,D3
00001684  B07C 003C               1001          CMP     #IMMEDIATE,D0
00001688  6700 0068               1002          BEQ     dec_immediate
0000168C                          1003          
0000168C  B07C 0038               1004          CMP     #ABS_WORD,D0
00001690  6700 007C               1005          BEQ     dec_abs_word
00001694                          1006          
00001694  B07C 0039               1007          CMP     #ABS_LONG,D0
00001698  6700 0080               1008          BEQ     dec_abs_long
0000169C                          1009          
0000169C                          1010          *If it was none of the above, store the register and mode seperately
0000169C  4243                    1011          CLR     D3
0000169E  1200                    1012          MOVE.B  D0,D1
000016A0  0201 0038               1013          ANDI.B  #%00111000,D1           *Get mode value
000016A4  0200 0007               1014          ANDI.B  #%00000111,D0           *Get register value
000016A8  0600 0030               1015          ADDI.B  #$30,D0
000016AC                          1016                
000016AC  B27C 0000               1017          CMP     #Dn,D1
000016B0  6700 0074               1018          BEQ     dec_Dn 
000016B4                          1019          
000016B4  B27C 0008               1020          CMP     #An,D1
000016B8  6700 0078               1021          BEQ     dec_An
000016BC                          1022                  
000016BC  B27C 0010               1023          CMP     #INDIRECT,D1
000016C0  6700 007C               1024          BEQ     dec_indirect
000016C4                          1025                  
000016C4  B27C 0018               1026          CMP     #POST_INC,D1
000016C8  6700 0088               1027          BEQ     dec_post_inc
000016CC                          1028                  
000016CC  B27C 0020               1029          CMP     #PRE_DEC,D1
000016D0  6700 009A               1030          BEQ     dec_pre_dec
000016D4                          1031  
000016D4                          1032  dec_return ** Common return for all types
000016D4                          1033          
000016D4                          1034          ** Print display string
000016D4  103C 000E               1035          MOVE.B  #14,D0
000016D8  4E4F                    1036          TRAP    #15
000016DA                          1037          
000016DA                          1038          ** If there is immediate data to print, print it
000016DA  B67C 0001               1039          CMP     #1,D3
000016DE  6600 000C               1040          BNE     imm_skip
000016E2                          1041          
000016E2  103C 000F               1042          MOVE.B  #15,D0
000016E6  143C 0010               1043          MOVE.B  #16,D2
000016EA  4E4F                    1044          TRAP    #15
000016EC                          1045  
000016EC                          1046  imm_skip
000016EC  4CDF 7EFF               1047          MOVEM.L     (SP)+, D0-D7/A1-A6 *Return register data from stack, except D0
000016F0  4E75                    1048          RTS
000016F2                          1049          
000016F2                          1050          * Individual EA decoders *
000016F2                          1051  
000016F2                          1052  dec_immediate   *DECODE IMMEDIATE VALUE*
000016F2  14FC 0023               1053          MOVE.B  #'#',(A2)+  * Move '#' char into string
000016F6  14FC 0024               1054          MOVE.B  #'$',(A2)+  * Move '$' char into string
000016FA  14FC 0000               1055          MOVE.B  #$0,(A2)+   * Null terminate string
000016FE  B47C 0002               1056          CMP     #2,D2       * Check if data is word length
00001702  6700 0006               1057          BEQ     imm_word    
00001706                          1058          
00001706  2218                    1059          MOVE.L  (A0)+,D1    * Length was long
00001708  60CA                    1060          BRA     dec_return
0000170A                          1061          
0000170A                          1062  imm_word
0000170A  3218                    1063          MOVE.W  (A0)+,D1    * Length was word
0000170C  60C6                    1064          BRA     dec_return
0000170E                          1065  
0000170E                          1066  
0000170E                          1067  dec_abs_word    *DECODE ABSOLUTE WORD*
0000170E  14FC 0024               1068          MOVE.B  #'$',(A2)+  * Move '$' char into string
00001712  14FC 0000               1069          MOVE.B  #$0,(A2)+   * Null terminate string
00001716  3218                    1070          MOVE.W  (A0)+,D1
00001718  60BA                    1071          BRA     dec_return
0000171A                          1072          
0000171A                          1073  
0000171A                          1074  dec_abs_long    *DECODE ABSOLUTE LONG*
0000171A  14FC 0024               1075          MOVE.B  #'$',(A2)+  * Move '$' char into string
0000171E  14FC 0000               1076          MOVE.B  #$0,(A2)+   * Null terminate string
00001722  2218                    1077          MOVE.L  (A0)+,D1
00001724  60AE                    1078          BRA     dec_return
00001726                          1079          
00001726                          1080  
00001726                          1081  dec_Dn          *DECODE DIRECT DATA*
00001726  14FC 0044               1082          MOVE.B  #'D',(A2)+
0000172A  14C0                    1083          MOVE.B  D0,(A2)+
0000172C  14FC 0000               1084          MOVE.B  #$0,(A2)+
00001730  60A2                    1085          BRA     dec_return
00001732                          1086  
00001732                          1087          
00001732                          1088  dec_An          *DECODE DIRECT ADDRESS*
00001732  14FC 0041               1089          MOVE.B  #'A',(A2)+
00001736  14C0                    1090          MOVE.B  D0,(A2)+
00001738  14FC 0000               1091          MOVE.B  #$0,(A2)+
0000173C  6096                    1092          BRA     dec_return
0000173E                          1093  
0000173E                          1094  
0000173E                          1095  dec_indirect    *DECODE INDIRECT ACCESS*
0000173E  14FC 0028               1096          MOVE.B  #'(',(A2)+
00001742  14FC 0041               1097          MOVE.B  #'A',(A2)+
00001746  14C0                    1098          MOVE.B  D0,(A2)+
00001748  14FC 0029               1099          MOVE.B  #')',(A2)+
0000174C  14FC 0000               1100          MOVE.B  #$0,(A2)+
00001750  6082                    1101          BRA     dec_return
00001752                          1102          
00001752                          1103  
00001752                          1104  dec_post_inc    *DECODE INDIRECT POST INCREMENT*
00001752  14FC 0028               1105          MOVE.B  #'(',(A2)+
00001756  14FC 0041               1106          MOVE.B  #'A',(A2)+
0000175A  14C0                    1107          MOVE.B  D0,(A2)+
0000175C  14FC 0029               1108          MOVE.B  #')',(A2)+
00001760  14FC 002B               1109          MOVE.B  #'+',(A2)+
00001764  14FC 0000               1110          MOVE.B  #$0,(A2)+
00001768  6000 FF6A               1111          BRA     dec_return
0000176C                          1112          
0000176C                          1113          
0000176C                          1114  dec_pre_dec    *DECODE INDIRECT PRE DECREMENT*
0000176C  14FC 002D               1115          MOVE.B  #'-',(A2)+
00001770  14FC 0028               1116          MOVE.B  #'(',(A2)+
00001774  14FC 0041               1117          MOVE.B  #'A',(A2)+
00001778  14C0                    1118          MOVE.B  D0,(A2)+
0000177A  14FC 0029               1119          MOVE.B  #')',(A2)+
0000177E  14FC 0000               1120          MOVE.B  #$0,(A2)+
00001782  6000 FF50               1121          BRA     dec_return
00001786                          1122  
00001786                          1123  
00001786                          1124  
00001786                          1125  
00001786                          1126  
00001786                          1127  
00001786                          1128  
00001786                          1129  
00001786                          1130  
00001786                          1131  -------------------- end include --------------------
00001786                          1132                  INCLUDE 'connor_opcodes.x68'
00001786                          1133  
00001786                          1134  
00001786                          1135  MATCH_NOP
00001786  43F8 0028               1136      LEA         pr_NOP,A1
0000178A  103C 000E               1137      MOVE.B      #14,D0
0000178E  4E4F                    1138      TRAP        #15
00001790  6000 F936               1139      BRA         opdec_return
00001794                          1140  
00001794                          1141  
00001794                          1142  MATCH_MOVE_B
00001794                          1143      ** Move command size into D1
00001794  123C 0002               1144      MOVE.B      #2,D1
00001798                          1145      ** Print command
00001798  103C 000E               1146      MOVE.B      #14,D0
0000179C  43F8 002C               1147      LEA         pr_MOVE,A1
000017A0  4E4F                    1148      TRAP        #15
000017A2                          1149      ** Print size
000017A2  43F8 0016               1150      LEA         pr_BYTE,A1
000017A6  4E4F                    1151      TRAP        #15
000017A8                          1152  
000017A8  6000 0032               1153      BRA         print_move
000017AC                          1154  
000017AC                          1155  MATCH_MOVE_W
000017AC                          1156      ** Move command size into D1
000017AC  123C 0002               1157      MOVE.B      #2,D1
000017B0                          1158      ** Print command
000017B0  103C 000E               1159      MOVE.B      #14,D0
000017B4  43F8 002C               1160      LEA         pr_MOVE,A1
000017B8  4E4F                    1161      TRAP        #15
000017BA                          1162      ** Print size
000017BA  43F8 0019               1163      LEA         pr_WORD,A1
000017BE  4E4F                    1164      TRAP        #15
000017C0                          1165  
000017C0  6000 001A               1166      BRA         print_move
000017C4                          1167  
000017C4                          1168  MATCH_MOVE_L
000017C4                          1169      ** Move command size into D1
000017C4  123C 0004               1170      MOVE.B      #4,D1
000017C8                          1171      ** Print command
000017C8  103C 000E               1172      MOVE.B      #14,D0
000017CC  43F8 002C               1173      LEA         pr_MOVE,A1
000017D0  4E4F                    1174      TRAP        #15
000017D2                          1175      ** Print size
000017D2  43F8 001C               1176      LEA         pr_LONG,A1
000017D6  4E4F                    1177      TRAP        #15
000017D8                          1178  
000017D8  6000 0002               1179      BRA         print_move
000017DC                          1180  
000017DC                          1181  print_move
000017DC                          1182      ** Print space
000017DC  43F8 0000               1183      LEA         pr_space,A1
000017E0  4E4F                    1184      TRAP        #15
000017E2                          1185      ** Decode right side ea
000017E2  1002                    1186      MOVE.B      D2,D0
000017E4  0200 003F               1187      ANDI.B      #%00111111,D0
000017E8  4EB8 166A               1188      JSR         EADecoder
000017EC                          1189      ** Add comma
000017EC  103C 000E               1190      MOVE.B      #14,D0
000017F0  43F8 0014               1191      LEA         pr_comma,A1
000017F4  4E4F                    1192      TRAP        #15
000017F6                          1193      ** Decode left side ea
000017F6  3002                    1194      MOVE.W      D2,D0
000017F8  0240 0FC0               1195      ANDI.W      #%0000111111000000,D0
000017FC  EC48                    1196      LSR.W       #6,D0
000017FE  4EB8 1652               1197      JSR         EADecoder_left
00001802                          1198  
00001802  6000 F8C4               1199      BRA         opdec_return
00001806                          1200  
00001806                          1201  
00001806                          1202  MATCH_MOVEQ
00001806                          1203      ** Print command
00001806  103C 000E               1204      MOVE.B      #14,D0
0000180A  43F8 005B               1205      LEA         pr_MOVEQ,A1
0000180E  4E4F                    1206      TRAP        #15
00001810                          1207      ** Print space
00001810  43F8 0000               1208      LEA         pr_space,A1
00001814  4E4F                    1209      TRAP        #15
00001816                          1210      ** Print hex tag
00001816  43F8 0021               1211      LEA         pr_hextag,A1
0000181A  4E4F                    1212      TRAP        #15
0000181C                          1213      ** Print data
0000181C  1202                    1214      MOVE.B      D2,D1
0000181E  103C 000F               1215      MOVE.B      #15,D0
00001822  2602                    1216      MOVE.L      D2,D3
00001824  7410                    1217      MOVE.L      #16,D2
00001826  4E4F                    1218      TRAP        #15
00001828  2403                    1219      MOVE.L      D3,D2
0000182A                          1220      ** Add comma
0000182A  103C 000E               1221      MOVE.B      #14,D0
0000182E  43F8 0014               1222      LEA         pr_comma,A1
00001832  4E4F                    1223      TRAP        #15
00001834                          1224      ** Decode register
00001834  3002                    1225      MOVE.W      D2,D0
00001836  0240 0E00               1226      ANDI.W      #%0000111000000000,D0
0000183A  EC48                    1227      LSR.W       #6,D0
0000183C  4EB8 1652               1228      JSR         EADecoder_left
00001840                          1229  
00001840  6000 F886               1230      BRA         opdec_return
00001844                          1231  
00001844                          1232  
00001844                          1233  MATCH_ADDI_B
00001844                          1234      ** Move command size into D1
00001844  123C 0002               1235      MOVE.B      #2,D1
00001848                          1236      ** Print command
00001848  103C 000E               1237      MOVE.B      #14,D0
0000184C  43F8 0065               1238      LEA         pr_ADDI,A1
00001850  4E4F                    1239      TRAP        #15
00001852                          1240      ** Print size
00001852  43F8 0016               1241      LEA         pr_BYTE,A1
00001856  4E4F                    1242      TRAP        #15
00001858                          1243  
00001858  6000 0032               1244      BRA         print_addi
0000185C                          1245  
0000185C                          1246  MATCH_ADDI_W
0000185C                          1247      ** Move command size into D1
0000185C  123C 0002               1248      MOVE.B      #2,D1
00001860                          1249      ** Print command
00001860  103C 000E               1250      MOVE.B      #14,D0
00001864  43F8 0065               1251      LEA         pr_ADDI,A1
00001868  4E4F                    1252      TRAP        #15
0000186A                          1253      ** Print size
0000186A  43F8 0019               1254      LEA         pr_WORD,A1
0000186E  4E4F                    1255      TRAP        #15
00001870                          1256  
00001870  6000 001A               1257      BRA         print_addi
00001874                          1258  
00001874                          1259  MATCH_ADDI_L
00001874                          1260      ** Move command size into D1
00001874  123C 0004               1261      MOVE.B      #4,D1
00001878                          1262      ** Print command
00001878  103C 000E               1263      MOVE.B      #14,D0
0000187C  43F8 0065               1264      LEA         pr_ADDI,A1
00001880  4E4F                    1265      TRAP        #15
00001882                          1266      ** Print size
00001882  43F8 001C               1267      LEA         pr_LONG,A1
00001886  4E4F                    1268      TRAP        #15
00001888                          1269  
00001888  6000 0002               1270      BRA         print_addi
0000188C                          1271  
0000188C                          1272  print_addi
0000188C                          1273      ** Print space
0000188C  43F8 0000               1274      LEA         pr_space,A1
00001890  4E4F                    1275      TRAP        #15
00001892                          1276      ** Print Immediate data
00001892  103C 003C               1277      MOVE.B      #%00111100,D0
00001896  4EB8 166A               1278      JSR         EADecoder
0000189A                          1279      ** Add comma
0000189A  103C 000E               1280      MOVE.B      #14,D0
0000189E  43F8 0014               1281      LEA         pr_comma,A1
000018A2  4E4F                    1282      TRAP        #15
000018A4                          1283      ** Decode right side ea
000018A4  1002                    1284      MOVE.B      D2,D0
000018A6  0200 003F               1285      ANDI.B      #%00111111,D0
000018AA  4EB8 166A               1286      JSR         EADecoder
000018AE                          1287  
000018AE  6000 F818               1288      BRA         opdec_return
000018B2                          1289  
000018B2                          1290  
000018B2                          1291  MATCH_ADD_TO_REG_B
000018B2                          1292      ** Move command size into D1
000018B2  123C 0002               1293      MOVE.B      #2,D1
000018B6                          1294      ** Print command
000018B6  103C 000E               1295      MOVE.B      #14,D0
000018BA  43F8 0061               1296      LEA         pr_ADD,A1
000018BE  4E4F                    1297      TRAP        #15
000018C0                          1298      ** Print size
000018C0  43F8 0016               1299      LEA         pr_BYTE,A1
000018C4  4E4F                    1300      TRAP        #15
000018C6                          1301  
000018C6  6000 007A               1302      BRA         print_add_to_reg
000018CA                          1303  
000018CA                          1304  MATCH_ADD_TO_REG_W
000018CA                          1305      ** Move command size into D1
000018CA  123C 0002               1306      MOVE.B      #2,D1
000018CE                          1307      ** Print command
000018CE  103C 000E               1308      MOVE.B      #14,D0
000018D2  43F8 0061               1309      LEA         pr_ADD,A1
000018D6  4E4F                    1310      TRAP        #15
000018D8                          1311      ** Print size
000018D8  43F8 0019               1312      LEA         pr_WORD,A1
000018DC  4E4F                    1313      TRAP        #15
000018DE                          1314  
000018DE  6000 0062               1315      BRA         print_add_to_reg
000018E2                          1316  
000018E2                          1317  MATCH_ADD_TO_REG_L
000018E2                          1318      ** Move command size into D1
000018E2  123C 0004               1319      MOVE.B      #4,D1
000018E6                          1320      ** Print command
000018E6  103C 000E               1321      MOVE.B      #14,D0
000018EA  43F8 0061               1322      LEA         pr_ADD,A1
000018EE  4E4F                    1323      TRAP        #15
000018F0                          1324      ** Print size
000018F0  43F8 001C               1325      LEA         pr_LONG,A1
000018F4  4E4F                    1326      TRAP        #15
000018F6                          1327  
000018F6  6000 004A               1328      BRA         print_add_to_reg
000018FA                          1329  
000018FA                          1330  MATCH_SUB_TO_DN_B
000018FA                          1331      ** Move command size into D1
000018FA  123C 0002               1332      MOVE.B      #2,D1
000018FE                          1333      ** Print command
000018FE  103C 000E               1334      MOVE.B      #14,D0
00001902  43F8 006F               1335      LEA         pr_SUB,A1
00001906  4E4F                    1336      TRAP        #15
00001908                          1337      ** Print size
00001908  43F8 0016               1338      LEA         pr_BYTE,A1
0000190C  4E4F                    1339      TRAP        #15
0000190E                          1340  
0000190E  6000 0032               1341      BRA         print_add_to_reg
00001912                          1342  
00001912                          1343  MATCH_SUB_TO_DN_W
00001912                          1344      ** Move command size into D1
00001912  123C 0002               1345      MOVE.B      #2,D1
00001916                          1346      ** Print command
00001916  103C 000E               1347      MOVE.B      #14,D0
0000191A  43F8 006F               1348      LEA         pr_SUB,A1
0000191E  4E4F                    1349      TRAP        #15
00001920                          1350      ** Print size
00001920  43F8 0019               1351      LEA         pr_WORD,A1
00001924  4E4F                    1352      TRAP        #15
00001926                          1353  
00001926  6000 001A               1354      BRA         print_add_to_reg
0000192A                          1355  
0000192A                          1356  MATCH_SUB_TO_DN_L
0000192A                          1357      ** Move command size into D1
0000192A  123C 0004               1358      MOVE.B      #4,D1
0000192E                          1359      ** Print command
0000192E  103C 000E               1360      MOVE.B      #14,D0
00001932  43F8 006F               1361      LEA         pr_SUB,A1
00001936  4E4F                    1362      TRAP        #15
00001938                          1363      ** Print size
00001938  43F8 001C               1364      LEA         pr_LONG,A1
0000193C  4E4F                    1365      TRAP        #15
0000193E                          1366  
0000193E  6000 0002               1367      BRA         print_add_to_reg
00001942                          1368  
00001942                          1369  print_add_to_reg
00001942                          1370      ** Print space
00001942  43F8 0000               1371      LEA         pr_space,A1
00001946  4E4F                    1372      TRAP        #15
00001948                          1373      ** Print source
00001948  1002                    1374      MOVE.B      D2,D0
0000194A  0200 003F               1375      ANDI.B      #%00111111,D0
0000194E  4EB8 166A               1376      JSR         EADecoder
00001952                          1377      ** Add comma
00001952  103C 000E               1378      MOVE.B      #14,D0
00001956  43F8 0014               1379      LEA         pr_comma,A1
0000195A  4E4F                    1380      TRAP        #15
0000195C                          1381      ** Print destination
0000195C  3002                    1382      MOVE.W      D2,D0
0000195E  0240 0E00               1383      ANDI.W      #%0000111000000000,D0
00001962  EC48                    1384      LSR.W       #6,D0
00001964  4EB8 1652               1385      JSR         EADecoder_left
00001968                          1386  
00001968  6000 F75E               1387      BRA         opdec_return
0000196C                          1388  
0000196C                          1389  MATCH_ADD_TO_EA_B
0000196C                          1390      ** Move command size into D1
0000196C  123C 0002               1391      MOVE.B      #2,D1
00001970                          1392      ** Print command
00001970  103C 000E               1393      MOVE.B      #14,D0
00001974  43F8 0061               1394      LEA         pr_ADD,A1
00001978  4E4F                    1395      TRAP        #15
0000197A                          1396      ** Print size
0000197A  43F8 0016               1397      LEA         pr_BYTE,A1
0000197E  4E4F                    1398      TRAP        #15
00001980                          1399  
00001980  6000 007A               1400      BRA         print_add_to_ea
00001984                          1401  
00001984                          1402  MATCH_ADD_TO_EA_W
00001984                          1403      ** Move command size into D1
00001984  123C 0002               1404      MOVE.B      #2,D1
00001988                          1405      ** Print command
00001988  103C 000E               1406      MOVE.B      #14,D0
0000198C  43F8 0061               1407      LEA         pr_ADD,A1
00001990  4E4F                    1408      TRAP        #15
00001992                          1409      ** Print size
00001992  43F8 0019               1410      LEA         pr_WORD,A1
00001996  4E4F                    1411      TRAP        #15
00001998                          1412  
00001998  6000 0062               1413      BRA         print_add_to_ea
0000199C                          1414  
0000199C                          1415  MATCH_ADD_TO_EA_L
0000199C                          1416      ** Move command size into D1
0000199C  123C 0004               1417      MOVE.B      #4,D1
000019A0                          1418      ** Print command
000019A0  103C 000E               1419      MOVE.B      #14,D0
000019A4  43F8 0061               1420      LEA         pr_ADD,A1
000019A8  4E4F                    1421      TRAP        #15
000019AA                          1422      ** Print size
000019AA  43F8 001C               1423      LEA         pr_LONG,A1
000019AE  4E4F                    1424      TRAP        #15
000019B0                          1425  
000019B0  6000 004A               1426      BRA         print_add_to_ea
000019B4                          1427  
000019B4                          1428  MATCH_SUB_TO_EA_B
000019B4                          1429      ** Move command size into D1
000019B4  123C 0002               1430      MOVE.B      #2,D1
000019B8                          1431      ** Print command
000019B8  103C 000E               1432      MOVE.B      #14,D0
000019BC  43F8 006F               1433      LEA         pr_SUB,A1
000019C0  4E4F                    1434      TRAP        #15
000019C2                          1435      ** Print size
000019C2  43F8 0016               1436      LEA         pr_BYTE,A1
000019C6  4E4F                    1437      TRAP        #15
000019C8                          1438  
000019C8  6000 0032               1439      BRA         print_add_to_ea
000019CC                          1440  
000019CC                          1441  MATCH_SUB_TO_EA_W
000019CC                          1442      ** Move command size into D1
000019CC  123C 0002               1443      MOVE.B      #2,D1
000019D0                          1444      ** Print command
000019D0  103C 000E               1445      MOVE.B      #14,D0
000019D4  43F8 006F               1446      LEA         pr_SUB,A1
000019D8  4E4F                    1447      TRAP        #15
000019DA                          1448      ** Print size
000019DA  43F8 0019               1449      LEA         pr_WORD,A1
000019DE  4E4F                    1450      TRAP        #15
000019E0                          1451  
000019E0  6000 001A               1452      BRA         print_add_to_ea
000019E4                          1453  
000019E4                          1454  MATCH_SUB_TO_EA_L
000019E4                          1455      ** Move command size into D1
000019E4  123C 0004               1456      MOVE.B      #4,D1
000019E8                          1457      ** Print command
000019E8  103C 000E               1458      MOVE.B      #14,D0
000019EC  43F8 006F               1459      LEA         pr_SUB,A1
000019F0  4E4F                    1460      TRAP        #15
000019F2                          1461      ** Print size
000019F2  43F8 001C               1462      LEA         pr_LONG,A1
000019F6  4E4F                    1463      TRAP        #15
000019F8                          1464  
000019F8  6000 0002               1465      BRA         print_add_to_ea
000019FC                          1466  
000019FC                          1467  print_add_to_ea
000019FC                          1468      ** Print space
000019FC  43F8 0000               1469      LEA         pr_space,A1
00001A00  4E4F                    1470      TRAP        #15
00001A02                          1471      ** Print Source
00001A02  3002                    1472      MOVE.W      D2,D0
00001A04  0240 0E00               1473      ANDI.W      #%0000111000000000,D0
00001A08  EC48                    1474      LSR.W       #6,D0
00001A0A  4EB8 1652               1475      JSR         EADecoder_left
00001A0E                          1476      ** Add comma
00001A0E  103C 000E               1477      MOVE.B      #14,D0
00001A12  43F8 0014               1478      LEA         pr_comma,A1
00001A16  4E4F                    1479      TRAP        #15
00001A18                          1480      ** Print source
00001A18  1002                    1481      MOVE.B      D2,D0
00001A1A  0200 003F               1482      ANDI.B      #%00111111,D0
00001A1E  4EB8 166A               1483      JSR         EADecoder
00001A22                          1484  
00001A22  6000 F6A4               1485      BRA         opdec_return
00001A26                          1486  
00001A26                          1487  
00001A26                          1488  MATCH_ADDQ_B
00001A26                          1489      ** Move command size into D1
00001A26  123C 0002               1490      MOVE.B      #2,D1
00001A2A                          1491      ** Print command
00001A2A  103C 000E               1492      MOVE.B      #14,D0
00001A2E  43F8 006A               1493      LEA         pr_ADDQ,A1
00001A32  4E4F                    1494      TRAP        #15
00001A34                          1495      ** Print size
00001A34  43F8 0016               1496      LEA         pr_BYTE,A1
00001A38  4E4F                    1497      TRAP        #15
00001A3A                          1498  
00001A3A  6000 0032               1499      BRA         print_addq
00001A3E                          1500  
00001A3E                          1501  MATCH_ADDQ_W
00001A3E                          1502      ** Move command size into D1
00001A3E  123C 0002               1503      MOVE.B      #2,D1
00001A42                          1504      ** Print command
00001A42  103C 000E               1505      MOVE.B      #14,D0
00001A46  43F8 006A               1506      LEA         pr_ADDQ,A1
00001A4A  4E4F                    1507      TRAP        #15
00001A4C                          1508      ** Print size
00001A4C  43F8 0019               1509      LEA         pr_WORD,A1
00001A50  4E4F                    1510      TRAP        #15
00001A52                          1511  
00001A52  6000 001A               1512      BRA         print_addq
00001A56                          1513  
00001A56                          1514  MATCH_ADDQ_L
00001A56                          1515      ** Move command size into D1
00001A56  123C 0004               1516      MOVE.B      #4,D1
00001A5A                          1517      ** Print command
00001A5A  103C 000E               1518      MOVE.B      #14,D0
00001A5E  43F8 006A               1519      LEA         pr_ADDQ,A1
00001A62  4E4F                    1520      TRAP        #15
00001A64                          1521      ** Print size
00001A64  43F8 001C               1522      LEA         pr_LONG,A1
00001A68  4E4F                    1523      TRAP        #15
00001A6A                          1524  
00001A6A  6000 0002               1525      BRA         print_addq
00001A6E                          1526  
00001A6E                          1527  print_addq
00001A6E                          1528      ** Print space
00001A6E  43F8 0000               1529      LEA         pr_space,A1
00001A72  4E4F                    1530      TRAP        #15
00001A74                          1531      ** Print hash
00001A74  43F8 001F               1532      LEA         pr_hash,A1
00001A78  4E4F                    1533      TRAP        #15
00001A7A                          1534      ** Print Immediate data
00001A7A  3602                    1535      MOVE.W      D2,D3 * Temporarily move op data
00001A7C  3202                    1536      MOVE.W      D2,D1
00001A7E  0241 0E00               1537      ANDI.W      #%0000111000000000,D1
00001A82  EC49                    1538      LSR.W       #6,D1
00001A84  E649                    1539      LSR.W       #3,D1
00001A86  143C 0010               1540      MOVE.B      #16,D2
00001A8A  303C 000F               1541      MOVE.W      #15,D0
00001A8E  4E4F                    1542      TRAP        #15
00001A90                          1543  
00001A90  3403                    1544      MOVE.W      D3,D2 * Move op data back
00001A92                          1545  
00001A92                          1546      ** Add comma
00001A92  103C 000E               1547      MOVE.B      #14,D0
00001A96  43F8 0014               1548      LEA         pr_comma,A1
00001A9A  4E4F                    1549      TRAP        #15
00001A9C                          1550      ** Decode right side ea
00001A9C  1002                    1551      MOVE.B      D2,D0
00001A9E  0200 003F               1552      ANDI.B      #%00111111,D0
00001AA2  4EB8 166A               1553      JSR         EADecoder
00001AA6                          1554  
00001AA6  6000 F620               1555      BRA         opdec_return
00001AAA                          1556  
00001AAA                          1557  
00001AAA                          1558  MATCH_DIVU
00001AAA                          1559      ** Move command size into D1
00001AAA  123C 0002               1560      MOVE.B      #2,D1
00001AAE                          1561      ** Print command
00001AAE  103C 000E               1562      MOVE.B      #14,D0
00001AB2  43F8 0073               1563      LEA         pr_DIVU,A1
00001AB6  4E4F                    1564      TRAP        #15
00001AB8                          1565      ** Print size
00001AB8  43F8 0019               1566      LEA         pr_WORD,A1
00001ABC  4E4F                    1567      TRAP        #15
00001ABE                          1568      ** Print space
00001ABE  43F8 0000               1569      LEA         pr_space,A1
00001AC2  4E4F                    1570      TRAP        #15
00001AC4                          1571      ** Decode right side ea
00001AC4  1002                    1572      MOVE.B      D2,D0
00001AC6  0200 003F               1573      ANDI.B      #%00111111,D0
00001ACA  4EB8 166A               1574      JSR         EADecoder
00001ACE                          1575      ** Add comma
00001ACE  103C 000E               1576      MOVE.B      #14,D0
00001AD2  43F8 0014               1577      LEA         pr_comma,A1
00001AD6  4E4F                    1578      TRAP        #15
00001AD8                          1579      ** Decode left side ea
00001AD8  3002                    1580      MOVE.W      D2,D0
00001ADA  0240 0E00               1581      ANDI.W      #%0000111000000000,D0
00001ADE  EC88                    1582      LSR.L       #6,D0
00001AE0  4EB8 1652               1583      JSR         EADecoder_left
00001AE4                          1584  
00001AE4  6000 F5E2               1585      BRA         opdec_return
00001AE8                          1586  
00001AE8                          1587  
00001AE8                          1588  
00001AE8                          1589  MATCH_MOVEM_TO_MEM_W
00001AE8                          1590      ** Move command size into D1
00001AE8  123C 0002               1591      MOVE.B      #2,D1
00001AEC                          1592      ** Print command
00001AEC  103C 000E               1593      MOVE.B      #14,D0
00001AF0  43F8 0037               1594      LEA         pr_MOVEM,A1
00001AF4  4E4F                    1595      TRAP        #15
00001AF6                          1596      ** Print size
00001AF6  43F8 0019               1597      LEA         pr_WORD,A1
00001AFA  4E4F                    1598      TRAP        #15
00001AFC                          1599  
00001AFC  6000 0016               1600      BRA         print_movem_to_mem
00001B00                          1601  MATCH_MOVEM_TO_MEM_L
00001B00                          1602      ** Move command size into D1
00001B00  123C 0004               1603      MOVE.B      #4,D1
00001B04                          1604      ** Print command
00001B04  103C 000E               1605      MOVE.B      #14,D0
00001B08  43F8 0037               1606      LEA         pr_MOVEM,A1
00001B0C  4E4F                    1607      TRAP        #15
00001B0E                          1608      ** Print size
00001B0E  43F8 001C               1609      LEA         pr_LONG,A1
00001B12  4E4F                    1610      TRAP        #15
00001B14                          1611  print_movem_to_mem
00001B14                          1612      ** Print space
00001B14  43F8 0000               1613      LEA         pr_space,A1
00001B18  4E4F                    1614      TRAP        #15
00001B1A                          1615      
00001B1A  6100 001E               1616      BSR         print_movem_mask_to_mem
00001B1E                          1617      ** Add comma
00001B1E  103C 000E               1618      MOVE.B      #14,D0
00001B22  43F8 0014               1619      LEA         pr_comma,A1
00001B26  4E4F                    1620      TRAP        #15
00001B28                          1621      ** Decode right side ea
00001B28  1002                    1622      MOVE.B      D2,D0
00001B2A  0200 003F               1623      ANDI.B      #%00111111,D0
00001B2E  4EB8 166A               1624      JSR         EADecoder
00001B32                          1625  
00001B32  6000 F594               1626      BRA         opdec_return
00001B36                          1627          
00001B36                          1628      
00001B36                          1629  MATCH_MOVEM_TO_REG_W
00001B36  3A02                    1630      MOVE.W      D2,D5       *REMOVE
00001B38                          1631      
00001B38                          1632  MATCH_MOVEM_TO_REG_L
00001B38  3A02                    1633      MOVE.W      D2,D5       *REMOVE
00001B3A                          1634      
00001B3A                          1635      
00001B3A                          1636  print_movem_mask_to_mem
00001B3A  48A7 FF7E               1637      MOVEM       D0-D7/A1-A6,-(SP)
00001B3E                          1638  
00001B3E  4243                    1639      CLR         D3          ** Temp register
00001B40  3810                    1640      MOVE.W      (A0),D4     ** Holds direct registers
00001B42  3A18                    1641      MOVE.W      (A0)+,D5    ** Holds address registers
00001B44  0244 00FF               1642      ANDI.W      #%0000000011111111,D4
00001B48  0245 FF00               1643      ANDI.W      #%1111111100000000,D5
00001B4C  E04D                    1644      LSR.W       #8,D5
00001B4E                          1645      
00001B4E  6100 0012               1646      BSR         print_movem_dn
00001B52                          1647      
00001B52                          1648      ** Print ADDRESS REG slash
00001B52  103C 000E               1649      MOVE.B      #14,D0
00001B56  43F8 0026               1650      LEA         pr_slash,A1
00001B5A  4E4F                    1651      TRAP        #15
00001B5C                          1652      
00001B5C                          1653      *BSR         print_movem_an
00001B5C                          1654      
00001B5C  4C9F 7EFF               1655      MOVEM       (SP)+,D0-D7/A1-A6
00001B60  4E75                    1656      RTS
00001B62                          1657      
00001B62                          1658      
00001B62                          1659  print_movem_dn
00001B62                          1660      
00001B62                          1661  to_mem_d0 *************************** D0
00001B62                          1662      ** Test bit
00001B62  0804 0008               1663      BTST        #8,D4
00001B66  6700 0018               1664      BEQ         to_mem_d1
00001B6A                          1665      ** Print register
00001B6A  103C 000E               1666      MOVE.B      #14,D0
00001B6E  43F8 00C5               1667      LEA         pr_d0,A1
00001B72  4E4F                    1668      TRAP        #15
00001B74                          1669      
00001B74                          1670      ** Check if next bit is clear
00001B74                          1671      ** If true, skip next
00001B74  0804 0007               1672      BTST        #7,D4
00001B78  6700 0024               1673      BEQ         to_mem_d2
00001B7C                          1674      ** Else, check cascade
00001B7C  6000 00CA               1675      BRA         cascade_d1
00001B80                          1676  
00001B80                          1677  to_mem_d1 *************************** D1
00001B80                          1678      ** Test bit
00001B80  0804 0007               1679      BTST        #7,D4
00001B84  6700 0018               1680      BEQ         to_mem_d2
00001B88                          1681      ** Print register
00001B88  103C 000E               1682      MOVE.B      #14,D0
00001B8C  43F8 00C8               1683      LEA         pr_d1,A1
00001B90  4E4F                    1684      TRAP        #15
00001B92                          1685      
00001B92                          1686      ** Check if next bit is clear
00001B92                          1687      ** If true, skip next
00001B92  0804 0006               1688      BTST        #6,D4
00001B96  6700 0024               1689      BEQ         to_mem_d3
00001B9A                          1690      ** Else, check cascade
00001B9A  6000 00C4               1691      BRA         cascade_d2
00001B9E                          1692  
00001B9E                          1693  to_mem_d2 *************************** D2
00001B9E                          1694      ** Test bit
00001B9E  0804 0006               1695      BTST        #6,D4
00001BA2  6700 0018               1696      BEQ         to_mem_d3
00001BA6                          1697      ** Print register
00001BA6  103C 000E               1698      MOVE.B      #14,D0
00001BAA  43F8 00CB               1699      LEA         pr_d2,A1
00001BAE  4E4F                    1700      TRAP        #15
00001BB0                          1701      
00001BB0                          1702      ** Check if next bit is clear
00001BB0                          1703      ** If true, skip next
00001BB0  0804 0005               1704      BTST        #5,D4
00001BB4  6700 0024               1705      BEQ         to_mem_d4
00001BB8                          1706      ** Else, check cascade
00001BB8  6000 00BE               1707      BRA         cascade_d3
00001BBC                          1708  
00001BBC                          1709  to_mem_d3 *************************** D3
00001BBC                          1710      ** Test bit
00001BBC  0804 0005               1711      BTST        #5,D4
00001BC0  6700 0018               1712      BEQ         to_mem_d4
00001BC4                          1713      ** Print register
00001BC4  103C 000E               1714      MOVE.B      #14,D0
00001BC8  43F8 00CE               1715      LEA         pr_d3,A1
00001BCC  4E4F                    1716      TRAP        #15
00001BCE                          1717      
00001BCE                          1718      ** Check if next bit is clear
00001BCE                          1719      ** If true, skip next
00001BCE  0804 0004               1720      BTST        #4,D4
00001BD2  6700 0024               1721      BEQ         to_mem_d5
00001BD6                          1722      ** Else, check cascade
00001BD6  6000 00B8               1723      BRA         cascade_d4
00001BDA                          1724  
00001BDA                          1725  to_mem_d4 *************************** D4
00001BDA                          1726      ** Test bit
00001BDA  0804 0004               1727      BTST        #4,D4
00001BDE  6700 0018               1728      BEQ         to_mem_d5
00001BE2                          1729      ** Print register
00001BE2  103C 000E               1730      MOVE.B      #14,D0
00001BE6  43F8 00D1               1731      LEA         pr_d4,A1
00001BEA  4E4F                    1732      TRAP        #15
00001BEC                          1733      
00001BEC                          1734      ** Check if next bit is clear
00001BEC                          1735      ** If true, skip next
00001BEC  0804 0003               1736      BTST        #3,D4
00001BF0  6700 0024               1737      BEQ         to_mem_d6
00001BF4                          1738      ** Else, check cascade
00001BF4  6000 00B2               1739      BRA         cascade_d5
00001BF8                          1740  
00001BF8                          1741  to_mem_d5 *************************** D5
00001BF8                          1742      ** Test bit
00001BF8  0804 0003               1743      BTST        #3,D4
00001BFC  6700 0018               1744      BEQ         to_mem_d6
00001C00                          1745      ** Print register
00001C00  103C 000E               1746      MOVE.B      #14,D0
00001C04  43F8 00D4               1747      LEA         pr_d5,A1
00001C08  4E4F                    1748      TRAP        #15
00001C0A                          1749      
00001C0A                          1750      ** Check if next bit is clear
00001C0A                          1751      ** If true, skip next
00001C0A  0804 0002               1752      BTST        #2,D4
00001C0E  6700 0024               1753      BEQ         to_mem_d7
00001C12                          1754      ** Else, check cascade
00001C12  6000 00AC               1755      BRA         cascade_d6
00001C16                          1756  
00001C16                          1757  to_mem_d6 *************************** D6
00001C16                          1758      ** Test bit
00001C16  0804 0002               1759      BTST        #2,D4
00001C1A  6700 0018               1760      BEQ         to_mem_d7
00001C1E                          1761      ** Print register
00001C1E  103C 000E               1762      MOVE.B      #14,D0
00001C22  43F8 00D7               1763      LEA         pr_d6,A1
00001C26  4E4F                    1764      TRAP        #15
00001C28                          1765      
00001C28                          1766      ** Check if next bit is clear
00001C28                          1767      ** If true, skip next
00001C28  0804 0001               1768      BTST        #1,D4
00001C2C  6700 0018               1769      BEQ         print_movem_dn_end
00001C30                          1770      ** Else, check cascade
00001C30  6000 00A6               1771      BRA         cascade_d7
00001C34                          1772      
00001C34                          1773  to_mem_d7 *************************** D7
00001C34                          1774      ** Test bit
00001C34  0804 0001               1775      BTST        #1,D4
00001C38  6700 000C               1776      BEQ         print_movem_dn_end
00001C3C                          1777      ** Print register
00001C3C  103C 000E               1778      MOVE.B      #14,D0
00001C40  43F8 00D7               1779      LEA         pr_d6,A1
00001C44  4E4F                    1780      TRAP        #15
00001C46                          1781      
00001C46                          1782  print_movem_dn_end
00001C46  4E75                    1783      RTS
00001C48                          1784      
00001C48                          1785  
00001C48                          1786  cascade_d1 *************************** -D1
00001C48                          1787      ** If the next bit is set, check next
00001C48  0804 0006               1788      BTST        #6,D4
00001C4C  6600 0012               1789      BNE         cascade_d2
00001C50                          1790      ** Else, finish the list
00001C50  43F8 0024               1791      LEA         pr_hyphen,A1
00001C54  4E4F                    1792      TRAP        #15
00001C56  43F8 00C8               1793      LEA         pr_D1,A1
00001C5A  4E4F                    1794      TRAP        #15
00001C5C                          1795      
00001C5C  6000 FF5E               1796      BRA         to_mem_d3
00001C60                          1797      
00001C60                          1798  cascade_d2 *************************** -D2
00001C60                          1799      ** If the next bit is set, check next
00001C60  0804 0005               1800      BTST        #5,D4
00001C64  6600 0012               1801      BNE         cascade_d3
00001C68                          1802      ** Else, finish the list
00001C68  43F8 0024               1803      LEA         pr_hyphen,A1
00001C6C  4E4F                    1804      TRAP        #15
00001C6E  43F8 00CB               1805      LEA         pr_D2,A1
00001C72  4E4F                    1806      TRAP        #15
00001C74                          1807      
00001C74  6000 FF64               1808      BRA         to_mem_d4
00001C78                          1809      
00001C78                          1810  cascade_d3 *************************** -D3
00001C78                          1811      ** If the next bit is set, check next
00001C78  0804 0004               1812      BTST        #4,D4
00001C7C  6600 0012               1813      BNE         cascade_d4
00001C80                          1814      ** Else, finish the list
00001C80  43F8 0024               1815      LEA         pr_hyphen,A1
00001C84  4E4F                    1816      TRAP        #15
00001C86  43F8 00CE               1817      LEA         pr_D3,A1
00001C8A  4E4F                    1818      TRAP        #15
00001C8C                          1819      
00001C8C  6000 FF6A               1820      BRA         to_mem_d5
00001C90                          1821      
00001C90                          1822  cascade_d4 *************************** -D4
00001C90                          1823      ** If the next bit is set, check next
00001C90  0804 0003               1824      BTST        #3,D4
00001C94  6600 0012               1825      BNE         cascade_d5
00001C98                          1826      ** Else, finish the list
00001C98  43F8 0024               1827      LEA         pr_hyphen,A1
00001C9C  4E4F                    1828      TRAP        #15
00001C9E  43F8 00D1               1829      LEA         pr_D4,A1
00001CA2  4E4F                    1830      TRAP        #15
00001CA4                          1831      
00001CA4  6000 FF70               1832      BRA         to_mem_d6
00001CA8                          1833      
00001CA8                          1834  cascade_d5 *************************** -D5
00001CA8                          1835      ** If the next bit is set, check next
00001CA8  0804 0002               1836      BTST        #2,D4
00001CAC  6600 0012               1837      BNE         cascade_d6
00001CB0                          1838      ** Else, finish the list
00001CB0  43F8 0024               1839      LEA         pr_hyphen,A1
00001CB4  4E4F                    1840      TRAP        #15
00001CB6  43F8 00D4               1841      LEA         pr_D5,A1
00001CBA  4E4F                    1842      TRAP        #15
00001CBC                          1843      
00001CBC  6000 FF76               1844      BRA         to_mem_d7
00001CC0                          1845      
00001CC0                          1846  cascade_d6 *************************** -D6
00001CC0                          1847      ** If the next bit is set, check next
00001CC0  0804 0002               1848      BTST        #2,D4
00001CC4  6600 0012               1849      BNE         cascade_d7
00001CC8                          1850      ** Else, finish the list
00001CC8  43F8 0024               1851      LEA         pr_hyphen,A1
00001CCC  4E4F                    1852      TRAP        #15
00001CCE  43F8 00D7               1853      LEA         pr_D6,A1
00001CD2  4E4F                    1854      TRAP        #15
00001CD4                          1855      
00001CD4  6000 FF70               1856      BRA         print_movem_dn_end
00001CD8                          1857      
00001CD8                          1858  cascade_d7 *************************** -D7
00001CD8                          1859      ** Else, finish the list
00001CD8  43F8 0024               1860      LEA         pr_hyphen,A1
00001CDC  4E4F                    1861      TRAP        #15
00001CDE  43F8 00DA               1862      LEA         pr_D7,A1
00001CE2  4E4F                    1863      TRAP        #15
00001CE4                          1864      
00001CE4  6000 FF60               1865      BRA         print_movem_dn_end
00001CE8                          1866  
00001CE8                          1867  
00001CE8                          1868  print_movem_an
00001CE8                          1869  
00001CE8                          1870  to_mem_a0
00001CE8                          1871  to_mem_a1
00001CE8                          1872  to_mem_a2
00001CE8                          1873  to_mem_a3
00001CE8                          1874  to_mem_a4
00001CE8                          1875  to_mem_a5
00001CE8                          1876  to_mem_a6
00001CE8                          1877  to_mem_a7
00001CE8                          1878      
00001CE8                          1879      
00001CE8                          1880  
00001CE8                          1881  
00001CE8                          1882  
00001CE8                          1883  
00001CE8                          1884  
00001CE8                          1885  
00001CE8                          1886  -------------------- end include --------------------
00001CE8                          1887                  INCLUDE 'spencer_opcodes.x68'
00001CE8  =0000000E               1888  SHIFT       EQU %1110
00001CE8  =00000003               1889  RO          EQU %11
00001CE8  =00000000               1890  AS          EQU %00
00001CE8  =00000001               1891  LS          EQU %01
00001CE8  =00000000               1892  R           EQU %0
00001CE8  =00000001               1893  L           EQU %1
00001CE8  =00000001               1894  SHIFT_register  EQU %1
00001CE8  =00000000               1895  SHIFT_immed     EQU %0
00001CE8  =00000000               1896  SHIFT_BYTE  EQU %00
00001CE8  =00000001               1897  SHIFT_WORD  EQU %01
00001CE8  =00000003               1898  SHIFT_LONG  EQU %11
00001CE8                          1899  
00001CE8                          1900  CHECK_SHIFT
00001CE8  6100 010E               1901      BSR     Get_Count_Register_Val          * register 3
00001CEC  6100 011E               1902      BSR     Get_Size                        * register 4
00001CF0  6100 012E               1903      BSR     Get_Direction                   * register 5
00001CF4  6100 013E               1904      BSR     Get_Is_Register_Or_Immediate    * register 6
00001CF8  6100 0152               1905      BSR     Get_Shift_Opcode                * register 7
00001CFC                          1906  
00001CFC  6100 0024               1907      BSR     PrintShiftData
00001D00                          1908  
00001D00  6100 000C               1909      BSR     getShiftDestReg
00001D04                          1910  
00001D04  103C 0003               1911      MOVE.B  #3,D0
00001D08  4E4F                    1912      TRAP    #15
00001D0A                          1913  
00001D0A  6000 F3BC               1914      BRA         opdec_return
00001D0E                          1915  
00001D0E                          1916  getShiftDestReg
00001D0E                          1917  
00001D0E  48A7 2000               1918      MOVEM.W     D2, -(SP)
00001D12                          1919  
00001D12  123C 000D               1920      MOVE.B      #13,D1
00001D16  E3AA                    1921      LSL.L       D1,D2
00001D18  E2AA                    1922      LSR.L       D1,D2
00001D1A  1202                    1923      MOVE.B      D2,D1
00001D1C                          1924  
00001D1C  4C9F 0004               1925      MOVEM.W     (SP)+,D2
00001D20  4E75                    1926      RTS
00001D22                          1927  
00001D22                          1928  
00001D22                          1929  PrintShiftData
00001D22                          1930  
00001D22  BE3C 0003               1931      CMP.B   #RO,D7
00001D26  6700 0012               1932      BEQ     printRotate
00001D2A  BE3C 0000               1933      CMP.B   #AS,D7
00001D2E  6700 0014               1934      BEQ     printArithShift
00001D32  BE3C 0001               1935      CMP.B   #LS,D7
00001D36  6700 0016               1936      BEQ     printLogicShift
00001D3A                          1937  
00001D3A                          1938  printRotate
00001D3A  43F8 007A               1939      LEA         pr_SHIFT_RO,A1
00001D3E  4EF9 00001D58           1940      JMP         executeShiftOpcodePrint
00001D44                          1941  printArithShift
00001D44  43F8 007D               1942      LEA         pr_SHIFT_AS,A1
00001D48  4EF9 00001D58           1943      JMP         executeShiftOpcodePrint
00001D4E                          1944  printLogicShift
00001D4E  43F8 0080               1945      LEA         pr_SHIFT_LS,A1
00001D52  4EF9 00001D58           1946      JMP         executeShiftOpcodePrint
00001D58                          1947  executeShiftOpcodePrint
00001D58  6100 0148               1948      BSR         PrintString
00001D5C                          1949  
00001D5C  BA3C 0000               1950      CMP.B   #R,D5
00001D60  6700 000A               1951      BEQ     printShiftRight
00001D64  BA3C 0001               1952      CMP.B   #L,D5
00001D68  6700 000C               1953      BEQ     printShiftLeft
00001D6C                          1954  
00001D6C                          1955  printShiftRight
00001D6C  43F8 0085               1956      LEA         pr_SHIFT_R,A1
00001D70  4EF9 00001D80           1957      JMP         executePrintShiftdirection
00001D76                          1958  printShiftLeft
00001D76  43F8 0083               1959      LEA         pr_SHIFT_L,A1
00001D7A  4EF9 00001D80           1960      JMP         executePrintShiftdirection
00001D80                          1961  executePrintShiftdirection
00001D80  6100 0120               1962      BSR         PrintString
00001D84                          1963  
00001D84  B83C 0000               1964      CMP.B   #SHIFT_BYTE,D4
00001D88  6700 0012               1965      BEQ     printShiftByte
00001D8C  B83C 0001               1966      CMP.B   #SHIFT_WORD,D4
00001D90  6700 0014               1967      BEQ     printShiftWord
00001D94  B83C 0003               1968      CMP.B   #SHIFT_LONG,D4
00001D98  6700 0016               1969      BEQ     printShiftLong
00001D9C                          1970  
00001D9C                          1971  printShiftByte
00001D9C  43F8 0016               1972      LEA     pr_BYTE,A1
00001DA0  4EF9 00001DBA           1973      JMP     executePrintShiftSize
00001DA6                          1974  printShiftWord
00001DA6  43F8 0019               1975      LEA     pr_WORD,A1
00001DAA  4EF9 00001DBA           1976      JMP     executePrintShiftSize
00001DB0                          1977  printShiftLong
00001DB0  43F8 001C               1978      LEA     pr_LONG,A1
00001DB4  4EF9 00001DBA           1979      JMP     executePrintShiftSize
00001DBA                          1980  executePrintShiftSize
00001DBA  6100 00E6               1981      BSR         PrintString
00001DBE  43F8 0000               1982      LEA     pr_space,A1
00001DC2  6100 00DE               1983      BSR     PrintString
00001DC6                          1984  
00001DC6  BC3C 0001               1985      CMP.B   #SHIFT_register,D6
00001DCA  6700 000A               1986      BEQ     printShiftReg
00001DCE  BC3C 0000               1987      CMP.B   #SHIFT_immed,D6
00001DD2  6700 000A               1988      BEQ     printShift
00001DD6                          1989  
00001DD6                          1990  printShiftReg
00001DD6  43F8 0078               1991      LEA     pr_reg,A1
00001DDA  6100 00C6               1992      BSR     PrintString
00001DDE                          1993  printShift
00001DDE  1203                    1994      MOVE.B  D3,D1
00001DE0  103C 0003               1995      MOVE.B  #3,D0
00001DE4  4E4F                    1996      TRAP    #15
00001DE6                          1997  
00001DE6  43F8 0014               1998      LEA     pr_comma,A1
00001DEA  6100 00B6               1999      BSR     PrintString
00001DEE  43F8 0078               2000      LEA     pr_reg,A1
00001DF2  6100 00AE               2001      BSR     PrintString
00001DF6  4E75                    2002      RTS
00001DF8                          2003  
00001DF8                          2004  
00001DF8                          2005  Get_Count_Register_Val
00001DF8                          2006  
00001DF8  48A7 2000               2007      MOVEM.W     D2, -(SP)
00001DFC                          2008  
00001DFC  123C 000D               2009      MOVE.B      #13,D1
00001E00  E98A                    2010      LSL.L       #4,D2
00001E02  E2AA                    2011      LSR.L       D1,D2
00001E04  1602                    2012      MOVE.B      D2,D3
00001E06                          2013  
00001E06  4C9F 0004               2014      MOVEM.W     (SP)+,D2
00001E0A  4E75                    2015      RTS
00001E0C                          2016  
00001E0C                          2017  Get_Size
00001E0C                          2018  
00001E0C  48A7 2000               2019      MOVEM.W     D2, -(SP)
00001E10                          2020  
00001E10  123C 000E               2021      MOVE.B      #14,D1
00001E14  E18A                    2022      LSL.L       #8,D2
00001E16  E2AA                    2023      LSR.L       D1,D2
00001E18  1802                    2024      MOVE.B      D2,D4
00001E1A                          2025  
00001E1A  4C9F 0004               2026      MOVEM.W     (SP)+,D2
00001E1E  4E75                    2027      RTS
00001E20                          2028  Get_Direction
00001E20                          2029  
00001E20  48A7 2000               2030      MOVEM.W     D2, -(SP)
00001E24                          2031  
00001E24  123C 000F               2032      MOVE.B      #15,D1
00001E28  EF8A                    2033      LSL.L       #7,D2
00001E2A  E2AA                    2034      LSR.L       D1,D2
00001E2C  1A02                    2035      MOVE.B      D2,D5
00001E2E                          2036  
00001E2E  4C9F 0004               2037      MOVEM.W     (SP)+,D2
00001E32  4E75                    2038      RTS
00001E34                          2039  Get_Is_Register_Or_Immediate
00001E34                          2040  
00001E34  48A7 2000               2041      MOVEM.W     D2, -(SP)
00001E38                          2042  
00001E38  123C 000A               2043      MOVE.B      #10,D1
00001E3C  E3AA                    2044      LSL.L       D1,D2
00001E3E  123C 000F               2045      MOVE.B      #15,D1
00001E42  E2AA                    2046      LSR.L       D1,D2
00001E44                          2047  
00001E44  1C02                    2048      MOVE.B      D2,D6
00001E46                          2049  
00001E46  4C9F 0004               2050      MOVEM.W     (SP)+,D2
00001E4A  4E75                    2051      RTS
00001E4C                          2052  
00001E4C                          2053  Get_Shift_Opcode
00001E4C                          2054  
00001E4C  48A7 2000               2055      MOVEM.W     D2, -(SP)
00001E50                          2056  
00001E50  123C 000B               2057      MOVE.B      #11,D1
00001E54  E3AA                    2058      LSL.L       D1,D2
00001E56  123C 000E               2059      MOVE.B      #14,D1
00001E5A  E2AA                    2060      LSR.L       D1,D2
00001E5C                          2061  
00001E5C  1E02                    2062      MOVE.B      D2,D7
00001E5E                          2063  
00001E5E  4C9F 0004               2064      MOVEM.W     (SP)+,D2
00001E62  4E75                    2065      RTS
00001E64                          2066  
00001E64                          2067  
00001E64                          2068  MATCH_LSL
00001E64  3A02                    2069      MOVE.W      D2,D5       *REMOVE
00001E66                          2070  MATCH_LSR
00001E66  3A02                    2071      MOVE.W      D2,D5       *REMOVE
00001E68                          2072  MATCH_ASR
00001E68  3A02                    2073      MOVE.W      D2,D5       *REMOVE
00001E6A                          2074  MATCH_ASL
00001E6A  3A02                    2075      MOVE.W      D2,D5       *REMOVE
00001E6C                          2076  MATCH_ROL
00001E6C  3A02                    2077      MOVE.W      D2,D5       *REMOVE
00001E6E                          2078  MATCH_ROR
00001E6E  3A02                    2079      MOVE.W      D2,D5       *REMOVE
00001E70                          2080  
00001E70                          2081  Get_BCC_Displacement_8bit
00001E70                          2082  
00001E70  4246                    2083      CLR     D6
00001E72  1C02                    2084      MOVE.B  D2,D6
00001E74  4E75                    2085      RTS
00001E76                          2086  Get_BCC_Displacement_16bit
00001E76                          2087  
00001E76  4246                    2088      CLR     D6
00001E78  3C18                    2089      MOVE.W  (A0)+,D6
00001E7A  4E75                    2090      RTS
00001E7C                          2091  Get_BCC_Displacement_32bit
00001E7C                          2092  
00001E7C  4246                    2093      CLR     D6
00001E7E  2C18                    2094      MOVE.L  (A0)+,D6
00001E80  4E75                    2095      RTS
00001E82                          2096  Get_Current_Address
00001E82                          2097  
00001E82  4247                    2098      CLR     D7
00001E84  2E08                    2099      MOVE.L      A0,D7
00001E86  5587                    2100      SUBI.L      #2,D7
00001E88  4E75                    2101      RTS
00001E8A                          2102  Get_BCC_Destination_Address
00001E8A                          2103  
00001E8A  9E86                    2104      SUB.L   D6,D7
00001E8C  4E75                    2105      RTS
00001E8E                          2106  
00001E8E                          2107  PrintHex
00001E8E                          2108  
00001E8E  48A7 2000               2109      MOVEM.W     D2, -(SP)
00001E92                          2110  
00001E92  103C 000F               2111      MOVE.B      #15,D0
00001E96  143C 0010               2112      MOVE.B      #16,D2 * print base 16
00001E9A  4E4F                    2113      TRAP        #15
00001E9C                          2114  
00001E9C  4C9F 0004               2115      MOVEM.W     (SP)+,D2
00001EA0  4E75                    2116      RTS
00001EA2                          2117  PrintString
00001EA2  103C 000E               2118      MOVE.B      #14,D0
00001EA6  4E4F                    2119      TRAP        #15
00001EA8  4E75                    2120      RTS
00001EAA                          2121  PrintSizeByte
00001EAA  103C 000E               2122      MOVE.B      #14,D0
00001EAE  43F8 0016               2123      LEA         pr_BYTE,A1
00001EB2  4E4F                    2124      TRAP        #15
00001EB4  4E75                    2125      RTS
00001EB6                          2126  PrintSizeWord
00001EB6  103C 000E               2127      MOVE.B      #14,D0
00001EBA  43F8 0019               2128      LEA         pr_WORD,A1
00001EBE  4E4F                    2129      TRAP        #15
00001EC0  4E75                    2130      RTS
00001EC2                          2131  PrintSizeLong
00001EC2  103C 000E               2132      MOVE.B      #14,D0
00001EC6  43F8 001C               2133      LEA         pr_LONG,A1
00001ECA  4E4F                    2134      TRAP        #15
00001ECC  4E75                    2135      RTS
00001ECE                          2136  
00001ECE                          2137  
00001ECE                          2138  MATCH_CC_T_8
00001ECE  3A02                    2139      MOVE.W      D2,D5       *REMOVE
00001ED0                          2140  MATCH_CC_T_16
00001ED0  3A02                    2141      MOVE.W      D2,D5       *REMOVE
00001ED2                          2142  MATCH_CC_T_32
00001ED2  3A02                    2143      MOVE.W      D2,D5       *REMOVE
00001ED4                          2144  MATCH_CC_F_8
00001ED4  3A02                    2145      MOVE.W      D2,D5       *REMOVE
00001ED6                          2146  MATCH_CC_F_16
00001ED6  3A02                    2147      MOVE.W      D2,D5       *REMOVE
00001ED8                          2148  MATCH_CC_F_32
00001ED8  3A02                    2149      MOVE.W      D2,D5       *REMOVE
00001EDA                          2150  MATCH_CC_HI_8
00001EDA                          2151      ** print opcode **
00001EDA  43F8 00A1               2152      LEA         pr_BCC_HI,A1
00001EDE  61C2                    2153      BSR         PrintString
00001EE0                          2154  
00001EE0  61C8                    2155      BSR         PrintSizeBYTE
00001EE2  43F8 0000               2156      LEA         pr_space,A1
00001EE6  61BA                    2157      BSR         PrintString
00001EE8                          2158  
00001EE8                          2159      ** print address **
00001EE8  6186                    2160      BSR         Get_BCC_Displacement_8bit
00001EEA  6196                    2161      BSR         Get_Current_Address
00001EEC  619C                    2162      BSR         Get_BCC_Destination_Address
00001EEE  2207                    2163      MOVE.L      D7,D1
00001EF0  619C                    2164      BSR         PrintHex
00001EF2                          2165  
00001EF2  6000 F1D4               2166      BRA         opdec_return
00001EF6                          2167  
00001EF6                          2168  MATCH_CC_HI_16
00001EF6                          2169      ** print opcode **
00001EF6  43F8 00A1               2170      LEA         pr_BCC_HI,A1
00001EFA  61A6                    2171      BSR         PrintString
00001EFC                          2172  
00001EFC  61B8                    2173      BSR         PrintSizeWORD
00001EFE  43F8 0000               2174      LEA         pr_space,A1
00001F02  619E                    2175      BSR         PrintString
00001F04                          2176  
00001F04                          2177      ** print address **
00001F04  6100 FF70               2178      BSR         Get_BCC_Displacement_16bit
00001F08  6100 FF78               2179      BSR         Get_Current_Address
00001F0C  6100 FF7C               2180      BSR         Get_BCC_Destination_Address
00001F10  2207                    2181      MOVE.L      D7,D1
00001F12  6100 FF7A               2182      BSR         PrintHex
00001F16                          2183  
00001F16  6000 F1B0               2184      BRA         opdec_return
00001F1A                          2185  MATCH_CC_HI_32
00001F1A                          2186      ** print opcode **
00001F1A  43F8 00A1               2187      LEA         pr_BCC_HI,A1
00001F1E  6182                    2188      BSR         PrintString
00001F20                          2189  
00001F20  61A0                    2190      BSR         PrintSizeLONG
00001F22  43F8 0000               2191      LEA         pr_space,A1
00001F26  6100 FF7A               2192      BSR         PrintString
00001F2A                          2193  
00001F2A                          2194      ** print address **
00001F2A  6100 FF50               2195      BSR         Get_BCC_Displacement_32bit
00001F2E  6100 FF52               2196      BSR         Get_Current_Address
00001F32  6100 FF56               2197      BSR         Get_BCC_Destination_Address
00001F36  2207                    2198      MOVE.L      D7,D1
00001F38  6100 FF54               2199      BSR         PrintHex
00001F3C                          2200  
00001F3C  6000 F18A               2201      BRA         opdec_return
00001F40                          2202  MATCH_CC_LS_8
00001F40                          2203      ** print opcode **
00001F40  43F8 00A9               2204      LEA         pr_BCC_LS,A1
00001F44  6100 FF5C               2205      BSR         PrintString
00001F48                          2206  
00001F48  6100 FF60               2207      BSR         PrintSizeBYTE
00001F4C  43F8 0000               2208      LEA         pr_space,A1
00001F50  6100 FF50               2209      BSR         PrintString
00001F54                          2210  
00001F54                          2211      ** print address **
00001F54  6100 FF1A               2212      BSR         Get_BCC_Displacement_8bit
00001F58  6100 FF28               2213      BSR         Get_Current_Address
00001F5C  6100 FF2C               2214      BSR         Get_BCC_Destination_Address
00001F60  2207                    2215      MOVE.L      D7,D1
00001F62  6100 FF2A               2216      BSR         PrintHex
00001F66                          2217  
00001F66  6000 F160               2218      BRA         opdec_return
00001F6A                          2219  MATCH_CC_LS_16
00001F6A                          2220      ** print opcode **
00001F6A  43F8 00A9               2221      LEA         pr_BCC_LS,A1
00001F6E  6100 FF32               2222      BSR         PrintString
00001F72                          2223  
00001F72  6100 FF42               2224      BSR         PrintSizeWORD
00001F76  43F8 0000               2225      LEA         pr_space,A1
00001F7A  6100 FF26               2226      BSR         PrintString
00001F7E                          2227  
00001F7E                          2228      ** print address **
00001F7E  6100 FEF6               2229      BSR         Get_BCC_Displacement_16bit
00001F82  6100 FEFE               2230      BSR         Get_Current_Address
00001F86  6100 FF02               2231      BSR         Get_BCC_Destination_Address
00001F8A  2207                    2232      MOVE.L      D7,D1
00001F8C  6100 FF00               2233      BSR         PrintHex
00001F90                          2234  
00001F90  6000 F136               2235      BRA         opdec_return
00001F94                          2236  
00001F94                          2237  MATCH_CC_LS_32
00001F94                          2238      ** print opcode **
00001F94  43F8 00A9               2239      LEA         pr_BCC_LS,A1
00001F98  6100 FF08               2240      BSR         PrintString
00001F9C                          2241  
00001F9C  6100 FF24               2242      BSR         PrintSizeLONG
00001FA0  43F8 0000               2243      LEA         pr_space,A1
00001FA4  6100 FEFC               2244      BSR         PrintString
00001FA8                          2245  
00001FA8                          2246      ** print address **
00001FA8  6100 FED2               2247      BSR         Get_BCC_Displacement_32bit
00001FAC  6100 FED4               2248      BSR         Get_Current_Address
00001FB0  6100 FED8               2249      BSR         Get_BCC_Destination_Address
00001FB4  2207                    2250      MOVE.L      D7,D1
00001FB6  6100 FED6               2251      BSR         PrintHex
00001FBA                          2252  
00001FBA  6000 F10C               2253      BRA         opdec_return
00001FBE                          2254  MATCH_CC_CC_8
00001FBE                          2255  
00001FBE                          2256      ** print opcode **
00001FBE  43F8 008D               2257      LEA         pr_BCC_CC,A1
00001FC2  6100 FEDE               2258      BSR         PrintString
00001FC6                          2259  
00001FC6  6100 FEE2               2260      BSR         PrintSizeBYTE
00001FCA  43F8 0000               2261      LEA         pr_space,A1
00001FCE  6100 FED2               2262      BSR         PrintString
00001FD2                          2263  
00001FD2                          2264      ** print address **
00001FD2  6100 FE9C               2265      BSR         Get_BCC_Displacement_8bit
00001FD6  6100 FEAA               2266      BSR         Get_Current_Address
00001FDA  6100 FEAE               2267      BSR         Get_BCC_Destination_Address
00001FDE  2207                    2268      MOVE.L      D7,D1
00001FE0  6100 FEAC               2269      BSR         PrintHex
00001FE4                          2270  
00001FE4  6000 F0E2               2271      BRA         opdec_return
00001FE8                          2272  
00001FE8                          2273  MATCH_CC_CC_16
00001FE8                          2274      ** print opcode **
00001FE8  43F8 008D               2275      LEA         pr_BCC_CC,A1
00001FEC  6100 FEB4               2276      BSR         PrintString
00001FF0                          2277  
00001FF0  6100 FEC4               2278      BSR         PrintSizeWORD
00001FF4  43F8 0000               2279      LEA         pr_space,A1
00001FF8  6100 FEA8               2280      BSR         PrintString
00001FFC                          2281  
00001FFC                          2282      ** print address **
00001FFC  6100 FE78               2283      BSR         Get_BCC_Displacement_16bit
00002000  6100 FE80               2284      BSR         Get_Current_Address
00002004  6100 FE84               2285      BSR         Get_BCC_Destination_Address
00002008  2207                    2286      MOVE.L      D7,D1
0000200A  6100 FE82               2287      BSR         PrintHex
0000200E                          2288  
0000200E  6000 F0B8               2289      BRA         opdec_return
00002012                          2290  MATCH_CC_CC_32
00002012                          2291      ** print opcode **
00002012  43F8 008D               2292      LEA         pr_BCC_CC,A1
00002016  6100 FE8A               2293      BSR         PrintString
0000201A                          2294  
0000201A  6100 FEA6               2295      BSR         PrintSizeLONG
0000201E  43F8 0000               2296      LEA         pr_space,A1
00002022  6100 FE7E               2297      BSR         PrintString
00002026                          2298  
00002026                          2299      ** print address **
00002026  6100 FE54               2300      BSR         Get_BCC_Displacement_32bit
0000202A  6100 FE56               2301      BSR         Get_Current_Address
0000202E  6100 FE5A               2302      BSR         Get_BCC_Destination_Address
00002032  2207                    2303      MOVE.L      D7,D1
00002034  6100 FE58               2304      BSR         PrintHex
00002038                          2305  
00002038  6000 F08E               2306      BRA         opdec_return
0000203C                          2307  MATCH_CC_CS_8
0000203C                          2308      ** print opcode **
0000203C  43F8 0091               2309      LEA         pr_BCC_CS,A1
00002040  6100 FE60               2310      BSR         PrintString
00002044                          2311  
00002044  6100 FE64               2312      BSR         PrintSizeBYTE
00002048  43F8 0000               2313      LEA         pr_space,A1
0000204C  6100 FE54               2314      BSR         PrintString
00002050                          2315  
00002050                          2316      ** print address **
00002050  6100 FE1E               2317      BSR         Get_BCC_Displacement_8bit
00002054  6100 FE2C               2318      BSR         Get_Current_Address
00002058  6100 FE30               2319      BSR         Get_BCC_Destination_Address
0000205C  2207                    2320      MOVE.L      D7,D1
0000205E  6100 FE2E               2321      BSR         PrintHex
00002062                          2322  
00002062  6000 F064               2323      BRA         opdec_return
00002066                          2324  MATCH_CC_CS_16
00002066                          2325      ** print opcode **
00002066  43F8 0091               2326      LEA         pr_BCC_CS,A1
0000206A  6100 FE36               2327      BSR         PrintString
0000206E                          2328  
0000206E  6100 FE46               2329      BSR         PrintSizeWORD
00002072  43F8 0000               2330      LEA         pr_space,A1
00002076  6100 FE2A               2331      BSR         PrintString
0000207A                          2332  
0000207A                          2333      ** print address **
0000207A  6100 FDFA               2334      BSR         Get_BCC_Displacement_16bit
0000207E  6100 FE02               2335      BSR         Get_Current_Address
00002082  6100 FE06               2336      BSR         Get_BCC_Destination_Address
00002086  2207                    2337      MOVE.L      D7,D1
00002088  6100 FE04               2338      BSR         PrintHex
0000208C                          2339  
0000208C  6000 F03A               2340      BRA         opdec_return
00002090                          2341  MATCH_CC_CS_32
00002090                          2342      ** print opcode **
00002090  43F8 0091               2343      LEA         pr_BCC_CS,A1
00002094  6100 FE0C               2344      BSR         PrintString
00002098                          2345  
00002098  6100 FE28               2346      BSR         PrintSizeLONG
0000209C  43F8 0000               2347      LEA         pr_space,A1
000020A0  6100 FE00               2348      BSR         PrintString
000020A4                          2349  
000020A4                          2350      ** print address **
000020A4  6100 FDD6               2351      BSR         Get_BCC_Displacement_32bit
000020A8  6100 FDD8               2352      BSR         Get_Current_Address
000020AC  6100 FDDC               2353      BSR         Get_BCC_Destination_Address
000020B0  2207                    2354      MOVE.L      D7,D1
000020B2  6100 FDDA               2355      BSR         PrintHex
000020B6                          2356  
000020B6  6000 F010               2357      BRA         opdec_return
000020BA                          2358  MATCH_CC_NE_8
000020BA                          2359      ** print opcode **
000020BA  43F8 00B5               2360      LEA         pr_BCC_NE,A1
000020BE  6100 FDE2               2361      BSR         PrintString
000020C2                          2362  
000020C2  6100 FDE6               2363      BSR         PrintSizeBYTE
000020C6  43F8 0000               2364      LEA         pr_space,A1
000020CA  6100 FDD6               2365      BSR         PrintString
000020CE                          2366  
000020CE                          2367      ** print address **
000020CE  6100 FDA0               2368      BSR         Get_BCC_Displacement_8bit
000020D2  6100 FDAE               2369      BSR         Get_Current_Address
000020D6  6100 FDB2               2370      BSR         Get_BCC_Destination_Address
000020DA  2207                    2371      MOVE.L      D7,D1
000020DC  6100 FDB0               2372      BSR         PrintHex
000020E0                          2373  
000020E0  6000 EFE6               2374      BRA         opdec_return
000020E4                          2375  MATCH_CC_NE_16
000020E4                          2376      ** print opcode **
000020E4  43F8 00B5               2377      LEA         pr_BCC_NE,A1
000020E8  6100 FDB8               2378      BSR         PrintString
000020EC                          2379  
000020EC  6100 FDC8               2380      BSR         PrintSizeWORD
000020F0  43F8 0000               2381      LEA         pr_space,A1
000020F4  6100 FDAC               2382      BSR         PrintString
000020F8                          2383  
000020F8                          2384      ** print address **
000020F8  6100 FD7C               2385      BSR         Get_BCC_Displacement_16bit
000020FC  6100 FD84               2386      BSR         Get_Current_Address
00002100  6100 FD88               2387      BSR         Get_BCC_Destination_Address
00002104  2207                    2388      MOVE.L      D7,D1
00002106  6100 FD86               2389      BSR         PrintHex
0000210A                          2390  
0000210A  6000 EFBC               2391      BRA         opdec_return
0000210E                          2392  MATCH_CC_NE_32
0000210E                          2393      ** print opcode **
0000210E  43F8 00B5               2394      LEA         pr_BCC_NE,A1
00002112  6100 FD8E               2395      BSR         PrintString
00002116                          2396  
00002116  6100 FDAA               2397      BSR         PrintSizeLONG
0000211A  43F8 0000               2398      LEA         pr_space,A1
0000211E  6100 FD82               2399      BSR         PrintString
00002122                          2400  
00002122                          2401      ** print address **
00002122  6100 FD58               2402      BSR         Get_BCC_Displacement_32bit
00002126  6100 FD5A               2403      BSR         Get_Current_Address
0000212A  6100 FD5E               2404      BSR         Get_BCC_Destination_Address
0000212E  2207                    2405      MOVE.L      D7,D1
00002130  6100 FD5C               2406      BSR         PrintHex
00002134                          2407  
00002134  6000 EF92               2408      BRA         opdec_return
00002138                          2409  MATCH_CC_EQ_8
00002138                          2410      ** print opcode **
00002138  43F8 0095               2411      LEA         pr_BCC_EQ,A1
0000213C  6100 FD64               2412      BSR         PrintString
00002140                          2413  
00002140  6100 FD68               2414      BSR         PrintSizeBYTE
00002144  43F8 0000               2415      LEA         pr_space,A1
00002148  6100 FD58               2416      BSR         PrintString
0000214C                          2417  
0000214C                          2418      ** print address **
0000214C  6100 FD22               2419      BSR         Get_BCC_Displacement_8bit
00002150  6100 FD30               2420      BSR         Get_Current_Address
00002154  6100 FD34               2421      BSR         Get_BCC_Destination_Address
00002158  2207                    2422      MOVE.L      D7,D1
0000215A  6100 FD32               2423      BSR         PrintHex
0000215E                          2424  
0000215E  6000 EF68               2425      BRA         opdec_return
00002162                          2426  MATCH_CC_EQ_16
00002162                          2427      ** print opcode **
00002162  43F8 0095               2428      LEA         pr_BCC_EQ,A1
00002166  6100 FD3A               2429      BSR         PrintString
0000216A                          2430  
0000216A  6100 FD4A               2431      BSR         PrintSizeWORD
0000216E  43F8 0000               2432      LEA         pr_space,A1
00002172  6100 FD2E               2433      BSR         PrintString
00002176                          2434  
00002176                          2435      ** print address **
00002176  6100 FCFE               2436      BSR         Get_BCC_Displacement_16bit
0000217A  6100 FD06               2437      BSR         Get_Current_Address
0000217E  6100 FD0A               2438      BSR         Get_BCC_Destination_Address
00002182  2207                    2439      MOVE.L      D7,D1
00002184  6100 FD08               2440      BSR         PrintHex
00002188                          2441  
00002188  6000 EF3E               2442      BRA         opdec_return
0000218C                          2443  MATCH_CC_EQ_32
0000218C                          2444      ** print opcode **
0000218C  43F8 0095               2445      LEA         pr_BCC_EQ,A1
00002190  6100 FD10               2446      BSR         PrintString
00002194                          2447  
00002194  6100 FD2C               2448      BSR         PrintSizeLONG
00002198  43F8 0000               2449      LEA         pr_space,A1
0000219C  6100 FD04               2450      BSR         PrintString
000021A0                          2451  
000021A0                          2452      ** print address **
000021A0  6100 FCDA               2453      BSR         Get_BCC_Displacement_32bit
000021A4  6100 FCDC               2454      BSR         Get_Current_Address
000021A8  6100 FCE0               2455      BSR         Get_BCC_Destination_Address
000021AC  2207                    2456      MOVE.L      D7,D1
000021AE  6100 FCDE               2457      BSR         PrintHex
000021B2                          2458  
000021B2  6000 EF14               2459      BRA         opdec_return
000021B6                          2460  MATCH_CC_VC_8
000021B6                          2461      ** print opcode **
000021B6  43F8 00BD               2462      LEA         pr_BCC_VC,A1
000021BA  6100 FCE6               2463      BSR         PrintString
000021BE                          2464  
000021BE  6100 FCEA               2465      BSR         PrintSizeBYTE
000021C2  43F8 0000               2466      LEA         pr_space,A1
000021C6  6100 FCDA               2467      BSR         PrintString
000021CA                          2468  
000021CA                          2469      ** print address **
000021CA  6100 FCA4               2470      BSR         Get_BCC_Displacement_8bit
000021CE  6100 FCB2               2471      BSR         Get_Current_Address
000021D2  6100 FCB6               2472      BSR         Get_BCC_Destination_Address
000021D6  2207                    2473      MOVE.L      D7,D1
000021D8  6100 FCB4               2474      BSR         PrintHex
000021DC                          2475  
000021DC  6000 EEEA               2476      BRA         opdec_return
000021E0                          2477  MATCH_CC_VC_16
000021E0                          2478      ** print opcode **
000021E0  43F8 00BD               2479      LEA         pr_BCC_VC,A1
000021E4  6100 FCBC               2480      BSR         PrintString
000021E8                          2481  
000021E8  6100 FCCC               2482      BSR         PrintSizeWORD
000021EC  43F8 0000               2483      LEA         pr_space,A1
000021F0  6100 FCB0               2484      BSR         PrintString
000021F4                          2485  
000021F4                          2486      ** print address **
000021F4  6100 FC80               2487      BSR         Get_BCC_Displacement_16bit
000021F8  6100 FC88               2488      BSR         Get_Current_Address
000021FC  6100 FC8C               2489      BSR         Get_BCC_Destination_Address
00002200  2207                    2490      MOVE.L      D7,D1
00002202  6100 FC8A               2491      BSR         PrintHex
00002206                          2492  
00002206  6000 EEC0               2493      BRA         opdec_return
0000220A                          2494  MATCH_CC_VC_32
0000220A                          2495      ** print opcode **
0000220A  43F8 00BD               2496      LEA         pr_BCC_VC,A1
0000220E  6100 FC92               2497      BSR         PrintString
00002212                          2498  
00002212  6100 FCAE               2499      BSR         PrintSizeLONG
00002216  43F8 0000               2500      LEA         pr_space,A1
0000221A  6100 FC86               2501      BSR         PrintString
0000221E                          2502  
0000221E                          2503      ** print address **
0000221E  6100 FC5C               2504      BSR         Get_BCC_Displacement_32bit
00002222  6100 FC5E               2505      BSR         Get_Current_Address
00002226  6100 FC62               2506      BSR         Get_BCC_Destination_Address
0000222A  2207                    2507      MOVE.L      D7,D1
0000222C  6100 FC60               2508      BSR         PrintHex
00002230                          2509  
00002230  6000 EE96               2510      BRA         opdec_return
00002234                          2511  MATCH_CC_VS_8
00002234                          2512      ** print opcode **
00002234  43F8 00C1               2513      LEA         pr_BCC_VS,A1
00002238  6100 FC68               2514      BSR         PrintString
0000223C                          2515  
0000223C  6100 FC6C               2516      BSR         PrintSizeBYTE
00002240  43F8 0000               2517      LEA         pr_space,A1
00002244  6100 FC5C               2518      BSR         PrintString
00002248                          2519  
00002248                          2520      ** print address **
00002248  6100 FC26               2521      BSR         Get_BCC_Displacement_8bit
0000224C  6100 FC34               2522      BSR         Get_Current_Address
00002250  6100 FC38               2523      BSR         Get_BCC_Destination_Address
00002254  2207                    2524      MOVE.L      D7,D1
00002256  6100 FC36               2525      BSR         PrintHex
0000225A                          2526  
0000225A  6000 EE6C               2527      BRA         opdec_return
0000225E                          2528  MATCH_CC_VS_16
0000225E                          2529      ** print opcode **
0000225E  43F8 00C1               2530      LEA         pr_BCC_VS,A1
00002262  6100 FC3E               2531      BSR         PrintString
00002266                          2532  
00002266  6100 FC4E               2533      BSR         PrintSizeWORD
0000226A  43F8 0000               2534      LEA         pr_space,A1
0000226E  6100 FC32               2535      BSR         PrintString
00002272                          2536  
00002272                          2537      ** print address **
00002272  6100 FC02               2538      BSR         Get_BCC_Displacement_16bit
00002276  6100 FC0A               2539      BSR         Get_Current_Address
0000227A  6100 FC0E               2540      BSR         Get_BCC_Destination_Address
0000227E  2207                    2541      MOVE.L      D7,D1
00002280  6100 FC0C               2542      BSR         PrintHex
00002284                          2543  
00002284  6000 EE42               2544      BRA         opdec_return
00002288                          2545  MATCH_CC_VS_32
00002288                          2546      ** print opcode **
00002288  43F8 00C1               2547      LEA         pr_BCC_VS,A1
0000228C  6100 FC14               2548      BSR         PrintString
00002290                          2549  
00002290  6100 FC30               2550      BSR         PrintSizeLONG
00002294  43F8 0000               2551      LEA         pr_space,A1
00002298  6100 FC08               2552      BSR         PrintString
0000229C                          2553  
0000229C                          2554      ** print address **
0000229C  6100 FBDE               2555      BSR         Get_BCC_Displacement_32bit
000022A0  6100 FBE0               2556      BSR         Get_Current_Address
000022A4  6100 FBE4               2557      BSR         Get_BCC_Destination_Address
000022A8  2207                    2558      MOVE.L      D7,D1
000022AA  6100 FBE2               2559      BSR         PrintHex
000022AE                          2560  
000022AE  6000 EE18               2561      BRA         opdec_return
000022B2                          2562  MATCH_CC_PL_8
000022B2                          2563      ** print opcode **
000022B2  43F8 00B9               2564      LEA         pr_BCC_PL,A1
000022B6  6100 FBEA               2565      BSR         PrintString
000022BA                          2566  
000022BA  6100 FBEE               2567      BSR         PrintSizeBYTE
000022BE  43F8 0000               2568      LEA         pr_space,A1
000022C2  6100 FBDE               2569      BSR         PrintString
000022C6                          2570  
000022C6                          2571      ** print address **
000022C6  6100 FBA8               2572      BSR         Get_BCC_Displacement_8bit
000022CA  6100 FBB6               2573      BSR         Get_Current_Address
000022CE  6100 FBBA               2574      BSR         Get_BCC_Destination_Address
000022D2  2207                    2575      MOVE.L      D7,D1
000022D4  6100 FBB8               2576      BSR         PrintHex
000022D8                          2577  
000022D8  6000 EDEE               2578      BRA         opdec_return
000022DC                          2579  MATCH_CC_PL_16
000022DC                          2580      ** print opcode **
000022DC  43F8 00B9               2581      LEA         pr_BCC_PL,A1
000022E0  6100 FBC0               2582      BSR         PrintString
000022E4                          2583  
000022E4  6100 FBD0               2584      BSR         PrintSizeWORD
000022E8  43F8 0000               2585      LEA         pr_space,A1
000022EC  6100 FBB4               2586      BSR         PrintString
000022F0                          2587  
000022F0                          2588      ** print address **
000022F0  6100 FB84               2589      BSR         Get_BCC_Displacement_16bit
000022F4  6100 FB8C               2590      BSR         Get_Current_Address
000022F8  6100 FB90               2591      BSR         Get_BCC_Destination_Address
000022FC  2207                    2592      MOVE.L      D7,D1
000022FE  6100 FB8E               2593      BSR         PrintHex
00002302                          2594  
00002302  6000 EDC4               2595      BRA         opdec_return
00002306                          2596  MATCH_CC_PL_32
00002306                          2597      ** print opcode **
00002306  43F8 00B9               2598      LEA         pr_BCC_PL,A1
0000230A  6100 FB96               2599      BSR         PrintString
0000230E                          2600  
0000230E  6100 FBB2               2601      BSR         PrintSizeLONG
00002312  43F8 0000               2602      LEA         pr_space,A1
00002316  6100 FB8A               2603      BSR         PrintString
0000231A                          2604  
0000231A                          2605      ** print address **
0000231A  6100 FB60               2606      BSR         Get_BCC_Displacement_32bit
0000231E  6100 FB62               2607      BSR         Get_Current_Address
00002322  6100 FB66               2608      BSR         Get_BCC_Destination_Address
00002326  2207                    2609      MOVE.L      D7,D1
00002328  6100 FB64               2610      BSR         PrintHex
0000232C                          2611  
0000232C  6000 ED9A               2612      BRA         opdec_return
00002330                          2613  MATCH_CC_MI_8
00002330                          2614      ** print opcode **
00002330  43F8 00B1               2615      LEA         pr_BCC_MI,A1
00002334  6100 FB6C               2616      BSR         PrintString
00002338                          2617  
00002338  6100 FB70               2618      BSR         PrintSizeBYTE
0000233C  43F8 0000               2619      LEA         pr_space,A1
00002340  6100 FB60               2620      BSR         PrintString
00002344                          2621  
00002344                          2622      ** print address **
00002344  6100 FB2A               2623      BSR         Get_BCC_Displacement_8bit
00002348  6100 FB38               2624      BSR         Get_Current_Address
0000234C  6100 FB3C               2625      BSR         Get_BCC_Destination_Address
00002350  2207                    2626      MOVE.L      D7,D1
00002352  6100 FB3A               2627      BSR         PrintHex
00002356                          2628  
00002356  6000 ED70               2629      BRA         opdec_return
0000235A                          2630  MATCH_CC_MI_16
0000235A                          2631      ** print opcode **
0000235A  43F8 00B1               2632      LEA         pr_BCC_MI,A1
0000235E  6100 FB42               2633      BSR         PrintString
00002362                          2634  
00002362  6100 FB52               2635      BSR         PrintSizeWORD
00002366  43F8 0000               2636      LEA         pr_space,A1
0000236A  6100 FB36               2637      BSR         PrintString
0000236E                          2638  
0000236E                          2639      ** print address **
0000236E  6100 FB06               2640      BSR         Get_BCC_Displacement_16bit
00002372  6100 FB0E               2641      BSR         Get_Current_Address
00002376  6100 FB12               2642      BSR         Get_BCC_Destination_Address
0000237A  2207                    2643      MOVE.L      D7,D1
0000237C  6100 FB10               2644      BSR         PrintHex
00002380                          2645  
00002380  6000 ED46               2646      BRA         opdec_return
00002384                          2647  MATCH_CC_MI_32
00002384                          2648      ** print opcode **
00002384  43F8 00B1               2649      LEA         pr_BCC_MI,A1
00002388  6100 FB18               2650      BSR         PrintString
0000238C                          2651  
0000238C  6100 FB34               2652      BSR         PrintSizeLONG
00002390  43F8 0000               2653      LEA         pr_space,A1
00002394  6100 FB0C               2654      BSR         PrintString
00002398                          2655  
00002398                          2656      ** print address **
00002398  6100 FAE2               2657      BSR         Get_BCC_Displacement_32bit
0000239C  6100 FAE4               2658      BSR         Get_Current_Address
000023A0  6100 FAE8               2659      BSR         Get_BCC_Destination_Address
000023A4  2207                    2660      MOVE.L      D7,D1
000023A6  6100 FAE6               2661      BSR         PrintHex
000023AA                          2662  
000023AA  6000 ED1C               2663      BRA         opdec_return
000023AE                          2664  MATCH_CC_GE_8
000023AE                          2665      ** print opcode **
000023AE  43F8 0099               2666      LEA         pr_BCC_GE,A1
000023B2  6100 FAEE               2667      BSR         PrintString
000023B6                          2668  
000023B6  6100 FAF2               2669      BSR         PrintSizeBYTE
000023BA  43F8 0000               2670      LEA         pr_space,A1
000023BE  6100 FAE2               2671      BSR         PrintString
000023C2                          2672  
000023C2                          2673      ** print address **
000023C2  6100 FAAC               2674      BSR         Get_BCC_Displacement_8bit
000023C6  6100 FABA               2675      BSR         Get_Current_Address
000023CA  6100 FABE               2676      BSR         Get_BCC_Destination_Address
000023CE  2207                    2677      MOVE.L      D7,D1
000023D0  6100 FABC               2678      BSR         PrintHex
000023D4                          2679  
000023D4  6000 ECF2               2680      BRA         opdec_return
000023D8                          2681  MATCH_CC_GE_16
000023D8                          2682      ** print opcode **
000023D8  43F8 0099               2683      LEA         pr_BCC_GE,A1
000023DC  6100 FAC4               2684      BSR         PrintString
000023E0                          2685  
000023E0  6100 FAD4               2686      BSR         PrintSizeWORD
000023E4  43F8 0000               2687      LEA         pr_space,A1
000023E8  6100 FAB8               2688      BSR         PrintString
000023EC                          2689  
000023EC                          2690      ** print address **
000023EC  6100 FA88               2691      BSR         Get_BCC_Displacement_16bit
000023F0  6100 FA90               2692      BSR         Get_Current_Address
000023F4  6100 FA94               2693      BSR         Get_BCC_Destination_Address
000023F8  2207                    2694      MOVE.L      D7,D1
000023FA  6100 FA92               2695      BSR         PrintHex
000023FE                          2696  
000023FE  6000 ECC8               2697      BRA         opdec_return
00002402                          2698  MATCH_CC_GE_32
00002402                          2699      ** print opcode **
00002402  43F8 0099               2700      LEA         pr_BCC_GE,A1
00002406  6100 FA9A               2701      BSR         PrintString
0000240A                          2702  
0000240A  6100 FAB6               2703      BSR         PrintSizeLONG
0000240E  43F8 0000               2704      LEA         pr_space,A1
00002412  6100 FA8E               2705      BSR         PrintString
00002416                          2706  
00002416                          2707      ** print address **
00002416  6100 FA64               2708      BSR         Get_BCC_Displacement_32bit
0000241A  6100 FA66               2709      BSR         Get_Current_Address
0000241E  6100 FA6A               2710      BSR         Get_BCC_Destination_Address
00002422  2207                    2711      MOVE.L      D7,D1
00002424  6100 FA68               2712      BSR         PrintHex
00002428                          2713  
00002428  6000 EC9E               2714      BRA         opdec_return
0000242C                          2715  MATCH_CC_LT_8
0000242C                          2716      ** print opcode **
0000242C  43F8 00AD               2717      LEA         pr_BCC_LT,A1
00002430  6100 FA70               2718      BSR         PrintString
00002434                          2719  
00002434  6100 FA74               2720      BSR         PrintSizeBYTE
00002438  43F8 0000               2721      LEA         pr_space,A1
0000243C  6100 FA64               2722      BSR         PrintString
00002440                          2723  
00002440                          2724      ** print address **
00002440  6100 FA2E               2725      BSR         Get_BCC_Displacement_8bit
00002444  6100 FA3C               2726      BSR         Get_Current_Address
00002448  6100 FA40               2727      BSR         Get_BCC_Destination_Address
0000244C  2207                    2728      MOVE.L      D7,D1
0000244E  6100 FA3E               2729      BSR         PrintHex
00002452                          2730  
00002452  6000 EC74               2731      BRA         opdec_return
00002456                          2732  MATCH_CC_LT_16
00002456                          2733      ** print opcode **
00002456  43F8 00AD               2734      LEA         pr_BCC_LT,A1
0000245A  6100 FA46               2735      BSR         PrintString
0000245E                          2736  
0000245E  6100 FA56               2737      BSR         PrintSizeWORD
00002462  43F8 0000               2738      LEA         pr_space,A1
00002466  6100 FA3A               2739      BSR         PrintString
0000246A                          2740  
0000246A                          2741      ** print address **
0000246A  6100 FA0A               2742      BSR         Get_BCC_Displacement_16bit
0000246E  6100 FA12               2743      BSR         Get_Current_Address
00002472  6100 FA16               2744      BSR         Get_BCC_Destination_Address
00002476  2207                    2745      MOVE.L      D7,D1
00002478  6100 FA14               2746      BSR         PrintHex
0000247C                          2747  
0000247C  6000 EC4A               2748      BRA         opdec_return
00002480                          2749  MATCH_CC_LT_32
00002480                          2750      ** print opcode **
00002480  43F8 00AD               2751      LEA         pr_BCC_LT,A1
00002484  6100 FA1C               2752      BSR         PrintString
00002488                          2753  
00002488  6100 FA38               2754      BSR         PrintSizeLONG
0000248C  43F8 0000               2755      LEA         pr_space,A1
00002490  6100 FA10               2756      BSR         PrintString
00002494                          2757  
00002494                          2758      ** print address **
00002494  6100 F9E6               2759      BSR         Get_BCC_Displacement_32bit
00002498  6100 F9E8               2760      BSR         Get_Current_Address
0000249C  6100 F9EC               2761      BSR         Get_BCC_Destination_Address
000024A0  2207                    2762      MOVE.L      D7,D1
000024A2  6100 F9EA               2763      BSR         PrintHex
000024A6                          2764  
000024A6  6000 EC20               2765      BRA         opdec_return
000024AA                          2766  MATCH_CC_GT_8
000024AA                          2767      ** print opcode **
000024AA  43F8 009D               2768      LEA         pr_BCC_GT,A1
000024AE  6100 F9F2               2769      BSR         PrintString
000024B2                          2770  
000024B2  6100 F9F6               2771      BSR         PrintSizeBYTE
000024B6  43F8 0000               2772      LEA         pr_space,A1
000024BA  6100 F9E6               2773      BSR         PrintString
000024BE                          2774  
000024BE                          2775      ** print address **
000024BE  6100 F9B0               2776      BSR         Get_BCC_Displacement_8bit
000024C2  6100 F9BE               2777      BSR         Get_Current_Address
000024C6  6100 F9C2               2778      BSR         Get_BCC_Destination_Address
000024CA  2207                    2779      MOVE.L      D7,D1
000024CC  6100 F9C0               2780      BSR         PrintHex
000024D0                          2781  
000024D0  6000 EBF6               2782      BRA         opdec_return
000024D4                          2783  MATCH_CC_GT_16
000024D4                          2784      ** print opcode **
000024D4  43F8 009D               2785      LEA         pr_BCC_GT,A1
000024D8  6100 F9C8               2786      BSR         PrintString
000024DC                          2787  
000024DC  6100 F9D8               2788      BSR         PrintSizeWORD
000024E0  43F8 0000               2789      LEA         pr_space,A1
000024E4  6100 F9BC               2790      BSR         PrintString
000024E8                          2791  
000024E8                          2792      ** print address **
000024E8  6100 F98C               2793      BSR         Get_BCC_Displacement_16bit
000024EC  6100 F994               2794      BSR         Get_Current_Address
000024F0  6100 F998               2795      BSR         Get_BCC_Destination_Address
000024F4  2207                    2796      MOVE.L      D7,D1
000024F6  6100 F996               2797      BSR         PrintHex
000024FA                          2798  
000024FA  6000 EBCC               2799      BRA         opdec_return
000024FE                          2800  MATCH_CC_GT_32
000024FE                          2801      ** print opcode **
000024FE  43F8 009D               2802      LEA         pr_BCC_GT,A1
00002502  6100 F99E               2803      BSR         PrintString
00002506                          2804  
00002506  6100 F9BA               2805      BSR         PrintSizeLONG
0000250A  43F8 0000               2806      LEA         pr_space,A1
0000250E  6100 F992               2807      BSR         PrintString
00002512                          2808  
00002512                          2809      ** print address **
00002512  6100 F968               2810      BSR         Get_BCC_Displacement_32bit
00002516  6100 F96A               2811      BSR         Get_Current_Address
0000251A  6100 F96E               2812      BSR         Get_BCC_Destination_Address
0000251E  2207                    2813      MOVE.L      D7,D1
00002520  6100 F96C               2814      BSR         PrintHex
00002524                          2815  
00002524  6000 EBA2               2816      BRA         opdec_return
00002528                          2817  MATCH_CC_LE_8
00002528                          2818      ** print opcode **
00002528  43F8 00A5               2819      LEA         pr_BCC_LE,A1
0000252C  6100 F974               2820      BSR         PrintString
00002530                          2821  
00002530  6100 F978               2822      BSR         PrintSizeBYTE
00002534  43F8 0000               2823      LEA         pr_space,A1
00002538  6100 F968               2824      BSR         PrintString
0000253C                          2825  
0000253C                          2826      ** print address **
0000253C  6100 F932               2827      BSR         Get_BCC_Displacement_8bit
00002540  6100 F940               2828      BSR         Get_Current_Address
00002544  6100 F944               2829      BSR         Get_BCC_Destination_Address
00002548  2207                    2830      MOVE.L      D7,D1
0000254A  6100 F942               2831      BSR         PrintHex
0000254E                          2832  
0000254E  6000 EB78               2833      BRA         opdec_return
00002552                          2834  MATCH_CC_LE_16
00002552                          2835      ** print opcode **
00002552  43F8 00A5               2836      LEA         pr_BCC_LE,A1
00002556  6100 F94A               2837      BSR         PrintString
0000255A                          2838  
0000255A  6100 F95A               2839      BSR         PrintSizeWORD
0000255E  43F8 0000               2840      LEA         pr_space,A1
00002562  6100 F93E               2841      BSR         PrintString
00002566                          2842  
00002566                          2843      ** print address **
00002566  6100 F90E               2844      BSR         Get_BCC_Displacement_16bit
0000256A  6100 F916               2845      BSR         Get_Current_Address
0000256E  6100 F91A               2846      BSR         Get_BCC_Destination_Address
00002572  2207                    2847      MOVE.L      D7,D1
00002574  6100 F918               2848      BSR         PrintHex
00002578                          2849  
00002578  6000 EB4E               2850      BRA         opdec_return
0000257C                          2851  MATCH_CC_LE_32
0000257C                          2852      ** print opcode **
0000257C  43F8 00A5               2853      LEA         pr_BCC_LE,A1
00002580  6100 F920               2854      BSR         PrintString
00002584                          2855  
00002584  6100 F93C               2856      BSR         PrintSizeLONG
00002588  43F8 0000               2857      LEA         pr_space,A1
0000258C  6100 F914               2858      BSR         PrintString
00002590                          2859  
00002590                          2860      ** print address **
00002590  6100 F8EA               2861      BSR         Get_BCC_Displacement_32bit
00002594  6100 F8EC               2862      BSR         Get_Current_Address
00002598  6100 F8F0               2863      BSR         Get_BCC_Destination_Address
0000259C  2207                    2864      MOVE.L      D7,D1
0000259E  6100 F8EE               2865      BSR         PrintHex
000025A2                          2866  
000025A2  6000 EB24               2867      BRA         opdec_return
000025A6                          2868  ERROR
000025A6  43F8 0087               2869      LEA         pr_ERROR,A1
000025AA  6100 F8F6               2870      BSR         PrintString
000025AE  6000 EB18               2871      BRA         opdec_return
000025B2                          2872  
000025B2                          2873  
000025B2                          2874  
000025B2                          2875  
000025B2                          2876  -------------------- end include --------------------
000025B2                          2877                  INCLUDE 'arsany_opcodes.x68'
000025B2                          2878  MATCH_MOVEA_W
000025B2                          2879      ** Move command size into D1
000025B2  123C 0002               2880      MOVE.B      #2,D1
000025B6                          2881      ** Print command
000025B6  103C 000E               2882      MOVE.B      #14,D0
000025BA  43F8 0031               2883      LEA         pr_MOVEA,A1
000025BE  4E4F                    2884      TRAP        #15
000025C0                          2885      ** Print size
000025C0  43F8 0019               2886      LEA         pr_WORD,A1
000025C4  4E4F                    2887      TRAP        #15
000025C6                          2888      
000025C6  6000 0016               2889      BRA         print_movea
000025CA                          2890  MATCH_MOVEA_L
000025CA                          2891      ** Move command size into D1
000025CA  123C 0004               2892      MOVE.B      #4,D1
000025CE                          2893      ** Print command
000025CE  103C 000E               2894      MOVE.B      #14,D0
000025D2  43F8 0031               2895      LEA         pr_MOVEA,A1
000025D6  4E4F                    2896      TRAP        #15
000025D8                          2897      ** Print size
000025D8  43F8 001C               2898      LEA         pr_LONG,A1
000025DC  4E4F                    2899      TRAP        #15
000025DE                          2900  print_movea
000025DE                          2901      ** Print space
000025DE  43F8 0000               2902      LEA         pr_space,A1
000025E2  4E4F                    2903      TRAP        #15
000025E4                          2904      ** Decode right side ea
000025E4  1002                    2905      MOVE.B      D2,D0
000025E6  0200 003F               2906      ANDI.B      #%00111111,D0
000025EA  4EB8 166A               2907      JSR         EADecoder
000025EE                          2908      ** Add comma
000025EE  103C 000E               2909      MOVE.B      #14,D0
000025F2  43F8 0014               2910      LEA         pr_comma,A1
000025F6  4E4F                    2911      TRAP        #15
000025F8                          2912      ** Decode left side ea
000025F8  3002                    2913      MOVE.W      D2,D0
000025FA  0240 0FC0               2914      ANDI.W      #%0000111111000000,D0
000025FE  EC88                    2915      LSR.L       #6,D0
00002600  4EB8 1652               2916      JSR         EADecoder_left
00002604                          2917      
00002604  6000 EAC2               2918      BRA         opdec_return
00002608                          2919      
00002608                          2920      
00002608                          2921  MATCH_ADDA_W
00002608                          2922      ** Move command size into D1
00002608  123C 0002               2923      MOVE.B      #2,D1
0000260C                          2924      ** Print command
0000260C  103C 000E               2925      MOVE.B      #14,D0
00002610  43F8 003D               2926      LEA         pr_ADDA,A1
00002614  4E4F                    2927      TRAP        #15
00002616                          2928      ** Print size
00002616  43F8 0019               2929      LEA         pr_WORD,A1
0000261A  4E4F                    2930      TRAP        #15
0000261C                          2931      
0000261C  6000 0016               2932      BRA         print_adda
00002620                          2933  MATCH_ADDA_L
00002620                          2934      ** Move command size into D1
00002620  123C 0004               2935      MOVE.B      #4,D1
00002624                          2936      ** Print command
00002624  103C 000E               2937      MOVE.B      #14,D0
00002628  43F8 003D               2938      LEA         pr_ADDA,A1
0000262C  4E4F                    2939      TRAP        #15
0000262E                          2940      ** Print size
0000262E  43F8 001C               2941      LEA         pr_LONG,A1
00002632  4E4F                    2942      TRAP        #15
00002634                          2943  print_adda
00002634                          2944      ** Print space
00002634  43F8 0002               2945      LEA         pr_space2,A1
00002638  4E4F                    2946      TRAP        #15
0000263A                          2947      ** Decode right side ea
0000263A  1002                    2948      MOVE.B      D2,D0
0000263C  0200 003F               2949      ANDI.B      #%00111111,D0
00002640  4EB8 166A               2950      JSR         EADecoder
00002644                          2951      ** Add comma
00002644  103C 000E               2952      MOVE.B      #14,D0
00002648  43F8 0014               2953      LEA         pr_comma,A1
0000264C  4E4F                    2954      TRAP        #15
0000264E                          2955      ** Decode left side ea
0000264E  3002                    2956      MOVE.W      D2,D0
00002650  0240 0E00               2957      ANDI.W      #%0000111000000000,D0
00002654  0040 0040               2958      ORI.W       #%0000000001000000,D0
00002658  EC88                    2959      LSR.L       #6,D0
0000265A  4EB8 1652               2960      JSR         EADecoder_left
0000265E                          2961      
0000265E  6000 EA68               2962      BRA         opdec_return
00002662                          2963      
00002662                          2964      
00002662                          2965  MATCH_MULS_W
00002662                          2966      ** Move command size into D1
00002662  123C 0002               2967      MOVE.B      #2,D1
00002666                          2968      ** Print command
00002666  103C 000E               2969      MOVE.B      #14,D0
0000266A  43F8 0042               2970      LEA         pr_MULS,A1
0000266E  4E4F                    2971      TRAP        #15
00002670                          2972      ** Print size
00002670  43F8 0019               2973      LEA         pr_WORD,A1
00002674  4E4F                    2974      TRAP        #15
00002676                          2975      ** Print space
00002676  43F8 0002               2976      LEA         pr_space2,A1
0000267A  4E4F                    2977      TRAP        #15
0000267C                          2978      ** Decode right side ea
0000267C  1002                    2979      MOVE.B      D2,D0
0000267E  0200 003F               2980      ANDI.B      #%00111111,D0
00002682  4EB8 166A               2981      JSR         EADecoder
00002686                          2982      ** Add comma
00002686  103C 000E               2983      MOVE.B      #14,D0
0000268A  43F8 0014               2984      LEA         pr_comma,A1
0000268E  4E4F                    2985      TRAP        #15
00002690                          2986      ** Decode left side ea
00002690  3002                    2987      MOVE.W      D2,D0
00002692  0240 0E00               2988      ANDI.W      #%0000111000000000,D0
00002696  EC88                    2989      LSR.L       #6,D0
00002698  4EB8 1652               2990      JSR         EADecoder_left    
0000269C                          2991      
0000269C  6000 EA2A               2992      BRA         opdec_return
000026A0                          2993      
000026A0                          2994      
000026A0                          2995  MATCH_RTS
000026A0  43F8 004B               2996      LEA         pr_RTS,A1
000026A4  103C 000E               2997      MOVE.B      #14,D0
000026A8  4E4F                    2998      TRAP        #15
000026AA                          2999  
000026AA  6000 EA1C               3000      BRA         opdec_return
000026AE                          3001      
000026AE                          3002      
000026AE                          3003  MATCH_CMP_B
000026AE                          3004      ** Move command size into D1
000026AE  123C 0002               3005      MOVE.B      #2,D1
000026B2                          3006      ** Print command
000026B2  103C 000E               3007      MOVE.B      #14,D0
000026B6  43F8 004F               3008      LEA         pr_CMP,A1
000026BA  4E4F                    3009      TRAP        #15
000026BC                          3010      ** Print size
000026BC  43F8 0016               3011      LEA         pr_BYTE,A1
000026C0  4E4F                    3012      TRAP        #15
000026C2                          3013      
000026C2  6000 002E               3014      BRA         print_cmp
000026C6                          3015  MATCH_CMP_W
000026C6                          3016      ** Move command size into D1
000026C6  123C 0002               3017      MOVE.B      #2,D1
000026CA                          3018      ** Print command
000026CA  103C 000E               3019      MOVE.B      #14,D0
000026CE  43F8 004F               3020      LEA         pr_CMP,A1
000026D2  4E4F                    3021      TRAP        #15
000026D4                          3022      ** Print size
000026D4  43F8 0019               3023      LEA         pr_WORD,A1
000026D8  4E4F                    3024      TRAP        #15
000026DA                          3025      
000026DA  6000 0016               3026      BRA         print_cmp
000026DE                          3027  MATCH_CMP_L
000026DE                          3028      ** Move command size into D1
000026DE  123C 0004               3029      MOVE.B      #4,D1
000026E2                          3030      ** Print command
000026E2  103C 000E               3031      MOVE.B      #14,D0
000026E6  43F8 004F               3032      LEA         pr_CMP,A1
000026EA  4E4F                    3033      TRAP        #15
000026EC                          3034      ** Print size
000026EC  43F8 001C               3035      LEA         pr_LONG,A1
000026F0  4E4F                    3036      TRAP        #15
000026F2                          3037  print_cmp
000026F2                          3038      ** Print space
000026F2  43F8 0005               3039      LEA         pr_space3,A1
000026F6  4E4F                    3040      TRAP        #15
000026F8  4240                    3041      CLR         D0
000026FA                          3042      ** Decode right side ea
000026FA  1002                    3043      MOVE.B      D2,D0
000026FC  0200 003F               3044      ANDI.B      #%00111111,D0
00002700  4EB8 166A               3045      JSR         EADecoder
00002704                          3046      ** Add comma
00002704  103C 000E               3047      MOVE.B      #14,D0
00002708  43F8 0014               3048      LEA         pr_comma,A1
0000270C  4E4F                    3049      TRAP        #15
0000270E                          3050      ** Decode left side ea
0000270E  3002                    3051      MOVE.W      D2,D0
00002710  0240 0E00               3052      ANDI.W      #%0000111000000000,D0
00002714  EC88                    3053      LSR.L       #6,D0
00002716  4EB8 1652               3054      JSR         EADecoder_left   
0000271A                          3055      
0000271A  6000 E9AC               3056      BRA         opdec_return
0000271E                          3057      
0000271E                          3058      
0000271E                          3059  MATCH_JSR
0000271E                          3060      ** Print command
0000271E  103C 000E               3061      MOVE.B      #14,D0
00002722  43F8 0053               3062      LEA         pr_JSR,A1
00002726  4E4F                    3063      TRAP        #15
00002728                          3064      ** Print space
00002728  43F8 000E               3065      LEA         pr_space5,A1
0000272C  4E4F                    3066      TRAP        #15
0000272E                          3067      ** Decode right side ea
0000272E  1002                    3068      MOVE.B      D2,D0
00002730  0200 003F               3069      ANDI.B      #%00111111,D0
00002734  4EB8 166A               3070      JSR         EADecoder 
00002738                          3071      
00002738  6000 E98E               3072      BRA         opdec_return
0000273C                          3073      
0000273C                          3074      
0000273C                          3075  MATCH_CLR_B 
0000273C                          3076      ** Move command size into D1
0000273C  123C 0002               3077      MOVE.B      #2,D1
00002740                          3078      ** Print command
00002740  103C 000E               3079      MOVE.B      #14,D0
00002744  43F8 0047               3080      LEA         pr_CLR,A1
00002748  4E4F                    3081      TRAP        #15
0000274A                          3082      ** Print size
0000274A  43F8 0016               3083      LEA         pr_BYTE,A1
0000274E  4E4F                    3084      TRAP        #15
00002750                          3085      
00002750  6000 002E               3086      BRA         print_clr
00002754                          3087  MATCH_CLR_W
00002754                          3088      ** Move command size into D1
00002754  123C 0002               3089      MOVE.B      #2,D1
00002758                          3090      ** Print command
00002758  103C 000E               3091      MOVE.B      #14,D0
0000275C  43F8 0047               3092      LEA         pr_CLR,A1
00002760  4E4F                    3093      TRAP        #15
00002762                          3094      ** Print size
00002762  43F8 0019               3095      LEA         pr_WORD,A1
00002766  4E4F                    3096      TRAP        #15
00002768                          3097      
00002768  6000 0016               3098      BRA         print_clr
0000276C                          3099  MATCH_CLR_L
0000276C                          3100      ** Move command size into D1
0000276C  123C 0004               3101      MOVE.B      #4,D1
00002770                          3102      ** Print command
00002770  103C 000E               3103      MOVE.B      #14,D0
00002774  43F8 0047               3104      LEA         pr_CLR,A1
00002778  4E4F                    3105      TRAP        #15
0000277A                          3106      ** Print size
0000277A  43F8 001C               3107      LEA         pr_LONG,A1
0000277E  4E4F                    3108      TRAP        #15
00002780                          3109  print_clr
00002780                          3110      ** Print space
00002780  43F8 0005               3111      LEA         pr_space3,A1
00002784  4E4F                    3112      TRAP        #15
00002786                          3113      ** Decode right side ea
00002786  1002                    3114      MOVE.B      D2,D0
00002788  0200 003F               3115      ANDI.B      #%00111111,D0
0000278C  4EB8 166A               3116      JSR         EADecoder 
00002790                          3117      
00002790  6000 E936               3118      BRA         opdec_return
00002794                          3119      
00002794                          3120      
00002794                          3121  MATCH_AND_DN_B
00002794                          3122      ** Move command size into D1
00002794  123C 0002               3123      MOVE.B      #2,D1
00002798                          3124      ** Print command
00002798  103C 000E               3125      MOVE.B      #14,D0
0000279C  43F8 0057               3126      LEA         pr_AND,A1
000027A0  4E4F                    3127      TRAP        #15
000027A2                          3128      ** Print size
000027A2  43F8 0016               3129      LEA         pr_BYTE,A1
000027A6  4E4F                    3130      TRAP        #15
000027A8                          3131      
000027A8  6000 002E               3132      BRA         print_and_dn
000027AC                          3133  MATCH_AND_DN_W
000027AC                          3134      ** Move command size into D1
000027AC  123C 0002               3135      MOVE.B      #2,D1
000027B0                          3136      ** Print command
000027B0  103C 000E               3137      MOVE.B      #14,D0
000027B4  43F8 0057               3138      LEA         pr_AND,A1
000027B8  4E4F                    3139      TRAP        #15
000027BA                          3140      ** Print size
000027BA  43F8 0019               3141      LEA         pr_WORD,A1
000027BE  4E4F                    3142      TRAP        #15
000027C0                          3143      
000027C0  6000 0016               3144      BRA         print_and_dn
000027C4                          3145  MATCH_AND_DN_L
000027C4                          3146      ** Move command size into D1
000027C4  123C 0004               3147      MOVE.B      #4,D1
000027C8                          3148      ** Print command
000027C8  103C 000E               3149      MOVE.B      #14,D0
000027CC  43F8 0057               3150      LEA         pr_AND,A1
000027D0  4E4F                    3151      TRAP        #15
000027D2                          3152      ** Print size
000027D2  43F8 001C               3153      LEA         pr_LONG,A1
000027D6  4E4F                    3154      TRAP        #15
000027D8                          3155  print_and_dn
000027D8                          3156      ** Print space
000027D8  43F8 0005               3157      LEA         pr_space3,A1
000027DC  4E4F                    3158      TRAP        #15
000027DE                          3159      ** Decode right side ea
000027DE  1002                    3160      MOVE.B      D2,D0
000027E0  0200 003F               3161      ANDI.B      #%00111111,D0
000027E4  4EB8 166A               3162      JSR         EADecoder
000027E8                          3163      ** Add comma
000027E8  103C 000E               3164      MOVE.B      #14,D0
000027EC  43F8 0014               3165      LEA         pr_comma,A1
000027F0  4E4F                    3166      TRAP        #15
000027F2                          3167      ** Decode left side ea
000027F2  3002                    3168      MOVE.W      D2,D0
000027F4  0240 0E00               3169      ANDI.W      #%0000111000000000,D0
000027F8  EC88                    3170      LSR.L       #6,D0
000027FA  4EB8 1652               3171      JSR         EADecoder_left  
000027FE                          3172      
000027FE  6000 E8C8               3173      BRA         opdec_return
00002802                          3174      
00002802                          3175      
00002802                          3176  MATCH_AND_EA_B
00002802                          3177      ** Move command size into D1
00002802  123C 0002               3178      MOVE.B      #2,D1
00002806                          3179      ** Print command
00002806  103C 000E               3180      MOVE.B      #14,D0
0000280A  43F8 0057               3181      LEA         pr_AND,A1
0000280E  4E4F                    3182      TRAP        #15
00002810                          3183      ** Print size
00002810  43F8 0016               3184      LEA         pr_BYTE,A1
00002814  4E4F                    3185      TRAP        #15
00002816                          3186      
00002816  6000 002E               3187      BRA         print_and_ea
0000281A                          3188  MATCH_AND_EA_W
0000281A                          3189      ** Move command size into D1
0000281A  123C 0002               3190      MOVE.B      #2,D1
0000281E                          3191      ** Print command
0000281E  103C 000E               3192      MOVE.B      #14,D0
00002822  43F8 0057               3193      LEA         pr_AND,A1
00002826  4E4F                    3194      TRAP        #15
00002828                          3195      ** Print size
00002828  43F8 0019               3196      LEA         pr_WORD,A1
0000282C  4E4F                    3197      TRAP        #15
0000282E                          3198      
0000282E  6000 0016               3199      BRA         print_and_ea
00002832                          3200  MATCH_AND_EA_L
00002832                          3201      ** Move command size into D1
00002832  123C 0004               3202      MOVE.B      #4,D1
00002836                          3203      ** Print command
00002836  103C 000E               3204      MOVE.B      #14,D0
0000283A  43F8 0057               3205      LEA         pr_AND,A1
0000283E  4E4F                    3206      TRAP        #15
00002840                          3207      ** Print size
00002840  43F8 001C               3208      LEA         pr_LONG,A1
00002844  4E4F                    3209      TRAP        #15
00002846                          3210  print_and_ea
00002846                          3211      ** Print space
00002846  43F8 0005               3212      LEA         pr_space3,A1
0000284A  4E4F                    3213      TRAP        #15
0000284C                          3214      ** Decode left side ea
0000284C  3002                    3215      MOVE.W      D2,D0
0000284E  0240 0E00               3216      ANDI.W      #%0000111000000000,D0
00002852  EC88                    3217      LSR.L       #6,D0
00002854  4EB8 1652               3218      JSR         EADecoder_left
00002858                          3219      ** Add comma
00002858  103C 000E               3220      MOVE.B      #14,D0
0000285C  43F8 0014               3221      LEA         pr_comma,A1
00002860  4E4F                    3222      TRAP        #15
00002862                          3223      ** Decode right side ea
00002862  1002                    3224      MOVE.B      D2,D0
00002864  0200 003F               3225      ANDI.B      #%00111111,D0
00002868  4EB8 166A               3226      JSR         EADecoder
0000286C                          3227      
0000286C  6000 E85A               3228      BRA         opdec_return
00002870                          3229  
00002870                          3230  
00002870                          3231  
00002870                          3232  
00002870                          3233  
00002870                          3234  
00002870                          3235  
00002870                          3236  
00002870                          3237  
00002870                          3238  -------------------- end include --------------------
00002870                          3239  
00002870                          3240  
00002870                          3241  
00002870                          3242  
00002870                          3243  
00002870                          3244  -------------------- end include --------------------
00002870                          3245  
00002870                          3246          END     start

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
A2H                 1064
ABS_LONG            39
ABS_WORD            38
ADDA_L              7
ADDA_W              3
ADDBYTELOOP         1088
ADDBYTES            1080
ADDI_B              18
ADDI_L              1A
ADDI_RETURN         10C4
ADDI_W              19
ADDQ                5
ADDQ_B              0
ADDQ_L              2
ADDQ_W              1
ADD_ADDA            D
ADD_TO_EA_B         4
ADD_TO_EA_L         6
ADD_TO_EA_W         5
ADD_TO_REG_B        0
ADD_TO_REG_L        2
ADD_TO_REG_W        1
AN                  8
AS                  0
ASL                 383
ASR                 387
BCC                 6
BCC_16              0
BCC_32              FF
CASCADE_D1          1C48
CASCADE_D2          1C60
CASCADE_D3          1C78
CASCADE_D4          1C90
CASCADE_D5          1CA8
CASCADE_D6          1CC0
CASCADE_D7          1CD8
CC_CC               4
CC_CS               5
CC_EQ               7
CC_F                1
CC_GE               C
CC_GT               E
CC_HI               2
CC_LE               F
CC_LS               3
CC_LT               D
CC_MI               B
CC_NE               6
CC_PL               A
CC_T                0
CC_VC               8
CC_VS               9
CHECK_ADDI          15A2
CHECK_ADDQ          1580
CHECK_ADD_ADDA      152A
CHECK_BCC           11C2
CHECK_BCC_16        1282
CHECK_BCC_32        132A
CHECK_BCC_8         11DA
CHECK_CMP           13E6
CHECK_DIVU_OR       14AC
CHECK_FOUR_BIT_SIG  113A
CHECK_MOVEA_L_AND_MOVE_L  1632
CHECK_MOVEA_W_AND_MOVE_W  1608
CHECK_MOVEM         14FA
CHECK_MULS_LEA_CLR_JSR_RTS  140C
CHECK_MULS_W_AND    145E
CHECK_NOP           112E
CHECK_SHIFT         1CE8
CHECK_SHIFT_AND_ROTATE  10EE
CHECK_SUB           15C8
CLR_B               108
CLR_L               10A
CLR_W               109
CMP                 B
CMP_B               0
CMP_L               2
CMP_W               1
CONV_END            1090
CR                  D
DEC_ABS_LONG        171A
DEC_ABS_WORD        170E
DEC_AN              1732
DEC_DN              1726
DEC_IMMEDIATE       16F2
DEC_INDIRECT        173E
DEC_POST_INC        1752
DEC_PRE_DEC         176C
DEC_RETURN          16D4
DIVU                3
DIVU_OR             8
DN                  0
DN_B                0
DN_L                2
DN_W                1
DONE                1058
DONE_MSG            136
EADECODER           166A
EADECODER_LEFT      1652
EA_B                4
EA_L                6
EA_W                5
ERROR               25A6
ERROR_MSG           11A
EXECUTEPRINTSHIFTDIRECTION  1D80
EXECUTEPRINTSHIFTSIZE  1DBA
EXECUTESHIFTOPCODEPRINT  1D58
FOUR_BIT_RETURN     10C0
GETSHIFTDESTREG     1D0E
GET_BCC_DESTINATION_ADDRESS  1E8A
GET_BCC_DISPLACEMENT_16BIT  1E76
GET_BCC_DISPLACEMENT_32BIT  1E7C
GET_BCC_DISPLACEMENT_8BIT  1E70
GET_COUNT_REGISTER_VAL  1DF8
GET_CURRENT_ADDRESS  1E82
GET_DIRECTION       1E20
GET_IS_REGISTER_OR_IMMEDIATE  1E34
GET_SHIFT_OPCODE    1E4C
GET_SIZE            1E0C
IMMEDIATE           3C
IMM_SKIP            16EC
IMM_WORD            170A
INDIRECT            10
INPUT_ERROR         1050
ISOLATE_CC_CODE_FOR_BCC  13D2
ISOLATE_OP_CODE     161A
JSR                 13A
L                   1
LEA                 7
LEFT_SKIP           166E
LF                  A
LOOP_START          102A
LS                  1
LSL                 38F
LSR                 38B
MATCH_ADDA_L        2620
MATCH_ADDA_W        2608
MATCH_ADDI_B        1844
MATCH_ADDI_L        1874
MATCH_ADDI_W        185C
MATCH_ADDQ_B        1A26
MATCH_ADDQ_L        1A56
MATCH_ADDQ_W        1A3E
MATCH_ADD_TO_EA_B   196C
MATCH_ADD_TO_EA_L   199C
MATCH_ADD_TO_EA_W   1984
MATCH_ADD_TO_REG_B  18B2
MATCH_ADD_TO_REG_L  18E2
MATCH_ADD_TO_REG_W  18CA
MATCH_AND_DN_B      2794
MATCH_AND_DN_L      27C4
MATCH_AND_DN_W      27AC
MATCH_AND_EA_B      2802
MATCH_AND_EA_L      2832
MATCH_AND_EA_W      281A
MATCH_ASL           1E6A
MATCH_ASR           1E68
MATCH_CC_CC_16      1FE8
MATCH_CC_CC_32      2012
MATCH_CC_CC_8       1FBE
MATCH_CC_CS_16      2066
MATCH_CC_CS_32      2090
MATCH_CC_CS_8       203C
MATCH_CC_EQ_16      2162
MATCH_CC_EQ_32      218C
MATCH_CC_EQ_8       2138
MATCH_CC_F_16       1ED6
MATCH_CC_F_32       1ED8
MATCH_CC_F_8        1ED4
MATCH_CC_GE_16      23D8
MATCH_CC_GE_32      2402
MATCH_CC_GE_8       23AE
MATCH_CC_GT_16      24D4
MATCH_CC_GT_32      24FE
MATCH_CC_GT_8       24AA
MATCH_CC_HI_16      1EF6
MATCH_CC_HI_32      1F1A
MATCH_CC_HI_8       1EDA
MATCH_CC_LE_16      2552
MATCH_CC_LE_32      257C
MATCH_CC_LE_8       2528
MATCH_CC_LS_16      1F6A
MATCH_CC_LS_32      1F94
MATCH_CC_LS_8       1F40
MATCH_CC_LT_16      2456
MATCH_CC_LT_32      2480
MATCH_CC_LT_8       242C
MATCH_CC_MI_16      235A
MATCH_CC_MI_32      2384
MATCH_CC_MI_8       2330
MATCH_CC_NE_16      20E4
MATCH_CC_NE_32      210E
MATCH_CC_NE_8       20BA
MATCH_CC_PL_16      22DC
MATCH_CC_PL_32      2306
MATCH_CC_PL_8       22B2
MATCH_CC_T_16       1ED0
MATCH_CC_T_32       1ED2
MATCH_CC_T_8        1ECE
MATCH_CC_VC_16      21E0
MATCH_CC_VC_32      220A
MATCH_CC_VC_8       21B6
MATCH_CC_VS_16      225E
MATCH_CC_VS_32      2288
MATCH_CC_VS_8       2234
MATCH_CLR_B         273C
MATCH_CLR_L         276C
MATCH_CLR_W         2754
MATCH_CMP_B         26AE
MATCH_CMP_L         26DE
MATCH_CMP_W         26C6
MATCH_DIVU          1AAA
MATCH_JSR           271E
MATCH_LEA           164E
MATCH_LSL           1E64
MATCH_LSR           1E66
MATCH_MOVEA_L       25CA
MATCH_MOVEA_W       25B2
MATCH_MOVEM_TO_MEM_L  1B00
MATCH_MOVEM_TO_MEM_W  1AE8
MATCH_MOVEM_TO_REG_L  1B38
MATCH_MOVEM_TO_REG_W  1B36
MATCH_MOVEQ         1806
MATCH_MOVE_B        1794
MATCH_MOVE_L        17C4
MATCH_MOVE_W        17AC
MATCH_MULS_L        1650
MATCH_MULS_W        2662
MATCH_NOP           1786
MATCH_OR_DN_B       1642
MATCH_OR_DN_L       1646
MATCH_OR_DN_W       1644
MATCH_OR_EA_B       1648
MATCH_OR_EA_L       164C
MATCH_OR_EA_W       164A
MATCH_ROL           1E6C
MATCH_ROR           1E6E
MATCH_RTS           26A0
MATCH_SUB_TO_DN_B   18FA
MATCH_SUB_TO_DN_L   192A
MATCH_SUB_TO_DN_W   1912
MATCH_SUB_TO_EA_B   19B4
MATCH_SUB_TO_EA_L   19E4
MATCH_SUB_TO_EA_W   19CC
MESSAGE             F5
MOVEA_WL            1
MOVEM_TO_MEM_L      123
MOVEM_TO_MEM_W      122
MOVEM_TO_REG_L      133
MOVEM_TO_REG_W      132
MOVEQ_              7
MOVE_B              1
MOVE_L              2
MOVE_W              3
MULS_L              130
MULS_LEA_CLR_JSR_RTS_MOVEM  4
MULS_OP_W           7
MULS_W_AND          C
NOP                 4E71
NOP_RETURN          10BC
NUMSUB              1096
NUMSUBRTN           1072
OPDECODER           10B2
OPDEC_RETURN        10C8
OUTPUT              10000
POST_INC            18
PRE_DEC             20
PRINTARITHSHIFT     1D44
PRINTHEX            1E8E
PRINTLOGICSHIFT     1D4E
PRINTROTATE         1D3A
PRINTSHIFT          1DDE
PRINTSHIFTBYTE      1D9C
PRINTSHIFTDATA      1D22
PRINTSHIFTLEFT      1D76
PRINTSHIFTLONG      1DB0
PRINTSHIFTREG       1DD6
PRINTSHIFTRIGHT     1D6C
PRINTSHIFTWORD      1DA6
PRINTSIZEBYTE       1EAA
PRINTSIZELONG       1EC2
PRINTSIZEWORD       1EB6
PRINTSTRING         1EA2
PRINT_ADDA          2634
PRINT_ADDI          188C
PRINT_ADDQ          1A6E
PRINT_ADD_TO_EA     19FC
PRINT_ADD_TO_REG    1942
PRINT_AND_DN        27D8
PRINT_AND_EA        2846
PRINT_CLR           2780
PRINT_CMP           26F2
PRINT_MOVE          17DC
PRINT_MOVEA         25DE
PRINT_MOVEM_AN      1CE8
PRINT_MOVEM_DN      1B62
PRINT_MOVEM_DN_END  1C46
PRINT_MOVEM_MASK_TO_MEM  1B3A
PRINT_MOVEM_TO_MEM  1B14
PROGRAM_START       1000
PR_A0               DD
PR_A1               E0
PR_A2               E3
PR_A3               E6
PR_A4               E9
PR_A5               EC
PR_A6               EF
PR_A7               F2
PR_ADD              61
PR_ADDA             3D
PR_ADDI             65
PR_ADDQ             6A
PR_AND              57
PR_BCC_CC           8D
PR_BCC_CS           91
PR_BCC_EQ           95
PR_BCC_GE           99
PR_BCC_GT           9D
PR_BCC_HI           A1
PR_BCC_LE           A5
PR_BCC_LS           A9
PR_BCC_LT           AD
PR_BCC_MI           B1
PR_BCC_NE           B5
PR_BCC_PL           B9
PR_BCC_VC           BD
PR_BCC_VS           C1
PR_BYTE             16
PR_CLR              47
PR_CMP              4F
PR_COMMA            14
PR_D0               C5
PR_D1               C8
PR_D2               CB
PR_D3               CE
PR_D4               D1
PR_D5               D4
PR_D6               D7
PR_D7               DA
PR_DIVU             73
PR_ERROR            87
PR_HASH             1F
PR_HEXTAG           21
PR_HYPHEN           24
PR_JSR              53
PR_LONG             1C
PR_MOVE             2C
PR_MOVEA            31
PR_MOVEM            37
PR_MOVEQ            5B
PR_MULS             42
PR_NOP              28
PR_REG              78
PR_RTS              4B
PR_SHIFT_AS         7D
PR_SHIFT_L          83
PR_SHIFT_LS         80
PR_SHIFT_R          85
PR_SHIFT_RO         7A
PR_SLASH            26
PR_SPACE            0
PR_SPACE2           2
PR_SPACE3           5
PR_SPACE4           9
PR_SPACE5           E
PR_SUB              6F
PR_WORD             19
R                   0
READFIRSTFOURBITS   10CE
READFIRSTTENBITS    10E0
RO                  3
ROL                 39F
ROR                 39B
RTS                 4E75
SHIFT               E
SHIFT_BYTE          0
SHIFT_IMMED         0
SHIFT_LONG          3
SHIFT_REGISTER      1
SHIFT_WORD          1
START               1000
SUB                 9
SUB_TO_DN_B         0
SUB_TO_DN_L         2
SUB_TO_DN_W         1
SUB_TO_EA_B         4
SUB_TO_EA_L         6
SUB_TO_EA_W         5
TO_MEM_A0           1CE8
TO_MEM_A1           1CE8
TO_MEM_A2           1CE8
TO_MEM_A3           1CE8
TO_MEM_A4           1CE8
TO_MEM_A5           1CE8
TO_MEM_A6           1CE8
TO_MEM_A7           1CE8
TO_MEM_D0           1B62
TO_MEM_D1           1B80
TO_MEM_D2           1B9E
TO_MEM_D3           1BBC
TO_MEM_D4           1BDA
TO_MEM_D5           1BF8
TO_MEM_D6           1C16
TO_MEM_D7           1C34
UPSEND              10AA
UPSUB               10A0
UPSUBRTN            107A

00001000 Starting Address
Assembler used: EASy68K Editor/Assembler v5.15.04
Created On: 3/10/2017 5:46:01 PM

00000000                             1  *-----------------------------------------------------------
00000000                             2  * Title      : Main Driver Program
00000000                             3  * Written by : Arsany Azmy, Connor McGwire
00000000                             4  * Date       :
00000000                             5  * Description:
00000000                             6  *-----------------------------------------------------------
00000000  =0000000D                  7  CR      EQU     $0D
00000000  =0000000A                  8  LF      EQU     $0A
00000000                             9  
00000000                            10  
00000000                            11  *** Common strings for printing
00000000= 20 00                     12  pr_space    DC.B    ' ',0
00000002= 20 20 00                  13  pr_space2   DC.B    '  ',0
00000005= 20 20 20 00               14  pr_space3   DC.B    '   ',0
00000009= 20 20 20 20 00            15  pr_space4   DC.B    '    ',0
0000000E= 20 20 20 20 20 00         16  pr_space5   DC.B    '     ',0
00000014= 2C 00                     17  pr_comma    DC.B    ',',0
00000016= 2E 42 00                  18  pr_BYTE     DC.B    '.B',0
00000019= 2E 57 00                  19  pr_WORD     DC.B    '.W',0
0000001C= 2E 4C 00                  20  pr_LONG     DC.B    '.L',0
0000001F= 23 00                     21  pr_hash     DC.B    '#',0
00000021= 23 24 00                  22  pr_hextag   DC.B    '#$',0
00000024= 2D 00                     23  pr_hyphen   DC.B    '-',0
00000026= 2F 00                     24  pr_slash    DC.B    '/',0
00000028                            25  
00000028                            26  
00000028                            27  ** Command strings constants
00000028= 4E 4F 50 00               28  pr_NOP      DC.B    'NOP',0
0000002C= 4D 4F 56 45 00            29  pr_MOVE     DC.B    'MOVE',0
00000031= 4D 4F 56 45 41 00         30  pr_MOVEA    DC.B    'MOVEA',0
00000037= 4D 4F 56 45 4D 00         31  pr_MOVEM    DC.B    'MOVEM',0
0000003D= 41 44 44 41 00            32  pr_ADDA     DC.B    'ADDA',0
00000042= 4D 55 4C 53 00            33  pr_MULS     DC.B    'MULS',0
00000047= 43 4C 52 00               34  pr_CLR      DC.B    'CLR',0
0000004B= 52 54 53 00               35  pr_RTS      DC.B    'RTS',0
0000004F= 43 4D 50 00               36  pr_CMP      DC.B    'CMP',0
00000053= 4A 53 52 00               37  pr_JSR      DC.B    'JSR',0
00000057= 41 4E 44 00               38  pr_AND      DC.B    'AND',0
0000005B= 4F 52 00                  39  pr_OR       DC.B    'OR',0
0000005E= 4C 45 41 00               40  pr_LEA      DC.B    'LEA',0
00000062= 4D 4F 56 45 51 00         41  pr_MOVEQ    DC.B    'MOVEQ',0
00000068= 41 44 44 00               42  pr_ADD      DC.B    'ADD',0
0000006C= 41 44 44 49 00            43  pr_ADDI     DC.B    'ADDI',0
00000071= 41 44 44 51 00            44  pr_ADDQ     DC.B    'ADDQ',0
00000076= 53 55 42 00               45  pr_SUB      DC.B    'SUB',0
0000007A= 44 49 56 55 00            46  pr_DIVU     DC.B    'DIVU',0
0000007F                            47  
0000007F= 44 00                     48  pr_reg      DC.B    'D',0
00000081                            49  
00000081= 52 4F 00                  50  pr_SHIFT_RO   DC.B  'RO',0
00000084= 41 53 00                  51  pr_SHIFT_AS   DC.B  'AS',0
00000087= 4C 53 00                  52  pr_SHIFT_LS   DC.B  'LS',0
0000008A= 4C 00                     53  pr_SHIFT_L    DC.B  'L',0
0000008C= 52 00                     54  pr_SHIFT_R    DC.B  'R',0
0000008E                            55  
0000008E= 45 52 52 4F 52 00         56  pr_ERROR    DC.B    'ERROR',0
00000094                            57  
00000094= 42 43 43 00               58  pr_BCC_CC   DC.B    'BCC',0
00000098= 42 43 53 00               59  pr_BCC_CS   DC.B    'BCS',0
0000009C= 42 45 51 00               60  pr_BCC_EQ   DC.B    'BEQ',0
000000A0= 42 47 45 00               61  pr_BCC_GE   DC.B    'BGE',0
000000A4= 42 47 54 00               62  pr_BCC_GT   DC.B    'BGT',0
000000A8= 42 48 49 00               63  pr_BCC_HI   DC.B    'BHI',0
000000AC= 42 4C 45 00               64  pr_BCC_LE   DC.B    'BLE',0
000000B0= 42 4C 53 00               65  pr_BCC_LS   DC.B    'BLS',0
000000B4= 42 4C 54 00               66  pr_BCC_LT   DC.B    'BLT',0
000000B8= 42 4D 49 00               67  pr_BCC_MI   DC.B    'BMI',0
000000BC= 42 4E 45 00               68  pr_BCC_NE   DC.B    'BNE',0
000000C0= 42 50 4C 00               69  pr_BCC_PL   DC.B    'BPL',0
000000C4= 42 56 43 00               70  pr_BCC_VC   DC.B    'BVC',0
000000C8= 42 56 53 00               71  pr_BCC_VS   DC.B    'BVS',0
000000CC                            72  
000000CC                            73  ** Register constants
000000CC= 44 30 00                  74  pr_d0       DC.B    'D0',0
000000CF= 44 31 00                  75  pr_d1       DC.B    'D1',0
000000D2= 44 32 00                  76  pr_d2       DC.B    'D2',0
000000D5= 44 33 00                  77  pr_d3       DC.B    'D3',0
000000D8= 44 34 00                  78  pr_d4       DC.B    'D4',0
000000DB= 44 35 00                  79  pr_d5       DC.B    'D5',0
000000DE= 44 36 00                  80  pr_d6       DC.B    'D6',0
000000E1= 44 37 00                  81  pr_d7       DC.B    'D7',0
000000E4                            82  
000000E4= 41 30 00                  83  pr_a0       DC.B    'A0',0
000000E7= 41 31 00                  84  pr_a1       DC.B    'A1',0
000000EA= 41 32 00                  85  pr_a2       DC.B    'A2',0
000000ED= 41 33 00                  86  pr_a3       DC.B    'A3',0
000000F0= 41 34 00                  87  pr_a4       DC.B    'A4',0
000000F3= 41 35 00                  88  pr_a5       DC.B    'A5',0
000000F6= 41 36 00                  89  pr_a6       DC.B    'A6',0
000000F9= 41 37 00                  90  pr_a7       DC.B    'A7',0
000000FC                            91  
000000FC                            92  ** Messages
000000FC= 45 6E 74 65 72 20 ...     93  MESSAGE     DC.B    'Enter the address of compiled code: ',0
00000121= 0D 0A 50 6C 65 61 ...     94  MESSAGE2    DC.B    CR,LF,'Please hit enter',0
00000134= 49 6E 76 61 6C 69 ...     95  ERROR_MSG   DC.B    'Invalid input, please rerun',0
00000150= 45 6E 64 20 6F 66 ...     96  DONE_MSG    DC.B    'End of program found!',0
00000166                            97  
00001000                            98  start   ORG     $1000
00001000                            99  
00001000                           100  program_start
00001000                           101  
00001000                           102  *------Code for input-------
00001000                           103  
00001000  43F8 00FC                104          LEA     MESSAGE,A1      *Code block for first message
00001004  103C 000E                105          MOVE.B  #14,D0
00001008  4E4F                     106          TRAP    #15
0000100A                           107  
0000100A  227C 00004000            108          MOVEA.L #$4000, A1
00001010  103C 0002                109          MOVE.B  #2,D0           *Code block for reading input
00001014  4E4F                     110          TRAP    #15
00001016  3001                     111          MOVE.W  D1,D0
00001018                           112  
00001018  2049                     113          MOVEA.L A1,A0           *Move the contents of A1 to A0 for the conversion
0000101A  4EB9 0000108E            114          JSR     A2H             *Branch to Connor's conversion code
00001020                           115  
00001020  2040                     116          MOVEA.L D0,A0
00001022                           117  
00001022  0C50 FFFF                118          CMPI.W  #$FFFF,(A0)
00001026  6700 0032                119          BEQ     input_error
0000102A                           120  
0000102A                           121  loop_start
0000102A                           122  
0000102A  2208                     123          MOVE.L  A0,D1           *Print out the address we're working on
0000102C  7410                     124          MOVE.L  #16,D2
0000102E  700F                     125          MOVE.L  #15,D0
00001030  4E4F                     126          TRAP    #15
00001032                           127  
00001032  700E                     128          MOVE.L  #14,D0
00001034  43F8 0009                129          LEA     pr_space4,A1
00001038  4E4F                     130          TRAP    #15
0000103A                           131  
0000103A  3418                     132          MOVE.W  (A0)+,D2
0000103C  0C42 FFFF                133          CMPI.W  #$FFFF,D2
00001040  6700 0040                134          BEQ     Done
00001044                           135  
00001044  4EB9 000010DC            136          JSR     OpDecoder
0000104A                           137  
0000104A  700D                     138          MOVE.L  #13,D0
0000104C  4E4F                     139          TRAP    #15
0000104E                           140          
0000104E  5245                     141          ADD     #1,D5       *Increment d5 by 1
00001050  BA7C 001F                142          CMP     #31,D5      *Check if theres 31 lines of output
00001054  6700 0010                143          BEQ     clr_scrn    *If theres 20 lines, clear the screen and prompt
00001058                           144  
00001058  60D0                     145          BRA     loop_start
0000105A                           146  
0000105A                           147  input_error
0000105A  700D                     148          MOVE.L  #13,D0
0000105C  43F8 0134                149          LEA     ERROR_MSG,A1
00001060  4E4F                     150          TRAP    #15
00001062  6000 001E                151          BRA     Done
00001066                           152  clr_scrn
00001066  43F8 0121                153          LEA     MESSAGE2,A1     *Print out initial message
0000106A  103C 000E                154          MOVE.B  #14,D0
0000106E  4E4F                     155          TRAP    #15
00001070                           156          
00001070  103C 0002                157          MOVE.B  #2,D0           *Get user input
00001074  4E4F                     158          TRAP    #15
00001076  1A3C 0000                159          MOVE.B  #0,D5
0000107A  60AE                     160          BRA     loop_start
0000107C                           161          
0000107C  103C 0009                162          MOVE.B  #9,D0           *halt the simulator
00001080  4E4F                     163          TRAP    #15
00001082                           164          
00001082                           165  Done
00001082  700E                     166          MOVE.L  #14,D0
00001084  43F8 0150                167          LEA     DONE_MSG,A1
00001088  4E4F                     168          TRAP    #15
0000108A  FFFF FFFF                169          SIMHALT
0000108E                           170  
0000108E                           171          INCLUDE 'ASCII_HEX_Conversions.x68'
0000108E                           172  
0000108E                           173  
0000108E                           174  
0000108E                           175  A2H     *Converts and ASCII Byte string into HEX; Size WORD
0000108E  48E7 7FFE                176          MOVEM.L     D1-D7/A0-A6, -(SP)  
00001092                           177          
00001092  3400                     178          MOVE.W  D0,D2
00001094  3202                     179          MOVE.W  D2,D1                   *Store length of string into D1 for looping
00001096  2248                     180          MOVEA.L A0,A1                   *Copy starting point of string
00001098                           181  
00001098  6000 0026                182          BRA     numSub
0000109C                           183  numSubRTN
0000109C  2049                     184          MOVEA.L A1,A0                   *Restore address position
0000109E  3202                     185          MOVE.W  D2,D1                   *Reset loop counter
000010A0                           186          
000010A0  6000 0028                187          BRA     upSub
000010A4                           188  upSubRTN        
000010A4  2049                     189          MOVEA.L A1,A0                   *Restore address position
000010A6  3202                     190          MOVE.W  D2,D1                   *Reset loop counter
000010A8  4240                     191          CLR     D0                      *Clear D0
000010AA                           192  addBytes
000010AA  D018                     193          ADD.B   (A0)+,D0
000010AC  5301                     194          SUBI.B  #1,D1
000010AE  6700 000A                195          BEQ     conv_end
000010B2                           196  addByteLoop
000010B2  E980                     197          ASL.L   #4,D0
000010B4  D018                     198          ADD.B   (A0)+,D0
000010B6  5301                     199          SUBI.B  #1,D1
000010B8  66F8                     200          BNE     addByteLoop
000010BA                           201  conv_end
000010BA  4CDF 7FFE                202          MOVEM.L     (SP)+, D1-D7/A0-A6
000010BE  4E75                     203          RTS
000010C0                           204          
000010C0                           205  numSub  *Convert ASCII 'number' to true number byte; Should not be called outside of the A2H subroutines
000010C0  0418 0030                206          SUBI.B  #$30,(A0)+              *Subtract difference between null ASCII and '0' ASCII
000010C4  5341                     207          SUB.W   #1,D1                   *Decrement loop counter
000010C6  66F8                     208          BNE     numSub                  *If loop has not ended restart
000010C8  60D2                     209          BRA     numSubRTN
000010CA                           210  
000010CA                           211  upSub   *Loops through string to remove any upper case characters 
000010CA                           212          *that may remain in the string
000010CA  0C10 0009                213          CMPI.B  #9,(A0)                 *Check if the value is greater than 0-9
000010CE  6F00 0004                214          BLE     upSEnd                  *If it's not, continue loop
000010D2  5310                     215          SUBI.B  #1,(A0)                 *Otherwise, subtract difference between ASCII 'number' code and 'A' code
000010D4                           216  upSEnd
000010D4  5248                     217          ADDA.W  #1,A0                   *Increment to next position to check for uppercase
000010D6  5341                     218          SUB.W   #1,D1                   *Decrement loop counter
000010D8  66F0                     219          BNE     upSub                   
000010DA  60C8                     220          BRA     upSubRTN
000010DC                           221  
000010DC                           222  
000010DC                           223  -------------------- end include --------------------
000010DC                           224          INCLUDE 'opcodes.x68'
000010DC                           225  
000010DC  =00004E71                226  NOP             EQU $4E71
000010DC  =00000001                227  MOVE_B          EQU %0001
000010DC  =00000003                228  MOVE_W          EQU %0011
000010DC  =00000002                229  MOVE_L          EQU %0010
000010DC  =00000001                230  MOVEA_WL        EQU %001
000010DC  =00000007                231  MOVEQ_          EQU %0111
000010DC                           232  
000010DC  =00000018                233  ADDI_B          EQU %0000011000
000010DC  =00000019                234  ADDI_W          EQU %0000011001
000010DC  =0000001A                235  ADDI_L          EQU %0000011010
000010DC                           236  
000010DC  =0000000D                237  ADD_ADDA        EQU %1101
000010DC  =00000000                238  ADD_TO_REG_B    EQU %000
000010DC  =00000001                239  ADD_TO_REG_W    EQU %001
000010DC  =00000002                240  ADD_TO_REG_L    EQU %010
000010DC  =00000004                241  ADD_TO_EA_B     EQU %100
000010DC  =00000005                242  ADD_TO_EA_W     EQU %101
000010DC  =00000006                243  ADD_TO_EA_L     EQU %110
000010DC  =00000003                244  ADDA_W          EQU %011
000010DC  =00000007                245  ADDA_L          EQU %111
000010DC                           246  
000010DC  =00000005                247  ADDQ            EQU %0101
000010DC  =00000000                248  ADDQ_B          EQU %000
000010DC  =00000001                249  ADDQ_W          EQU %001
000010DC  =00000002                250  ADDQ_L          EQU %010
000010DC                           251  
000010DC  =0000000C                252  MULS_W_AND      EQU %1100
000010DC  =00000007                253  MULS_OP_W       EQU %111
000010DC                           254  
000010DC  =00000009                255  SUB             EQU %1001
000010DC  =00000000                256  SUB_TO_DN_B     EQU %000
000010DC  =00000001                257  SUB_TO_DN_W     EQU %001
000010DC  =00000002                258  SUB_TO_DN_L     EQU %010
000010DC  =00000004                259  SUB_TO_EA_B     EQU %100
000010DC  =00000005                260  SUB_TO_EA_W     EQU %101
000010DC  =00000006                261  SUB_TO_EA_L     EQU %110
000010DC                           262  
000010DC  =00000008                263  DIVU_OR         EQU %1000
000010DC  =00000003                264  DIVU            EQU %011
000010DC                           265  
000010DC  =00000000                266  DN_B            EQU %000
000010DC  =00000001                267  DN_W            EQU %001
000010DC  =00000002                268  DN_L            EQU %010
000010DC  =00000004                269  EA_B            EQU %100
000010DC  =00000005                270  EA_W            EQU %101
000010DC  =00000006                271  EA_L            EQU %110
000010DC                           272  
000010DC  =00000004                273  MULS_LEA_CLR_JSR_RTS_MOVEM    EQU %0100
000010DC  =00004E75                274  RTS             EQU $4E75
000010DC  =00000007                275  LEA             EQU %111
000010DC  =0000013A                276  JSR             EQU %0100111010
000010DC  =00000108                277  CLR_B           EQU %0100001000
000010DC  =00000109                278  CLR_W           EQU %0100001001
000010DC  =0000010A                279  CLR_L           EQU %0100001010
000010DC  =00000130                280  MULS_L          EQU %0100110000
000010DC                           281  
000010DC  =00000122                282  MOVEM_TO_MEM_W  EQU %0100100010
000010DC  =00000123                283  MOVEM_TO_MEM_L  EQU %0100100011
000010DC  =00000132                284  MOVEM_TO_REG_W  EQU %0100110010
000010DC  =00000133                285  MOVEM_TO_REG_L  EQU %0100110011
000010DC                           286  
000010DC  =0000038F                287  LSL             EQU %1110001111
000010DC  =0000038B                288  LSR             EQU %1110001011
000010DC  =00000387                289  ASR             EQU %1110000111
000010DC  =00000383                290  ASL             EQU %1110000011
000010DC  =0000039F                291  ROL             EQU %1110011111
000010DC  =0000039B                292  ROR             EQU %1110011011
000010DC                           293  
000010DC  =0000000B                294  CMP             EQU %1011
000010DC  =00000000                295  CMP_B           EQU %000
000010DC  =00000001                296  CMP_W           EQU %001
000010DC  =00000002                297  CMP_L           EQU %010
000010DC                           298  
000010DC  =00000006                299  BCC             EQU %0110
000010DC  =00000000                300  BCC_16          EQU %00000000
000010DC  =000000FF                301  BCC_32          EQU $FF
000010DC  =00000000                302  CC_T            EQU %0000
000010DC  =00000001                303  CC_F            EQU %0001
000010DC  =00000002                304  CC_HI           EQU %0010
000010DC  =00000003                305  CC_LS           EQU %0011
000010DC  =00000004                306  CC_CC           EQU %0100
000010DC  =00000005                307  CC_CS           EQU %0101
000010DC  =00000006                308  CC_NE           EQU %0110
000010DC  =00000007                309  CC_EQ           EQU %0111
000010DC  =00000008                310  CC_VC           EQU %1000
000010DC  =00000009                311  CC_VS           EQU %1001
000010DC  =0000000A                312  CC_PL           EQU %1010
000010DC  =0000000B                313  CC_MI           EQU %1011
000010DC  =0000000C                314  CC_GE           EQU %1100
000010DC  =0000000D                315  CC_LT           EQU %1101
000010DC  =0000000E                316  CC_GT           EQU %1110
000010DC  =0000000F                317  CC_LE           EQU %1111
000010DC                           318  
000010DC                           319  
000010DC                           320  
000010DC                           321  
000010DC                           322  
000010DC                           323  
000010DC                           324  OpDecoder
000010DC  48E7 FF7E                325      MOVEM.L     D0-D7/A1-A6, -(SP)
000010E0  4241                     326      CLR         D1
000010E2  6000 0074                327      BRA         CHECK_NOP
000010E6                           328  NOP_RETURN
000010E6  6000 007C                329      BRA         CHECK_FOUR_BIT_SIG
000010EA                           330  FOUR_BIT_RETURN
000010EA  6000 04E0                331      BRA         CHECK_ADDI
000010EE                           332  ADDI_RETURN
000010EE  6000 0028                333      BRA         CHECK_SHIFT_AND_ROTATE
000010F2                           334  
000010F2                           335  opdec_return
000010F2  4CDF 7EFF                336      MOVEM.L     (SP)+, D0-D7/A1-A6
000010F6  4E75                     337      RTS
000010F8                           338  
000010F8                           339  ReadFirstFourBits
000010F8                           340  
000010F8  48A7 2000                341      MOVEM.W     D2, -(SP)
000010FC                           342  
000010FC  1E3C 000C                343      MOVE.B      #12,D7
00001100  EE6A                     344      LSR.W       D7,D2
00001102  1602                     345      MOVE.B      D2,D3
00001104                           346  
00001104  4C9F 0004                347      MOVEM.W     (SP)+,D2
00001108  4E75                     348      RTS
0000110A                           349  
0000110A                           350  ReadFirstTenBits
0000110A                           351  
0000110A  48A7 2000                352      MOVEM.W     D2, -(SP)
0000110E                           353  
0000110E  EC4A                     354      LSR.W       #6,D2
00001110  3602                     355      MOVE.W      D2,D3
00001112                           356  
00001112  4C9F 0004                357      MOVEM.W     (SP)+,D2
00001116  4E75                     358      RTS
00001118                           359  CHECK_SHIFT_AND_ROTATE
00001118                           360  
00001118  61F0                     361      BSR         ReadFirstTenBits
0000111A                           362  
0000111A  3C3C 038F                363      MOVE.W      #LSL,D6
0000111E  BC43                     364      CMP.W       D3,D6
00001120  6700 104C                365      BEQ         MATCH_LSL
00001124                           366  
00001124  3C3C 038B                367      MOVE.W      #LSR,D6
00001128  BC43                     368      CMP.W       D3,D6
0000112A  6700 1044                369      BEQ         MATCH_LSR
0000112E                           370  
0000112E  3C3C 0387                371      MOVE.W      #ASR,D6
00001132  BC43                     372      CMP.W       D3,D6
00001134  6700 103C                373      BEQ         MATCH_ASR
00001138                           374  
00001138  3C3C 0383                375      MOVE.W      #ASL,D6
0000113C  BC43                     376      CMP.W       D3,D6
0000113E  6700 1034                377      BEQ         MATCH_ASL
00001142                           378  
00001142  3C3C 039F                379      MOVE.W      #ROL,D6
00001146  BC43                     380      CMP.W       D3,D6
00001148  6700 102C                381      BEQ         MATCH_ROL
0000114C                           382  
0000114C  3C3C 039B                383      MOVE.W      #ROR,D6
00001150  BC43                     384      CMP.W       D3,D6
00001152  6700 1024                385      BEQ         MATCH_ROR
00001156                           386  
00001156  609A                     387      BRA         opdec_return
00001158                           388  
00001158                           389  CHECK_NOP
00001158                           390  
00001158  3C3C 4E71                391      MOVE.W      #NOP,D6
0000115C  BC42                     392      CMP.W       D2,D6
0000115E  6700 0642                393      BEQ         MATCH_NOP
00001162                           394  
00001162  6082                     395      BRA         NOP_RETURN
00001164                           396  
00001164                           397  CHECK_FOUR_BIT_SIG
00001164                           398  
00001164  6192                     399      BSR         ReadFirstFourBits
00001166                           400  
00001166  1C3C 0001                401      MOVE.B      #MOVE_B,D6
0000116A  BC03                     402      CMP.B       D3,D6
0000116C  6700 0642                403      BEQ         MATCH_MOVE_B
00001170                           404  
00001170  1C3C 0003                405      MOVE.B      #MOVE_W,D6
00001174  BC03                     406      CMP.B       D3,D6
00001176  6700 04BA                407      BEQ         CHECK_MOVEA_W_AND_MOVE_W
0000117A                           408  
0000117A  1C3C 0002                409      MOVE.B      #MOVE_L,D6
0000117E  BC03                     410      CMP.B       D3,D6
00001180  6700 04DA                411      BEQ         CHECK_MOVEA_L_AND_MOVE_L
00001184                           412  
00001184  1C3C 0007                413      MOVE.B      #MOVEQ_,D6
00001188  BC03                     414      CMP.B       D3,D6
0000118A  6700 0696                415      BEQ         MATCH_MOVEQ
0000118E                           416  
0000118E  1C3C 000D                417      MOVE.B      #ADD_ADDA,D6
00001192  BC03                     418      CMP.B       D3,D6
00001194  6700 03BE                419      BEQ         CHECK_ADD_ADDA
00001198                           420  
00001198  1C3C 0005                421      MOVE.B      #ADDQ,D6
0000119C  BC03                     422      CMP.B       D3,D6
0000119E  6700 040A                423      BEQ         CHECK_ADDQ
000011A2                           424  
000011A2  1C3C 0009                425      MOVE.B      #SUB,D6
000011A6  BC03                     426      CMP.B       D3,D6
000011A8  6700 0448                427      BEQ         CHECK_SUB
000011AC                           428  
000011AC  1C3C 0008                429      MOVE.B      #DIVU_OR,D6
000011B0  BC03                     430      CMP.B       D3,D6
000011B2  6700 0322                431      BEQ         CHECK_DIVU_OR
000011B6                           432  
000011B6  1C3C 000C                433      MOVE.B      #MULS_W_AND,D6
000011BA  BC03                     434      CMP.B       D3,D6
000011BC  6700 02CA                435      BEQ         CHECK_MULS_W_AND
000011C0                           436  
000011C0  1C3C 0004                437      MOVE.B      #MULS_LEA_CLR_JSR_RTS_MOVEM,D6
000011C4  BC03                     438      CMP.B       D3,D6
000011C6  6700 026E                439      BEQ         CHECK_MULS_LEA_CLR_JSR_RTS
000011CA                           440  
000011CA  1C3C 000B                441      MOVE.B      #CMP,D6
000011CE  BC03                     442      CMP.B       D3,D6
000011D0  6700 023E                443      BEQ         CHECK_CMP
000011D4                           444  
000011D4  1C3C 0006                445      MOVE.B      #BCC,D6
000011D8  BC03                     446      CMP.B       D3,D6
000011DA  6700 0010                447      BEQ         CHECK_BCC
000011DE                           448  
000011DE  1C3C 000E                449      MOVE.B      #SHIFT,D6
000011E2  BC03                     450      CMP.B       D3,D6
000011E4  6700 0E0C                451      BEQ         CHECK_SHIFT
000011E8                           452  
000011E8  6000 FF00                453      BRA         FOUR_BIT_RETURN
000011EC                           454  CHECK_BCC
000011EC                           455  
000011EC  1C3C 0000                456      MOVE.B      #BCC_16,D6
000011F0  BC02                     457      CMP.B       D2,D6
000011F2  6700 00B8                458      BEQ         CHECK_BCC_16
000011F6                           459  
000011F6  1C3C 00FF                460      MOVE.B      #BCC_32,D6
000011FA  BC02                     461      CMP.B       D2,D6
000011FC  6700 0156                462      BEQ         CHECK_BCC_32
00001200                           463  
00001200  6000 0002                464      BRA         CHECK_BCC_8
00001204                           465  
00001204                           466  CHECK_BCC_8
00001204                           467  
00001204  6100 01F6                468      BSR         ISOLATE_CC_CODE_FOR_BCC
00001208                           469  
00001208  1C3C 0000                470      MOVE.B      #CC_T,D6
0000120C  BC03                     471      CMP.B       D3,D6
0000120E  6700 0FC8                472      BEQ         MATCH_CC_T_8
00001212                           473  
00001212  1C3C 0001                474      MOVE.B      #CC_F,D6
00001216  BC03                     475      CMP.B       D3,D6
00001218  6700 0FC4                476      BEQ         MATCH_CC_F_8
0000121C                           477  
0000121C  1C3C 0002                478      MOVE.B      #CC_HI,D6
00001220  BC03                     479      CMP.B       D3,D6
00001222  6700 0FC0                480      BEQ         MATCH_CC_HI_8
00001226                           481  
00001226  1C3C 0003                482      MOVE.B      #CC_LS,D6
0000122A  BC03                     483      CMP.B       D3,D6
0000122C  6700 101C                484      BEQ         MATCH_CC_LS_8
00001230                           485  
00001230  1C3C 0004                486      MOVE.B      #CC_CC,D6
00001234  BC03                     487      CMP.B       D3,D6
00001236  6700 1090                488      BEQ         MATCH_CC_CC_8
0000123A                           489  
0000123A  1C3C 0005                490      MOVE.B      #CC_CS,D6
0000123E  BC03                     491      CMP.B       D3,D6
00001240  6700 1104                492      BEQ         MATCH_CC_CS_8
00001244                           493  
00001244  1C3C 0006                494      MOVE.B      #CC_NE,D6
00001248  BC03                     495      CMP.B       D3,D6
0000124A  6700 1178                496      BEQ         MATCH_CC_NE_8
0000124E                           497  
0000124E  1C3C 0007                498      MOVE.B      #CC_EQ,D6
00001252  BC03                     499      CMP.B       D3,D6
00001254  6700 11EC                500      BEQ         MATCH_CC_EQ_8
00001258                           501  
00001258  1C3C 0008                502      MOVE.B      #CC_VC,D6
0000125C  BC03                     503      CMP.B       D3,D6
0000125E  6700 1260                504      BEQ         MATCH_CC_VC_8
00001262                           505  
00001262  1C3C 0009                506      MOVE.B      #CC_VS,D6
00001266  BC03                     507      CMP.B       D3,D6
00001268  6700 12D4                508      BEQ         MATCH_CC_VS_8
0000126C                           509  
0000126C  1C3C 000A                510      MOVE.B      #CC_PL,D6
00001270  BC03                     511      CMP.B       D3,D6
00001272  6700 1348                512      BEQ         MATCH_CC_PL_8
00001276                           513  
00001276  1C3C 000B                514      MOVE.B      #CC_MI,D6
0000127A  BC03                     515      CMP.B       D3,D6
0000127C  6700 13BC                516      BEQ         MATCH_CC_MI_8
00001280                           517  
00001280  1C3C 000C                518      MOVE.B      #CC_GE,D6
00001284  BC03                     519      CMP.B       D3,D6
00001286  6700 1430                520      BEQ         MATCH_CC_GE_8
0000128A                           521  
0000128A  1C3C 000D                522      MOVE.B      #CC_LT,D6
0000128E  BC03                     523      CMP.B       D3,D6
00001290  6700 14A4                524      BEQ         MATCH_CC_LT_8
00001294                           525  
00001294  1C3C 000E                526      MOVE.B      #CC_GT,D6
00001298  BC03                     527      CMP.B       D3,D6
0000129A  6700 1518                528      BEQ         MATCH_CC_GT_8
0000129E                           529  
0000129E  1C3C 000F                530      MOVE.B      #CC_LE,D6
000012A2  BC03                     531      CMP.B       D3,D6
000012A4  6700 158C                532      BEQ         MATCH_CC_LE_8
000012A8                           533  
000012A8  6000 1606                534      BRA         ERROR
000012AC                           535  
000012AC                           536  CHECK_BCC_16
000012AC                           537  
000012AC  6100 014E                538      BSR         ISOLATE_CC_CODE_FOR_BCC
000012B0                           539  
000012B0  1C3C 0000                540      MOVE.B      #CC_T,D6
000012B4  BC03                     541      CMP.B       D3,D6
000012B6  6700 0F22                542      BEQ         MATCH_CC_T_16
000012BA                           543  
000012BA  1C3C 0001                544      MOVE.B      #CC_F,D6
000012BE  BC03                     545      CMP.B       D3,D6
000012C0  6700 0F1E                546      BEQ         MATCH_CC_F_16
000012C4                           547  
000012C4  1C3C 0002                548      MOVE.B      #CC_HI,D6
000012C8  BC03                     549      CMP.B       D3,D6
000012CA  6700 0F34                550      BEQ         MATCH_CC_HI_16
000012CE                           551  
000012CE  1C3C 0003                552      MOVE.B      #CC_LS,D6
000012D2  BC03                     553      CMP.B       D3,D6
000012D4  6700 0F9E                554      BEQ         MATCH_CC_LS_16
000012D8                           555  
000012D8  1C3C 0004                556      MOVE.B      #CC_CC,D6
000012DC  BC03                     557      CMP.B       D3,D6
000012DE  6700 1012                558      BEQ         MATCH_CC_CC_16
000012E2                           559  
000012E2  1C3C 0005                560      MOVE.B      #CC_CS,D6
000012E6  BC03                     561      CMP.B       D3,D6
000012E8  6700 1086                562      BEQ         MATCH_CC_CS_16
000012EC                           563  
000012EC  1C3C 0006                564      MOVE.B      #CC_NE,D6
000012F0  BC03                     565      CMP.B       D3,D6
000012F2  6700 10FA                566      BEQ         MATCH_CC_NE_16
000012F6                           567  
000012F6  1C3C 0007                568      MOVE.B      #CC_EQ,D6
000012FA  BC03                     569      CMP.B       D3,D6
000012FC  6700 116E                570      BEQ         MATCH_CC_EQ_16
00001300                           571  
00001300  1C3C 0008                572      MOVE.B      #CC_VC,D6
00001304  BC03                     573      CMP.B       D3,D6
00001306  6700 11E2                574      BEQ         MATCH_CC_VC_16
0000130A                           575  
0000130A  1C3C 0009                576      MOVE.B      #CC_VS,D6
0000130E  BC03                     577      CMP.B       D3,D6
00001310  6700 1256                578      BEQ         MATCH_CC_VS_16
00001314                           579  
00001314  1C3C 000A                580      MOVE.B      #CC_PL,D6
00001318  BC03                     581      CMP.B       D3,D6
0000131A  6700 12CA                582      BEQ         MATCH_CC_PL_16
0000131E                           583  
0000131E  1C3C 000B                584      MOVE.B      #CC_MI,D6
00001322  BC03                     585      CMP.B       D3,D6
00001324  6700 133E                586      BEQ         MATCH_CC_MI_16
00001328                           587  
00001328  1C3C 000C                588      MOVE.B      #CC_GE,D6
0000132C  BC03                     589      CMP.B       D3,D6
0000132E  6700 13B2                590      BEQ         MATCH_CC_GE_16
00001332                           591  
00001332  1C3C 000D                592      MOVE.B      #CC_LT,D6
00001336  BC03                     593      CMP.B       D3,D6
00001338  6700 1426                594      BEQ         MATCH_CC_LT_16
0000133C                           595  
0000133C  1C3C 000E                596      MOVE.B      #CC_GT,D6
00001340  BC03                     597      CMP.B       D3,D6
00001342  6700 149A                598      BEQ         MATCH_CC_GT_16
00001346                           599  
00001346  1C3C 000F                600      MOVE.B      #CC_LE,D6
0000134A  BC03                     601      CMP.B       D3,D6
0000134C  6700 150E                602      BEQ         MATCH_CC_LE_16
00001350                           603  
00001350  6000 155E                604      BRA         ERROR
00001354                           605  
00001354                           606  
00001354                           607  CHECK_BCC_32
00001354                           608  
00001354  6100 00A6                609      BSR         ISOLATE_CC_CODE_FOR_BCC
00001358                           610  
00001358  1C3C 0000                611      MOVE.B      #CC_T,D6
0000135C  BC03                     612      CMP.B       D3,D6
0000135E  6700 0E7C                613      BEQ         MATCH_CC_T_32
00001362                           614  
00001362  1C3C 0001                615      MOVE.B      #CC_F,D6
00001366  BC03                     616      CMP.B       D3,D6
00001368  6700 0E78                617      BEQ         MATCH_CC_F_32
0000136C                           618  
0000136C  1C3C 0002                619      MOVE.B      #CC_HI,D6
00001370  BC03                     620      CMP.B       D3,D6
00001372  6700 0EB0                621      BEQ         MATCH_CC_HI_32
00001376                           622  
00001376  1C3C 0003                623      MOVE.B      #CC_LS,D6
0000137A  BC03                     624      CMP.B       D3,D6
0000137C  6700 0F20                625      BEQ         MATCH_CC_LS_32
00001380                           626  
00001380  1C3C 0004                627      MOVE.B      #CC_CC,D6
00001384  BC03                     628      CMP.B       D3,D6
00001386  6700 0F94                629      BEQ         MATCH_CC_CC_32
0000138A                           630  
0000138A  1C3C 0005                631      MOVE.B      #CC_CS,D6
0000138E  BC03                     632      CMP.B       D3,D6
00001390  6700 1008                633      BEQ         MATCH_CC_CS_32
00001394                           634  
00001394  1C3C 0006                635      MOVE.B      #CC_NE,D6
00001398  BC03                     636      CMP.B       D3,D6
0000139A  6700 107C                637      BEQ         MATCH_CC_NE_32
0000139E                           638  
0000139E  1C3C 0007                639      MOVE.B      #CC_EQ,D6
000013A2  BC03                     640      CMP.B       D3,D6
000013A4  6700 10F0                641      BEQ         MATCH_CC_EQ_32
000013A8                           642  
000013A8  1C3C 0008                643      MOVE.B      #CC_VC,D6
000013AC  BC03                     644      CMP.B       D3,D6
000013AE  6700 1164                645      BEQ         MATCH_CC_VC_32
000013B2                           646  
000013B2  1C3C 0009                647      MOVE.B      #CC_VS,D6
000013B6  BC03                     648      CMP.B       D3,D6
000013B8  6700 11D8                649      BEQ         MATCH_CC_VS_32
000013BC                           650  
000013BC  1C3C 000A                651      MOVE.B      #CC_PL,D6
000013C0  BC03                     652      CMP.B       D3,D6
000013C2  6700 124C                653      BEQ         MATCH_CC_PL_32
000013C6                           654  
000013C6  1C3C 000B                655      MOVE.B      #CC_MI,D6
000013CA  BC03                     656      CMP.B       D3,D6
000013CC  6700 12C0                657      BEQ         MATCH_CC_MI_32
000013D0                           658  
000013D0  1C3C 000C                659      MOVE.B      #CC_GE,D6
000013D4  BC03                     660      CMP.B       D3,D6
000013D6  6700 1334                661      BEQ         MATCH_CC_GE_32
000013DA                           662  
000013DA  1C3C 000D                663      MOVE.B      #CC_LT,D6
000013DE  BC03                     664      CMP.B       D3,D6
000013E0  6700 13A8                665      BEQ         MATCH_CC_LT_32
000013E4                           666  
000013E4  1C3C 000E                667      MOVE.B      #CC_GT,D6
000013E8  BC03                     668      CMP.B       D3,D6
000013EA  6700 141C                669      BEQ         MATCH_CC_GT_32
000013EE                           670  
000013EE  1C3C 000F                671      MOVE.B      #CC_LE,D6
000013F2  BC03                     672      CMP.B       D3,D6
000013F4  6700 1490                673      BEQ         MATCH_CC_LE_32
000013F8                           674  
000013F8  6000 14B6                675      BRA         ERROR
000013FC                           676  
000013FC                           677  ISOLATE_CC_CODE_FOR_BCC
000013FC                           678  
000013FC  48A7 2000                679      MOVEM.W     D2, -(SP)
00001400                           680  
00001400  E94A                     681      LSL.W       #4,D2
00001402  1E3C 000C                682      MOVE.B      #12,D7
00001406  EE6A                     683      LSR.W       D7,D2
00001408                           684  
00001408  1602                     685      MOVE.B      D2,D3
0000140A                           686  
0000140A  4C9F 0004                687      MOVEM.W     (SP)+,D2
0000140E  4E75                     688      RTS
00001410                           689  CHECK_CMP
00001410                           690  
00001410  6100 0232                691      BSR         ISOLATE_OP_CODE
00001414                           692  
00001414  1C3C 0000                693      MOVE.B      #CMP_B,D6
00001418  BC03                     694      CMP.B       D3,D6
0000141A  6700 159C                695      BEQ         MATCH_CMP_B
0000141E                           696  
0000141E  1C3C 0001                697      MOVE.B      #CMP_W,D6
00001422  BC03                     698      CMP.B       D3,D6
00001424  6700 15AA                699      BEQ         MATCH_CMP_W
00001428                           700  
00001428  1C3C 0002                701      MOVE.B      #CMP_L,D6
0000142C  BC03                     702      CMP.B       D3,D6
0000142E  6700 15B8                703      BEQ         MATCH_CMP_L
00001432                           704  
00001432  6000 147C                705      BRA         ERROR
00001436                           706  CHECK_MULS_LEA_CLR_JSR_RTS
00001436                           707  
00001436  3C3C 4E75                708      MOVE.W      #RTS,D6
0000143A  BC42                     709      CMP.W       D2,D6
0000143C  6700 156C                710      BEQ         MATCH_RTS
00001440                           711  
00001440  6100 0202                712      BSR         ISOLATE_OP_CODE
00001444                           713  
00001444  1C3C 0007                714      MOVE.B      #LEA,D6
00001448  BC03                     715      CMP.B       D3,D6
0000144A  6700 172E                716      BEQ         MATCH_LEA
0000144E                           717  
0000144E  6100 FCBA                718      BSR         ReadFirstTenBits
00001452                           719  
00001452  3C3C 013A                720      MOVE.W      #JSR,D6
00001456  BC43                     721      CMP.W       D3,D6
00001458  6700 15CE                722      BEQ         MATCH_JSR
0000145C                           723  
0000145C  3C3C 0108                724      MOVE.W      #CLR_B,D6
00001460  BC43                     725      CMP.W       D3,D6
00001462  6700 15E2                726      BEQ         MATCH_CLR_B
00001466                           727  
00001466  3C3C 0109                728      MOVE.W      #CLR_W,D6
0000146A  BC43                     729      CMP.W       D3,D6
0000146C  6700 15F0                730      BEQ         MATCH_CLR_W
00001470                           731  
00001470  3C3C 010A                732      MOVE.W      #CLR_L,D6
00001474  BC43                     733      CMP.W       D3,D6
00001476  6700 15FE                734      BEQ         MATCH_CLR_L
0000147A                           735  
0000147A  3C3C 0130                736      MOVE.W      #MULS_L,D6  * Shouldn't need to check for the rest of the opcode..?
0000147E  BC43                     737      CMP.W       D3,D6
00001480  6700 01EA                738      BEQ         MATCH_MULS_L
00001484                           739      
00001484  6000 009E                740      BRA         CHECK_MOVEM
00001488                           741  
00001488                           742  CHECK_MULS_W_AND
00001488                           743  
00001488  6100 01BA                744      BSR         ISOLATE_OP_CODE
0000148C                           745  
0000148C  1C3C 0007                746      MOVE.B      #MULS_OP_W,D6
00001490  BC03                     747      CMP.B       D3,D6
00001492  6700 14D8                748      BEQ         MATCH_MULS_W
00001496                           749  
00001496  1C3C 0000                750      MOVE.B      #DN_B,D6
0000149A  BC03                     751      CMP.B       D3,D6
0000149C  6700 1600                752      BEQ         MATCH_AND_DN_B
000014A0                           753  
000014A0  1C3C 0001                754      MOVE.B      #DN_W,D6
000014A4  BC03                     755      CMP.B       D3,D6
000014A6  6700 160E                756      BEQ         MATCH_AND_DN_W
000014AA                           757  
000014AA  1C3C 0002                758      MOVE.B      #DN_L,D6
000014AE  BC03                     759      CMP.B       D3,D6
000014B0  6700 161C                760      BEQ         MATCH_AND_DN_L
000014B4                           761  
000014B4  1C3C 0004                762      MOVE.B      #EA_B,D6
000014B8  BC03                     763      CMP.B       D3,D6
000014BA  6700 1650                764      BEQ         MATCH_AND_EA_B
000014BE                           765  
000014BE  1C3C 0005                766      MOVE.B      #EA_W,D6
000014C2  BC03                     767      CMP.B       D3,D6
000014C4  6700 165E                768      BEQ         MATCH_AND_EA_W
000014C8                           769  
000014C8  1C3C 0006                770      MOVE.B      #EA_L,D6
000014CC  BC03                     771      CMP.B       D3,D6
000014CE  6700 166C                772      BEQ         MATCH_AND_EA_L
000014D2                           773  
000014D2  6000 13DC                774      BRA         ERROR
000014D6                           775  
000014D6                           776  CHECK_DIVU_OR
000014D6                           777  
000014D6  6100 016C                778      BSR         ISOLATE_OP_CODE
000014DA                           779  
000014DA  1C3C 0003                780      MOVE.B      #DIVU,D6
000014DE  BC03                     781      CMP.B       D3,D6
000014E0  6700 05E4                782      BEQ         MATCH_DIVU
000014E4                           783  
000014E4  1C3C 0000                784      MOVE.B      #DN_B,D6
000014E8  BC03                     785      CMP.B       D3,D6
000014EA  6700 16C6                786      BEQ         MATCH_OR_DN_B
000014EE                           787  
000014EE  1C3C 0001                788      MOVE.B      #DN_W,D6
000014F2  BC03                     789      CMP.B       D3,D6
000014F4  6700 16D4                790      BEQ         MATCH_OR_DN_W
000014F8                           791  
000014F8  1C3C 0002                792      MOVE.B      #DN_L,D6
000014FC  BC03                     793      CMP.B       D3,D6
000014FE  6700 16E2                794      BEQ         MATCH_OR_DN_L
00001502                           795  
00001502  1C3C 0004                796      MOVE.B      #EA_B,D6
00001506  BC03                     797      CMP.B       D3,D6
00001508  6700 1716                798      BEQ         MATCH_OR_EA_B
0000150C                           799  
0000150C  1C3C 0005                800      MOVE.B      #EA_W,D6
00001510  BC03                     801      CMP.B       D3,D6
00001512  6700 1724                802      BEQ         MATCH_OR_EA_W
00001516                           803  
00001516  1C3C 0006                804      MOVE.B      #EA_L,D6
0000151A  BC03                     805      CMP.B       D3,D6
0000151C  6700 1732                806      BEQ         MATCH_OR_EA_L
00001520                           807  
00001520  6000 138E                808      BRA         ERROR
00001524                           809  
00001524                           810  CHECK_MOVEM
00001524                           811  
00001524  6100 FBE4                812      BSR         ReadFirstTenBits
00001528                           813  
00001528  3C3C 0122                814      MOVE.W      #MOVEM_TO_MEM_W,D6
0000152C  BC43                     815      CMP.W       D3,D6
0000152E  6700 05D4                816      BEQ         MATCH_MOVEM_TO_MEM_W
00001532                           817  
00001532  3C3C 0123                818      MOVE.W      #MOVEM_TO_MEM_L,D6
00001536  BC43                     819      CMP.W       D3,D6
00001538  6700 05E2                820      BEQ         MATCH_MOVEM_TO_MEM_L
0000153C                           821  
0000153C  3C3C 0132                822      MOVE.W      #MOVEM_TO_REG_W,D6
00001540  BC43                     823      CMP.W       D3,D6
00001542  6700 060E                824      BEQ         MATCH_MOVEM_TO_REG_W
00001546                           825  
00001546  3C3C 0133                826      MOVE.W      #MOVEM_TO_REG_L,D6
0000154A  BC43                     827      CMP.W       D3,D6
0000154C  6700 061C                828      BEQ         MATCH_MOVEM_TO_REG_L
00001550                           829  
00001550  6000 135E                830      BRA         ERROR
00001554                           831  CHECK_ADD_ADDA
00001554                           832  
00001554  6100 00EE                833      BSR         ISOLATE_OP_CODE
00001558                           834  
00001558  3C3C 0000                835      MOVE.W      #DN_B,D6
0000155C  BC43                     836      CMP.W       D3,D6
0000155E  6700 036E                837      BEQ         MATCH_ADD_TO_REG_B
00001562                           838  
00001562  3C3C 0001                839      MOVE.W      #DN_W,D6
00001566  BC43                     840      CMP.W       D3,D6
00001568  6700 037C                841      BEQ         MATCH_ADD_TO_REG_W
0000156C                           842  
0000156C  3C3C 0002                843      MOVE.W      #DN_L,D6
00001570  BC43                     844      CMP.W       D3,D6
00001572  6700 038A                845      BEQ         MATCH_ADD_TO_REG_L
00001576                           846  
00001576  3C3C 0004                847      MOVE.W      #EA_B,D6
0000157A  BC43                     848      CMP.W       D3,D6
0000157C  6700 040A                849      BEQ         MATCH_ADD_TO_EA_B
00001580                           850  
00001580  3C3C 0005                851      MOVE.W      #EA_W,D6
00001584  BC43                     852      CMP.W       D3,D6
00001586  6700 0418                853      BEQ         MATCH_ADD_TO_EA_W
0000158A                           854  
0000158A  3C3C 0006                855      MOVE.W      #EA_L,D6
0000158E  BC43                     856      CMP.W       D3,D6
00001590  6700 0426                857      BEQ         MATCH_ADD_TO_EA_L
00001594                           858  
00001594  3C3C 0003                859      MOVE.W      #ADDA_W,D6
00001598  BC43                     860      CMP.W       D3,D6
0000159A  6700 1376                861      BEQ         MATCH_ADDA_W
0000159E                           862  
0000159E  3C3C 0007                863      MOVE.W      #ADDA_L,D6
000015A2  BC43                     864      CMP.W       D3,D6
000015A4  6700 1384                865      BEQ         MATCH_ADDA_L
000015A8                           866  
000015A8  4E75                     867      RTS ** Change later?
000015AA                           868  CHECK_ADDQ
000015AA                           869  
000015AA  6100 0098                870      BSR         ISOLATE_OP_CODE
000015AE                           871  
000015AE  3C3C 0000                872      MOVE.W      #ADDQ_B,D6
000015B2  BC43                     873      CMP.W       D3,D6
000015B4  6700 048C                874      BEQ         MATCH_ADDQ_B
000015B8                           875  
000015B8  3C3C 0001                876      MOVE.W      #ADDQ_W,D6
000015BC  BC43                     877      CMP.W       D3,D6
000015BE  6700 049A                878      BEQ         MATCH_ADDQ_W
000015C2                           879  
000015C2  3C3C 0002                880      MOVE.W      #ADDQ_L,D6
000015C6  BC43                     881      CMP.W       D3,D6
000015C8  6700 04A8                882      BEQ         MATCH_ADDQ_L
000015CC                           883  
000015CC                           884  CHECK_ADDI
000015CC                           885  
000015CC  6100 FB3C                886      BSR         ReadFirstTenBits
000015D0                           887  
000015D0  3C3C 0018                888      MOVE.W      #ADDI_B,D6
000015D4  BC43                     889      CMP.W       D3,D6
000015D6  6700 0288                890      BEQ         MATCH_ADDI_B
000015DA                           891  
000015DA  3C3C 0019                892      MOVE.W      #ADDI_W,D6
000015DE  BC43                     893      CMP.W       D3,D6
000015E0  6700 0296                894      BEQ         MATCH_ADDI_W
000015E4                           895  
000015E4  3C3C 001A                896      MOVE.W      #ADDI_L,D6
000015E8  BC43                     897      CMP.W       D3,D6
000015EA  6700 02A4                898      BEQ         MATCH_ADDI_L
000015EE                           899  
000015EE  6000 FAFE                900      BRA         ADDI_RETURN
000015F2                           901  CHECK_SUB
000015F2                           902  
000015F2  6100 0050                903      BSR         ISOLATE_OP_CODE
000015F6                           904  
000015F6  3C3C 0000                905      MOVE.W      #DN_B,D6
000015FA  BC43                     906      CMP.W       D3,D6
000015FC  6700 0318                907      BEQ         MATCH_SUB_TO_DN_B
00001600                           908  
00001600  3C3C 0001                909      MOVE.W      #DN_W,D6
00001604  BC43                     910      CMP.W       D3,D6
00001606  6700 0326                911      BEQ         MATCH_SUB_TO_DN_W
0000160A                           912  
0000160A  3C3C 0002                913      MOVE.W      #DN_L,D6
0000160E  BC43                     914      CMP.W       D3,D6
00001610  6700 0334                915      BEQ         MATCH_SUB_TO_DN_L
00001614                           916  
00001614  3C3C 0004                917      MOVE.W      #EA_B,D6
00001618  BC43                     918      CMP.W       D3,D6
0000161A  6700 03B4                919      BEQ         MATCH_SUB_TO_EA_B
0000161E                           920  
0000161E  3C3C 0005                921      MOVE.W      #EA_W,D6
00001622  BC43                     922      CMP.W       D3,D6
00001624  6700 03C2                923      BEQ         MATCH_SUB_TO_EA_W
00001628                           924  
00001628  3C3C 0006                925      MOVE.W      #EA_L,D6
0000162C  BC43                     926      CMP.W       D3,D6
0000162E  6700 03D0                927      BEQ         MATCH_SUB_TO_EA_L
00001632                           928  CHECK_MOVEA_W_AND_MOVE_W
00001632                           929  
00001632  6100 0010                930      BSR         ISOLATE_OP_CODE
00001636                           931  
00001636  1C3C 0001                932      MOVE.B      #MOVEA_WL,D6
0000163A  BC03                     933      CMP.B       D3,D6
0000163C  6700 127E                934      BEQ         MATCH_MOVEA_W
00001640                           935  
00001640  6000 0186                936      BRA         MATCH_MOVE_W
00001644                           937  ISOLATE_OP_CODE
00001644                           938  
00001644  48A7 2000                939      MOVEM.W     D2, -(SP)
00001648                           940  
00001648  1E3C 0007                941      MOVE.B      #7,D7
0000164C  EF6A                     942      LSL.W       D7,D2
0000164E  1E3C 000D                943      MOVE.B      #13,D7
00001652  EE6A                     944      LSR.W       D7,D2
00001654  1602                     945      MOVE.B      D2,D3
00001656                           946  
00001656  4C9F 0004                947      MOVEM.W     (SP)+,D2
0000165A  4E75                     948      RTS
0000165C                           949  CHECK_MOVEA_L_AND_MOVE_L
0000165C                           950  
0000165C  61E6                     951      BSR         ISOLATE_OP_CODE
0000165E                           952  
0000165E  1C3C 0001                953      MOVE.B      #MOVEA_WL,D6
00001662  BC03                     954      CMP.B       D3,D6
00001664  6700 126E                955      BEQ         MATCH_MOVEA_L
00001668                           956  
00001668  6000 0176                957      BRA         MATCH_MOVE_L
0000166C                           958  
0000166C                           959  
0000166C                           960  
0000166C                           961  
0000166C                           962  MATCH_MULS_L
0000166C  3A02                     963      MOVE.W      D2,D5       *REMOVE
0000166E                           964  
0000166E                           965  
0000166E                           966                  INCLUDE 'EADecoder.x68'
0000166E                           967  
0000166E                           968  
0000166E  =00010000                969  output      EQU $00010000
0000166E                           970  
0000166E  =0000003C                971  IMMEDIATE   EQU %00111100
0000166E  =00000038                972  ABS_WORD    EQU %00111000
0000166E  =00000039                973  ABS_LONG    EQU %00111001
0000166E  =00000000                974  Dn          EQU %00000000
0000166E  =00000008                975  An          EQU %00001000
0000166E  =00000010                976  INDIRECT    EQU %00010000
0000166E  =00000018                977  POST_INC    EQU %00011000
0000166E  =00000020                978  PRE_DEC     EQU %00100000
0000166E                           979  
0000166E                           980  
0000166E                           981  
0000166E                           982  EADecoder_left
0000166E  48E7 FF7E                983          MOVEM.L     D0-D7/A1-A6, -(SP)
00001672                           984          
00001672                           985          ** Swap the mode and register bits
00001672  1800                     986          MOVE.B  D0,D4
00001674  0200 0007                987          ANDI.B  #%00000111,D0       * Mask mode
00001678  0204 0038                988          ANDI.B  #%00111000,D4       * Mask register
0000167C  E708                     989          LSL.B   #3,D0               * Move mode bits over
0000167E  E60C                     990          LSR.B   #3,D4               * Move register bits over
00001680  8004                     991          OR.B    D4,D0               * Recombine
00001682                           992          
00001682  6000 0006                993          BRA     left_skip
00001686                           994  
00001686                           995  EADecoder
00001686  48E7 FF7E                996          MOVEM.L     D0-D7/A1-A6, -(SP) *Store registers on stack, except D0
0000168A                           997  left_skip   
0000168A  4242                     998          CLR     D2    
0000168C  4243                     999          CLR     D3 
0000168E  1401                    1000          MOVE.B  D1,D2 ** Store opcode size in bytes into D2
00001690                          1001          
00001690  43F9 00010000           1002          LEA     output,A1
00001696  45F9 00010000           1003          LEA     output,A2
0000169C                          1004          
0000169C                          1005          *First, decoder will check for the 3 types with hard coded register values
0000169C  163C 0001               1006          MOVE.B  #1,D3
000016A0  B07C 003C               1007          CMP     #IMMEDIATE,D0
000016A4  6700 0068               1008          BEQ     dec_immediate
000016A8                          1009          
000016A8  B07C 0038               1010          CMP     #ABS_WORD,D0
000016AC  6700 007C               1011          BEQ     dec_abs_word
000016B0                          1012          
000016B0  B07C 0039               1013          CMP     #ABS_LONG,D0
000016B4  6700 0080               1014          BEQ     dec_abs_long
000016B8                          1015          
000016B8                          1016          *If it was none of the above, store the register and mode seperately
000016B8  4243                    1017          CLR     D3
000016BA  1200                    1018          MOVE.B  D0,D1
000016BC  0201 0038               1019          ANDI.B  #%00111000,D1           *Get mode value
000016C0  0200 0007               1020          ANDI.B  #%00000111,D0           *Get register value
000016C4  0600 0030               1021          ADDI.B  #$30,D0
000016C8                          1022                
000016C8  B27C 0000               1023          CMP     #Dn,D1
000016CC  6700 0074               1024          BEQ     dec_Dn 
000016D0                          1025          
000016D0  B27C 0008               1026          CMP     #An,D1
000016D4  6700 0078               1027          BEQ     dec_An
000016D8                          1028                  
000016D8  B27C 0010               1029          CMP     #INDIRECT,D1
000016DC  6700 007C               1030          BEQ     dec_indirect
000016E0                          1031                  
000016E0  B27C 0018               1032          CMP     #POST_INC,D1
000016E4  6700 0088               1033          BEQ     dec_post_inc
000016E8                          1034                  
000016E8  B27C 0020               1035          CMP     #PRE_DEC,D1
000016EC  6700 009A               1036          BEQ     dec_pre_dec
000016F0                          1037  
000016F0                          1038  dec_return ** Common return for all types
000016F0                          1039          
000016F0                          1040          ** Print display string
000016F0  103C 000E               1041          MOVE.B  #14,D0
000016F4  4E4F                    1042          TRAP    #15
000016F6                          1043          
000016F6                          1044          ** If there is immediate data to print, print it
000016F6  B67C 0001               1045          CMP     #1,D3
000016FA  6600 000C               1046          BNE     imm_skip
000016FE                          1047          
000016FE  103C 000F               1048          MOVE.B  #15,D0
00001702  143C 0010               1049          MOVE.B  #16,D2
00001706  4E4F                    1050          TRAP    #15
00001708                          1051  
00001708                          1052  imm_skip
00001708  4CDF 7EFF               1053          MOVEM.L     (SP)+, D0-D7/A1-A6 *Return register data from stack, except D0
0000170C  4E75                    1054          RTS
0000170E                          1055          
0000170E                          1056          * Individual EA decoders *
0000170E                          1057  
0000170E                          1058  dec_immediate   *DECODE IMMEDIATE VALUE*
0000170E  14FC 0023               1059          MOVE.B  #'#',(A2)+  * Move '#' char into string
00001712  14FC 0024               1060          MOVE.B  #'$',(A2)+  * Move '$' char into string
00001716  14FC 0000               1061          MOVE.B  #$0,(A2)+   * Null terminate string
0000171A  B47C 0002               1062          CMP     #2,D2       * Check if data is word length
0000171E  6700 0006               1063          BEQ     imm_word    
00001722                          1064          
00001722  2218                    1065          MOVE.L  (A0)+,D1    * Length was long
00001724  60CA                    1066          BRA     dec_return
00001726                          1067          
00001726                          1068  imm_word
00001726  3218                    1069          MOVE.W  (A0)+,D1    * Length was word
00001728  60C6                    1070          BRA     dec_return
0000172A                          1071  
0000172A                          1072  
0000172A                          1073  dec_abs_word    *DECODE ABSOLUTE WORD*
0000172A  14FC 0024               1074          MOVE.B  #'$',(A2)+  * Move '$' char into string
0000172E  14FC 0000               1075          MOVE.B  #$0,(A2)+   * Null terminate string
00001732  3218                    1076          MOVE.W  (A0)+,D1
00001734  60BA                    1077          BRA     dec_return
00001736                          1078          
00001736                          1079  
00001736                          1080  dec_abs_long    *DECODE ABSOLUTE LONG*
00001736  14FC 0024               1081          MOVE.B  #'$',(A2)+  * Move '$' char into string
0000173A  14FC 0000               1082          MOVE.B  #$0,(A2)+   * Null terminate string
0000173E  2218                    1083          MOVE.L  (A0)+,D1
00001740  60AE                    1084          BRA     dec_return
00001742                          1085          
00001742                          1086  
00001742                          1087  dec_Dn          *DECODE DIRECT DATA*
00001742  14FC 0044               1088          MOVE.B  #'D',(A2)+
00001746  14C0                    1089          MOVE.B  D0,(A2)+
00001748  14FC 0000               1090          MOVE.B  #$0,(A2)+
0000174C  60A2                    1091          BRA     dec_return
0000174E                          1092  
0000174E                          1093          
0000174E                          1094  dec_An          *DECODE DIRECT ADDRESS*
0000174E  14FC 0041               1095          MOVE.B  #'A',(A2)+
00001752  14C0                    1096          MOVE.B  D0,(A2)+
00001754  14FC 0000               1097          MOVE.B  #$0,(A2)+
00001758  6096                    1098          BRA     dec_return
0000175A                          1099  
0000175A                          1100  
0000175A                          1101  dec_indirect    *DECODE INDIRECT ACCESS*
0000175A  14FC 0028               1102          MOVE.B  #'(',(A2)+
0000175E  14FC 0041               1103          MOVE.B  #'A',(A2)+
00001762  14C0                    1104          MOVE.B  D0,(A2)+
00001764  14FC 0029               1105          MOVE.B  #')',(A2)+
00001768  14FC 0000               1106          MOVE.B  #$0,(A2)+
0000176C  6082                    1107          BRA     dec_return
0000176E                          1108          
0000176E                          1109  
0000176E                          1110  dec_post_inc    *DECODE INDIRECT POST INCREMENT*
0000176E  14FC 0028               1111          MOVE.B  #'(',(A2)+
00001772  14FC 0041               1112          MOVE.B  #'A',(A2)+
00001776  14C0                    1113          MOVE.B  D0,(A2)+
00001778  14FC 0029               1114          MOVE.B  #')',(A2)+
0000177C  14FC 002B               1115          MOVE.B  #'+',(A2)+
00001780  14FC 0000               1116          MOVE.B  #$0,(A2)+
00001784  6000 FF6A               1117          BRA     dec_return
00001788                          1118          
00001788                          1119          
00001788                          1120  dec_pre_dec    *DECODE INDIRECT PRE DECREMENT*
00001788  14FC 002D               1121          MOVE.B  #'-',(A2)+
0000178C  14FC 0028               1122          MOVE.B  #'(',(A2)+
00001790  14FC 0041               1123          MOVE.B  #'A',(A2)+
00001794  14C0                    1124          MOVE.B  D0,(A2)+
00001796  14FC 0029               1125          MOVE.B  #')',(A2)+
0000179A  14FC 0000               1126          MOVE.B  #$0,(A2)+
0000179E  6000 FF50               1127          BRA     dec_return
000017A2                          1128  
000017A2                          1129  
000017A2                          1130  
000017A2                          1131  
000017A2                          1132  
000017A2                          1133  
000017A2                          1134  
000017A2                          1135  
000017A2                          1136  
000017A2                          1137  -------------------- end include --------------------
000017A2                          1138                  INCLUDE 'connor_opcodes.x68'
000017A2                          1139  
000017A2                          1140  
000017A2                          1141  MATCH_NOP
000017A2  43F8 0028               1142      LEA         pr_NOP,A1
000017A6  103C 000E               1143      MOVE.B      #14,D0
000017AA  4E4F                    1144      TRAP        #15
000017AC  6000 F944               1145      BRA         opdec_return
000017B0                          1146  
000017B0                          1147  
000017B0                          1148  MATCH_MOVE_B
000017B0                          1149      ** Move command size into D1
000017B0  123C 0002               1150      MOVE.B      #2,D1
000017B4                          1151      ** Print command
000017B4  103C 000E               1152      MOVE.B      #14,D0
000017B8  43F8 002C               1153      LEA         pr_MOVE,A1
000017BC  4E4F                    1154      TRAP        #15
000017BE                          1155      ** Print size
000017BE  43F8 0016               1156      LEA         pr_BYTE,A1
000017C2  4E4F                    1157      TRAP        #15
000017C4                          1158  
000017C4  6000 0032               1159      BRA         print_move
000017C8                          1160  
000017C8                          1161  MATCH_MOVE_W
000017C8                          1162      ** Move command size into D1
000017C8  123C 0002               1163      MOVE.B      #2,D1
000017CC                          1164      ** Print command
000017CC  103C 000E               1165      MOVE.B      #14,D0
000017D0  43F8 002C               1166      LEA         pr_MOVE,A1
000017D4  4E4F                    1167      TRAP        #15
000017D6                          1168      ** Print size
000017D6  43F8 0019               1169      LEA         pr_WORD,A1
000017DA  4E4F                    1170      TRAP        #15
000017DC                          1171  
000017DC  6000 001A               1172      BRA         print_move
000017E0                          1173  
000017E0                          1174  MATCH_MOVE_L
000017E0                          1175      ** Move command size into D1
000017E0  123C 0004               1176      MOVE.B      #4,D1
000017E4                          1177      ** Print command
000017E4  103C 000E               1178      MOVE.B      #14,D0
000017E8  43F8 002C               1179      LEA         pr_MOVE,A1
000017EC  4E4F                    1180      TRAP        #15
000017EE                          1181      ** Print size
000017EE  43F8 001C               1182      LEA         pr_LONG,A1
000017F2  4E4F                    1183      TRAP        #15
000017F4                          1184  
000017F4  6000 0002               1185      BRA         print_move
000017F8                          1186  
000017F8                          1187  print_move
000017F8                          1188      ** Print space
000017F8  43F8 0000               1189      LEA         pr_space,A1
000017FC  4E4F                    1190      TRAP        #15
000017FE                          1191      ** Decode right side ea
000017FE  1002                    1192      MOVE.B      D2,D0
00001800  0200 003F               1193      ANDI.B      #%00111111,D0
00001804  4EB8 1686               1194      JSR         EADecoder
00001808                          1195      ** Add comma
00001808  103C 000E               1196      MOVE.B      #14,D0
0000180C  43F8 0014               1197      LEA         pr_comma,A1
00001810  4E4F                    1198      TRAP        #15
00001812                          1199      ** Decode left side ea
00001812  3002                    1200      MOVE.W      D2,D0
00001814  0240 0FC0               1201      ANDI.W      #%0000111111000000,D0
00001818  EC48                    1202      LSR.W       #6,D0
0000181A  4EB8 166E               1203      JSR         EADecoder_left
0000181E                          1204  
0000181E  6000 F8D2               1205      BRA         opdec_return
00001822                          1206  
00001822                          1207  
00001822                          1208  MATCH_MOVEQ
00001822                          1209      ** Print command
00001822  103C 000E               1210      MOVE.B      #14,D0
00001826  43F8 0062               1211      LEA         pr_MOVEQ,A1
0000182A  4E4F                    1212      TRAP        #15
0000182C                          1213      ** Print space
0000182C  43F8 0000               1214      LEA         pr_space,A1
00001830  4E4F                    1215      TRAP        #15
00001832                          1216      ** Print hex tag
00001832  43F8 0021               1217      LEA         pr_hextag,A1
00001836  4E4F                    1218      TRAP        #15
00001838                          1219      ** Print data
00001838  1202                    1220      MOVE.B      D2,D1
0000183A  103C 000F               1221      MOVE.B      #15,D0
0000183E  2602                    1222      MOVE.L      D2,D3
00001840  7410                    1223      MOVE.L      #16,D2
00001842  4E4F                    1224      TRAP        #15
00001844  2403                    1225      MOVE.L      D3,D2
00001846                          1226      ** Add comma
00001846  103C 000E               1227      MOVE.B      #14,D0
0000184A  43F8 0014               1228      LEA         pr_comma,A1
0000184E  4E4F                    1229      TRAP        #15
00001850                          1230      ** Decode register
00001850  3002                    1231      MOVE.W      D2,D0
00001852  0240 0E00               1232      ANDI.W      #%0000111000000000,D0
00001856  EC48                    1233      LSR.W       #6,D0
00001858  4EB8 166E               1234      JSR         EADecoder_left
0000185C                          1235  
0000185C  6000 F894               1236      BRA         opdec_return
00001860                          1237  
00001860                          1238  
00001860                          1239  MATCH_ADDI_B
00001860                          1240      ** Move command size into D1
00001860  123C 0002               1241      MOVE.B      #2,D1
00001864                          1242      ** Print command
00001864  103C 000E               1243      MOVE.B      #14,D0
00001868  43F8 006C               1244      LEA         pr_ADDI,A1
0000186C  4E4F                    1245      TRAP        #15
0000186E                          1246      ** Print size
0000186E  43F8 0016               1247      LEA         pr_BYTE,A1
00001872  4E4F                    1248      TRAP        #15
00001874                          1249  
00001874  6000 0032               1250      BRA         print_addi
00001878                          1251  
00001878                          1252  MATCH_ADDI_W
00001878                          1253      ** Move command size into D1
00001878  123C 0002               1254      MOVE.B      #2,D1
0000187C                          1255      ** Print command
0000187C  103C 000E               1256      MOVE.B      #14,D0
00001880  43F8 006C               1257      LEA         pr_ADDI,A1
00001884  4E4F                    1258      TRAP        #15
00001886                          1259      ** Print size
00001886  43F8 0019               1260      LEA         pr_WORD,A1
0000188A  4E4F                    1261      TRAP        #15
0000188C                          1262  
0000188C  6000 001A               1263      BRA         print_addi
00001890                          1264  
00001890                          1265  MATCH_ADDI_L
00001890                          1266      ** Move command size into D1
00001890  123C 0004               1267      MOVE.B      #4,D1
00001894                          1268      ** Print command
00001894  103C 000E               1269      MOVE.B      #14,D0
00001898  43F8 006C               1270      LEA         pr_ADDI,A1
0000189C  4E4F                    1271      TRAP        #15
0000189E                          1272      ** Print size
0000189E  43F8 001C               1273      LEA         pr_LONG,A1
000018A2  4E4F                    1274      TRAP        #15
000018A4                          1275  
000018A4  6000 0002               1276      BRA         print_addi
000018A8                          1277  
000018A8                          1278  print_addi
000018A8                          1279      ** Print space
000018A8  43F8 0000               1280      LEA         pr_space,A1
000018AC  4E4F                    1281      TRAP        #15
000018AE                          1282      ** Print Immediate data
000018AE  103C 003C               1283      MOVE.B      #%00111100,D0
000018B2  4EB8 1686               1284      JSR         EADecoder
000018B6                          1285      ** Add comma
000018B6  103C 000E               1286      MOVE.B      #14,D0
000018BA  43F8 0014               1287      LEA         pr_comma,A1
000018BE  4E4F                    1288      TRAP        #15
000018C0                          1289      ** Decode right side ea
000018C0  1002                    1290      MOVE.B      D2,D0
000018C2  0200 003F               1291      ANDI.B      #%00111111,D0
000018C6  4EB8 1686               1292      JSR         EADecoder
000018CA                          1293  
000018CA  6000 F826               1294      BRA         opdec_return
000018CE                          1295  
000018CE                          1296  
000018CE                          1297  MATCH_ADD_TO_REG_B
000018CE                          1298      ** Move command size into D1
000018CE  123C 0002               1299      MOVE.B      #2,D1
000018D2                          1300      ** Print command
000018D2  103C 000E               1301      MOVE.B      #14,D0
000018D6  43F8 0068               1302      LEA         pr_ADD,A1
000018DA  4E4F                    1303      TRAP        #15
000018DC                          1304      ** Print size
000018DC  43F8 0016               1305      LEA         pr_BYTE,A1
000018E0  4E4F                    1306      TRAP        #15
000018E2                          1307  
000018E2  6000 007A               1308      BRA         print_add_to_reg
000018E6                          1309  
000018E6                          1310  MATCH_ADD_TO_REG_W
000018E6                          1311      ** Move command size into D1
000018E6  123C 0002               1312      MOVE.B      #2,D1
000018EA                          1313      ** Print command
000018EA  103C 000E               1314      MOVE.B      #14,D0
000018EE  43F8 0068               1315      LEA         pr_ADD,A1
000018F2  4E4F                    1316      TRAP        #15
000018F4                          1317      ** Print size
000018F4  43F8 0019               1318      LEA         pr_WORD,A1
000018F8  4E4F                    1319      TRAP        #15
000018FA                          1320  
000018FA  6000 0062               1321      BRA         print_add_to_reg
000018FE                          1322  
000018FE                          1323  MATCH_ADD_TO_REG_L
000018FE                          1324      ** Move command size into D1
000018FE  123C 0004               1325      MOVE.B      #4,D1
00001902                          1326      ** Print command
00001902  103C 000E               1327      MOVE.B      #14,D0
00001906  43F8 0068               1328      LEA         pr_ADD,A1
0000190A  4E4F                    1329      TRAP        #15
0000190C                          1330      ** Print size
0000190C  43F8 001C               1331      LEA         pr_LONG,A1
00001910  4E4F                    1332      TRAP        #15
00001912                          1333  
00001912  6000 004A               1334      BRA         print_add_to_reg
00001916                          1335  
00001916                          1336  MATCH_SUB_TO_DN_B
00001916                          1337      ** Move command size into D1
00001916  123C 0002               1338      MOVE.B      #2,D1
0000191A                          1339      ** Print command
0000191A  103C 000E               1340      MOVE.B      #14,D0
0000191E  43F8 0076               1341      LEA         pr_SUB,A1
00001922  4E4F                    1342      TRAP        #15
00001924                          1343      ** Print size
00001924  43F8 0016               1344      LEA         pr_BYTE,A1
00001928  4E4F                    1345      TRAP        #15
0000192A                          1346  
0000192A  6000 0032               1347      BRA         print_add_to_reg
0000192E                          1348  
0000192E                          1349  MATCH_SUB_TO_DN_W
0000192E                          1350      ** Move command size into D1
0000192E  123C 0002               1351      MOVE.B      #2,D1
00001932                          1352      ** Print command
00001932  103C 000E               1353      MOVE.B      #14,D0
00001936  43F8 0076               1354      LEA         pr_SUB,A1
0000193A  4E4F                    1355      TRAP        #15
0000193C                          1356      ** Print size
0000193C  43F8 0019               1357      LEA         pr_WORD,A1
00001940  4E4F                    1358      TRAP        #15
00001942                          1359  
00001942  6000 001A               1360      BRA         print_add_to_reg
00001946                          1361  
00001946                          1362  MATCH_SUB_TO_DN_L
00001946                          1363      ** Move command size into D1
00001946  123C 0004               1364      MOVE.B      #4,D1
0000194A                          1365      ** Print command
0000194A  103C 000E               1366      MOVE.B      #14,D0
0000194E  43F8 0076               1367      LEA         pr_SUB,A1
00001952  4E4F                    1368      TRAP        #15
00001954                          1369      ** Print size
00001954  43F8 001C               1370      LEA         pr_LONG,A1
00001958  4E4F                    1371      TRAP        #15
0000195A                          1372  
0000195A  6000 0002               1373      BRA         print_add_to_reg
0000195E                          1374  
0000195E                          1375  print_add_to_reg
0000195E                          1376      ** Print space
0000195E  43F8 0000               1377      LEA         pr_space,A1
00001962  4E4F                    1378      TRAP        #15
00001964                          1379      ** Print source
00001964  1002                    1380      MOVE.B      D2,D0
00001966  0200 003F               1381      ANDI.B      #%00111111,D0
0000196A  4EB8 1686               1382      JSR         EADecoder
0000196E                          1383      ** Add comma
0000196E  103C 000E               1384      MOVE.B      #14,D0
00001972  43F8 0014               1385      LEA         pr_comma,A1
00001976  4E4F                    1386      TRAP        #15
00001978                          1387      ** Print destination
00001978  3002                    1388      MOVE.W      D2,D0
0000197A  0240 0E00               1389      ANDI.W      #%0000111000000000,D0
0000197E  EC48                    1390      LSR.W       #6,D0
00001980  4EB8 166E               1391      JSR         EADecoder_left
00001984                          1392  
00001984  6000 F76C               1393      BRA         opdec_return
00001988                          1394  
00001988                          1395  MATCH_ADD_TO_EA_B
00001988                          1396      ** Move command size into D1
00001988  123C 0002               1397      MOVE.B      #2,D1
0000198C                          1398      ** Print command
0000198C  103C 000E               1399      MOVE.B      #14,D0
00001990  43F8 0068               1400      LEA         pr_ADD,A1
00001994  4E4F                    1401      TRAP        #15
00001996                          1402      ** Print size
00001996  43F8 0016               1403      LEA         pr_BYTE,A1
0000199A  4E4F                    1404      TRAP        #15
0000199C                          1405  
0000199C  6000 007A               1406      BRA         print_add_to_ea
000019A0                          1407  
000019A0                          1408  MATCH_ADD_TO_EA_W
000019A0                          1409      ** Move command size into D1
000019A0  123C 0002               1410      MOVE.B      #2,D1
000019A4                          1411      ** Print command
000019A4  103C 000E               1412      MOVE.B      #14,D0
000019A8  43F8 0068               1413      LEA         pr_ADD,A1
000019AC  4E4F                    1414      TRAP        #15
000019AE                          1415      ** Print size
000019AE  43F8 0019               1416      LEA         pr_WORD,A1
000019B2  4E4F                    1417      TRAP        #15
000019B4                          1418  
000019B4  6000 0062               1419      BRA         print_add_to_ea
000019B8                          1420  
000019B8                          1421  MATCH_ADD_TO_EA_L
000019B8                          1422      ** Move command size into D1
000019B8  123C 0004               1423      MOVE.B      #4,D1
000019BC                          1424      ** Print command
000019BC  103C 000E               1425      MOVE.B      #14,D0
000019C0  43F8 0068               1426      LEA         pr_ADD,A1
000019C4  4E4F                    1427      TRAP        #15
000019C6                          1428      ** Print size
000019C6  43F8 001C               1429      LEA         pr_LONG,A1
000019CA  4E4F                    1430      TRAP        #15
000019CC                          1431  
000019CC  6000 004A               1432      BRA         print_add_to_ea
000019D0                          1433  
000019D0                          1434  MATCH_SUB_TO_EA_B
000019D0                          1435      ** Move command size into D1
000019D0  123C 0002               1436      MOVE.B      #2,D1
000019D4                          1437      ** Print command
000019D4  103C 000E               1438      MOVE.B      #14,D0
000019D8  43F8 0076               1439      LEA         pr_SUB,A1
000019DC  4E4F                    1440      TRAP        #15
000019DE                          1441      ** Print size
000019DE  43F8 0016               1442      LEA         pr_BYTE,A1
000019E2  4E4F                    1443      TRAP        #15
000019E4                          1444  
000019E4  6000 0032               1445      BRA         print_add_to_ea
000019E8                          1446  
000019E8                          1447  MATCH_SUB_TO_EA_W
000019E8                          1448      ** Move command size into D1
000019E8  123C 0002               1449      MOVE.B      #2,D1
000019EC                          1450      ** Print command
000019EC  103C 000E               1451      MOVE.B      #14,D0
000019F0  43F8 0076               1452      LEA         pr_SUB,A1
000019F4  4E4F                    1453      TRAP        #15
000019F6                          1454      ** Print size
000019F6  43F8 0019               1455      LEA         pr_WORD,A1
000019FA  4E4F                    1456      TRAP        #15
000019FC                          1457  
000019FC  6000 001A               1458      BRA         print_add_to_ea
00001A00                          1459  
00001A00                          1460  MATCH_SUB_TO_EA_L
00001A00                          1461      ** Move command size into D1
00001A00  123C 0004               1462      MOVE.B      #4,D1
00001A04                          1463      ** Print command
00001A04  103C 000E               1464      MOVE.B      #14,D0
00001A08  43F8 0076               1465      LEA         pr_SUB,A1
00001A0C  4E4F                    1466      TRAP        #15
00001A0E                          1467      ** Print size
00001A0E  43F8 001C               1468      LEA         pr_LONG,A1
00001A12  4E4F                    1469      TRAP        #15
00001A14                          1470  
00001A14  6000 0002               1471      BRA         print_add_to_ea
00001A18                          1472  
00001A18                          1473  print_add_to_ea
00001A18                          1474      ** Print space
00001A18  43F8 0000               1475      LEA         pr_space,A1
00001A1C  4E4F                    1476      TRAP        #15
00001A1E                          1477      ** Print Source
00001A1E  3002                    1478      MOVE.W      D2,D0
00001A20  0240 0E00               1479      ANDI.W      #%0000111000000000,D0
00001A24  EC48                    1480      LSR.W       #6,D0
00001A26  4EB8 166E               1481      JSR         EADecoder_left
00001A2A                          1482      ** Add comma
00001A2A  103C 000E               1483      MOVE.B      #14,D0
00001A2E  43F8 0014               1484      LEA         pr_comma,A1
00001A32  4E4F                    1485      TRAP        #15
00001A34                          1486      ** Print source
00001A34  1002                    1487      MOVE.B      D2,D0
00001A36  0200 003F               1488      ANDI.B      #%00111111,D0
00001A3A  4EB8 1686               1489      JSR         EADecoder
00001A3E                          1490  
00001A3E  6000 F6B2               1491      BRA         opdec_return
00001A42                          1492  
00001A42                          1493  
00001A42                          1494  MATCH_ADDQ_B
00001A42                          1495      ** Move command size into D1
00001A42  123C 0002               1496      MOVE.B      #2,D1
00001A46                          1497      ** Print command
00001A46  103C 000E               1498      MOVE.B      #14,D0
00001A4A  43F8 0071               1499      LEA         pr_ADDQ,A1
00001A4E  4E4F                    1500      TRAP        #15
00001A50                          1501      ** Print size
00001A50  43F8 0016               1502      LEA         pr_BYTE,A1
00001A54  4E4F                    1503      TRAP        #15
00001A56                          1504  
00001A56  6000 0032               1505      BRA         print_addq
00001A5A                          1506  
00001A5A                          1507  MATCH_ADDQ_W
00001A5A                          1508      ** Move command size into D1
00001A5A  123C 0002               1509      MOVE.B      #2,D1
00001A5E                          1510      ** Print command
00001A5E  103C 000E               1511      MOVE.B      #14,D0
00001A62  43F8 0071               1512      LEA         pr_ADDQ,A1
00001A66  4E4F                    1513      TRAP        #15
00001A68                          1514      ** Print size
00001A68  43F8 0019               1515      LEA         pr_WORD,A1
00001A6C  4E4F                    1516      TRAP        #15
00001A6E                          1517  
00001A6E  6000 001A               1518      BRA         print_addq
00001A72                          1519  
00001A72                          1520  MATCH_ADDQ_L
00001A72                          1521      ** Move command size into D1
00001A72  123C 0004               1522      MOVE.B      #4,D1
00001A76                          1523      ** Print command
00001A76  103C 000E               1524      MOVE.B      #14,D0
00001A7A  43F8 0071               1525      LEA         pr_ADDQ,A1
00001A7E  4E4F                    1526      TRAP        #15
00001A80                          1527      ** Print size
00001A80  43F8 001C               1528      LEA         pr_LONG,A1
00001A84  4E4F                    1529      TRAP        #15
00001A86                          1530  
00001A86  6000 0002               1531      BRA         print_addq
00001A8A                          1532  
00001A8A                          1533  print_addq
00001A8A                          1534      ** Print space
00001A8A  43F8 0000               1535      LEA         pr_space,A1
00001A8E  4E4F                    1536      TRAP        #15
00001A90                          1537      ** Print hash
00001A90  43F8 001F               1538      LEA         pr_hash,A1
00001A94  4E4F                    1539      TRAP        #15
00001A96                          1540      ** Print Immediate data
00001A96  3602                    1541      MOVE.W      D2,D3 * Temporarily move op data
00001A98  3202                    1542      MOVE.W      D2,D1
00001A9A  0241 0E00               1543      ANDI.W      #%0000111000000000,D1
00001A9E  EC49                    1544      LSR.W       #6,D1
00001AA0  E649                    1545      LSR.W       #3,D1
00001AA2  143C 0010               1546      MOVE.B      #16,D2
00001AA6  303C 000F               1547      MOVE.W      #15,D0
00001AAA  4E4F                    1548      TRAP        #15
00001AAC                          1549  
00001AAC  3403                    1550      MOVE.W      D3,D2 * Move op data back
00001AAE                          1551  
00001AAE                          1552      ** Add comma
00001AAE  103C 000E               1553      MOVE.B      #14,D0
00001AB2  43F8 0014               1554      LEA         pr_comma,A1
00001AB6  4E4F                    1555      TRAP        #15
00001AB8                          1556      ** Decode right side ea
00001AB8  1002                    1557      MOVE.B      D2,D0
00001ABA  0200 003F               1558      ANDI.B      #%00111111,D0
00001ABE  4EB8 1686               1559      JSR         EADecoder
00001AC2                          1560  
00001AC2  6000 F62E               1561      BRA         opdec_return
00001AC6                          1562  
00001AC6                          1563  
00001AC6                          1564  MATCH_DIVU
00001AC6                          1565      ** Move command size into D1
00001AC6  123C 0002               1566      MOVE.B      #2,D1
00001ACA                          1567      ** Print command
00001ACA  103C 000E               1568      MOVE.B      #14,D0
00001ACE  43F8 007A               1569      LEA         pr_DIVU,A1
00001AD2  4E4F                    1570      TRAP        #15
00001AD4                          1571      ** Print size
00001AD4  43F8 0019               1572      LEA         pr_WORD,A1
00001AD8  4E4F                    1573      TRAP        #15
00001ADA                          1574      ** Print space
00001ADA  43F8 0000               1575      LEA         pr_space,A1
00001ADE  4E4F                    1576      TRAP        #15
00001AE0                          1577      ** Decode right side ea
00001AE0  1002                    1578      MOVE.B      D2,D0
00001AE2  0200 003F               1579      ANDI.B      #%00111111,D0
00001AE6  4EB8 1686               1580      JSR         EADecoder
00001AEA                          1581      ** Add comma
00001AEA  103C 000E               1582      MOVE.B      #14,D0
00001AEE  43F8 0014               1583      LEA         pr_comma,A1
00001AF2  4E4F                    1584      TRAP        #15
00001AF4                          1585      ** Decode left side ea
00001AF4  3002                    1586      MOVE.W      D2,D0
00001AF6  0240 0E00               1587      ANDI.W      #%0000111000000000,D0
00001AFA  EC88                    1588      LSR.L       #6,D0
00001AFC  4EB8 166E               1589      JSR         EADecoder_left
00001B00                          1590  
00001B00  6000 F5F0               1591      BRA         opdec_return
00001B04                          1592  
00001B04                          1593  
00001B04                          1594  
00001B04                          1595  MATCH_MOVEM_TO_MEM_W
00001B04                          1596      ** Move command size into D1
00001B04  123C 0002               1597      MOVE.B      #2,D1
00001B08                          1598      ** Print command
00001B08  103C 000E               1599      MOVE.B      #14,D0
00001B0C  43F8 0037               1600      LEA         pr_MOVEM,A1
00001B10  4E4F                    1601      TRAP        #15
00001B12                          1602      ** Print size
00001B12  43F8 0019               1603      LEA         pr_WORD,A1
00001B16  4E4F                    1604      TRAP        #15
00001B18                          1605  
00001B18  6000 0016               1606      BRA         print_movem_to_mem
00001B1C                          1607  MATCH_MOVEM_TO_MEM_L
00001B1C                          1608      ** Move command size into D1
00001B1C  123C 0004               1609      MOVE.B      #4,D1
00001B20                          1610      ** Print command
00001B20  103C 000E               1611      MOVE.B      #14,D0
00001B24  43F8 0037               1612      LEA         pr_MOVEM,A1
00001B28  4E4F                    1613      TRAP        #15
00001B2A                          1614      ** Print size
00001B2A  43F8 001C               1615      LEA         pr_LONG,A1
00001B2E  4E4F                    1616      TRAP        #15
00001B30                          1617  print_movem_to_mem
00001B30                          1618      ** Print space
00001B30  43F8 0000               1619      LEA         pr_space,A1
00001B34  4E4F                    1620      TRAP        #15
00001B36                          1621  
00001B36                          1622      ** Print registers
00001B36  6100 0068               1623      BSR         print_movem_mask_to_mem
00001B3A                          1624  
00001B3A                          1625      ** Add comma
00001B3A  103C 000E               1626      MOVE.B      #14,D0
00001B3E  43F8 0014               1627      LEA         pr_comma,A1
00001B42  4E4F                    1628      TRAP        #15
00001B44                          1629  
00001B44                          1630      ** Decode right side ea
00001B44  1002                    1631      MOVE.B      D2,D0
00001B46  0200 003F               1632      ANDI.B      #%00111111,D0
00001B4A  4EB8 1686               1633      JSR         EADecoder
00001B4E                          1634  
00001B4E  6000 F5A2               1635      BRA         opdec_return
00001B52                          1636  
00001B52                          1637  
00001B52                          1638  MATCH_MOVEM_TO_REG_W
00001B52                          1639      ** Move command size into D1
00001B52  123C 0002               1640      MOVE.B      #2,D1
00001B56                          1641      ** Print command
00001B56  103C 000E               1642      MOVE.B      #14,D0
00001B5A  43F8 0037               1643      LEA         pr_MOVEM,A1
00001B5E  4E4F                    1644      TRAP        #15
00001B60                          1645      ** Print size
00001B60  43F8 0019               1646      LEA         pr_WORD,A1
00001B64  4E4F                    1647      TRAP        #15
00001B66                          1648  
00001B66  6000 0016               1649      BRA         print_movem_to_reg
00001B6A                          1650  MATCH_MOVEM_TO_REG_L
00001B6A                          1651      ** Move command size into D1
00001B6A  123C 0004               1652      MOVE.B      #4,D1
00001B6E                          1653      ** Print command
00001B6E  103C 000E               1654      MOVE.B      #14,D0
00001B72  43F8 0037               1655      LEA         pr_MOVEM,A1
00001B76  4E4F                    1656      TRAP        #15
00001B78                          1657      ** Print size
00001B78  43F8 001C               1658      LEA         pr_LONG,A1
00001B7C  4E4F                    1659      TRAP        #15
00001B7E                          1660  print_movem_to_reg
00001B7E                          1661      ** Print space
00001B7E  43F8 0000               1662      LEA         pr_space,A1
00001B82  4E4F                    1663      TRAP        #15
00001B84                          1664  
00001B84                          1665      ** Decode right side ea
00001B84  1002                    1666      MOVE.B      D2,D0
00001B86  0200 003F               1667      ANDI.B      #%00111111,D0
00001B8A  4EB8 1686               1668      JSR         EADecoder
00001B8E                          1669  
00001B8E                          1670      ** Add comma
00001B8E  103C 000E               1671      MOVE.B      #14,D0
00001B92  43F8 0014               1672      LEA         pr_comma,A1
00001B96  4E4F                    1673      TRAP        #15
00001B98                          1674  
00001B98                          1675      ** Print registers
00001B98  6100 0034               1676      BSR         print_movem_mask_to_reg
00001B9C                          1677  
00001B9C  6000 F554               1678      BRA         opdec_return
00001BA0                          1679  
00001BA0                          1680  
00001BA0                          1681  
00001BA0                          1682  print_movem_mask_to_mem
00001BA0  48A7 FF7E               1683      MOVEM       D0-D7/A1-A6,-(SP)
00001BA4                          1684  
00001BA4  4243                    1685      CLR         D3          ** Temp register
00001BA6  3A10                    1686      MOVE.W      (A0),D5     ** Holds address registers
00001BA8  3818                    1687      MOVE.W      (A0)+,D4    ** Holds direct registers
00001BAA  0245 00FF               1688      ANDI.W      #%0000000011111111,D5
00001BAE  0244 FF00               1689      ANDI.W      #%1111111100000000,D4
00001BB2  E04C                    1690      LSR.W       #8,D4
00001BB4                          1691  
00001BB4  6100 004E               1692      BSR         print_movem_dn
00001BB8                          1693  
00001BB8                          1694      ** Print ADDRESS REG slash
00001BB8  103C 000E               1695      MOVE.B      #14,D0
00001BBC  43F8 0026               1696      LEA         pr_slash,A1
00001BC0  4E4F                    1697      TRAP        #15
00001BC2                          1698  
00001BC2  1805                    1699      MOVE.B      D5,D4
00001BC4  6100 01FA               1700      BSR         print_movem_an
00001BC8                          1701  
00001BC8  4C9F 7EFF               1702      MOVEM       (SP)+,D0-D7/A1-A6
00001BCC  4E75                    1703      RTS
00001BCE                          1704  
00001BCE                          1705  
00001BCE                          1706  print_movem_mask_to_reg
00001BCE  48A7 FF7E               1707      MOVEM       D0-D7/A1-A6,-(SP)
00001BD2                          1708  
00001BD2  4243                    1709      CLR         D3          ** Temp register
00001BD4  3810                    1710      MOVE.W      (A0),D4     ** Holds direct registers
00001BD6  3A18                    1711      MOVE.W      (A0)+,D5    ** Holds address registers
00001BD8  0244 00FF               1712      ANDI.W      #%0000000011111111,D4
00001BDC  0245 FF00               1713      ANDI.W      #%1111111100000000,D5
00001BE0  E04D                    1714      LSR.W       #8,D5
00001BE2                          1715  
00001BE2  6100 03AE               1716      BSR         bit_reversal
00001BE6  6100 001C               1717      BSR         print_movem_dn
00001BEA                          1718  
00001BEA                          1719      ** Print ADDRESS REG slash
00001BEA  103C 000E               1720      MOVE.B      #14,D0
00001BEE  43F8 0026               1721      LEA         pr_slash,A1
00001BF2  4E4F                    1722      TRAP        #15
00001BF4                          1723  
00001BF4  1805                    1724      MOVE.B      D5,D4
00001BF6  6100 039A               1725      BSR         bit_reversal
00001BFA  6100 01C4               1726      BSR         print_movem_an
00001BFE                          1727  
00001BFE  4C9F 7EFF               1728      MOVEM       (SP)+,D0-D7/A1-A6
00001C02  4E75                    1729      RTS
00001C04                          1730  
00001C04                          1731  
00001C04                          1732  
00001C04                          1733  
00001C04                          1734  
00001C04                          1735  print_movem_dn
00001C04                          1736  to_mem_d0 *************************** D0
00001C04                          1737      ** Test bit
00001C04  0804 0007               1738      BTST        #7,D4
00001C08  6700 001C               1739      BEQ         to_mem_d1
00001C0C                          1740      ** Set D3
00001C0C  163C 0001               1741      MOVE.B      #1,D3
00001C10                          1742      ** Print register
00001C10  103C 000E               1743      MOVE.B      #14,D0
00001C14  43F8 00CC               1744      LEA         pr_d0,A1
00001C18  4E4F                    1745      TRAP        #15
00001C1A                          1746  
00001C1A                          1747      ** Check if next bit is clear
00001C1A                          1748      ** If true, skip next
00001C1A  0804 0006               1749      BTST        #6,D4
00001C1E  6700 0028               1750      BEQ         to_mem_d2
00001C22                          1751      ** Else, check cascade
00001C22  6000 00FC               1752      BRA         cascade_d1
00001C26                          1753  
00001C26                          1754  to_mem_d1 *************************** D1
00001C26                          1755      ** Test bit
00001C26  0804 0006               1756      BTST        #6,D4
00001C2A  6700 001C               1757      BEQ         to_mem_d2
00001C2E                          1758      ** Set D3
00001C2E  163C 0001               1759      MOVE.B      #1,D3
00001C32                          1760      ** Print register
00001C32  103C 000E               1761      MOVE.B      #14,D0
00001C36  43F8 00CF               1762      LEA         pr_d1,A1
00001C3A  4E4F                    1763      TRAP        #15
00001C3C                          1764  
00001C3C                          1765      ** Check if next bit is clear
00001C3C                          1766      ** If true, skip next
00001C3C  0804 0005               1767      BTST        #5,D4
00001C40  6700 002C               1768      BEQ         to_mem_d3
00001C44                          1769      ** Else, check cascade
00001C44  6000 00F2               1770      BRA         cascade_d2
00001C48                          1771  
00001C48                          1772  to_mem_d2 *************************** D2
00001C48                          1773      ** Test bit
00001C48  0804 0005               1774      BTST        #5,D4
00001C4C  6700 0020               1775      BEQ         to_mem_d3
00001C50                          1776      ** Print slash if D3 set
00001C50  6100 032A               1777      BSR         slash_check
00001C54                          1778      ** Set D3
00001C54  163C 0001               1779      MOVE.B      #1,D3
00001C58                          1780      ** Print register
00001C58  103C 000E               1781      MOVE.B      #14,D0
00001C5C  43F8 00D2               1782      LEA         pr_d2,A1
00001C60  4E4F                    1783      TRAP        #15
00001C62                          1784  
00001C62                          1785      ** Check if next bit is clear
00001C62                          1786      ** If true, skip next
00001C62  0804 0004               1787      BTST        #4,D4
00001C66  6700 002C               1788      BEQ         to_mem_d4
00001C6A                          1789      ** Else, check cascade
00001C6A  6000 00E4               1790      BRA         cascade_d3
00001C6E                          1791  
00001C6E                          1792  to_mem_d3 *************************** D3
00001C6E                          1793      ** Test bit
00001C6E  0804 0004               1794      BTST        #4,D4
00001C72  6700 0020               1795      BEQ         to_mem_d4
00001C76                          1796      ** Print slash if D3 set
00001C76  6100 0304               1797      BSR         slash_check
00001C7A                          1798      ** Set D3
00001C7A  163C 0001               1799      MOVE.B      #1,D3
00001C7E                          1800      ** Print register
00001C7E  103C 000E               1801      MOVE.B      #14,D0
00001C82  43F8 00D5               1802      LEA         pr_d3,A1
00001C86  4E4F                    1803      TRAP        #15
00001C88                          1804  
00001C88                          1805      ** Check if next bit is clear
00001C88                          1806      ** If true, skip next
00001C88  0804 0003               1807      BTST        #3,D4
00001C8C  6700 002C               1808      BEQ         to_mem_d5
00001C90                          1809      ** Else, check cascade
00001C90  6000 00D6               1810      BRA         cascade_d4
00001C94                          1811  
00001C94                          1812  to_mem_d4 *************************** D4
00001C94                          1813      ** Test bit
00001C94  0804 0003               1814      BTST        #3,D4
00001C98  6700 0020               1815      BEQ         to_mem_d5
00001C9C                          1816      ** Print slash if D3 set
00001C9C  6100 02DE               1817      BSR         slash_check
00001CA0                          1818      ** Set D3
00001CA0  163C 0001               1819      MOVE.B      #1,D3
00001CA4                          1820      ** Print register
00001CA4  103C 000E               1821      MOVE.B      #14,D0
00001CA8  43F8 00D8               1822      LEA         pr_d4,A1
00001CAC  4E4F                    1823      TRAP        #15
00001CAE                          1824  
00001CAE                          1825      ** Check if next bit is clear
00001CAE                          1826      ** If true, skip next
00001CAE  0804 0002               1827      BTST        #2,D4
00001CB2  6700 002C               1828      BEQ         to_mem_d6
00001CB6                          1829      ** Else, check cascade
00001CB6  6000 00C8               1830      BRA         cascade_d5
00001CBA                          1831  
00001CBA                          1832  to_mem_d5 *************************** D5
00001CBA                          1833      ** Test bit
00001CBA  0804 0002               1834      BTST        #2,D4
00001CBE  6700 0020               1835      BEQ         to_mem_d6
00001CC2                          1836      ** Print slash if D3 set
00001CC2  6100 02B8               1837      BSR         slash_check
00001CC6                          1838      ** Set D3
00001CC6  163C 0001               1839      MOVE.B      #1,D3
00001CCA                          1840      ** Print register
00001CCA  103C 000E               1841      MOVE.B      #14,D0
00001CCE  43F8 00DB               1842      LEA         pr_d5,A1
00001CD2  4E4F                    1843      TRAP        #15
00001CD4                          1844  
00001CD4                          1845      ** Check if next bit is clear
00001CD4                          1846      ** If true, skip next
00001CD4  0804 0001               1847      BTST        #1,D4
00001CD8  6700 002C               1848      BEQ         to_mem_d7
00001CDC                          1849      ** Else, check cascade
00001CDC  6000 00BA               1850      BRA         cascade_d6
00001CE0                          1851  
00001CE0                          1852  to_mem_d6 *************************** D6
00001CE0                          1853      ** Test bit
00001CE0  0804 0001               1854      BTST        #1,D4
00001CE4  6700 0020               1855      BEQ         to_mem_d7
00001CE8                          1856      ** Print slash if D3 set
00001CE8  6100 0292               1857      BSR         slash_check
00001CEC                          1858      ** Set D3
00001CEC  163C 0001               1859      MOVE.B      #1,D3
00001CF0                          1860      ** Print register
00001CF0  103C 000E               1861      MOVE.B      #14,D0
00001CF4  43F8 00DE               1862      LEA         pr_d6,A1
00001CF8  4E4F                    1863      TRAP        #15
00001CFA                          1864  
00001CFA                          1865      ** Check if next bit is clear
00001CFA                          1866      ** If true, skip next
00001CFA  0804 0000               1867      BTST        #0,D4
00001CFE  6700 001C               1868      BEQ         print_movem_dn_end
00001D02                          1869      ** Else, check cascade
00001D02  6000 00AC               1870      BRA         cascade_d7
00001D06                          1871  
00001D06                          1872  to_mem_d7 *************************** D7
00001D06                          1873      ** Test bit
00001D06  0804 0000               1874      BTST        #0,D4
00001D0A  6700 0010               1875      BEQ         print_movem_dn_end
00001D0E                          1876      ** Print slash if D3 set
00001D0E  6100 026C               1877      BSR         slash_check
00001D12                          1878      ** Print register
00001D12  103C 000E               1879      MOVE.B      #14,D0
00001D16  43F8 00DE               1880      LEA         pr_d6,A1
00001D1A  4E4F                    1881      TRAP        #15
00001D1C                          1882  
00001D1C                          1883  print_movem_dn_end
00001D1C  4243                    1884      CLR         D3
00001D1E  4E75                    1885      RTS
00001D20                          1886  
00001D20                          1887  
00001D20                          1888  cascade_d1 *************************** -D1
00001D20                          1889      ** If the next bit is set, check next
00001D20  0804 0005               1890      BTST        #5,D4
00001D24  6600 0012               1891      BNE         cascade_d2
00001D28                          1892      ** Else, finish the list
00001D28  43F8 0024               1893      LEA         pr_hyphen,A1
00001D2C  4E4F                    1894      TRAP        #15
00001D2E  43F8 00CF               1895      LEA         pr_D1,A1
00001D32  4E4F                    1896      TRAP        #15
00001D34                          1897  
00001D34  6000 FF38               1898      BRA         to_mem_d3
00001D38                          1899  
00001D38                          1900  cascade_d2 *************************** -D2
00001D38                          1901      ** If the next bit is set, check next
00001D38  0804 0004               1902      BTST        #4,D4
00001D3C  6600 0012               1903      BNE         cascade_d3
00001D40                          1904      ** Else, finish the list
00001D40  43F8 0024               1905      LEA         pr_hyphen,A1
00001D44  4E4F                    1906      TRAP        #15
00001D46  43F8 00D2               1907      LEA         pr_D2,A1
00001D4A  4E4F                    1908      TRAP        #15
00001D4C                          1909  
00001D4C  6000 FF46               1910      BRA         to_mem_d4
00001D50                          1911  
00001D50                          1912  cascade_d3 *************************** -D3
00001D50                          1913      ** If the next bit is set, check next
00001D50  0804 0003               1914      BTST        #3,D4
00001D54  6600 0012               1915      BNE         cascade_d4
00001D58                          1916      ** Else, finish the list
00001D58  43F8 0024               1917      LEA         pr_hyphen,A1
00001D5C  4E4F                    1918      TRAP        #15
00001D5E  43F8 00D5               1919      LEA         pr_D3,A1
00001D62  4E4F                    1920      TRAP        #15
00001D64                          1921  
00001D64  6000 FF54               1922      BRA         to_mem_d5
00001D68                          1923  
00001D68                          1924  cascade_d4 *************************** -D4
00001D68                          1925      ** If the next bit is set, check next
00001D68  0804 0002               1926      BTST        #2,D4
00001D6C  6600 0012               1927      BNE         cascade_d5
00001D70                          1928      ** Else, finish the list
00001D70  43F8 0024               1929      LEA         pr_hyphen,A1
00001D74  4E4F                    1930      TRAP        #15
00001D76  43F8 00D8               1931      LEA         pr_D4,A1
00001D7A  4E4F                    1932      TRAP        #15
00001D7C                          1933  
00001D7C  6000 FF62               1934      BRA         to_mem_d6
00001D80                          1935  
00001D80                          1936  cascade_d5 *************************** -D5
00001D80                          1937      ** If the next bit is set, check next
00001D80  0804 0001               1938      BTST        #1,D4
00001D84  6600 0012               1939      BNE         cascade_d6
00001D88                          1940      ** Else, finish the list
00001D88  43F8 0024               1941      LEA         pr_hyphen,A1
00001D8C  4E4F                    1942      TRAP        #15
00001D8E  43F8 00DB               1943      LEA         pr_D5,A1
00001D92  4E4F                    1944      TRAP        #15
00001D94                          1945  
00001D94  6000 FF70               1946      BRA         to_mem_d7
00001D98                          1947  
00001D98                          1948  cascade_d6 *************************** -D6
00001D98                          1949      ** If the next bit is set, check next
00001D98  0804 0000               1950      BTST        #0,D4
00001D9C  6600 0012               1951      BNE         cascade_d7
00001DA0                          1952      ** Else, finish the list
00001DA0  43F8 0024               1953      LEA         pr_hyphen,A1
00001DA4  4E4F                    1954      TRAP        #15
00001DA6  43F8 00DE               1955      LEA         pr_D6,A1
00001DAA  4E4F                    1956      TRAP        #15
00001DAC                          1957  
00001DAC  6000 FF6E               1958      BRA         print_movem_dn_end
00001DB0                          1959  
00001DB0                          1960  cascade_d7 *************************** -D7
00001DB0                          1961      ** Else, finish the list
00001DB0  43F8 0024               1962      LEA         pr_hyphen,A1
00001DB4  4E4F                    1963      TRAP        #15
00001DB6  43F8 00E1               1964      LEA         pr_D7,A1
00001DBA  4E4F                    1965      TRAP        #15
00001DBC                          1966  
00001DBC  6000 FF5E               1967      BRA         print_movem_dn_end
00001DC0                          1968  
00001DC0                          1969  print_movem_an
00001DC0                          1970  to_mem_a0 *************************** A0
00001DC0                          1971      ** Test bit
00001DC0  0804 0007               1972      BTST        #7,D4
00001DC4  6700 001C               1973      BEQ         to_mem_a1
00001DC8                          1974      ** Set D3
00001DC8  163C 0001               1975      MOVE.B      #1,D3
00001DCC                          1976      ** Print register
00001DCC  103C 000E               1977      MOVE.B      #14,D0
00001DD0  43F8 00E4               1978      LEA         pr_a0,A1
00001DD4  4E4F                    1979      TRAP        #15
00001DD6                          1980  
00001DD6                          1981      ** Check if next bit is clear
00001DD6                          1982      ** If true, skip next
00001DD6  0804 0006               1983      BTST        #6,D4
00001DDA  6700 0028               1984      BEQ         to_mem_a2
00001DDE                          1985      ** Else, check cascade
00001DDE  6000 00FC               1986      BRA         cascade_a1
00001DE2                          1987  
00001DE2                          1988  to_mem_a1 *************************** A1
00001DE2                          1989      ** Test bit
00001DE2  0804 0006               1990      BTST        #6,D4
00001DE6  6700 001C               1991      BEQ         to_mem_a2
00001DEA                          1992      ** Set D3
00001DEA  163C 0001               1993      MOVE.B      #1,D3
00001DEE                          1994      ** Print register
00001DEE  103C 000E               1995      MOVE.B      #14,D0
00001DF2  43F8 00E7               1996      LEA         pr_a1,A1
00001DF6  4E4F                    1997      TRAP        #15
00001DF8                          1998  
00001DF8                          1999      ** Check if next bit is clear
00001DF8                          2000      ** If true, skip next
00001DF8  0804 0005               2001      BTST        #5,D4
00001DFC  6700 002C               2002      BEQ         to_mem_a3
00001E00                          2003      ** Else, check cascade
00001E00  6000 00F2               2004      BRA         cascade_a2
00001E04                          2005  
00001E04                          2006  to_mem_a2 *************************** A2
00001E04                          2007      ** Test bit
00001E04  0804 0005               2008      BTST        #5,D4
00001E08  6700 0020               2009      BEQ         to_mem_a3
00001E0C                          2010      ** Print slash if D3 set
00001E0C  6100 016E               2011      BSR         slash_check
00001E10                          2012      ** Set D3
00001E10  163C 0001               2013      MOVE.B      #1,D3
00001E14                          2014      ** Print register
00001E14  103C 000E               2015      MOVE.B      #14,D0
00001E18  43F8 00EA               2016      LEA         pr_a2,A1
00001E1C  4E4F                    2017      TRAP        #15
00001E1E                          2018  
00001E1E                          2019      ** Check if next bit is clear
00001E1E                          2020      ** If true, skip next
00001E1E  0804 0004               2021      BTST        #4,D4
00001E22  6700 002C               2022      BEQ         to_mem_a4
00001E26                          2023      ** Else, check cascade
00001E26  6000 00E4               2024      BRA         cascade_a3
00001E2A                          2025  
00001E2A                          2026  to_mem_a3 *************************** A3
00001E2A                          2027      ** Test bit
00001E2A  0804 0004               2028      BTST        #4,D4
00001E2E  6700 0020               2029      BEQ         to_mem_a4
00001E32                          2030      ** Print slash if D3 set
00001E32  6100 0148               2031      BSR         slash_check
00001E36                          2032      ** Set D3
00001E36  163C 0001               2033      MOVE.B      #1,D3
00001E3A                          2034      ** Print register
00001E3A  103C 000E               2035      MOVE.B      #14,D0
00001E3E  43F8 00ED               2036      LEA         pr_a3,A1
00001E42  4E4F                    2037      TRAP        #15
00001E44                          2038  
00001E44                          2039      ** Check if next bit is clear
00001E44                          2040      ** If true, skip next
00001E44  0804 0003               2041      BTST        #3,D4
00001E48  6700 002C               2042      BEQ         to_mem_a5
00001E4C                          2043      ** Else, check cascade
00001E4C  6000 00D6               2044      BRA         cascade_a4
00001E50                          2045  
00001E50                          2046  to_mem_a4 *************************** A4
00001E50                          2047      ** Test bit
00001E50  0804 0003               2048      BTST        #3,D4
00001E54  6700 0020               2049      BEQ         to_mem_a5
00001E58                          2050      ** Print slash if D3 set
00001E58  6100 0122               2051      BSR         slash_check
00001E5C                          2052      ** Set D3
00001E5C  163C 0001               2053      MOVE.B      #1,D3
00001E60                          2054      ** Print register
00001E60  103C 000E               2055      MOVE.B      #14,D0
00001E64  43F8 00F0               2056      LEA         pr_a4,A1
00001E68  4E4F                    2057      TRAP        #15
00001E6A                          2058  
00001E6A                          2059      ** Check if next bit is clear
00001E6A                          2060      ** If true, skip next
00001E6A  0804 0002               2061      BTST        #2,D4
00001E6E  6700 002C               2062      BEQ         to_mem_a6
00001E72                          2063      ** Else, check cascade
00001E72  6000 00C8               2064      BRA         cascade_a5
00001E76                          2065  
00001E76                          2066  to_mem_a5 *************************** A5
00001E76                          2067      ** Test bit
00001E76  0804 0002               2068      BTST        #2,D4
00001E7A  6700 0020               2069      BEQ         to_mem_a6
00001E7E                          2070      ** Print slash if D3 set
00001E7E  6100 00FC               2071      BSR         slash_check
00001E82                          2072      ** Set D3
00001E82  163C 0001               2073      MOVE.B      #1,D3
00001E86                          2074      ** Print register
00001E86  103C 000E               2075      MOVE.B      #14,D0
00001E8A  43F8 00F3               2076      LEA         pr_a5,A1
00001E8E  4E4F                    2077      TRAP        #15
00001E90                          2078  
00001E90                          2079      ** Check if next bit is clear
00001E90                          2080      ** If true, skip next
00001E90  0804 0001               2081      BTST        #1,D4
00001E94  6700 002C               2082      BEQ         to_mem_a7
00001E98                          2083      ** Else, check cascade
00001E98  6000 00BA               2084      BRA         cascade_a6
00001E9C                          2085  
00001E9C                          2086  to_mem_a6 *************************** A6
00001E9C                          2087      ** Test bit
00001E9C  0804 0001               2088      BTST        #1,D4
00001EA0  6700 0020               2089      BEQ         to_mem_a7
00001EA4                          2090      ** Print slash if D3 set
00001EA4  6100 00D6               2091      BSR         slash_check
00001EA8                          2092      ** Set D3
00001EA8  163C 0001               2093      MOVE.B      #1,D3
00001EAC                          2094      ** Print register
00001EAC  103C 000E               2095      MOVE.B      #14,D0
00001EB0  43F8 00F6               2096      LEA         pr_a6,A1
00001EB4  4E4F                    2097      TRAP        #15
00001EB6                          2098  
00001EB6                          2099      ** Check if next bit is clear
00001EB6                          2100      ** If true, skip next
00001EB6  0804 0000               2101      BTST        #0,D4
00001EBA  6700 001C               2102      BEQ         print_movem_an_end
00001EBE                          2103      ** Else, check cascade
00001EBE  6000 00AC               2104      BRA         cascade_a7
00001EC2                          2105  
00001EC2                          2106  to_mem_a7 *************************** A7
00001EC2                          2107      ** Test bit
00001EC2  0804 0000               2108      BTST        #0,D4
00001EC6  6700 0010               2109      BEQ         print_movem_an_end
00001ECA                          2110      ** Print slash if D3 set
00001ECA  6100 00B0               2111      BSR         slash_check
00001ECE                          2112      ** Print register
00001ECE  103C 000E               2113      MOVE.B      #14,D0
00001ED2  43F8 00F6               2114      LEA         pr_a6,A1
00001ED6  4E4F                    2115      TRAP        #15
00001ED8                          2116  
00001ED8                          2117  print_movem_an_end
00001ED8  4243                    2118      CLR         D3
00001EDA  4E75                    2119      RTS
00001EDC                          2120  
00001EDC                          2121  
00001EDC                          2122  cascade_a1 *************************** -A1
00001EDC                          2123      ** If the next bit is set, check next
00001EDC  0804 0005               2124      BTST        #5,D4
00001EE0  6600 0012               2125      BNE         cascade_a2
00001EE4                          2126      ** Else, finish the list
00001EE4  43F8 0024               2127      LEA         pr_hyphen,A1
00001EE8  4E4F                    2128      TRAP        #15
00001EEA  43F8 00E7               2129      LEA         pr_a1,A1
00001EEE  4E4F                    2130      TRAP        #15
00001EF0                          2131  
00001EF0  6000 FF38               2132      BRA         to_mem_a3
00001EF4                          2133  
00001EF4                          2134  cascade_a2 *************************** -A2
00001EF4                          2135      ** If the next bit is set, check next
00001EF4  0804 0004               2136      BTST        #4,D4
00001EF8  6600 0012               2137      BNE         cascade_a3
00001EFC                          2138      ** Else, finish the list
00001EFC  43F8 0024               2139      LEA         pr_hyphen,A1
00001F00  4E4F                    2140      TRAP        #15
00001F02  43F8 00EA               2141      LEA         pr_a2,A1
00001F06  4E4F                    2142      TRAP        #15
00001F08                          2143  
00001F08  6000 FF46               2144      BRA         to_mem_a4
00001F0C                          2145  
00001F0C                          2146  cascade_a3 *************************** -A3
00001F0C                          2147      ** If the next bit is set, check next
00001F0C  0804 0003               2148      BTST        #3,D4
00001F10  6600 0012               2149      BNE         cascade_a4
00001F14                          2150      ** Else, finish the list
00001F14  43F8 0024               2151      LEA         pr_hyphen,A1
00001F18  4E4F                    2152      TRAP        #15
00001F1A  43F8 00ED               2153      LEA         pr_a3,A1
00001F1E  4E4F                    2154      TRAP        #15
00001F20                          2155  
00001F20  6000 FF54               2156      BRA         to_mem_a5
00001F24                          2157  
00001F24                          2158  cascade_a4 *************************** -A4
00001F24                          2159      ** If the next bit is set, check next
00001F24  0804 0002               2160      BTST        #2,D4
00001F28  6600 0012               2161      BNE         cascade_a5
00001F2C                          2162      ** Else, finish the list
00001F2C  43F8 0024               2163      LEA         pr_hyphen,A1
00001F30  4E4F                    2164      TRAP        #15
00001F32  43F8 00F0               2165      LEA         pr_a4,A1
00001F36  4E4F                    2166      TRAP        #15
00001F38                          2167  
00001F38  6000 FF62               2168      BRA         to_mem_a6
00001F3C                          2169  
00001F3C                          2170  cascade_a5 *************************** -A5
00001F3C                          2171      ** If the next bit is set, check next
00001F3C  0804 0001               2172      BTST        #1,D4
00001F40  6600 0012               2173      BNE         cascade_a6
00001F44                          2174      ** Else, finish the list
00001F44  43F8 0024               2175      LEA         pr_hyphen,A1
00001F48  4E4F                    2176      TRAP        #15
00001F4A  43F8 00F3               2177      LEA         pr_a5,A1
00001F4E  4E4F                    2178      TRAP        #15
00001F50                          2179  
00001F50  6000 FF70               2180      BRA         to_mem_a7
00001F54                          2181  
00001F54                          2182  cascade_a6 *************************** -A6
00001F54                          2183      ** If the next bit is set, check next
00001F54  0804 0000               2184      BTST        #0,D4
00001F58  6600 0012               2185      BNE         cascade_a7
00001F5C                          2186      ** Else, finish the list
00001F5C  43F8 0024               2187      LEA         pr_hyphen,A1
00001F60  4E4F                    2188      TRAP        #15
00001F62  43F8 00F6               2189      LEA         pr_a6,A1
00001F66  4E4F                    2190      TRAP        #15
00001F68                          2191  
00001F68  6000 FF6E               2192      BRA         print_movem_an_end
00001F6C                          2193  
00001F6C                          2194  cascade_a7 *************************** -A7
00001F6C                          2195      ** Else, finish the list
00001F6C  43F8 0024               2196      LEA         pr_hyphen,A1
00001F70  4E4F                    2197      TRAP        #15
00001F72  43F8 00F9               2198      LEA         pr_a7,A1
00001F76  4E4F                    2199      TRAP        #15
00001F78                          2200  
00001F78  6000 FF5E               2201      BRA         print_movem_an_end
00001F7C                          2202  
00001F7C                          2203  
00001F7C                          2204  
00001F7C                          2205  
00001F7C                          2206  
00001F7C                          2207  
00001F7C                          2208  
00001F7C                          2209  
00001F7C                          2210  
00001F7C                          2211  slash_check
00001F7C  0C03 0001               2212      CMPI.B      #1,D3
00001F80  6600 000E               2213      BNE         no_slash
00001F84                          2214      ** Clear D3 and print slash
00001F84  4243                    2215      CLR         D3
00001F86  103C 000E               2216      MOVE.B      #14,D0
00001F8A  43F8 0026               2217      LEA         pr_slash,A1
00001F8E  4E4F                    2218      TRAP        #15
00001F90                          2219  
00001F90                          2220  no_slash
00001F90  4E75                    2221      RTS
00001F92                          2222  
00001F92                          2223  bit_reversal
00001F92  48A7 F700               2224      MOVEM       D0-D3/D5-D7,-(SP)
00001F96                          2225      ** Reverse D4
00001F96  4242                    2226      CLR         D2
00001F98  4243                    2227      CLR         D3
00001F9A                          2228  
00001F9A  1604                    2229      MOVE.B      D4,D3
00001F9C  0203 0080               2230      ANDI.B      #%10000000,D3
00001FA0  EE0B                    2231      LSR.B       #7,D3
00001FA2  8403                    2232      OR.B        D3,D2
00001FA4                          2233  
00001FA4  1604                    2234      MOVE.B      D4,D3
00001FA6  0203 0040               2235      ANDI.B      #%01000000,D3
00001FAA  EA0B                    2236      LSR.B       #5,D3
00001FAC  8403                    2237      OR.B        D3,D2
00001FAE                          2238  
00001FAE  1604                    2239      MOVE.B      D4,D3
00001FB0  0203 0020               2240      ANDI.B      #%00100000,D3
00001FB4  E60B                    2241      LSR.B       #3,D3
00001FB6  8403                    2242      OR.B        D3,D2
00001FB8                          2243  
00001FB8  1604                    2244      MOVE.B      D4,D3
00001FBA  0203 0010               2245      ANDI.B      #%00010000,D3
00001FBE  E20B                    2246      LSR.B       #1,D3
00001FC0  8403                    2247      OR.B        D3,D2
00001FC2                          2248  
00001FC2  1604                    2249      MOVE.B      D4,D3
00001FC4  0203 0008               2250      ANDI.B      #%00001000,D3
00001FC8  E30B                    2251      LSL.B       #1,D3
00001FCA  8403                    2252      OR.B        D3,D2
00001FCC                          2253  
00001FCC  1604                    2254      MOVE.B      D4,D3
00001FCE  0203 0004               2255      ANDI.B      #%00000100,D3
00001FD2  E70B                    2256      LSL.B       #3,D3
00001FD4  8403                    2257      OR.B        D3,D2
00001FD6                          2258  
00001FD6  1604                    2259      MOVE.B      D4,D3
00001FD8  0203 0002               2260      ANDI.B      #%00000010,D3
00001FDC  EB0B                    2261      LSL.B       #5,D3
00001FDE  8403                    2262      OR.B        D3,D2
00001FE0                          2263  
00001FE0  1604                    2264      MOVE.B      D4,D3
00001FE2  0203 0001               2265      ANDI.B      #%00000001,D3
00001FE6  EF0B                    2266      LSL.B       #7,D3
00001FE8  8403                    2267      OR.B        D3,D2
00001FEA                          2268  
00001FEA  1802                    2269      MOVE.B      D2,D4
00001FEC                          2270  
00001FEC  4C9F 00EF               2271      MOVEM       (SP)+,D0-D3/D5-D7
00001FF0  4E75                    2272      RTS
00001FF2                          2273  
00001FF2                          2274  
00001FF2                          2275  -------------------- end include --------------------
00001FF2                          2276                  INCLUDE 'spencer_opcodes.x68'
00001FF2  =0000000E               2277  SHIFT       EQU %1110
00001FF2  =00000003               2278  RO          EQU %11
00001FF2  =00000000               2279  AS          EQU %00
00001FF2  =00000001               2280  LS          EQU %01
00001FF2  =00000000               2281  R           EQU %0
00001FF2  =00000001               2282  L           EQU %1
00001FF2  =00000001               2283  SHIFT_register  EQU %1
00001FF2  =00000000               2284  SHIFT_immed     EQU %0
00001FF2  =00000000               2285  SHIFT_BYTE  EQU %00
00001FF2  =00000001               2286  SHIFT_WORD  EQU %01
00001FF2  =00000003               2287  SHIFT_LONG  EQU %11
00001FF2                          2288  
00001FF2                          2289  CHECK_SHIFT
00001FF2  6100 010E               2290      BSR     Get_Count_Register_Val          * register 3
00001FF6  6100 011E               2291      BSR     Get_Size                        * register 4
00001FFA  6100 012E               2292      BSR     Get_Direction                   * register 5
00001FFE  6100 013E               2293      BSR     Get_Is_Register_Or_Immediate    * register 6
00002002  6100 0152               2294      BSR     Get_Shift_Opcode                * register 7
00002006                          2295  
00002006  6100 0024               2296      BSR     PrintShiftData
0000200A                          2297  
0000200A  6100 000C               2298      BSR     getShiftDestReg
0000200E                          2299  
0000200E  103C 0003               2300      MOVE.B  #3,D0
00002012  4E4F                    2301      TRAP    #15
00002014                          2302  
00002014  6000 F0DC               2303      BRA         opdec_return
00002018                          2304  
00002018                          2305  getShiftDestReg
00002018                          2306  
00002018  48A7 2000               2307      MOVEM.W     D2, -(SP)
0000201C                          2308  
0000201C  123C 000D               2309      MOVE.B      #13,D1
00002020  E3AA                    2310      LSL.L       D1,D2
00002022  E2AA                    2311      LSR.L       D1,D2
00002024  1202                    2312      MOVE.B      D2,D1
00002026                          2313  
00002026  4C9F 0004               2314      MOVEM.W     (SP)+,D2
0000202A  4E75                    2315      RTS
0000202C                          2316  
0000202C                          2317  
0000202C                          2318  PrintShiftData
0000202C                          2319  
0000202C  BE3C 0003               2320      CMP.B   #RO,D7
00002030  6700 0012               2321      BEQ     printRotate
00002034  BE3C 0000               2322      CMP.B   #AS,D7
00002038  6700 0014               2323      BEQ     printArithShift
0000203C  BE3C 0001               2324      CMP.B   #LS,D7
00002040  6700 0016               2325      BEQ     printLogicShift
00002044                          2326  
00002044                          2327  printRotate
00002044  43F8 0081               2328      LEA         pr_SHIFT_RO,A1
00002048  4EF9 00002062           2329      JMP         executeShiftOpcodePrint
0000204E                          2330  printArithShift
0000204E  43F8 0084               2331      LEA         pr_SHIFT_AS,A1
00002052  4EF9 00002062           2332      JMP         executeShiftOpcodePrint
00002058                          2333  printLogicShift
00002058  43F8 0087               2334      LEA         pr_SHIFT_LS,A1
0000205C  4EF9 00002062           2335      JMP         executeShiftOpcodePrint
00002062                          2336  executeShiftOpcodePrint
00002062  6100 0148               2337      BSR         PrintString
00002066                          2338  
00002066  BA3C 0000               2339      CMP.B   #R,D5
0000206A  6700 000A               2340      BEQ     printShiftRight
0000206E  BA3C 0001               2341      CMP.B   #L,D5
00002072  6700 000C               2342      BEQ     printShiftLeft
00002076                          2343  
00002076                          2344  printShiftRight
00002076  43F8 008C               2345      LEA         pr_SHIFT_R,A1
0000207A  4EF9 0000208A           2346      JMP         executePrintShiftdirection
00002080                          2347  printShiftLeft
00002080  43F8 008A               2348      LEA         pr_SHIFT_L,A1
00002084  4EF9 0000208A           2349      JMP         executePrintShiftdirection
0000208A                          2350  executePrintShiftdirection
0000208A  6100 0120               2351      BSR         PrintString
0000208E                          2352  
0000208E  B83C 0000               2353      CMP.B   #SHIFT_BYTE,D4
00002092  6700 0012               2354      BEQ     printShiftByte
00002096  B83C 0001               2355      CMP.B   #SHIFT_WORD,D4
0000209A  6700 0014               2356      BEQ     printShiftWord
0000209E  B83C 0003               2357      CMP.B   #SHIFT_LONG,D4
000020A2  6700 0016               2358      BEQ     printShiftLong
000020A6                          2359  
000020A6                          2360  printShiftByte
000020A6  43F8 0016               2361      LEA     pr_BYTE,A1
000020AA  4EF9 000020C4           2362      JMP     executePrintShiftSize
000020B0                          2363  printShiftWord
000020B0  43F8 0019               2364      LEA     pr_WORD,A1
000020B4  4EF9 000020C4           2365      JMP     executePrintShiftSize
000020BA                          2366  printShiftLong
000020BA  43F8 001C               2367      LEA     pr_LONG,A1
000020BE  4EF9 000020C4           2368      JMP     executePrintShiftSize
000020C4                          2369  executePrintShiftSize
000020C4  6100 00E6               2370      BSR         PrintString
000020C8  43F8 0000               2371      LEA     pr_space,A1
000020CC  6100 00DE               2372      BSR     PrintString
000020D0                          2373  
000020D0  BC3C 0001               2374      CMP.B   #SHIFT_register,D6
000020D4  6700 000A               2375      BEQ     printShiftReg
000020D8  BC3C 0000               2376      CMP.B   #SHIFT_immed,D6
000020DC  6700 000A               2377      BEQ     printShift
000020E0                          2378  
000020E0                          2379  printShiftReg
000020E0  43F8 007F               2380      LEA     pr_reg,A1
000020E4  6100 00C6               2381      BSR     PrintString
000020E8                          2382  printShift
000020E8  1203                    2383      MOVE.B  D3,D1
000020EA  103C 0003               2384      MOVE.B  #3,D0
000020EE  4E4F                    2385      TRAP    #15
000020F0                          2386  
000020F0  43F8 0014               2387      LEA     pr_comma,A1
000020F4  6100 00B6               2388      BSR     PrintString
000020F8  43F8 007F               2389      LEA     pr_reg,A1
000020FC  6100 00AE               2390      BSR     PrintString
00002100  4E75                    2391      RTS
00002102                          2392  
00002102                          2393  
00002102                          2394  Get_Count_Register_Val
00002102                          2395  
00002102  48A7 2000               2396      MOVEM.W     D2, -(SP)
00002106                          2397  
00002106  123C 000D               2398      MOVE.B      #13,D1
0000210A  E98A                    2399      LSL.L       #4,D2
0000210C  E2AA                    2400      LSR.L       D1,D2
0000210E  1602                    2401      MOVE.B      D2,D3
00002110                          2402  
00002110  4C9F 0004               2403      MOVEM.W     (SP)+,D2
00002114  4E75                    2404      RTS
00002116                          2405  
00002116                          2406  Get_Size
00002116                          2407  
00002116  48A7 2000               2408      MOVEM.W     D2, -(SP)
0000211A                          2409  
0000211A  123C 000E               2410      MOVE.B      #14,D1
0000211E  E18A                    2411      LSL.L       #8,D2
00002120  E2AA                    2412      LSR.L       D1,D2
00002122  1802                    2413      MOVE.B      D2,D4
00002124                          2414  
00002124  4C9F 0004               2415      MOVEM.W     (SP)+,D2
00002128  4E75                    2416      RTS
0000212A                          2417  Get_Direction
0000212A                          2418  
0000212A  48A7 2000               2419      MOVEM.W     D2, -(SP)
0000212E                          2420  
0000212E  123C 000F               2421      MOVE.B      #15,D1
00002132  EF8A                    2422      LSL.L       #7,D2
00002134  E2AA                    2423      LSR.L       D1,D2
00002136  1A02                    2424      MOVE.B      D2,D5
00002138                          2425  
00002138  4C9F 0004               2426      MOVEM.W     (SP)+,D2
0000213C  4E75                    2427      RTS
0000213E                          2428  Get_Is_Register_Or_Immediate
0000213E                          2429  
0000213E  48A7 2000               2430      MOVEM.W     D2, -(SP)
00002142                          2431  
00002142  123C 000A               2432      MOVE.B      #10,D1
00002146  E3AA                    2433      LSL.L       D1,D2
00002148  123C 000F               2434      MOVE.B      #15,D1
0000214C  E2AA                    2435      LSR.L       D1,D2
0000214E                          2436  
0000214E  1C02                    2437      MOVE.B      D2,D6
00002150                          2438  
00002150  4C9F 0004               2439      MOVEM.W     (SP)+,D2
00002154  4E75                    2440      RTS
00002156                          2441  
00002156                          2442  Get_Shift_Opcode
00002156                          2443  
00002156  48A7 2000               2444      MOVEM.W     D2, -(SP)
0000215A                          2445  
0000215A  123C 000B               2446      MOVE.B      #11,D1
0000215E  E3AA                    2447      LSL.L       D1,D2
00002160  123C 000E               2448      MOVE.B      #14,D1
00002164  E2AA                    2449      LSR.L       D1,D2
00002166                          2450  
00002166  1E02                    2451      MOVE.B      D2,D7
00002168                          2452  
00002168  4C9F 0004               2453      MOVEM.W     (SP)+,D2
0000216C  4E75                    2454      RTS
0000216E                          2455  
0000216E                          2456  
0000216E                          2457  MATCH_LSL
0000216E  3A02                    2458      MOVE.W      D2,D5       *REMOVE
00002170                          2459  MATCH_LSR
00002170  3A02                    2460      MOVE.W      D2,D5       *REMOVE
00002172                          2461  MATCH_ASR
00002172  3A02                    2462      MOVE.W      D2,D5       *REMOVE
00002174                          2463  MATCH_ASL
00002174  3A02                    2464      MOVE.W      D2,D5       *REMOVE
00002176                          2465  MATCH_ROL
00002176  3A02                    2466      MOVE.W      D2,D5       *REMOVE
00002178                          2467  MATCH_ROR
00002178  3A02                    2468      MOVE.W      D2,D5       *REMOVE
0000217A                          2469  
0000217A                          2470  Get_BCC_Displacement_8bit
0000217A                          2471  
0000217A  4246                    2472      CLR     D6
0000217C  1C02                    2473      MOVE.B  D2,D6
0000217E  4E75                    2474      RTS
00002180                          2475  Get_BCC_Displacement_16bit
00002180                          2476  
00002180  4246                    2477      CLR     D6
00002182  3C18                    2478      MOVE.W  (A0)+,D6
00002184  4E75                    2479      RTS
00002186                          2480  Get_BCC_Displacement_32bit
00002186                          2481  
00002186  4246                    2482      CLR     D6
00002188  2C18                    2483      MOVE.L  (A0)+,D6
0000218A  4E75                    2484      RTS
0000218C                          2485  Get_Current_Address
0000218C                          2486  
0000218C  4247                    2487      CLR     D7
0000218E  2E08                    2488      MOVE.L      A0,D7
00002190  5587                    2489      SUBI.L      #2,D7
00002192  4E75                    2490      RTS
00002194                          2491  Get_BCC_Destination_Address
00002194                          2492  
00002194  9E86                    2493      SUB.L   D6,D7
00002196  4E75                    2494      RTS
00002198                          2495  
00002198                          2496  PrintHex
00002198                          2497  
00002198  48A7 2000               2498      MOVEM.W     D2, -(SP)
0000219C                          2499  
0000219C  103C 000F               2500      MOVE.B      #15,D0
000021A0  143C 0010               2501      MOVE.B      #16,D2 * print base 16
000021A4  4E4F                    2502      TRAP        #15
000021A6                          2503  
000021A6  4C9F 0004               2504      MOVEM.W     (SP)+,D2
000021AA  4E75                    2505      RTS
000021AC                          2506  PrintString
000021AC  103C 000E               2507      MOVE.B      #14,D0
000021B0  4E4F                    2508      TRAP        #15
000021B2  4E75                    2509      RTS
000021B4                          2510  PrintSizeByte
000021B4  103C 000E               2511      MOVE.B      #14,D0
000021B8  43F8 0016               2512      LEA         pr_BYTE,A1
000021BC  4E4F                    2513      TRAP        #15
000021BE  4E75                    2514      RTS
000021C0                          2515  PrintSizeWord
000021C0  103C 000E               2516      MOVE.B      #14,D0
000021C4  43F8 0019               2517      LEA         pr_WORD,A1
000021C8  4E4F                    2518      TRAP        #15
000021CA  4E75                    2519      RTS
000021CC                          2520  PrintSizeLong
000021CC  103C 000E               2521      MOVE.B      #14,D0
000021D0  43F8 001C               2522      LEA         pr_LONG,A1
000021D4  4E4F                    2523      TRAP        #15
000021D6  4E75                    2524      RTS
000021D8                          2525  
000021D8                          2526  
000021D8                          2527  MATCH_CC_T_8
000021D8  3A02                    2528      MOVE.W      D2,D5       *REMOVE
000021DA                          2529  MATCH_CC_T_16
000021DA  3A02                    2530      MOVE.W      D2,D5       *REMOVE
000021DC                          2531  MATCH_CC_T_32
000021DC  3A02                    2532      MOVE.W      D2,D5       *REMOVE
000021DE                          2533  MATCH_CC_F_8
000021DE  3A02                    2534      MOVE.W      D2,D5       *REMOVE
000021E0                          2535  MATCH_CC_F_16
000021E0  3A02                    2536      MOVE.W      D2,D5       *REMOVE
000021E2                          2537  MATCH_CC_F_32
000021E2  3A02                    2538      MOVE.W      D2,D5       *REMOVE
000021E4                          2539  MATCH_CC_HI_8
000021E4                          2540      ** print opcode **
000021E4  43F8 00A8               2541      LEA         pr_BCC_HI,A1
000021E8  61C2                    2542      BSR         PrintString
000021EA                          2543  
000021EA  61C8                    2544      BSR         PrintSizeBYTE
000021EC  43F8 0000               2545      LEA         pr_space,A1
000021F0  61BA                    2546      BSR         PrintString
000021F2                          2547  
000021F2                          2548      ** print address **
000021F2  6186                    2549      BSR         Get_BCC_Displacement_8bit
000021F4  6196                    2550      BSR         Get_Current_Address
000021F6  619C                    2551      BSR         Get_BCC_Destination_Address
000021F8  2207                    2552      MOVE.L      D7,D1
000021FA  619C                    2553      BSR         PrintHex
000021FC                          2554  
000021FC  6000 EEF4               2555      BRA         opdec_return
00002200                          2556  
00002200                          2557  MATCH_CC_HI_16
00002200                          2558      ** print opcode **
00002200  43F8 00A8               2559      LEA         pr_BCC_HI,A1
00002204  61A6                    2560      BSR         PrintString
00002206                          2561  
00002206  61B8                    2562      BSR         PrintSizeWORD
00002208  43F8 0000               2563      LEA         pr_space,A1
0000220C  619E                    2564      BSR         PrintString
0000220E                          2565  
0000220E                          2566      ** print address **
0000220E  6100 FF70               2567      BSR         Get_BCC_Displacement_16bit
00002212  6100 FF78               2568      BSR         Get_Current_Address
00002216  6100 FF7C               2569      BSR         Get_BCC_Destination_Address
0000221A  2207                    2570      MOVE.L      D7,D1
0000221C  6100 FF7A               2571      BSR         PrintHex
00002220                          2572  
00002220  6000 EED0               2573      BRA         opdec_return
00002224                          2574  MATCH_CC_HI_32
00002224                          2575      ** print opcode **
00002224  43F8 00A8               2576      LEA         pr_BCC_HI,A1
00002228  6182                    2577      BSR         PrintString
0000222A                          2578  
0000222A  61A0                    2579      BSR         PrintSizeLONG
0000222C  43F8 0000               2580      LEA         pr_space,A1
00002230  6100 FF7A               2581      BSR         PrintString
00002234                          2582  
00002234                          2583      ** print address **
00002234  6100 FF50               2584      BSR         Get_BCC_Displacement_32bit
00002238  6100 FF52               2585      BSR         Get_Current_Address
0000223C  6100 FF56               2586      BSR         Get_BCC_Destination_Address
00002240  2207                    2587      MOVE.L      D7,D1
00002242  6100 FF54               2588      BSR         PrintHex
00002246                          2589  
00002246  6000 EEAA               2590      BRA         opdec_return
0000224A                          2591  MATCH_CC_LS_8
0000224A                          2592      ** print opcode **
0000224A  43F8 00B0               2593      LEA         pr_BCC_LS,A1
0000224E  6100 FF5C               2594      BSR         PrintString
00002252                          2595  
00002252  6100 FF60               2596      BSR         PrintSizeBYTE
00002256  43F8 0000               2597      LEA         pr_space,A1
0000225A  6100 FF50               2598      BSR         PrintString
0000225E                          2599  
0000225E                          2600      ** print address **
0000225E  6100 FF1A               2601      BSR         Get_BCC_Displacement_8bit
00002262  6100 FF28               2602      BSR         Get_Current_Address
00002266  6100 FF2C               2603      BSR         Get_BCC_Destination_Address
0000226A  2207                    2604      MOVE.L      D7,D1
0000226C  6100 FF2A               2605      BSR         PrintHex
00002270                          2606  
00002270  6000 EE80               2607      BRA         opdec_return
00002274                          2608  MATCH_CC_LS_16
00002274                          2609      ** print opcode **
00002274  43F8 00B0               2610      LEA         pr_BCC_LS,A1
00002278  6100 FF32               2611      BSR         PrintString
0000227C                          2612  
0000227C  6100 FF42               2613      BSR         PrintSizeWORD
00002280  43F8 0000               2614      LEA         pr_space,A1
00002284  6100 FF26               2615      BSR         PrintString
00002288                          2616  
00002288                          2617      ** print address **
00002288  6100 FEF6               2618      BSR         Get_BCC_Displacement_16bit
0000228C  6100 FEFE               2619      BSR         Get_Current_Address
00002290  6100 FF02               2620      BSR         Get_BCC_Destination_Address
00002294  2207                    2621      MOVE.L      D7,D1
00002296  6100 FF00               2622      BSR         PrintHex
0000229A                          2623  
0000229A  6000 EE56               2624      BRA         opdec_return
0000229E                          2625  
0000229E                          2626  MATCH_CC_LS_32
0000229E                          2627      ** print opcode **
0000229E  43F8 00B0               2628      LEA         pr_BCC_LS,A1
000022A2  6100 FF08               2629      BSR         PrintString
000022A6                          2630  
000022A6  6100 FF24               2631      BSR         PrintSizeLONG
000022AA  43F8 0000               2632      LEA         pr_space,A1
000022AE  6100 FEFC               2633      BSR         PrintString
000022B2                          2634  
000022B2                          2635      ** print address **
000022B2  6100 FED2               2636      BSR         Get_BCC_Displacement_32bit
000022B6  6100 FED4               2637      BSR         Get_Current_Address
000022BA  6100 FED8               2638      BSR         Get_BCC_Destination_Address
000022BE  2207                    2639      MOVE.L      D7,D1
000022C0  6100 FED6               2640      BSR         PrintHex
000022C4                          2641  
000022C4  6000 EE2C               2642      BRA         opdec_return
000022C8                          2643  MATCH_CC_CC_8
000022C8                          2644  
000022C8                          2645      ** print opcode **
000022C8  43F8 0094               2646      LEA         pr_BCC_CC,A1
000022CC  6100 FEDE               2647      BSR         PrintString
000022D0                          2648  
000022D0  6100 FEE2               2649      BSR         PrintSizeBYTE
000022D4  43F8 0000               2650      LEA         pr_space,A1
000022D8  6100 FED2               2651      BSR         PrintString
000022DC                          2652  
000022DC                          2653      ** print address **
000022DC  6100 FE9C               2654      BSR         Get_BCC_Displacement_8bit
000022E0  6100 FEAA               2655      BSR         Get_Current_Address
000022E4  6100 FEAE               2656      BSR         Get_BCC_Destination_Address
000022E8  2207                    2657      MOVE.L      D7,D1
000022EA  6100 FEAC               2658      BSR         PrintHex
000022EE                          2659  
000022EE  6000 EE02               2660      BRA         opdec_return
000022F2                          2661  
000022F2                          2662  MATCH_CC_CC_16
000022F2                          2663      ** print opcode **
000022F2  43F8 0094               2664      LEA         pr_BCC_CC,A1
000022F6  6100 FEB4               2665      BSR         PrintString
000022FA                          2666  
000022FA  6100 FEC4               2667      BSR         PrintSizeWORD
000022FE  43F8 0000               2668      LEA         pr_space,A1
00002302  6100 FEA8               2669      BSR         PrintString
00002306                          2670  
00002306                          2671      ** print address **
00002306  6100 FE78               2672      BSR         Get_BCC_Displacement_16bit
0000230A  6100 FE80               2673      BSR         Get_Current_Address
0000230E  6100 FE84               2674      BSR         Get_BCC_Destination_Address
00002312  2207                    2675      MOVE.L      D7,D1
00002314  6100 FE82               2676      BSR         PrintHex
00002318                          2677  
00002318  6000 EDD8               2678      BRA         opdec_return
0000231C                          2679  MATCH_CC_CC_32
0000231C                          2680      ** print opcode **
0000231C  43F8 0094               2681      LEA         pr_BCC_CC,A1
00002320  6100 FE8A               2682      BSR         PrintString
00002324                          2683  
00002324  6100 FEA6               2684      BSR         PrintSizeLONG
00002328  43F8 0000               2685      LEA         pr_space,A1
0000232C  6100 FE7E               2686      BSR         PrintString
00002330                          2687  
00002330                          2688      ** print address **
00002330  6100 FE54               2689      BSR         Get_BCC_Displacement_32bit
00002334  6100 FE56               2690      BSR         Get_Current_Address
00002338  6100 FE5A               2691      BSR         Get_BCC_Destination_Address
0000233C  2207                    2692      MOVE.L      D7,D1
0000233E  6100 FE58               2693      BSR         PrintHex
00002342                          2694  
00002342  6000 EDAE               2695      BRA         opdec_return
00002346                          2696  MATCH_CC_CS_8
00002346                          2697      ** print opcode **
00002346  43F8 0098               2698      LEA         pr_BCC_CS,A1
0000234A  6100 FE60               2699      BSR         PrintString
0000234E                          2700  
0000234E  6100 FE64               2701      BSR         PrintSizeBYTE
00002352  43F8 0000               2702      LEA         pr_space,A1
00002356  6100 FE54               2703      BSR         PrintString
0000235A                          2704  
0000235A                          2705      ** print address **
0000235A  6100 FE1E               2706      BSR         Get_BCC_Displacement_8bit
0000235E  6100 FE2C               2707      BSR         Get_Current_Address
00002362  6100 FE30               2708      BSR         Get_BCC_Destination_Address
00002366  2207                    2709      MOVE.L      D7,D1
00002368  6100 FE2E               2710      BSR         PrintHex
0000236C                          2711  
0000236C  6000 ED84               2712      BRA         opdec_return
00002370                          2713  MATCH_CC_CS_16
00002370                          2714      ** print opcode **
00002370  43F8 0098               2715      LEA         pr_BCC_CS,A1
00002374  6100 FE36               2716      BSR         PrintString
00002378                          2717  
00002378  6100 FE46               2718      BSR         PrintSizeWORD
0000237C  43F8 0000               2719      LEA         pr_space,A1
00002380  6100 FE2A               2720      BSR         PrintString
00002384                          2721  
00002384                          2722      ** print address **
00002384  6100 FDFA               2723      BSR         Get_BCC_Displacement_16bit
00002388  6100 FE02               2724      BSR         Get_Current_Address
0000238C  6100 FE06               2725      BSR         Get_BCC_Destination_Address
00002390  2207                    2726      MOVE.L      D7,D1
00002392  6100 FE04               2727      BSR         PrintHex
00002396                          2728  
00002396  6000 ED5A               2729      BRA         opdec_return
0000239A                          2730  MATCH_CC_CS_32
0000239A                          2731      ** print opcode **
0000239A  43F8 0098               2732      LEA         pr_BCC_CS,A1
0000239E  6100 FE0C               2733      BSR         PrintString
000023A2                          2734  
000023A2  6100 FE28               2735      BSR         PrintSizeLONG
000023A6  43F8 0000               2736      LEA         pr_space,A1
000023AA  6100 FE00               2737      BSR         PrintString
000023AE                          2738  
000023AE                          2739      ** print address **
000023AE  6100 FDD6               2740      BSR         Get_BCC_Displacement_32bit
000023B2  6100 FDD8               2741      BSR         Get_Current_Address
000023B6  6100 FDDC               2742      BSR         Get_BCC_Destination_Address
000023BA  2207                    2743      MOVE.L      D7,D1
000023BC  6100 FDDA               2744      BSR         PrintHex
000023C0                          2745  
000023C0  6000 ED30               2746      BRA         opdec_return
000023C4                          2747  MATCH_CC_NE_8
000023C4                          2748      ** print opcode **
000023C4  43F8 00BC               2749      LEA         pr_BCC_NE,A1
000023C8  6100 FDE2               2750      BSR         PrintString
000023CC                          2751  
000023CC  6100 FDE6               2752      BSR         PrintSizeBYTE
000023D0  43F8 0000               2753      LEA         pr_space,A1
000023D4  6100 FDD6               2754      BSR         PrintString
000023D8                          2755  
000023D8                          2756      ** print address **
000023D8  6100 FDA0               2757      BSR         Get_BCC_Displacement_8bit
000023DC  6100 FDAE               2758      BSR         Get_Current_Address
000023E0  6100 FDB2               2759      BSR         Get_BCC_Destination_Address
000023E4  2207                    2760      MOVE.L      D7,D1
000023E6  6100 FDB0               2761      BSR         PrintHex
000023EA                          2762  
000023EA  6000 ED06               2763      BRA         opdec_return
000023EE                          2764  MATCH_CC_NE_16
000023EE                          2765      ** print opcode **
000023EE  43F8 00BC               2766      LEA         pr_BCC_NE,A1
000023F2  6100 FDB8               2767      BSR         PrintString
000023F6                          2768  
000023F6  6100 FDC8               2769      BSR         PrintSizeWORD
000023FA  43F8 0000               2770      LEA         pr_space,A1
000023FE  6100 FDAC               2771      BSR         PrintString
00002402                          2772  
00002402                          2773      ** print address **
00002402  6100 FD7C               2774      BSR         Get_BCC_Displacement_16bit
00002406  6100 FD84               2775      BSR         Get_Current_Address
0000240A  6100 FD88               2776      BSR         Get_BCC_Destination_Address
0000240E  2207                    2777      MOVE.L      D7,D1
00002410  6100 FD86               2778      BSR         PrintHex
00002414                          2779  
00002414  6000 ECDC               2780      BRA         opdec_return
00002418                          2781  MATCH_CC_NE_32
00002418                          2782      ** print opcode **
00002418  43F8 00BC               2783      LEA         pr_BCC_NE,A1
0000241C  6100 FD8E               2784      BSR         PrintString
00002420                          2785  
00002420  6100 FDAA               2786      BSR         PrintSizeLONG
00002424  43F8 0000               2787      LEA         pr_space,A1
00002428  6100 FD82               2788      BSR         PrintString
0000242C                          2789  
0000242C                          2790      ** print address **
0000242C  6100 FD58               2791      BSR         Get_BCC_Displacement_32bit
00002430  6100 FD5A               2792      BSR         Get_Current_Address
00002434  6100 FD5E               2793      BSR         Get_BCC_Destination_Address
00002438  2207                    2794      MOVE.L      D7,D1
0000243A  6100 FD5C               2795      BSR         PrintHex
0000243E                          2796  
0000243E  6000 ECB2               2797      BRA         opdec_return
00002442                          2798  MATCH_CC_EQ_8
00002442                          2799      ** print opcode **
00002442  43F8 009C               2800      LEA         pr_BCC_EQ,A1
00002446  6100 FD64               2801      BSR         PrintString
0000244A                          2802  
0000244A  6100 FD68               2803      BSR         PrintSizeBYTE
0000244E  43F8 0000               2804      LEA         pr_space,A1
00002452  6100 FD58               2805      BSR         PrintString
00002456                          2806  
00002456                          2807      ** print address **
00002456  6100 FD22               2808      BSR         Get_BCC_Displacement_8bit
0000245A  6100 FD30               2809      BSR         Get_Current_Address
0000245E  6100 FD34               2810      BSR         Get_BCC_Destination_Address
00002462  2207                    2811      MOVE.L      D7,D1
00002464  6100 FD32               2812      BSR         PrintHex
00002468                          2813  
00002468  6000 EC88               2814      BRA         opdec_return
0000246C                          2815  MATCH_CC_EQ_16
0000246C                          2816      ** print opcode **
0000246C  43F8 009C               2817      LEA         pr_BCC_EQ,A1
00002470  6100 FD3A               2818      BSR         PrintString
00002474                          2819  
00002474  6100 FD4A               2820      BSR         PrintSizeWORD
00002478  43F8 0000               2821      LEA         pr_space,A1
0000247C  6100 FD2E               2822      BSR         PrintString
00002480                          2823  
00002480                          2824      ** print address **
00002480  6100 FCFE               2825      BSR         Get_BCC_Displacement_16bit
00002484  6100 FD06               2826      BSR         Get_Current_Address
00002488  6100 FD0A               2827      BSR         Get_BCC_Destination_Address
0000248C  2207                    2828      MOVE.L      D7,D1
0000248E  6100 FD08               2829      BSR         PrintHex
00002492                          2830  
00002492  6000 EC5E               2831      BRA         opdec_return
00002496                          2832  MATCH_CC_EQ_32
00002496                          2833      ** print opcode **
00002496  43F8 009C               2834      LEA         pr_BCC_EQ,A1
0000249A  6100 FD10               2835      BSR         PrintString
0000249E                          2836  
0000249E  6100 FD2C               2837      BSR         PrintSizeLONG
000024A2  43F8 0000               2838      LEA         pr_space,A1
000024A6  6100 FD04               2839      BSR         PrintString
000024AA                          2840  
000024AA                          2841      ** print address **
000024AA  6100 FCDA               2842      BSR         Get_BCC_Displacement_32bit
000024AE  6100 FCDC               2843      BSR         Get_Current_Address
000024B2  6100 FCE0               2844      BSR         Get_BCC_Destination_Address
000024B6  2207                    2845      MOVE.L      D7,D1
000024B8  6100 FCDE               2846      BSR         PrintHex
000024BC                          2847  
000024BC  6000 EC34               2848      BRA         opdec_return
000024C0                          2849  MATCH_CC_VC_8
000024C0                          2850      ** print opcode **
000024C0  43F8 00C4               2851      LEA         pr_BCC_VC,A1
000024C4  6100 FCE6               2852      BSR         PrintString
000024C8                          2853  
000024C8  6100 FCEA               2854      BSR         PrintSizeBYTE
000024CC  43F8 0000               2855      LEA         pr_space,A1
000024D0  6100 FCDA               2856      BSR         PrintString
000024D4                          2857  
000024D4                          2858      ** print address **
000024D4  6100 FCA4               2859      BSR         Get_BCC_Displacement_8bit
000024D8  6100 FCB2               2860      BSR         Get_Current_Address
000024DC  6100 FCB6               2861      BSR         Get_BCC_Destination_Address
000024E0  2207                    2862      MOVE.L      D7,D1
000024E2  6100 FCB4               2863      BSR         PrintHex
000024E6                          2864  
000024E6  6000 EC0A               2865      BRA         opdec_return
000024EA                          2866  MATCH_CC_VC_16
000024EA                          2867      ** print opcode **
000024EA  43F8 00C4               2868      LEA         pr_BCC_VC,A1
000024EE  6100 FCBC               2869      BSR         PrintString
000024F2                          2870  
000024F2  6100 FCCC               2871      BSR         PrintSizeWORD
000024F6  43F8 0000               2872      LEA         pr_space,A1
000024FA  6100 FCB0               2873      BSR         PrintString
000024FE                          2874  
000024FE                          2875      ** print address **
000024FE  6100 FC80               2876      BSR         Get_BCC_Displacement_16bit
00002502  6100 FC88               2877      BSR         Get_Current_Address
00002506  6100 FC8C               2878      BSR         Get_BCC_Destination_Address
0000250A  2207                    2879      MOVE.L      D7,D1
0000250C  6100 FC8A               2880      BSR         PrintHex
00002510                          2881  
00002510  6000 EBE0               2882      BRA         opdec_return
00002514                          2883  MATCH_CC_VC_32
00002514                          2884      ** print opcode **
00002514  43F8 00C4               2885      LEA         pr_BCC_VC,A1
00002518  6100 FC92               2886      BSR         PrintString
0000251C                          2887  
0000251C  6100 FCAE               2888      BSR         PrintSizeLONG
00002520  43F8 0000               2889      LEA         pr_space,A1
00002524  6100 FC86               2890      BSR         PrintString
00002528                          2891  
00002528                          2892      ** print address **
00002528  6100 FC5C               2893      BSR         Get_BCC_Displacement_32bit
0000252C  6100 FC5E               2894      BSR         Get_Current_Address
00002530  6100 FC62               2895      BSR         Get_BCC_Destination_Address
00002534  2207                    2896      MOVE.L      D7,D1
00002536  6100 FC60               2897      BSR         PrintHex
0000253A                          2898  
0000253A  6000 EBB6               2899      BRA         opdec_return
0000253E                          2900  MATCH_CC_VS_8
0000253E                          2901      ** print opcode **
0000253E  43F8 00C8               2902      LEA         pr_BCC_VS,A1
00002542  6100 FC68               2903      BSR         PrintString
00002546                          2904  
00002546  6100 FC6C               2905      BSR         PrintSizeBYTE
0000254A  43F8 0000               2906      LEA         pr_space,A1
0000254E  6100 FC5C               2907      BSR         PrintString
00002552                          2908  
00002552                          2909      ** print address **
00002552  6100 FC26               2910      BSR         Get_BCC_Displacement_8bit
00002556  6100 FC34               2911      BSR         Get_Current_Address
0000255A  6100 FC38               2912      BSR         Get_BCC_Destination_Address
0000255E  2207                    2913      MOVE.L      D7,D1
00002560  6100 FC36               2914      BSR         PrintHex
00002564                          2915  
00002564  6000 EB8C               2916      BRA         opdec_return
00002568                          2917  MATCH_CC_VS_16
00002568                          2918      ** print opcode **
00002568  43F8 00C8               2919      LEA         pr_BCC_VS,A1
0000256C  6100 FC3E               2920      BSR         PrintString
00002570                          2921  
00002570  6100 FC4E               2922      BSR         PrintSizeWORD
00002574  43F8 0000               2923      LEA         pr_space,A1
00002578  6100 FC32               2924      BSR         PrintString
0000257C                          2925  
0000257C                          2926      ** print address **
0000257C  6100 FC02               2927      BSR         Get_BCC_Displacement_16bit
00002580  6100 FC0A               2928      BSR         Get_Current_Address
00002584  6100 FC0E               2929      BSR         Get_BCC_Destination_Address
00002588  2207                    2930      MOVE.L      D7,D1
0000258A  6100 FC0C               2931      BSR         PrintHex
0000258E                          2932  
0000258E  6000 EB62               2933      BRA         opdec_return
00002592                          2934  MATCH_CC_VS_32
00002592                          2935      ** print opcode **
00002592  43F8 00C8               2936      LEA         pr_BCC_VS,A1
00002596  6100 FC14               2937      BSR         PrintString
0000259A                          2938  
0000259A  6100 FC30               2939      BSR         PrintSizeLONG
0000259E  43F8 0000               2940      LEA         pr_space,A1
000025A2  6100 FC08               2941      BSR         PrintString
000025A6                          2942  
000025A6                          2943      ** print address **
000025A6  6100 FBDE               2944      BSR         Get_BCC_Displacement_32bit
000025AA  6100 FBE0               2945      BSR         Get_Current_Address
000025AE  6100 FBE4               2946      BSR         Get_BCC_Destination_Address
000025B2  2207                    2947      MOVE.L      D7,D1
000025B4  6100 FBE2               2948      BSR         PrintHex
000025B8                          2949  
000025B8  6000 EB38               2950      BRA         opdec_return
000025BC                          2951  MATCH_CC_PL_8
000025BC                          2952      ** print opcode **
000025BC  43F8 00C0               2953      LEA         pr_BCC_PL,A1
000025C0  6100 FBEA               2954      BSR         PrintString
000025C4                          2955  
000025C4  6100 FBEE               2956      BSR         PrintSizeBYTE
000025C8  43F8 0000               2957      LEA         pr_space,A1
000025CC  6100 FBDE               2958      BSR         PrintString
000025D0                          2959  
000025D0                          2960      ** print address **
000025D0  6100 FBA8               2961      BSR         Get_BCC_Displacement_8bit
000025D4  6100 FBB6               2962      BSR         Get_Current_Address
000025D8  6100 FBBA               2963      BSR         Get_BCC_Destination_Address
000025DC  2207                    2964      MOVE.L      D7,D1
000025DE  6100 FBB8               2965      BSR         PrintHex
000025E2                          2966  
000025E2  6000 EB0E               2967      BRA         opdec_return
000025E6                          2968  MATCH_CC_PL_16
000025E6                          2969      ** print opcode **
000025E6  43F8 00C0               2970      LEA         pr_BCC_PL,A1
000025EA  6100 FBC0               2971      BSR         PrintString
000025EE                          2972  
000025EE  6100 FBD0               2973      BSR         PrintSizeWORD
000025F2  43F8 0000               2974      LEA         pr_space,A1
000025F6  6100 FBB4               2975      BSR         PrintString
000025FA                          2976  
000025FA                          2977      ** print address **
000025FA  6100 FB84               2978      BSR         Get_BCC_Displacement_16bit
000025FE  6100 FB8C               2979      BSR         Get_Current_Address
00002602  6100 FB90               2980      BSR         Get_BCC_Destination_Address
00002606  2207                    2981      MOVE.L      D7,D1
00002608  6100 FB8E               2982      BSR         PrintHex
0000260C                          2983  
0000260C  6000 EAE4               2984      BRA         opdec_return
00002610                          2985  MATCH_CC_PL_32
00002610                          2986      ** print opcode **
00002610  43F8 00C0               2987      LEA         pr_BCC_PL,A1
00002614  6100 FB96               2988      BSR         PrintString
00002618                          2989  
00002618  6100 FBB2               2990      BSR         PrintSizeLONG
0000261C  43F8 0000               2991      LEA         pr_space,A1
00002620  6100 FB8A               2992      BSR         PrintString
00002624                          2993  
00002624                          2994      ** print address **
00002624  6100 FB60               2995      BSR         Get_BCC_Displacement_32bit
00002628  6100 FB62               2996      BSR         Get_Current_Address
0000262C  6100 FB66               2997      BSR         Get_BCC_Destination_Address
00002630  2207                    2998      MOVE.L      D7,D1
00002632  6100 FB64               2999      BSR         PrintHex
00002636                          3000  
00002636  6000 EABA               3001      BRA         opdec_return
0000263A                          3002  MATCH_CC_MI_8
0000263A                          3003      ** print opcode **
0000263A  43F8 00B8               3004      LEA         pr_BCC_MI,A1
0000263E  6100 FB6C               3005      BSR         PrintString
00002642                          3006  
00002642  6100 FB70               3007      BSR         PrintSizeBYTE
00002646  43F8 0000               3008      LEA         pr_space,A1
0000264A  6100 FB60               3009      BSR         PrintString
0000264E                          3010  
0000264E                          3011      ** print address **
0000264E  6100 FB2A               3012      BSR         Get_BCC_Displacement_8bit
00002652  6100 FB38               3013      BSR         Get_Current_Address
00002656  6100 FB3C               3014      BSR         Get_BCC_Destination_Address
0000265A  2207                    3015      MOVE.L      D7,D1
0000265C  6100 FB3A               3016      BSR         PrintHex
00002660                          3017  
00002660  6000 EA90               3018      BRA         opdec_return
00002664                          3019  MATCH_CC_MI_16
00002664                          3020      ** print opcode **
00002664  43F8 00B8               3021      LEA         pr_BCC_MI,A1
00002668  6100 FB42               3022      BSR         PrintString
0000266C                          3023  
0000266C  6100 FB52               3024      BSR         PrintSizeWORD
00002670  43F8 0000               3025      LEA         pr_space,A1
00002674  6100 FB36               3026      BSR         PrintString
00002678                          3027  
00002678                          3028      ** print address **
00002678  6100 FB06               3029      BSR         Get_BCC_Displacement_16bit
0000267C  6100 FB0E               3030      BSR         Get_Current_Address
00002680  6100 FB12               3031      BSR         Get_BCC_Destination_Address
00002684  2207                    3032      MOVE.L      D7,D1
00002686  6100 FB10               3033      BSR         PrintHex
0000268A                          3034  
0000268A  6000 EA66               3035      BRA         opdec_return
0000268E                          3036  MATCH_CC_MI_32
0000268E                          3037      ** print opcode **
0000268E  43F8 00B8               3038      LEA         pr_BCC_MI,A1
00002692  6100 FB18               3039      BSR         PrintString
00002696                          3040  
00002696  6100 FB34               3041      BSR         PrintSizeLONG
0000269A  43F8 0000               3042      LEA         pr_space,A1
0000269E  6100 FB0C               3043      BSR         PrintString
000026A2                          3044  
000026A2                          3045      ** print address **
000026A2  6100 FAE2               3046      BSR         Get_BCC_Displacement_32bit
000026A6  6100 FAE4               3047      BSR         Get_Current_Address
000026AA  6100 FAE8               3048      BSR         Get_BCC_Destination_Address
000026AE  2207                    3049      MOVE.L      D7,D1
000026B0  6100 FAE6               3050      BSR         PrintHex
000026B4                          3051  
000026B4  6000 EA3C               3052      BRA         opdec_return
000026B8                          3053  MATCH_CC_GE_8
000026B8                          3054      ** print opcode **
000026B8  43F8 00A0               3055      LEA         pr_BCC_GE,A1
000026BC  6100 FAEE               3056      BSR         PrintString
000026C0                          3057  
000026C0  6100 FAF2               3058      BSR         PrintSizeBYTE
000026C4  43F8 0000               3059      LEA         pr_space,A1
000026C8  6100 FAE2               3060      BSR         PrintString
000026CC                          3061  
000026CC                          3062      ** print address **
000026CC  6100 FAAC               3063      BSR         Get_BCC_Displacement_8bit
000026D0  6100 FABA               3064      BSR         Get_Current_Address
000026D4  6100 FABE               3065      BSR         Get_BCC_Destination_Address
000026D8  2207                    3066      MOVE.L      D7,D1
000026DA  6100 FABC               3067      BSR         PrintHex
000026DE                          3068  
000026DE  6000 EA12               3069      BRA         opdec_return
000026E2                          3070  MATCH_CC_GE_16
000026E2                          3071      ** print opcode **
000026E2  43F8 00A0               3072      LEA         pr_BCC_GE,A1
000026E6  6100 FAC4               3073      BSR         PrintString
000026EA                          3074  
000026EA  6100 FAD4               3075      BSR         PrintSizeWORD
000026EE  43F8 0000               3076      LEA         pr_space,A1
000026F2  6100 FAB8               3077      BSR         PrintString
000026F6                          3078  
000026F6                          3079      ** print address **
000026F6  6100 FA88               3080      BSR         Get_BCC_Displacement_16bit
000026FA  6100 FA90               3081      BSR         Get_Current_Address
000026FE  6100 FA94               3082      BSR         Get_BCC_Destination_Address
00002702  2207                    3083      MOVE.L      D7,D1
00002704  6100 FA92               3084      BSR         PrintHex
00002708                          3085  
00002708  6000 E9E8               3086      BRA         opdec_return
0000270C                          3087  MATCH_CC_GE_32
0000270C                          3088      ** print opcode **
0000270C  43F8 00A0               3089      LEA         pr_BCC_GE,A1
00002710  6100 FA9A               3090      BSR         PrintString
00002714                          3091  
00002714  6100 FAB6               3092      BSR         PrintSizeLONG
00002718  43F8 0000               3093      LEA         pr_space,A1
0000271C  6100 FA8E               3094      BSR         PrintString
00002720                          3095  
00002720                          3096      ** print address **
00002720  6100 FA64               3097      BSR         Get_BCC_Displacement_32bit
00002724  6100 FA66               3098      BSR         Get_Current_Address
00002728  6100 FA6A               3099      BSR         Get_BCC_Destination_Address
0000272C  2207                    3100      MOVE.L      D7,D1
0000272E  6100 FA68               3101      BSR         PrintHex
00002732                          3102  
00002732  6000 E9BE               3103      BRA         opdec_return
00002736                          3104  MATCH_CC_LT_8
00002736                          3105      ** print opcode **
00002736  43F8 00B4               3106      LEA         pr_BCC_LT,A1
0000273A  6100 FA70               3107      BSR         PrintString
0000273E                          3108  
0000273E  6100 FA74               3109      BSR         PrintSizeBYTE
00002742  43F8 0000               3110      LEA         pr_space,A1
00002746  6100 FA64               3111      BSR         PrintString
0000274A                          3112  
0000274A                          3113      ** print address **
0000274A  6100 FA2E               3114      BSR         Get_BCC_Displacement_8bit
0000274E  6100 FA3C               3115      BSR         Get_Current_Address
00002752  6100 FA40               3116      BSR         Get_BCC_Destination_Address
00002756  2207                    3117      MOVE.L      D7,D1
00002758  6100 FA3E               3118      BSR         PrintHex
0000275C                          3119  
0000275C  6000 E994               3120      BRA         opdec_return
00002760                          3121  MATCH_CC_LT_16
00002760                          3122      ** print opcode **
00002760  43F8 00B4               3123      LEA         pr_BCC_LT,A1
00002764  6100 FA46               3124      BSR         PrintString
00002768                          3125  
00002768  6100 FA56               3126      BSR         PrintSizeWORD
0000276C  43F8 0000               3127      LEA         pr_space,A1
00002770  6100 FA3A               3128      BSR         PrintString
00002774                          3129  
00002774                          3130      ** print address **
00002774  6100 FA0A               3131      BSR         Get_BCC_Displacement_16bit
00002778  6100 FA12               3132      BSR         Get_Current_Address
0000277C  6100 FA16               3133      BSR         Get_BCC_Destination_Address
00002780  2207                    3134      MOVE.L      D7,D1
00002782  6100 FA14               3135      BSR         PrintHex
00002786                          3136  
00002786  6000 E96A               3137      BRA         opdec_return
0000278A                          3138  MATCH_CC_LT_32
0000278A                          3139      ** print opcode **
0000278A  43F8 00B4               3140      LEA         pr_BCC_LT,A1
0000278E  6100 FA1C               3141      BSR         PrintString
00002792                          3142  
00002792  6100 FA38               3143      BSR         PrintSizeLONG
00002796  43F8 0000               3144      LEA         pr_space,A1
0000279A  6100 FA10               3145      BSR         PrintString
0000279E                          3146  
0000279E                          3147      ** print address **
0000279E  6100 F9E6               3148      BSR         Get_BCC_Displacement_32bit
000027A2  6100 F9E8               3149      BSR         Get_Current_Address
000027A6  6100 F9EC               3150      BSR         Get_BCC_Destination_Address
000027AA  2207                    3151      MOVE.L      D7,D1
000027AC  6100 F9EA               3152      BSR         PrintHex
000027B0                          3153  
000027B0  6000 E940               3154      BRA         opdec_return
000027B4                          3155  MATCH_CC_GT_8
000027B4                          3156      ** print opcode **
000027B4  43F8 00A4               3157      LEA         pr_BCC_GT,A1
000027B8  6100 F9F2               3158      BSR         PrintString
000027BC                          3159  
000027BC  6100 F9F6               3160      BSR         PrintSizeBYTE
000027C0  43F8 0000               3161      LEA         pr_space,A1
000027C4  6100 F9E6               3162      BSR         PrintString
000027C8                          3163  
000027C8                          3164      ** print address **
000027C8  6100 F9B0               3165      BSR         Get_BCC_Displacement_8bit
000027CC  6100 F9BE               3166      BSR         Get_Current_Address
000027D0  6100 F9C2               3167      BSR         Get_BCC_Destination_Address
000027D4  2207                    3168      MOVE.L      D7,D1
000027D6  6100 F9C0               3169      BSR         PrintHex
000027DA                          3170  
000027DA  6000 E916               3171      BRA         opdec_return
000027DE                          3172  MATCH_CC_GT_16
000027DE                          3173      ** print opcode **
000027DE  43F8 00A4               3174      LEA         pr_BCC_GT,A1
000027E2  6100 F9C8               3175      BSR         PrintString
000027E6                          3176  
000027E6  6100 F9D8               3177      BSR         PrintSizeWORD
000027EA  43F8 0000               3178      LEA         pr_space,A1
000027EE  6100 F9BC               3179      BSR         PrintString
000027F2                          3180  
000027F2                          3181      ** print address **
000027F2  6100 F98C               3182      BSR         Get_BCC_Displacement_16bit
000027F6  6100 F994               3183      BSR         Get_Current_Address
000027FA  6100 F998               3184      BSR         Get_BCC_Destination_Address
000027FE  2207                    3185      MOVE.L      D7,D1
00002800  6100 F996               3186      BSR         PrintHex
00002804                          3187  
00002804  6000 E8EC               3188      BRA         opdec_return
00002808                          3189  MATCH_CC_GT_32
00002808                          3190      ** print opcode **
00002808  43F8 00A4               3191      LEA         pr_BCC_GT,A1
0000280C  6100 F99E               3192      BSR         PrintString
00002810                          3193  
00002810  6100 F9BA               3194      BSR         PrintSizeLONG
00002814  43F8 0000               3195      LEA         pr_space,A1
00002818  6100 F992               3196      BSR         PrintString
0000281C                          3197  
0000281C                          3198      ** print address **
0000281C  6100 F968               3199      BSR         Get_BCC_Displacement_32bit
00002820  6100 F96A               3200      BSR         Get_Current_Address
00002824  6100 F96E               3201      BSR         Get_BCC_Destination_Address
00002828  2207                    3202      MOVE.L      D7,D1
0000282A  6100 F96C               3203      BSR         PrintHex
0000282E                          3204  
0000282E  6000 E8C2               3205      BRA         opdec_return
00002832                          3206  MATCH_CC_LE_8
00002832                          3207      ** print opcode **
00002832  43F8 00AC               3208      LEA         pr_BCC_LE,A1
00002836  6100 F974               3209      BSR         PrintString
0000283A                          3210  
0000283A  6100 F978               3211      BSR         PrintSizeBYTE
0000283E  43F8 0000               3212      LEA         pr_space,A1
00002842  6100 F968               3213      BSR         PrintString
00002846                          3214  
00002846                          3215      ** print address **
00002846  6100 F932               3216      BSR         Get_BCC_Displacement_8bit
0000284A  6100 F940               3217      BSR         Get_Current_Address
0000284E  6100 F944               3218      BSR         Get_BCC_Destination_Address
00002852  2207                    3219      MOVE.L      D7,D1
00002854  6100 F942               3220      BSR         PrintHex
00002858                          3221  
00002858  6000 E898               3222      BRA         opdec_return
0000285C                          3223  MATCH_CC_LE_16
0000285C                          3224      ** print opcode **
0000285C  43F8 00AC               3225      LEA         pr_BCC_LE,A1
00002860  6100 F94A               3226      BSR         PrintString
00002864                          3227  
00002864  6100 F95A               3228      BSR         PrintSizeWORD
00002868  43F8 0000               3229      LEA         pr_space,A1
0000286C  6100 F93E               3230      BSR         PrintString
00002870                          3231  
00002870                          3232      ** print address **
00002870  6100 F90E               3233      BSR         Get_BCC_Displacement_16bit
00002874  6100 F916               3234      BSR         Get_Current_Address
00002878  6100 F91A               3235      BSR         Get_BCC_Destination_Address
0000287C  2207                    3236      MOVE.L      D7,D1
0000287E  6100 F918               3237      BSR         PrintHex
00002882                          3238  
00002882  6000 E86E               3239      BRA         opdec_return
00002886                          3240  MATCH_CC_LE_32
00002886                          3241      ** print opcode **
00002886  43F8 00AC               3242      LEA         pr_BCC_LE,A1
0000288A  6100 F920               3243      BSR         PrintString
0000288E                          3244  
0000288E  6100 F93C               3245      BSR         PrintSizeLONG
00002892  43F8 0000               3246      LEA         pr_space,A1
00002896  6100 F914               3247      BSR         PrintString
0000289A                          3248  
0000289A                          3249      ** print address **
0000289A  6100 F8EA               3250      BSR         Get_BCC_Displacement_32bit
0000289E  6100 F8EC               3251      BSR         Get_Current_Address
000028A2  6100 F8F0               3252      BSR         Get_BCC_Destination_Address
000028A6  2207                    3253      MOVE.L      D7,D1
000028A8  6100 F8EE               3254      BSR         PrintHex
000028AC                          3255  
000028AC  6000 E844               3256      BRA         opdec_return
000028B0                          3257  ERROR
000028B0  43F8 008E               3258      LEA         pr_ERROR,A1
000028B4  6100 F8F6               3259      BSR         PrintString
000028B8  6000 E838               3260      BRA         opdec_return
000028BC                          3261  
000028BC                          3262  
000028BC                          3263  
000028BC                          3264  
000028BC                          3265  -------------------- end include --------------------
000028BC                          3266                  INCLUDE 'arsany_opcodes.x68'
000028BC                          3267  MATCH_MOVEA_W
000028BC                          3268      ** Move command size into D1
000028BC  123C 0002               3269      MOVE.B      #2,D1
000028C0                          3270      ** Print command
000028C0  103C 000E               3271      MOVE.B      #14,D0
000028C4  43F8 0031               3272      LEA         pr_MOVEA,A1
000028C8  4E4F                    3273      TRAP        #15
000028CA                          3274      ** Print size
000028CA  43F8 0019               3275      LEA         pr_WORD,A1
000028CE  4E4F                    3276      TRAP        #15
000028D0                          3277      
000028D0  6000 0016               3278      BRA         print_movea
000028D4                          3279  MATCH_MOVEA_L
000028D4                          3280      ** Move command size into D1
000028D4  123C 0004               3281      MOVE.B      #4,D1
000028D8                          3282      ** Print command
000028D8  103C 000E               3283      MOVE.B      #14,D0
000028DC  43F8 0031               3284      LEA         pr_MOVEA,A1
000028E0  4E4F                    3285      TRAP        #15
000028E2                          3286      ** Print size
000028E2  43F8 001C               3287      LEA         pr_LONG,A1
000028E6  4E4F                    3288      TRAP        #15
000028E8                          3289  print_movea
000028E8                          3290      ** Print space
000028E8  43F8 0000               3291      LEA         pr_space,A1
000028EC  4E4F                    3292      TRAP        #15
000028EE                          3293      ** Decode right side ea
000028EE  1002                    3294      MOVE.B      D2,D0
000028F0  0200 003F               3295      ANDI.B      #%00111111,D0
000028F4  4EB8 1686               3296      JSR         EADecoder
000028F8                          3297      ** Add comma
000028F8  103C 000E               3298      MOVE.B      #14,D0
000028FC  43F8 0014               3299      LEA         pr_comma,A1
00002900  4E4F                    3300      TRAP        #15
00002902                          3301      ** Decode left side ea
00002902  3002                    3302      MOVE.W      D2,D0
00002904  0240 0FC0               3303      ANDI.W      #%0000111111000000,D0
00002908  EC88                    3304      LSR.L       #6,D0
0000290A  4EB8 166E               3305      JSR         EADecoder_left
0000290E                          3306      
0000290E  6000 E7E2               3307      BRA         opdec_return
00002912                          3308      
00002912                          3309      
00002912                          3310  MATCH_ADDA_W
00002912                          3311      ** Move command size into D1
00002912  123C 0002               3312      MOVE.B      #2,D1
00002916                          3313      ** Print command
00002916  103C 000E               3314      MOVE.B      #14,D0
0000291A  43F8 003D               3315      LEA         pr_ADDA,A1
0000291E  4E4F                    3316      TRAP        #15
00002920                          3317      ** Print size
00002920  43F8 0019               3318      LEA         pr_WORD,A1
00002924  4E4F                    3319      TRAP        #15
00002926                          3320      
00002926  6000 0016               3321      BRA         print_adda
0000292A                          3322  MATCH_ADDA_L
0000292A                          3323      ** Move command size into D1
0000292A  123C 0004               3324      MOVE.B      #4,D1
0000292E                          3325      ** Print command
0000292E  103C 000E               3326      MOVE.B      #14,D0
00002932  43F8 003D               3327      LEA         pr_ADDA,A1
00002936  4E4F                    3328      TRAP        #15
00002938                          3329      ** Print size
00002938  43F8 001C               3330      LEA         pr_LONG,A1
0000293C  4E4F                    3331      TRAP        #15
0000293E                          3332  print_adda
0000293E                          3333      ** Print space
0000293E  43F8 0002               3334      LEA         pr_space2,A1
00002942  4E4F                    3335      TRAP        #15
00002944                          3336      ** Decode right side ea
00002944  1002                    3337      MOVE.B      D2,D0
00002946  0200 003F               3338      ANDI.B      #%00111111,D0
0000294A  4EB8 1686               3339      JSR         EADecoder
0000294E                          3340      ** Add comma
0000294E  103C 000E               3341      MOVE.B      #14,D0
00002952  43F8 0014               3342      LEA         pr_comma,A1
00002956  4E4F                    3343      TRAP        #15
00002958                          3344      ** Decode left side ea
00002958  3002                    3345      MOVE.W      D2,D0
0000295A  0240 0E00               3346      ANDI.W      #%0000111000000000,D0
0000295E  0040 0040               3347      ORI.W       #%0000000001000000,D0
00002962  EC88                    3348      LSR.L       #6,D0
00002964  4EB8 166E               3349      JSR         EADecoder_left
00002968                          3350      
00002968  6000 E788               3351      BRA         opdec_return
0000296C                          3352      
0000296C                          3353      
0000296C                          3354  MATCH_MULS_W
0000296C                          3355      ** Move command size into D1
0000296C  123C 0002               3356      MOVE.B      #2,D1
00002970                          3357      ** Print command
00002970  103C 000E               3358      MOVE.B      #14,D0
00002974  43F8 0042               3359      LEA         pr_MULS,A1
00002978  4E4F                    3360      TRAP        #15
0000297A                          3361      ** Print size
0000297A  43F8 0019               3362      LEA         pr_WORD,A1
0000297E  4E4F                    3363      TRAP        #15
00002980                          3364      ** Print space
00002980  43F8 0002               3365      LEA         pr_space2,A1
00002984  4E4F                    3366      TRAP        #15
00002986                          3367      ** Decode right side ea
00002986  1002                    3368      MOVE.B      D2,D0
00002988  0200 003F               3369      ANDI.B      #%00111111,D0
0000298C  4EB8 1686               3370      JSR         EADecoder
00002990                          3371      ** Add comma
00002990  103C 000E               3372      MOVE.B      #14,D0
00002994  43F8 0014               3373      LEA         pr_comma,A1
00002998  4E4F                    3374      TRAP        #15
0000299A                          3375      ** Decode left side ea
0000299A  3002                    3376      MOVE.W      D2,D0
0000299C  0240 0E00               3377      ANDI.W      #%0000111000000000,D0
000029A0  EC88                    3378      LSR.L       #6,D0
000029A2  4EB8 166E               3379      JSR         EADecoder_left    
000029A6                          3380      
000029A6  6000 E74A               3381      BRA         opdec_return
000029AA                          3382      
000029AA                          3383      
000029AA                          3384  MATCH_RTS
000029AA  43F8 004B               3385      LEA         pr_RTS,A1
000029AE  103C 000E               3386      MOVE.B      #14,D0
000029B2  4E4F                    3387      TRAP        #15
000029B4                          3388  
000029B4  6000 E73C               3389      BRA         opdec_return
000029B8                          3390      
000029B8                          3391      
000029B8                          3392  MATCH_CMP_B
000029B8                          3393      ** Move command size into D1
000029B8  123C 0002               3394      MOVE.B      #2,D1
000029BC                          3395      ** Print command
000029BC  103C 000E               3396      MOVE.B      #14,D0
000029C0  43F8 004F               3397      LEA         pr_CMP,A1
000029C4  4E4F                    3398      TRAP        #15
000029C6                          3399      ** Print size
000029C6  43F8 0016               3400      LEA         pr_BYTE,A1
000029CA  4E4F                    3401      TRAP        #15
000029CC                          3402      
000029CC  6000 002E               3403      BRA         print_cmp
000029D0                          3404  MATCH_CMP_W
000029D0                          3405      ** Move command size into D1
000029D0  123C 0002               3406      MOVE.B      #2,D1
000029D4                          3407      ** Print command
000029D4  103C 000E               3408      MOVE.B      #14,D0
000029D8  43F8 004F               3409      LEA         pr_CMP,A1
000029DC  4E4F                    3410      TRAP        #15
000029DE                          3411      ** Print size
000029DE  43F8 0019               3412      LEA         pr_WORD,A1
000029E2  4E4F                    3413      TRAP        #15
000029E4                          3414      
000029E4  6000 0016               3415      BRA         print_cmp
000029E8                          3416  MATCH_CMP_L
000029E8                          3417      ** Move command size into D1
000029E8  123C 0004               3418      MOVE.B      #4,D1
000029EC                          3419      ** Print command
000029EC  103C 000E               3420      MOVE.B      #14,D0
000029F0  43F8 004F               3421      LEA         pr_CMP,A1
000029F4  4E4F                    3422      TRAP        #15
000029F6                          3423      ** Print size
000029F6  43F8 001C               3424      LEA         pr_LONG,A1
000029FA  4E4F                    3425      TRAP        #15
000029FC                          3426  print_cmp
000029FC                          3427      ** Print space
000029FC  43F8 0005               3428      LEA         pr_space3,A1
00002A00  4E4F                    3429      TRAP        #15
00002A02  4240                    3430      CLR         D0
00002A04                          3431      ** Decode right side ea
00002A04  1002                    3432      MOVE.B      D2,D0
00002A06  0200 003F               3433      ANDI.B      #%00111111,D0
00002A0A  4EB8 1686               3434      JSR         EADecoder
00002A0E                          3435      ** Add comma
00002A0E  103C 000E               3436      MOVE.B      #14,D0
00002A12  43F8 0014               3437      LEA         pr_comma,A1
00002A16  4E4F                    3438      TRAP        #15
00002A18                          3439      ** Decode left side ea
00002A18  3002                    3440      MOVE.W      D2,D0
00002A1A  0240 0E00               3441      ANDI.W      #%0000111000000000,D0
00002A1E  EC88                    3442      LSR.L       #6,D0
00002A20  4EB8 166E               3443      JSR         EADecoder_left   
00002A24                          3444      
00002A24  6000 E6CC               3445      BRA         opdec_return
00002A28                          3446      
00002A28                          3447      
00002A28                          3448  MATCH_JSR
00002A28                          3449      ** Print command
00002A28  103C 000E               3450      MOVE.B      #14,D0
00002A2C  43F8 0053               3451      LEA         pr_JSR,A1
00002A30  4E4F                    3452      TRAP        #15
00002A32                          3453      ** Print space
00002A32  43F8 000E               3454      LEA         pr_space5,A1
00002A36  4E4F                    3455      TRAP        #15
00002A38                          3456      ** Decode right side ea
00002A38  1002                    3457      MOVE.B      D2,D0
00002A3A  0200 003F               3458      ANDI.B      #%00111111,D0
00002A3E  4EB8 1686               3459      JSR         EADecoder 
00002A42                          3460      
00002A42  6000 E6AE               3461      BRA         opdec_return
00002A46                          3462      
00002A46                          3463      
00002A46                          3464  MATCH_CLR_B 
00002A46                          3465      ** Move command size into D1
00002A46  123C 0002               3466      MOVE.B      #2,D1
00002A4A                          3467      ** Print command
00002A4A  103C 000E               3468      MOVE.B      #14,D0
00002A4E  43F8 0047               3469      LEA         pr_CLR,A1
00002A52  4E4F                    3470      TRAP        #15
00002A54                          3471      ** Print size
00002A54  43F8 0016               3472      LEA         pr_BYTE,A1
00002A58  4E4F                    3473      TRAP        #15
00002A5A                          3474      
00002A5A  6000 002E               3475      BRA         print_clr
00002A5E                          3476  MATCH_CLR_W
00002A5E                          3477      ** Move command size into D1
00002A5E  123C 0002               3478      MOVE.B      #2,D1
00002A62                          3479      ** Print command
00002A62  103C 000E               3480      MOVE.B      #14,D0
00002A66  43F8 0047               3481      LEA         pr_CLR,A1
00002A6A  4E4F                    3482      TRAP        #15
00002A6C                          3483      ** Print size
00002A6C  43F8 0019               3484      LEA         pr_WORD,A1
00002A70  4E4F                    3485      TRAP        #15
00002A72                          3486      
00002A72  6000 0016               3487      BRA         print_clr
00002A76                          3488  MATCH_CLR_L
00002A76                          3489      ** Move command size into D1
00002A76  123C 0004               3490      MOVE.B      #4,D1
00002A7A                          3491      ** Print command
00002A7A  103C 000E               3492      MOVE.B      #14,D0
00002A7E  43F8 0047               3493      LEA         pr_CLR,A1
00002A82  4E4F                    3494      TRAP        #15
00002A84                          3495      ** Print size
00002A84  43F8 001C               3496      LEA         pr_LONG,A1
00002A88  4E4F                    3497      TRAP        #15
00002A8A                          3498  print_clr
00002A8A                          3499      ** Print space
00002A8A  43F8 0005               3500      LEA         pr_space3,A1
00002A8E  4E4F                    3501      TRAP        #15
00002A90                          3502      ** Decode right side ea
00002A90  1002                    3503      MOVE.B      D2,D0
00002A92  0200 003F               3504      ANDI.B      #%00111111,D0
00002A96  4EB8 1686               3505      JSR         EADecoder 
00002A9A                          3506      
00002A9A  6000 E656               3507      BRA         opdec_return
00002A9E                          3508      
00002A9E                          3509      
00002A9E                          3510  MATCH_AND_DN_B
00002A9E                          3511      ** Move command size into D1
00002A9E  123C 0002               3512      MOVE.B      #2,D1
00002AA2                          3513      ** Print command
00002AA2  103C 000E               3514      MOVE.B      #14,D0
00002AA6  43F8 0057               3515      LEA         pr_AND,A1
00002AAA  4E4F                    3516      TRAP        #15
00002AAC                          3517      ** Print size
00002AAC  43F8 0016               3518      LEA         pr_BYTE,A1
00002AB0  4E4F                    3519      TRAP        #15
00002AB2                          3520      
00002AB2  6000 002E               3521      BRA         print_and_dn
00002AB6                          3522  MATCH_AND_DN_W
00002AB6                          3523      ** Move command size into D1
00002AB6  123C 0002               3524      MOVE.B      #2,D1
00002ABA                          3525      ** Print command
00002ABA  103C 000E               3526      MOVE.B      #14,D0
00002ABE  43F8 0057               3527      LEA         pr_AND,A1
00002AC2  4E4F                    3528      TRAP        #15
00002AC4                          3529      ** Print size
00002AC4  43F8 0019               3530      LEA         pr_WORD,A1
00002AC8  4E4F                    3531      TRAP        #15
00002ACA                          3532      
00002ACA  6000 0016               3533      BRA         print_and_dn
00002ACE                          3534  MATCH_AND_DN_L
00002ACE                          3535      ** Move command size into D1
00002ACE  123C 0004               3536      MOVE.B      #4,D1
00002AD2                          3537      ** Print command
00002AD2  103C 000E               3538      MOVE.B      #14,D0
00002AD6  43F8 0057               3539      LEA         pr_AND,A1
00002ADA  4E4F                    3540      TRAP        #15
00002ADC                          3541      ** Print size
00002ADC  43F8 001C               3542      LEA         pr_LONG,A1
00002AE0  4E4F                    3543      TRAP        #15
00002AE2                          3544  print_and_dn
00002AE2                          3545      ** Print space
00002AE2  43F8 0005               3546      LEA         pr_space3,A1
00002AE6  4E4F                    3547      TRAP        #15
00002AE8                          3548      ** Decode right side ea
00002AE8  1002                    3549      MOVE.B      D2,D0
00002AEA  0200 003F               3550      ANDI.B      #%00111111,D0
00002AEE  4EB8 1686               3551      JSR         EADecoder
00002AF2                          3552      ** Add comma
00002AF2  103C 000E               3553      MOVE.B      #14,D0
00002AF6  43F8 0014               3554      LEA         pr_comma,A1
00002AFA  4E4F                    3555      TRAP        #15
00002AFC                          3556      ** Decode left side ea
00002AFC  3002                    3557      MOVE.W      D2,D0
00002AFE  0240 0E00               3558      ANDI.W      #%0000111000000000,D0
00002B02  EC88                    3559      LSR.L       #6,D0
00002B04  4EB8 166E               3560      JSR         EADecoder_left  
00002B08                          3561      
00002B08  6000 E5E8               3562      BRA         opdec_return
00002B0C                          3563      
00002B0C                          3564      
00002B0C                          3565  MATCH_AND_EA_B
00002B0C                          3566      ** Move command size into D1
00002B0C  123C 0002               3567      MOVE.B      #2,D1
00002B10                          3568      ** Print command
00002B10  103C 000E               3569      MOVE.B      #14,D0
00002B14  43F8 0057               3570      LEA         pr_AND,A1
00002B18  4E4F                    3571      TRAP        #15
00002B1A                          3572      ** Print size
00002B1A  43F8 0016               3573      LEA         pr_BYTE,A1
00002B1E  4E4F                    3574      TRAP        #15
00002B20                          3575      
00002B20  6000 002E               3576      BRA         print_and_ea
00002B24                          3577  MATCH_AND_EA_W
00002B24                          3578      ** Move command size into D1
00002B24  123C 0002               3579      MOVE.B      #2,D1
00002B28                          3580      ** Print command
00002B28  103C 000E               3581      MOVE.B      #14,D0
00002B2C  43F8 0057               3582      LEA         pr_AND,A1
00002B30  4E4F                    3583      TRAP        #15
00002B32                          3584      ** Print size
00002B32  43F8 0019               3585      LEA         pr_WORD,A1
00002B36  4E4F                    3586      TRAP        #15
00002B38                          3587      
00002B38  6000 0016               3588      BRA         print_and_ea
00002B3C                          3589  MATCH_AND_EA_L
00002B3C                          3590      ** Move command size into D1
00002B3C  123C 0004               3591      MOVE.B      #4,D1
00002B40                          3592      ** Print command
00002B40  103C 000E               3593      MOVE.B      #14,D0
00002B44  43F8 0057               3594      LEA         pr_AND,A1
00002B48  4E4F                    3595      TRAP        #15
00002B4A                          3596      ** Print size
00002B4A  43F8 001C               3597      LEA         pr_LONG,A1
00002B4E  4E4F                    3598      TRAP        #15
00002B50                          3599  print_and_ea
00002B50                          3600      ** Print space
00002B50  43F8 0005               3601      LEA         pr_space3,A1
00002B54  4E4F                    3602      TRAP        #15
00002B56                          3603      ** Decode left side ea
00002B56  3002                    3604      MOVE.W      D2,D0
00002B58  0240 0E00               3605      ANDI.W      #%0000111000000000,D0
00002B5C  EC88                    3606      LSR.L       #6,D0
00002B5E  4EB8 166E               3607      JSR         EADecoder_left
00002B62                          3608      ** Add comma
00002B62  103C 000E               3609      MOVE.B      #14,D0
00002B66  43F8 0014               3610      LEA         pr_comma,A1
00002B6A  4E4F                    3611      TRAP        #15
00002B6C                          3612      ** Decode right side ea
00002B6C  1002                    3613      MOVE.B      D2,D0
00002B6E  0200 003F               3614      ANDI.B      #%00111111,D0
00002B72  4EB8 1686               3615      JSR         EADecoder
00002B76                          3616      
00002B76  6000 E57A               3617      BRA         opdec_return
00002B7A                          3618      
00002B7A                          3619      
00002B7A                          3620  MATCH_LEA
00002B7A                          3621      ** Move command size into D1
00002B7A  123C 0004               3622      MOVE.B      #4,D1
00002B7E                          3623      ** Print command
00002B7E  103C 000E               3624      MOVE.B      #14,D0
00002B82  43F8 005E               3625      LEA         pr_LEA,A1
00002B86  4E4F                    3626      TRAP        #15
00002B88                          3627      ** Print space
00002B88  43F8 000E               3628      LEA         pr_space5,A1
00002B8C  4E4F                    3629      TRAP        #15
00002B8E                          3630      ** Decode right side ea
00002B8E  1002                    3631      MOVE.B      D2,D0
00002B90  0200 003F               3632      ANDI.B      #%00111111,D0
00002B94  4EB8 1686               3633      JSR         EADecoder
00002B98                          3634      ** Add comma
00002B98  103C 000E               3635      MOVE.B      #14,D0
00002B9C  43F8 0014               3636      LEA         pr_comma,A1
00002BA0  4E4F                    3637      TRAP        #15
00002BA2                          3638      ** Decode left side ea
00002BA2  3002                    3639      MOVE.W      D2,D0
00002BA4  0240 0E40               3640      ANDI.W      #%0000111001000000,D0
00002BA8  EC88                    3641      LSR.L       #6,D0
00002BAA  4EB8 166E               3642      JSR         EADecoder_left
00002BAE                          3643      
00002BAE  6000 E542               3644      BRA         opdec_return
00002BB2                          3645      
00002BB2                          3646  MATCH_OR_DN_B
00002BB2                          3647      ** Move command size into D1
00002BB2  123C 0002               3648      MOVE.B      #2,D1
00002BB6                          3649      ** Print command
00002BB6  103C 000E               3650      MOVE.B      #14,D0
00002BBA  43F8 005B               3651      LEA         pr_OR,A1
00002BBE  4E4F                    3652      TRAP        #15
00002BC0                          3653      ** Print size
00002BC0  43F8 0016               3654      LEA         pr_BYTE,A1
00002BC4  4E4F                    3655      TRAP        #15
00002BC6                          3656      
00002BC6  6000 002E               3657      BRA         print_or_dn
00002BCA                          3658  MATCH_OR_DN_W
00002BCA                          3659      ** Move command size into D1
00002BCA  123C 0002               3660      MOVE.B      #2,D1
00002BCE                          3661      ** Print command
00002BCE  103C 000E               3662      MOVE.B      #14,D0
00002BD2  43F8 005B               3663      LEA         pr_OR,A1
00002BD6  4E4F                    3664      TRAP        #15
00002BD8                          3665      ** Print size
00002BD8  43F8 0019               3666      LEA         pr_WORD,A1
00002BDC  4E4F                    3667      TRAP        #15
00002BDE                          3668      
00002BDE  6000 0016               3669      BRA         print_or_dn
00002BE2                          3670  MATCH_OR_DN_L
00002BE2                          3671      ** Move command size into D1
00002BE2  123C 0004               3672      MOVE.B      #4,D1
00002BE6                          3673      ** Print command
00002BE6  103C 000E               3674      MOVE.B      #14,D0
00002BEA  43F8 005B               3675      LEA         pr_OR,A1
00002BEE  4E4F                    3676      TRAP        #15
00002BF0                          3677      ** Print size
00002BF0  43F8 001C               3678      LEA         pr_LONG,A1
00002BF4  4E4F                    3679      TRAP        #15
00002BF6                          3680  print_or_dn
00002BF6                          3681      ** Print space
00002BF6  43F8 0009               3682      LEA         pr_space4,A1
00002BFA  4E4F                    3683      TRAP        #15
00002BFC                          3684      ** Decode right side ea
00002BFC  1002                    3685      MOVE.B      D2,D0
00002BFE  0200 003F               3686      ANDI.B      #%00111111,D0
00002C02  4EB8 1686               3687      JSR         EADecoder
00002C06                          3688      ** Add comma
00002C06  103C 000E               3689      MOVE.B      #14,D0
00002C0A  43F8 0014               3690      LEA         pr_comma,A1
00002C0E  4E4F                    3691      TRAP        #15
00002C10                          3692      ** Decode left side ea
00002C10  3002                    3693      MOVE.W      D2,D0
00002C12  0240 0E00               3694      ANDI.W      #%0000111000000000,D0
00002C16  EC88                    3695      LSR.L       #6,D0
00002C18  4EB8 166E               3696      JSR         EADecoder_left  
00002C1C                          3697      
00002C1C  6000 E4D4               3698      BRA         opdec_return    
00002C20                          3699  MATCH_OR_EA_B
00002C20                          3700      ** Move command size into D1
00002C20  123C 0002               3701      MOVE.B      #2,D1
00002C24                          3702      ** Print command
00002C24  103C 000E               3703      MOVE.B      #14,D0
00002C28  43F8 005B               3704      LEA         pr_OR,A1
00002C2C  4E4F                    3705      TRAP        #15
00002C2E                          3706      ** Print size
00002C2E  43F8 0016               3707      LEA         pr_BYTE,A1
00002C32  4E4F                    3708      TRAP        #15
00002C34                          3709      
00002C34  6000 002E               3710      BRA         print_or_ea
00002C38                          3711  MATCH_OR_EA_W
00002C38                          3712      ** Move command size into D1
00002C38  123C 0002               3713      MOVE.B      #2,D1
00002C3C                          3714      ** Print command
00002C3C  103C 000E               3715      MOVE.B      #14,D0
00002C40  43F8 005B               3716      LEA         pr_OR,A1
00002C44  4E4F                    3717      TRAP        #15
00002C46                          3718      ** Print size
00002C46  43F8 0019               3719      LEA         pr_WORD,A1
00002C4A  4E4F                    3720      TRAP        #15
00002C4C                          3721      
00002C4C  6000 0016               3722      BRA         print_or_ea
00002C50                          3723  MATCH_OR_EA_L
00002C50                          3724      ** Move command size into D1
00002C50  123C 0004               3725      MOVE.B      #4,D1
00002C54                          3726      ** Print command
00002C54  103C 000E               3727      MOVE.B      #14,D0
00002C58  43F8 005B               3728      LEA         pr_OR,A1
00002C5C  4E4F                    3729      TRAP        #15
00002C5E                          3730      ** Print size
00002C5E  43F8 001C               3731      LEA         pr_LONG,A1
00002C62  4E4F                    3732      TRAP        #15
00002C64                          3733  print_or_ea
00002C64                          3734      ** Print space
00002C64  43F8 0009               3735      LEA         pr_space4,A1
00002C68  4E4F                    3736      TRAP        #15
00002C6A                          3737      ** Decode left side ea
00002C6A  3002                    3738      MOVE.W      D2,D0
00002C6C  0240 0E00               3739      ANDI.W      #%0000111000000000,D0
00002C70  EC88                    3740      LSR.L       #6,D0
00002C72  4EB8 166E               3741      JSR         EADecoder_left
00002C76                          3742      ** Add comma
00002C76  103C 000E               3743      MOVE.B      #14,D0
00002C7A  43F8 0014               3744      LEA         pr_comma,A1
00002C7E  4E4F                    3745      TRAP        #15
00002C80                          3746      ** Decode right side ea
00002C80  1002                    3747      MOVE.B      D2,D0
00002C82  0200 003F               3748      ANDI.B      #%00111111,D0
00002C86  4EB8 1686               3749      JSR         EADecoder
00002C8A                          3750      
00002C8A  6000 E466               3751      BRA         opdec_return
00002C8E                          3752  
00002C8E                          3753  
00002C8E                          3754  -------------------- end include --------------------
00002C8E                          3755  
00002C8E                          3756  
00002C8E                          3757  
00002C8E                          3758  
00002C8E                          3759  
00002C8E                          3760  -------------------- end include --------------------
00002C8E                          3761  
00002C8E                          3762          END     start

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
A2H                 108E
ABS_LONG            39
ABS_WORD            38
ADDA_L              7
ADDA_W              3
ADDBYTELOOP         10B2
ADDBYTES            10AA
ADDI_B              18
ADDI_L              1A
ADDI_RETURN         10EE
ADDI_W              19
ADDQ                5
ADDQ_B              0
ADDQ_L              2
ADDQ_W              1
ADD_ADDA            D
ADD_TO_EA_B         4
ADD_TO_EA_L         6
ADD_TO_EA_W         5
ADD_TO_REG_B        0
ADD_TO_REG_L        2
ADD_TO_REG_W        1
AN                  8
AS                  0
ASL                 383
ASR                 387
BCC                 6
BCC_16              0
BCC_32              FF
BIT_REVERSAL        1F92
CASCADE_A1          1EDC
CASCADE_A2          1EF4
CASCADE_A3          1F0C
CASCADE_A4          1F24
CASCADE_A5          1F3C
CASCADE_A6          1F54
CASCADE_A7          1F6C
CASCADE_D1          1D20
CASCADE_D2          1D38
CASCADE_D3          1D50
CASCADE_D4          1D68
CASCADE_D5          1D80
CASCADE_D6          1D98
CASCADE_D7          1DB0
CC_CC               4
CC_CS               5
CC_EQ               7
CC_F                1
CC_GE               C
CC_GT               E
CC_HI               2
CC_LE               F
CC_LS               3
CC_LT               D
CC_MI               B
CC_NE               6
CC_PL               A
CC_T                0
CC_VC               8
CC_VS               9
CHECK_ADDI          15CC
CHECK_ADDQ          15AA
CHECK_ADD_ADDA      1554
CHECK_BCC           11EC
CHECK_BCC_16        12AC
CHECK_BCC_32        1354
CHECK_BCC_8         1204
CHECK_CMP           1410
CHECK_DIVU_OR       14D6
CHECK_FOUR_BIT_SIG  1164
CHECK_MOVEA_L_AND_MOVE_L  165C
CHECK_MOVEA_W_AND_MOVE_W  1632
CHECK_MOVEM         1524
CHECK_MULS_LEA_CLR_JSR_RTS  1436
CHECK_MULS_W_AND    1488
CHECK_NOP           1158
CHECK_SHIFT         1FF2
CHECK_SHIFT_AND_ROTATE  1118
CHECK_SUB           15F2
CLR_B               108
CLR_L               10A
CLR_SCRN            1066
CLR_W               109
CMP                 B
CMP_B               0
CMP_L               2
CMP_W               1
CONV_END            10BA
CR                  D
DEC_ABS_LONG        1736
DEC_ABS_WORD        172A
DEC_AN              174E
DEC_DN              1742
DEC_IMMEDIATE       170E
DEC_INDIRECT        175A
DEC_POST_INC        176E
DEC_PRE_DEC         1788
DEC_RETURN          16F0
DIVU                3
DIVU_OR             8
DN                  0
DN_B                0
DN_L                2
DN_W                1
DONE                1082
DONE_MSG            150
EADECODER           1686
EADECODER_LEFT      166E
EA_B                4
EA_L                6
EA_W                5
ERROR               28B0
ERROR_MSG           134
EXECUTEPRINTSHIFTDIRECTION  208A
EXECUTEPRINTSHIFTSIZE  20C4
EXECUTESHIFTOPCODEPRINT  2062
FOUR_BIT_RETURN     10EA
GETSHIFTDESTREG     2018
GET_BCC_DESTINATION_ADDRESS  2194
GET_BCC_DISPLACEMENT_16BIT  2180
GET_BCC_DISPLACEMENT_32BIT  2186
GET_BCC_DISPLACEMENT_8BIT  217A
GET_COUNT_REGISTER_VAL  2102
GET_CURRENT_ADDRESS  218C
GET_DIRECTION       212A
GET_IS_REGISTER_OR_IMMEDIATE  213E
GET_SHIFT_OPCODE    2156
GET_SIZE            2116
IMMEDIATE           3C
IMM_SKIP            1708
IMM_WORD            1726
INDIRECT            10
INPUT_ERROR         105A
ISOLATE_CC_CODE_FOR_BCC  13FC
ISOLATE_OP_CODE     1644
JSR                 13A
L                   1
LEA                 7
LEFT_SKIP           168A
LF                  A
LOOP_START          102A
LS                  1
LSL                 38F
LSR                 38B
MATCH_ADDA_L        292A
MATCH_ADDA_W        2912
MATCH_ADDI_B        1860
MATCH_ADDI_L        1890
MATCH_ADDI_W        1878
MATCH_ADDQ_B        1A42
MATCH_ADDQ_L        1A72
MATCH_ADDQ_W        1A5A
MATCH_ADD_TO_EA_B   1988
MATCH_ADD_TO_EA_L   19B8
MATCH_ADD_TO_EA_W   19A0
MATCH_ADD_TO_REG_B  18CE
MATCH_ADD_TO_REG_L  18FE
MATCH_ADD_TO_REG_W  18E6
MATCH_AND_DN_B      2A9E
MATCH_AND_DN_L      2ACE
MATCH_AND_DN_W      2AB6
MATCH_AND_EA_B      2B0C
MATCH_AND_EA_L      2B3C
MATCH_AND_EA_W      2B24
MATCH_ASL           2174
MATCH_ASR           2172
MATCH_CC_CC_16      22F2
MATCH_CC_CC_32      231C
MATCH_CC_CC_8       22C8
MATCH_CC_CS_16      2370
MATCH_CC_CS_32      239A
MATCH_CC_CS_8       2346
MATCH_CC_EQ_16      246C
MATCH_CC_EQ_32      2496
MATCH_CC_EQ_8       2442
MATCH_CC_F_16       21E0
MATCH_CC_F_32       21E2
MATCH_CC_F_8        21DE
MATCH_CC_GE_16      26E2
MATCH_CC_GE_32      270C
MATCH_CC_GE_8       26B8
MATCH_CC_GT_16      27DE
MATCH_CC_GT_32      2808
MATCH_CC_GT_8       27B4
MATCH_CC_HI_16      2200
MATCH_CC_HI_32      2224
MATCH_CC_HI_8       21E4
MATCH_CC_LE_16      285C
MATCH_CC_LE_32      2886
MATCH_CC_LE_8       2832
MATCH_CC_LS_16      2274
MATCH_CC_LS_32      229E
MATCH_CC_LS_8       224A
MATCH_CC_LT_16      2760
MATCH_CC_LT_32      278A
MATCH_CC_LT_8       2736
MATCH_CC_MI_16      2664
MATCH_CC_MI_32      268E
MATCH_CC_MI_8       263A
MATCH_CC_NE_16      23EE
MATCH_CC_NE_32      2418
MATCH_CC_NE_8       23C4
MATCH_CC_PL_16      25E6
MATCH_CC_PL_32      2610
MATCH_CC_PL_8       25BC
MATCH_CC_T_16       21DA
MATCH_CC_T_32       21DC
MATCH_CC_T_8        21D8
MATCH_CC_VC_16      24EA
MATCH_CC_VC_32      2514
MATCH_CC_VC_8       24C0
MATCH_CC_VS_16      2568
MATCH_CC_VS_32      2592
MATCH_CC_VS_8       253E
MATCH_CLR_B         2A46
MATCH_CLR_L         2A76
MATCH_CLR_W         2A5E
MATCH_CMP_B         29B8
MATCH_CMP_L         29E8
MATCH_CMP_W         29D0
MATCH_DIVU          1AC6
MATCH_JSR           2A28
MATCH_LEA           2B7A
MATCH_LSL           216E
MATCH_LSR           2170
MATCH_MOVEA_L       28D4
MATCH_MOVEA_W       28BC
MATCH_MOVEM_TO_MEM_L  1B1C
MATCH_MOVEM_TO_MEM_W  1B04
MATCH_MOVEM_TO_REG_L  1B6A
MATCH_MOVEM_TO_REG_W  1B52
MATCH_MOVEQ         1822
MATCH_MOVE_B        17B0
MATCH_MOVE_L        17E0
MATCH_MOVE_W        17C8
MATCH_MULS_L        166C
MATCH_MULS_W        296C
MATCH_NOP           17A2
MATCH_OR_DN_B       2BB2
MATCH_OR_DN_L       2BE2
MATCH_OR_DN_W       2BCA
MATCH_OR_EA_B       2C20
MATCH_OR_EA_L       2C50
MATCH_OR_EA_W       2C38
MATCH_ROL           2176
MATCH_ROR           2178
MATCH_RTS           29AA
MATCH_SUB_TO_DN_B   1916
MATCH_SUB_TO_DN_L   1946
MATCH_SUB_TO_DN_W   192E
MATCH_SUB_TO_EA_B   19D0
MATCH_SUB_TO_EA_L   1A00
MATCH_SUB_TO_EA_W   19E8
MESSAGE             FC
MESSAGE2            121
MOVEA_WL            1
MOVEM_TO_MEM_L      123
MOVEM_TO_MEM_W      122
MOVEM_TO_REG_L      133
MOVEM_TO_REG_W      132
MOVEQ_              7
MOVE_B              1
MOVE_L              2
MOVE_W              3
MULS_L              130
MULS_LEA_CLR_JSR_RTS_MOVEM  4
MULS_OP_W           7
MULS_W_AND          C
NOP                 4E71
NOP_RETURN          10E6
NO_SLASH            1F90
NUMSUB              10C0
NUMSUBRTN           109C
OPDECODER           10DC
OPDEC_RETURN        10F2
OUTPUT              10000
POST_INC            18
PRE_DEC             20
PRINTARITHSHIFT     204E
PRINTHEX            2198
PRINTLOGICSHIFT     2058
PRINTROTATE         2044
PRINTSHIFT          20E8
PRINTSHIFTBYTE      20A6
PRINTSHIFTDATA      202C
PRINTSHIFTLEFT      2080
PRINTSHIFTLONG      20BA
PRINTSHIFTREG       20E0
PRINTSHIFTRIGHT     2076
PRINTSHIFTWORD      20B0
PRINTSIZEBYTE       21B4
PRINTSIZELONG       21CC
PRINTSIZEWORD       21C0
PRINTSTRING         21AC
PRINT_ADDA          293E
PRINT_ADDI          18A8
PRINT_ADDQ          1A8A
PRINT_ADD_TO_EA     1A18
PRINT_ADD_TO_REG    195E
PRINT_AND_DN        2AE2
PRINT_AND_EA        2B50
PRINT_CLR           2A8A
PRINT_CMP           29FC
PRINT_MOVE          17F8
PRINT_MOVEA         28E8
PRINT_MOVEM_AN      1DC0
PRINT_MOVEM_AN_END  1ED8
PRINT_MOVEM_DN      1C04
PRINT_MOVEM_DN_END  1D1C
PRINT_MOVEM_MASK_TO_MEM  1BA0
PRINT_MOVEM_MASK_TO_REG  1BCE
PRINT_MOVEM_TO_MEM  1B30
PRINT_MOVEM_TO_REG  1B7E
PRINT_OR_DN         2BF6
PRINT_OR_EA         2C64
PROGRAM_START       1000
PR_A0               E4
PR_A1               E7
PR_A2               EA
PR_A3               ED
PR_A4               F0
PR_A5               F3
PR_A6               F6
PR_A7               F9
PR_ADD              68
PR_ADDA             3D
PR_ADDI             6C
PR_ADDQ             71
PR_AND              57
PR_BCC_CC           94
PR_BCC_CS           98
PR_BCC_EQ           9C
PR_BCC_GE           A0
PR_BCC_GT           A4
PR_BCC_HI           A8
PR_BCC_LE           AC
PR_BCC_LS           B0
PR_BCC_LT           B4
PR_BCC_MI           B8
PR_BCC_NE           BC
PR_BCC_PL           C0
PR_BCC_VC           C4
PR_BCC_VS           C8
PR_BYTE             16
PR_CLR              47
PR_CMP              4F
PR_COMMA            14
PR_D0               CC
PR_D1               CF
PR_D2               D2
PR_D3               D5
PR_D4               D8
PR_D5               DB
PR_D6               DE
PR_D7               E1
PR_DIVU             7A
PR_ERROR            8E
PR_HASH             1F
PR_HEXTAG           21
PR_HYPHEN           24
PR_JSR              53
PR_LEA              5E
PR_LONG             1C
PR_MOVE             2C
PR_MOVEA            31
PR_MOVEM            37
PR_MOVEQ            62
PR_MULS             42
PR_NOP              28
PR_OR               5B
PR_REG              7F
PR_RTS              4B
PR_SHIFT_AS         84
PR_SHIFT_L          8A
PR_SHIFT_LS         87
PR_SHIFT_R          8C
PR_SHIFT_RO         81
PR_SLASH            26
PR_SPACE            0
PR_SPACE2           2
PR_SPACE3           5
PR_SPACE4           9
PR_SPACE5           E
PR_SUB              76
PR_WORD             19
R                   0
READFIRSTFOURBITS   10F8
READFIRSTTENBITS    110A
RO                  3
ROL                 39F
ROR                 39B
RTS                 4E75
SHIFT               E
SHIFT_BYTE          0
SHIFT_IMMED         0
SHIFT_LONG          3
SHIFT_REGISTER      1
SHIFT_WORD          1
SLASH_CHECK         1F7C
START               1000
SUB                 9
SUB_TO_DN_B         0
SUB_TO_DN_L         2
SUB_TO_DN_W         1
SUB_TO_EA_B         4
SUB_TO_EA_L         6
SUB_TO_EA_W         5
TO_MEM_A0           1DC0
TO_MEM_A1           1DE2
TO_MEM_A2           1E04
TO_MEM_A3           1E2A
TO_MEM_A4           1E50
TO_MEM_A5           1E76
TO_MEM_A6           1E9C
TO_MEM_A7           1EC2
TO_MEM_D0           1C04
TO_MEM_D1           1C26
TO_MEM_D2           1C48
TO_MEM_D3           1C6E
TO_MEM_D4           1C94
TO_MEM_D5           1CBA
TO_MEM_D6           1CE0
TO_MEM_D7           1D06
UPSEND              10D4
UPSUB               10CA
UPSUBRTN            10A4

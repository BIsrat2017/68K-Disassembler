00001000 Starting Address
Assembler used: EASy68K Editor/Assembler v5.15.04
Created On: 3/10/2017 4:51:40 PM

00000000                             1  *-----------------------------------------------------------
00000000                             2  * Title      : Main Driver Program
00000000                             3  * Written by : Arsany Azmy, Connor McGwire
00000000                             4  * Date       :
00000000                             5  * Description:
00000000                             6  *-----------------------------------------------------------
00000000  =0000000D                  7  CR      EQU     $0D
00000000  =0000000A                  8  LF      EQU     $0A
00000000                             9  
00000000                            10  
00000000                            11  *** Common strings for printing
00000000= 20 00                     12  pr_space    DC.B    ' ',0
00000002= 20 20 00                  13  pr_space2   DC.B    '  ',0
00000005= 20 20 20 00               14  pr_space3   DC.B    '   ',0
00000009= 20 20 20 20 00            15  pr_space4   DC.B    '    ',0
0000000E= 20 20 20 20 20 00         16  pr_space5   DC.B    '     ',0
00000014= 2C 00                     17  pr_comma    DC.B    ',',0
00000016= 2E 42 00                  18  pr_BYTE     DC.B    '.B',0
00000019= 2E 57 00                  19  pr_WORD     DC.B    '.W',0
0000001C= 2E 4C 00                  20  pr_LONG     DC.B    '.L',0
0000001F= 23 00                     21  pr_hash     DC.B    '#',0
00000021= 23 24 00                  22  pr_hextag   DC.B    '#$',0
00000024= 2D 00                     23  pr_hyphen   DC.B    '-',0
00000026= 2F 00                     24  pr_slash    DC.B    '/',0
00000028                            25  
00000028                            26  
00000028                            27  ** Command strings constants
00000028= 4E 4F 50 00               28  pr_NOP      DC.B    'NOP',0
0000002C= 4D 4F 56 45 00            29  pr_MOVE     DC.B    'MOVE',0
00000031= 4D 4F 56 45 41 00         30  pr_MOVEA    DC.B    'MOVEA',0
00000037= 4D 4F 56 45 4D 00         31  pr_MOVEM    DC.B    'MOVEM',0
0000003D= 41 44 44 41 00            32  pr_ADDA     DC.B    'ADDA',0
00000042= 4D 55 4C 53 00            33  pr_MULS     DC.B    'MULS',0
00000047= 43 4C 52 00               34  pr_CLR      DC.B    'CLR',0
0000004B= 52 54 53 00               35  pr_RTS      DC.B    'RTS',0
0000004F= 43 4D 50 00               36  pr_CMP      DC.B    'CMP',0
00000053= 4A 53 52 00               37  pr_JSR      DC.B    'JSR',0
00000057= 41 4E 44 00               38  pr_AND      DC.B    'AND',0
0000005B= 4D 4F 56 45 51 00         39  pr_MOVEQ    DC.B    'MOVEQ',0
00000061= 41 44 44 00               40  pr_ADD      DC.B    'ADD',0
00000065= 41 44 44 49 00            41  pr_ADDI     DC.B    'ADDI',0
0000006A= 41 44 44 51 00            42  pr_ADDQ     DC.B    'ADDQ',0
0000006F= 53 55 42 00               43  pr_SUB      DC.B    'SUB',0
00000073= 44 49 56 55 00            44  pr_DIVU     DC.B    'DIVU',0
00000078                            45  
00000078= 44 00                     46  pr_reg      DC.B    'D',0
0000007A                            47  
0000007A= 52 4F 00                  48  pr_SHIFT_RO   DC.B  'RO',0
0000007D= 41 53 00                  49  pr_SHIFT_AS   DC.B  'AS',0
00000080= 4C 53 00                  50  pr_SHIFT_LS   DC.B  'LS',0
00000083= 4C 00                     51  pr_SHIFT_L    DC.B  'L',0
00000085= 52 00                     52  pr_SHIFT_R    DC.B  'R',0
00000087                            53  
00000087= 45 52 52 4F 52 00         54  pr_ERROR    DC.B    'ERROR',0
0000008D                            55  
0000008D= 42 43 43 00               56  pr_BCC_CC   DC.B    'BCC',0
00000091= 42 43 53 00               57  pr_BCC_CS   DC.B    'BCS',0
00000095= 42 45 51 00               58  pr_BCC_EQ   DC.B    'BEQ',0
00000099= 42 47 45 00               59  pr_BCC_GE   DC.B    'BGE',0
0000009D= 42 47 54 00               60  pr_BCC_GT   DC.B    'BGT',0
000000A1= 42 48 49 00               61  pr_BCC_HI   DC.B    'BHI',0
000000A5= 42 4C 45 00               62  pr_BCC_LE   DC.B    'BLE',0
000000A9= 42 4C 53 00               63  pr_BCC_LS   DC.B    'BLS',0
000000AD= 42 4C 54 00               64  pr_BCC_LT   DC.B    'BLT',0
000000B1= 42 4D 49 00               65  pr_BCC_MI   DC.B    'BMI',0
000000B5= 42 4E 45 00               66  pr_BCC_NE   DC.B    'BNE',0
000000B9= 42 50 4C 00               67  pr_BCC_PL   DC.B    'BPL',0
000000BD= 42 56 43 00               68  pr_BCC_VC   DC.B    'BVC',0
000000C1= 42 56 53 00               69  pr_BCC_VS   DC.B    'BVS',0
000000C5                            70  
000000C5                            71  ** Register constants
000000C5= 44 30 00                  72  pr_d0       DC.B    'D0',0
000000C8= 44 31 00                  73  pr_d1       DC.B    'D1',0
000000CB= 44 32 00                  74  pr_d2       DC.B    'D2',0
000000CE= 44 33 00                  75  pr_d3       DC.B    'D3',0
000000D1= 44 34 00                  76  pr_d4       DC.B    'D4',0
000000D4= 44 35 00                  77  pr_d5       DC.B    'D5',0
000000D7= 44 36 00                  78  pr_d6       DC.B    'D6',0
000000DA= 44 37 00                  79  pr_d7       DC.B    'D7',0
000000DD                            80  
000000DD= 41 30 00                  81  pr_a0       DC.B    'A0',0
000000E0= 41 31 00                  82  pr_a1       DC.B    'A1',0
000000E3= 41 32 00                  83  pr_a2       DC.B    'A2',0
000000E6= 41 33 00                  84  pr_a3       DC.B    'A3',0
000000E9= 41 34 00                  85  pr_a4       DC.B    'A4',0
000000EC= 41 35 00                  86  pr_a5       DC.B    'A5',0
000000EF= 41 36 00                  87  pr_a6       DC.B    'A6',0
000000F2= 41 37 00                  88  pr_a7       DC.B    'A7',0
000000F5                            89  
000000F5                            90  ** Messages
000000F5= 45 6E 74 65 72 20 ...     91  MESSAGE     DC.B    'Enter the address of compiled code: ',0
0000011A= 0D 0A 50 6C 65 61 ...     92  MESSAGE2    DC.B    CR,LF,'Please hit enter',0
0000012D= 49 6E 76 61 6C 69 ...     93  ERROR_MSG   DC.B    'Invalid input, please rerun',0
00000149= 45 6E 64 20 6F 66 ...     94  DONE_MSG    DC.B    'End of program found!',0
0000015F                            95  
00001000                            96  start   ORG     $1000
00001000                            97  
00001000                            98  program_start
00001000                            99  
00001000                           100  *------Code for input-------
00001000                           101  
00001000  43F8 00F5                102          LEA     MESSAGE,A1      *Code block for first message
00001004  103C 000E                103          MOVE.B  #14,D0
00001008  4E4F                     104          TRAP    #15
0000100A                           105  
0000100A  227C 00004000            106          MOVEA.L #$4000, A1
00001010  103C 0002                107          MOVE.B  #2,D0           *Code block for reading input
00001014  4E4F                     108          TRAP    #15
00001016  3001                     109          MOVE.W  D1,D0
00001018                           110  
00001018  2049                     111          MOVEA.L A1,A0           *Move the contents of A1 to A0 for the conversion
0000101A  4EB9 0000108E            112          JSR     A2H             *Branch to Connor's conversion code
00001020                           113  
00001020  2040                     114          MOVEA.L D0,A0
00001022                           115  
00001022  0C50 FFFF                116          CMPI.W  #$FFFF,(A0)
00001026  6700 0032                117          BEQ     input_error
0000102A                           118  
0000102A                           119  loop_start
0000102A                           120  
0000102A  2208                     121          MOVE.L  A0,D1           *Print out the address we're working on
0000102C  7410                     122          MOVE.L  #16,D2
0000102E  700F                     123          MOVE.L  #15,D0
00001030  4E4F                     124          TRAP    #15
00001032                           125  
00001032  700E                     126          MOVE.L  #14,D0
00001034  43F8 0009                127          LEA     pr_space4,A1
00001038  4E4F                     128          TRAP    #15
0000103A                           129  
0000103A  3418                     130          MOVE.W  (A0)+,D2
0000103C  0C42 FFFF                131          CMPI.W  #$FFFF,D2
00001040  6700 0040                132          BEQ     Done
00001044                           133  
00001044  4EB9 000010DC            134          JSR     OpDecoder
0000104A                           135  
0000104A  700D                     136          MOVE.L  #13,D0
0000104C  4E4F                     137          TRAP    #15
0000104E                           138          
0000104E  5245                     139          ADD     #1,D5       *Increment d5 by 1
00001050  BA7C 001F                140          CMP     #31,D5      *Check if theres 31 lines of output
00001054  6700 0010                141          BEQ     clr_scrn    *If theres 20 lines, clear the screen and prompt
00001058                           142  
00001058  60D0                     143          BRA     loop_start
0000105A                           144  
0000105A                           145  input_error
0000105A  700D                     146          MOVE.L  #13,D0
0000105C  43F8 012D                147          LEA     ERROR_MSG,A1
00001060  4E4F                     148          TRAP    #15
00001062  6000 001E                149          BRA     Done
00001066                           150  clr_scrn
00001066  43F8 011A                151          LEA     MESSAGE2,A1     *Print out initial message
0000106A  103C 000E                152          MOVE.B  #14,D0
0000106E  4E4F                     153          TRAP    #15
00001070                           154          
00001070  103C 0002                155          MOVE.B  #2,D0           *Get user input
00001074  4E4F                     156          TRAP    #15
00001076  1A3C 0000                157          MOVE.B  #0,D5
0000107A  60AE                     158          BRA     loop_start
0000107C                           159          
0000107C  103C 0009                160          MOVE.B  #9,D0           *halt the simulator
00001080  4E4F                     161          TRAP    #15
00001082                           162          
00001082                           163  Done
00001082  700E                     164          MOVE.L  #14,D0
00001084  43F8 0149                165          LEA     DONE_MSG,A1
00001088  4E4F                     166          TRAP    #15
0000108A  FFFF FFFF                167          SIMHALT
0000108E                           168  
0000108E                           169          INCLUDE 'ASCII_HEX_Conversions.x68'
0000108E                           170  
0000108E                           171  
0000108E                           172  
0000108E                           173  A2H     *Converts and ASCII Byte string into HEX; Size WORD
0000108E  48E7 7FFE                174          MOVEM.L     D1-D7/A0-A6, -(SP)  
00001092                           175          
00001092  3400                     176          MOVE.W  D0,D2
00001094  3202                     177          MOVE.W  D2,D1                   *Store length of string into D1 for looping
00001096  2248                     178          MOVEA.L A0,A1                   *Copy starting point of string
00001098                           179  
00001098  6000 0026                180          BRA     numSub
0000109C                           181  numSubRTN
0000109C  2049                     182          MOVEA.L A1,A0                   *Restore address position
0000109E  3202                     183          MOVE.W  D2,D1                   *Reset loop counter
000010A0                           184          
000010A0  6000 0028                185          BRA     upSub
000010A4                           186  upSubRTN        
000010A4  2049                     187          MOVEA.L A1,A0                   *Restore address position
000010A6  3202                     188          MOVE.W  D2,D1                   *Reset loop counter
000010A8  4240                     189          CLR     D0                      *Clear D0
000010AA                           190  addBytes
000010AA  D018                     191          ADD.B   (A0)+,D0
000010AC  5301                     192          SUBI.B  #1,D1
000010AE  6700 000A                193          BEQ     conv_end
000010B2                           194  addByteLoop
000010B2  E980                     195          ASL.L   #4,D0
000010B4  D018                     196          ADD.B   (A0)+,D0
000010B6  5301                     197          SUBI.B  #1,D1
000010B8  66F8                     198          BNE     addByteLoop
000010BA                           199  conv_end
000010BA  4CDF 7FFE                200          MOVEM.L     (SP)+, D1-D7/A0-A6
000010BE  4E75                     201          RTS
000010C0                           202          
000010C0                           203  numSub  *Convert ASCII 'number' to true number byte; Should not be called outside of the A2H subroutines
000010C0  0418 0030                204          SUBI.B  #$30,(A0)+              *Subtract difference between null ASCII and '0' ASCII
000010C4  5341                     205          SUB.W   #1,D1                   *Decrement loop counter
000010C6  66F8                     206          BNE     numSub                  *If loop has not ended restart
000010C8  60D2                     207          BRA     numSubRTN
000010CA                           208  
000010CA                           209  upSub   *Loops through string to remove any upper case characters 
000010CA                           210          *that may remain in the string
000010CA  0C10 0009                211          CMPI.B  #9,(A0)                 *Check if the value is greater than 0-9
000010CE  6F00 0004                212          BLE     upSEnd                  *If it's not, continue loop
000010D2  5310                     213          SUBI.B  #1,(A0)                 *Otherwise, subtract difference between ASCII 'number' code and 'A' code
000010D4                           214  upSEnd
000010D4  5248                     215          ADDA.W  #1,A0                   *Increment to next position to check for uppercase
000010D6  5341                     216          SUB.W   #1,D1                   *Decrement loop counter
000010D8  66F0                     217          BNE     upSub                   
000010DA  60C8                     218          BRA     upSubRTN
000010DC                           219  
000010DC                           220  
000010DC                           221  -------------------- end include --------------------
000010DC                           222          INCLUDE 'opcodes.x68'
000010DC                           223  
000010DC  =00004E71                224  NOP             EQU $4E71
000010DC  =00000001                225  MOVE_B          EQU %0001
000010DC  =00000003                226  MOVE_W          EQU %0011
000010DC  =00000002                227  MOVE_L          EQU %0010
000010DC  =00000001                228  MOVEA_WL        EQU %001
000010DC  =00000007                229  MOVEQ_          EQU %0111
000010DC                           230  
000010DC  =00000018                231  ADDI_B          EQU %0000011000
000010DC  =00000019                232  ADDI_W          EQU %0000011001
000010DC  =0000001A                233  ADDI_L          EQU %0000011010
000010DC                           234  
000010DC  =0000000D                235  ADD_ADDA        EQU %1101
000010DC  =00000000                236  ADD_TO_REG_B    EQU %000
000010DC  =00000001                237  ADD_TO_REG_W    EQU %001
000010DC  =00000002                238  ADD_TO_REG_L    EQU %010
000010DC  =00000004                239  ADD_TO_EA_B     EQU %100
000010DC  =00000005                240  ADD_TO_EA_W     EQU %101
000010DC  =00000006                241  ADD_TO_EA_L     EQU %110
000010DC  =00000003                242  ADDA_W          EQU %011
000010DC  =00000007                243  ADDA_L          EQU %111
000010DC                           244  
000010DC  =00000005                245  ADDQ            EQU %0101
000010DC  =00000000                246  ADDQ_B          EQU %000
000010DC  =00000001                247  ADDQ_W          EQU %001
000010DC  =00000002                248  ADDQ_L          EQU %010
000010DC                           249  
000010DC  =0000000C                250  MULS_W_AND      EQU %1100
000010DC  =00000007                251  MULS_OP_W       EQU %111
000010DC                           252  
000010DC  =00000009                253  SUB             EQU %1001
000010DC  =00000000                254  SUB_TO_DN_B     EQU %000
000010DC  =00000001                255  SUB_TO_DN_W     EQU %001
000010DC  =00000002                256  SUB_TO_DN_L     EQU %010
000010DC  =00000004                257  SUB_TO_EA_B     EQU %100
000010DC  =00000005                258  SUB_TO_EA_W     EQU %101
000010DC  =00000006                259  SUB_TO_EA_L     EQU %110
000010DC                           260  
000010DC  =00000008                261  DIVU_OR         EQU %1000
000010DC  =00000003                262  DIVU            EQU %011
000010DC                           263  
000010DC  =00000000                264  DN_B            EQU %000
000010DC  =00000001                265  DN_W            EQU %001
000010DC  =00000002                266  DN_L            EQU %010
000010DC  =00000004                267  EA_B            EQU %100
000010DC  =00000005                268  EA_W            EQU %101
000010DC  =00000006                269  EA_L            EQU %110
000010DC                           270  
000010DC  =00000004                271  MULS_LEA_CLR_JSR_RTS_MOVEM    EQU %0100
000010DC  =00004E75                272  RTS             EQU $4E75
000010DC  =00000007                273  LEA             EQU %111
000010DC  =0000013A                274  JSR             EQU %0100111010
000010DC  =00000108                275  CLR_B           EQU %0100001000
000010DC  =00000109                276  CLR_W           EQU %0100001001
000010DC  =0000010A                277  CLR_L           EQU %0100001010
000010DC  =00000130                278  MULS_L          EQU %0100110000
000010DC                           279  
000010DC  =00000122                280  MOVEM_TO_MEM_W  EQU %0100100010
000010DC  =00000123                281  MOVEM_TO_MEM_L  EQU %0100100011
000010DC  =00000132                282  MOVEM_TO_REG_W  EQU %0100110010
000010DC  =00000133                283  MOVEM_TO_REG_L  EQU %0100110011
000010DC                           284  
000010DC  =0000038F                285  LSL             EQU %1110001111
000010DC  =0000038B                286  LSR             EQU %1110001011
000010DC  =00000387                287  ASR             EQU %1110000111
000010DC  =00000383                288  ASL             EQU %1110000011
000010DC  =0000039F                289  ROL             EQU %1110011111
000010DC  =0000039B                290  ROR             EQU %1110011011
000010DC                           291  
000010DC  =0000000B                292  CMP             EQU %1011
000010DC  =00000000                293  CMP_B           EQU %000
000010DC  =00000001                294  CMP_W           EQU %001
000010DC  =00000002                295  CMP_L           EQU %010
000010DC                           296  
000010DC  =00000006                297  BCC             EQU %0110
000010DC  =00000000                298  BCC_16          EQU %00000000
000010DC  =000000FF                299  BCC_32          EQU $FF
000010DC  =00000000                300  CC_T            EQU %0000
000010DC  =00000001                301  CC_F            EQU %0001
000010DC  =00000002                302  CC_HI           EQU %0010
000010DC  =00000003                303  CC_LS           EQU %0011
000010DC  =00000004                304  CC_CC           EQU %0100
000010DC  =00000005                305  CC_CS           EQU %0101
000010DC  =00000006                306  CC_NE           EQU %0110
000010DC  =00000007                307  CC_EQ           EQU %0111
000010DC  =00000008                308  CC_VC           EQU %1000
000010DC  =00000009                309  CC_VS           EQU %1001
000010DC  =0000000A                310  CC_PL           EQU %1010
000010DC  =0000000B                311  CC_MI           EQU %1011
000010DC  =0000000C                312  CC_GE           EQU %1100
000010DC  =0000000D                313  CC_LT           EQU %1101
000010DC  =0000000E                314  CC_GT           EQU %1110
000010DC  =0000000F                315  CC_LE           EQU %1111
000010DC                           316  
000010DC                           317  
000010DC                           318  
000010DC                           319  
000010DC                           320  
000010DC                           321  
000010DC                           322  OpDecoder
000010DC  48E7 FF7E                323      MOVEM.L     D0-D7/A1-A6, -(SP)
000010E0  4241                     324      CLR         D1
000010E2  6000 0074                325      BRA         CHECK_NOP
000010E6                           326  NOP_RETURN
000010E6  6000 007C                327      BRA         CHECK_FOUR_BIT_SIG
000010EA                           328  FOUR_BIT_RETURN
000010EA  6000 04E0                329      BRA         CHECK_ADDI
000010EE                           330  ADDI_RETURN
000010EE  6000 0028                331      BRA         CHECK_SHIFT_AND_ROTATE
000010F2                           332  
000010F2                           333  opdec_return
000010F2  4CDF 7EFF                334      MOVEM.L     (SP)+, D0-D7/A1-A6
000010F6  4E75                     335      RTS
000010F8                           336  
000010F8                           337  ReadFirstFourBits
000010F8                           338  
000010F8  48A7 2000                339      MOVEM.W     D2, -(SP)
000010FC                           340  
000010FC  1E3C 000C                341      MOVE.B      #12,D7
00001100  EE6A                     342      LSR.W       D7,D2
00001102  1602                     343      MOVE.B      D2,D3
00001104                           344  
00001104  4C9F 0004                345      MOVEM.W     (SP)+,D2
00001108  4E75                     346      RTS
0000110A                           347  
0000110A                           348  ReadFirstTenBits
0000110A                           349  
0000110A  48A7 2000                350      MOVEM.W     D2, -(SP)
0000110E                           351  
0000110E  EC4A                     352      LSR.W       #6,D2
00001110  3602                     353      MOVE.W      D2,D3
00001112                           354  
00001112  4C9F 0004                355      MOVEM.W     (SP)+,D2
00001116  4E75                     356      RTS
00001118                           357  CHECK_SHIFT_AND_ROTATE
00001118                           358  
00001118  61F0                     359      BSR         ReadFirstTenBits
0000111A                           360  
0000111A  3C3C 038F                361      MOVE.W      #LSL,D6
0000111E  BC43                     362      CMP.W       D3,D6
00001120  6700 0F80                363      BEQ         MATCH_LSL
00001124                           364  
00001124  3C3C 038B                365      MOVE.W      #LSR,D6
00001128  BC43                     366      CMP.W       D3,D6
0000112A  6700 0F78                367      BEQ         MATCH_LSR
0000112E                           368  
0000112E  3C3C 0387                369      MOVE.W      #ASR,D6
00001132  BC43                     370      CMP.W       D3,D6
00001134  6700 0F70                371      BEQ         MATCH_ASR
00001138                           372  
00001138  3C3C 0383                373      MOVE.W      #ASL,D6
0000113C  BC43                     374      CMP.W       D3,D6
0000113E  6700 0F68                375      BEQ         MATCH_ASL
00001142                           376  
00001142  3C3C 039F                377      MOVE.W      #ROL,D6
00001146  BC43                     378      CMP.W       D3,D6
00001148  6700 0F60                379      BEQ         MATCH_ROL
0000114C                           380  
0000114C  3C3C 039B                381      MOVE.W      #ROR,D6
00001150  BC43                     382      CMP.W       D3,D6
00001152  6700 0F58                383      BEQ         MATCH_ROR
00001156                           384  
00001156  609A                     385      BRA         opdec_return
00001158                           386  
00001158                           387  CHECK_NOP
00001158                           388  
00001158  3C3C 4E71                389      MOVE.W      #NOP,D6
0000115C  BC42                     390      CMP.W       D2,D6
0000115E  6700 0650                391      BEQ         MATCH_NOP
00001162                           392  
00001162  6082                     393      BRA         NOP_RETURN
00001164                           394  
00001164                           395  CHECK_FOUR_BIT_SIG
00001164                           396  
00001164  6192                     397      BSR         ReadFirstFourBits
00001166                           398  
00001166  1C3C 0001                399      MOVE.B      #MOVE_B,D6
0000116A  BC03                     400      CMP.B       D3,D6
0000116C  6700 0650                401      BEQ         MATCH_MOVE_B
00001170                           402  
00001170  1C3C 0003                403      MOVE.B      #MOVE_W,D6
00001174  BC03                     404      CMP.B       D3,D6
00001176  6700 04BA                405      BEQ         CHECK_MOVEA_W_AND_MOVE_W
0000117A                           406  
0000117A  1C3C 0002                407      MOVE.B      #MOVE_L,D6
0000117E  BC03                     408      CMP.B       D3,D6
00001180  6700 04DA                409      BEQ         CHECK_MOVEA_L_AND_MOVE_L
00001184                           410  
00001184  1C3C 0007                411      MOVE.B      #MOVEQ_,D6
00001188  BC03                     412      CMP.B       D3,D6
0000118A  6700 06A4                413      BEQ         MATCH_MOVEQ
0000118E                           414  
0000118E  1C3C 000D                415      MOVE.B      #ADD_ADDA,D6
00001192  BC03                     416      CMP.B       D3,D6
00001194  6700 03BE                417      BEQ         CHECK_ADD_ADDA
00001198                           418  
00001198  1C3C 0005                419      MOVE.B      #ADDQ,D6
0000119C  BC03                     420      CMP.B       D3,D6
0000119E  6700 040A                421      BEQ         CHECK_ADDQ
000011A2                           422  
000011A2  1C3C 0009                423      MOVE.B      #SUB,D6
000011A6  BC03                     424      CMP.B       D3,D6
000011A8  6700 0448                425      BEQ         CHECK_SUB
000011AC                           426  
000011AC  1C3C 0008                427      MOVE.B      #DIVU_OR,D6
000011B0  BC03                     428      CMP.B       D3,D6
000011B2  6700 0322                429      BEQ         CHECK_DIVU_OR
000011B6                           430  
000011B6  1C3C 000C                431      MOVE.B      #MULS_W_AND,D6
000011BA  BC03                     432      CMP.B       D3,D6
000011BC  6700 02CA                433      BEQ         CHECK_MULS_W_AND
000011C0                           434  
000011C0  1C3C 0004                435      MOVE.B      #MULS_LEA_CLR_JSR_RTS_MOVEM,D6
000011C4  BC03                     436      CMP.B       D3,D6
000011C6  6700 026E                437      BEQ         CHECK_MULS_LEA_CLR_JSR_RTS
000011CA                           438  
000011CA  1C3C 000B                439      MOVE.B      #CMP,D6
000011CE  BC03                     440      CMP.B       D3,D6
000011D0  6700 023E                441      BEQ         CHECK_CMP
000011D4                           442  
000011D4  1C3C 0006                443      MOVE.B      #BCC,D6
000011D8  BC03                     444      CMP.B       D3,D6
000011DA  6700 0010                445      BEQ         CHECK_BCC
000011DE                           446  
000011DE  1C3C 000E                447      MOVE.B      #SHIFT,D6
000011E2  BC03                     448      CMP.B       D3,D6
000011E4  6700 0D40                449      BEQ         CHECK_SHIFT
000011E8                           450  
000011E8  6000 FF00                451      BRA         FOUR_BIT_RETURN
000011EC                           452  CHECK_BCC
000011EC                           453  
000011EC  1C3C 0000                454      MOVE.B      #BCC_16,D6
000011F0  BC02                     455      CMP.B       D2,D6
000011F2  6700 00B8                456      BEQ         CHECK_BCC_16
000011F6                           457  
000011F6  1C3C 00FF                458      MOVE.B      #BCC_32,D6
000011FA  BC02                     459      CMP.B       D2,D6
000011FC  6700 0156                460      BEQ         CHECK_BCC_32
00001200                           461  
00001200  6000 0002                462      BRA         CHECK_BCC_8
00001204                           463  
00001204                           464  CHECK_BCC_8
00001204                           465  
00001204  6100 01F6                466      BSR         ISOLATE_CC_CODE_FOR_BCC
00001208                           467  
00001208  1C3C 0000                468      MOVE.B      #CC_T,D6
0000120C  BC03                     469      CMP.B       D3,D6
0000120E  6700 0EFC                470      BEQ         MATCH_CC_T_8
00001212                           471  
00001212  1C3C 0001                472      MOVE.B      #CC_F,D6
00001216  BC03                     473      CMP.B       D3,D6
00001218  6700 0EF8                474      BEQ         MATCH_CC_F_8
0000121C                           475  
0000121C  1C3C 0002                476      MOVE.B      #CC_HI,D6
00001220  BC03                     477      CMP.B       D3,D6
00001222  6700 0EF4                478      BEQ         MATCH_CC_HI_8
00001226                           479  
00001226  1C3C 0003                480      MOVE.B      #CC_LS,D6
0000122A  BC03                     481      CMP.B       D3,D6
0000122C  6700 0F50                482      BEQ         MATCH_CC_LS_8
00001230                           483  
00001230  1C3C 0004                484      MOVE.B      #CC_CC,D6
00001234  BC03                     485      CMP.B       D3,D6
00001236  6700 0FC4                486      BEQ         MATCH_CC_CC_8
0000123A                           487  
0000123A  1C3C 0005                488      MOVE.B      #CC_CS,D6
0000123E  BC03                     489      CMP.B       D3,D6
00001240  6700 1038                490      BEQ         MATCH_CC_CS_8
00001244                           491  
00001244  1C3C 0006                492      MOVE.B      #CC_NE,D6
00001248  BC03                     493      CMP.B       D3,D6
0000124A  6700 10AC                494      BEQ         MATCH_CC_NE_8
0000124E                           495  
0000124E  1C3C 0007                496      MOVE.B      #CC_EQ,D6
00001252  BC03                     497      CMP.B       D3,D6
00001254  6700 1120                498      BEQ         MATCH_CC_EQ_8
00001258                           499  
00001258  1C3C 0008                500      MOVE.B      #CC_VC,D6
0000125C  BC03                     501      CMP.B       D3,D6
0000125E  6700 1194                502      BEQ         MATCH_CC_VC_8
00001262                           503  
00001262  1C3C 0009                504      MOVE.B      #CC_VS,D6
00001266  BC03                     505      CMP.B       D3,D6
00001268  6700 1208                506      BEQ         MATCH_CC_VS_8
0000126C                           507  
0000126C  1C3C 000A                508      MOVE.B      #CC_PL,D6
00001270  BC03                     509      CMP.B       D3,D6
00001272  6700 127C                510      BEQ         MATCH_CC_PL_8
00001276                           511  
00001276  1C3C 000B                512      MOVE.B      #CC_MI,D6
0000127A  BC03                     513      CMP.B       D3,D6
0000127C  6700 12F0                514      BEQ         MATCH_CC_MI_8
00001280                           515  
00001280  1C3C 000C                516      MOVE.B      #CC_GE,D6
00001284  BC03                     517      CMP.B       D3,D6
00001286  6700 1364                518      BEQ         MATCH_CC_GE_8
0000128A                           519  
0000128A  1C3C 000D                520      MOVE.B      #CC_LT,D6
0000128E  BC03                     521      CMP.B       D3,D6
00001290  6700 13D8                522      BEQ         MATCH_CC_LT_8
00001294                           523  
00001294  1C3C 000E                524      MOVE.B      #CC_GT,D6
00001298  BC03                     525      CMP.B       D3,D6
0000129A  6700 144C                526      BEQ         MATCH_CC_GT_8
0000129E                           527  
0000129E  1C3C 000F                528      MOVE.B      #CC_LE,D6
000012A2  BC03                     529      CMP.B       D3,D6
000012A4  6700 14C0                530      BEQ         MATCH_CC_LE_8
000012A8                           531  
000012A8  6000 153A                532      BRA         ERROR
000012AC                           533  
000012AC                           534  CHECK_BCC_16
000012AC                           535  
000012AC  6100 014E                536      BSR         ISOLATE_CC_CODE_FOR_BCC
000012B0                           537  
000012B0  1C3C 0000                538      MOVE.B      #CC_T,D6
000012B4  BC03                     539      CMP.B       D3,D6
000012B6  6700 0E56                540      BEQ         MATCH_CC_T_16
000012BA                           541  
000012BA  1C3C 0001                542      MOVE.B      #CC_F,D6
000012BE  BC03                     543      CMP.B       D3,D6
000012C0  6700 0E52                544      BEQ         MATCH_CC_F_16
000012C4                           545  
000012C4  1C3C 0002                546      MOVE.B      #CC_HI,D6
000012C8  BC03                     547      CMP.B       D3,D6
000012CA  6700 0E68                548      BEQ         MATCH_CC_HI_16
000012CE                           549  
000012CE  1C3C 0003                550      MOVE.B      #CC_LS,D6
000012D2  BC03                     551      CMP.B       D3,D6
000012D4  6700 0ED2                552      BEQ         MATCH_CC_LS_16
000012D8                           553  
000012D8  1C3C 0004                554      MOVE.B      #CC_CC,D6
000012DC  BC03                     555      CMP.B       D3,D6
000012DE  6700 0F46                556      BEQ         MATCH_CC_CC_16
000012E2                           557  
000012E2  1C3C 0005                558      MOVE.B      #CC_CS,D6
000012E6  BC03                     559      CMP.B       D3,D6
000012E8  6700 0FBA                560      BEQ         MATCH_CC_CS_16
000012EC                           561  
000012EC  1C3C 0006                562      MOVE.B      #CC_NE,D6
000012F0  BC03                     563      CMP.B       D3,D6
000012F2  6700 102E                564      BEQ         MATCH_CC_NE_16
000012F6                           565  
000012F6  1C3C 0007                566      MOVE.B      #CC_EQ,D6
000012FA  BC03                     567      CMP.B       D3,D6
000012FC  6700 10A2                568      BEQ         MATCH_CC_EQ_16
00001300                           569  
00001300  1C3C 0008                570      MOVE.B      #CC_VC,D6
00001304  BC03                     571      CMP.B       D3,D6
00001306  6700 1116                572      BEQ         MATCH_CC_VC_16
0000130A                           573  
0000130A  1C3C 0009                574      MOVE.B      #CC_VS,D6
0000130E  BC03                     575      CMP.B       D3,D6
00001310  6700 118A                576      BEQ         MATCH_CC_VS_16
00001314                           577  
00001314  1C3C 000A                578      MOVE.B      #CC_PL,D6
00001318  BC03                     579      CMP.B       D3,D6
0000131A  6700 11FE                580      BEQ         MATCH_CC_PL_16
0000131E                           581  
0000131E  1C3C 000B                582      MOVE.B      #CC_MI,D6
00001322  BC03                     583      CMP.B       D3,D6
00001324  6700 1272                584      BEQ         MATCH_CC_MI_16
00001328                           585  
00001328  1C3C 000C                586      MOVE.B      #CC_GE,D6
0000132C  BC03                     587      CMP.B       D3,D6
0000132E  6700 12E6                588      BEQ         MATCH_CC_GE_16
00001332                           589  
00001332  1C3C 000D                590      MOVE.B      #CC_LT,D6
00001336  BC03                     591      CMP.B       D3,D6
00001338  6700 135A                592      BEQ         MATCH_CC_LT_16
0000133C                           593  
0000133C  1C3C 000E                594      MOVE.B      #CC_GT,D6
00001340  BC03                     595      CMP.B       D3,D6
00001342  6700 13CE                596      BEQ         MATCH_CC_GT_16
00001346                           597  
00001346  1C3C 000F                598      MOVE.B      #CC_LE,D6
0000134A  BC03                     599      CMP.B       D3,D6
0000134C  6700 1442                600      BEQ         MATCH_CC_LE_16
00001350                           601  
00001350  6000 1492                602      BRA         ERROR
00001354                           603  
00001354                           604  
00001354                           605  CHECK_BCC_32
00001354                           606  
00001354  6100 00A6                607      BSR         ISOLATE_CC_CODE_FOR_BCC
00001358                           608  
00001358  1C3C 0000                609      MOVE.B      #CC_T,D6
0000135C  BC03                     610      CMP.B       D3,D6
0000135E  6700 0DB0                611      BEQ         MATCH_CC_T_32
00001362                           612  
00001362  1C3C 0001                613      MOVE.B      #CC_F,D6
00001366  BC03                     614      CMP.B       D3,D6
00001368  6700 0DAC                615      BEQ         MATCH_CC_F_32
0000136C                           616  
0000136C  1C3C 0002                617      MOVE.B      #CC_HI,D6
00001370  BC03                     618      CMP.B       D3,D6
00001372  6700 0DE4                619      BEQ         MATCH_CC_HI_32
00001376                           620  
00001376  1C3C 0003                621      MOVE.B      #CC_LS,D6
0000137A  BC03                     622      CMP.B       D3,D6
0000137C  6700 0E54                623      BEQ         MATCH_CC_LS_32
00001380                           624  
00001380  1C3C 0004                625      MOVE.B      #CC_CC,D6
00001384  BC03                     626      CMP.B       D3,D6
00001386  6700 0EC8                627      BEQ         MATCH_CC_CC_32
0000138A                           628  
0000138A  1C3C 0005                629      MOVE.B      #CC_CS,D6
0000138E  BC03                     630      CMP.B       D3,D6
00001390  6700 0F3C                631      BEQ         MATCH_CC_CS_32
00001394                           632  
00001394  1C3C 0006                633      MOVE.B      #CC_NE,D6
00001398  BC03                     634      CMP.B       D3,D6
0000139A  6700 0FB0                635      BEQ         MATCH_CC_NE_32
0000139E                           636  
0000139E  1C3C 0007                637      MOVE.B      #CC_EQ,D6
000013A2  BC03                     638      CMP.B       D3,D6
000013A4  6700 1024                639      BEQ         MATCH_CC_EQ_32
000013A8                           640  
000013A8  1C3C 0008                641      MOVE.B      #CC_VC,D6
000013AC  BC03                     642      CMP.B       D3,D6
000013AE  6700 1098                643      BEQ         MATCH_CC_VC_32
000013B2                           644  
000013B2  1C3C 0009                645      MOVE.B      #CC_VS,D6
000013B6  BC03                     646      CMP.B       D3,D6
000013B8  6700 110C                647      BEQ         MATCH_CC_VS_32
000013BC                           648  
000013BC  1C3C 000A                649      MOVE.B      #CC_PL,D6
000013C0  BC03                     650      CMP.B       D3,D6
000013C2  6700 1180                651      BEQ         MATCH_CC_PL_32
000013C6                           652  
000013C6  1C3C 000B                653      MOVE.B      #CC_MI,D6
000013CA  BC03                     654      CMP.B       D3,D6
000013CC  6700 11F4                655      BEQ         MATCH_CC_MI_32
000013D0                           656  
000013D0  1C3C 000C                657      MOVE.B      #CC_GE,D6
000013D4  BC03                     658      CMP.B       D3,D6
000013D6  6700 1268                659      BEQ         MATCH_CC_GE_32
000013DA                           660  
000013DA  1C3C 000D                661      MOVE.B      #CC_LT,D6
000013DE  BC03                     662      CMP.B       D3,D6
000013E0  6700 12DC                663      BEQ         MATCH_CC_LT_32
000013E4                           664  
000013E4  1C3C 000E                665      MOVE.B      #CC_GT,D6
000013E8  BC03                     666      CMP.B       D3,D6
000013EA  6700 1350                667      BEQ         MATCH_CC_GT_32
000013EE                           668  
000013EE  1C3C 000F                669      MOVE.B      #CC_LE,D6
000013F2  BC03                     670      CMP.B       D3,D6
000013F4  6700 13C4                671      BEQ         MATCH_CC_LE_32
000013F8                           672  
000013F8  6000 13EA                673      BRA         ERROR
000013FC                           674  
000013FC                           675  ISOLATE_CC_CODE_FOR_BCC
000013FC                           676  
000013FC  48A7 2000                677      MOVEM.W     D2, -(SP)
00001400                           678  
00001400  E94A                     679      LSL.W       #4,D2
00001402  1E3C 000C                680      MOVE.B      #12,D7
00001406  EE6A                     681      LSR.W       D7,D2
00001408                           682  
00001408  1602                     683      MOVE.B      D2,D3
0000140A                           684  
0000140A  4C9F 0004                685      MOVEM.W     (SP)+,D2
0000140E  4E75                     686      RTS
00001410                           687  CHECK_CMP
00001410                           688  
00001410  6100 0232                689      BSR         ISOLATE_OP_CODE
00001414                           690  
00001414  1C3C 0000                691      MOVE.B      #CMP_B,D6
00001418  BC03                     692      CMP.B       D3,D6
0000141A  6700 14D0                693      BEQ         MATCH_CMP_B
0000141E                           694  
0000141E  1C3C 0001                695      MOVE.B      #CMP_W,D6
00001422  BC03                     696      CMP.B       D3,D6
00001424  6700 14DE                697      BEQ         MATCH_CMP_W
00001428                           698  
00001428  1C3C 0002                699      MOVE.B      #CMP_L,D6
0000142C  BC03                     700      CMP.B       D3,D6
0000142E  6700 14EC                701      BEQ         MATCH_CMP_L
00001432                           702  
00001432  6000 13B0                703      BRA         ERROR
00001436                           704  CHECK_MULS_LEA_CLR_JSR_RTS
00001436                           705  
00001436  3C3C 4E75                706      MOVE.W      #RTS,D6
0000143A  BC42                     707      CMP.W       D2,D6
0000143C  6700 14A0                708      BEQ         MATCH_RTS
00001440                           709  
00001440  6100 0202                710      BSR         ISOLATE_OP_CODE
00001444                           711  
00001444  1C3C 0007                712      MOVE.B      #LEA,D6
00001448  BC03                     713      CMP.B       D3,D6
0000144A  6700 022C                714      BEQ         MATCH_LEA
0000144E                           715  
0000144E  6100 FCBA                716      BSR         ReadFirstTenBits
00001452                           717  
00001452  3C3C 013A                718      MOVE.W      #JSR,D6
00001456  BC43                     719      CMP.W       D3,D6
00001458  6700 1502                720      BEQ         MATCH_JSR
0000145C                           721  
0000145C  3C3C 0108                722      MOVE.W      #CLR_B,D6
00001460  BC43                     723      CMP.W       D3,D6
00001462  6700 1516                724      BEQ         MATCH_CLR_B
00001466                           725  
00001466  3C3C 0109                726      MOVE.W      #CLR_W,D6
0000146A  BC43                     727      CMP.W       D3,D6
0000146C  6700 1524                728      BEQ         MATCH_CLR_W
00001470                           729  
00001470  3C3C 010A                730      MOVE.W      #CLR_L,D6
00001474  BC43                     731      CMP.W       D3,D6
00001476  6700 1532                732      BEQ         MATCH_CLR_L
0000147A                           733  
0000147A  3C3C 0130                734      MOVE.W      #MULS_L,D6  * Shouldn't need to check for the rest of the opcode..?
0000147E  BC43                     735      CMP.W       D3,D6
00001480  6700 01F8                736      BEQ         MATCH_MULS_L
00001484                           737      
00001484  6000 009E                738      BRA         CHECK_MOVEM
00001488                           739  
00001488                           740  CHECK_MULS_W_AND
00001488                           741  
00001488  6100 01BA                742      BSR         ISOLATE_OP_CODE
0000148C                           743  
0000148C  1C3C 0007                744      MOVE.B      #MULS_OP_W,D6
00001490  BC03                     745      CMP.B       D3,D6
00001492  6700 140C                746      BEQ         MATCH_MULS_W
00001496                           747  
00001496  1C3C 0000                748      MOVE.B      #DN_B,D6
0000149A  BC03                     749      CMP.B       D3,D6
0000149C  6700 1534                750      BEQ         MATCH_AND_DN_B
000014A0                           751  
000014A0  1C3C 0001                752      MOVE.B      #DN_W,D6
000014A4  BC03                     753      CMP.B       D3,D6
000014A6  6700 1542                754      BEQ         MATCH_AND_DN_W
000014AA                           755  
000014AA  1C3C 0002                756      MOVE.B      #DN_L,D6
000014AE  BC03                     757      CMP.B       D3,D6
000014B0  6700 1550                758      BEQ         MATCH_AND_DN_L
000014B4                           759  
000014B4  1C3C 0004                760      MOVE.B      #EA_B,D6
000014B8  BC03                     761      CMP.B       D3,D6
000014BA  6700 1584                762      BEQ         MATCH_AND_EA_B
000014BE                           763  
000014BE  1C3C 0005                764      MOVE.B      #EA_W,D6
000014C2  BC03                     765      CMP.B       D3,D6
000014C4  6700 1592                766      BEQ         MATCH_AND_EA_W
000014C8                           767  
000014C8  1C3C 0006                768      MOVE.B      #EA_L,D6
000014CC  BC03                     769      CMP.B       D3,D6
000014CE  6700 15A0                770      BEQ         MATCH_AND_EA_L
000014D2                           771  
000014D2  6000 1310                772      BRA         ERROR
000014D6                           773  
000014D6                           774  CHECK_DIVU_OR
000014D6                           775  
000014D6  6100 016C                776      BSR         ISOLATE_OP_CODE
000014DA                           777  
000014DA  1C3C 0003                778      MOVE.B      #DIVU,D6
000014DE  BC03                     779      CMP.B       D3,D6
000014E0  6700 05F2                780      BEQ         MATCH_DIVU
000014E4                           781  
000014E4  1C3C 0000                782      MOVE.B      #DN_B,D6
000014E8  BC03                     783      CMP.B       D3,D6
000014EA  6700 0180                784      BEQ         MATCH_OR_DN_B
000014EE                           785  
000014EE  1C3C 0001                786      MOVE.B      #DN_W,D6
000014F2  BC03                     787      CMP.B       D3,D6
000014F4  6700 0178                788      BEQ         MATCH_OR_DN_W
000014F8                           789  
000014F8  1C3C 0002                790      MOVE.B      #DN_L,D6
000014FC  BC03                     791      CMP.B       D3,D6
000014FE  6700 0170                792      BEQ         MATCH_OR_DN_L
00001502                           793  
00001502  1C3C 0004                794      MOVE.B      #EA_B,D6
00001506  BC03                     795      CMP.B       D3,D6
00001508  6700 0168                796      BEQ         MATCH_OR_EA_B
0000150C                           797  
0000150C  1C3C 0005                798      MOVE.B      #EA_W,D6
00001510  BC03                     799      CMP.B       D3,D6
00001512  6700 0160                800      BEQ         MATCH_OR_EA_W
00001516                           801  
00001516  1C3C 0006                802      MOVE.B      #EA_L,D6
0000151A  BC03                     803      CMP.B       D3,D6
0000151C  6700 0158                804      BEQ         MATCH_OR_EA_L
00001520                           805  
00001520  6000 12C2                806      BRA         ERROR
00001524                           807  
00001524                           808  CHECK_MOVEM
00001524                           809  
00001524  6100 FBE4                810      BSR         ReadFirstTenBits
00001528                           811  
00001528  3C3C 0122                812      MOVE.W      #MOVEM_TO_MEM_W,D6
0000152C  BC43                     813      CMP.W       D3,D6
0000152E  6700 05E2                814      BEQ         MATCH_MOVEM_TO_MEM_W
00001532                           815  
00001532  3C3C 0123                816      MOVE.W      #MOVEM_TO_MEM_L,D6
00001536  BC43                     817      CMP.W       D3,D6
00001538  6700 05F0                818      BEQ         MATCH_MOVEM_TO_MEM_L
0000153C                           819  
0000153C  3C3C 0132                820      MOVE.W      #MOVEM_TO_REG_W,D6
00001540  BC43                     821      CMP.W       D3,D6
00001542  6700 061C                822      BEQ         MATCH_MOVEM_TO_REG_W
00001546                           823  
00001546  3C3C 0133                824      MOVE.W      #MOVEM_TO_REG_L,D6
0000154A  BC43                     825      CMP.W       D3,D6
0000154C  6700 0616                826      BEQ         MATCH_MOVEM_TO_REG_L
00001550                           827  
00001550  6000 1292                828      BRA         ERROR
00001554                           829  CHECK_ADD_ADDA
00001554                           830  
00001554  6100 00EE                831      BSR         ISOLATE_OP_CODE
00001558                           832  
00001558  3C3C 0000                833      MOVE.W      #DN_B,D6
0000155C  BC43                     834      CMP.W       D3,D6
0000155E  6700 037C                835      BEQ         MATCH_ADD_TO_REG_B
00001562                           836  
00001562  3C3C 0001                837      MOVE.W      #DN_W,D6
00001566  BC43                     838      CMP.W       D3,D6
00001568  6700 038A                839      BEQ         MATCH_ADD_TO_REG_W
0000156C                           840  
0000156C  3C3C 0002                841      MOVE.W      #DN_L,D6
00001570  BC43                     842      CMP.W       D3,D6
00001572  6700 0398                843      BEQ         MATCH_ADD_TO_REG_L
00001576                           844  
00001576  3C3C 0004                845      MOVE.W      #EA_B,D6
0000157A  BC43                     846      CMP.W       D3,D6
0000157C  6700 0418                847      BEQ         MATCH_ADD_TO_EA_B
00001580                           848  
00001580  3C3C 0005                849      MOVE.W      #EA_W,D6
00001584  BC43                     850      CMP.W       D3,D6
00001586  6700 0426                851      BEQ         MATCH_ADD_TO_EA_W
0000158A                           852  
0000158A  3C3C 0006                853      MOVE.W      #EA_L,D6
0000158E  BC43                     854      CMP.W       D3,D6
00001590  6700 0434                855      BEQ         MATCH_ADD_TO_EA_L
00001594                           856  
00001594  3C3C 0003                857      MOVE.W      #ADDA_W,D6
00001598  BC43                     858      CMP.W       D3,D6
0000159A  6700 12AA                859      BEQ         MATCH_ADDA_W
0000159E                           860  
0000159E  3C3C 0007                861      MOVE.W      #ADDA_L,D6
000015A2  BC43                     862      CMP.W       D3,D6
000015A4  6700 12B8                863      BEQ         MATCH_ADDA_L
000015A8                           864  
000015A8  4E75                     865      RTS ** Change later?
000015AA                           866  CHECK_ADDQ
000015AA                           867  
000015AA  6100 0098                868      BSR         ISOLATE_OP_CODE
000015AE                           869  
000015AE  3C3C 0000                870      MOVE.W      #ADDQ_B,D6
000015B2  BC43                     871      CMP.W       D3,D6
000015B4  6700 049A                872      BEQ         MATCH_ADDQ_B
000015B8                           873  
000015B8  3C3C 0001                874      MOVE.W      #ADDQ_W,D6
000015BC  BC43                     875      CMP.W       D3,D6
000015BE  6700 04A8                876      BEQ         MATCH_ADDQ_W
000015C2                           877  
000015C2  3C3C 0002                878      MOVE.W      #ADDQ_L,D6
000015C6  BC43                     879      CMP.W       D3,D6
000015C8  6700 04B6                880      BEQ         MATCH_ADDQ_L
000015CC                           881  
000015CC                           882  CHECK_ADDI
000015CC                           883  
000015CC  6100 FB3C                884      BSR         ReadFirstTenBits
000015D0                           885  
000015D0  3C3C 0018                886      MOVE.W      #ADDI_B,D6
000015D4  BC43                     887      CMP.W       D3,D6
000015D6  6700 0296                888      BEQ         MATCH_ADDI_B
000015DA                           889  
000015DA  3C3C 0019                890      MOVE.W      #ADDI_W,D6
000015DE  BC43                     891      CMP.W       D3,D6
000015E0  6700 02A4                892      BEQ         MATCH_ADDI_W
000015E4                           893  
000015E4  3C3C 001A                894      MOVE.W      #ADDI_L,D6
000015E8  BC43                     895      CMP.W       D3,D6
000015EA  6700 02B2                896      BEQ         MATCH_ADDI_L
000015EE                           897  
000015EE  6000 FAFE                898      BRA         ADDI_RETURN
000015F2                           899  CHECK_SUB
000015F2                           900  
000015F2  6100 0050                901      BSR         ISOLATE_OP_CODE
000015F6                           902  
000015F6  3C3C 0000                903      MOVE.W      #DN_B,D6
000015FA  BC43                     904      CMP.W       D3,D6
000015FC  6700 0326                905      BEQ         MATCH_SUB_TO_DN_B
00001600                           906  
00001600  3C3C 0001                907      MOVE.W      #DN_W,D6
00001604  BC43                     908      CMP.W       D3,D6
00001606  6700 0334                909      BEQ         MATCH_SUB_TO_DN_W
0000160A                           910  
0000160A  3C3C 0002                911      MOVE.W      #DN_L,D6
0000160E  BC43                     912      CMP.W       D3,D6
00001610  6700 0342                913      BEQ         MATCH_SUB_TO_DN_L
00001614                           914  
00001614  3C3C 0004                915      MOVE.W      #EA_B,D6
00001618  BC43                     916      CMP.W       D3,D6
0000161A  6700 03C2                917      BEQ         MATCH_SUB_TO_EA_B
0000161E                           918  
0000161E  3C3C 0005                919      MOVE.W      #EA_W,D6
00001622  BC43                     920      CMP.W       D3,D6
00001624  6700 03D0                921      BEQ         MATCH_SUB_TO_EA_W
00001628                           922  
00001628  3C3C 0006                923      MOVE.W      #EA_L,D6
0000162C  BC43                     924      CMP.W       D3,D6
0000162E  6700 03DE                925      BEQ         MATCH_SUB_TO_EA_L
00001632                           926  CHECK_MOVEA_W_AND_MOVE_W
00001632                           927  
00001632  6100 0010                928      BSR         ISOLATE_OP_CODE
00001636                           929  
00001636  1C3C 0001                930      MOVE.B      #MOVEA_WL,D6
0000163A  BC03                     931      CMP.B       D3,D6
0000163C  6700 11B2                932      BEQ         MATCH_MOVEA_W
00001640                           933  
00001640  6000 0194                934      BRA         MATCH_MOVE_W
00001644                           935  ISOLATE_OP_CODE
00001644                           936  
00001644  48A7 2000                937      MOVEM.W     D2, -(SP)
00001648                           938  
00001648  1E3C 0007                939      MOVE.B      #7,D7
0000164C  EF6A                     940      LSL.W       D7,D2
0000164E  1E3C 000D                941      MOVE.B      #13,D7
00001652  EE6A                     942      LSR.W       D7,D2
00001654  1602                     943      MOVE.B      D2,D3
00001656                           944  
00001656  4C9F 0004                945      MOVEM.W     (SP)+,D2
0000165A  4E75                     946      RTS
0000165C                           947  CHECK_MOVEA_L_AND_MOVE_L
0000165C                           948  
0000165C  61E6                     949      BSR         ISOLATE_OP_CODE
0000165E                           950  
0000165E  1C3C 0001                951      MOVE.B      #MOVEA_WL,D6
00001662  BC03                     952      CMP.B       D3,D6
00001664  6700 11A2                953      BEQ         MATCH_MOVEA_L
00001668                           954  
00001668  6000 0184                955      BRA         MATCH_MOVE_L
0000166C                           956  
0000166C                           957  
0000166C                           958  
0000166C                           959  MATCH_OR_DN_B
0000166C  3A02                     960      MOVE.W      D2,D5       *REMOVE
0000166E                           961  MATCH_OR_DN_W
0000166E  3A02                     962      MOVE.W      D2,D5       *REMOVE
00001670                           963  MATCH_OR_DN_L
00001670  3A02                     964      MOVE.W      D2,D5       *REMOVE
00001672                           965  MATCH_OR_EA_B
00001672  3A02                     966      MOVE.W      D2,D5       *REMOVE
00001674                           967  MATCH_OR_EA_W
00001674  3A02                     968      MOVE.W      D2,D5       *REMOVE
00001676                           969  MATCH_OR_EA_L
00001676  3A02                     970      MOVE.W      D2,D5       *REMOVE
00001678                           971  
00001678                           972  MATCH_LEA
00001678  3A02                     973      MOVE.W      D2,D5       *REMOVE
0000167A                           974  
0000167A                           975  MATCH_MULS_L
0000167A  3A02                     976      MOVE.W      D2,D5       *REMOVE
0000167C                           977  
0000167C                           978  
0000167C                           979                  INCLUDE 'EADecoder.x68'
0000167C                           980  
0000167C                           981  
0000167C  =00010000                982  output      EQU $00010000
0000167C                           983  
0000167C  =0000003C                984  IMMEDIATE   EQU %00111100
0000167C  =00000038                985  ABS_WORD    EQU %00111000
0000167C  =00000039                986  ABS_LONG    EQU %00111001
0000167C  =00000000                987  Dn          EQU %00000000
0000167C  =00000008                988  An          EQU %00001000
0000167C  =00000010                989  INDIRECT    EQU %00010000
0000167C  =00000018                990  POST_INC    EQU %00011000
0000167C  =00000020                991  PRE_DEC     EQU %00100000
0000167C                           992  
0000167C                           993  
0000167C                           994  
0000167C                           995  EADecoder_left
0000167C  48E7 FF7E                996          MOVEM.L     D0-D7/A1-A6, -(SP)
00001680                           997          
00001680                           998          ** Swap the mode and register bits
00001680  1800                     999          MOVE.B  D0,D4
00001682  0200 0007               1000          ANDI.B  #%00000111,D0       * Mask mode
00001686  0204 0038               1001          ANDI.B  #%00111000,D4       * Mask register
0000168A  E708                    1002          LSL.B   #3,D0               * Move mode bits over
0000168C  E60C                    1003          LSR.B   #3,D4               * Move register bits over
0000168E  8004                    1004          OR.B    D4,D0               * Recombine
00001690                          1005          
00001690  6000 0006               1006          BRA     left_skip
00001694                          1007  
00001694                          1008  EADecoder
00001694  48E7 FF7E               1009          MOVEM.L     D0-D7/A1-A6, -(SP) *Store registers on stack, except D0
00001698                          1010  left_skip   
00001698  4242                    1011          CLR     D2    
0000169A  4243                    1012          CLR     D3 
0000169C  1401                    1013          MOVE.B  D1,D2 ** Store opcode size in bytes into D2
0000169E                          1014          
0000169E  43F9 00010000           1015          LEA     output,A1
000016A4  45F9 00010000           1016          LEA     output,A2
000016AA                          1017          
000016AA                          1018          *First, decoder will check for the 3 types with hard coded register values
000016AA  163C 0001               1019          MOVE.B  #1,D3
000016AE  B07C 003C               1020          CMP     #IMMEDIATE,D0
000016B2  6700 0068               1021          BEQ     dec_immediate
000016B6                          1022          
000016B6  B07C 0038               1023          CMP     #ABS_WORD,D0
000016BA  6700 007C               1024          BEQ     dec_abs_word
000016BE                          1025          
000016BE  B07C 0039               1026          CMP     #ABS_LONG,D0
000016C2  6700 0080               1027          BEQ     dec_abs_long
000016C6                          1028          
000016C6                          1029          *If it was none of the above, store the register and mode seperately
000016C6  4243                    1030          CLR     D3
000016C8  1200                    1031          MOVE.B  D0,D1
000016CA  0201 0038               1032          ANDI.B  #%00111000,D1           *Get mode value
000016CE  0200 0007               1033          ANDI.B  #%00000111,D0           *Get register value
000016D2  0600 0030               1034          ADDI.B  #$30,D0
000016D6                          1035                
000016D6  B27C 0000               1036          CMP     #Dn,D1
000016DA  6700 0074               1037          BEQ     dec_Dn 
000016DE                          1038          
000016DE  B27C 0008               1039          CMP     #An,D1
000016E2  6700 0078               1040          BEQ     dec_An
000016E6                          1041                  
000016E6  B27C 0010               1042          CMP     #INDIRECT,D1
000016EA  6700 007C               1043          BEQ     dec_indirect
000016EE                          1044                  
000016EE  B27C 0018               1045          CMP     #POST_INC,D1
000016F2  6700 0088               1046          BEQ     dec_post_inc
000016F6                          1047                  
000016F6  B27C 0020               1048          CMP     #PRE_DEC,D1
000016FA  6700 009A               1049          BEQ     dec_pre_dec
000016FE                          1050  
000016FE                          1051  dec_return ** Common return for all types
000016FE                          1052          
000016FE                          1053          ** Print display string
000016FE  103C 000E               1054          MOVE.B  #14,D0
00001702  4E4F                    1055          TRAP    #15
00001704                          1056          
00001704                          1057          ** If there is immediate data to print, print it
00001704  B67C 0001               1058          CMP     #1,D3
00001708  6600 000C               1059          BNE     imm_skip
0000170C                          1060          
0000170C  103C 000F               1061          MOVE.B  #15,D0
00001710  143C 0010               1062          MOVE.B  #16,D2
00001714  4E4F                    1063          TRAP    #15
00001716                          1064  
00001716                          1065  imm_skip
00001716  4CDF 7EFF               1066          MOVEM.L     (SP)+, D0-D7/A1-A6 *Return register data from stack, except D0
0000171A  4E75                    1067          RTS
0000171C                          1068          
0000171C                          1069          * Individual EA decoders *
0000171C                          1070  
0000171C                          1071  dec_immediate   *DECODE IMMEDIATE VALUE*
0000171C  14FC 0023               1072          MOVE.B  #'#',(A2)+  * Move '#' char into string
00001720  14FC 0024               1073          MOVE.B  #'$',(A2)+  * Move '$' char into string
00001724  14FC 0000               1074          MOVE.B  #$0,(A2)+   * Null terminate string
00001728  B47C 0002               1075          CMP     #2,D2       * Check if data is word length
0000172C  6700 0006               1076          BEQ     imm_word    
00001730                          1077          
00001730  2218                    1078          MOVE.L  (A0)+,D1    * Length was long
00001732  60CA                    1079          BRA     dec_return
00001734                          1080          
00001734                          1081  imm_word
00001734  3218                    1082          MOVE.W  (A0)+,D1    * Length was word
00001736  60C6                    1083          BRA     dec_return
00001738                          1084  
00001738                          1085  
00001738                          1086  dec_abs_word    *DECODE ABSOLUTE WORD*
00001738  14FC 0024               1087          MOVE.B  #'$',(A2)+  * Move '$' char into string
0000173C  14FC 0000               1088          MOVE.B  #$0,(A2)+   * Null terminate string
00001740  3218                    1089          MOVE.W  (A0)+,D1
00001742  60BA                    1090          BRA     dec_return
00001744                          1091          
00001744                          1092  
00001744                          1093  dec_abs_long    *DECODE ABSOLUTE LONG*
00001744  14FC 0024               1094          MOVE.B  #'$',(A2)+  * Move '$' char into string
00001748  14FC 0000               1095          MOVE.B  #$0,(A2)+   * Null terminate string
0000174C  2218                    1096          MOVE.L  (A0)+,D1
0000174E  60AE                    1097          BRA     dec_return
00001750                          1098          
00001750                          1099  
00001750                          1100  dec_Dn          *DECODE DIRECT DATA*
00001750  14FC 0044               1101          MOVE.B  #'D',(A2)+
00001754  14C0                    1102          MOVE.B  D0,(A2)+
00001756  14FC 0000               1103          MOVE.B  #$0,(A2)+
0000175A  60A2                    1104          BRA     dec_return
0000175C                          1105  
0000175C                          1106          
0000175C                          1107  dec_An          *DECODE DIRECT ADDRESS*
0000175C  14FC 0041               1108          MOVE.B  #'A',(A2)+
00001760  14C0                    1109          MOVE.B  D0,(A2)+
00001762  14FC 0000               1110          MOVE.B  #$0,(A2)+
00001766  6096                    1111          BRA     dec_return
00001768                          1112  
00001768                          1113  
00001768                          1114  dec_indirect    *DECODE INDIRECT ACCESS*
00001768  14FC 0028               1115          MOVE.B  #'(',(A2)+
0000176C  14FC 0041               1116          MOVE.B  #'A',(A2)+
00001770  14C0                    1117          MOVE.B  D0,(A2)+
00001772  14FC 0029               1118          MOVE.B  #')',(A2)+
00001776  14FC 0000               1119          MOVE.B  #$0,(A2)+
0000177A  6082                    1120          BRA     dec_return
0000177C                          1121          
0000177C                          1122  
0000177C                          1123  dec_post_inc    *DECODE INDIRECT POST INCREMENT*
0000177C  14FC 0028               1124          MOVE.B  #'(',(A2)+
00001780  14FC 0041               1125          MOVE.B  #'A',(A2)+
00001784  14C0                    1126          MOVE.B  D0,(A2)+
00001786  14FC 0029               1127          MOVE.B  #')',(A2)+
0000178A  14FC 002B               1128          MOVE.B  #'+',(A2)+
0000178E  14FC 0000               1129          MOVE.B  #$0,(A2)+
00001792  6000 FF6A               1130          BRA     dec_return
00001796                          1131          
00001796                          1132          
00001796                          1133  dec_pre_dec    *DECODE INDIRECT PRE DECREMENT*
00001796  14FC 002D               1134          MOVE.B  #'-',(A2)+
0000179A  14FC 0028               1135          MOVE.B  #'(',(A2)+
0000179E  14FC 0041               1136          MOVE.B  #'A',(A2)+
000017A2  14C0                    1137          MOVE.B  D0,(A2)+
000017A4  14FC 0029               1138          MOVE.B  #')',(A2)+
000017A8  14FC 0000               1139          MOVE.B  #$0,(A2)+
000017AC  6000 FF50               1140          BRA     dec_return
000017B0                          1141  
000017B0                          1142  
000017B0                          1143  
000017B0                          1144  
000017B0                          1145  
000017B0                          1146  
000017B0                          1147  
000017B0                          1148  
000017B0                          1149  
000017B0                          1150  -------------------- end include --------------------
000017B0                          1151                  INCLUDE 'connor_opcodes.x68'
000017B0                          1152  
000017B0                          1153  
000017B0                          1154  MATCH_NOP
000017B0  43F8 0028               1155      LEA         pr_NOP,A1
000017B4  103C 000E               1156      MOVE.B      #14,D0
000017B8  4E4F                    1157      TRAP        #15
000017BA  6000 F936               1158      BRA         opdec_return
000017BE                          1159  
000017BE                          1160  
000017BE                          1161  MATCH_MOVE_B
000017BE                          1162      ** Move command size into D1
000017BE  123C 0002               1163      MOVE.B      #2,D1
000017C2                          1164      ** Print command
000017C2  103C 000E               1165      MOVE.B      #14,D0
000017C6  43F8 002C               1166      LEA         pr_MOVE,A1
000017CA  4E4F                    1167      TRAP        #15
000017CC                          1168      ** Print size
000017CC  43F8 0016               1169      LEA         pr_BYTE,A1
000017D0  4E4F                    1170      TRAP        #15
000017D2                          1171  
000017D2  6000 0032               1172      BRA         print_move
000017D6                          1173  
000017D6                          1174  MATCH_MOVE_W
000017D6                          1175      ** Move command size into D1
000017D6  123C 0002               1176      MOVE.B      #2,D1
000017DA                          1177      ** Print command
000017DA  103C 000E               1178      MOVE.B      #14,D0
000017DE  43F8 002C               1179      LEA         pr_MOVE,A1
000017E2  4E4F                    1180      TRAP        #15
000017E4                          1181      ** Print size
000017E4  43F8 0019               1182      LEA         pr_WORD,A1
000017E8  4E4F                    1183      TRAP        #15
000017EA                          1184  
000017EA  6000 001A               1185      BRA         print_move
000017EE                          1186  
000017EE                          1187  MATCH_MOVE_L
000017EE                          1188      ** Move command size into D1
000017EE  123C 0004               1189      MOVE.B      #4,D1
000017F2                          1190      ** Print command
000017F2  103C 000E               1191      MOVE.B      #14,D0
000017F6  43F8 002C               1192      LEA         pr_MOVE,A1
000017FA  4E4F                    1193      TRAP        #15
000017FC                          1194      ** Print size
000017FC  43F8 001C               1195      LEA         pr_LONG,A1
00001800  4E4F                    1196      TRAP        #15
00001802                          1197  
00001802  6000 0002               1198      BRA         print_move
00001806                          1199  
00001806                          1200  print_move
00001806                          1201      ** Print space
00001806  43F8 0000               1202      LEA         pr_space,A1
0000180A  4E4F                    1203      TRAP        #15
0000180C                          1204      ** Decode right side ea
0000180C  1002                    1205      MOVE.B      D2,D0
0000180E  0200 003F               1206      ANDI.B      #%00111111,D0
00001812  4EB8 1694               1207      JSR         EADecoder
00001816                          1208      ** Add comma
00001816  103C 000E               1209      MOVE.B      #14,D0
0000181A  43F8 0014               1210      LEA         pr_comma,A1
0000181E  4E4F                    1211      TRAP        #15
00001820                          1212      ** Decode left side ea
00001820  3002                    1213      MOVE.W      D2,D0
00001822  0240 0FC0               1214      ANDI.W      #%0000111111000000,D0
00001826  EC48                    1215      LSR.W       #6,D0
00001828  4EB8 167C               1216      JSR         EADecoder_left
0000182C                          1217  
0000182C  6000 F8C4               1218      BRA         opdec_return
00001830                          1219  
00001830                          1220  
00001830                          1221  MATCH_MOVEQ
00001830                          1222      ** Print command
00001830  103C 000E               1223      MOVE.B      #14,D0
00001834  43F8 005B               1224      LEA         pr_MOVEQ,A1
00001838  4E4F                    1225      TRAP        #15
0000183A                          1226      ** Print space
0000183A  43F8 0000               1227      LEA         pr_space,A1
0000183E  4E4F                    1228      TRAP        #15
00001840                          1229      ** Print hex tag
00001840  43F8 0021               1230      LEA         pr_hextag,A1
00001844  4E4F                    1231      TRAP        #15
00001846                          1232      ** Print data
00001846  1202                    1233      MOVE.B      D2,D1
00001848  103C 000F               1234      MOVE.B      #15,D0
0000184C  2602                    1235      MOVE.L      D2,D3
0000184E  7410                    1236      MOVE.L      #16,D2
00001850  4E4F                    1237      TRAP        #15
00001852  2403                    1238      MOVE.L      D3,D2
00001854                          1239      ** Add comma
00001854  103C 000E               1240      MOVE.B      #14,D0
00001858  43F8 0014               1241      LEA         pr_comma,A1
0000185C  4E4F                    1242      TRAP        #15
0000185E                          1243      ** Decode register
0000185E  3002                    1244      MOVE.W      D2,D0
00001860  0240 0E00               1245      ANDI.W      #%0000111000000000,D0
00001864  EC48                    1246      LSR.W       #6,D0
00001866  4EB8 167C               1247      JSR         EADecoder_left
0000186A                          1248  
0000186A  6000 F886               1249      BRA         opdec_return
0000186E                          1250  
0000186E                          1251  
0000186E                          1252  MATCH_ADDI_B
0000186E                          1253      ** Move command size into D1
0000186E  123C 0002               1254      MOVE.B      #2,D1
00001872                          1255      ** Print command
00001872  103C 000E               1256      MOVE.B      #14,D0
00001876  43F8 0065               1257      LEA         pr_ADDI,A1
0000187A  4E4F                    1258      TRAP        #15
0000187C                          1259      ** Print size
0000187C  43F8 0016               1260      LEA         pr_BYTE,A1
00001880  4E4F                    1261      TRAP        #15
00001882                          1262  
00001882  6000 0032               1263      BRA         print_addi
00001886                          1264  
00001886                          1265  MATCH_ADDI_W
00001886                          1266      ** Move command size into D1
00001886  123C 0002               1267      MOVE.B      #2,D1
0000188A                          1268      ** Print command
0000188A  103C 000E               1269      MOVE.B      #14,D0
0000188E  43F8 0065               1270      LEA         pr_ADDI,A1
00001892  4E4F                    1271      TRAP        #15
00001894                          1272      ** Print size
00001894  43F8 0019               1273      LEA         pr_WORD,A1
00001898  4E4F                    1274      TRAP        #15
0000189A                          1275  
0000189A  6000 001A               1276      BRA         print_addi
0000189E                          1277  
0000189E                          1278  MATCH_ADDI_L
0000189E                          1279      ** Move command size into D1
0000189E  123C 0004               1280      MOVE.B      #4,D1
000018A2                          1281      ** Print command
000018A2  103C 000E               1282      MOVE.B      #14,D0
000018A6  43F8 0065               1283      LEA         pr_ADDI,A1
000018AA  4E4F                    1284      TRAP        #15
000018AC                          1285      ** Print size
000018AC  43F8 001C               1286      LEA         pr_LONG,A1
000018B0  4E4F                    1287      TRAP        #15
000018B2                          1288  
000018B2  6000 0002               1289      BRA         print_addi
000018B6                          1290  
000018B6                          1291  print_addi
000018B6                          1292      ** Print space
000018B6  43F8 0000               1293      LEA         pr_space,A1
000018BA  4E4F                    1294      TRAP        #15
000018BC                          1295      ** Print Immediate data
000018BC  103C 003C               1296      MOVE.B      #%00111100,D0
000018C0  4EB8 1694               1297      JSR         EADecoder
000018C4                          1298      ** Add comma
000018C4  103C 000E               1299      MOVE.B      #14,D0
000018C8  43F8 0014               1300      LEA         pr_comma,A1
000018CC  4E4F                    1301      TRAP        #15
000018CE                          1302      ** Decode right side ea
000018CE  1002                    1303      MOVE.B      D2,D0
000018D0  0200 003F               1304      ANDI.B      #%00111111,D0
000018D4  4EB8 1694               1305      JSR         EADecoder
000018D8                          1306  
000018D8  6000 F818               1307      BRA         opdec_return
000018DC                          1308  
000018DC                          1309  
000018DC                          1310  MATCH_ADD_TO_REG_B
000018DC                          1311      ** Move command size into D1
000018DC  123C 0002               1312      MOVE.B      #2,D1
000018E0                          1313      ** Print command
000018E0  103C 000E               1314      MOVE.B      #14,D0
000018E4  43F8 0061               1315      LEA         pr_ADD,A1
000018E8  4E4F                    1316      TRAP        #15
000018EA                          1317      ** Print size
000018EA  43F8 0016               1318      LEA         pr_BYTE,A1
000018EE  4E4F                    1319      TRAP        #15
000018F0                          1320  
000018F0  6000 007A               1321      BRA         print_add_to_reg
000018F4                          1322  
000018F4                          1323  MATCH_ADD_TO_REG_W
000018F4                          1324      ** Move command size into D1
000018F4  123C 0002               1325      MOVE.B      #2,D1
000018F8                          1326      ** Print command
000018F8  103C 000E               1327      MOVE.B      #14,D0
000018FC  43F8 0061               1328      LEA         pr_ADD,A1
00001900  4E4F                    1329      TRAP        #15
00001902                          1330      ** Print size
00001902  43F8 0019               1331      LEA         pr_WORD,A1
00001906  4E4F                    1332      TRAP        #15
00001908                          1333  
00001908  6000 0062               1334      BRA         print_add_to_reg
0000190C                          1335  
0000190C                          1336  MATCH_ADD_TO_REG_L
0000190C                          1337      ** Move command size into D1
0000190C  123C 0004               1338      MOVE.B      #4,D1
00001910                          1339      ** Print command
00001910  103C 000E               1340      MOVE.B      #14,D0
00001914  43F8 0061               1341      LEA         pr_ADD,A1
00001918  4E4F                    1342      TRAP        #15
0000191A                          1343      ** Print size
0000191A  43F8 001C               1344      LEA         pr_LONG,A1
0000191E  4E4F                    1345      TRAP        #15
00001920                          1346  
00001920  6000 004A               1347      BRA         print_add_to_reg
00001924                          1348  
00001924                          1349  MATCH_SUB_TO_DN_B
00001924                          1350      ** Move command size into D1
00001924  123C 0002               1351      MOVE.B      #2,D1
00001928                          1352      ** Print command
00001928  103C 000E               1353      MOVE.B      #14,D0
0000192C  43F8 006F               1354      LEA         pr_SUB,A1
00001930  4E4F                    1355      TRAP        #15
00001932                          1356      ** Print size
00001932  43F8 0016               1357      LEA         pr_BYTE,A1
00001936  4E4F                    1358      TRAP        #15
00001938                          1359  
00001938  6000 0032               1360      BRA         print_add_to_reg
0000193C                          1361  
0000193C                          1362  MATCH_SUB_TO_DN_W
0000193C                          1363      ** Move command size into D1
0000193C  123C 0002               1364      MOVE.B      #2,D1
00001940                          1365      ** Print command
00001940  103C 000E               1366      MOVE.B      #14,D0
00001944  43F8 006F               1367      LEA         pr_SUB,A1
00001948  4E4F                    1368      TRAP        #15
0000194A                          1369      ** Print size
0000194A  43F8 0019               1370      LEA         pr_WORD,A1
0000194E  4E4F                    1371      TRAP        #15
00001950                          1372  
00001950  6000 001A               1373      BRA         print_add_to_reg
00001954                          1374  
00001954                          1375  MATCH_SUB_TO_DN_L
00001954                          1376      ** Move command size into D1
00001954  123C 0004               1377      MOVE.B      #4,D1
00001958                          1378      ** Print command
00001958  103C 000E               1379      MOVE.B      #14,D0
0000195C  43F8 006F               1380      LEA         pr_SUB,A1
00001960  4E4F                    1381      TRAP        #15
00001962                          1382      ** Print size
00001962  43F8 001C               1383      LEA         pr_LONG,A1
00001966  4E4F                    1384      TRAP        #15
00001968                          1385  
00001968  6000 0002               1386      BRA         print_add_to_reg
0000196C                          1387  
0000196C                          1388  print_add_to_reg
0000196C                          1389      ** Print space
0000196C  43F8 0000               1390      LEA         pr_space,A1
00001970  4E4F                    1391      TRAP        #15
00001972                          1392      ** Print source
00001972  1002                    1393      MOVE.B      D2,D0
00001974  0200 003F               1394      ANDI.B      #%00111111,D0
00001978  4EB8 1694               1395      JSR         EADecoder
0000197C                          1396      ** Add comma
0000197C  103C 000E               1397      MOVE.B      #14,D0
00001980  43F8 0014               1398      LEA         pr_comma,A1
00001984  4E4F                    1399      TRAP        #15
00001986                          1400      ** Print destination
00001986  3002                    1401      MOVE.W      D2,D0
00001988  0240 0E00               1402      ANDI.W      #%0000111000000000,D0
0000198C  EC48                    1403      LSR.W       #6,D0
0000198E  4EB8 167C               1404      JSR         EADecoder_left
00001992                          1405  
00001992  6000 F75E               1406      BRA         opdec_return
00001996                          1407  
00001996                          1408  MATCH_ADD_TO_EA_B
00001996                          1409      ** Move command size into D1
00001996  123C 0002               1410      MOVE.B      #2,D1
0000199A                          1411      ** Print command
0000199A  103C 000E               1412      MOVE.B      #14,D0
0000199E  43F8 0061               1413      LEA         pr_ADD,A1
000019A2  4E4F                    1414      TRAP        #15
000019A4                          1415      ** Print size
000019A4  43F8 0016               1416      LEA         pr_BYTE,A1
000019A8  4E4F                    1417      TRAP        #15
000019AA                          1418  
000019AA  6000 007A               1419      BRA         print_add_to_ea
000019AE                          1420  
000019AE                          1421  MATCH_ADD_TO_EA_W
000019AE                          1422      ** Move command size into D1
000019AE  123C 0002               1423      MOVE.B      #2,D1
000019B2                          1424      ** Print command
000019B2  103C 000E               1425      MOVE.B      #14,D0
000019B6  43F8 0061               1426      LEA         pr_ADD,A1
000019BA  4E4F                    1427      TRAP        #15
000019BC                          1428      ** Print size
000019BC  43F8 0019               1429      LEA         pr_WORD,A1
000019C0  4E4F                    1430      TRAP        #15
000019C2                          1431  
000019C2  6000 0062               1432      BRA         print_add_to_ea
000019C6                          1433  
000019C6                          1434  MATCH_ADD_TO_EA_L
000019C6                          1435      ** Move command size into D1
000019C6  123C 0004               1436      MOVE.B      #4,D1
000019CA                          1437      ** Print command
000019CA  103C 000E               1438      MOVE.B      #14,D0
000019CE  43F8 0061               1439      LEA         pr_ADD,A1
000019D2  4E4F                    1440      TRAP        #15
000019D4                          1441      ** Print size
000019D4  43F8 001C               1442      LEA         pr_LONG,A1
000019D8  4E4F                    1443      TRAP        #15
000019DA                          1444  
000019DA  6000 004A               1445      BRA         print_add_to_ea
000019DE                          1446  
000019DE                          1447  MATCH_SUB_TO_EA_B
000019DE                          1448      ** Move command size into D1
000019DE  123C 0002               1449      MOVE.B      #2,D1
000019E2                          1450      ** Print command
000019E2  103C 000E               1451      MOVE.B      #14,D0
000019E6  43F8 006F               1452      LEA         pr_SUB,A1
000019EA  4E4F                    1453      TRAP        #15
000019EC                          1454      ** Print size
000019EC  43F8 0016               1455      LEA         pr_BYTE,A1
000019F0  4E4F                    1456      TRAP        #15
000019F2                          1457  
000019F2  6000 0032               1458      BRA         print_add_to_ea
000019F6                          1459  
000019F6                          1460  MATCH_SUB_TO_EA_W
000019F6                          1461      ** Move command size into D1
000019F6  123C 0002               1462      MOVE.B      #2,D1
000019FA                          1463      ** Print command
000019FA  103C 000E               1464      MOVE.B      #14,D0
000019FE  43F8 006F               1465      LEA         pr_SUB,A1
00001A02  4E4F                    1466      TRAP        #15
00001A04                          1467      ** Print size
00001A04  43F8 0019               1468      LEA         pr_WORD,A1
00001A08  4E4F                    1469      TRAP        #15
00001A0A                          1470  
00001A0A  6000 001A               1471      BRA         print_add_to_ea
00001A0E                          1472  
00001A0E                          1473  MATCH_SUB_TO_EA_L
00001A0E                          1474      ** Move command size into D1
00001A0E  123C 0004               1475      MOVE.B      #4,D1
00001A12                          1476      ** Print command
00001A12  103C 000E               1477      MOVE.B      #14,D0
00001A16  43F8 006F               1478      LEA         pr_SUB,A1
00001A1A  4E4F                    1479      TRAP        #15
00001A1C                          1480      ** Print size
00001A1C  43F8 001C               1481      LEA         pr_LONG,A1
00001A20  4E4F                    1482      TRAP        #15
00001A22                          1483  
00001A22  6000 0002               1484      BRA         print_add_to_ea
00001A26                          1485  
00001A26                          1486  print_add_to_ea
00001A26                          1487      ** Print space
00001A26  43F8 0000               1488      LEA         pr_space,A1
00001A2A  4E4F                    1489      TRAP        #15
00001A2C                          1490      ** Print Source
00001A2C  3002                    1491      MOVE.W      D2,D0
00001A2E  0240 0E00               1492      ANDI.W      #%0000111000000000,D0
00001A32  EC48                    1493      LSR.W       #6,D0
00001A34  4EB8 167C               1494      JSR         EADecoder_left
00001A38                          1495      ** Add comma
00001A38  103C 000E               1496      MOVE.B      #14,D0
00001A3C  43F8 0014               1497      LEA         pr_comma,A1
00001A40  4E4F                    1498      TRAP        #15
00001A42                          1499      ** Print source
00001A42  1002                    1500      MOVE.B      D2,D0
00001A44  0200 003F               1501      ANDI.B      #%00111111,D0
00001A48  4EB8 1694               1502      JSR         EADecoder
00001A4C                          1503  
00001A4C  6000 F6A4               1504      BRA         opdec_return
00001A50                          1505  
00001A50                          1506  
00001A50                          1507  MATCH_ADDQ_B
00001A50                          1508      ** Move command size into D1
00001A50  123C 0002               1509      MOVE.B      #2,D1
00001A54                          1510      ** Print command
00001A54  103C 000E               1511      MOVE.B      #14,D0
00001A58  43F8 006A               1512      LEA         pr_ADDQ,A1
00001A5C  4E4F                    1513      TRAP        #15
00001A5E                          1514      ** Print size
00001A5E  43F8 0016               1515      LEA         pr_BYTE,A1
00001A62  4E4F                    1516      TRAP        #15
00001A64                          1517  
00001A64  6000 0032               1518      BRA         print_addq
00001A68                          1519  
00001A68                          1520  MATCH_ADDQ_W
00001A68                          1521      ** Move command size into D1
00001A68  123C 0002               1522      MOVE.B      #2,D1
00001A6C                          1523      ** Print command
00001A6C  103C 000E               1524      MOVE.B      #14,D0
00001A70  43F8 006A               1525      LEA         pr_ADDQ,A1
00001A74  4E4F                    1526      TRAP        #15
00001A76                          1527      ** Print size
00001A76  43F8 0019               1528      LEA         pr_WORD,A1
00001A7A  4E4F                    1529      TRAP        #15
00001A7C                          1530  
00001A7C  6000 001A               1531      BRA         print_addq
00001A80                          1532  
00001A80                          1533  MATCH_ADDQ_L
00001A80                          1534      ** Move command size into D1
00001A80  123C 0004               1535      MOVE.B      #4,D1
00001A84                          1536      ** Print command
00001A84  103C 000E               1537      MOVE.B      #14,D0
00001A88  43F8 006A               1538      LEA         pr_ADDQ,A1
00001A8C  4E4F                    1539      TRAP        #15
00001A8E                          1540      ** Print size
00001A8E  43F8 001C               1541      LEA         pr_LONG,A1
00001A92  4E4F                    1542      TRAP        #15
00001A94                          1543  
00001A94  6000 0002               1544      BRA         print_addq
00001A98                          1545  
00001A98                          1546  print_addq
00001A98                          1547      ** Print space
00001A98  43F8 0000               1548      LEA         pr_space,A1
00001A9C  4E4F                    1549      TRAP        #15
00001A9E                          1550      ** Print hash
00001A9E  43F8 001F               1551      LEA         pr_hash,A1
00001AA2  4E4F                    1552      TRAP        #15
00001AA4                          1553      ** Print Immediate data
00001AA4  3602                    1554      MOVE.W      D2,D3 * Temporarily move op data
00001AA6  3202                    1555      MOVE.W      D2,D1
00001AA8  0241 0E00               1556      ANDI.W      #%0000111000000000,D1
00001AAC  EC49                    1557      LSR.W       #6,D1
00001AAE  E649                    1558      LSR.W       #3,D1
00001AB0  143C 0010               1559      MOVE.B      #16,D2
00001AB4  303C 000F               1560      MOVE.W      #15,D0
00001AB8  4E4F                    1561      TRAP        #15
00001ABA                          1562  
00001ABA  3403                    1563      MOVE.W      D3,D2 * Move op data back
00001ABC                          1564  
00001ABC                          1565      ** Add comma
00001ABC  103C 000E               1566      MOVE.B      #14,D0
00001AC0  43F8 0014               1567      LEA         pr_comma,A1
00001AC4  4E4F                    1568      TRAP        #15
00001AC6                          1569      ** Decode right side ea
00001AC6  1002                    1570      MOVE.B      D2,D0
00001AC8  0200 003F               1571      ANDI.B      #%00111111,D0
00001ACC  4EB8 1694               1572      JSR         EADecoder
00001AD0                          1573  
00001AD0  6000 F620               1574      BRA         opdec_return
00001AD4                          1575  
00001AD4                          1576  
00001AD4                          1577  MATCH_DIVU
00001AD4                          1578      ** Move command size into D1
00001AD4  123C 0002               1579      MOVE.B      #2,D1
00001AD8                          1580      ** Print command
00001AD8  103C 000E               1581      MOVE.B      #14,D0
00001ADC  43F8 0073               1582      LEA         pr_DIVU,A1
00001AE0  4E4F                    1583      TRAP        #15
00001AE2                          1584      ** Print size
00001AE2  43F8 0019               1585      LEA         pr_WORD,A1
00001AE6  4E4F                    1586      TRAP        #15
00001AE8                          1587      ** Print space
00001AE8  43F8 0000               1588      LEA         pr_space,A1
00001AEC  4E4F                    1589      TRAP        #15
00001AEE                          1590      ** Decode right side ea
00001AEE  1002                    1591      MOVE.B      D2,D0
00001AF0  0200 003F               1592      ANDI.B      #%00111111,D0
00001AF4  4EB8 1694               1593      JSR         EADecoder
00001AF8                          1594      ** Add comma
00001AF8  103C 000E               1595      MOVE.B      #14,D0
00001AFC  43F8 0014               1596      LEA         pr_comma,A1
00001B00  4E4F                    1597      TRAP        #15
00001B02                          1598      ** Decode left side ea
00001B02  3002                    1599      MOVE.W      D2,D0
00001B04  0240 0E00               1600      ANDI.W      #%0000111000000000,D0
00001B08  EC88                    1601      LSR.L       #6,D0
00001B0A  4EB8 167C               1602      JSR         EADecoder_left
00001B0E                          1603  
00001B0E  6000 F5E2               1604      BRA         opdec_return
00001B12                          1605  
00001B12                          1606  
00001B12                          1607  
00001B12                          1608  MATCH_MOVEM_TO_MEM_W
00001B12                          1609      ** Move command size into D1
00001B12  123C 0002               1610      MOVE.B      #2,D1
00001B16                          1611      ** Print command
00001B16  103C 000E               1612      MOVE.B      #14,D0
00001B1A  43F8 0037               1613      LEA         pr_MOVEM,A1
00001B1E  4E4F                    1614      TRAP        #15
00001B20                          1615      ** Print size
00001B20  43F8 0019               1616      LEA         pr_WORD,A1
00001B24  4E4F                    1617      TRAP        #15
00001B26                          1618  
00001B26  6000 0016               1619      BRA         print_movem_to_mem
00001B2A                          1620  MATCH_MOVEM_TO_MEM_L
00001B2A                          1621      ** Move command size into D1
00001B2A  123C 0004               1622      MOVE.B      #4,D1
00001B2E                          1623      ** Print command
00001B2E  103C 000E               1624      MOVE.B      #14,D0
00001B32  43F8 0037               1625      LEA         pr_MOVEM,A1
00001B36  4E4F                    1626      TRAP        #15
00001B38                          1627      ** Print size
00001B38  43F8 001C               1628      LEA         pr_LONG,A1
00001B3C  4E4F                    1629      TRAP        #15
00001B3E                          1630  print_movem_to_mem
00001B3E                          1631      ** Print space
00001B3E  43F8 0000               1632      LEA         pr_space,A1
00001B42  4E4F                    1633      TRAP        #15
00001B44                          1634  
00001B44                          1635      ** Print registers
00001B44  6100 0022               1636      BSR         print_movem_mask_to_mem
00001B48                          1637  
00001B48                          1638      ** Add comma
00001B48  103C 000E               1639      MOVE.B      #14,D0
00001B4C  43F8 0014               1640      LEA         pr_comma,A1
00001B50  4E4F                    1641      TRAP        #15
00001B52                          1642  
00001B52                          1643      ** Decode right side ea
00001B52  1002                    1644      MOVE.B      D2,D0
00001B54  0200 003F               1645      ANDI.B      #%00111111,D0
00001B58  4EB8 1694               1646      JSR         EADecoder
00001B5C                          1647  
00001B5C  6000 F594               1648      BRA         opdec_return
00001B60                          1649  
00001B60                          1650  
00001B60                          1651  MATCH_MOVEM_TO_REG_W
00001B60  6000 F590               1652      BRA         opdec_return
00001B64                          1653  MATCH_MOVEM_TO_REG_L
00001B64  6000 F58C               1654      BRA         opdec_return
00001B68                          1655  
00001B68                          1656  
00001B68                          1657  
00001B68                          1658  print_movem_mask_to_mem
00001B68  48A7 FF7E               1659      MOVEM       D0-D7/A1-A6,-(SP)
00001B6C                          1660  
00001B6C  4243                    1661      CLR         D3          ** Temp register
00001B6E  3A10                    1662      MOVE.W      (A0),D5     ** Holds address registers
00001B70  3818                    1663      MOVE.W      (A0)+,D4    ** Holds direct registers
00001B72  0245 00FF               1664      ANDI.W      #%0000000011111111,D5
00001B76  0244 FF00               1665      ANDI.W      #%1111111100000000,D4
00001B7A  E04C                    1666      LSR.W       #8,D4
00001B7C                          1667  
00001B7C  6100 001A               1668      BSR         print_movem_dn
00001B80                          1669  
00001B80                          1670      ** Print ADDRESS REG slash
00001B80  103C 000E               1671      MOVE.B      #14,D0
00001B84  43F8 0026               1672      LEA         pr_slash,A1
00001B88  4E4F                    1673      TRAP        #15
00001B8A                          1674  
00001B8A  1805                    1675      MOVE.B      D5,D4
00001B8C  6100 01C6               1676      BSR         print_movem_an
00001B90                          1677  
00001B90  4C9F 7EFF               1678      MOVEM       (SP)+,D0-D7/A1-A6
00001B94  4E75                    1679      RTS
00001B96                          1680  
00001B96                          1681  print_movem_mask_to_REG
00001B96  4E75                    1682      RTS
00001B98                          1683  
00001B98                          1684  
00001B98                          1685  
00001B98                          1686  print_movem_dn
00001B98                          1687  to_mem_d0 *************************** D0
00001B98                          1688      ** Test bit
00001B98  0804 0007               1689      BTST        #7,D4
00001B9C  6700 001C               1690      BEQ         to_mem_d1
00001BA0                          1691      ** Set D3
00001BA0  163C 0001               1692      MOVE.B      #1,D3
00001BA4                          1693      ** Print register
00001BA4  103C 000E               1694      MOVE.B      #14,D0
00001BA8  43F8 00C5               1695      LEA         pr_d0,A1
00001BAC  4E4F                    1696      TRAP        #15
00001BAE                          1697  
00001BAE                          1698      ** Check if next bit is clear
00001BAE                          1699      ** If true, skip next
00001BAE  0804 0006               1700      BTST        #6,D4
00001BB2  6700 0028               1701      BEQ         to_mem_d2
00001BB6                          1702      ** Else, check cascade
00001BB6  6000 00FC               1703      BRA         cascade_d1
00001BBA                          1704  
00001BBA                          1705  to_mem_d1 *************************** D1
00001BBA                          1706      ** Test bit
00001BBA  0804 0006               1707      BTST        #6,D4
00001BBE  6700 001C               1708      BEQ         to_mem_d2
00001BC2                          1709      ** Set D3
00001BC2  163C 0001               1710      MOVE.B      #1,D3
00001BC6                          1711      ** Print register
00001BC6  103C 000E               1712      MOVE.B      #14,D0
00001BCA  43F8 00C8               1713      LEA         pr_d1,A1
00001BCE  4E4F                    1714      TRAP        #15
00001BD0                          1715  
00001BD0                          1716      ** Check if next bit is clear
00001BD0                          1717      ** If true, skip next
00001BD0  0804 0005               1718      BTST        #5,D4
00001BD4  6700 002C               1719      BEQ         to_mem_d3
00001BD8                          1720      ** Else, check cascade
00001BD8  6000 00F2               1721      BRA         cascade_d2
00001BDC                          1722  
00001BDC                          1723  to_mem_d2 *************************** D2
00001BDC                          1724      ** Test bit
00001BDC  0804 0005               1725      BTST        #5,D4
00001BE0  6700 0020               1726      BEQ         to_mem_d3
00001BE4                          1727      ** Print slash if D3 set
00001BE4  6100 032A               1728      BSR         slash_check
00001BE8                          1729      ** Set D3
00001BE8  163C 0001               1730      MOVE.B      #1,D3
00001BEC                          1731      ** Print register
00001BEC  103C 000E               1732      MOVE.B      #14,D0
00001BF0  43F8 00CB               1733      LEA         pr_d2,A1
00001BF4  4E4F                    1734      TRAP        #15
00001BF6                          1735  
00001BF6                          1736      ** Check if next bit is clear
00001BF6                          1737      ** If true, skip next
00001BF6  0804 0004               1738      BTST        #4,D4
00001BFA  6700 002C               1739      BEQ         to_mem_d4
00001BFE                          1740      ** Else, check cascade
00001BFE  6000 00E4               1741      BRA         cascade_d3
00001C02                          1742  
00001C02                          1743  to_mem_d3 *************************** D3
00001C02                          1744      ** Test bit
00001C02  0804 0004               1745      BTST        #4,D4
00001C06  6700 0020               1746      BEQ         to_mem_d4
00001C0A                          1747      ** Print slash if D3 set
00001C0A  6100 0304               1748      BSR         slash_check
00001C0E                          1749      ** Set D3
00001C0E  163C 0001               1750      MOVE.B      #1,D3
00001C12                          1751      ** Print register
00001C12  103C 000E               1752      MOVE.B      #14,D0
00001C16  43F8 00CE               1753      LEA         pr_d3,A1
00001C1A  4E4F                    1754      TRAP        #15
00001C1C                          1755  
00001C1C                          1756      ** Check if next bit is clear
00001C1C                          1757      ** If true, skip next
00001C1C  0804 0003               1758      BTST        #3,D4
00001C20  6700 002C               1759      BEQ         to_mem_d5
00001C24                          1760      ** Else, check cascade
00001C24  6000 00D6               1761      BRA         cascade_d4
00001C28                          1762  
00001C28                          1763  to_mem_d4 *************************** D4
00001C28                          1764      ** Test bit
00001C28  0804 0003               1765      BTST        #3,D4
00001C2C  6700 0020               1766      BEQ         to_mem_d5
00001C30                          1767      ** Print slash if D3 set
00001C30  6100 02DE               1768      BSR         slash_check
00001C34                          1769      ** Set D3
00001C34  163C 0001               1770      MOVE.B      #1,D3
00001C38                          1771      ** Print register
00001C38  103C 000E               1772      MOVE.B      #14,D0
00001C3C  43F8 00D1               1773      LEA         pr_d4,A1
00001C40  4E4F                    1774      TRAP        #15
00001C42                          1775  
00001C42                          1776      ** Check if next bit is clear
00001C42                          1777      ** If true, skip next
00001C42  0804 0002               1778      BTST        #2,D4
00001C46  6700 002C               1779      BEQ         to_mem_d6
00001C4A                          1780      ** Else, check cascade
00001C4A  6000 00C8               1781      BRA         cascade_d5
00001C4E                          1782  
00001C4E                          1783  to_mem_d5 *************************** D5
00001C4E                          1784      ** Test bit
00001C4E  0804 0002               1785      BTST        #2,D4
00001C52  6700 0020               1786      BEQ         to_mem_d6
00001C56                          1787      ** Print slash if D3 set
00001C56  6100 02B8               1788      BSR         slash_check
00001C5A                          1789      ** Set D3
00001C5A  163C 0001               1790      MOVE.B      #1,D3
00001C5E                          1791      ** Print register
00001C5E  103C 000E               1792      MOVE.B      #14,D0
00001C62  43F8 00D4               1793      LEA         pr_d5,A1
00001C66  4E4F                    1794      TRAP        #15
00001C68                          1795  
00001C68                          1796      ** Check if next bit is clear
00001C68                          1797      ** If true, skip next
00001C68  0804 0001               1798      BTST        #1,D4
00001C6C  6700 002C               1799      BEQ         to_mem_d7
00001C70                          1800      ** Else, check cascade
00001C70  6000 00BA               1801      BRA         cascade_d6
00001C74                          1802  
00001C74                          1803  to_mem_d6 *************************** D6
00001C74                          1804      ** Test bit
00001C74  0804 0001               1805      BTST        #1,D4
00001C78  6700 0020               1806      BEQ         to_mem_d7
00001C7C                          1807      ** Print slash if D3 set
00001C7C  6100 0292               1808      BSR         slash_check
00001C80                          1809      ** Set D3
00001C80  163C 0001               1810      MOVE.B      #1,D3
00001C84                          1811      ** Print register
00001C84  103C 000E               1812      MOVE.B      #14,D0
00001C88  43F8 00D7               1813      LEA         pr_d6,A1
00001C8C  4E4F                    1814      TRAP        #15
00001C8E                          1815  
00001C8E                          1816      ** Check if next bit is clear
00001C8E                          1817      ** If true, skip next
00001C8E  0804 0000               1818      BTST        #0,D4
00001C92  6700 001C               1819      BEQ         print_movem_dn_end
00001C96                          1820      ** Else, check cascade
00001C96  6000 00AC               1821      BRA         cascade_d7
00001C9A                          1822  
00001C9A                          1823  to_mem_d7 *************************** D7
00001C9A                          1824      ** Test bit
00001C9A  0804 0000               1825      BTST        #0,D4
00001C9E  6700 0010               1826      BEQ         print_movem_dn_end
00001CA2                          1827      ** Print slash if D3 set
00001CA2  6100 026C               1828      BSR         slash_check
00001CA6                          1829      ** Print register
00001CA6  103C 000E               1830      MOVE.B      #14,D0
00001CAA  43F8 00D7               1831      LEA         pr_d6,A1
00001CAE  4E4F                    1832      TRAP        #15
00001CB0                          1833  
00001CB0                          1834  print_movem_dn_end
00001CB0  4243                    1835      CLR         D3
00001CB2  4E75                    1836      RTS
00001CB4                          1837  
00001CB4                          1838  
00001CB4                          1839  cascade_d1 *************************** -D1
00001CB4                          1840      ** If the next bit is set, check next
00001CB4  0804 0005               1841      BTST        #5,D4
00001CB8  6600 0012               1842      BNE         cascade_d2
00001CBC                          1843      ** Else, finish the list
00001CBC  43F8 0024               1844      LEA         pr_hyphen,A1
00001CC0  4E4F                    1845      TRAP        #15
00001CC2  43F8 00C8               1846      LEA         pr_D1,A1
00001CC6  4E4F                    1847      TRAP        #15
00001CC8                          1848  
00001CC8  6000 FF38               1849      BRA         to_mem_d3
00001CCC                          1850  
00001CCC                          1851  cascade_d2 *************************** -D2
00001CCC                          1852      ** If the next bit is set, check next
00001CCC  0804 0004               1853      BTST        #4,D4
00001CD0  6600 0012               1854      BNE         cascade_d3
00001CD4                          1855      ** Else, finish the list
00001CD4  43F8 0024               1856      LEA         pr_hyphen,A1
00001CD8  4E4F                    1857      TRAP        #15
00001CDA  43F8 00CB               1858      LEA         pr_D2,A1
00001CDE  4E4F                    1859      TRAP        #15
00001CE0                          1860  
00001CE0  6000 FF46               1861      BRA         to_mem_d4
00001CE4                          1862  
00001CE4                          1863  cascade_d3 *************************** -D3
00001CE4                          1864      ** If the next bit is set, check next
00001CE4  0804 0003               1865      BTST        #3,D4
00001CE8  6600 0012               1866      BNE         cascade_d4
00001CEC                          1867      ** Else, finish the list
00001CEC  43F8 0024               1868      LEA         pr_hyphen,A1
00001CF0  4E4F                    1869      TRAP        #15
00001CF2  43F8 00CE               1870      LEA         pr_D3,A1
00001CF6  4E4F                    1871      TRAP        #15
00001CF8                          1872  
00001CF8  6000 FF54               1873      BRA         to_mem_d5
00001CFC                          1874  
00001CFC                          1875  cascade_d4 *************************** -D4
00001CFC                          1876      ** If the next bit is set, check next
00001CFC  0804 0002               1877      BTST        #2,D4
00001D00  6600 0012               1878      BNE         cascade_d5
00001D04                          1879      ** Else, finish the list
00001D04  43F8 0024               1880      LEA         pr_hyphen,A1
00001D08  4E4F                    1881      TRAP        #15
00001D0A  43F8 00D1               1882      LEA         pr_D4,A1
00001D0E  4E4F                    1883      TRAP        #15
00001D10                          1884  
00001D10  6000 FF62               1885      BRA         to_mem_d6
00001D14                          1886  
00001D14                          1887  cascade_d5 *************************** -D5
00001D14                          1888      ** If the next bit is set, check next
00001D14  0804 0001               1889      BTST        #1,D4
00001D18  6600 0012               1890      BNE         cascade_d6
00001D1C                          1891      ** Else, finish the list
00001D1C  43F8 0024               1892      LEA         pr_hyphen,A1
00001D20  4E4F                    1893      TRAP        #15
00001D22  43F8 00D4               1894      LEA         pr_D5,A1
00001D26  4E4F                    1895      TRAP        #15
00001D28                          1896  
00001D28  6000 FF70               1897      BRA         to_mem_d7
00001D2C                          1898  
00001D2C                          1899  cascade_d6 *************************** -D6
00001D2C                          1900      ** If the next bit is set, check next
00001D2C  0804 0000               1901      BTST        #0,D4
00001D30  6600 0012               1902      BNE         cascade_d7
00001D34                          1903      ** Else, finish the list
00001D34  43F8 0024               1904      LEA         pr_hyphen,A1
00001D38  4E4F                    1905      TRAP        #15
00001D3A  43F8 00D7               1906      LEA         pr_D6,A1
00001D3E  4E4F                    1907      TRAP        #15
00001D40                          1908  
00001D40  6000 FF6E               1909      BRA         print_movem_dn_end
00001D44                          1910  
00001D44                          1911  cascade_d7 *************************** -D7
00001D44                          1912      ** Else, finish the list
00001D44  43F8 0024               1913      LEA         pr_hyphen,A1
00001D48  4E4F                    1914      TRAP        #15
00001D4A  43F8 00DA               1915      LEA         pr_D7,A1
00001D4E  4E4F                    1916      TRAP        #15
00001D50                          1917  
00001D50  6000 FF5E               1918      BRA         print_movem_dn_end
00001D54                          1919  
00001D54                          1920  print_movem_an
00001D54                          1921  to_mem_a0 *************************** A0
00001D54                          1922      ** Test bit
00001D54  0804 0007               1923      BTST        #7,D4
00001D58  6700 001C               1924      BEQ         to_mem_a1
00001D5C                          1925      ** Set D3
00001D5C  163C 0001               1926      MOVE.B      #1,D3
00001D60                          1927      ** Print register
00001D60  103C 000E               1928      MOVE.B      #14,D0
00001D64  43F8 00DD               1929      LEA         pr_a0,A1
00001D68  4E4F                    1930      TRAP        #15
00001D6A                          1931  
00001D6A                          1932      ** Check if next bit is clear
00001D6A                          1933      ** If true, skip next
00001D6A  0804 0006               1934      BTST        #6,D4
00001D6E  6700 0028               1935      BEQ         to_mem_a2
00001D72                          1936      ** Else, check cascade
00001D72  6000 00FC               1937      BRA         cascade_a1
00001D76                          1938  
00001D76                          1939  to_mem_a1 *************************** A1
00001D76                          1940      ** Test bit
00001D76  0804 0006               1941      BTST        #6,D4
00001D7A  6700 001C               1942      BEQ         to_mem_a2
00001D7E                          1943      ** Set D3
00001D7E  163C 0001               1944      MOVE.B      #1,D3
00001D82                          1945      ** Print register
00001D82  103C 000E               1946      MOVE.B      #14,D0
00001D86  43F8 00E0               1947      LEA         pr_a1,A1
00001D8A  4E4F                    1948      TRAP        #15
00001D8C                          1949  
00001D8C                          1950      ** Check if next bit is clear
00001D8C                          1951      ** If true, skip next
00001D8C  0804 0005               1952      BTST        #5,D4
00001D90  6700 002C               1953      BEQ         to_mem_a3
00001D94                          1954      ** Else, check cascade
00001D94  6000 00F2               1955      BRA         cascade_a2
00001D98                          1956  
00001D98                          1957  to_mem_a2 *************************** A2
00001D98                          1958      ** Test bit
00001D98  0804 0005               1959      BTST        #5,D4
00001D9C  6700 0020               1960      BEQ         to_mem_a3
00001DA0                          1961      ** Print slash if D3 set
00001DA0  6100 016E               1962      BSR         slash_check
00001DA4                          1963      ** Set D3
00001DA4  163C 0001               1964      MOVE.B      #1,D3
00001DA8                          1965      ** Print register
00001DA8  103C 000E               1966      MOVE.B      #14,D0
00001DAC  43F8 00E3               1967      LEA         pr_a2,A1
00001DB0  4E4F                    1968      TRAP        #15
00001DB2                          1969  
00001DB2                          1970      ** Check if next bit is clear
00001DB2                          1971      ** If true, skip next
00001DB2  0804 0004               1972      BTST        #4,D4
00001DB6  6700 002C               1973      BEQ         to_mem_a4
00001DBA                          1974      ** Else, check cascade
00001DBA  6000 00E4               1975      BRA         cascade_a3
00001DBE                          1976  
00001DBE                          1977  to_mem_a3 *************************** A3
00001DBE                          1978      ** Test bit
00001DBE  0804 0004               1979      BTST        #4,D4
00001DC2  6700 0020               1980      BEQ         to_mem_a4
00001DC6                          1981      ** Print slash if D3 set
00001DC6  6100 0148               1982      BSR         slash_check
00001DCA                          1983      ** Set D3
00001DCA  163C 0001               1984      MOVE.B      #1,D3
00001DCE                          1985      ** Print register
00001DCE  103C 000E               1986      MOVE.B      #14,D0
00001DD2  43F8 00E6               1987      LEA         pr_a3,A1
00001DD6  4E4F                    1988      TRAP        #15
00001DD8                          1989  
00001DD8                          1990      ** Check if next bit is clear
00001DD8                          1991      ** If true, skip next
00001DD8  0804 0003               1992      BTST        #3,D4
00001DDC  6700 002C               1993      BEQ         to_mem_a5
00001DE0                          1994      ** Else, check cascade
00001DE0  6000 00D6               1995      BRA         cascade_a4
00001DE4                          1996  
00001DE4                          1997  to_mem_a4 *************************** A4
00001DE4                          1998      ** Test bit
00001DE4  0804 0003               1999      BTST        #3,D4
00001DE8  6700 0020               2000      BEQ         to_mem_a5
00001DEC                          2001      ** Print slash if D3 set
00001DEC  6100 0122               2002      BSR         slash_check
00001DF0                          2003      ** Set D3
00001DF0  163C 0001               2004      MOVE.B      #1,D3
00001DF4                          2005      ** Print register
00001DF4  103C 000E               2006      MOVE.B      #14,D0
00001DF8  43F8 00E9               2007      LEA         pr_a4,A1
00001DFC  4E4F                    2008      TRAP        #15
00001DFE                          2009  
00001DFE                          2010      ** Check if next bit is clear
00001DFE                          2011      ** If true, skip next
00001DFE  0804 0002               2012      BTST        #2,D4
00001E02  6700 002C               2013      BEQ         to_mem_a6
00001E06                          2014      ** Else, check cascade
00001E06  6000 00C8               2015      BRA         cascade_a5
00001E0A                          2016  
00001E0A                          2017  to_mem_a5 *************************** A5
00001E0A                          2018      ** Test bit
00001E0A  0804 0002               2019      BTST        #2,D4
00001E0E  6700 0020               2020      BEQ         to_mem_a6
00001E12                          2021      ** Print slash if D3 set
00001E12  6100 00FC               2022      BSR         slash_check
00001E16                          2023      ** Set D3
00001E16  163C 0001               2024      MOVE.B      #1,D3
00001E1A                          2025      ** Print register
00001E1A  103C 000E               2026      MOVE.B      #14,D0
00001E1E  43F8 00EC               2027      LEA         pr_a5,A1
00001E22  4E4F                    2028      TRAP        #15
00001E24                          2029  
00001E24                          2030      ** Check if next bit is clear
00001E24                          2031      ** If true, skip next
00001E24  0804 0001               2032      BTST        #1,D4
00001E28  6700 002C               2033      BEQ         to_mem_a7
00001E2C                          2034      ** Else, check cascade
00001E2C  6000 00BA               2035      BRA         cascade_a6
00001E30                          2036  
00001E30                          2037  to_mem_a6 *************************** A6
00001E30                          2038      ** Test bit
00001E30  0804 0001               2039      BTST        #1,D4
00001E34  6700 0020               2040      BEQ         to_mem_a7
00001E38                          2041      ** Print slash if D3 set
00001E38  6100 00D6               2042      BSR         slash_check
00001E3C                          2043      ** Set D3
00001E3C  163C 0001               2044      MOVE.B      #1,D3
00001E40                          2045      ** Print register
00001E40  103C 000E               2046      MOVE.B      #14,D0
00001E44  43F8 00EF               2047      LEA         pr_a6,A1
00001E48  4E4F                    2048      TRAP        #15
00001E4A                          2049  
00001E4A                          2050      ** Check if next bit is clear
00001E4A                          2051      ** If true, skip next
00001E4A  0804 0000               2052      BTST        #0,D4
00001E4E  6700 001C               2053      BEQ         print_movem_an_end
00001E52                          2054      ** Else, check cascade
00001E52  6000 00AC               2055      BRA         cascade_a7
00001E56                          2056  
00001E56                          2057  to_mem_a7 *************************** A7
00001E56                          2058      ** Test bit
00001E56  0804 0000               2059      BTST        #0,D4
00001E5A  6700 0010               2060      BEQ         print_movem_an_end
00001E5E                          2061      ** Print slash if D3 set
00001E5E  6100 00B0               2062      BSR         slash_check
00001E62                          2063      ** Print register
00001E62  103C 000E               2064      MOVE.B      #14,D0
00001E66  43F8 00EF               2065      LEA         pr_a6,A1
00001E6A  4E4F                    2066      TRAP        #15
00001E6C                          2067  
00001E6C                          2068  print_movem_an_end
00001E6C  4243                    2069      CLR         D3
00001E6E  4E75                    2070      RTS
00001E70                          2071  
00001E70                          2072  
00001E70                          2073  cascade_a1 *************************** -A1
00001E70                          2074      ** If the next bit is set, check next
00001E70  0804 0005               2075      BTST        #5,D4
00001E74  6600 0012               2076      BNE         cascade_a2
00001E78                          2077      ** Else, finish the list
00001E78  43F8 0024               2078      LEA         pr_hyphen,A1
00001E7C  4E4F                    2079      TRAP        #15
00001E7E  43F8 00E0               2080      LEA         pr_a1,A1
00001E82  4E4F                    2081      TRAP        #15
00001E84                          2082  
00001E84  6000 FF38               2083      BRA         to_mem_a3
00001E88                          2084  
00001E88                          2085  cascade_a2 *************************** -A2
00001E88                          2086      ** If the next bit is set, check next
00001E88  0804 0004               2087      BTST        #4,D4
00001E8C  6600 0012               2088      BNE         cascade_a3
00001E90                          2089      ** Else, finish the list
00001E90  43F8 0024               2090      LEA         pr_hyphen,A1
00001E94  4E4F                    2091      TRAP        #15
00001E96  43F8 00E3               2092      LEA         pr_a2,A1
00001E9A  4E4F                    2093      TRAP        #15
00001E9C                          2094  
00001E9C  6000 FF46               2095      BRA         to_mem_a4
00001EA0                          2096  
00001EA0                          2097  cascade_a3 *************************** -A3
00001EA0                          2098      ** If the next bit is set, check next
00001EA0  0804 0003               2099      BTST        #3,D4
00001EA4  6600 0012               2100      BNE         cascade_a4
00001EA8                          2101      ** Else, finish the list
00001EA8  43F8 0024               2102      LEA         pr_hyphen,A1
00001EAC  4E4F                    2103      TRAP        #15
00001EAE  43F8 00E6               2104      LEA         pr_a3,A1
00001EB2  4E4F                    2105      TRAP        #15
00001EB4                          2106  
00001EB4  6000 FF54               2107      BRA         to_mem_a5
00001EB8                          2108  
00001EB8                          2109  cascade_a4 *************************** -A4
00001EB8                          2110      ** If the next bit is set, check next
00001EB8  0804 0002               2111      BTST        #2,D4
00001EBC  6600 0012               2112      BNE         cascade_a5
00001EC0                          2113      ** Else, finish the list
00001EC0  43F8 0024               2114      LEA         pr_hyphen,A1
00001EC4  4E4F                    2115      TRAP        #15
00001EC6  43F8 00E9               2116      LEA         pr_a4,A1
00001ECA  4E4F                    2117      TRAP        #15
00001ECC                          2118  
00001ECC  6000 FF62               2119      BRA         to_mem_a6
00001ED0                          2120  
00001ED0                          2121  cascade_a5 *************************** -A5
00001ED0                          2122      ** If the next bit is set, check next
00001ED0  0804 0001               2123      BTST        #1,D4
00001ED4  6600 0012               2124      BNE         cascade_a6
00001ED8                          2125      ** Else, finish the list
00001ED8  43F8 0024               2126      LEA         pr_hyphen,A1
00001EDC  4E4F                    2127      TRAP        #15
00001EDE  43F8 00EC               2128      LEA         pr_a5,A1
00001EE2  4E4F                    2129      TRAP        #15
00001EE4                          2130  
00001EE4  6000 FF70               2131      BRA         to_mem_a7
00001EE8                          2132  
00001EE8                          2133  cascade_a6 *************************** -A6
00001EE8                          2134      ** If the next bit is set, check next
00001EE8  0804 0000               2135      BTST        #0,D4
00001EEC  6600 0012               2136      BNE         cascade_a7
00001EF0                          2137      ** Else, finish the list
00001EF0  43F8 0024               2138      LEA         pr_hyphen,A1
00001EF4  4E4F                    2139      TRAP        #15
00001EF6  43F8 00EF               2140      LEA         pr_a6,A1
00001EFA  4E4F                    2141      TRAP        #15
00001EFC                          2142  
00001EFC  6000 FF6E               2143      BRA         print_movem_an_end
00001F00                          2144  
00001F00                          2145  cascade_a7 *************************** -A7
00001F00                          2146      ** Else, finish the list
00001F00  43F8 0024               2147      LEA         pr_hyphen,A1
00001F04  4E4F                    2148      TRAP        #15
00001F06  43F8 00F2               2149      LEA         pr_a7,A1
00001F0A  4E4F                    2150      TRAP        #15
00001F0C                          2151  
00001F0C  6000 FF5E               2152      BRA         print_movem_an_end
00001F10                          2153  
00001F10                          2154  
00001F10                          2155  
00001F10                          2156  
00001F10                          2157  
00001F10                          2158  
00001F10                          2159  
00001F10                          2160  
00001F10                          2161  slash_check
00001F10  0C03 0001               2162      CMPI.B      #1,D3
00001F14  6600 000E               2163      BNE         no_slash
00001F18                          2164      ** Clear D3 and print slash
00001F18  4243                    2165      CLR         D3
00001F1A  103C 000E               2166      MOVE.B      #14,D0
00001F1E  43F8 0026               2167      LEA         pr_slash,A1
00001F22  4E4F                    2168      TRAP        #15
00001F24                          2169  
00001F24                          2170  no_slash
00001F24  4E75                    2171      RTS
00001F26                          2172  
00001F26                          2173  
00001F26                          2174  -------------------- end include --------------------
00001F26                          2175                  INCLUDE 'spencer_opcodes.x68'
00001F26  =0000000E               2176  SHIFT       EQU %1110
00001F26  =00000003               2177  RO          EQU %11
00001F26  =00000000               2178  AS          EQU %00
00001F26  =00000001               2179  LS          EQU %01
00001F26  =00000000               2180  R           EQU %0
00001F26  =00000001               2181  L           EQU %1
00001F26  =00000001               2182  SHIFT_register  EQU %1
00001F26  =00000000               2183  SHIFT_immed     EQU %0
00001F26  =00000000               2184  SHIFT_BYTE  EQU %00
00001F26  =00000001               2185  SHIFT_WORD  EQU %01
00001F26  =00000003               2186  SHIFT_LONG  EQU %11
00001F26                          2187  
00001F26                          2188  CHECK_SHIFT
00001F26  6100 010E               2189      BSR     Get_Count_Register_Val          * register 3
00001F2A  6100 011E               2190      BSR     Get_Size                        * register 4
00001F2E  6100 012E               2191      BSR     Get_Direction                   * register 5
00001F32  6100 013E               2192      BSR     Get_Is_Register_Or_Immediate    * register 6
00001F36  6100 0152               2193      BSR     Get_Shift_Opcode                * register 7
00001F3A                          2194  
00001F3A  6100 0024               2195      BSR     PrintShiftData
00001F3E                          2196  
00001F3E  6100 000C               2197      BSR     getShiftDestReg
00001F42                          2198  
00001F42  103C 0003               2199      MOVE.B  #3,D0
00001F46  4E4F                    2200      TRAP    #15
00001F48                          2201  
00001F48  6000 F1A8               2202      BRA         opdec_return
00001F4C                          2203  
00001F4C                          2204  getShiftDestReg
00001F4C                          2205  
00001F4C  48A7 2000               2206      MOVEM.W     D2, -(SP)
00001F50                          2207  
00001F50  123C 000D               2208      MOVE.B      #13,D1
00001F54  E3AA                    2209      LSL.L       D1,D2
00001F56  E2AA                    2210      LSR.L       D1,D2
00001F58  1202                    2211      MOVE.B      D2,D1
00001F5A                          2212  
00001F5A  4C9F 0004               2213      MOVEM.W     (SP)+,D2
00001F5E  4E75                    2214      RTS
00001F60                          2215  
00001F60                          2216  
00001F60                          2217  PrintShiftData
00001F60                          2218  
00001F60  BE3C 0003               2219      CMP.B   #RO,D7
00001F64  6700 0012               2220      BEQ     printRotate
00001F68  BE3C 0000               2221      CMP.B   #AS,D7
00001F6C  6700 0014               2222      BEQ     printArithShift
00001F70  BE3C 0001               2223      CMP.B   #LS,D7
00001F74  6700 0016               2224      BEQ     printLogicShift
00001F78                          2225  
00001F78                          2226  printRotate
00001F78  43F8 007A               2227      LEA         pr_SHIFT_RO,A1
00001F7C  4EF9 00001F96           2228      JMP         executeShiftOpcodePrint
00001F82                          2229  printArithShift
00001F82  43F8 007D               2230      LEA         pr_SHIFT_AS,A1
00001F86  4EF9 00001F96           2231      JMP         executeShiftOpcodePrint
00001F8C                          2232  printLogicShift
00001F8C  43F8 0080               2233      LEA         pr_SHIFT_LS,A1
00001F90  4EF9 00001F96           2234      JMP         executeShiftOpcodePrint
00001F96                          2235  executeShiftOpcodePrint
00001F96  6100 0148               2236      BSR         PrintString
00001F9A                          2237  
00001F9A  BA3C 0000               2238      CMP.B   #R,D5
00001F9E  6700 000A               2239      BEQ     printShiftRight
00001FA2  BA3C 0001               2240      CMP.B   #L,D5
00001FA6  6700 000C               2241      BEQ     printShiftLeft
00001FAA                          2242  
00001FAA                          2243  printShiftRight
00001FAA  43F8 0085               2244      LEA         pr_SHIFT_R,A1
00001FAE  4EF9 00001FBE           2245      JMP         executePrintShiftdirection
00001FB4                          2246  printShiftLeft
00001FB4  43F8 0083               2247      LEA         pr_SHIFT_L,A1
00001FB8  4EF9 00001FBE           2248      JMP         executePrintShiftdirection
00001FBE                          2249  executePrintShiftdirection
00001FBE  6100 0120               2250      BSR         PrintString
00001FC2                          2251  
00001FC2  B83C 0000               2252      CMP.B   #SHIFT_BYTE,D4
00001FC6  6700 0012               2253      BEQ     printShiftByte
00001FCA  B83C 0001               2254      CMP.B   #SHIFT_WORD,D4
00001FCE  6700 0014               2255      BEQ     printShiftWord
00001FD2  B83C 0003               2256      CMP.B   #SHIFT_LONG,D4
00001FD6  6700 0016               2257      BEQ     printShiftLong
00001FDA                          2258  
00001FDA                          2259  printShiftByte
00001FDA  43F8 0016               2260      LEA     pr_BYTE,A1
00001FDE  4EF9 00001FF8           2261      JMP     executePrintShiftSize
00001FE4                          2262  printShiftWord
00001FE4  43F8 0019               2263      LEA     pr_WORD,A1
00001FE8  4EF9 00001FF8           2264      JMP     executePrintShiftSize
00001FEE                          2265  printShiftLong
00001FEE  43F8 001C               2266      LEA     pr_LONG,A1
00001FF2  4EF9 00001FF8           2267      JMP     executePrintShiftSize
00001FF8                          2268  executePrintShiftSize
00001FF8  6100 00E6               2269      BSR         PrintString
00001FFC  43F8 0000               2270      LEA     pr_space,A1
00002000  6100 00DE               2271      BSR     PrintString
00002004                          2272  
00002004  BC3C 0001               2273      CMP.B   #SHIFT_register,D6
00002008  6700 000A               2274      BEQ     printShiftReg
0000200C  BC3C 0000               2275      CMP.B   #SHIFT_immed,D6
00002010  6700 000A               2276      BEQ     printShift
00002014                          2277  
00002014                          2278  printShiftReg
00002014  43F8 0078               2279      LEA     pr_reg,A1
00002018  6100 00C6               2280      BSR     PrintString
0000201C                          2281  printShift
0000201C  1203                    2282      MOVE.B  D3,D1
0000201E  103C 0003               2283      MOVE.B  #3,D0
00002022  4E4F                    2284      TRAP    #15
00002024                          2285  
00002024  43F8 0014               2286      LEA     pr_comma,A1
00002028  6100 00B6               2287      BSR     PrintString
0000202C  43F8 0078               2288      LEA     pr_reg,A1
00002030  6100 00AE               2289      BSR     PrintString
00002034  4E75                    2290      RTS
00002036                          2291  
00002036                          2292  
00002036                          2293  Get_Count_Register_Val
00002036                          2294  
00002036  48A7 2000               2295      MOVEM.W     D2, -(SP)
0000203A                          2296  
0000203A  123C 000D               2297      MOVE.B      #13,D1
0000203E  E98A                    2298      LSL.L       #4,D2
00002040  E2AA                    2299      LSR.L       D1,D2
00002042  1602                    2300      MOVE.B      D2,D3
00002044                          2301  
00002044  4C9F 0004               2302      MOVEM.W     (SP)+,D2
00002048  4E75                    2303      RTS
0000204A                          2304  
0000204A                          2305  Get_Size
0000204A                          2306  
0000204A  48A7 2000               2307      MOVEM.W     D2, -(SP)
0000204E                          2308  
0000204E  123C 000E               2309      MOVE.B      #14,D1
00002052  E18A                    2310      LSL.L       #8,D2
00002054  E2AA                    2311      LSR.L       D1,D2
00002056  1802                    2312      MOVE.B      D2,D4
00002058                          2313  
00002058  4C9F 0004               2314      MOVEM.W     (SP)+,D2
0000205C  4E75                    2315      RTS
0000205E                          2316  Get_Direction
0000205E                          2317  
0000205E  48A7 2000               2318      MOVEM.W     D2, -(SP)
00002062                          2319  
00002062  123C 000F               2320      MOVE.B      #15,D1
00002066  EF8A                    2321      LSL.L       #7,D2
00002068  E2AA                    2322      LSR.L       D1,D2
0000206A  1A02                    2323      MOVE.B      D2,D5
0000206C                          2324  
0000206C  4C9F 0004               2325      MOVEM.W     (SP)+,D2
00002070  4E75                    2326      RTS
00002072                          2327  Get_Is_Register_Or_Immediate
00002072                          2328  
00002072  48A7 2000               2329      MOVEM.W     D2, -(SP)
00002076                          2330  
00002076  123C 000A               2331      MOVE.B      #10,D1
0000207A  E3AA                    2332      LSL.L       D1,D2
0000207C  123C 000F               2333      MOVE.B      #15,D1
00002080  E2AA                    2334      LSR.L       D1,D2
00002082                          2335  
00002082  1C02                    2336      MOVE.B      D2,D6
00002084                          2337  
00002084  4C9F 0004               2338      MOVEM.W     (SP)+,D2
00002088  4E75                    2339      RTS
0000208A                          2340  
0000208A                          2341  Get_Shift_Opcode
0000208A                          2342  
0000208A  48A7 2000               2343      MOVEM.W     D2, -(SP)
0000208E                          2344  
0000208E  123C 000B               2345      MOVE.B      #11,D1
00002092  E3AA                    2346      LSL.L       D1,D2
00002094  123C 000E               2347      MOVE.B      #14,D1
00002098  E2AA                    2348      LSR.L       D1,D2
0000209A                          2349  
0000209A  1E02                    2350      MOVE.B      D2,D7
0000209C                          2351  
0000209C  4C9F 0004               2352      MOVEM.W     (SP)+,D2
000020A0  4E75                    2353      RTS
000020A2                          2354  
000020A2                          2355  
000020A2                          2356  MATCH_LSL
000020A2  3A02                    2357      MOVE.W      D2,D5       *REMOVE
000020A4                          2358  MATCH_LSR
000020A4  3A02                    2359      MOVE.W      D2,D5       *REMOVE
000020A6                          2360  MATCH_ASR
000020A6  3A02                    2361      MOVE.W      D2,D5       *REMOVE
000020A8                          2362  MATCH_ASL
000020A8  3A02                    2363      MOVE.W      D2,D5       *REMOVE
000020AA                          2364  MATCH_ROL
000020AA  3A02                    2365      MOVE.W      D2,D5       *REMOVE
000020AC                          2366  MATCH_ROR
000020AC  3A02                    2367      MOVE.W      D2,D5       *REMOVE
000020AE                          2368  
000020AE                          2369  Get_BCC_Displacement_8bit
000020AE                          2370  
000020AE  4246                    2371      CLR     D6
000020B0  1C02                    2372      MOVE.B  D2,D6
000020B2  4E75                    2373      RTS
000020B4                          2374  Get_BCC_Displacement_16bit
000020B4                          2375  
000020B4  4246                    2376      CLR     D6
000020B6  3C18                    2377      MOVE.W  (A0)+,D6
000020B8  4E75                    2378      RTS
000020BA                          2379  Get_BCC_Displacement_32bit
000020BA                          2380  
000020BA  4246                    2381      CLR     D6
000020BC  2C18                    2382      MOVE.L  (A0)+,D6
000020BE  4E75                    2383      RTS
000020C0                          2384  Get_Current_Address
000020C0                          2385  
000020C0  4247                    2386      CLR     D7
000020C2  2E08                    2387      MOVE.L      A0,D7
000020C4  5587                    2388      SUBI.L      #2,D7
000020C6  4E75                    2389      RTS
000020C8                          2390  Get_BCC_Destination_Address
000020C8                          2391  
000020C8  9E86                    2392      SUB.L   D6,D7
000020CA  4E75                    2393      RTS
000020CC                          2394  
000020CC                          2395  PrintHex
000020CC                          2396  
000020CC  48A7 2000               2397      MOVEM.W     D2, -(SP)
000020D0                          2398  
000020D0  103C 000F               2399      MOVE.B      #15,D0
000020D4  143C 0010               2400      MOVE.B      #16,D2 * print base 16
000020D8  4E4F                    2401      TRAP        #15
000020DA                          2402  
000020DA  4C9F 0004               2403      MOVEM.W     (SP)+,D2
000020DE  4E75                    2404      RTS
000020E0                          2405  PrintString
000020E0  103C 000E               2406      MOVE.B      #14,D0
000020E4  4E4F                    2407      TRAP        #15
000020E6  4E75                    2408      RTS
000020E8                          2409  PrintSizeByte
000020E8  103C 000E               2410      MOVE.B      #14,D0
000020EC  43F8 0016               2411      LEA         pr_BYTE,A1
000020F0  4E4F                    2412      TRAP        #15
000020F2  4E75                    2413      RTS
000020F4                          2414  PrintSizeWord
000020F4  103C 000E               2415      MOVE.B      #14,D0
000020F8  43F8 0019               2416      LEA         pr_WORD,A1
000020FC  4E4F                    2417      TRAP        #15
000020FE  4E75                    2418      RTS
00002100                          2419  PrintSizeLong
00002100  103C 000E               2420      MOVE.B      #14,D0
00002104  43F8 001C               2421      LEA         pr_LONG,A1
00002108  4E4F                    2422      TRAP        #15
0000210A  4E75                    2423      RTS
0000210C                          2424  
0000210C                          2425  
0000210C                          2426  MATCH_CC_T_8
0000210C  3A02                    2427      MOVE.W      D2,D5       *REMOVE
0000210E                          2428  MATCH_CC_T_16
0000210E  3A02                    2429      MOVE.W      D2,D5       *REMOVE
00002110                          2430  MATCH_CC_T_32
00002110  3A02                    2431      MOVE.W      D2,D5       *REMOVE
00002112                          2432  MATCH_CC_F_8
00002112  3A02                    2433      MOVE.W      D2,D5       *REMOVE
00002114                          2434  MATCH_CC_F_16
00002114  3A02                    2435      MOVE.W      D2,D5       *REMOVE
00002116                          2436  MATCH_CC_F_32
00002116  3A02                    2437      MOVE.W      D2,D5       *REMOVE
00002118                          2438  MATCH_CC_HI_8
00002118                          2439      ** print opcode **
00002118  43F8 00A1               2440      LEA         pr_BCC_HI,A1
0000211C  61C2                    2441      BSR         PrintString
0000211E                          2442  
0000211E  61C8                    2443      BSR         PrintSizeBYTE
00002120  43F8 0000               2444      LEA         pr_space,A1
00002124  61BA                    2445      BSR         PrintString
00002126                          2446  
00002126                          2447      ** print address **
00002126  6186                    2448      BSR         Get_BCC_Displacement_8bit
00002128  6196                    2449      BSR         Get_Current_Address
0000212A  619C                    2450      BSR         Get_BCC_Destination_Address
0000212C  2207                    2451      MOVE.L      D7,D1
0000212E  619C                    2452      BSR         PrintHex
00002130                          2453  
00002130  6000 EFC0               2454      BRA         opdec_return
00002134                          2455  
00002134                          2456  MATCH_CC_HI_16
00002134                          2457      ** print opcode **
00002134  43F8 00A1               2458      LEA         pr_BCC_HI,A1
00002138  61A6                    2459      BSR         PrintString
0000213A                          2460  
0000213A  61B8                    2461      BSR         PrintSizeWORD
0000213C  43F8 0000               2462      LEA         pr_space,A1
00002140  619E                    2463      BSR         PrintString
00002142                          2464  
00002142                          2465      ** print address **
00002142  6100 FF70               2466      BSR         Get_BCC_Displacement_16bit
00002146  6100 FF78               2467      BSR         Get_Current_Address
0000214A  6100 FF7C               2468      BSR         Get_BCC_Destination_Address
0000214E  2207                    2469      MOVE.L      D7,D1
00002150  6100 FF7A               2470      BSR         PrintHex
00002154                          2471  
00002154  6000 EF9C               2472      BRA         opdec_return
00002158                          2473  MATCH_CC_HI_32
00002158                          2474      ** print opcode **
00002158  43F8 00A1               2475      LEA         pr_BCC_HI,A1
0000215C  6182                    2476      BSR         PrintString
0000215E                          2477  
0000215E  61A0                    2478      BSR         PrintSizeLONG
00002160  43F8 0000               2479      LEA         pr_space,A1
00002164  6100 FF7A               2480      BSR         PrintString
00002168                          2481  
00002168                          2482      ** print address **
00002168  6100 FF50               2483      BSR         Get_BCC_Displacement_32bit
0000216C  6100 FF52               2484      BSR         Get_Current_Address
00002170  6100 FF56               2485      BSR         Get_BCC_Destination_Address
00002174  2207                    2486      MOVE.L      D7,D1
00002176  6100 FF54               2487      BSR         PrintHex
0000217A                          2488  
0000217A  6000 EF76               2489      BRA         opdec_return
0000217E                          2490  MATCH_CC_LS_8
0000217E                          2491      ** print opcode **
0000217E  43F8 00A9               2492      LEA         pr_BCC_LS,A1
00002182  6100 FF5C               2493      BSR         PrintString
00002186                          2494  
00002186  6100 FF60               2495      BSR         PrintSizeBYTE
0000218A  43F8 0000               2496      LEA         pr_space,A1
0000218E  6100 FF50               2497      BSR         PrintString
00002192                          2498  
00002192                          2499      ** print address **
00002192  6100 FF1A               2500      BSR         Get_BCC_Displacement_8bit
00002196  6100 FF28               2501      BSR         Get_Current_Address
0000219A  6100 FF2C               2502      BSR         Get_BCC_Destination_Address
0000219E  2207                    2503      MOVE.L      D7,D1
000021A0  6100 FF2A               2504      BSR         PrintHex
000021A4                          2505  
000021A4  6000 EF4C               2506      BRA         opdec_return
000021A8                          2507  MATCH_CC_LS_16
000021A8                          2508      ** print opcode **
000021A8  43F8 00A9               2509      LEA         pr_BCC_LS,A1
000021AC  6100 FF32               2510      BSR         PrintString
000021B0                          2511  
000021B0  6100 FF42               2512      BSR         PrintSizeWORD
000021B4  43F8 0000               2513      LEA         pr_space,A1
000021B8  6100 FF26               2514      BSR         PrintString
000021BC                          2515  
000021BC                          2516      ** print address **
000021BC  6100 FEF6               2517      BSR         Get_BCC_Displacement_16bit
000021C0  6100 FEFE               2518      BSR         Get_Current_Address
000021C4  6100 FF02               2519      BSR         Get_BCC_Destination_Address
000021C8  2207                    2520      MOVE.L      D7,D1
000021CA  6100 FF00               2521      BSR         PrintHex
000021CE                          2522  
000021CE  6000 EF22               2523      BRA         opdec_return
000021D2                          2524  
000021D2                          2525  MATCH_CC_LS_32
000021D2                          2526      ** print opcode **
000021D2  43F8 00A9               2527      LEA         pr_BCC_LS,A1
000021D6  6100 FF08               2528      BSR         PrintString
000021DA                          2529  
000021DA  6100 FF24               2530      BSR         PrintSizeLONG
000021DE  43F8 0000               2531      LEA         pr_space,A1
000021E2  6100 FEFC               2532      BSR         PrintString
000021E6                          2533  
000021E6                          2534      ** print address **
000021E6  6100 FED2               2535      BSR         Get_BCC_Displacement_32bit
000021EA  6100 FED4               2536      BSR         Get_Current_Address
000021EE  6100 FED8               2537      BSR         Get_BCC_Destination_Address
000021F2  2207                    2538      MOVE.L      D7,D1
000021F4  6100 FED6               2539      BSR         PrintHex
000021F8                          2540  
000021F8  6000 EEF8               2541      BRA         opdec_return
000021FC                          2542  MATCH_CC_CC_8
000021FC                          2543  
000021FC                          2544      ** print opcode **
000021FC  43F8 008D               2545      LEA         pr_BCC_CC,A1
00002200  6100 FEDE               2546      BSR         PrintString
00002204                          2547  
00002204  6100 FEE2               2548      BSR         PrintSizeBYTE
00002208  43F8 0000               2549      LEA         pr_space,A1
0000220C  6100 FED2               2550      BSR         PrintString
00002210                          2551  
00002210                          2552      ** print address **
00002210  6100 FE9C               2553      BSR         Get_BCC_Displacement_8bit
00002214  6100 FEAA               2554      BSR         Get_Current_Address
00002218  6100 FEAE               2555      BSR         Get_BCC_Destination_Address
0000221C  2207                    2556      MOVE.L      D7,D1
0000221E  6100 FEAC               2557      BSR         PrintHex
00002222                          2558  
00002222  6000 EECE               2559      BRA         opdec_return
00002226                          2560  
00002226                          2561  MATCH_CC_CC_16
00002226                          2562      ** print opcode **
00002226  43F8 008D               2563      LEA         pr_BCC_CC,A1
0000222A  6100 FEB4               2564      BSR         PrintString
0000222E                          2565  
0000222E  6100 FEC4               2566      BSR         PrintSizeWORD
00002232  43F8 0000               2567      LEA         pr_space,A1
00002236  6100 FEA8               2568      BSR         PrintString
0000223A                          2569  
0000223A                          2570      ** print address **
0000223A  6100 FE78               2571      BSR         Get_BCC_Displacement_16bit
0000223E  6100 FE80               2572      BSR         Get_Current_Address
00002242  6100 FE84               2573      BSR         Get_BCC_Destination_Address
00002246  2207                    2574      MOVE.L      D7,D1
00002248  6100 FE82               2575      BSR         PrintHex
0000224C                          2576  
0000224C  6000 EEA4               2577      BRA         opdec_return
00002250                          2578  MATCH_CC_CC_32
00002250                          2579      ** print opcode **
00002250  43F8 008D               2580      LEA         pr_BCC_CC,A1
00002254  6100 FE8A               2581      BSR         PrintString
00002258                          2582  
00002258  6100 FEA6               2583      BSR         PrintSizeLONG
0000225C  43F8 0000               2584      LEA         pr_space,A1
00002260  6100 FE7E               2585      BSR         PrintString
00002264                          2586  
00002264                          2587      ** print address **
00002264  6100 FE54               2588      BSR         Get_BCC_Displacement_32bit
00002268  6100 FE56               2589      BSR         Get_Current_Address
0000226C  6100 FE5A               2590      BSR         Get_BCC_Destination_Address
00002270  2207                    2591      MOVE.L      D7,D1
00002272  6100 FE58               2592      BSR         PrintHex
00002276                          2593  
00002276  6000 EE7A               2594      BRA         opdec_return
0000227A                          2595  MATCH_CC_CS_8
0000227A                          2596      ** print opcode **
0000227A  43F8 0091               2597      LEA         pr_BCC_CS,A1
0000227E  6100 FE60               2598      BSR         PrintString
00002282                          2599  
00002282  6100 FE64               2600      BSR         PrintSizeBYTE
00002286  43F8 0000               2601      LEA         pr_space,A1
0000228A  6100 FE54               2602      BSR         PrintString
0000228E                          2603  
0000228E                          2604      ** print address **
0000228E  6100 FE1E               2605      BSR         Get_BCC_Displacement_8bit
00002292  6100 FE2C               2606      BSR         Get_Current_Address
00002296  6100 FE30               2607      BSR         Get_BCC_Destination_Address
0000229A  2207                    2608      MOVE.L      D7,D1
0000229C  6100 FE2E               2609      BSR         PrintHex
000022A0                          2610  
000022A0  6000 EE50               2611      BRA         opdec_return
000022A4                          2612  MATCH_CC_CS_16
000022A4                          2613      ** print opcode **
000022A4  43F8 0091               2614      LEA         pr_BCC_CS,A1
000022A8  6100 FE36               2615      BSR         PrintString
000022AC                          2616  
000022AC  6100 FE46               2617      BSR         PrintSizeWORD
000022B0  43F8 0000               2618      LEA         pr_space,A1
000022B4  6100 FE2A               2619      BSR         PrintString
000022B8                          2620  
000022B8                          2621      ** print address **
000022B8  6100 FDFA               2622      BSR         Get_BCC_Displacement_16bit
000022BC  6100 FE02               2623      BSR         Get_Current_Address
000022C0  6100 FE06               2624      BSR         Get_BCC_Destination_Address
000022C4  2207                    2625      MOVE.L      D7,D1
000022C6  6100 FE04               2626      BSR         PrintHex
000022CA                          2627  
000022CA  6000 EE26               2628      BRA         opdec_return
000022CE                          2629  MATCH_CC_CS_32
000022CE                          2630      ** print opcode **
000022CE  43F8 0091               2631      LEA         pr_BCC_CS,A1
000022D2  6100 FE0C               2632      BSR         PrintString
000022D6                          2633  
000022D6  6100 FE28               2634      BSR         PrintSizeLONG
000022DA  43F8 0000               2635      LEA         pr_space,A1
000022DE  6100 FE00               2636      BSR         PrintString
000022E2                          2637  
000022E2                          2638      ** print address **
000022E2  6100 FDD6               2639      BSR         Get_BCC_Displacement_32bit
000022E6  6100 FDD8               2640      BSR         Get_Current_Address
000022EA  6100 FDDC               2641      BSR         Get_BCC_Destination_Address
000022EE  2207                    2642      MOVE.L      D7,D1
000022F0  6100 FDDA               2643      BSR         PrintHex
000022F4                          2644  
000022F4  6000 EDFC               2645      BRA         opdec_return
000022F8                          2646  MATCH_CC_NE_8
000022F8                          2647      ** print opcode **
000022F8  43F8 00B5               2648      LEA         pr_BCC_NE,A1
000022FC  6100 FDE2               2649      BSR         PrintString
00002300                          2650  
00002300  6100 FDE6               2651      BSR         PrintSizeBYTE
00002304  43F8 0000               2652      LEA         pr_space,A1
00002308  6100 FDD6               2653      BSR         PrintString
0000230C                          2654  
0000230C                          2655      ** print address **
0000230C  6100 FDA0               2656      BSR         Get_BCC_Displacement_8bit
00002310  6100 FDAE               2657      BSR         Get_Current_Address
00002314  6100 FDB2               2658      BSR         Get_BCC_Destination_Address
00002318  2207                    2659      MOVE.L      D7,D1
0000231A  6100 FDB0               2660      BSR         PrintHex
0000231E                          2661  
0000231E  6000 EDD2               2662      BRA         opdec_return
00002322                          2663  MATCH_CC_NE_16
00002322                          2664      ** print opcode **
00002322  43F8 00B5               2665      LEA         pr_BCC_NE,A1
00002326  6100 FDB8               2666      BSR         PrintString
0000232A                          2667  
0000232A  6100 FDC8               2668      BSR         PrintSizeWORD
0000232E  43F8 0000               2669      LEA         pr_space,A1
00002332  6100 FDAC               2670      BSR         PrintString
00002336                          2671  
00002336                          2672      ** print address **
00002336  6100 FD7C               2673      BSR         Get_BCC_Displacement_16bit
0000233A  6100 FD84               2674      BSR         Get_Current_Address
0000233E  6100 FD88               2675      BSR         Get_BCC_Destination_Address
00002342  2207                    2676      MOVE.L      D7,D1
00002344  6100 FD86               2677      BSR         PrintHex
00002348                          2678  
00002348  6000 EDA8               2679      BRA         opdec_return
0000234C                          2680  MATCH_CC_NE_32
0000234C                          2681      ** print opcode **
0000234C  43F8 00B5               2682      LEA         pr_BCC_NE,A1
00002350  6100 FD8E               2683      BSR         PrintString
00002354                          2684  
00002354  6100 FDAA               2685      BSR         PrintSizeLONG
00002358  43F8 0000               2686      LEA         pr_space,A1
0000235C  6100 FD82               2687      BSR         PrintString
00002360                          2688  
00002360                          2689      ** print address **
00002360  6100 FD58               2690      BSR         Get_BCC_Displacement_32bit
00002364  6100 FD5A               2691      BSR         Get_Current_Address
00002368  6100 FD5E               2692      BSR         Get_BCC_Destination_Address
0000236C  2207                    2693      MOVE.L      D7,D1
0000236E  6100 FD5C               2694      BSR         PrintHex
00002372                          2695  
00002372  6000 ED7E               2696      BRA         opdec_return
00002376                          2697  MATCH_CC_EQ_8
00002376                          2698      ** print opcode **
00002376  43F8 0095               2699      LEA         pr_BCC_EQ,A1
0000237A  6100 FD64               2700      BSR         PrintString
0000237E                          2701  
0000237E  6100 FD68               2702      BSR         PrintSizeBYTE
00002382  43F8 0000               2703      LEA         pr_space,A1
00002386  6100 FD58               2704      BSR         PrintString
0000238A                          2705  
0000238A                          2706      ** print address **
0000238A  6100 FD22               2707      BSR         Get_BCC_Displacement_8bit
0000238E  6100 FD30               2708      BSR         Get_Current_Address
00002392  6100 FD34               2709      BSR         Get_BCC_Destination_Address
00002396  2207                    2710      MOVE.L      D7,D1
00002398  6100 FD32               2711      BSR         PrintHex
0000239C                          2712  
0000239C  6000 ED54               2713      BRA         opdec_return
000023A0                          2714  MATCH_CC_EQ_16
000023A0                          2715      ** print opcode **
000023A0  43F8 0095               2716      LEA         pr_BCC_EQ,A1
000023A4  6100 FD3A               2717      BSR         PrintString
000023A8                          2718  
000023A8  6100 FD4A               2719      BSR         PrintSizeWORD
000023AC  43F8 0000               2720      LEA         pr_space,A1
000023B0  6100 FD2E               2721      BSR         PrintString
000023B4                          2722  
000023B4                          2723      ** print address **
000023B4  6100 FCFE               2724      BSR         Get_BCC_Displacement_16bit
000023B8  6100 FD06               2725      BSR         Get_Current_Address
000023BC  6100 FD0A               2726      BSR         Get_BCC_Destination_Address
000023C0  2207                    2727      MOVE.L      D7,D1
000023C2  6100 FD08               2728      BSR         PrintHex
000023C6                          2729  
000023C6  6000 ED2A               2730      BRA         opdec_return
000023CA                          2731  MATCH_CC_EQ_32
000023CA                          2732      ** print opcode **
000023CA  43F8 0095               2733      LEA         pr_BCC_EQ,A1
000023CE  6100 FD10               2734      BSR         PrintString
000023D2                          2735  
000023D2  6100 FD2C               2736      BSR         PrintSizeLONG
000023D6  43F8 0000               2737      LEA         pr_space,A1
000023DA  6100 FD04               2738      BSR         PrintString
000023DE                          2739  
000023DE                          2740      ** print address **
000023DE  6100 FCDA               2741      BSR         Get_BCC_Displacement_32bit
000023E2  6100 FCDC               2742      BSR         Get_Current_Address
000023E6  6100 FCE0               2743      BSR         Get_BCC_Destination_Address
000023EA  2207                    2744      MOVE.L      D7,D1
000023EC  6100 FCDE               2745      BSR         PrintHex
000023F0                          2746  
000023F0  6000 ED00               2747      BRA         opdec_return
000023F4                          2748  MATCH_CC_VC_8
000023F4                          2749      ** print opcode **
000023F4  43F8 00BD               2750      LEA         pr_BCC_VC,A1
000023F8  6100 FCE6               2751      BSR         PrintString
000023FC                          2752  
000023FC  6100 FCEA               2753      BSR         PrintSizeBYTE
00002400  43F8 0000               2754      LEA         pr_space,A1
00002404  6100 FCDA               2755      BSR         PrintString
00002408                          2756  
00002408                          2757      ** print address **
00002408  6100 FCA4               2758      BSR         Get_BCC_Displacement_8bit
0000240C  6100 FCB2               2759      BSR         Get_Current_Address
00002410  6100 FCB6               2760      BSR         Get_BCC_Destination_Address
00002414  2207                    2761      MOVE.L      D7,D1
00002416  6100 FCB4               2762      BSR         PrintHex
0000241A                          2763  
0000241A  6000 ECD6               2764      BRA         opdec_return
0000241E                          2765  MATCH_CC_VC_16
0000241E                          2766      ** print opcode **
0000241E  43F8 00BD               2767      LEA         pr_BCC_VC,A1
00002422  6100 FCBC               2768      BSR         PrintString
00002426                          2769  
00002426  6100 FCCC               2770      BSR         PrintSizeWORD
0000242A  43F8 0000               2771      LEA         pr_space,A1
0000242E  6100 FCB0               2772      BSR         PrintString
00002432                          2773  
00002432                          2774      ** print address **
00002432  6100 FC80               2775      BSR         Get_BCC_Displacement_16bit
00002436  6100 FC88               2776      BSR         Get_Current_Address
0000243A  6100 FC8C               2777      BSR         Get_BCC_Destination_Address
0000243E  2207                    2778      MOVE.L      D7,D1
00002440  6100 FC8A               2779      BSR         PrintHex
00002444                          2780  
00002444  6000 ECAC               2781      BRA         opdec_return
00002448                          2782  MATCH_CC_VC_32
00002448                          2783      ** print opcode **
00002448  43F8 00BD               2784      LEA         pr_BCC_VC,A1
0000244C  6100 FC92               2785      BSR         PrintString
00002450                          2786  
00002450  6100 FCAE               2787      BSR         PrintSizeLONG
00002454  43F8 0000               2788      LEA         pr_space,A1
00002458  6100 FC86               2789      BSR         PrintString
0000245C                          2790  
0000245C                          2791      ** print address **
0000245C  6100 FC5C               2792      BSR         Get_BCC_Displacement_32bit
00002460  6100 FC5E               2793      BSR         Get_Current_Address
00002464  6100 FC62               2794      BSR         Get_BCC_Destination_Address
00002468  2207                    2795      MOVE.L      D7,D1
0000246A  6100 FC60               2796      BSR         PrintHex
0000246E                          2797  
0000246E  6000 EC82               2798      BRA         opdec_return
00002472                          2799  MATCH_CC_VS_8
00002472                          2800      ** print opcode **
00002472  43F8 00C1               2801      LEA         pr_BCC_VS,A1
00002476  6100 FC68               2802      BSR         PrintString
0000247A                          2803  
0000247A  6100 FC6C               2804      BSR         PrintSizeBYTE
0000247E  43F8 0000               2805      LEA         pr_space,A1
00002482  6100 FC5C               2806      BSR         PrintString
00002486                          2807  
00002486                          2808      ** print address **
00002486  6100 FC26               2809      BSR         Get_BCC_Displacement_8bit
0000248A  6100 FC34               2810      BSR         Get_Current_Address
0000248E  6100 FC38               2811      BSR         Get_BCC_Destination_Address
00002492  2207                    2812      MOVE.L      D7,D1
00002494  6100 FC36               2813      BSR         PrintHex
00002498                          2814  
00002498  6000 EC58               2815      BRA         opdec_return
0000249C                          2816  MATCH_CC_VS_16
0000249C                          2817      ** print opcode **
0000249C  43F8 00C1               2818      LEA         pr_BCC_VS,A1
000024A0  6100 FC3E               2819      BSR         PrintString
000024A4                          2820  
000024A4  6100 FC4E               2821      BSR         PrintSizeWORD
000024A8  43F8 0000               2822      LEA         pr_space,A1
000024AC  6100 FC32               2823      BSR         PrintString
000024B0                          2824  
000024B0                          2825      ** print address **
000024B0  6100 FC02               2826      BSR         Get_BCC_Displacement_16bit
000024B4  6100 FC0A               2827      BSR         Get_Current_Address
000024B8  6100 FC0E               2828      BSR         Get_BCC_Destination_Address
000024BC  2207                    2829      MOVE.L      D7,D1
000024BE  6100 FC0C               2830      BSR         PrintHex
000024C2                          2831  
000024C2  6000 EC2E               2832      BRA         opdec_return
000024C6                          2833  MATCH_CC_VS_32
000024C6                          2834      ** print opcode **
000024C6  43F8 00C1               2835      LEA         pr_BCC_VS,A1
000024CA  6100 FC14               2836      BSR         PrintString
000024CE                          2837  
000024CE  6100 FC30               2838      BSR         PrintSizeLONG
000024D2  43F8 0000               2839      LEA         pr_space,A1
000024D6  6100 FC08               2840      BSR         PrintString
000024DA                          2841  
000024DA                          2842      ** print address **
000024DA  6100 FBDE               2843      BSR         Get_BCC_Displacement_32bit
000024DE  6100 FBE0               2844      BSR         Get_Current_Address
000024E2  6100 FBE4               2845      BSR         Get_BCC_Destination_Address
000024E6  2207                    2846      MOVE.L      D7,D1
000024E8  6100 FBE2               2847      BSR         PrintHex
000024EC                          2848  
000024EC  6000 EC04               2849      BRA         opdec_return
000024F0                          2850  MATCH_CC_PL_8
000024F0                          2851      ** print opcode **
000024F0  43F8 00B9               2852      LEA         pr_BCC_PL,A1
000024F4  6100 FBEA               2853      BSR         PrintString
000024F8                          2854  
000024F8  6100 FBEE               2855      BSR         PrintSizeBYTE
000024FC  43F8 0000               2856      LEA         pr_space,A1
00002500  6100 FBDE               2857      BSR         PrintString
00002504                          2858  
00002504                          2859      ** print address **
00002504  6100 FBA8               2860      BSR         Get_BCC_Displacement_8bit
00002508  6100 FBB6               2861      BSR         Get_Current_Address
0000250C  6100 FBBA               2862      BSR         Get_BCC_Destination_Address
00002510  2207                    2863      MOVE.L      D7,D1
00002512  6100 FBB8               2864      BSR         PrintHex
00002516                          2865  
00002516  6000 EBDA               2866      BRA         opdec_return
0000251A                          2867  MATCH_CC_PL_16
0000251A                          2868      ** print opcode **
0000251A  43F8 00B9               2869      LEA         pr_BCC_PL,A1
0000251E  6100 FBC0               2870      BSR         PrintString
00002522                          2871  
00002522  6100 FBD0               2872      BSR         PrintSizeWORD
00002526  43F8 0000               2873      LEA         pr_space,A1
0000252A  6100 FBB4               2874      BSR         PrintString
0000252E                          2875  
0000252E                          2876      ** print address **
0000252E  6100 FB84               2877      BSR         Get_BCC_Displacement_16bit
00002532  6100 FB8C               2878      BSR         Get_Current_Address
00002536  6100 FB90               2879      BSR         Get_BCC_Destination_Address
0000253A  2207                    2880      MOVE.L      D7,D1
0000253C  6100 FB8E               2881      BSR         PrintHex
00002540                          2882  
00002540  6000 EBB0               2883      BRA         opdec_return
00002544                          2884  MATCH_CC_PL_32
00002544                          2885      ** print opcode **
00002544  43F8 00B9               2886      LEA         pr_BCC_PL,A1
00002548  6100 FB96               2887      BSR         PrintString
0000254C                          2888  
0000254C  6100 FBB2               2889      BSR         PrintSizeLONG
00002550  43F8 0000               2890      LEA         pr_space,A1
00002554  6100 FB8A               2891      BSR         PrintString
00002558                          2892  
00002558                          2893      ** print address **
00002558  6100 FB60               2894      BSR         Get_BCC_Displacement_32bit
0000255C  6100 FB62               2895      BSR         Get_Current_Address
00002560  6100 FB66               2896      BSR         Get_BCC_Destination_Address
00002564  2207                    2897      MOVE.L      D7,D1
00002566  6100 FB64               2898      BSR         PrintHex
0000256A                          2899  
0000256A  6000 EB86               2900      BRA         opdec_return
0000256E                          2901  MATCH_CC_MI_8
0000256E                          2902      ** print opcode **
0000256E  43F8 00B1               2903      LEA         pr_BCC_MI,A1
00002572  6100 FB6C               2904      BSR         PrintString
00002576                          2905  
00002576  6100 FB70               2906      BSR         PrintSizeBYTE
0000257A  43F8 0000               2907      LEA         pr_space,A1
0000257E  6100 FB60               2908      BSR         PrintString
00002582                          2909  
00002582                          2910      ** print address **
00002582  6100 FB2A               2911      BSR         Get_BCC_Displacement_8bit
00002586  6100 FB38               2912      BSR         Get_Current_Address
0000258A  6100 FB3C               2913      BSR         Get_BCC_Destination_Address
0000258E  2207                    2914      MOVE.L      D7,D1
00002590  6100 FB3A               2915      BSR         PrintHex
00002594                          2916  
00002594  6000 EB5C               2917      BRA         opdec_return
00002598                          2918  MATCH_CC_MI_16
00002598                          2919      ** print opcode **
00002598  43F8 00B1               2920      LEA         pr_BCC_MI,A1
0000259C  6100 FB42               2921      BSR         PrintString
000025A0                          2922  
000025A0  6100 FB52               2923      BSR         PrintSizeWORD
000025A4  43F8 0000               2924      LEA         pr_space,A1
000025A8  6100 FB36               2925      BSR         PrintString
000025AC                          2926  
000025AC                          2927      ** print address **
000025AC  6100 FB06               2928      BSR         Get_BCC_Displacement_16bit
000025B0  6100 FB0E               2929      BSR         Get_Current_Address
000025B4  6100 FB12               2930      BSR         Get_BCC_Destination_Address
000025B8  2207                    2931      MOVE.L      D7,D1
000025BA  6100 FB10               2932      BSR         PrintHex
000025BE                          2933  
000025BE  6000 EB32               2934      BRA         opdec_return
000025C2                          2935  MATCH_CC_MI_32
000025C2                          2936      ** print opcode **
000025C2  43F8 00B1               2937      LEA         pr_BCC_MI,A1
000025C6  6100 FB18               2938      BSR         PrintString
000025CA                          2939  
000025CA  6100 FB34               2940      BSR         PrintSizeLONG
000025CE  43F8 0000               2941      LEA         pr_space,A1
000025D2  6100 FB0C               2942      BSR         PrintString
000025D6                          2943  
000025D6                          2944      ** print address **
000025D6  6100 FAE2               2945      BSR         Get_BCC_Displacement_32bit
000025DA  6100 FAE4               2946      BSR         Get_Current_Address
000025DE  6100 FAE8               2947      BSR         Get_BCC_Destination_Address
000025E2  2207                    2948      MOVE.L      D7,D1
000025E4  6100 FAE6               2949      BSR         PrintHex
000025E8                          2950  
000025E8  6000 EB08               2951      BRA         opdec_return
000025EC                          2952  MATCH_CC_GE_8
000025EC                          2953      ** print opcode **
000025EC  43F8 0099               2954      LEA         pr_BCC_GE,A1
000025F0  6100 FAEE               2955      BSR         PrintString
000025F4                          2956  
000025F4  6100 FAF2               2957      BSR         PrintSizeBYTE
000025F8  43F8 0000               2958      LEA         pr_space,A1
000025FC  6100 FAE2               2959      BSR         PrintString
00002600                          2960  
00002600                          2961      ** print address **
00002600  6100 FAAC               2962      BSR         Get_BCC_Displacement_8bit
00002604  6100 FABA               2963      BSR         Get_Current_Address
00002608  6100 FABE               2964      BSR         Get_BCC_Destination_Address
0000260C  2207                    2965      MOVE.L      D7,D1
0000260E  6100 FABC               2966      BSR         PrintHex
00002612                          2967  
00002612  6000 EADE               2968      BRA         opdec_return
00002616                          2969  MATCH_CC_GE_16
00002616                          2970      ** print opcode **
00002616  43F8 0099               2971      LEA         pr_BCC_GE,A1
0000261A  6100 FAC4               2972      BSR         PrintString
0000261E                          2973  
0000261E  6100 FAD4               2974      BSR         PrintSizeWORD
00002622  43F8 0000               2975      LEA         pr_space,A1
00002626  6100 FAB8               2976      BSR         PrintString
0000262A                          2977  
0000262A                          2978      ** print address **
0000262A  6100 FA88               2979      BSR         Get_BCC_Displacement_16bit
0000262E  6100 FA90               2980      BSR         Get_Current_Address
00002632  6100 FA94               2981      BSR         Get_BCC_Destination_Address
00002636  2207                    2982      MOVE.L      D7,D1
00002638  6100 FA92               2983      BSR         PrintHex
0000263C                          2984  
0000263C  6000 EAB4               2985      BRA         opdec_return
00002640                          2986  MATCH_CC_GE_32
00002640                          2987      ** print opcode **
00002640  43F8 0099               2988      LEA         pr_BCC_GE,A1
00002644  6100 FA9A               2989      BSR         PrintString
00002648                          2990  
00002648  6100 FAB6               2991      BSR         PrintSizeLONG
0000264C  43F8 0000               2992      LEA         pr_space,A1
00002650  6100 FA8E               2993      BSR         PrintString
00002654                          2994  
00002654                          2995      ** print address **
00002654  6100 FA64               2996      BSR         Get_BCC_Displacement_32bit
00002658  6100 FA66               2997      BSR         Get_Current_Address
0000265C  6100 FA6A               2998      BSR         Get_BCC_Destination_Address
00002660  2207                    2999      MOVE.L      D7,D1
00002662  6100 FA68               3000      BSR         PrintHex
00002666                          3001  
00002666  6000 EA8A               3002      BRA         opdec_return
0000266A                          3003  MATCH_CC_LT_8
0000266A                          3004      ** print opcode **
0000266A  43F8 00AD               3005      LEA         pr_BCC_LT,A1
0000266E  6100 FA70               3006      BSR         PrintString
00002672                          3007  
00002672  6100 FA74               3008      BSR         PrintSizeBYTE
00002676  43F8 0000               3009      LEA         pr_space,A1
0000267A  6100 FA64               3010      BSR         PrintString
0000267E                          3011  
0000267E                          3012      ** print address **
0000267E  6100 FA2E               3013      BSR         Get_BCC_Displacement_8bit
00002682  6100 FA3C               3014      BSR         Get_Current_Address
00002686  6100 FA40               3015      BSR         Get_BCC_Destination_Address
0000268A  2207                    3016      MOVE.L      D7,D1
0000268C  6100 FA3E               3017      BSR         PrintHex
00002690                          3018  
00002690  6000 EA60               3019      BRA         opdec_return
00002694                          3020  MATCH_CC_LT_16
00002694                          3021      ** print opcode **
00002694  43F8 00AD               3022      LEA         pr_BCC_LT,A1
00002698  6100 FA46               3023      BSR         PrintString
0000269C                          3024  
0000269C  6100 FA56               3025      BSR         PrintSizeWORD
000026A0  43F8 0000               3026      LEA         pr_space,A1
000026A4  6100 FA3A               3027      BSR         PrintString
000026A8                          3028  
000026A8                          3029      ** print address **
000026A8  6100 FA0A               3030      BSR         Get_BCC_Displacement_16bit
000026AC  6100 FA12               3031      BSR         Get_Current_Address
000026B0  6100 FA16               3032      BSR         Get_BCC_Destination_Address
000026B4  2207                    3033      MOVE.L      D7,D1
000026B6  6100 FA14               3034      BSR         PrintHex
000026BA                          3035  
000026BA  6000 EA36               3036      BRA         opdec_return
000026BE                          3037  MATCH_CC_LT_32
000026BE                          3038      ** print opcode **
000026BE  43F8 00AD               3039      LEA         pr_BCC_LT,A1
000026C2  6100 FA1C               3040      BSR         PrintString
000026C6                          3041  
000026C6  6100 FA38               3042      BSR         PrintSizeLONG
000026CA  43F8 0000               3043      LEA         pr_space,A1
000026CE  6100 FA10               3044      BSR         PrintString
000026D2                          3045  
000026D2                          3046      ** print address **
000026D2  6100 F9E6               3047      BSR         Get_BCC_Displacement_32bit
000026D6  6100 F9E8               3048      BSR         Get_Current_Address
000026DA  6100 F9EC               3049      BSR         Get_BCC_Destination_Address
000026DE  2207                    3050      MOVE.L      D7,D1
000026E0  6100 F9EA               3051      BSR         PrintHex
000026E4                          3052  
000026E4  6000 EA0C               3053      BRA         opdec_return
000026E8                          3054  MATCH_CC_GT_8
000026E8                          3055      ** print opcode **
000026E8  43F8 009D               3056      LEA         pr_BCC_GT,A1
000026EC  6100 F9F2               3057      BSR         PrintString
000026F0                          3058  
000026F0  6100 F9F6               3059      BSR         PrintSizeBYTE
000026F4  43F8 0000               3060      LEA         pr_space,A1
000026F8  6100 F9E6               3061      BSR         PrintString
000026FC                          3062  
000026FC                          3063      ** print address **
000026FC  6100 F9B0               3064      BSR         Get_BCC_Displacement_8bit
00002700  6100 F9BE               3065      BSR         Get_Current_Address
00002704  6100 F9C2               3066      BSR         Get_BCC_Destination_Address
00002708  2207                    3067      MOVE.L      D7,D1
0000270A  6100 F9C0               3068      BSR         PrintHex
0000270E                          3069  
0000270E  6000 E9E2               3070      BRA         opdec_return
00002712                          3071  MATCH_CC_GT_16
00002712                          3072      ** print opcode **
00002712  43F8 009D               3073      LEA         pr_BCC_GT,A1
00002716  6100 F9C8               3074      BSR         PrintString
0000271A                          3075  
0000271A  6100 F9D8               3076      BSR         PrintSizeWORD
0000271E  43F8 0000               3077      LEA         pr_space,A1
00002722  6100 F9BC               3078      BSR         PrintString
00002726                          3079  
00002726                          3080      ** print address **
00002726  6100 F98C               3081      BSR         Get_BCC_Displacement_16bit
0000272A  6100 F994               3082      BSR         Get_Current_Address
0000272E  6100 F998               3083      BSR         Get_BCC_Destination_Address
00002732  2207                    3084      MOVE.L      D7,D1
00002734  6100 F996               3085      BSR         PrintHex
00002738                          3086  
00002738  6000 E9B8               3087      BRA         opdec_return
0000273C                          3088  MATCH_CC_GT_32
0000273C                          3089      ** print opcode **
0000273C  43F8 009D               3090      LEA         pr_BCC_GT,A1
00002740  6100 F99E               3091      BSR         PrintString
00002744                          3092  
00002744  6100 F9BA               3093      BSR         PrintSizeLONG
00002748  43F8 0000               3094      LEA         pr_space,A1
0000274C  6100 F992               3095      BSR         PrintString
00002750                          3096  
00002750                          3097      ** print address **
00002750  6100 F968               3098      BSR         Get_BCC_Displacement_32bit
00002754  6100 F96A               3099      BSR         Get_Current_Address
00002758  6100 F96E               3100      BSR         Get_BCC_Destination_Address
0000275C  2207                    3101      MOVE.L      D7,D1
0000275E  6100 F96C               3102      BSR         PrintHex
00002762                          3103  
00002762  6000 E98E               3104      BRA         opdec_return
00002766                          3105  MATCH_CC_LE_8
00002766                          3106      ** print opcode **
00002766  43F8 00A5               3107      LEA         pr_BCC_LE,A1
0000276A  6100 F974               3108      BSR         PrintString
0000276E                          3109  
0000276E  6100 F978               3110      BSR         PrintSizeBYTE
00002772  43F8 0000               3111      LEA         pr_space,A1
00002776  6100 F968               3112      BSR         PrintString
0000277A                          3113  
0000277A                          3114      ** print address **
0000277A  6100 F932               3115      BSR         Get_BCC_Displacement_8bit
0000277E  6100 F940               3116      BSR         Get_Current_Address
00002782  6100 F944               3117      BSR         Get_BCC_Destination_Address
00002786  2207                    3118      MOVE.L      D7,D1
00002788  6100 F942               3119      BSR         PrintHex
0000278C                          3120  
0000278C  6000 E964               3121      BRA         opdec_return
00002790                          3122  MATCH_CC_LE_16
00002790                          3123      ** print opcode **
00002790  43F8 00A5               3124      LEA         pr_BCC_LE,A1
00002794  6100 F94A               3125      BSR         PrintString
00002798                          3126  
00002798  6100 F95A               3127      BSR         PrintSizeWORD
0000279C  43F8 0000               3128      LEA         pr_space,A1
000027A0  6100 F93E               3129      BSR         PrintString
000027A4                          3130  
000027A4                          3131      ** print address **
000027A4  6100 F90E               3132      BSR         Get_BCC_Displacement_16bit
000027A8  6100 F916               3133      BSR         Get_Current_Address
000027AC  6100 F91A               3134      BSR         Get_BCC_Destination_Address
000027B0  2207                    3135      MOVE.L      D7,D1
000027B2  6100 F918               3136      BSR         PrintHex
000027B6                          3137  
000027B6  6000 E93A               3138      BRA         opdec_return
000027BA                          3139  MATCH_CC_LE_32
000027BA                          3140      ** print opcode **
000027BA  43F8 00A5               3141      LEA         pr_BCC_LE,A1
000027BE  6100 F920               3142      BSR         PrintString
000027C2                          3143  
000027C2  6100 F93C               3144      BSR         PrintSizeLONG
000027C6  43F8 0000               3145      LEA         pr_space,A1
000027CA  6100 F914               3146      BSR         PrintString
000027CE                          3147  
000027CE                          3148      ** print address **
000027CE  6100 F8EA               3149      BSR         Get_BCC_Displacement_32bit
000027D2  6100 F8EC               3150      BSR         Get_Current_Address
000027D6  6100 F8F0               3151      BSR         Get_BCC_Destination_Address
000027DA  2207                    3152      MOVE.L      D7,D1
000027DC  6100 F8EE               3153      BSR         PrintHex
000027E0                          3154  
000027E0  6000 E910               3155      BRA         opdec_return
000027E4                          3156  ERROR
000027E4  43F8 0087               3157      LEA         pr_ERROR,A1
000027E8  6100 F8F6               3158      BSR         PrintString
000027EC  6000 E904               3159      BRA         opdec_return
000027F0                          3160  
000027F0                          3161  
000027F0                          3162  
000027F0                          3163  
000027F0                          3164  -------------------- end include --------------------
000027F0                          3165                  INCLUDE 'arsany_opcodes.x68'
000027F0                          3166  MATCH_MOVEA_W
000027F0                          3167      ** Move command size into D1
000027F0  123C 0002               3168      MOVE.B      #2,D1
000027F4                          3169      ** Print command
000027F4  103C 000E               3170      MOVE.B      #14,D0
000027F8  43F8 0031               3171      LEA         pr_MOVEA,A1
000027FC  4E4F                    3172      TRAP        #15
000027FE                          3173      ** Print size
000027FE  43F8 0019               3174      LEA         pr_WORD,A1
00002802  4E4F                    3175      TRAP        #15
00002804                          3176      
00002804  6000 0016               3177      BRA         print_movea
00002808                          3178  MATCH_MOVEA_L
00002808                          3179      ** Move command size into D1
00002808  123C 0004               3180      MOVE.B      #4,D1
0000280C                          3181      ** Print command
0000280C  103C 000E               3182      MOVE.B      #14,D0
00002810  43F8 0031               3183      LEA         pr_MOVEA,A1
00002814  4E4F                    3184      TRAP        #15
00002816                          3185      ** Print size
00002816  43F8 001C               3186      LEA         pr_LONG,A1
0000281A  4E4F                    3187      TRAP        #15
0000281C                          3188  print_movea
0000281C                          3189      ** Print space
0000281C  43F8 0000               3190      LEA         pr_space,A1
00002820  4E4F                    3191      TRAP        #15
00002822                          3192      ** Decode right side ea
00002822  1002                    3193      MOVE.B      D2,D0
00002824  0200 003F               3194      ANDI.B      #%00111111,D0
00002828  4EB8 1694               3195      JSR         EADecoder
0000282C                          3196      ** Add comma
0000282C  103C 000E               3197      MOVE.B      #14,D0
00002830  43F8 0014               3198      LEA         pr_comma,A1
00002834  4E4F                    3199      TRAP        #15
00002836                          3200      ** Decode left side ea
00002836  3002                    3201      MOVE.W      D2,D0
00002838  0240 0FC0               3202      ANDI.W      #%0000111111000000,D0
0000283C  EC88                    3203      LSR.L       #6,D0
0000283E  4EB8 167C               3204      JSR         EADecoder_left
00002842                          3205      
00002842  6000 E8AE               3206      BRA         opdec_return
00002846                          3207      
00002846                          3208      
00002846                          3209  MATCH_ADDA_W
00002846                          3210      ** Move command size into D1
00002846  123C 0002               3211      MOVE.B      #2,D1
0000284A                          3212      ** Print command
0000284A  103C 000E               3213      MOVE.B      #14,D0
0000284E  43F8 003D               3214      LEA         pr_ADDA,A1
00002852  4E4F                    3215      TRAP        #15
00002854                          3216      ** Print size
00002854  43F8 0019               3217      LEA         pr_WORD,A1
00002858  4E4F                    3218      TRAP        #15
0000285A                          3219      
0000285A  6000 0016               3220      BRA         print_adda
0000285E                          3221  MATCH_ADDA_L
0000285E                          3222      ** Move command size into D1
0000285E  123C 0004               3223      MOVE.B      #4,D1
00002862                          3224      ** Print command
00002862  103C 000E               3225      MOVE.B      #14,D0
00002866  43F8 003D               3226      LEA         pr_ADDA,A1
0000286A  4E4F                    3227      TRAP        #15
0000286C                          3228      ** Print size
0000286C  43F8 001C               3229      LEA         pr_LONG,A1
00002870  4E4F                    3230      TRAP        #15
00002872                          3231  print_adda
00002872                          3232      ** Print space
00002872  43F8 0002               3233      LEA         pr_space2,A1
00002876  4E4F                    3234      TRAP        #15
00002878                          3235      ** Decode right side ea
00002878  1002                    3236      MOVE.B      D2,D0
0000287A  0200 003F               3237      ANDI.B      #%00111111,D0
0000287E  4EB8 1694               3238      JSR         EADecoder
00002882                          3239      ** Add comma
00002882  103C 000E               3240      MOVE.B      #14,D0
00002886  43F8 0014               3241      LEA         pr_comma,A1
0000288A  4E4F                    3242      TRAP        #15
0000288C                          3243      ** Decode left side ea
0000288C  3002                    3244      MOVE.W      D2,D0
0000288E  0240 0E00               3245      ANDI.W      #%0000111000000000,D0
00002892  0040 0040               3246      ORI.W       #%0000000001000000,D0
00002896  EC88                    3247      LSR.L       #6,D0
00002898  4EB8 167C               3248      JSR         EADecoder_left
0000289C                          3249      
0000289C  6000 E854               3250      BRA         opdec_return
000028A0                          3251      
000028A0                          3252      
000028A0                          3253  MATCH_MULS_W
000028A0                          3254      ** Move command size into D1
000028A0  123C 0002               3255      MOVE.B      #2,D1
000028A4                          3256      ** Print command
000028A4  103C 000E               3257      MOVE.B      #14,D0
000028A8  43F8 0042               3258      LEA         pr_MULS,A1
000028AC  4E4F                    3259      TRAP        #15
000028AE                          3260      ** Print size
000028AE  43F8 0019               3261      LEA         pr_WORD,A1
000028B2  4E4F                    3262      TRAP        #15
000028B4                          3263      ** Print space
000028B4  43F8 0002               3264      LEA         pr_space2,A1
000028B8  4E4F                    3265      TRAP        #15
000028BA                          3266      ** Decode right side ea
000028BA  1002                    3267      MOVE.B      D2,D0
000028BC  0200 003F               3268      ANDI.B      #%00111111,D0
000028C0  4EB8 1694               3269      JSR         EADecoder
000028C4                          3270      ** Add comma
000028C4  103C 000E               3271      MOVE.B      #14,D0
000028C8  43F8 0014               3272      LEA         pr_comma,A1
000028CC  4E4F                    3273      TRAP        #15
000028CE                          3274      ** Decode left side ea
000028CE  3002                    3275      MOVE.W      D2,D0
000028D0  0240 0E00               3276      ANDI.W      #%0000111000000000,D0
000028D4  EC88                    3277      LSR.L       #6,D0
000028D6  4EB8 167C               3278      JSR         EADecoder_left    
000028DA                          3279      
000028DA  6000 E816               3280      BRA         opdec_return
000028DE                          3281      
000028DE                          3282      
000028DE                          3283  MATCH_RTS
000028DE  43F8 004B               3284      LEA         pr_RTS,A1
000028E2  103C 000E               3285      MOVE.B      #14,D0
000028E6  4E4F                    3286      TRAP        #15
000028E8                          3287  
000028E8  6000 E808               3288      BRA         opdec_return
000028EC                          3289      
000028EC                          3290      
000028EC                          3291  MATCH_CMP_B
000028EC                          3292      ** Move command size into D1
000028EC  123C 0002               3293      MOVE.B      #2,D1
000028F0                          3294      ** Print command
000028F0  103C 000E               3295      MOVE.B      #14,D0
000028F4  43F8 004F               3296      LEA         pr_CMP,A1
000028F8  4E4F                    3297      TRAP        #15
000028FA                          3298      ** Print size
000028FA  43F8 0016               3299      LEA         pr_BYTE,A1
000028FE  4E4F                    3300      TRAP        #15
00002900                          3301      
00002900  6000 002E               3302      BRA         print_cmp
00002904                          3303  MATCH_CMP_W
00002904                          3304      ** Move command size into D1
00002904  123C 0002               3305      MOVE.B      #2,D1
00002908                          3306      ** Print command
00002908  103C 000E               3307      MOVE.B      #14,D0
0000290C  43F8 004F               3308      LEA         pr_CMP,A1
00002910  4E4F                    3309      TRAP        #15
00002912                          3310      ** Print size
00002912  43F8 0019               3311      LEA         pr_WORD,A1
00002916  4E4F                    3312      TRAP        #15
00002918                          3313      
00002918  6000 0016               3314      BRA         print_cmp
0000291C                          3315  MATCH_CMP_L
0000291C                          3316      ** Move command size into D1
0000291C  123C 0004               3317      MOVE.B      #4,D1
00002920                          3318      ** Print command
00002920  103C 000E               3319      MOVE.B      #14,D0
00002924  43F8 004F               3320      LEA         pr_CMP,A1
00002928  4E4F                    3321      TRAP        #15
0000292A                          3322      ** Print size
0000292A  43F8 001C               3323      LEA         pr_LONG,A1
0000292E  4E4F                    3324      TRAP        #15
00002930                          3325  print_cmp
00002930                          3326      ** Print space
00002930  43F8 0005               3327      LEA         pr_space3,A1
00002934  4E4F                    3328      TRAP        #15
00002936  4240                    3329      CLR         D0
00002938                          3330      ** Decode right side ea
00002938  1002                    3331      MOVE.B      D2,D0
0000293A  0200 003F               3332      ANDI.B      #%00111111,D0
0000293E  4EB8 1694               3333      JSR         EADecoder
00002942                          3334      ** Add comma
00002942  103C 000E               3335      MOVE.B      #14,D0
00002946  43F8 0014               3336      LEA         pr_comma,A1
0000294A  4E4F                    3337      TRAP        #15
0000294C                          3338      ** Decode left side ea
0000294C  3002                    3339      MOVE.W      D2,D0
0000294E  0240 0E00               3340      ANDI.W      #%0000111000000000,D0
00002952  EC88                    3341      LSR.L       #6,D0
00002954  4EB8 167C               3342      JSR         EADecoder_left   
00002958                          3343      
00002958  6000 E798               3344      BRA         opdec_return
0000295C                          3345      
0000295C                          3346      
0000295C                          3347  MATCH_JSR
0000295C                          3348      ** Print command
0000295C  103C 000E               3349      MOVE.B      #14,D0
00002960  43F8 0053               3350      LEA         pr_JSR,A1
00002964  4E4F                    3351      TRAP        #15
00002966                          3352      ** Print space
00002966  43F8 000E               3353      LEA         pr_space5,A1
0000296A  4E4F                    3354      TRAP        #15
0000296C                          3355      ** Decode right side ea
0000296C  1002                    3356      MOVE.B      D2,D0
0000296E  0200 003F               3357      ANDI.B      #%00111111,D0
00002972  4EB8 1694               3358      JSR         EADecoder 
00002976                          3359      
00002976  6000 E77A               3360      BRA         opdec_return
0000297A                          3361      
0000297A                          3362      
0000297A                          3363  MATCH_CLR_B 
0000297A                          3364      ** Move command size into D1
0000297A  123C 0002               3365      MOVE.B      #2,D1
0000297E                          3366      ** Print command
0000297E  103C 000E               3367      MOVE.B      #14,D0
00002982  43F8 0047               3368      LEA         pr_CLR,A1
00002986  4E4F                    3369      TRAP        #15
00002988                          3370      ** Print size
00002988  43F8 0016               3371      LEA         pr_BYTE,A1
0000298C  4E4F                    3372      TRAP        #15
0000298E                          3373      
0000298E  6000 002E               3374      BRA         print_clr
00002992                          3375  MATCH_CLR_W
00002992                          3376      ** Move command size into D1
00002992  123C 0002               3377      MOVE.B      #2,D1
00002996                          3378      ** Print command
00002996  103C 000E               3379      MOVE.B      #14,D0
0000299A  43F8 0047               3380      LEA         pr_CLR,A1
0000299E  4E4F                    3381      TRAP        #15
000029A0                          3382      ** Print size
000029A0  43F8 0019               3383      LEA         pr_WORD,A1
000029A4  4E4F                    3384      TRAP        #15
000029A6                          3385      
000029A6  6000 0016               3386      BRA         print_clr
000029AA                          3387  MATCH_CLR_L
000029AA                          3388      ** Move command size into D1
000029AA  123C 0004               3389      MOVE.B      #4,D1
000029AE                          3390      ** Print command
000029AE  103C 000E               3391      MOVE.B      #14,D0
000029B2  43F8 0047               3392      LEA         pr_CLR,A1
000029B6  4E4F                    3393      TRAP        #15
000029B8                          3394      ** Print size
000029B8  43F8 001C               3395      LEA         pr_LONG,A1
000029BC  4E4F                    3396      TRAP        #15
000029BE                          3397  print_clr
000029BE                          3398      ** Print space
000029BE  43F8 0005               3399      LEA         pr_space3,A1
000029C2  4E4F                    3400      TRAP        #15
000029C4                          3401      ** Decode right side ea
000029C4  1002                    3402      MOVE.B      D2,D0
000029C6  0200 003F               3403      ANDI.B      #%00111111,D0
000029CA  4EB8 1694               3404      JSR         EADecoder 
000029CE                          3405      
000029CE  6000 E722               3406      BRA         opdec_return
000029D2                          3407      
000029D2                          3408      
000029D2                          3409  MATCH_AND_DN_B
000029D2                          3410      ** Move command size into D1
000029D2  123C 0002               3411      MOVE.B      #2,D1
000029D6                          3412      ** Print command
000029D6  103C 000E               3413      MOVE.B      #14,D0
000029DA  43F8 0057               3414      LEA         pr_AND,A1
000029DE  4E4F                    3415      TRAP        #15
000029E0                          3416      ** Print size
000029E0  43F8 0016               3417      LEA         pr_BYTE,A1
000029E4  4E4F                    3418      TRAP        #15
000029E6                          3419      
000029E6  6000 002E               3420      BRA         print_and_dn
000029EA                          3421  MATCH_AND_DN_W
000029EA                          3422      ** Move command size into D1
000029EA  123C 0002               3423      MOVE.B      #2,D1
000029EE                          3424      ** Print command
000029EE  103C 000E               3425      MOVE.B      #14,D0
000029F2  43F8 0057               3426      LEA         pr_AND,A1
000029F6  4E4F                    3427      TRAP        #15
000029F8                          3428      ** Print size
000029F8  43F8 0019               3429      LEA         pr_WORD,A1
000029FC  4E4F                    3430      TRAP        #15
000029FE                          3431      
000029FE  6000 0016               3432      BRA         print_and_dn
00002A02                          3433  MATCH_AND_DN_L
00002A02                          3434      ** Move command size into D1
00002A02  123C 0004               3435      MOVE.B      #4,D1
00002A06                          3436      ** Print command
00002A06  103C 000E               3437      MOVE.B      #14,D0
00002A0A  43F8 0057               3438      LEA         pr_AND,A1
00002A0E  4E4F                    3439      TRAP        #15
00002A10                          3440      ** Print size
00002A10  43F8 001C               3441      LEA         pr_LONG,A1
00002A14  4E4F                    3442      TRAP        #15
00002A16                          3443  print_and_dn
00002A16                          3444      ** Print space
00002A16  43F8 0005               3445      LEA         pr_space3,A1
00002A1A  4E4F                    3446      TRAP        #15
00002A1C                          3447      ** Decode right side ea
00002A1C  1002                    3448      MOVE.B      D2,D0
00002A1E  0200 003F               3449      ANDI.B      #%00111111,D0
00002A22  4EB8 1694               3450      JSR         EADecoder
00002A26                          3451      ** Add comma
00002A26  103C 000E               3452      MOVE.B      #14,D0
00002A2A  43F8 0014               3453      LEA         pr_comma,A1
00002A2E  4E4F                    3454      TRAP        #15
00002A30                          3455      ** Decode left side ea
00002A30  3002                    3456      MOVE.W      D2,D0
00002A32  0240 0E00               3457      ANDI.W      #%0000111000000000,D0
00002A36  EC88                    3458      LSR.L       #6,D0
00002A38  4EB8 167C               3459      JSR         EADecoder_left  
00002A3C                          3460      
00002A3C  6000 E6B4               3461      BRA         opdec_return
00002A40                          3462      
00002A40                          3463      
00002A40                          3464  MATCH_AND_EA_B
00002A40                          3465      ** Move command size into D1
00002A40  123C 0002               3466      MOVE.B      #2,D1
00002A44                          3467      ** Print command
00002A44  103C 000E               3468      MOVE.B      #14,D0
00002A48  43F8 0057               3469      LEA         pr_AND,A1
00002A4C  4E4F                    3470      TRAP        #15
00002A4E                          3471      ** Print size
00002A4E  43F8 0016               3472      LEA         pr_BYTE,A1
00002A52  4E4F                    3473      TRAP        #15
00002A54                          3474      
00002A54  6000 002E               3475      BRA         print_and_ea
00002A58                          3476  MATCH_AND_EA_W
00002A58                          3477      ** Move command size into D1
00002A58  123C 0002               3478      MOVE.B      #2,D1
00002A5C                          3479      ** Print command
00002A5C  103C 000E               3480      MOVE.B      #14,D0
00002A60  43F8 0057               3481      LEA         pr_AND,A1
00002A64  4E4F                    3482      TRAP        #15
00002A66                          3483      ** Print size
00002A66  43F8 0019               3484      LEA         pr_WORD,A1
00002A6A  4E4F                    3485      TRAP        #15
00002A6C                          3486      
00002A6C  6000 0016               3487      BRA         print_and_ea
00002A70                          3488  MATCH_AND_EA_L
00002A70                          3489      ** Move command size into D1
00002A70  123C 0004               3490      MOVE.B      #4,D1
00002A74                          3491      ** Print command
00002A74  103C 000E               3492      MOVE.B      #14,D0
00002A78  43F8 0057               3493      LEA         pr_AND,A1
00002A7C  4E4F                    3494      TRAP        #15
00002A7E                          3495      ** Print size
00002A7E  43F8 001C               3496      LEA         pr_LONG,A1
00002A82  4E4F                    3497      TRAP        #15
00002A84                          3498  print_and_ea
00002A84                          3499      ** Print space
00002A84  43F8 0005               3500      LEA         pr_space3,A1
00002A88  4E4F                    3501      TRAP        #15
00002A8A                          3502      ** Decode left side ea
00002A8A  3002                    3503      MOVE.W      D2,D0
00002A8C  0240 0E00               3504      ANDI.W      #%0000111000000000,D0
00002A90  EC88                    3505      LSR.L       #6,D0
00002A92  4EB8 167C               3506      JSR         EADecoder_left
00002A96                          3507      ** Add comma
00002A96  103C 000E               3508      MOVE.B      #14,D0
00002A9A  43F8 0014               3509      LEA         pr_comma,A1
00002A9E  4E4F                    3510      TRAP        #15
00002AA0                          3511      ** Decode right side ea
00002AA0  1002                    3512      MOVE.B      D2,D0
00002AA2  0200 003F               3513      ANDI.B      #%00111111,D0
00002AA6  4EB8 1694               3514      JSR         EADecoder
00002AAA                          3515      
00002AAA  6000 E646               3516      BRA         opdec_return
00002AAE                          3517  
00002AAE                          3518  
00002AAE                          3519  
00002AAE                          3520  
00002AAE                          3521  
00002AAE                          3522  
00002AAE                          3523  
00002AAE                          3524  
00002AAE                          3525  
00002AAE                          3526  -------------------- end include --------------------
00002AAE                          3527  
00002AAE                          3528  
00002AAE                          3529  
00002AAE                          3530  
00002AAE                          3531  
00002AAE                          3532  -------------------- end include --------------------
00002AAE                          3533  
00002AAE                          3534          END     start

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
A2H                 108E
ABS_LONG            39
ABS_WORD            38
ADDA_L              7
ADDA_W              3
ADDBYTELOOP         10B2
ADDBYTES            10AA
ADDI_B              18
ADDI_L              1A
ADDI_RETURN         10EE
ADDI_W              19
ADDQ                5
ADDQ_B              0
ADDQ_L              2
ADDQ_W              1
ADD_ADDA            D
ADD_TO_EA_B         4
ADD_TO_EA_L         6
ADD_TO_EA_W         5
ADD_TO_REG_B        0
ADD_TO_REG_L        2
ADD_TO_REG_W        1
AN                  8
AS                  0
ASL                 383
ASR                 387
BCC                 6
BCC_16              0
BCC_32              FF
CASCADE_A1          1E70
CASCADE_A2          1E88
CASCADE_A3          1EA0
CASCADE_A4          1EB8
CASCADE_A5          1ED0
CASCADE_A6          1EE8
CASCADE_A7          1F00
CASCADE_D1          1CB4
CASCADE_D2          1CCC
CASCADE_D3          1CE4
CASCADE_D4          1CFC
CASCADE_D5          1D14
CASCADE_D6          1D2C
CASCADE_D7          1D44
CC_CC               4
CC_CS               5
CC_EQ               7
CC_F                1
CC_GE               C
CC_GT               E
CC_HI               2
CC_LE               F
CC_LS               3
CC_LT               D
CC_MI               B
CC_NE               6
CC_PL               A
CC_T                0
CC_VC               8
CC_VS               9
CHECK_ADDI          15CC
CHECK_ADDQ          15AA
CHECK_ADD_ADDA      1554
CHECK_BCC           11EC
CHECK_BCC_16        12AC
CHECK_BCC_32        1354
CHECK_BCC_8         1204
CHECK_CMP           1410
CHECK_DIVU_OR       14D6
CHECK_FOUR_BIT_SIG  1164
CHECK_MOVEA_L_AND_MOVE_L  165C
CHECK_MOVEA_W_AND_MOVE_W  1632
CHECK_MOVEM         1524
CHECK_MULS_LEA_CLR_JSR_RTS  1436
CHECK_MULS_W_AND    1488
CHECK_NOP           1158
CHECK_SHIFT         1F26
CHECK_SHIFT_AND_ROTATE  1118
CHECK_SUB           15F2
CLR_B               108
CLR_L               10A
CLR_SCRN            1066
CLR_W               109
CMP                 B
CMP_B               0
CMP_L               2
CMP_W               1
CONV_END            10BA
CR                  D
DEC_ABS_LONG        1744
DEC_ABS_WORD        1738
DEC_AN              175C
DEC_DN              1750
DEC_IMMEDIATE       171C
DEC_INDIRECT        1768
DEC_POST_INC        177C
DEC_PRE_DEC         1796
DEC_RETURN          16FE
DIVU                3
DIVU_OR             8
DN                  0
DN_B                0
DN_L                2
DN_W                1
DONE                1082
DONE_MSG            149
EADECODER           1694
EADECODER_LEFT      167C
EA_B                4
EA_L                6
EA_W                5
ERROR               27E4
ERROR_MSG           12D
EXECUTEPRINTSHIFTDIRECTION  1FBE
EXECUTEPRINTSHIFTSIZE  1FF8
EXECUTESHIFTOPCODEPRINT  1F96
FOUR_BIT_RETURN     10EA
GETSHIFTDESTREG     1F4C
GET_BCC_DESTINATION_ADDRESS  20C8
GET_BCC_DISPLACEMENT_16BIT  20B4
GET_BCC_DISPLACEMENT_32BIT  20BA
GET_BCC_DISPLACEMENT_8BIT  20AE
GET_COUNT_REGISTER_VAL  2036
GET_CURRENT_ADDRESS  20C0
GET_DIRECTION       205E
GET_IS_REGISTER_OR_IMMEDIATE  2072
GET_SHIFT_OPCODE    208A
GET_SIZE            204A
IMMEDIATE           3C
IMM_SKIP            1716
IMM_WORD            1734
INDIRECT            10
INPUT_ERROR         105A
ISOLATE_CC_CODE_FOR_BCC  13FC
ISOLATE_OP_CODE     1644
JSR                 13A
L                   1
LEA                 7
LEFT_SKIP           1698
LF                  A
LOOP_START          102A
LS                  1
LSL                 38F
LSR                 38B
MATCH_ADDA_L        285E
MATCH_ADDA_W        2846
MATCH_ADDI_B        186E
MATCH_ADDI_L        189E
MATCH_ADDI_W        1886
MATCH_ADDQ_B        1A50
MATCH_ADDQ_L        1A80
MATCH_ADDQ_W        1A68
MATCH_ADD_TO_EA_B   1996
MATCH_ADD_TO_EA_L   19C6
MATCH_ADD_TO_EA_W   19AE
MATCH_ADD_TO_REG_B  18DC
MATCH_ADD_TO_REG_L  190C
MATCH_ADD_TO_REG_W  18F4
MATCH_AND_DN_B      29D2
MATCH_AND_DN_L      2A02
MATCH_AND_DN_W      29EA
MATCH_AND_EA_B      2A40
MATCH_AND_EA_L      2A70
MATCH_AND_EA_W      2A58
MATCH_ASL           20A8
MATCH_ASR           20A6
MATCH_CC_CC_16      2226
MATCH_CC_CC_32      2250
MATCH_CC_CC_8       21FC
MATCH_CC_CS_16      22A4
MATCH_CC_CS_32      22CE
MATCH_CC_CS_8       227A
MATCH_CC_EQ_16      23A0
MATCH_CC_EQ_32      23CA
MATCH_CC_EQ_8       2376
MATCH_CC_F_16       2114
MATCH_CC_F_32       2116
MATCH_CC_F_8        2112
MATCH_CC_GE_16      2616
MATCH_CC_GE_32      2640
MATCH_CC_GE_8       25EC
MATCH_CC_GT_16      2712
MATCH_CC_GT_32      273C
MATCH_CC_GT_8       26E8
MATCH_CC_HI_16      2134
MATCH_CC_HI_32      2158
MATCH_CC_HI_8       2118
MATCH_CC_LE_16      2790
MATCH_CC_LE_32      27BA
MATCH_CC_LE_8       2766
MATCH_CC_LS_16      21A8
MATCH_CC_LS_32      21D2
MATCH_CC_LS_8       217E
MATCH_CC_LT_16      2694
MATCH_CC_LT_32      26BE
MATCH_CC_LT_8       266A
MATCH_CC_MI_16      2598
MATCH_CC_MI_32      25C2
MATCH_CC_MI_8       256E
MATCH_CC_NE_16      2322
MATCH_CC_NE_32      234C
MATCH_CC_NE_8       22F8
MATCH_CC_PL_16      251A
MATCH_CC_PL_32      2544
MATCH_CC_PL_8       24F0
MATCH_CC_T_16       210E
MATCH_CC_T_32       2110
MATCH_CC_T_8        210C
MATCH_CC_VC_16      241E
MATCH_CC_VC_32      2448
MATCH_CC_VC_8       23F4
MATCH_CC_VS_16      249C
MATCH_CC_VS_32      24C6
MATCH_CC_VS_8       2472
MATCH_CLR_B         297A
MATCH_CLR_L         29AA
MATCH_CLR_W         2992
MATCH_CMP_B         28EC
MATCH_CMP_L         291C
MATCH_CMP_W         2904
MATCH_DIVU          1AD4
MATCH_JSR           295C
MATCH_LEA           1678
MATCH_LSL           20A2
MATCH_LSR           20A4
MATCH_MOVEA_L       2808
MATCH_MOVEA_W       27F0
MATCH_MOVEM_TO_MEM_L  1B2A
MATCH_MOVEM_TO_MEM_W  1B12
MATCH_MOVEM_TO_REG_L  1B64
MATCH_MOVEM_TO_REG_W  1B60
MATCH_MOVEQ         1830
MATCH_MOVE_B        17BE
MATCH_MOVE_L        17EE
MATCH_MOVE_W        17D6
MATCH_MULS_L        167A
MATCH_MULS_W        28A0
MATCH_NOP           17B0
MATCH_OR_DN_B       166C
MATCH_OR_DN_L       1670
MATCH_OR_DN_W       166E
MATCH_OR_EA_B       1672
MATCH_OR_EA_L       1676
MATCH_OR_EA_W       1674
MATCH_ROL           20AA
MATCH_ROR           20AC
MATCH_RTS           28DE
MATCH_SUB_TO_DN_B   1924
MATCH_SUB_TO_DN_L   1954
MATCH_SUB_TO_DN_W   193C
MATCH_SUB_TO_EA_B   19DE
MATCH_SUB_TO_EA_L   1A0E
MATCH_SUB_TO_EA_W   19F6
MESSAGE             F5
MESSAGE2            11A
MOVEA_WL            1
MOVEM_TO_MEM_L      123
MOVEM_TO_MEM_W      122
MOVEM_TO_REG_L      133
MOVEM_TO_REG_W      132
MOVEQ_              7
MOVE_B              1
MOVE_L              2
MOVE_W              3
MULS_L              130
MULS_LEA_CLR_JSR_RTS_MOVEM  4
MULS_OP_W           7
MULS_W_AND          C
NOP                 4E71
NOP_RETURN          10E6
NO_SLASH            1F24
NUMSUB              10C0
NUMSUBRTN           109C
OPDECODER           10DC
OPDEC_RETURN        10F2
OUTPUT              10000
POST_INC            18
PRE_DEC             20
PRINTARITHSHIFT     1F82
PRINTHEX            20CC
PRINTLOGICSHIFT     1F8C
PRINTROTATE         1F78
PRINTSHIFT          201C
PRINTSHIFTBYTE      1FDA
PRINTSHIFTDATA      1F60
PRINTSHIFTLEFT      1FB4
PRINTSHIFTLONG      1FEE
PRINTSHIFTREG       2014
PRINTSHIFTRIGHT     1FAA
PRINTSHIFTWORD      1FE4
PRINTSIZEBYTE       20E8
PRINTSIZELONG       2100
PRINTSIZEWORD       20F4
PRINTSTRING         20E0
PRINT_ADDA          2872
PRINT_ADDI          18B6
PRINT_ADDQ          1A98
PRINT_ADD_TO_EA     1A26
PRINT_ADD_TO_REG    196C
PRINT_AND_DN        2A16
PRINT_AND_EA        2A84
PRINT_CLR           29BE
PRINT_CMP           2930
PRINT_MOVE          1806
PRINT_MOVEA         281C
PRINT_MOVEM_AN      1D54
PRINT_MOVEM_AN_END  1E6C
PRINT_MOVEM_DN      1B98
PRINT_MOVEM_DN_END  1CB0
PRINT_MOVEM_MASK_TO_MEM  1B68
PRINT_MOVEM_MASK_TO_REG  1B96
PRINT_MOVEM_TO_MEM  1B3E
PROGRAM_START       1000
PR_A0               DD
PR_A1               E0
PR_A2               E3
PR_A3               E6
PR_A4               E9
PR_A5               EC
PR_A6               EF
PR_A7               F2
PR_ADD              61
PR_ADDA             3D
PR_ADDI             65
PR_ADDQ             6A
PR_AND              57
PR_BCC_CC           8D
PR_BCC_CS           91
PR_BCC_EQ           95
PR_BCC_GE           99
PR_BCC_GT           9D
PR_BCC_HI           A1
PR_BCC_LE           A5
PR_BCC_LS           A9
PR_BCC_LT           AD
PR_BCC_MI           B1
PR_BCC_NE           B5
PR_BCC_PL           B9
PR_BCC_VC           BD
PR_BCC_VS           C1
PR_BYTE             16
PR_CLR              47
PR_CMP              4F
PR_COMMA            14
PR_D0               C5
PR_D1               C8
PR_D2               CB
PR_D3               CE
PR_D4               D1
PR_D5               D4
PR_D6               D7
PR_D7               DA
PR_DIVU             73
PR_ERROR            87
PR_HASH             1F
PR_HEXTAG           21
PR_HYPHEN           24
PR_JSR              53
PR_LONG             1C
PR_MOVE             2C
PR_MOVEA            31
PR_MOVEM            37
PR_MOVEQ            5B
PR_MULS             42
PR_NOP              28
PR_REG              78
PR_RTS              4B
PR_SHIFT_AS         7D
PR_SHIFT_L          83
PR_SHIFT_LS         80
PR_SHIFT_R          85
PR_SHIFT_RO         7A
PR_SLASH            26
PR_SPACE            0
PR_SPACE2           2
PR_SPACE3           5
PR_SPACE4           9
PR_SPACE5           E
PR_SUB              6F
PR_WORD             19
R                   0
READFIRSTFOURBITS   10F8
READFIRSTTENBITS    110A
RO                  3
ROL                 39F
ROR                 39B
RTS                 4E75
SHIFT               E
SHIFT_BYTE          0
SHIFT_IMMED         0
SHIFT_LONG          3
SHIFT_REGISTER      1
SHIFT_WORD          1
SLASH_CHECK         1F10
START               1000
SUB                 9
SUB_TO_DN_B         0
SUB_TO_DN_L         2
SUB_TO_DN_W         1
SUB_TO_EA_B         4
SUB_TO_EA_L         6
SUB_TO_EA_W         5
TO_MEM_A0           1D54
TO_MEM_A1           1D76
TO_MEM_A2           1D98
TO_MEM_A3           1DBE
TO_MEM_A4           1DE4
TO_MEM_A5           1E0A
TO_MEM_A6           1E30
TO_MEM_A7           1E56
TO_MEM_D0           1B98
TO_MEM_D1           1BBA
TO_MEM_D2           1BDC
TO_MEM_D3           1C02
TO_MEM_D4           1C28
TO_MEM_D5           1C4E
TO_MEM_D6           1C74
TO_MEM_D7           1C9A
UPSEND              10D4
UPSUB               10CA
UPSUBRTN            10A4

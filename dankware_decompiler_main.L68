00001000 Starting Address
Assembler used: EASy68K Editor/Assembler v5.15.04
Created On: 3/10/2017 3:56:59 AM

00000000                             1  *-----------------------------------------------------------
00000000                             2  * Title      : Main Driver Program
00000000                             3  * Written by : Arsany Azmy, Connor McGwire
00000000                             4  * Date       :
00000000                             5  * Description:
00000000                             6  *-----------------------------------------------------------
00000000  =0000000D                  7  CR      EQU     $0D
00000000  =0000000A                  8  LF      EQU     $0A
00000000                             9  
00000000                            10  
00000000                            11  *** Common strings for printing
00000000= 20 00                     12  pr_space    DC.B    ' ',0
00000002= 2C 00                     13  pr_comma    DC.B    ',',0
00000004= 2E 42 00                  14  pr_BYTE     DC.B    '.B',0
00000007= 2E 57 00                  15  pr_WORD     DC.B    '.W',0
0000000A= 2E 4C 00                  16  pr_LONG     DC.B    '.L',0
0000000D= 23 00                     17  pr_hash     DC.B    '#',0
0000000F                            18  
0000000F                            19  ** Command strings constants
0000000F= 4E 4F 50 00               20  pr_NOP      DC.B    'NOP',0
00000013= 4D 4F 56 45 00            21  pr_MOVE     DC.B    'MOVE',0
00000018= 4D 4F 56 45 41 00         22  pr_MOVEA    DC.B    'MOVEA',0
0000001E= 4D 4F 56 45 4D 00         23  pr_MOVEM    DC.B    'MOVEM',0
00000024= 41 44 44 41 00            24  pr_ADDA     DC.B    'ADDA',0
00000029= 4D 55 4C 53 00            25  pr_MULS     DC.B    'MULS',0
0000002E= 43 4C 52 00               26  pr_CLR      DC.B    'CLR',0
00000032= 52 54 53 00               27  pr_RTS      DC.B    'RTS',0
00000036= 43 4D 50 00               28  pr_CMP      DC.B    'CMP',0
0000003A= 4A 53 52 00               29  pr_JSR      DC.B    'JSR',0
0000003E= 41 4E 44 00               30  pr_AND      DC.B    'AND',0
00000042= 4D 4F 56 45 51 00         31  pr_MOVEQ    DC.B    'MOVEQ',0
00000048= 41 44 44 00               32  pr_ADD      DC.B    'ADD',0
0000004C= 41 44 44 49 00            33  pr_ADDI     DC.B    'ADDI',0
00000051= 41 44 44 51 00            34  pr_ADDQ     DC.B    'ADDQ',0
00000056= 53 55 42 00               35  pr_SUB      DC.B    'SUB',0
0000005A= 44 49 56 55 00            36  pr_DIVU     DC.B    'DIVU',0
0000005F                            37  
0000005F= 44 00                     38  pr_reg      DC.B    'D',0
00000061                            39  
00000061= 52 4F 00                  40  pr_SHIFT_RO   DC.B    'RO',0
00000064= 41 53 00                  41  pr_SHIFT_AS   DC.B    'AS',0
00000067= 4C 53 00                  42  pr_SHIFT_LS   DC.B    'LS',0
0000006A= 4C 00                     43  pr_SHIFT_L    DC.B     'L',0
0000006C= 52 00                     44  pr_SHIFT_R    DC.B     'R',0
0000006E                            45  
0000006E= 45 52 52 4F 52 00         46  pr_ERROR    DC.B    'ERROR',0
00000074                            47  
00000074= 42 43 43 00               48  pr_BCC_CC   DC.B    'BCC',0
00000078= 42 43 53 00               49  pr_BCC_CS   DC.B    'BCS',0
0000007C= 42 45 51 00               50  pr_BCC_EQ   DC.B    'BEQ',0
00000080= 42 47 45 00               51  pr_BCC_GE   DC.B    'BGE',0
00000084= 42 47 54 00               52  pr_BCC_GT   DC.B    'BGT',0
00000088= 42 48 49 00               53  pr_BCC_HI   DC.B    'BHI',0
0000008C= 42 4C 45 00               54  pr_BCC_LE   DC.B    'BLE',0
00000090= 42 4C 53 00               55  pr_BCC_LS   DC.B    'BLS',0
00000094= 42 4C 54 00               56  pr_BCC_LT   DC.B    'BLT',0
00000098= 42 4D 49 00               57  pr_BCC_MI   DC.B    'BMI',0
0000009C= 42 4E 45 00               58  pr_BCC_NE   DC.B    'BNE',0
000000A0= 42 50 4C 00               59  pr_BCC_PL   DC.B    'BPL',0
000000A4= 42 56 43 00               60  pr_BCC_VC   DC.B    'BVC',0
000000A8= 42 56 53 00               61  pr_BCC_VS   DC.B    'BVS',0
000000AC                            62  
000000AC= 45 6E 74 65 72 20 ...     63  MESSAGE     DC.B    'Enter the address of compiled code: ',0
000000D1= 49 6E 76 61 6C 69 ...     64  ERROR_MSG   DC.B    'Invalid input, please rerun',0
000000ED= 20 00                     65  SPACER      DC.B    ' ',0
000000EF                            66  
000000EF                            67  
00001000                            68          ORG     $1000
00001000                            69  
00001000                            70  program_start
00001000                            71  
00001000                            72  *------Code for input-------
00001000                            73  
00001000  43F8 00AC                 74          LEA     MESSAGE,A1      *Code block for first message
00001004  103C 000E                 75          MOVE.B  #14,D0
00001008  4E4F                      76          TRAP    #15
0000100A                            77  
0000100A  227C 00004000             78          MOVEA.L #$4000, A1
00001010  103C 0002                 79          MOVE.B  #2,D0           *Code block for reading input
00001014  4E4F                      80          TRAP    #15
00001016  3001                      81          MOVE.W  D1,D0
00001018                            82  
00001018  2049                      83          MOVEA.L A1,A0           *Move the contents of A1 to A0 for the conversion
0000101A  4EB9 0000105C             84          JSR     A2H             *Branch to Connor's conversion code
00001020                            85  
00001020  2040                      86          MOVEA.L D0,A0
00001022                            87  
00001022  0C50 FFFF                 88          CMPI.W  #$FFFF,(A0)
00001026  6700 0028                 89          BEQ     input_error
0000102A                            90  
0000102A                            91  loop_start
0000102A                            92  
0000102A  2208                      93          MOVE.L  A0,D1           *Print out the address we're working on
0000102C  7410                      94          MOVE.L  #16,D2
0000102E  700F                      95          MOVE.L  #15,D0
00001030  4E4F                      96          TRAP    #15
00001032                            97  
00001032  700E                      98          MOVE.L  #14,D0
00001034  43F8 00ED                 99          LEA     SPACER,A1
00001038  4E4F                     100          TRAP    #15
0000103A                           101  
0000103A  3418                     102          MOVE.W  (A0)+,D2
0000103C  0C42 FFFF                103          CMPI.W  #$FFFF,D2
00001040  6700 0016                104          BEQ     Done
00001044                           105  
00001044  4EB9 000010AA            106          JSR     OpDecoder
0000104A                           107  
0000104A  700D                     108          MOVE.L  #13,D0
0000104C  4E4F                     109          TRAP    #15
0000104E                           110  
0000104E  60DA                     111          BRA     loop_start
00001050                           112  
00001050                           113  input_error
00001050  700D                     114          MOVE.L  #13,D0
00001052  43F8 00D1                115          LEA     ERROR_MSG,A1
00001056  4E4F                     116          TRAP    #15
00001058                           117  Done
00001058  FFFF FFFF                118          SIMHALT
0000105C                           119  
0000105C                           120          INCLUDE 'ASCII_HEX_Conversions.x68'
0000105C                           121  
0000105C                           122  
0000105C                           123  
0000105C                           124  A2H     *Converts and ASCII Byte string into HEX; Size WORD
0000105C  48E7 7FFE                125          MOVEM.L     D1-D7/A0-A6, -(SP)  
00001060                           126          
00001060  3400                     127          MOVE.W  D0,D2
00001062  3202                     128          MOVE.W  D2,D1                   *Store length of string into D1 for looping
00001064  2248                     129          MOVEA.L A0,A1                   *Copy starting point of string
00001066                           130  
00001066  6000 0026                131          BRA     numSub
0000106A                           132  numSubRTN
0000106A  2049                     133          MOVEA.L A1,A0                   *Restore address position
0000106C  3202                     134          MOVE.W  D2,D1                   *Reset loop counter
0000106E                           135          
0000106E  6000 0028                136          BRA     upSub
00001072                           137  upSubRTN        
00001072  2049                     138          MOVEA.L A1,A0                   *Restore address position
00001074  3202                     139          MOVE.W  D2,D1                   *Reset loop counter
00001076  4240                     140          CLR     D0                      *Clear D0
00001078                           141  addBytes
00001078  D018                     142          ADD.B   (A0)+,D0
0000107A  5301                     143          SUBI.B  #1,D1
0000107C  6700 000A                144          BEQ     conv_end
00001080                           145  addByteLoop
00001080  E980                     146          ASL.L   #4,D0
00001082  D018                     147          ADD.B   (A0)+,D0
00001084  5301                     148          SUBI.B  #1,D1
00001086  66F8                     149          BNE     addByteLoop
00001088                           150  conv_end
00001088  4CDF 7FFE                151          MOVEM.L     (SP)+, D1-D7/A0-A6
0000108C  4E75                     152          RTS
0000108E                           153          
0000108E                           154  numSub  *Convert ASCII 'number' to true number byte; Should not be called outside of the A2H subroutines
0000108E  0418 0030                155          SUBI.B  #$30,(A0)+              *Subtract difference between null ASCII and '0' ASCII
00001092  5341                     156          SUB.W   #1,D1                   *Decrement loop counter
00001094  66F8                     157          BNE     numSub                  *If loop has not ended restart
00001096  60D2                     158          BRA     numSubRTN
00001098                           159  
00001098                           160  upSub   *Loops through string to remove any upper case characters 
00001098                           161          *that may remain in the string
00001098  0C10 0009                162          CMPI.B  #9,(A0)                 *Check if the value is greater than 0-9
0000109C  6F00 0004                163          BLE     upSEnd                  *If it's not, continue loop
000010A0  5310                     164          SUBI.B  #1,(A0)                 *Otherwise, subtract difference between ASCII 'number' code and 'A' code
000010A2                           165  upSEnd
000010A2  5248                     166          ADDA.W  #1,A0                   *Increment to next position to check for uppercase
000010A4  5341                     167          SUB.W   #1,D1                   *Decrement loop counter
000010A6  66F0                     168          BNE     upSub                   
000010A8  60C8                     169          BRA     upSubRTN
000010AA                           170  
000010AA                           171  
000010AA                           172  -------------------- end include --------------------
000010AA                           173          INCLUDE 'opcodes.x68'
000010AA                           174  
000010AA  =00004E71                175  NOP             EQU $4E71
000010AA  =00000001                176  MOVE_B          EQU %0001
000010AA  =00000003                177  MOVE_W          EQU %0011
000010AA  =00000002                178  MOVE_L          EQU %0010
000010AA  =00000001                179  MOVEA_WL        EQU %001
000010AA  =00000007                180  MOVEQ_          EQU %0111
000010AA  =00000122                181  MOVEM_TO_MEM_W  EQU %0100100010
000010AA  =00000123                182  MOVEM_TO_MEM_L  EQU %0100100011
000010AA  =00000132                183  MOVEM_TO_REG_W  EQU %0100110010
000010AA  =00000133                184  MOVEM_TO_REG_L  EQU %0100110011
000010AA                           185  
000010AA  =00000018                186  ADDI_B          EQU %0000011000
000010AA  =00000019                187  ADDI_W          EQU %0000011001
000010AA  =0000001A                188  ADDI_L          EQU %0000011010
000010AA                           189  
000010AA  =0000000D                190  ADD_ADDA        EQU %1101
000010AA  =00000000                191  ADD_TO_REG_B    EQU %000
000010AA  =00000001                192  ADD_TO_REG_W    EQU %001
000010AA  =00000002                193  ADD_TO_REG_L    EQU %010
000010AA  =00000004                194  ADD_TO_EA_B     EQU %100
000010AA  =00000005                195  ADD_TO_EA_W     EQU %101
000010AA  =00000006                196  ADD_TO_EA_L     EQU %110
000010AA  =00000003                197  ADDA_W          EQU %011
000010AA  =00000007                198  ADDA_L          EQU %111
000010AA                           199  
000010AA  =00000005                200  ADDQ            EQU %0101
000010AA  =00000000                201  ADDQ_B          EQU %000
000010AA  =00000001                202  ADDQ_W          EQU %001
000010AA  =00000002                203  ADDQ_L          EQU %010
000010AA                           204  
000010AA  =0000000C                205  MULS_W_AND      EQU %1100
000010AA  =00000007                206  MULS_OP_W       EQU %111
000010AA                           207  
000010AA  =00000009                208  SUB             EQU %1001
000010AA  =00000000                209  SUB_TO_DN_B     EQU %000
000010AA  =00000001                210  SUB_TO_DN_W     EQU %001
000010AA  =00000002                211  SUB_TO_DN_L     EQU %010
000010AA  =00000004                212  SUB_TO_EA_B     EQU %100
000010AA  =00000005                213  SUB_TO_EA_W     EQU %101
000010AA  =00000006                214  SUB_TO_EA_L     EQU %110
000010AA                           215  
000010AA  =00000008                216  DIVU_OR         EQU %1000
000010AA  =00000003                217  DIVU            EQU %011
000010AA                           218  
000010AA  =00000000                219  DN_B            EQU %000
000010AA  =00000001                220  DN_W            EQU %001
000010AA  =00000002                221  DN_L            EQU %010
000010AA  =00000004                222  EA_B            EQU %100
000010AA  =00000005                223  EA_W            EQU %101
000010AA  =00000006                224  EA_L            EQU %110
000010AA                           225  
000010AA  =00000004                226  MULS_LEA_CLR_JSR_RTS    EQU %0100
000010AA  =00004E75                227  RTS             EQU $4E75
000010AA  =00000007                228  LEA             EQU %111
000010AA  =0000013A                229  JSR             EQU %0100111010
000010AA  =00000108                230  CLR_B           EQU %0100001000
000010AA  =00000109                231  CLR_W           EQU %0100001001
000010AA  =0000010A                232  CLR_L           EQU %0100001010
000010AA  =00000130                233  MULS_L          EQU %0100110000
000010AA                           234  
000010AA  =0000038F                235  LSL             EQU %1110001111
000010AA  =0000038B                236  LSR             EQU %1110001011
000010AA  =00000387                237  ASR             EQU %1110000111
000010AA  =00000383                238  ASL             EQU %1110000011
000010AA  =0000039F                239  ROL             EQU %1110011111
000010AA  =0000039B                240  ROR             EQU %1110011011
000010AA                           241  
000010AA  =0000000B                242  CMP             EQU %1011
000010AA  =00000000                243  CMP_B           EQU %000
000010AA  =00000001                244  CMP_W           EQU %001
000010AA  =00000002                245  CMP_L           EQU %010
000010AA                           246  
000010AA  =00000006                247  BCC             EQU %0110
000010AA  =00000000                248  BCC_16          EQU %00000000
000010AA  =000000FF                249  BCC_32          EQU $FF
000010AA  =00000000                250  CC_T            EQU %0000
000010AA  =00000001                251  CC_F            EQU %0001
000010AA  =00000002                252  CC_HI           EQU %0010
000010AA  =00000003                253  CC_LS           EQU %0011
000010AA  =00000004                254  CC_CC           EQU %0100
000010AA  =00000005                255  CC_CS           EQU %0101
000010AA  =00000006                256  CC_NE           EQU %0110
000010AA  =00000007                257  CC_EQ           EQU %0111
000010AA  =00000008                258  CC_VC           EQU %1000
000010AA  =00000009                259  CC_VS           EQU %1001
000010AA  =0000000A                260  CC_PL           EQU %1010
000010AA  =0000000B                261  CC_MI           EQU %1011
000010AA  =0000000C                262  CC_GE           EQU %1100
000010AA  =0000000D                263  CC_LT           EQU %1101
000010AA  =0000000E                264  CC_GT           EQU %1110
000010AA  =0000000F                265  CC_LE           EQU %1111
000010AA                           266  
000010AA                           267  
000010AA                           268  
000010AA                           269  
000010AA                           270  
000010AA                           271  
000010AA                           272  OpDecoder
000010AA  48E7 FF7E                273      MOVEM.L     D0-D7/A1-A6, -(SP)
000010AE  4241                     274      CLR         D1
000010B0  6000 0078                275      BRA         CHECK_NOP
000010B4                           276  NOP_RETURN
000010B4  6000 0082                277      BRA         CHECK_FOUR_BIT_SIG
000010B8                           278  FOUR_BIT_RETURN
000010B8  6000 043E                279      BRA         CHECK_MOVEM
000010BC                           280  MOVEM_RETURN
000010BC  6000 04E2                281      BRA         CHECK_ADDI
000010C0                           282  ADDI_RETURN
000010C0  6000 0028                283      BRA         CHECK_SHIFT_AND_ROTATE
000010C4                           284  
000010C4                           285  opdec_return
000010C4  4CDF 7EFF                286      MOVEM.L     (SP)+, D0-D7/A1-A6
000010C8  4E75                     287      RTS
000010CA                           288  
000010CA                           289  ReadFirstFourBits
000010CA                           290  
000010CA  48A7 2000                291      MOVEM.W     D2, -(SP)
000010CE                           292  
000010CE  1E3C 000C                293      MOVE.B      #12,D7
000010D2  EE6A                     294      LSR.W       D7,D2
000010D4  1602                     295      MOVE.B      D2,D3
000010D6                           296  
000010D6  4C9F 0004                297      MOVEM.W     (SP)+,D2
000010DA  4E75                     298      RTS
000010DC                           299  
000010DC                           300  ReadFirstTenBits
000010DC                           301  
000010DC  48A7 2000                302      MOVEM.W     D2, -(SP)
000010E0                           303  
000010E0  EC4A                     304      LSR.W       #6,D2
000010E2  3602                     305      MOVE.W      D2,D3
000010E4                           306  
000010E4  4C9F 0004                307      MOVEM.W     (SP)+,D2
000010E8  4E75                     308      RTS
000010EA                           309  CHECK_SHIFT_AND_ROTATE
000010EA                           310  
000010EA  61F0                     311      BSR         ReadFirstTenBits
000010EC                           312  
000010EC  3C3C 038F                313      MOVE.W      #LSL,D6
000010F0  BC43                     314      CMP.W       D3,D6
000010F2  6700 0B68                315      BEQ         MATCH_LSL
000010F6                           316  
000010F6  3C3C 038B                317      MOVE.W      #LSR,D6
000010FA  BC43                     318      CMP.W       D3,D6
000010FC  6700 0B60                319      BEQ         MATCH_LSR
00001100                           320  
00001100  3C3C 0387                321      MOVE.W      #ASR,D6
00001104  BC43                     322      CMP.W       D3,D6
00001106  6700 0B58                323      BEQ         MATCH_ASR
0000110A                           324  
0000110A  3C3C 0383                325      MOVE.W      #ASL,D6
0000110E  BC43                     326      CMP.W       D3,D6
00001110  6700 0B50                327      BEQ         MATCH_ASL
00001114                           328  
00001114  3C3C 039F                329      MOVE.W      #ROL,D6
00001118  BC43                     330      CMP.W       D3,D6
0000111A  6700 0B48                331      BEQ         MATCH_ROL
0000111E                           332  
0000111E  3C3C 039B                333      MOVE.W      #ROR,D6
00001122  BC43                     334      CMP.W       D3,D6
00001124  6700 0B40                335      BEQ         MATCH_ROR
00001128                           336  
00001128  609A                     337      BRA         opdec_return
0000112A                           338  
0000112A                           339  CHECK_NOP
0000112A                           340  
0000112A  3C3C 4E71                341      MOVE.W      #NOP,D6
0000112E  BC42                     342      CMP.W       D2,D6
00001130  6700 065C                343      BEQ         MATCH_NOP
00001134                           344  
00001134  6000 FF7E                345      BRA         NOP_RETURN
00001138                           346  
00001138                           347  CHECK_FOUR_BIT_SIG
00001138                           348  
00001138  6190                     349      BSR         ReadFirstFourBits
0000113A                           350  
0000113A  1C3C 0001                351      MOVE.B      #MOVE_B,D6
0000113E  BC03                     352      CMP.B       D3,D6
00001140  6700 065A                353      BEQ         MATCH_MOVE_B
00001144                           354  
00001144  1C3C 0003                355      MOVE.B      #MOVE_W,D6
00001148  BC03                     356      CMP.B       D3,D6
0000114A  6700 04BA                357      BEQ         CHECK_MOVEA_W_AND_MOVE_W
0000114E                           358  
0000114E  1C3C 0002                359      MOVE.B      #MOVE_L,D6
00001152  BC03                     360      CMP.B       D3,D6
00001154  6700 04DA                361      BEQ         CHECK_MOVEA_L_AND_MOVE_L
00001158                           362  
00001158  1C3C 0007                363      MOVE.B      #MOVEQ_,D6
0000115C  BC03                     364      CMP.B       D3,D6
0000115E  6700 06AE                365      BEQ         MATCH_MOVEQ
00001162                           366  
00001162  1C3C 000D                367      MOVE.B      #ADD_ADDA,D6
00001166  BC03                     368      CMP.B       D3,D6
00001168  6700 03BE                369      BEQ         CHECK_ADD_ADDA
0000116C                           370  
0000116C  1C3C 0005                371      MOVE.B      #ADDQ,D6
00001170  BC03                     372      CMP.B       D3,D6
00001172  6700 040A                373      BEQ         CHECK_ADDQ
00001176                           374  
00001176  1C3C 0009                375      MOVE.B      #SUB,D6
0000117A  BC03                     376      CMP.B       D3,D6
0000117C  6700 0448                377      BEQ         CHECK_SUB
00001180                           378  
00001180  1C3C 0008                379      MOVE.B      #DIVU_OR,D6
00001184  BC03                     380      CMP.B       D3,D6
00001186  6700 0322                381      BEQ         CHECK_DIVU_OR
0000118A                           382  
0000118A  1C3C 000C                383      MOVE.B      #MULS_W_AND,D6
0000118E  BC03                     384      CMP.B       D3,D6
00001190  6700 02CA                385      BEQ         CHECK_MULS_W_AND
00001194                           386  
00001194  1C3C 0004                387      MOVE.B      #MULS_LEA_CLR_JSR_RTS,D6
00001198  BC03                     388      CMP.B       D3,D6
0000119A  6700 026E                389      BEQ         CHECK_MULS_LEA_CLR_JSR_RTS
0000119E                           390  
0000119E  1C3C 000B                391      MOVE.B      #CMP,D6
000011A2  BC03                     392      CMP.B       D3,D6
000011A4  6700 023E                393      BEQ         CHECK_CMP
000011A8                           394  
000011A8  1C3C 0006                395      MOVE.B      #BCC,D6
000011AC  BC03                     396      CMP.B       D3,D6
000011AE  6700 0010                397      BEQ         CHECK_BCC
000011B2                           398  
000011B2  1C3C 000E                399      MOVE.B      #SHIFT,D6
000011B6  BC03                     400      CMP.B       D3,D6
000011B8  6700 0926                401      BEQ         CHECK_SHIFT
000011BC                           402  
000011BC  6000 FEFA                403      BRA         FOUR_BIT_RETURN
000011C0                           404  CHECK_BCC
000011C0                           405  
000011C0  1C3C 0000                406      MOVE.B      #BCC_16,D6
000011C4  BC02                     407      CMP.B       D2,D6
000011C6  6700 00B8                408      BEQ         CHECK_BCC_16
000011CA                           409  
000011CA  1C3C 00FF                410      MOVE.B      #BCC_32,D6
000011CE  BC02                     411      CMP.B       D2,D6
000011D0  6700 0156                412      BEQ         CHECK_BCC_32
000011D4                           413  
000011D4  6000 0002                414      BRA         CHECK_BCC_8
000011D8                           415  
000011D8                           416  CHECK_BCC_8
000011D8                           417  
000011D8  6100 01F6                418      BSR         ISOLATE_CC_CODE_FOR_BCC
000011DC                           419  
000011DC  1C3C 0000                420      MOVE.B      #CC_T,D6
000011E0  BC03                     421      CMP.B       D3,D6
000011E2  6700 0AE2                422      BEQ         MATCH_CC_T_8
000011E6                           423  
000011E6  1C3C 0001                424      MOVE.B      #CC_F,D6
000011EA  BC03                     425      CMP.B       D3,D6
000011EC  6700 0ADE                426      BEQ         MATCH_CC_F_8
000011F0                           427  
000011F0  1C3C 0002                428      MOVE.B      #CC_HI,D6
000011F4  BC03                     429      CMP.B       D3,D6
000011F6  6700 0ADA                430      BEQ         MATCH_CC_HI_8
000011FA                           431  
000011FA  1C3C 0003                432      MOVE.B      #CC_LS,D6
000011FE  BC03                     433      CMP.B       D3,D6
00001200  6700 0B36                434      BEQ         MATCH_CC_LS_8
00001204                           435  
00001204  1C3C 0004                436      MOVE.B      #CC_CC,D6
00001208  BC03                     437      CMP.B       D3,D6
0000120A  6700 0BAA                438      BEQ         MATCH_CC_CC_8
0000120E                           439  
0000120E  1C3C 0005                440      MOVE.B      #CC_CS,D6
00001212  BC03                     441      CMP.B       D3,D6
00001214  6700 0C1E                442      BEQ         MATCH_CC_CS_8
00001218                           443  
00001218  1C3C 0006                444      MOVE.B      #CC_NE,D6
0000121C  BC03                     445      CMP.B       D3,D6
0000121E  6700 0C92                446      BEQ         MATCH_CC_NE_8
00001222                           447  
00001222  1C3C 0007                448      MOVE.B      #CC_EQ,D6
00001226  BC03                     449      CMP.B       D3,D6
00001228  6700 0D06                450      BEQ         MATCH_CC_EQ_8
0000122C                           451  
0000122C  1C3C 0008                452      MOVE.B      #CC_VC,D6
00001230  BC03                     453      CMP.B       D3,D6
00001232  6700 0D7A                454      BEQ         MATCH_CC_VC_8
00001236                           455  
00001236  1C3C 0009                456      MOVE.B      #CC_VS,D6
0000123A  BC03                     457      CMP.B       D3,D6
0000123C  6700 0DEE                458      BEQ         MATCH_CC_VS_8
00001240                           459  
00001240  1C3C 000A                460      MOVE.B      #CC_PL,D6
00001244  BC03                     461      CMP.B       D3,D6
00001246  6700 0E62                462      BEQ         MATCH_CC_PL_8
0000124A                           463  
0000124A  1C3C 000B                464      MOVE.B      #CC_MI,D6
0000124E  BC03                     465      CMP.B       D3,D6
00001250  6700 0ED6                466      BEQ         MATCH_CC_MI_8
00001254                           467  
00001254  1C3C 000C                468      MOVE.B      #CC_GE,D6
00001258  BC03                     469      CMP.B       D3,D6
0000125A  6700 0F4A                470      BEQ         MATCH_CC_GE_8
0000125E                           471  
0000125E  1C3C 000D                472      MOVE.B      #CC_LT,D6
00001262  BC03                     473      CMP.B       D3,D6
00001264  6700 0FBE                474      BEQ         MATCH_CC_LT_8
00001268                           475  
00001268  1C3C 000E                476      MOVE.B      #CC_GT,D6
0000126C  BC03                     477      CMP.B       D3,D6
0000126E  6700 1032                478      BEQ         MATCH_CC_GT_8
00001272                           479  
00001272  1C3C 000F                480      MOVE.B      #CC_LE,D6
00001276  BC03                     481      CMP.B       D3,D6
00001278  6700 10A6                482      BEQ         MATCH_CC_LE_8
0000127C                           483  
0000127C  6000 1120                484      BRA         ERROR
00001280                           485  
00001280                           486  CHECK_BCC_16
00001280                           487  
00001280  6100 014E                488      BSR         ISOLATE_CC_CODE_FOR_BCC
00001284                           489  
00001284  1C3C 0000                490      MOVE.B      #CC_T,D6
00001288  BC03                     491      CMP.B       D3,D6
0000128A  6700 0A3C                492      BEQ         MATCH_CC_T_16
0000128E                           493  
0000128E  1C3C 0001                494      MOVE.B      #CC_F,D6
00001292  BC03                     495      CMP.B       D3,D6
00001294  6700 0A38                496      BEQ         MATCH_CC_F_16
00001298                           497  
00001298  1C3C 0002                498      MOVE.B      #CC_HI,D6
0000129C  BC03                     499      CMP.B       D3,D6
0000129E  6700 0A4E                500      BEQ         MATCH_CC_HI_16
000012A2                           501  
000012A2  1C3C 0003                502      MOVE.B      #CC_LS,D6
000012A6  BC03                     503      CMP.B       D3,D6
000012A8  6700 0AB8                504      BEQ         MATCH_CC_LS_16
000012AC                           505  
000012AC  1C3C 0004                506      MOVE.B      #CC_CC,D6
000012B0  BC03                     507      CMP.B       D3,D6
000012B2  6700 0B2C                508      BEQ         MATCH_CC_CC_16
000012B6                           509  
000012B6  1C3C 0005                510      MOVE.B      #CC_CS,D6
000012BA  BC03                     511      CMP.B       D3,D6
000012BC  6700 0BA0                512      BEQ         MATCH_CC_CS_16
000012C0                           513  
000012C0  1C3C 0006                514      MOVE.B      #CC_NE,D6
000012C4  BC03                     515      CMP.B       D3,D6
000012C6  6700 0C14                516      BEQ         MATCH_CC_NE_16
000012CA                           517  
000012CA  1C3C 0007                518      MOVE.B      #CC_EQ,D6
000012CE  BC03                     519      CMP.B       D3,D6
000012D0  6700 0C88                520      BEQ         MATCH_CC_EQ_16
000012D4                           521  
000012D4  1C3C 0008                522      MOVE.B      #CC_VC,D6
000012D8  BC03                     523      CMP.B       D3,D6
000012DA  6700 0CFC                524      BEQ         MATCH_CC_VC_16
000012DE                           525  
000012DE  1C3C 0009                526      MOVE.B      #CC_VS,D6
000012E2  BC03                     527      CMP.B       D3,D6
000012E4  6700 0D70                528      BEQ         MATCH_CC_VS_16
000012E8                           529  
000012E8  1C3C 000A                530      MOVE.B      #CC_PL,D6
000012EC  BC03                     531      CMP.B       D3,D6
000012EE  6700 0DE4                532      BEQ         MATCH_CC_PL_16
000012F2                           533  
000012F2  1C3C 000B                534      MOVE.B      #CC_MI,D6
000012F6  BC03                     535      CMP.B       D3,D6
000012F8  6700 0E58                536      BEQ         MATCH_CC_MI_16
000012FC                           537  
000012FC  1C3C 000C                538      MOVE.B      #CC_GE,D6
00001300  BC03                     539      CMP.B       D3,D6
00001302  6700 0ECC                540      BEQ         MATCH_CC_GE_16
00001306                           541  
00001306  1C3C 000D                542      MOVE.B      #CC_LT,D6
0000130A  BC03                     543      CMP.B       D3,D6
0000130C  6700 0F40                544      BEQ         MATCH_CC_LT_16
00001310                           545  
00001310  1C3C 000E                546      MOVE.B      #CC_GT,D6
00001314  BC03                     547      CMP.B       D3,D6
00001316  6700 0FB4                548      BEQ         MATCH_CC_GT_16
0000131A                           549  
0000131A  1C3C 000F                550      MOVE.B      #CC_LE,D6
0000131E  BC03                     551      CMP.B       D3,D6
00001320  6700 1028                552      BEQ         MATCH_CC_LE_16
00001324                           553  
00001324  6000 1078                554      BRA         ERROR
00001328                           555  
00001328                           556  
00001328                           557  CHECK_BCC_32
00001328                           558  
00001328  6100 00A6                559      BSR         ISOLATE_CC_CODE_FOR_BCC
0000132C                           560  
0000132C  1C3C 0000                561      MOVE.B      #CC_T,D6
00001330  BC03                     562      CMP.B       D3,D6
00001332  6700 0996                563      BEQ         MATCH_CC_T_32
00001336                           564  
00001336  1C3C 0001                565      MOVE.B      #CC_F,D6
0000133A  BC03                     566      CMP.B       D3,D6
0000133C  6700 0992                567      BEQ         MATCH_CC_F_32
00001340                           568  
00001340  1C3C 0002                569      MOVE.B      #CC_HI,D6
00001344  BC03                     570      CMP.B       D3,D6
00001346  6700 09CA                571      BEQ         MATCH_CC_HI_32
0000134A                           572  
0000134A  1C3C 0003                573      MOVE.B      #CC_LS,D6
0000134E  BC03                     574      CMP.B       D3,D6
00001350  6700 0A3A                575      BEQ         MATCH_CC_LS_32
00001354                           576  
00001354  1C3C 0004                577      MOVE.B      #CC_CC,D6
00001358  BC03                     578      CMP.B       D3,D6
0000135A  6700 0AAE                579      BEQ         MATCH_CC_CC_32
0000135E                           580  
0000135E  1C3C 0005                581      MOVE.B      #CC_CS,D6
00001362  BC03                     582      CMP.B       D3,D6
00001364  6700 0B22                583      BEQ         MATCH_CC_CS_32
00001368                           584  
00001368  1C3C 0006                585      MOVE.B      #CC_NE,D6
0000136C  BC03                     586      CMP.B       D3,D6
0000136E  6700 0B96                587      BEQ         MATCH_CC_NE_32
00001372                           588  
00001372  1C3C 0007                589      MOVE.B      #CC_EQ,D6
00001376  BC03                     590      CMP.B       D3,D6
00001378  6700 0C0A                591      BEQ         MATCH_CC_EQ_32
0000137C                           592  
0000137C  1C3C 0008                593      MOVE.B      #CC_VC,D6
00001380  BC03                     594      CMP.B       D3,D6
00001382  6700 0C7E                595      BEQ         MATCH_CC_VC_32
00001386                           596  
00001386  1C3C 0009                597      MOVE.B      #CC_VS,D6
0000138A  BC03                     598      CMP.B       D3,D6
0000138C  6700 0CF2                599      BEQ         MATCH_CC_VS_32
00001390                           600  
00001390  1C3C 000A                601      MOVE.B      #CC_PL,D6
00001394  BC03                     602      CMP.B       D3,D6
00001396  6700 0D66                603      BEQ         MATCH_CC_PL_32
0000139A                           604  
0000139A  1C3C 000B                605      MOVE.B      #CC_MI,D6
0000139E  BC03                     606      CMP.B       D3,D6
000013A0  6700 0DDA                607      BEQ         MATCH_CC_MI_32
000013A4                           608  
000013A4  1C3C 000C                609      MOVE.B      #CC_GE,D6
000013A8  BC03                     610      CMP.B       D3,D6
000013AA  6700 0E4E                611      BEQ         MATCH_CC_GE_32
000013AE                           612  
000013AE  1C3C 000D                613      MOVE.B      #CC_LT,D6
000013B2  BC03                     614      CMP.B       D3,D6
000013B4  6700 0EC2                615      BEQ         MATCH_CC_LT_32
000013B8                           616  
000013B8  1C3C 000E                617      MOVE.B      #CC_GT,D6
000013BC  BC03                     618      CMP.B       D3,D6
000013BE  6700 0F36                619      BEQ         MATCH_CC_GT_32
000013C2                           620  
000013C2  1C3C 000F                621      MOVE.B      #CC_LE,D6
000013C6  BC03                     622      CMP.B       D3,D6
000013C8  6700 0FAA                623      BEQ         MATCH_CC_LE_32
000013CC                           624  
000013CC  6000 0FD0                625      BRA         ERROR
000013D0                           626  
000013D0                           627  ISOLATE_CC_CODE_FOR_BCC
000013D0                           628  
000013D0  48A7 2000                629      MOVEM.W     D2, -(SP)
000013D4                           630  
000013D4  E94A                     631      LSL.W       #4,D2
000013D6  1E3C 000C                632      MOVE.B      #12,D7
000013DA  EE6A                     633      LSR.W       D7,D2
000013DC                           634  
000013DC  1602                     635      MOVE.B      D2,D3
000013DE                           636  
000013DE  4C9F 0004                637      MOVEM.W     (SP)+,D2
000013E2  4E75                     638      RTS
000013E4                           639  CHECK_CMP
000013E4                           640  
000013E4  6100 0232                641      BSR         ISOLATE_OP_CODE
000013E8                           642  
000013E8  1C3C 0000                643      MOVE.B      #CMP_B,D6
000013EC  BC03                     644      CMP.B       D3,D6
000013EE  6700 10FE                645      BEQ         MATCH_CMP_B
000013F2                           646  
000013F2  1C3C 0001                647      MOVE.B      #CMP_W,D6
000013F6  BC03                     648      CMP.B       D3,D6
000013F8  6700 1132                649      BEQ         MATCH_CMP_W
000013FC                           650  
000013FC  1C3C 0002                651      MOVE.B      #CMP_L,D6
00001400  BC03                     652      CMP.B       D3,D6
00001402  6700 1168                653      BEQ         MATCH_CMP_L
00001406                           654  
00001406  6000 0F96                655      BRA         ERROR
0000140A                           656  CHECK_MULS_LEA_CLR_JSR_RTS
0000140A                           657  
0000140A  3C3C 4E75                658      MOVE.W      #RTS,D6
0000140E  BC42                     659      CMP.W       D2,D6
00001410  6700 10CE                660      BEQ         MATCH_RTS
00001414                           661  
00001414  6100 0202                662      BSR         ISOLATE_OP_CODE
00001418                           663  
00001418  1C3C 0007                664      MOVE.B      #LEA,D6
0000141C  BC03                     665      CMP.B       D3,D6
0000141E  6700 0236                666      BEQ         MATCH_LEA
00001422                           667  
00001422  6100 FCB8                668      BSR         ReadFirstTenBits
00001426                           669  
00001426  3C3C 013A                670      MOVE.W      #JSR,D6
0000142A  BC43                     671      CMP.W       D3,D6
0000142C  6700 117E                672      BEQ         MATCH_JSR
00001430                           673  
00001430  3C3C 0108                674      MOVE.W      #CLR_B,D6
00001434  BC43                     675      CMP.W       D3,D6
00001436  6700 1192                676      BEQ         MATCH_CLR_B
0000143A                           677  
0000143A  3C3C 0109                678      MOVE.W      #CLR_W,D6
0000143E  BC43                     679      CMP.W       D3,D6
00001440  6700 11B0                680      BEQ         MATCH_CLR_W
00001444                           681  
00001444  3C3C 010A                682      MOVE.W      #CLR_L,D6
00001448  BC43                     683      CMP.W       D3,D6
0000144A  6700 11CE                684      BEQ         MATCH_CLR_L
0000144E                           685  
0000144E  3C3C 0130                686      MOVE.W      #MULS_L,D6  * Shouldn't need to check for the rest of the opcode..?
00001452  BC43                     687      CMP.W       D3,D6
00001454  6700 0202                688      BEQ         MATCH_MULS_L
00001458                           689  
00001458  6000 0F44                690      BRA         ERROR
0000145C                           691  
0000145C                           692  CHECK_MULS_W_AND
0000145C                           693  
0000145C  6100 01BA                694      BSR         ISOLATE_OP_CODE
00001460                           695  
00001460  1C3C 0007                696      MOVE.B      #MULS_OP_W,D6
00001464  BC03                     697      CMP.B       D3,D6
00001466  6700 103A                698      BEQ         MATCH_MULS_W
0000146A                           699  
0000146A  1C3C 0000                700      MOVE.B      #DN_B,D6
0000146E  BC03                     701      CMP.B       D3,D6
00001470  6700 11D0                702      BEQ         MATCH_AND_DN_B
00001474                           703  
00001474  1C3C 0001                704      MOVE.B      #DN_W,D6
00001478  BC03                     705      CMP.B       D3,D6
0000147A  6700 1204                706      BEQ         MATCH_AND_DN_W
0000147E                           707  
0000147E  1C3C 0002                708      MOVE.B      #DN_L,D6
00001482  BC03                     709      CMP.B       D3,D6
00001484  6700 1238                710      BEQ         MATCH_AND_DN_L
00001488                           711  
00001488  1C3C 0004                712      MOVE.B      #EA_B,D6
0000148C  BC03                     713      CMP.B       D3,D6
0000148E  6700 126C                714      BEQ         MATCH_AND_EA_B
00001492                           715  
00001492  1C3C 0005                716      MOVE.B      #EA_W,D6
00001496  BC03                     717      CMP.B       D3,D6
00001498  6700 12A0                718      BEQ         MATCH_AND_EA_W
0000149C                           719  
0000149C  1C3C 0006                720      MOVE.B      #EA_L,D6
000014A0  BC03                     721      CMP.B       D3,D6
000014A2  6700 12D4                722      BEQ         MATCH_AND_EA_L
000014A6                           723  
000014A6  6000 0EF6                724      BRA         ERROR
000014AA                           725  
000014AA                           726  CHECK_DIVU_OR
000014AA                           727  
000014AA  6100 016C                728      BSR         ISOLATE_OP_CODE
000014AE                           729  
000014AE  1C3C 0003                730      MOVE.B      #DIVU,D6
000014B2  BC03                     731      CMP.B       D3,D6
000014B4  6700 0192                732      BEQ         MATCH_DIVU
000014B8                           733  
000014B8  1C3C 0000                734      MOVE.B      #DN_B,D6
000014BC  BC03                     735      CMP.B       D3,D6
000014BE  6700 018A                736      BEQ         MATCH_OR_DN_B
000014C2                           737  
000014C2  1C3C 0001                738      MOVE.B      #DN_W,D6
000014C6  BC03                     739      CMP.B       D3,D6
000014C8  6700 0182                740      BEQ         MATCH_OR_DN_W
000014CC                           741  
000014CC  1C3C 0002                742      MOVE.B      #DN_L,D6
000014D0  BC03                     743      CMP.B       D3,D6
000014D2  6700 017A                744      BEQ         MATCH_OR_DN_L
000014D6                           745  
000014D6  1C3C 0004                746      MOVE.B      #EA_B,D6
000014DA  BC03                     747      CMP.B       D3,D6
000014DC  6700 0172                748      BEQ         MATCH_OR_EA_B
000014E0                           749  
000014E0  1C3C 0005                750      MOVE.B      #EA_W,D6
000014E4  BC03                     751      CMP.B       D3,D6
000014E6  6700 016A                752      BEQ         MATCH_OR_EA_W
000014EA                           753  
000014EA  1C3C 0006                754      MOVE.B      #EA_L,D6
000014EE  BC03                     755      CMP.B       D3,D6
000014F0  6700 0162                756      BEQ         MATCH_OR_EA_L
000014F4                           757  
000014F4  6000 0EA8                758      BRA         ERROR
000014F8                           759  
000014F8                           760  CHECK_MOVEM
000014F8                           761  
000014F8  6100 FBE2                762      BSR         ReadFirstTenBits
000014FC                           763  
000014FC  3C3C 0122                764      MOVE.W      #MOVEM_TO_MEM_W,D6
00001500  BC43                     765      CMP.W       D3,D6
00001502  6700 013C                766      BEQ         MATCH_MOVEM_TO_MEM_W
00001506                           767  
00001506  3C3C 0123                768      MOVE.W      #MOVEM_TO_MEM_L,D6
0000150A  BC43                     769      CMP.W       D3,D6
0000150C  6700 0134                770      BEQ         MATCH_MOVEM_TO_MEM_L
00001510                           771  
00001510  3C3C 0132                772      MOVE.W      #MOVEM_TO_REG_W,D6
00001514  BC43                     773      CMP.W       D3,D6
00001516  6700 012C                774      BEQ         MATCH_MOVEM_TO_REG_W
0000151A                           775  
0000151A  3C3C 0133                776      MOVE.W      #MOVEM_TO_REG_L,D6
0000151E  BC43                     777      CMP.W       D3,D6
00001520  6700 0124                778      BEQ         MATCH_MOVEM_TO_REG_L
00001524                           779  
00001524  6000 FB96                780      BRA         MOVEM_RETURN
00001528                           781  CHECK_ADD_ADDA
00001528                           782  
00001528  6100 00EE                783      BSR         ISOLATE_OP_CODE
0000152C                           784  
0000152C  3C3C 0000                785      MOVE.W      #DN_B,D6
00001530  BC43                     786      CMP.W       D3,D6
00001532  6700 0376                787      BEQ         MATCH_ADD_TO_REG_B
00001536                           788  
00001536  3C3C 0001                789      MOVE.W      #DN_W,D6
0000153A  BC43                     790      CMP.W       D3,D6
0000153C  6700 0384                791      BEQ         MATCH_ADD_TO_REG_W
00001540                           792  
00001540  3C3C 0002                793      MOVE.W      #DN_L,D6
00001544  BC43                     794      CMP.W       D3,D6
00001546  6700 0392                795      BEQ         MATCH_ADD_TO_REG_L
0000154A                           796  
0000154A  3C3C 0004                797      MOVE.W      #EA_B,D6
0000154E  BC43                     798      CMP.W       D3,D6
00001550  6700 0412                799      BEQ         MATCH_ADD_TO_EA_B
00001554                           800  
00001554  3C3C 0005                801      MOVE.W      #EA_W,D6
00001558  BC43                     802      CMP.W       D3,D6
0000155A  6700 0420                803      BEQ         MATCH_ADD_TO_EA_W
0000155E                           804  
0000155E  3C3C 0006                805      MOVE.W      #EA_L,D6
00001562  BC43                     806      CMP.W       D3,D6
00001564  6700 042E                807      BEQ         MATCH_ADD_TO_EA_L
00001568                           808  
00001568  3C3C 0003                809      MOVE.W      #ADDA_W,D6
0000156C  BC43                     810      CMP.W       D3,D6
0000156E  6700 0EB6                811      BEQ         MATCH_ADDA_W
00001572                           812  
00001572  3C3C 0007                813      MOVE.W      #ADDA_L,D6
00001576  BC43                     814      CMP.W       D3,D6
00001578  6700 0EEA                815      BEQ         MATCH_ADDA_L
0000157C                           816  
0000157C  4E75                     817      RTS ** Change later?
0000157E                           818  CHECK_ADDQ
0000157E                           819  
0000157E  6100 0098                820      BSR         ISOLATE_OP_CODE
00001582                           821  
00001582  3C3C 0000                822      MOVE.W      #ADDQ_B,D6
00001586  BC43                     823      CMP.W       D3,D6
00001588  6700 0494                824      BEQ         MATCH_ADDQ_B
0000158C                           825  
0000158C  3C3C 0001                826      MOVE.W      #ADDQ_W,D6
00001590  BC43                     827      CMP.W       D3,D6
00001592  6700 04A2                828      BEQ         MATCH_ADDQ_W
00001596                           829  
00001596  3C3C 0002                830      MOVE.W      #ADDQ_L,D6
0000159A  BC43                     831      CMP.W       D3,D6
0000159C  6700 04B0                832      BEQ         MATCH_ADDQ_L
000015A0                           833  
000015A0                           834  CHECK_ADDI
000015A0                           835  
000015A0  6100 FB3A                836      BSR         ReadFirstTenBits
000015A4                           837  
000015A4  3C3C 0018                838      MOVE.W      #ADDI_B,D6
000015A8  BC43                     839      CMP.W       D3,D6
000015AA  6700 0290                840      BEQ         MATCH_ADDI_B
000015AE                           841  
000015AE  3C3C 0019                842      MOVE.W      #ADDI_W,D6
000015B2  BC43                     843      CMP.W       D3,D6
000015B4  6700 029E                844      BEQ         MATCH_ADDI_W
000015B8                           845  
000015B8  3C3C 001A                846      MOVE.W      #ADDI_L,D6
000015BC  BC43                     847      CMP.W       D3,D6
000015BE  6700 02AC                848      BEQ         MATCH_ADDI_L
000015C2                           849  
000015C2  6000 FAFC                850      BRA         ADDI_RETURN
000015C6                           851  CHECK_SUB
000015C6                           852  
000015C6  6100 0050                853      BSR         ISOLATE_OP_CODE
000015CA                           854  
000015CA  3C3C 0000                855      MOVE.W      #DN_B,D6
000015CE  BC43                     856      CMP.W       D3,D6
000015D0  6700 0320                857      BEQ         MATCH_SUB_TO_DN_B
000015D4                           858  
000015D4  3C3C 0001                859      MOVE.W      #DN_W,D6
000015D8  BC43                     860      CMP.W       D3,D6
000015DA  6700 032E                861      BEQ         MATCH_SUB_TO_DN_W
000015DE                           862  
000015DE  3C3C 0002                863      MOVE.W      #DN_L,D6
000015E2  BC43                     864      CMP.W       D3,D6
000015E4  6700 033C                865      BEQ         MATCH_SUB_TO_DN_L
000015E8                           866  
000015E8  3C3C 0004                867      MOVE.W      #EA_B,D6
000015EC  BC43                     868      CMP.W       D3,D6
000015EE  6700 03BC                869      BEQ         MATCH_SUB_TO_EA_B
000015F2                           870  
000015F2  3C3C 0005                871      MOVE.W      #EA_W,D6
000015F6  BC43                     872      CMP.W       D3,D6
000015F8  6700 03CA                873      BEQ         MATCH_SUB_TO_EA_W
000015FC                           874  
000015FC  3C3C 0006                875      MOVE.W      #EA_L,D6
00001600  BC43                     876      CMP.W       D3,D6
00001602  6700 03D8                877      BEQ         MATCH_SUB_TO_EA_L
00001606                           878  CHECK_MOVEA_W_AND_MOVE_W
00001606                           879  
00001606  6100 0010                880      BSR         ISOLATE_OP_CODE
0000160A                           881  
0000160A  1C3C 0001                882      MOVE.B      #MOVEA_WL,D6
0000160E  BC03                     883      CMP.B       D3,D6
00001610  6700 0D98                884      BEQ         MATCH_MOVEA_W
00001614                           885  
00001614  6000 019E                886      BRA         MATCH_MOVE_W
00001618                           887  ISOLATE_OP_CODE
00001618                           888  
00001618  48A7 2000                889      MOVEM.W     D2, -(SP)
0000161C                           890  
0000161C  1E3C 0007                891      MOVE.B      #7,D7
00001620  EF6A                     892      LSL.W       D7,D2
00001622  1E3C 000D                893      MOVE.B      #13,D7
00001626  EE6A                     894      LSR.W       D7,D2
00001628  1602                     895      MOVE.B      D2,D3
0000162A                           896  
0000162A  4C9F 0004                897      MOVEM.W     (SP)+,D2
0000162E  4E75                     898      RTS
00001630                           899  CHECK_MOVEA_L_AND_MOVE_L
00001630                           900  
00001630  61E6                     901      BSR         ISOLATE_OP_CODE
00001632                           902  
00001632  1C3C 0001                903      MOVE.B      #MOVEA_WL,D6
00001636  BC03                     904      CMP.B       D3,D6
00001638  6700 0DAE                905      BEQ         MATCH_MOVEA_L
0000163C                           906  
0000163C  6000 018E                907      BRA         MATCH_MOVE_L
00001640                           908  
00001640                           909  MATCH_MOVEM_TO_MEM_W
00001640  3A02                     910      MOVE.W      D2,D5       *REMOVE
00001642                           911  MATCH_MOVEM_TO_MEM_L
00001642  3A02                     912      MOVE.W      D2,D5       *REMOVE
00001644                           913  MATCH_MOVEM_TO_REG_W
00001644  3A02                     914      MOVE.W      D2,D5       *REMOVE
00001646                           915  MATCH_MOVEM_TO_REG_L
00001646  3A02                     916      MOVE.W      D2,D5       *REMOVE
00001648                           917  
00001648                           918  
00001648                           919  MATCH_DIVU
00001648  3A02                     920      MOVE.W      D2,D5       *REMOVE
0000164A                           921  MATCH_OR_DN_B
0000164A  3A02                     922      MOVE.W      D2,D5       *REMOVE
0000164C                           923  MATCH_OR_DN_W
0000164C  3A02                     924      MOVE.W      D2,D5       *REMOVE
0000164E                           925  MATCH_OR_DN_L
0000164E  3A02                     926      MOVE.W      D2,D5       *REMOVE
00001650                           927  MATCH_OR_EA_B
00001650  3A02                     928      MOVE.W      D2,D5       *REMOVE
00001652                           929  MATCH_OR_EA_W
00001652  3A02                     930      MOVE.W      D2,D5       *REMOVE
00001654                           931  MATCH_OR_EA_L
00001654  3A02                     932      MOVE.W      D2,D5       *REMOVE
00001656                           933  
00001656                           934  MATCH_LEA
00001656  3A02                     935      MOVE.W      D2,D5       *REMOVE
00001658                           936  
00001658                           937  MATCH_MULS_L
00001658  3A02                     938      MOVE.W      D2,D5       *REMOVE
0000165A                           939  
0000165A                           940  
0000165A                           941                  INCLUDE 'EADecoder.x68'
0000165A                           942  
0000165A                           943  
0000165A  =00010000                944  output      EQU $00010000
0000165A                           945  
0000165A  =0000003C                946  IMMEDIATE   EQU %00111100
0000165A  =00000038                947  ABS_WORD    EQU %00111000
0000165A  =00000039                948  ABS_LONG    EQU %00111001
0000165A  =00000000                949  Dn          EQU %00000000
0000165A  =00000008                950  An          EQU %00001000
0000165A  =00000010                951  INDIRECT    EQU %00010000
0000165A  =00000018                952  POST_INC    EQU %00011000
0000165A  =00000020                953  PRE_DEC     EQU %00100000
0000165A                           954  
0000165A                           955  
0000165A                           956  
0000165A                           957  EADecoder_left
0000165A  48E7 FF7E                958          MOVEM.L     D0-D7/A1-A6, -(SP)
0000165E                           959          
0000165E                           960          ** Swap the mode and register bits
0000165E  1800                     961          MOVE.B  D0,D4
00001660  0200 0007                962          ANDI.B  #%00000111,D0       * Mask mode
00001664  0204 0038                963          ANDI.B  #%00111000,D4       * Mask register
00001668  E708                     964          LSL.B   #3,D0               * Move mode bits over
0000166A  E60C                     965          LSR.B   #3,D4               * Move register bits over
0000166C  8004                     966          OR.B    D4,D0               * Recombine
0000166E                           967          
0000166E  6000 0006                968          BRA     left_skip
00001672                           969  
00001672                           970  EADecoder
00001672  48E7 FF7E                971          MOVEM.L     D0-D7/A1-A6, -(SP) *Store registers on stack, except D0
00001676                           972  left_skip   
00001676  4242                     973          CLR     D2    
00001678  4243                     974          CLR     D3 
0000167A  1401                     975          MOVE.B  D1,D2 ** Store opcode size in bytes into D2
0000167C                           976          
0000167C  43F9 00010000            977          LEA     output,A1
00001682  45F9 00010000            978          LEA     output,A2
00001688                           979          
00001688                           980          *First, decoder will check for the 3 types with hard coded register values
00001688  163C 0001                981          MOVE.B  #1,D3
0000168C  B07C 003C                982          CMP     #IMMEDIATE,D0
00001690  6700 0068                983          BEQ     dec_immediate
00001694                           984          
00001694  B07C 0038                985          CMP     #ABS_WORD,D0
00001698  6700 007C                986          BEQ     dec_abs_word
0000169C                           987          
0000169C  B07C 0039                988          CMP     #ABS_LONG,D0
000016A0  6700 0080                989          BEQ     dec_abs_long
000016A4                           990          
000016A4                           991          *If it was none of the above, store the register and mode seperately
000016A4  4243                     992          CLR     D3
000016A6  1200                     993          MOVE.B  D0,D1
000016A8  0201 0038                994          ANDI.B  #%00111000,D1           *Get mode value
000016AC  0200 0007                995          ANDI.B  #%00000111,D0           *Get register value
000016B0  0600 0030                996          ADDI.B  #$30,D0
000016B4                           997                
000016B4  B27C 0000                998          CMP     #Dn,D1
000016B8  6700 0074                999          BEQ     dec_Dn 
000016BC                          1000          
000016BC  B27C 0008               1001          CMP     #An,D1
000016C0  6700 0078               1002          BEQ     dec_An
000016C4                          1003                  
000016C4  B27C 0010               1004          CMP     #INDIRECT,D1
000016C8  6700 007C               1005          BEQ     dec_indirect
000016CC                          1006                  
000016CC  B27C 0018               1007          CMP     #POST_INC,D1
000016D0  6700 0088               1008          BEQ     dec_post_inc
000016D4                          1009                  
000016D4  B27C 0020               1010          CMP     #PRE_DEC,D1
000016D8  6700 009A               1011          BEQ     dec_pre_dec
000016DC                          1012  
000016DC                          1013  dec_return ** Common return for all types
000016DC                          1014          
000016DC                          1015          ** Print display string
000016DC  103C 000E               1016          MOVE.B  #14,D0
000016E0  4E4F                    1017          TRAP    #15
000016E2                          1018          
000016E2                          1019          ** If there is immediate data to print, print it
000016E2  B67C 0001               1020          CMP     #1,D3
000016E6  6600 000C               1021          BNE     imm_skip
000016EA                          1022          
000016EA  103C 000F               1023          MOVE.B  #15,D0
000016EE  143C 0010               1024          MOVE.B  #16,D2
000016F2  4E4F                    1025          TRAP    #15
000016F4                          1026  
000016F4                          1027  imm_skip
000016F4  4CDF 7EFF               1028          MOVEM.L     (SP)+, D0-D7/A1-A6 *Return register data from stack, except D0
000016F8  4E75                    1029          RTS
000016FA                          1030          
000016FA                          1031          * Individual EA decoders *
000016FA                          1032  
000016FA                          1033  dec_immediate   *DECODE IMMEDIATE VALUE*
000016FA  14FC 0023               1034          MOVE.B  #'#',(A2)+  * Move '#' char into string
000016FE  14FC 0024               1035          MOVE.B  #'$',(A2)+  * Move '$' char into string
00001702  14FC 0000               1036          MOVE.B  #$0,(A2)+   * Null terminate string
00001706  B47C 0002               1037          CMP     #2,D2       * Check if data is word length
0000170A  6700 0006               1038          BEQ     imm_word    
0000170E                          1039          
0000170E  2218                    1040          MOVE.L  (A0)+,D1    * Length was long
00001710  60CA                    1041          BRA     dec_return
00001712                          1042          
00001712                          1043  imm_word
00001712  3218                    1044          MOVE.W  (A0)+,D1    * Length was word
00001714  60C6                    1045          BRA     dec_return
00001716                          1046  
00001716                          1047  
00001716                          1048  dec_abs_word    *DECODE ABSOLUTE WORD*
00001716  14FC 0024               1049          MOVE.B  #'$',(A2)+  * Move '$' char into string
0000171A  14FC 0000               1050          MOVE.B  #$0,(A2)+   * Null terminate string
0000171E  3218                    1051          MOVE.W  (A0)+,D1
00001720  60BA                    1052          BRA     dec_return
00001722                          1053          
00001722                          1054  
00001722                          1055  dec_abs_long    *DECODE ABSOLUTE LONG*
00001722  14FC 0024               1056          MOVE.B  #'$',(A2)+  * Move '$' char into string
00001726  14FC 0000               1057          MOVE.B  #$0,(A2)+   * Null terminate string
0000172A  2218                    1058          MOVE.L  (A0)+,D1
0000172C  60AE                    1059          BRA     dec_return
0000172E                          1060          
0000172E                          1061  
0000172E                          1062  dec_Dn          *DECODE DIRECT DATA*
0000172E  14FC 0044               1063          MOVE.B  #'D',(A2)+
00001732  14C0                    1064          MOVE.B  D0,(A2)+
00001734  14FC 0000               1065          MOVE.B  #$0,(A2)+
00001738  60A2                    1066          BRA     dec_return
0000173A                          1067  
0000173A                          1068          
0000173A                          1069  dec_An          *DECODE DIRECT ADDRESS*
0000173A  14FC 0041               1070          MOVE.B  #'A',(A2)+
0000173E  14C0                    1071          MOVE.B  D0,(A2)+
00001740  14FC 0000               1072          MOVE.B  #$0,(A2)+
00001744  6096                    1073          BRA     dec_return
00001746                          1074  
00001746                          1075  
00001746                          1076  dec_indirect    *DECODE INDIRECT ACCESS*
00001746  14FC 0028               1077          MOVE.B  #'(',(A2)+
0000174A  14FC 0041               1078          MOVE.B  #'A',(A2)+
0000174E  14C0                    1079          MOVE.B  D0,(A2)+
00001750  14FC 0029               1080          MOVE.B  #')',(A2)+
00001754  14FC 0000               1081          MOVE.B  #$0,(A2)+
00001758  6082                    1082          BRA     dec_return
0000175A                          1083          
0000175A                          1084  
0000175A                          1085  dec_post_inc    *DECODE INDIRECT POST INCREMENT*
0000175A  14FC 0028               1086          MOVE.B  #'(',(A2)+
0000175E  14FC 0041               1087          MOVE.B  #'A',(A2)+
00001762  14C0                    1088          MOVE.B  D0,(A2)+
00001764  14FC 0029               1089          MOVE.B  #')',(A2)+
00001768  14FC 002B               1090          MOVE.B  #'+',(A2)+
0000176C  14FC 0000               1091          MOVE.B  #$0,(A2)+
00001770  6000 FF6A               1092          BRA     dec_return
00001774                          1093          
00001774                          1094          
00001774                          1095  dec_pre_dec    *DECODE INDIRECT PRE DECREMENT*
00001774  14FC 002D               1096          MOVE.B  #'-',(A2)+
00001778  14FC 0028               1097          MOVE.B  #'(',(A2)+
0000177C  14FC 0041               1098          MOVE.B  #'A',(A2)+
00001780  14C0                    1099          MOVE.B  D0,(A2)+
00001782  14FC 0029               1100          MOVE.B  #')',(A2)+
00001786  14FC 0000               1101          MOVE.B  #$0,(A2)+
0000178A  6000 FF50               1102          BRA     dec_return
0000178E                          1103  
0000178E                          1104  
0000178E                          1105  
0000178E                          1106  
0000178E                          1107  
0000178E                          1108  
0000178E                          1109  
0000178E                          1110  
0000178E                          1111  
0000178E                          1112  -------------------- end include --------------------
0000178E                          1113                  INCLUDE 'connor_opcodes.x68'
0000178E                          1114  
0000178E                          1115  
0000178E                          1116  MATCH_NOP
0000178E  43F8 000F               1117      LEA         pr_NOP,A1
00001792  103C 000E               1118      MOVE.B      #14,D0
00001796  4E4F                    1119      TRAP        #15
00001798  6000 F92A               1120      BRA         opdec_return
0000179C                          1121  
0000179C                          1122  
0000179C                          1123  MATCH_MOVE_B
0000179C                          1124      ** Move command size into D1
0000179C  123C 0002               1125      MOVE.B      #2,D1
000017A0                          1126      ** Print command
000017A0  103C 000E               1127      MOVE.B      #14,D0
000017A4  43F8 0013               1128      LEA         pr_MOVE,A1
000017A8  4E4F                    1129      TRAP        #15
000017AA                          1130      ** Print size
000017AA  43F8 0004               1131      LEA         pr_BYTE,A1
000017AE  4E4F                    1132      TRAP        #15
000017B0                          1133  
000017B0  6000 0032               1134      BRA         print_move
000017B4                          1135  
000017B4                          1136  MATCH_MOVE_W
000017B4                          1137      ** Move command size into D1
000017B4  123C 0002               1138      MOVE.B      #2,D1
000017B8                          1139      ** Print command
000017B8  103C 000E               1140      MOVE.B      #14,D0
000017BC  43F8 0013               1141      LEA         pr_MOVE,A1
000017C0  4E4F                    1142      TRAP        #15
000017C2                          1143      ** Print size
000017C2  43F8 0007               1144      LEA         pr_WORD,A1
000017C6  4E4F                    1145      TRAP        #15
000017C8                          1146  
000017C8  6000 001A               1147      BRA         print_move
000017CC                          1148  
000017CC                          1149  MATCH_MOVE_L
000017CC                          1150      ** Move command size into D1
000017CC  123C 0004               1151      MOVE.B      #4,D1
000017D0                          1152      ** Print command
000017D0  103C 000E               1153      MOVE.B      #14,D0
000017D4  43F8 0013               1154      LEA         pr_MOVE,A1
000017D8  4E4F                    1155      TRAP        #15
000017DA                          1156      ** Print size
000017DA  43F8 000A               1157      LEA         pr_LONG,A1
000017DE  4E4F                    1158      TRAP        #15
000017E0                          1159  
000017E0  6000 0002               1160      BRA         print_move
000017E4                          1161  
000017E4                          1162  print_move
000017E4                          1163      ** Print space
000017E4  43F8 0000               1164      LEA         pr_space,A1
000017E8  4E4F                    1165      TRAP        #15
000017EA                          1166      ** Decode right side ea
000017EA  1002                    1167      MOVE.B      D2,D0
000017EC  0200 003F               1168      ANDI.B      #%00111111,D0
000017F0  4EB8 1672               1169      JSR         EADecoder
000017F4                          1170      ** Add comma
000017F4  103C 000E               1171      MOVE.B      #14,D0
000017F8  43F8 0002               1172      LEA         pr_comma,A1
000017FC  4E4F                    1173      TRAP        #15
000017FE                          1174      ** Decode left side ea
000017FE  3002                    1175      MOVE.W      D2,D0
00001800  0240 0FC0               1176      ANDI.W      #%0000111111000000,D0
00001804  EC48                    1177      LSR.W       #6,D0
00001806  4EB8 165A               1178      JSR         EADecoder_left
0000180A                          1179  
0000180A  6000 F8B8               1180      BRA         opdec_return
0000180E                          1181  
0000180E                          1182  
0000180E                          1183  MATCH_MOVEQ
0000180E                          1184      ** Print command
0000180E  103C 000E               1185      MOVE.B      #14,D0
00001812  43F8 0042               1186      LEA         pr_MOVEQ,A1
00001816  4E4F                    1187      TRAP        #15
00001818                          1188      ** Print space
00001818  43F8 0000               1189      LEA         pr_space,A1
0000181C  4E4F                    1190      TRAP        #15
0000181E                          1191      ** Print data
0000181E  1202                    1192      MOVE.B      D2,D1
00001820  103C 000F               1193      MOVE.B      #15,D0
00001824  2602                    1194      MOVE.L      D2,D3
00001826  7410                    1195      MOVE.L      #16,D2
00001828  4E4F                    1196      TRAP        #15
0000182A  2403                    1197      MOVE.L      D3,D2
0000182C                          1198      ** Decode register
0000182C  3002                    1199      MOVE.W      D2,D0
0000182E  0240 0E00               1200      ANDI.W      #%0000111000000000,D0
00001832  EC48                    1201      LSR.W       #6,D0
00001834  4EB8 165A               1202      JSR         EADecoder_left
00001838                          1203  
00001838  6000 F88A               1204      BRA         opdec_return
0000183C                          1205  
0000183C                          1206  
0000183C                          1207  MATCH_ADDI_B
0000183C                          1208      ** Move command size into D1
0000183C  123C 0002               1209      MOVE.B      #2,D1
00001840                          1210      ** Print command
00001840  103C 000E               1211      MOVE.B      #14,D0
00001844  43F8 004C               1212      LEA         pr_ADDI,A1
00001848  4E4F                    1213      TRAP        #15
0000184A                          1214      ** Print size
0000184A  43F8 0004               1215      LEA         pr_BYTE,A1
0000184E  4E4F                    1216      TRAP        #15
00001850                          1217  
00001850  6000 0032               1218      BRA         print_addi
00001854                          1219  
00001854                          1220  MATCH_ADDI_W
00001854                          1221      ** Move command size into D1
00001854  123C 0002               1222      MOVE.B      #2,D1
00001858                          1223      ** Print command
00001858  103C 000E               1224      MOVE.B      #14,D0
0000185C  43F8 004C               1225      LEA         pr_ADDI,A1
00001860  4E4F                    1226      TRAP        #15
00001862                          1227      ** Print size
00001862  43F8 0007               1228      LEA         pr_WORD,A1
00001866  4E4F                    1229      TRAP        #15
00001868                          1230  
00001868  6000 001A               1231      BRA         print_addi
0000186C                          1232  
0000186C                          1233  MATCH_ADDI_L
0000186C                          1234      ** Move command size into D1
0000186C  123C 0004               1235      MOVE.B      #4,D1
00001870                          1236      ** Print command
00001870  103C 000E               1237      MOVE.B      #14,D0
00001874  43F8 004C               1238      LEA         pr_ADDI,A1
00001878  4E4F                    1239      TRAP        #15
0000187A                          1240      ** Print size
0000187A  43F8 000A               1241      LEA         pr_LONG,A1
0000187E  4E4F                    1242      TRAP        #15
00001880                          1243  
00001880  6000 0002               1244      BRA         print_addi
00001884                          1245  
00001884                          1246  print_addi
00001884                          1247      ** Print space
00001884  43F8 0000               1248      LEA         pr_space,A1
00001888  4E4F                    1249      TRAP        #15
0000188A                          1250      ** Print Immediate data
0000188A  103C 003C               1251      MOVE.B      #%00111100,D0
0000188E  4EB8 1672               1252      JSR         EADecoder
00001892                          1253      ** Add comma
00001892  103C 000E               1254      MOVE.B      #14,D0
00001896  43F8 0002               1255      LEA         pr_comma,A1
0000189A  4E4F                    1256      TRAP        #15
0000189C                          1257      ** Decode right side ea
0000189C  1002                    1258      MOVE.B      D2,D0
0000189E  0200 003F               1259      ANDI.B      #%00111111,D0
000018A2  4EB8 1672               1260      JSR         EADecoder
000018A6                          1261  
000018A6  6000 F81C               1262      BRA         opdec_return
000018AA                          1263  
000018AA                          1264  
000018AA                          1265  MATCH_ADD_TO_REG_B
000018AA                          1266      ** Move command size into D1
000018AA  123C 0002               1267      MOVE.B      #2,D1
000018AE                          1268      ** Print command
000018AE  103C 000E               1269      MOVE.B      #14,D0
000018B2  43F8 0048               1270      LEA         pr_ADD,A1
000018B6  4E4F                    1271      TRAP        #15
000018B8                          1272      ** Print size
000018B8  43F8 0004               1273      LEA         pr_BYTE,A1
000018BC  4E4F                    1274      TRAP        #15
000018BE                          1275  
000018BE  6000 007A               1276      BRA         print_add_to_reg
000018C2                          1277  
000018C2                          1278  MATCH_ADD_TO_REG_W
000018C2                          1279      ** Move command size into D1
000018C2  123C 0002               1280      MOVE.B      #2,D1
000018C6                          1281      ** Print command
000018C6  103C 000E               1282      MOVE.B      #14,D0
000018CA  43F8 0048               1283      LEA         pr_ADD,A1
000018CE  4E4F                    1284      TRAP        #15
000018D0                          1285      ** Print size
000018D0  43F8 0007               1286      LEA         pr_WORD,A1
000018D4  4E4F                    1287      TRAP        #15
000018D6                          1288  
000018D6  6000 0062               1289      BRA         print_add_to_reg
000018DA                          1290  
000018DA                          1291  MATCH_ADD_TO_REG_L
000018DA                          1292      ** Move command size into D1
000018DA  123C 0004               1293      MOVE.B      #4,D1
000018DE                          1294      ** Print command
000018DE  103C 000E               1295      MOVE.B      #14,D0
000018E2  43F8 0048               1296      LEA         pr_ADD,A1
000018E6  4E4F                    1297      TRAP        #15
000018E8                          1298      ** Print size
000018E8  43F8 000A               1299      LEA         pr_LONG,A1
000018EC  4E4F                    1300      TRAP        #15
000018EE                          1301  
000018EE  6000 004A               1302      BRA         print_add_to_reg
000018F2                          1303  
000018F2                          1304  MATCH_SUB_TO_DN_B
000018F2                          1305      ** Move command size into D1
000018F2  123C 0002               1306      MOVE.B      #2,D1
000018F6                          1307      ** Print command
000018F6  103C 000E               1308      MOVE.B      #14,D0
000018FA  43F8 0056               1309      LEA         pr_SUB,A1
000018FE  4E4F                    1310      TRAP        #15
00001900                          1311      ** Print size
00001900  43F8 0004               1312      LEA         pr_BYTE,A1
00001904  4E4F                    1313      TRAP        #15
00001906                          1314  
00001906  6000 0032               1315      BRA         print_add_to_reg
0000190A                          1316  
0000190A                          1317  MATCH_SUB_TO_DN_W
0000190A                          1318      ** Move command size into D1
0000190A  123C 0002               1319      MOVE.B      #2,D1
0000190E                          1320      ** Print command
0000190E  103C 000E               1321      MOVE.B      #14,D0
00001912  43F8 0056               1322      LEA         pr_SUB,A1
00001916  4E4F                    1323      TRAP        #15
00001918                          1324      ** Print size
00001918  43F8 0007               1325      LEA         pr_WORD,A1
0000191C  4E4F                    1326      TRAP        #15
0000191E                          1327  
0000191E  6000 001A               1328      BRA         print_add_to_reg
00001922                          1329  
00001922                          1330  MATCH_SUB_TO_DN_L
00001922                          1331      ** Move command size into D1
00001922  123C 0004               1332      MOVE.B      #4,D1
00001926                          1333      ** Print command
00001926  103C 000E               1334      MOVE.B      #14,D0
0000192A  43F8 0056               1335      LEA         pr_SUB,A1
0000192E  4E4F                    1336      TRAP        #15
00001930                          1337      ** Print size
00001930  43F8 000A               1338      LEA         pr_LONG,A1
00001934  4E4F                    1339      TRAP        #15
00001936                          1340  
00001936  6000 0002               1341      BRA         print_add_to_reg
0000193A                          1342  
0000193A                          1343  print_add_to_reg
0000193A                          1344      ** Print space
0000193A  43F8 0000               1345      LEA         pr_space,A1
0000193E  4E4F                    1346      TRAP        #15
00001940                          1347      ** Print source
00001940  1002                    1348      MOVE.B      D2,D0
00001942  0200 003F               1349      ANDI.B      #%00111111,D0
00001946  4EB8 1672               1350      JSR         EADecoder
0000194A                          1351      ** Add comma
0000194A  103C 000E               1352      MOVE.B      #14,D0
0000194E  43F8 0002               1353      LEA         pr_comma,A1
00001952  4E4F                    1354      TRAP        #15
00001954                          1355      ** Print destination
00001954  3002                    1356      MOVE.W      D2,D0
00001956  0240 0E00               1357      ANDI.W      #%0000111000000000,D0
0000195A  EC48                    1358      LSR.W       #6,D0
0000195C  4EB8 165A               1359      JSR         EADecoder_left
00001960                          1360  
00001960  6000 F762               1361      BRA         opdec_return
00001964                          1362  
00001964                          1363  MATCH_ADD_TO_EA_B
00001964                          1364      ** Move command size into D1
00001964  123C 0002               1365      MOVE.B      #2,D1
00001968                          1366      ** Print command
00001968  103C 000E               1367      MOVE.B      #14,D0
0000196C  43F8 0048               1368      LEA         pr_ADD,A1
00001970  4E4F                    1369      TRAP        #15
00001972                          1370      ** Print size
00001972  43F8 0004               1371      LEA         pr_BYTE,A1
00001976  4E4F                    1372      TRAP        #15
00001978                          1373  
00001978  6000 007A               1374      BRA         print_add_to_ea
0000197C                          1375  
0000197C                          1376  MATCH_ADD_TO_EA_W
0000197C                          1377      ** Move command size into D1
0000197C  123C 0002               1378      MOVE.B      #2,D1
00001980                          1379      ** Print command
00001980  103C 000E               1380      MOVE.B      #14,D0
00001984  43F8 0048               1381      LEA         pr_ADD,A1
00001988  4E4F                    1382      TRAP        #15
0000198A                          1383      ** Print size
0000198A  43F8 0007               1384      LEA         pr_WORD,A1
0000198E  4E4F                    1385      TRAP        #15
00001990                          1386  
00001990  6000 0062               1387      BRA         print_add_to_ea
00001994                          1388  
00001994                          1389  MATCH_ADD_TO_EA_L
00001994                          1390      ** Move command size into D1
00001994  123C 0004               1391      MOVE.B      #4,D1
00001998                          1392      ** Print command
00001998  103C 000E               1393      MOVE.B      #14,D0
0000199C  43F8 0048               1394      LEA         pr_ADD,A1
000019A0  4E4F                    1395      TRAP        #15
000019A2                          1396      ** Print size
000019A2  43F8 000A               1397      LEA         pr_LONG,A1
000019A6  4E4F                    1398      TRAP        #15
000019A8                          1399  
000019A8  6000 004A               1400      BRA         print_add_to_ea
000019AC                          1401  
000019AC                          1402  MATCH_SUB_TO_EA_B
000019AC                          1403      ** Move command size into D1
000019AC  123C 0002               1404      MOVE.B      #2,D1
000019B0                          1405      ** Print command
000019B0  103C 000E               1406      MOVE.B      #14,D0
000019B4  43F8 0056               1407      LEA         pr_SUB,A1
000019B8  4E4F                    1408      TRAP        #15
000019BA                          1409      ** Print size
000019BA  43F8 0004               1410      LEA         pr_BYTE,A1
000019BE  4E4F                    1411      TRAP        #15
000019C0                          1412  
000019C0  6000 0032               1413      BRA         print_add_to_ea
000019C4                          1414  
000019C4                          1415  MATCH_SUB_TO_EA_W
000019C4                          1416      ** Move command size into D1
000019C4  123C 0002               1417      MOVE.B      #2,D1
000019C8                          1418      ** Print command
000019C8  103C 000E               1419      MOVE.B      #14,D0
000019CC  43F8 0056               1420      LEA         pr_SUB,A1
000019D0  4E4F                    1421      TRAP        #15
000019D2                          1422      ** Print size
000019D2  43F8 0007               1423      LEA         pr_WORD,A1
000019D6  4E4F                    1424      TRAP        #15
000019D8                          1425  
000019D8  6000 001A               1426      BRA         print_add_to_ea
000019DC                          1427  
000019DC                          1428  MATCH_SUB_TO_EA_L
000019DC                          1429      ** Move command size into D1
000019DC  123C 0004               1430      MOVE.B      #4,D1
000019E0                          1431      ** Print command
000019E0  103C 000E               1432      MOVE.B      #14,D0
000019E4  43F8 0056               1433      LEA         pr_SUB,A1
000019E8  4E4F                    1434      TRAP        #15
000019EA                          1435      ** Print size
000019EA  43F8 000A               1436      LEA         pr_LONG,A1
000019EE  4E4F                    1437      TRAP        #15
000019F0                          1438  
000019F0  6000 0002               1439      BRA         print_add_to_ea
000019F4                          1440  
000019F4                          1441  print_add_to_ea
000019F4                          1442      ** Print space
000019F4  43F8 0000               1443      LEA         pr_space,A1
000019F8  4E4F                    1444      TRAP        #15
000019FA                          1445      ** Print Source
000019FA  3002                    1446      MOVE.W      D2,D0
000019FC  0240 0E00               1447      ANDI.W      #%0000111000000000,D0
00001A00  EC48                    1448      LSR.W       #6,D0
00001A02  4EB8 165A               1449      JSR         EADecoder_left
00001A06                          1450      ** Add comma
00001A06  103C 000E               1451      MOVE.B      #14,D0
00001A0A  43F8 0002               1452      LEA         pr_comma,A1
00001A0E  4E4F                    1453      TRAP        #15
00001A10                          1454      ** Print source
00001A10  1002                    1455      MOVE.B      D2,D0
00001A12  0200 003F               1456      ANDI.B      #%00111111,D0
00001A16  4EB8 1672               1457      JSR         EADecoder
00001A1A                          1458  
00001A1A  6000 F6A8               1459      BRA         opdec_return
00001A1E                          1460  
00001A1E                          1461  
00001A1E                          1462  MATCH_ADDQ_B
00001A1E                          1463      ** Move command size into D1
00001A1E  123C 0002               1464      MOVE.B      #2,D1
00001A22                          1465      ** Print command
00001A22  103C 000E               1466      MOVE.B      #14,D0
00001A26  43F8 0051               1467      LEA         pr_ADDQ,A1
00001A2A  4E4F                    1468      TRAP        #15
00001A2C                          1469      ** Print size
00001A2C  43F8 0004               1470      LEA         pr_BYTE,A1
00001A30  4E4F                    1471      TRAP        #15
00001A32                          1472  
00001A32  6000 0032               1473      BRA         print_addq
00001A36                          1474  
00001A36                          1475  MATCH_ADDQ_W
00001A36                          1476      ** Move command size into D1
00001A36  123C 0002               1477      MOVE.B      #2,D1
00001A3A                          1478      ** Print command
00001A3A  103C 000E               1479      MOVE.B      #14,D0
00001A3E  43F8 0051               1480      LEA         pr_ADDQ,A1
00001A42  4E4F                    1481      TRAP        #15
00001A44                          1482      ** Print size
00001A44  43F8 0007               1483      LEA         pr_WORD,A1
00001A48  4E4F                    1484      TRAP        #15
00001A4A                          1485  
00001A4A  6000 001A               1486      BRA         print_addq
00001A4E                          1487  
00001A4E                          1488  MATCH_ADDQ_L
00001A4E                          1489      ** Move command size into D1
00001A4E  123C 0004               1490      MOVE.B      #4,D1
00001A52                          1491      ** Print command
00001A52  103C 000E               1492      MOVE.B      #14,D0
00001A56  43F8 0051               1493      LEA         pr_ADDQ,A1
00001A5A  4E4F                    1494      TRAP        #15
00001A5C                          1495      ** Print size
00001A5C  43F8 000A               1496      LEA         pr_LONG,A1
00001A60  4E4F                    1497      TRAP        #15
00001A62                          1498  
00001A62  6000 0002               1499      BRA         print_addq
00001A66                          1500  
00001A66                          1501  print_addq
00001A66                          1502      ** Print space
00001A66  43F8 0000               1503      LEA         pr_space,A1
00001A6A  4E4F                    1504      TRAP        #15
00001A6C                          1505      ** Print hash
00001A6C  43F8 000D               1506      LEA         pr_hash,A1
00001A70  4E4F                    1507      TRAP        #15
00001A72                          1508      ** Print Immediate data
00001A72  3602                    1509      MOVE.W      D2,D3 * Temporarily move op data
00001A74  3202                    1510      MOVE.W      D2,D1
00001A76  0241 0E00               1511      ANDI.W      #%0000111000000000,D1
00001A7A  EC49                    1512      LSR.W       #6,D1
00001A7C  E649                    1513      LSR.W       #3,D1
00001A7E  143C 0010               1514      MOVE.B      #16,D2
00001A82  303C 000F               1515      MOVE.W      #15,D0
00001A86  4E4F                    1516      TRAP        #15
00001A88                          1517  
00001A88  3403                    1518      MOVE.W      D3,D2 * Move op data back
00001A8A                          1519  
00001A8A                          1520      ** Add comma
00001A8A  103C 000E               1521      MOVE.B      #14,D0
00001A8E  43F8 0002               1522      LEA         pr_comma,A1
00001A92  4E4F                    1523      TRAP        #15
00001A94                          1524      ** Decode right side ea
00001A94  1002                    1525      MOVE.B      D2,D0
00001A96  0200 003F               1526      ANDI.B      #%00111111,D0
00001A9A  4EB8 1672               1527      JSR         EADecoder
00001A9E                          1528  
00001A9E  6000 F624               1529      BRA         opdec_return
00001AA2                          1530  
00001AA2                          1531  
00001AA2                          1532  MATCH_DIVU_W
00001AA2                          1533      ** Move command size into D1
00001AA2  123C 0002               1534      MOVE.B      #2,D1
00001AA6                          1535      ** Print command
00001AA6  103C 000E               1536      MOVE.B      #14,D0
00001AAA  43F8 005A               1537      LEA         pr_DIVU,A1
00001AAE  4E4F                    1538      TRAP        #15
00001AB0                          1539      ** Print size
00001AB0  43F8 0007               1540      LEA         pr_WORD,A1
00001AB4  4E4F                    1541      TRAP        #15
00001AB6                          1542      ** Print space
00001AB6  43F8 0000               1543      LEA         pr_space,A1
00001ABA  4E4F                    1544      TRAP        #15
00001ABC                          1545      ** Decode right side ea
00001ABC  1002                    1546      MOVE.B      D2,D0
00001ABE  0200 003F               1547      ANDI.B      #%00111111,D0
00001AC2  4EB8 1672               1548      JSR         EADecoder
00001AC6                          1549      ** Add comma
00001AC6  103C 000E               1550      MOVE.B      #14,D0
00001ACA  43F8 0002               1551      LEA         pr_comma,A1
00001ACE  4E4F                    1552      TRAP        #15
00001AD0                          1553      ** Decode left side ea
00001AD0  3002                    1554      MOVE.W      D2,D0
00001AD2  0240 0FC0               1555      ANDI.W      #%0000111111000000,D0
00001AD6  EC88                    1556      LSR.L       #6,D0
00001AD8  4EB8 165A               1557      JSR         EADecoder_left
00001ADC                          1558  
00001ADC  6000 F5E6               1559      BRA         opdec_return
00001AE0                          1560  
00001AE0                          1561  
00001AE0                          1562  -------------------- end include --------------------
00001AE0                          1563                  INCLUDE 'spencer_opcodes.x68'
00001AE0  =0000000E               1564  SHIFT       EQU %1110
00001AE0  =00000003               1565  RO          EQU %11
00001AE0  =00000000               1566  AS          EQU %00
00001AE0  =00000001               1567  LS          EQU %01
00001AE0  =00000000               1568  R           EQU %0
00001AE0  =00000001               1569  L           EQU %1
00001AE0  =00000001               1570  SHIFT_register  EQU %1
00001AE0  =00000000               1571  SHIFT_immed     EQU %0
00001AE0  =00000000               1572  SHIFT_BYTE  EQU %00
00001AE0  =00000001               1573  SHIFT_WORD  EQU %01
00001AE0  =00000003               1574  SHIFT_LONG  EQU %11
00001AE0                          1575  
00001AE0                          1576  CHECK_SHIFT
00001AE0  6100 010E               1577      BSR     Get_Count_Register_Val          * register 3
00001AE4  6100 011E               1578      BSR     Get_Size                        * register 4
00001AE8  6100 012E               1579      BSR     Get_Direction                   * register 5
00001AEC  6100 013E               1580      BSR     Get_Is_Register_Or_Immediate    * register 6
00001AF0  6100 0152               1581      BSR     Get_Shift_Opcode                * register 7
00001AF4                          1582  
00001AF4  6100 0024               1583      BSR     PrintShiftData
00001AF8                          1584  
00001AF8  6100 000C               1585      BSR     getShiftDestReg
00001AFC                          1586  
00001AFC  103C 0003               1587      MOVE.B  #3,D0
00001B00  4E4F                    1588      TRAP    #15
00001B02                          1589  
00001B02  6000 F5C0               1590      BRA         opdec_return
00001B06                          1591  
00001B06                          1592  getShiftDestReg
00001B06                          1593  
00001B06  48A7 2000               1594      MOVEM.W     D2, -(SP)
00001B0A                          1595  
00001B0A  123C 000D               1596      MOVE.B      #13,D1
00001B0E  E3AA                    1597      LSL.L       D1,D2
00001B10  E2AA                    1598      LSR.L       D1,D2
00001B12  1202                    1599      MOVE.B      D2,D1
00001B14                          1600  
00001B14  4C9F 0004               1601      MOVEM.W     (SP)+,D2
00001B18  4E75                    1602      RTS
00001B1A                          1603  
00001B1A                          1604  
00001B1A                          1605  PrintShiftData
00001B1A                          1606  
00001B1A  BE3C 0003               1607      CMP.B   #RO,D7
00001B1E  6700 0012               1608      BEQ     printRotate
00001B22  BE3C 0000               1609      CMP.B   #AS,D7
00001B26  6700 0014               1610      BEQ     printArithShift
00001B2A  BE3C 0001               1611      CMP.B   #LS,D7
00001B2E  6700 0016               1612      BEQ     printLogicShift
00001B32                          1613  
00001B32                          1614  printRotate
00001B32  43F8 0061               1615      LEA         pr_SHIFT_RO,A1
00001B36  4EF9 00001B50           1616      JMP         executeShiftOpcodePrint
00001B3C                          1617  printArithShift
00001B3C  43F8 0064               1618      LEA         pr_SHIFT_AS,A1
00001B40  4EF9 00001B50           1619      JMP         executeShiftOpcodePrint
00001B46                          1620  printLogicShift
00001B46  43F8 0067               1621      LEA         pr_SHIFT_LS,A1
00001B4A  4EF9 00001B50           1622      JMP         executeShiftOpcodePrint
00001B50                          1623  executeShiftOpcodePrint
00001B50  6100 0148               1624      BSR         PrintString
00001B54                          1625  
00001B54  BA3C 0000               1626      CMP.B   #R,D5
00001B58  6700 000A               1627      BEQ     printShiftRight
00001B5C  BA3C 0001               1628      CMP.B   #L,D5
00001B60  6700 000C               1629      BEQ     printShiftLeft
00001B64                          1630  
00001B64                          1631  printShiftRight
00001B64  43F8 006C               1632      LEA         pr_SHIFT_R,A1
00001B68  4EF9 00001B78           1633      JMP         executePrintShiftdirection
00001B6E                          1634  printShiftLeft
00001B6E  43F8 006A               1635      LEA         pr_SHIFT_L,A1
00001B72  4EF9 00001B78           1636      JMP         executePrintShiftdirection
00001B78                          1637  executePrintShiftdirection
00001B78  6100 0120               1638      BSR         PrintString
00001B7C                          1639  
00001B7C  B83C 0000               1640      CMP.B   #SHIFT_BYTE,D4
00001B80  6700 0012               1641      BEQ     printShiftByte
00001B84  B83C 0001               1642      CMP.B   #SHIFT_WORD,D4
00001B88  6700 0014               1643      BEQ     printShiftWord
00001B8C  B83C 0003               1644      CMP.B   #SHIFT_LONG,D4
00001B90  6700 0016               1645      BEQ     printShiftLong
00001B94                          1646  
00001B94                          1647  printShiftByte
00001B94  43F8 0004               1648      LEA     pr_BYTE,A1
00001B98  4EF9 00001BB2           1649      JMP     executePrintShiftSize
00001B9E                          1650  printShiftWord
00001B9E  43F8 0007               1651      LEA     pr_WORD,A1
00001BA2  4EF9 00001BB2           1652      JMP     executePrintShiftSize
00001BA8                          1653  printShiftLong
00001BA8  43F8 000A               1654      LEA     pr_LONG,A1
00001BAC  4EF9 00001BB2           1655      JMP     executePrintShiftSize
00001BB2                          1656  executePrintShiftSize
00001BB2  6100 00E6               1657      BSR         PrintString
00001BB6  43F8 0000               1658      LEA     pr_space,A1
00001BBA  6100 00DE               1659      BSR     PrintString
00001BBE                          1660  
00001BBE  BC3C 0001               1661      CMP.B   #SHIFT_register,D6
00001BC2  6700 000A               1662      BEQ     printShiftReg
00001BC6  BC3C 0000               1663      CMP.B   #SHIFT_immed,D6
00001BCA  6700 000A               1664      BEQ     printShift
00001BCE                          1665  
00001BCE                          1666  printShiftReg
00001BCE  43F8 005F               1667      LEA     pr_reg,A1
00001BD2  6100 00C6               1668      BSR     PrintString
00001BD6                          1669  printShift
00001BD6  1203                    1670      MOVE.B  D3,D1
00001BD8  103C 0003               1671      MOVE.B  #3,D0
00001BDC  4E4F                    1672      TRAP    #15
00001BDE                          1673  
00001BDE  43F8 0002               1674      LEA     pr_comma,A1
00001BE2  6100 00B6               1675      BSR     PrintString
00001BE6  43F8 005F               1676      LEA     pr_reg,A1
00001BEA  6100 00AE               1677      BSR     PrintString
00001BEE  4E75                    1678      RTS
00001BF0                          1679  
00001BF0                          1680  
00001BF0                          1681  Get_Count_Register_Val
00001BF0                          1682  
00001BF0  48A7 2000               1683      MOVEM.W     D2, -(SP)
00001BF4                          1684  
00001BF4  123C 000D               1685      MOVE.B      #13,D1
00001BF8  E98A                    1686      LSL.L       #4,D2
00001BFA  E2AA                    1687      LSR.L       D1,D2
00001BFC  1602                    1688      MOVE.B      D2,D3
00001BFE                          1689  
00001BFE  4C9F 0004               1690      MOVEM.W     (SP)+,D2
00001C02  4E75                    1691      RTS
00001C04                          1692  
00001C04                          1693  Get_Size
00001C04                          1694  
00001C04  48A7 2000               1695      MOVEM.W     D2, -(SP)
00001C08                          1696  
00001C08  123C 000E               1697      MOVE.B      #14,D1
00001C0C  E18A                    1698      LSL.L       #8,D2
00001C0E  E2AA                    1699      LSR.L       D1,D2
00001C10  1802                    1700      MOVE.B      D2,D4
00001C12                          1701  
00001C12  4C9F 0004               1702      MOVEM.W     (SP)+,D2
00001C16  4E75                    1703      RTS
00001C18                          1704  Get_Direction
00001C18                          1705  
00001C18  48A7 2000               1706      MOVEM.W     D2, -(SP)
00001C1C                          1707  
00001C1C  123C 000F               1708      MOVE.B      #15,D1
00001C20  EF8A                    1709      LSL.L       #7,D2
00001C22  E2AA                    1710      LSR.L       D1,D2
00001C24  1A02                    1711      MOVE.B      D2,D5
00001C26                          1712  
00001C26  4C9F 0004               1713      MOVEM.W     (SP)+,D2
00001C2A  4E75                    1714      RTS
00001C2C                          1715  Get_Is_Register_Or_Immediate
00001C2C                          1716  
00001C2C  48A7 2000               1717      MOVEM.W     D2, -(SP)
00001C30                          1718  
00001C30  123C 000A               1719      MOVE.B      #10,D1
00001C34  E3AA                    1720      LSL.L       D1,D2
00001C36  123C 000F               1721      MOVE.B      #15,D1
00001C3A  E2AA                    1722      LSR.L       D1,D2
00001C3C                          1723  
00001C3C  1C02                    1724      MOVE.B      D2,D6
00001C3E                          1725  
00001C3E  4C9F 0004               1726      MOVEM.W     (SP)+,D2
00001C42  4E75                    1727      RTS
00001C44                          1728  
00001C44                          1729  Get_Shift_Opcode
00001C44                          1730  
00001C44  48A7 2000               1731      MOVEM.W     D2, -(SP)
00001C48                          1732  
00001C48  123C 000B               1733      MOVE.B      #11,D1
00001C4C  E3AA                    1734      LSL.L       D1,D2
00001C4E  123C 000E               1735      MOVE.B      #14,D1
00001C52  E2AA                    1736      LSR.L       D1,D2
00001C54                          1737  
00001C54  1E02                    1738      MOVE.B      D2,D7
00001C56                          1739  
00001C56  4C9F 0004               1740      MOVEM.W     (SP)+,D2
00001C5A  4E75                    1741      RTS
00001C5C                          1742  
00001C5C                          1743  
00001C5C                          1744  MATCH_LSL
00001C5C  3A02                    1745      MOVE.W      D2,D5       *REMOVE
00001C5E                          1746  MATCH_LSR
00001C5E  3A02                    1747      MOVE.W      D2,D5       *REMOVE
00001C60                          1748  MATCH_ASR
00001C60  3A02                    1749      MOVE.W      D2,D5       *REMOVE
00001C62                          1750  MATCH_ASL
00001C62  3A02                    1751      MOVE.W      D2,D5       *REMOVE
00001C64                          1752  MATCH_ROL
00001C64  3A02                    1753      MOVE.W      D2,D5       *REMOVE
00001C66                          1754  MATCH_ROR
00001C66  3A02                    1755      MOVE.W      D2,D5       *REMOVE
00001C68                          1756  
00001C68                          1757  Get_BCC_Displacement_8bit
00001C68                          1758  
00001C68  4246                    1759      CLR     D6
00001C6A  1C02                    1760      MOVE.B  D2,D6
00001C6C  4E75                    1761      RTS
00001C6E                          1762  Get_BCC_Displacement_16bit
00001C6E                          1763  
00001C6E  4246                    1764      CLR     D6
00001C70  3C18                    1765      MOVE.W  (A0)+,D6
00001C72  4E75                    1766      RTS
00001C74                          1767  Get_BCC_Displacement_32bit
00001C74                          1768  
00001C74  4246                    1769      CLR     D6
00001C76  2C18                    1770      MOVE.L  (A0)+,D6
00001C78  4E75                    1771      RTS
00001C7A                          1772  Get_Current_Address
00001C7A                          1773  
00001C7A  4247                    1774      CLR     D7
00001C7C  2E08                    1775      MOVE.L      A0,D7
00001C7E  5587                    1776      SUBI.L      #2,D7
00001C80  4E75                    1777      RTS
00001C82                          1778  Get_BCC_Destination_Address
00001C82                          1779  
00001C82  9E86                    1780      SUB.L   D6,D7
00001C84  4E75                    1781      RTS
00001C86                          1782  
00001C86                          1783  PrintHex
00001C86                          1784  
00001C86  48A7 2000               1785      MOVEM.W     D2, -(SP)
00001C8A                          1786  
00001C8A  103C 000F               1787      MOVE.B      #15,D0
00001C8E  143C 0010               1788      MOVE.B      #16,D2 * print base 16
00001C92  4E4F                    1789      TRAP        #15
00001C94                          1790  
00001C94  4C9F 0004               1791      MOVEM.W     (SP)+,D2
00001C98  4E75                    1792      RTS
00001C9A                          1793  PrintString
00001C9A  103C 000E               1794      MOVE.B      #14,D0
00001C9E  4E4F                    1795      TRAP        #15
00001CA0  4E75                    1796      RTS
00001CA2                          1797  PrintSizeByte
00001CA2  103C 000E               1798      MOVE.B      #14,D0
00001CA6  43F8 0004               1799      LEA         pr_BYTE,A1
00001CAA  4E4F                    1800      TRAP        #15
00001CAC  4E75                    1801      RTS
00001CAE                          1802  PrintSizeWord
00001CAE  103C 000E               1803      MOVE.B      #14,D0
00001CB2  43F8 0007               1804      LEA         pr_WORD,A1
00001CB6  4E4F                    1805      TRAP        #15
00001CB8  4E75                    1806      RTS
00001CBA                          1807  PrintSizeLong
00001CBA  103C 000E               1808      MOVE.B      #14,D0
00001CBE  43F8 000A               1809      LEA         pr_LONG,A1
00001CC2  4E4F                    1810      TRAP        #15
00001CC4  4E75                    1811      RTS
00001CC6                          1812  
00001CC6                          1813  
00001CC6                          1814  MATCH_CC_T_8
00001CC6  3A02                    1815      MOVE.W      D2,D5       *REMOVE
00001CC8                          1816  MATCH_CC_T_16
00001CC8  3A02                    1817      MOVE.W      D2,D5       *REMOVE
00001CCA                          1818  MATCH_CC_T_32
00001CCA  3A02                    1819      MOVE.W      D2,D5       *REMOVE
00001CCC                          1820  MATCH_CC_F_8
00001CCC  3A02                    1821      MOVE.W      D2,D5       *REMOVE
00001CCE                          1822  MATCH_CC_F_16
00001CCE  3A02                    1823      MOVE.W      D2,D5       *REMOVE
00001CD0                          1824  MATCH_CC_F_32
00001CD0  3A02                    1825      MOVE.W      D2,D5       *REMOVE
00001CD2                          1826  MATCH_CC_HI_8
00001CD2                          1827      ** print opcode **
00001CD2  43F8 0088               1828      LEA         pr_BCC_HI,A1
00001CD6  61C2                    1829      BSR         PrintString
00001CD8                          1830  
00001CD8  61C8                    1831      BSR         PrintSizeBYTE
00001CDA  43F8 0000               1832      LEA         pr_space,A1
00001CDE  61BA                    1833      BSR         PrintString
00001CE0                          1834  
00001CE0                          1835      ** print address **
00001CE0  6186                    1836      BSR         Get_BCC_Displacement_8bit
00001CE2  6196                    1837      BSR         Get_Current_Address
00001CE4  619C                    1838      BSR         Get_BCC_Destination_Address
00001CE6  2207                    1839      MOVE.L      D7,D1
00001CE8  619C                    1840      BSR         PrintHex
00001CEA                          1841  
00001CEA  6000 F3D8               1842      BRA         opdec_return
00001CEE                          1843  
00001CEE                          1844  MATCH_CC_HI_16
00001CEE                          1845      ** print opcode **
00001CEE  43F8 0088               1846      LEA         pr_BCC_HI,A1
00001CF2  61A6                    1847      BSR         PrintString
00001CF4                          1848  
00001CF4  61B8                    1849      BSR         PrintSizeWORD
00001CF6  43F8 0000               1850      LEA         pr_space,A1
00001CFA  619E                    1851      BSR         PrintString
00001CFC                          1852  
00001CFC                          1853      ** print address **
00001CFC  6100 FF70               1854      BSR         Get_BCC_Displacement_16bit
00001D00  6100 FF78               1855      BSR         Get_Current_Address
00001D04  6100 FF7C               1856      BSR         Get_BCC_Destination_Address
00001D08  2207                    1857      MOVE.L      D7,D1
00001D0A  6100 FF7A               1858      BSR         PrintHex
00001D0E                          1859  
00001D0E  6000 F3B4               1860      BRA         opdec_return
00001D12                          1861  MATCH_CC_HI_32
00001D12                          1862      ** print opcode **
00001D12  43F8 0088               1863      LEA         pr_BCC_HI,A1
00001D16  6182                    1864      BSR         PrintString
00001D18                          1865  
00001D18  61A0                    1866      BSR         PrintSizeLONG
00001D1A  43F8 0000               1867      LEA         pr_space,A1
00001D1E  6100 FF7A               1868      BSR         PrintString
00001D22                          1869  
00001D22                          1870      ** print address **
00001D22  6100 FF50               1871      BSR         Get_BCC_Displacement_32bit
00001D26  6100 FF52               1872      BSR         Get_Current_Address
00001D2A  6100 FF56               1873      BSR         Get_BCC_Destination_Address
00001D2E  2207                    1874      MOVE.L      D7,D1
00001D30  6100 FF54               1875      BSR         PrintHex
00001D34                          1876  
00001D34  6000 F38E               1877      BRA         opdec_return
00001D38                          1878  MATCH_CC_LS_8
00001D38                          1879      ** print opcode **
00001D38  43F8 0090               1880      LEA         pr_BCC_LS,A1
00001D3C  6100 FF5C               1881      BSR         PrintString
00001D40                          1882  
00001D40  6100 FF60               1883      BSR         PrintSizeBYTE
00001D44  43F8 0000               1884      LEA         pr_space,A1
00001D48  6100 FF50               1885      BSR         PrintString
00001D4C                          1886  
00001D4C                          1887      ** print address **
00001D4C  6100 FF1A               1888      BSR         Get_BCC_Displacement_8bit
00001D50  6100 FF28               1889      BSR         Get_Current_Address
00001D54  6100 FF2C               1890      BSR         Get_BCC_Destination_Address
00001D58  2207                    1891      MOVE.L      D7,D1
00001D5A  6100 FF2A               1892      BSR         PrintHex
00001D5E                          1893  
00001D5E  6000 F364               1894      BRA         opdec_return
00001D62                          1895  MATCH_CC_LS_16
00001D62                          1896      ** print opcode **
00001D62  43F8 0090               1897      LEA         pr_BCC_LS,A1
00001D66  6100 FF32               1898      BSR         PrintString
00001D6A                          1899  
00001D6A  6100 FF42               1900      BSR         PrintSizeWORD
00001D6E  43F8 0000               1901      LEA         pr_space,A1
00001D72  6100 FF26               1902      BSR         PrintString
00001D76                          1903  
00001D76                          1904      ** print address **
00001D76  6100 FEF6               1905      BSR         Get_BCC_Displacement_16bit
00001D7A  6100 FEFE               1906      BSR         Get_Current_Address
00001D7E  6100 FF02               1907      BSR         Get_BCC_Destination_Address
00001D82  2207                    1908      MOVE.L      D7,D1
00001D84  6100 FF00               1909      BSR         PrintHex
00001D88                          1910  
00001D88  6000 F33A               1911      BRA         opdec_return
00001D8C                          1912  
00001D8C                          1913  MATCH_CC_LS_32
00001D8C                          1914      ** print opcode **
00001D8C  43F8 0090               1915      LEA         pr_BCC_LS,A1
00001D90  6100 FF08               1916      BSR         PrintString
00001D94                          1917  
00001D94  6100 FF24               1918      BSR         PrintSizeLONG
00001D98  43F8 0000               1919      LEA         pr_space,A1
00001D9C  6100 FEFC               1920      BSR         PrintString
00001DA0                          1921  
00001DA0                          1922      ** print address **
00001DA0  6100 FED2               1923      BSR         Get_BCC_Displacement_32bit
00001DA4  6100 FED4               1924      BSR         Get_Current_Address
00001DA8  6100 FED8               1925      BSR         Get_BCC_Destination_Address
00001DAC  2207                    1926      MOVE.L      D7,D1
00001DAE  6100 FED6               1927      BSR         PrintHex
00001DB2                          1928  
00001DB2  6000 F310               1929      BRA         opdec_return
00001DB6                          1930  MATCH_CC_CC_8
00001DB6                          1931  
00001DB6                          1932      ** print opcode **
00001DB6  43F8 0074               1933      LEA         pr_BCC_CC,A1
00001DBA  6100 FEDE               1934      BSR         PrintString
00001DBE                          1935  
00001DBE  6100 FEE2               1936      BSR         PrintSizeBYTE
00001DC2  43F8 0000               1937      LEA         pr_space,A1
00001DC6  6100 FED2               1938      BSR         PrintString
00001DCA                          1939  
00001DCA                          1940      ** print address **
00001DCA  6100 FE9C               1941      BSR         Get_BCC_Displacement_8bit
00001DCE  6100 FEAA               1942      BSR         Get_Current_Address
00001DD2  6100 FEAE               1943      BSR         Get_BCC_Destination_Address
00001DD6  2207                    1944      MOVE.L      D7,D1
00001DD8  6100 FEAC               1945      BSR         PrintHex
00001DDC                          1946  
00001DDC  6000 F2E6               1947      BRA         opdec_return
00001DE0                          1948  
00001DE0                          1949  MATCH_CC_CC_16
00001DE0                          1950      ** print opcode **
00001DE0  43F8 0074               1951      LEA         pr_BCC_CC,A1
00001DE4  6100 FEB4               1952      BSR         PrintString
00001DE8                          1953  
00001DE8  6100 FEC4               1954      BSR         PrintSizeWORD
00001DEC  43F8 0000               1955      LEA         pr_space,A1
00001DF0  6100 FEA8               1956      BSR         PrintString
00001DF4                          1957  
00001DF4                          1958      ** print address **
00001DF4  6100 FE78               1959      BSR         Get_BCC_Displacement_16bit
00001DF8  6100 FE80               1960      BSR         Get_Current_Address
00001DFC  6100 FE84               1961      BSR         Get_BCC_Destination_Address
00001E00  2207                    1962      MOVE.L      D7,D1
00001E02  6100 FE82               1963      BSR         PrintHex
00001E06                          1964  
00001E06  6000 F2BC               1965      BRA         opdec_return
00001E0A                          1966  MATCH_CC_CC_32
00001E0A                          1967      ** print opcode **
00001E0A  43F8 0074               1968      LEA         pr_BCC_CC,A1
00001E0E  6100 FE8A               1969      BSR         PrintString
00001E12                          1970  
00001E12  6100 FEA6               1971      BSR         PrintSizeLONG
00001E16  43F8 0000               1972      LEA         pr_space,A1
00001E1A  6100 FE7E               1973      BSR         PrintString
00001E1E                          1974  
00001E1E                          1975      ** print address **
00001E1E  6100 FE54               1976      BSR         Get_BCC_Displacement_32bit
00001E22  6100 FE56               1977      BSR         Get_Current_Address
00001E26  6100 FE5A               1978      BSR         Get_BCC_Destination_Address
00001E2A  2207                    1979      MOVE.L      D7,D1
00001E2C  6100 FE58               1980      BSR         PrintHex
00001E30                          1981  
00001E30  6000 F292               1982      BRA         opdec_return
00001E34                          1983  MATCH_CC_CS_8
00001E34                          1984      ** print opcode **
00001E34  43F8 0078               1985      LEA         pr_BCC_CS,A1
00001E38  6100 FE60               1986      BSR         PrintString
00001E3C                          1987  
00001E3C  6100 FE64               1988      BSR         PrintSizeBYTE
00001E40  43F8 0000               1989      LEA         pr_space,A1
00001E44  6100 FE54               1990      BSR         PrintString
00001E48                          1991  
00001E48                          1992      ** print address **
00001E48  6100 FE1E               1993      BSR         Get_BCC_Displacement_8bit
00001E4C  6100 FE2C               1994      BSR         Get_Current_Address
00001E50  6100 FE30               1995      BSR         Get_BCC_Destination_Address
00001E54  2207                    1996      MOVE.L      D7,D1
00001E56  6100 FE2E               1997      BSR         PrintHex
00001E5A                          1998  
00001E5A  6000 F268               1999      BRA         opdec_return
00001E5E                          2000  MATCH_CC_CS_16
00001E5E                          2001      ** print opcode **
00001E5E  43F8 0078               2002      LEA         pr_BCC_CS,A1
00001E62  6100 FE36               2003      BSR         PrintString
00001E66                          2004  
00001E66  6100 FE46               2005      BSR         PrintSizeWORD
00001E6A  43F8 0000               2006      LEA         pr_space,A1
00001E6E  6100 FE2A               2007      BSR         PrintString
00001E72                          2008  
00001E72                          2009      ** print address **
00001E72  6100 FDFA               2010      BSR         Get_BCC_Displacement_16bit
00001E76  6100 FE02               2011      BSR         Get_Current_Address
00001E7A  6100 FE06               2012      BSR         Get_BCC_Destination_Address
00001E7E  2207                    2013      MOVE.L      D7,D1
00001E80  6100 FE04               2014      BSR         PrintHex
00001E84                          2015  
00001E84  6000 F23E               2016      BRA         opdec_return
00001E88                          2017  MATCH_CC_CS_32
00001E88                          2018      ** print opcode **
00001E88  43F8 0078               2019      LEA         pr_BCC_CS,A1
00001E8C  6100 FE0C               2020      BSR         PrintString
00001E90                          2021  
00001E90  6100 FE28               2022      BSR         PrintSizeLONG
00001E94  43F8 0000               2023      LEA         pr_space,A1
00001E98  6100 FE00               2024      BSR         PrintString
00001E9C                          2025  
00001E9C                          2026      ** print address **
00001E9C  6100 FDD6               2027      BSR         Get_BCC_Displacement_32bit
00001EA0  6100 FDD8               2028      BSR         Get_Current_Address
00001EA4  6100 FDDC               2029      BSR         Get_BCC_Destination_Address
00001EA8  2207                    2030      MOVE.L      D7,D1
00001EAA  6100 FDDA               2031      BSR         PrintHex
00001EAE                          2032  
00001EAE  6000 F214               2033      BRA         opdec_return
00001EB2                          2034  MATCH_CC_NE_8
00001EB2                          2035      ** print opcode **
00001EB2  43F8 009C               2036      LEA         pr_BCC_NE,A1
00001EB6  6100 FDE2               2037      BSR         PrintString
00001EBA                          2038  
00001EBA  6100 FDE6               2039      BSR         PrintSizeBYTE
00001EBE  43F8 0000               2040      LEA         pr_space,A1
00001EC2  6100 FDD6               2041      BSR         PrintString
00001EC6                          2042  
00001EC6                          2043      ** print address **
00001EC6  6100 FDA0               2044      BSR         Get_BCC_Displacement_8bit
00001ECA  6100 FDAE               2045      BSR         Get_Current_Address
00001ECE  6100 FDB2               2046      BSR         Get_BCC_Destination_Address
00001ED2  2207                    2047      MOVE.L      D7,D1
00001ED4  6100 FDB0               2048      BSR         PrintHex
00001ED8                          2049  
00001ED8  6000 F1EA               2050      BRA         opdec_return
00001EDC                          2051  MATCH_CC_NE_16
00001EDC                          2052      ** print opcode **
00001EDC  43F8 009C               2053      LEA         pr_BCC_NE,A1
00001EE0  6100 FDB8               2054      BSR         PrintString
00001EE4                          2055  
00001EE4  6100 FDC8               2056      BSR         PrintSizeWORD
00001EE8  43F8 0000               2057      LEA         pr_space,A1
00001EEC  6100 FDAC               2058      BSR         PrintString
00001EF0                          2059  
00001EF0                          2060      ** print address **
00001EF0  6100 FD7C               2061      BSR         Get_BCC_Displacement_16bit
00001EF4  6100 FD84               2062      BSR         Get_Current_Address
00001EF8  6100 FD88               2063      BSR         Get_BCC_Destination_Address
00001EFC  2207                    2064      MOVE.L      D7,D1
00001EFE  6100 FD86               2065      BSR         PrintHex
00001F02                          2066  
00001F02  6000 F1C0               2067      BRA         opdec_return
00001F06                          2068  MATCH_CC_NE_32
00001F06                          2069      ** print opcode **
00001F06  43F8 009C               2070      LEA         pr_BCC_NE,A1
00001F0A  6100 FD8E               2071      BSR         PrintString
00001F0E                          2072  
00001F0E  6100 FDAA               2073      BSR         PrintSizeLONG
00001F12  43F8 0000               2074      LEA         pr_space,A1
00001F16  6100 FD82               2075      BSR         PrintString
00001F1A                          2076  
00001F1A                          2077      ** print address **
00001F1A  6100 FD58               2078      BSR         Get_BCC_Displacement_32bit
00001F1E  6100 FD5A               2079      BSR         Get_Current_Address
00001F22  6100 FD5E               2080      BSR         Get_BCC_Destination_Address
00001F26  2207                    2081      MOVE.L      D7,D1
00001F28  6100 FD5C               2082      BSR         PrintHex
00001F2C                          2083  
00001F2C  6000 F196               2084      BRA         opdec_return
00001F30                          2085  MATCH_CC_EQ_8
00001F30                          2086      ** print opcode **
00001F30  43F8 007C               2087      LEA         pr_BCC_EQ,A1
00001F34  6100 FD64               2088      BSR         PrintString
00001F38                          2089  
00001F38  6100 FD68               2090      BSR         PrintSizeBYTE
00001F3C  43F8 0000               2091      LEA         pr_space,A1
00001F40  6100 FD58               2092      BSR         PrintString
00001F44                          2093  
00001F44                          2094      ** print address **
00001F44  6100 FD22               2095      BSR         Get_BCC_Displacement_8bit
00001F48  6100 FD30               2096      BSR         Get_Current_Address
00001F4C  6100 FD34               2097      BSR         Get_BCC_Destination_Address
00001F50  2207                    2098      MOVE.L      D7,D1
00001F52  6100 FD32               2099      BSR         PrintHex
00001F56                          2100  
00001F56  6000 F16C               2101      BRA         opdec_return
00001F5A                          2102  MATCH_CC_EQ_16
00001F5A                          2103      ** print opcode **
00001F5A  43F8 007C               2104      LEA         pr_BCC_EQ,A1
00001F5E  6100 FD3A               2105      BSR         PrintString
00001F62                          2106  
00001F62  6100 FD4A               2107      BSR         PrintSizeWORD
00001F66  43F8 0000               2108      LEA         pr_space,A1
00001F6A  6100 FD2E               2109      BSR         PrintString
00001F6E                          2110  
00001F6E                          2111      ** print address **
00001F6E  6100 FCFE               2112      BSR         Get_BCC_Displacement_16bit
00001F72  6100 FD06               2113      BSR         Get_Current_Address
00001F76  6100 FD0A               2114      BSR         Get_BCC_Destination_Address
00001F7A  2207                    2115      MOVE.L      D7,D1
00001F7C  6100 FD08               2116      BSR         PrintHex
00001F80                          2117  
00001F80  6000 F142               2118      BRA         opdec_return
00001F84                          2119  MATCH_CC_EQ_32
00001F84                          2120      ** print opcode **
00001F84  43F8 007C               2121      LEA         pr_BCC_EQ,A1
00001F88  6100 FD10               2122      BSR         PrintString
00001F8C                          2123  
00001F8C  6100 FD2C               2124      BSR         PrintSizeLONG
00001F90  43F8 0000               2125      LEA         pr_space,A1
00001F94  6100 FD04               2126      BSR         PrintString
00001F98                          2127  
00001F98                          2128      ** print address **
00001F98  6100 FCDA               2129      BSR         Get_BCC_Displacement_32bit
00001F9C  6100 FCDC               2130      BSR         Get_Current_Address
00001FA0  6100 FCE0               2131      BSR         Get_BCC_Destination_Address
00001FA4  2207                    2132      MOVE.L      D7,D1
00001FA6  6100 FCDE               2133      BSR         PrintHex
00001FAA                          2134  
00001FAA  6000 F118               2135      BRA         opdec_return
00001FAE                          2136  MATCH_CC_VC_8
00001FAE                          2137      ** print opcode **
00001FAE  43F8 00A4               2138      LEA         pr_BCC_VC,A1
00001FB2  6100 FCE6               2139      BSR         PrintString
00001FB6                          2140  
00001FB6  6100 FCEA               2141      BSR         PrintSizeBYTE
00001FBA  43F8 0000               2142      LEA         pr_space,A1
00001FBE  6100 FCDA               2143      BSR         PrintString
00001FC2                          2144  
00001FC2                          2145      ** print address **
00001FC2  6100 FCA4               2146      BSR         Get_BCC_Displacement_8bit
00001FC6  6100 FCB2               2147      BSR         Get_Current_Address
00001FCA  6100 FCB6               2148      BSR         Get_BCC_Destination_Address
00001FCE  2207                    2149      MOVE.L      D7,D1
00001FD0  6100 FCB4               2150      BSR         PrintHex
00001FD4                          2151  
00001FD4  6000 F0EE               2152      BRA         opdec_return
00001FD8                          2153  MATCH_CC_VC_16
00001FD8                          2154      ** print opcode **
00001FD8  43F8 00A4               2155      LEA         pr_BCC_VC,A1
00001FDC  6100 FCBC               2156      BSR         PrintString
00001FE0                          2157  
00001FE0  6100 FCCC               2158      BSR         PrintSizeWORD
00001FE4  43F8 0000               2159      LEA         pr_space,A1
00001FE8  6100 FCB0               2160      BSR         PrintString
00001FEC                          2161  
00001FEC                          2162      ** print address **
00001FEC  6100 FC80               2163      BSR         Get_BCC_Displacement_16bit
00001FF0  6100 FC88               2164      BSR         Get_Current_Address
00001FF4  6100 FC8C               2165      BSR         Get_BCC_Destination_Address
00001FF8  2207                    2166      MOVE.L      D7,D1
00001FFA  6100 FC8A               2167      BSR         PrintHex
00001FFE                          2168  
00001FFE  6000 F0C4               2169      BRA         opdec_return
00002002                          2170  MATCH_CC_VC_32
00002002                          2171      ** print opcode **
00002002  43F8 00A4               2172      LEA         pr_BCC_VC,A1
00002006  6100 FC92               2173      BSR         PrintString
0000200A                          2174  
0000200A  6100 FCAE               2175      BSR         PrintSizeLONG
0000200E  43F8 0000               2176      LEA         pr_space,A1
00002012  6100 FC86               2177      BSR         PrintString
00002016                          2178  
00002016                          2179      ** print address **
00002016  6100 FC5C               2180      BSR         Get_BCC_Displacement_32bit
0000201A  6100 FC5E               2181      BSR         Get_Current_Address
0000201E  6100 FC62               2182      BSR         Get_BCC_Destination_Address
00002022  2207                    2183      MOVE.L      D7,D1
00002024  6100 FC60               2184      BSR         PrintHex
00002028                          2185  
00002028  6000 F09A               2186      BRA         opdec_return
0000202C                          2187  MATCH_CC_VS_8
0000202C                          2188      ** print opcode **
0000202C  43F8 00A8               2189      LEA         pr_BCC_VS,A1
00002030  6100 FC68               2190      BSR         PrintString
00002034                          2191  
00002034  6100 FC6C               2192      BSR         PrintSizeBYTE
00002038  43F8 0000               2193      LEA         pr_space,A1
0000203C  6100 FC5C               2194      BSR         PrintString
00002040                          2195  
00002040                          2196      ** print address **
00002040  6100 FC26               2197      BSR         Get_BCC_Displacement_8bit
00002044  6100 FC34               2198      BSR         Get_Current_Address
00002048  6100 FC38               2199      BSR         Get_BCC_Destination_Address
0000204C  2207                    2200      MOVE.L      D7,D1
0000204E  6100 FC36               2201      BSR         PrintHex
00002052                          2202  
00002052  6000 F070               2203      BRA         opdec_return
00002056                          2204  MATCH_CC_VS_16
00002056                          2205      ** print opcode **
00002056  43F8 00A8               2206      LEA         pr_BCC_VS,A1
0000205A  6100 FC3E               2207      BSR         PrintString
0000205E                          2208  
0000205E  6100 FC4E               2209      BSR         PrintSizeWORD
00002062  43F8 0000               2210      LEA         pr_space,A1
00002066  6100 FC32               2211      BSR         PrintString
0000206A                          2212  
0000206A                          2213      ** print address **
0000206A  6100 FC02               2214      BSR         Get_BCC_Displacement_16bit
0000206E  6100 FC0A               2215      BSR         Get_Current_Address
00002072  6100 FC0E               2216      BSR         Get_BCC_Destination_Address
00002076  2207                    2217      MOVE.L      D7,D1
00002078  6100 FC0C               2218      BSR         PrintHex
0000207C                          2219  
0000207C  6000 F046               2220      BRA         opdec_return
00002080                          2221  MATCH_CC_VS_32
00002080                          2222      ** print opcode **
00002080  43F8 00A8               2223      LEA         pr_BCC_VS,A1
00002084  6100 FC14               2224      BSR         PrintString
00002088                          2225  
00002088  6100 FC30               2226      BSR         PrintSizeLONG
0000208C  43F8 0000               2227      LEA         pr_space,A1
00002090  6100 FC08               2228      BSR         PrintString
00002094                          2229  
00002094                          2230      ** print address **
00002094  6100 FBDE               2231      BSR         Get_BCC_Displacement_32bit
00002098  6100 FBE0               2232      BSR         Get_Current_Address
0000209C  6100 FBE4               2233      BSR         Get_BCC_Destination_Address
000020A0  2207                    2234      MOVE.L      D7,D1
000020A2  6100 FBE2               2235      BSR         PrintHex
000020A6                          2236  
000020A6  6000 F01C               2237      BRA         opdec_return
000020AA                          2238  MATCH_CC_PL_8
000020AA                          2239      ** print opcode **
000020AA  43F8 00A0               2240      LEA         pr_BCC_PL,A1
000020AE  6100 FBEA               2241      BSR         PrintString
000020B2                          2242  
000020B2  6100 FBEE               2243      BSR         PrintSizeBYTE
000020B6  43F8 0000               2244      LEA         pr_space,A1
000020BA  6100 FBDE               2245      BSR         PrintString
000020BE                          2246  
000020BE                          2247      ** print address **
000020BE  6100 FBA8               2248      BSR         Get_BCC_Displacement_8bit
000020C2  6100 FBB6               2249      BSR         Get_Current_Address
000020C6  6100 FBBA               2250      BSR         Get_BCC_Destination_Address
000020CA  2207                    2251      MOVE.L      D7,D1
000020CC  6100 FBB8               2252      BSR         PrintHex
000020D0                          2253  
000020D0  6000 EFF2               2254      BRA         opdec_return
000020D4                          2255  MATCH_CC_PL_16
000020D4                          2256      ** print opcode **
000020D4  43F8 00A0               2257      LEA         pr_BCC_PL,A1
000020D8  6100 FBC0               2258      BSR         PrintString
000020DC                          2259  
000020DC  6100 FBD0               2260      BSR         PrintSizeWORD
000020E0  43F8 0000               2261      LEA         pr_space,A1
000020E4  6100 FBB4               2262      BSR         PrintString
000020E8                          2263  
000020E8                          2264      ** print address **
000020E8  6100 FB84               2265      BSR         Get_BCC_Displacement_16bit
000020EC  6100 FB8C               2266      BSR         Get_Current_Address
000020F0  6100 FB90               2267      BSR         Get_BCC_Destination_Address
000020F4  2207                    2268      MOVE.L      D7,D1
000020F6  6100 FB8E               2269      BSR         PrintHex
000020FA                          2270  
000020FA  6000 EFC8               2271      BRA         opdec_return
000020FE                          2272  MATCH_CC_PL_32
000020FE                          2273      ** print opcode **
000020FE  43F8 00A0               2274      LEA         pr_BCC_PL,A1
00002102  6100 FB96               2275      BSR         PrintString
00002106                          2276  
00002106  6100 FBB2               2277      BSR         PrintSizeLONG
0000210A  43F8 0000               2278      LEA         pr_space,A1
0000210E  6100 FB8A               2279      BSR         PrintString
00002112                          2280  
00002112                          2281      ** print address **
00002112  6100 FB60               2282      BSR         Get_BCC_Displacement_32bit
00002116  6100 FB62               2283      BSR         Get_Current_Address
0000211A  6100 FB66               2284      BSR         Get_BCC_Destination_Address
0000211E  2207                    2285      MOVE.L      D7,D1
00002120  6100 FB64               2286      BSR         PrintHex
00002124                          2287  
00002124  6000 EF9E               2288      BRA         opdec_return
00002128                          2289  MATCH_CC_MI_8
00002128                          2290      ** print opcode **
00002128  43F8 0098               2291      LEA         pr_BCC_MI,A1
0000212C  6100 FB6C               2292      BSR         PrintString
00002130                          2293  
00002130  6100 FB70               2294      BSR         PrintSizeBYTE
00002134  43F8 0000               2295      LEA         pr_space,A1
00002138  6100 FB60               2296      BSR         PrintString
0000213C                          2297  
0000213C                          2298      ** print address **
0000213C  6100 FB2A               2299      BSR         Get_BCC_Displacement_8bit
00002140  6100 FB38               2300      BSR         Get_Current_Address
00002144  6100 FB3C               2301      BSR         Get_BCC_Destination_Address
00002148  2207                    2302      MOVE.L      D7,D1
0000214A  6100 FB3A               2303      BSR         PrintHex
0000214E                          2304  
0000214E  6000 EF74               2305      BRA         opdec_return
00002152                          2306  MATCH_CC_MI_16
00002152                          2307      ** print opcode **
00002152  43F8 0098               2308      LEA         pr_BCC_MI,A1
00002156  6100 FB42               2309      BSR         PrintString
0000215A                          2310  
0000215A  6100 FB52               2311      BSR         PrintSizeWORD
0000215E  43F8 0000               2312      LEA         pr_space,A1
00002162  6100 FB36               2313      BSR         PrintString
00002166                          2314  
00002166                          2315      ** print address **
00002166  6100 FB06               2316      BSR         Get_BCC_Displacement_16bit
0000216A  6100 FB0E               2317      BSR         Get_Current_Address
0000216E  6100 FB12               2318      BSR         Get_BCC_Destination_Address
00002172  2207                    2319      MOVE.L      D7,D1
00002174  6100 FB10               2320      BSR         PrintHex
00002178                          2321  
00002178  6000 EF4A               2322      BRA         opdec_return
0000217C                          2323  MATCH_CC_MI_32
0000217C                          2324      ** print opcode **
0000217C  43F8 0098               2325      LEA         pr_BCC_MI,A1
00002180  6100 FB18               2326      BSR         PrintString
00002184                          2327  
00002184  6100 FB34               2328      BSR         PrintSizeLONG
00002188  43F8 0000               2329      LEA         pr_space,A1
0000218C  6100 FB0C               2330      BSR         PrintString
00002190                          2331  
00002190                          2332      ** print address **
00002190  6100 FAE2               2333      BSR         Get_BCC_Displacement_32bit
00002194  6100 FAE4               2334      BSR         Get_Current_Address
00002198  6100 FAE8               2335      BSR         Get_BCC_Destination_Address
0000219C  2207                    2336      MOVE.L      D7,D1
0000219E  6100 FAE6               2337      BSR         PrintHex
000021A2                          2338  
000021A2  6000 EF20               2339      BRA         opdec_return
000021A6                          2340  MATCH_CC_GE_8
000021A6                          2341      ** print opcode **
000021A6  43F8 0080               2342      LEA         pr_BCC_GE,A1
000021AA  6100 FAEE               2343      BSR         PrintString
000021AE                          2344  
000021AE  6100 FAF2               2345      BSR         PrintSizeBYTE
000021B2  43F8 0000               2346      LEA         pr_space,A1
000021B6  6100 FAE2               2347      BSR         PrintString
000021BA                          2348  
000021BA                          2349      ** print address **
000021BA  6100 FAAC               2350      BSR         Get_BCC_Displacement_8bit
000021BE  6100 FABA               2351      BSR         Get_Current_Address
000021C2  6100 FABE               2352      BSR         Get_BCC_Destination_Address
000021C6  2207                    2353      MOVE.L      D7,D1
000021C8  6100 FABC               2354      BSR         PrintHex
000021CC                          2355  
000021CC  6000 EEF6               2356      BRA         opdec_return
000021D0                          2357  MATCH_CC_GE_16
000021D0                          2358      ** print opcode **
000021D0  43F8 0080               2359      LEA         pr_BCC_GE,A1
000021D4  6100 FAC4               2360      BSR         PrintString
000021D8                          2361  
000021D8  6100 FAD4               2362      BSR         PrintSizeWORD
000021DC  43F8 0000               2363      LEA         pr_space,A1
000021E0  6100 FAB8               2364      BSR         PrintString
000021E4                          2365  
000021E4                          2366      ** print address **
000021E4  6100 FA88               2367      BSR         Get_BCC_Displacement_16bit
000021E8  6100 FA90               2368      BSR         Get_Current_Address
000021EC  6100 FA94               2369      BSR         Get_BCC_Destination_Address
000021F0  2207                    2370      MOVE.L      D7,D1
000021F2  6100 FA92               2371      BSR         PrintHex
000021F6                          2372  
000021F6  6000 EECC               2373      BRA         opdec_return
000021FA                          2374  MATCH_CC_GE_32
000021FA                          2375      ** print opcode **
000021FA  43F8 0080               2376      LEA         pr_BCC_GE,A1
000021FE  6100 FA9A               2377      BSR         PrintString
00002202                          2378  
00002202  6100 FAB6               2379      BSR         PrintSizeLONG
00002206  43F8 0000               2380      LEA         pr_space,A1
0000220A  6100 FA8E               2381      BSR         PrintString
0000220E                          2382  
0000220E                          2383      ** print address **
0000220E  6100 FA64               2384      BSR         Get_BCC_Displacement_32bit
00002212  6100 FA66               2385      BSR         Get_Current_Address
00002216  6100 FA6A               2386      BSR         Get_BCC_Destination_Address
0000221A  2207                    2387      MOVE.L      D7,D1
0000221C  6100 FA68               2388      BSR         PrintHex
00002220                          2389  
00002220  6000 EEA2               2390      BRA         opdec_return
00002224                          2391  MATCH_CC_LT_8
00002224                          2392      ** print opcode **
00002224  43F8 0094               2393      LEA         pr_BCC_LT,A1
00002228  6100 FA70               2394      BSR         PrintString
0000222C                          2395  
0000222C  6100 FA74               2396      BSR         PrintSizeBYTE
00002230  43F8 0000               2397      LEA         pr_space,A1
00002234  6100 FA64               2398      BSR         PrintString
00002238                          2399  
00002238                          2400      ** print address **
00002238  6100 FA2E               2401      BSR         Get_BCC_Displacement_8bit
0000223C  6100 FA3C               2402      BSR         Get_Current_Address
00002240  6100 FA40               2403      BSR         Get_BCC_Destination_Address
00002244  2207                    2404      MOVE.L      D7,D1
00002246  6100 FA3E               2405      BSR         PrintHex
0000224A                          2406  
0000224A  6000 EE78               2407      BRA         opdec_return
0000224E                          2408  MATCH_CC_LT_16
0000224E                          2409      ** print opcode **
0000224E  43F8 0094               2410      LEA         pr_BCC_LT,A1
00002252  6100 FA46               2411      BSR         PrintString
00002256                          2412  
00002256  6100 FA56               2413      BSR         PrintSizeWORD
0000225A  43F8 0000               2414      LEA         pr_space,A1
0000225E  6100 FA3A               2415      BSR         PrintString
00002262                          2416  
00002262                          2417      ** print address **
00002262  6100 FA0A               2418      BSR         Get_BCC_Displacement_16bit
00002266  6100 FA12               2419      BSR         Get_Current_Address
0000226A  6100 FA16               2420      BSR         Get_BCC_Destination_Address
0000226E  2207                    2421      MOVE.L      D7,D1
00002270  6100 FA14               2422      BSR         PrintHex
00002274                          2423  
00002274  6000 EE4E               2424      BRA         opdec_return
00002278                          2425  MATCH_CC_LT_32
00002278                          2426      ** print opcode **
00002278  43F8 0094               2427      LEA         pr_BCC_LT,A1
0000227C  6100 FA1C               2428      BSR         PrintString
00002280                          2429  
00002280  6100 FA38               2430      BSR         PrintSizeLONG
00002284  43F8 0000               2431      LEA         pr_space,A1
00002288  6100 FA10               2432      BSR         PrintString
0000228C                          2433  
0000228C                          2434      ** print address **
0000228C  6100 F9E6               2435      BSR         Get_BCC_Displacement_32bit
00002290  6100 F9E8               2436      BSR         Get_Current_Address
00002294  6100 F9EC               2437      BSR         Get_BCC_Destination_Address
00002298  2207                    2438      MOVE.L      D7,D1
0000229A  6100 F9EA               2439      BSR         PrintHex
0000229E                          2440  
0000229E  6000 EE24               2441      BRA         opdec_return
000022A2                          2442  MATCH_CC_GT_8
000022A2                          2443      ** print opcode **
000022A2  43F8 0084               2444      LEA         pr_BCC_GT,A1
000022A6  6100 F9F2               2445      BSR         PrintString
000022AA                          2446  
000022AA  6100 F9F6               2447      BSR         PrintSizeBYTE
000022AE  43F8 0000               2448      LEA         pr_space,A1
000022B2  6100 F9E6               2449      BSR         PrintString
000022B6                          2450  
000022B6                          2451      ** print address **
000022B6  6100 F9B0               2452      BSR         Get_BCC_Displacement_8bit
000022BA  6100 F9BE               2453      BSR         Get_Current_Address
000022BE  6100 F9C2               2454      BSR         Get_BCC_Destination_Address
000022C2  2207                    2455      MOVE.L      D7,D1
000022C4  6100 F9C0               2456      BSR         PrintHex
000022C8                          2457  
000022C8  6000 EDFA               2458      BRA         opdec_return
000022CC                          2459  MATCH_CC_GT_16
000022CC                          2460      ** print opcode **
000022CC  43F8 0084               2461      LEA         pr_BCC_GT,A1
000022D0  6100 F9C8               2462      BSR         PrintString
000022D4                          2463  
000022D4  6100 F9D8               2464      BSR         PrintSizeWORD
000022D8  43F8 0000               2465      LEA         pr_space,A1
000022DC  6100 F9BC               2466      BSR         PrintString
000022E0                          2467  
000022E0                          2468      ** print address **
000022E0  6100 F98C               2469      BSR         Get_BCC_Displacement_16bit
000022E4  6100 F994               2470      BSR         Get_Current_Address
000022E8  6100 F998               2471      BSR         Get_BCC_Destination_Address
000022EC  2207                    2472      MOVE.L      D7,D1
000022EE  6100 F996               2473      BSR         PrintHex
000022F2                          2474  
000022F2  6000 EDD0               2475      BRA         opdec_return
000022F6                          2476  MATCH_CC_GT_32
000022F6                          2477      ** print opcode **
000022F6  43F8 0084               2478      LEA         pr_BCC_GT,A1
000022FA  6100 F99E               2479      BSR         PrintString
000022FE                          2480  
000022FE  6100 F9BA               2481      BSR         PrintSizeLONG
00002302  43F8 0000               2482      LEA         pr_space,A1
00002306  6100 F992               2483      BSR         PrintString
0000230A                          2484  
0000230A                          2485      ** print address **
0000230A  6100 F968               2486      BSR         Get_BCC_Displacement_32bit
0000230E  6100 F96A               2487      BSR         Get_Current_Address
00002312  6100 F96E               2488      BSR         Get_BCC_Destination_Address
00002316  2207                    2489      MOVE.L      D7,D1
00002318  6100 F96C               2490      BSR         PrintHex
0000231C                          2491  
0000231C  6000 EDA6               2492      BRA         opdec_return
00002320                          2493  MATCH_CC_LE_8
00002320                          2494      ** print opcode **
00002320  43F8 008C               2495      LEA         pr_BCC_LE,A1
00002324  6100 F974               2496      BSR         PrintString
00002328                          2497  
00002328  6100 F978               2498      BSR         PrintSizeBYTE
0000232C  43F8 0000               2499      LEA         pr_space,A1
00002330  6100 F968               2500      BSR         PrintString
00002334                          2501  
00002334                          2502      ** print address **
00002334  6100 F932               2503      BSR         Get_BCC_Displacement_8bit
00002338  6100 F940               2504      BSR         Get_Current_Address
0000233C  6100 F944               2505      BSR         Get_BCC_Destination_Address
00002340  2207                    2506      MOVE.L      D7,D1
00002342  6100 F942               2507      BSR         PrintHex
00002346                          2508  
00002346  6000 ED7C               2509      BRA         opdec_return
0000234A                          2510  MATCH_CC_LE_16
0000234A                          2511      ** print opcode **
0000234A  43F8 008C               2512      LEA         pr_BCC_LE,A1
0000234E  6100 F94A               2513      BSR         PrintString
00002352                          2514  
00002352  6100 F95A               2515      BSR         PrintSizeWORD
00002356  43F8 0000               2516      LEA         pr_space,A1
0000235A  6100 F93E               2517      BSR         PrintString
0000235E                          2518  
0000235E                          2519      ** print address **
0000235E  6100 F90E               2520      BSR         Get_BCC_Displacement_16bit
00002362  6100 F916               2521      BSR         Get_Current_Address
00002366  6100 F91A               2522      BSR         Get_BCC_Destination_Address
0000236A  2207                    2523      MOVE.L      D7,D1
0000236C  6100 F918               2524      BSR         PrintHex
00002370                          2525  
00002370  6000 ED52               2526      BRA         opdec_return
00002374                          2527  MATCH_CC_LE_32
00002374                          2528      ** print opcode **
00002374  43F8 008C               2529      LEA         pr_BCC_LE,A1
00002378  6100 F920               2530      BSR         PrintString
0000237C                          2531  
0000237C  6100 F93C               2532      BSR         PrintSizeLONG
00002380  43F8 0000               2533      LEA         pr_space,A1
00002384  6100 F914               2534      BSR         PrintString
00002388                          2535  
00002388                          2536      ** print address **
00002388  6100 F8EA               2537      BSR         Get_BCC_Displacement_32bit
0000238C  6100 F8EC               2538      BSR         Get_Current_Address
00002390  6100 F8F0               2539      BSR         Get_BCC_Destination_Address
00002394  2207                    2540      MOVE.L      D7,D1
00002396  6100 F8EE               2541      BSR         PrintHex
0000239A                          2542  
0000239A  6000 ED28               2543      BRA         opdec_return
0000239E                          2544  ERROR
0000239E  43F8 006E               2545      LEA         pr_ERROR,A1
000023A2  6100 F8F6               2546      BSR         PrintString
000023A6  6000 ED1C               2547      BRA         opdec_return
000023AA                          2548  
000023AA                          2549  
000023AA                          2550  
000023AA                          2551  
000023AA                          2552  -------------------- end include --------------------
000023AA                          2553                  INCLUDE 'arsany_opcodes.x68'
000023AA                          2554  MATCH_MOVEA_W
000023AA                          2555      ** Move command size into D1
000023AA  123C 0002               2556      MOVE.B      #2,D1
000023AE                          2557      ** Print command
000023AE  103C 000E               2558      MOVE.B      #14,D0
000023B2  43F8 0018               2559      LEA         pr_MOVEA,A1
000023B6  4E4F                    2560      TRAP        #15
000023B8                          2561      ** Print size
000023B8  43F8 0007               2562      LEA         pr_WORD,A1
000023BC  4E4F                    2563      TRAP        #15
000023BE                          2564      ** Print space
000023BE  43F8 0000               2565      LEA         pr_space,A1
000023C2  4E4F                    2566      TRAP        #15
000023C4                          2567      ** Decode right side ea
000023C4  1002                    2568      MOVE.B      D2,D0
000023C6  0200 003F               2569      ANDI.B      #%00111111,D0
000023CA  4EB8 1672               2570      JSR         EADecoder
000023CE                          2571      ** Add comma
000023CE  103C 000E               2572      MOVE.B      #14,D0
000023D2  43F8 0002               2573      LEA         pr_comma,A1
000023D6  4E4F                    2574      TRAP        #15
000023D8                          2575      ** Decode left side ea
000023D8  3002                    2576      MOVE.W      D2,D0
000023DA  0240 0FC0               2577      ANDI.W      #%0000111111000000,D0
000023DE  EC88                    2578      LSR.L       #6,D0
000023E0  4EB8 165A               2579      JSR         EADecoder_left
000023E4                          2580      
000023E4  6000 ECDE               2581      BRA         opdec_return
000023E8                          2582  MATCH_MOVEA_L
000023E8                          2583      ** Move command size into D1
000023E8  123C 0004               2584      MOVE.B      #4,D1
000023EC                          2585      ** Print command
000023EC  103C 000E               2586      MOVE.B      #14,D0
000023F0  43F8 0018               2587      LEA         pr_MOVEA,A1
000023F4  4E4F                    2588      TRAP        #15
000023F6                          2589      ** Print size
000023F6  43F8 000A               2590      LEA         pr_LONG,A1
000023FA  4E4F                    2591      TRAP        #15
000023FC                          2592      ** Print space
000023FC  43F8 0000               2593      LEA         pr_space,A1
00002400  4E4F                    2594      TRAP        #15
00002402                          2595      ** Decode right side ea
00002402  1002                    2596      MOVE.B      D2,D0
00002404  0200 003F               2597      ANDI.B      #%00111111,D0
00002408  4EB8 1672               2598      JSR         EADecoder
0000240C                          2599      ** Add comma
0000240C  103C 000E               2600      MOVE.B      #14,D0
00002410  43F8 0002               2601      LEA         pr_comma,A1
00002414  4E4F                    2602      TRAP        #15
00002416                          2603      ** Decode left side ea
00002416  3002                    2604      MOVE.W      D2,D0
00002418  0240 0FC0               2605      ANDI.W      #%0000111111000000,D0
0000241C  EC88                    2606      LSR.L       #6,D0
0000241E  4EB8 165A               2607      JSR         EADecoder_left
00002422                          2608      
00002422  6000 ECA0               2609      BRA         opdec_return
00002426                          2610  MATCH_ADDA_W
00002426                          2611      ** Move command size into D1
00002426  123C 0002               2612      MOVE.B      #2,D1
0000242A                          2613      ** Print command
0000242A  103C 000E               2614      MOVE.B      #14,D0
0000242E  43F8 0024               2615      LEA         pr_ADDA,A1
00002432  4E4F                    2616      TRAP        #15
00002434                          2617      ** Print size
00002434  43F8 0007               2618      LEA         pr_WORD,A1
00002438  4E4F                    2619      TRAP        #15
0000243A                          2620      ** Print space
0000243A  43F8 0000               2621      LEA         pr_space,A1
0000243E  4E4F                    2622      TRAP        #15
00002440                          2623      ** Decode right side ea
00002440  1002                    2624      MOVE.B      D2,D0
00002442  0200 003F               2625      ANDI.B      #%00111111,D0
00002446  4EB8 1672               2626      JSR         EADecoder
0000244A                          2627      ** Add comma
0000244A  103C 000E               2628      MOVE.B      #14,D0
0000244E  43F8 0002               2629      LEA         pr_comma,A1
00002452  4E4F                    2630      TRAP        #15
00002454                          2631      ** Decode left side ea
00002454  3002                    2632      MOVE.W      D2,D0
00002456  0240 0FC0               2633      ANDI.W      #%0000111111000000,D0
0000245A  EC88                    2634      LSR.L       #6,D0
0000245C  4EB8 165A               2635      JSR         EADecoder_left
00002460                          2636      
00002460  6000 EC62               2637      BRA         opdec_return
00002464                          2638  MATCH_ADDA_L
00002464                          2639      ** Move command size into D1
00002464  123C 0004               2640      MOVE.B      #4,D1
00002468                          2641      ** Print command
00002468  103C 000E               2642      MOVE.B      #14,D0
0000246C  43F8 0024               2643      LEA         pr_ADDA,A1
00002470  4E4F                    2644      TRAP        #15
00002472                          2645      ** Print size
00002472  43F8 000A               2646      LEA         pr_LONG,A1
00002476  4E4F                    2647      TRAP        #15
00002478                          2648      ** Print space
00002478  43F8 0000               2649      LEA         pr_space,A1
0000247C  4E4F                    2650      TRAP        #15
0000247E                          2651      ** Decode right side ea
0000247E  1002                    2652      MOVE.B      D2,D0
00002480  0200 003F               2653      ANDI.B      #%00111111,D0
00002484  4EB8 1672               2654      JSR         EADecoder
00002488                          2655      ** Add comma
00002488  103C 000E               2656      MOVE.B      #14,D0
0000248C  43F8 0002               2657      LEA         pr_comma,A1
00002490  4E4F                    2658      TRAP        #15
00002492                          2659      ** Decode left side ea
00002492  3002                    2660      MOVE.W      D2,D0
00002494  0240 0FC0               2661      ANDI.W      #%0000111111000000,D0
00002498  EC88                    2662      LSR.L       #6,D0
0000249A  4EB8 165A               2663      JSR         EADecoder_left
0000249E                          2664      
0000249E  6000 EC24               2665      BRA         opdec_return
000024A2                          2666  MATCH_MULS_W
000024A2                          2667      ** Move command size into D1
000024A2  123C 0002               2668      MOVE.B      #2,D1
000024A6                          2669      ** Print command
000024A6  103C 000E               2670      MOVE.B      #14,D0
000024AA  43F8 0029               2671      LEA         pr_MULS,A1
000024AE  4E4F                    2672      TRAP        #15
000024B0                          2673      ** Print size
000024B0  43F8 0007               2674      LEA         pr_WORD,A1
000024B4  4E4F                    2675      TRAP        #15
000024B6                          2676      ** Print space
000024B6  43F8 0000               2677      LEA         pr_space,A1
000024BA  4E4F                    2678      TRAP        #15
000024BC                          2679      ** Decode right side ea
000024BC  1002                    2680      MOVE.B      D2,D0
000024BE  0200 003F               2681      ANDI.B      #%00111111,D0
000024C2  4EB8 1672               2682      JSR         EADecoder
000024C6                          2683      ** Add comma
000024C6  103C 000E               2684      MOVE.B      #14,D0
000024CA  43F8 0002               2685      LEA         pr_comma,A1
000024CE  4E4F                    2686      TRAP        #15
000024D0                          2687      ** Decode left side ea
000024D0  3002                    2688      MOVE.W      D2,D0
000024D2  0240 0FC0               2689      ANDI.W      #%0000111111000000,D0
000024D6  EC88                    2690      LSR.L       #6,D0
000024D8  4EB8 165A               2691      JSR         EADecoder_left    
000024DC                          2692      
000024DC  6000 EBE6               2693      BRA         opdec_return
000024E0                          2694  MATCH_RTS
000024E0  43F8 0032               2695      LEA         pr_RTS,A1
000024E4  103C 000E               2696      MOVE.B      #14,D0
000024E8  4E4F                    2697      TRAP        #15
000024EA  6000 EBD8               2698      BRA         opdec_return
000024EE                          2699  MATCH_CMP_B
000024EE                          2700      ** Move command size into D1
000024EE  123C 0002               2701      MOVE.B      #2,D1
000024F2                          2702      ** Print command
000024F2  103C 000E               2703      MOVE.B      #14,D0
000024F6  43F8 0036               2704      LEA         pr_CMP,A1
000024FA  4E4F                    2705      TRAP        #15
000024FC                          2706      ** Print size
000024FC  43F8 0004               2707      LEA         pr_BYTE,A1
00002500  4E4F                    2708      TRAP        #15
00002502                          2709      ** Print space
00002502  43F8 0000               2710      LEA         pr_space,A1
00002506  4E4F                    2711      TRAP        #15
00002508                          2712      ** Decode right side ea
00002508  1002                    2713      MOVE.B      D2,D0
0000250A  0200 003F               2714      ANDI.B      #%00111111,D0
0000250E  4EB8 1672               2715      JSR         EADecoder
00002512                          2716      ** Add comma
00002512  103C 000E               2717      MOVE.B      #14,D0
00002516  43F8 0002               2718      LEA         pr_comma,A1
0000251A  4E4F                    2719      TRAP        #15
0000251C                          2720      ** Decode left side ea
0000251C  3002                    2721      MOVE.W      D2,D0
0000251E  0240 0E00               2722      ANDI.W      #%0000111000000000,D0
00002522  EC88                    2723      LSR.L       #6,D0
00002524  4EB8 165A               2724      JSR         EADecoder_left   
00002528                          2725      
00002528  6000 EB9A               2726      BRA         opdec_return
0000252C                          2727  MATCH_CMP_W
0000252C                          2728      ** Move command size into D1
0000252C  123C 0002               2729      MOVE.B      #2,D1
00002530                          2730      ** Print command
00002530  103C 000E               2731      MOVE.B      #14,D0
00002534  43F8 0036               2732      LEA         pr_CMP,A1
00002538  4E4F                    2733      TRAP        #15
0000253A                          2734      ** Print size
0000253A  43F8 0007               2735      LEA         pr_WORD,A1
0000253E  4E4F                    2736      TRAP        #15
00002540                          2737      ** Print space
00002540  43F8 0000               2738      LEA         pr_space,A1
00002544  4E4F                    2739      TRAP        #15
00002546  4240                    2740      CLR         D0
00002548                          2741      ** Decode right side ea
00002548  1002                    2742      MOVE.B      D2,D0
0000254A  0200 003F               2743      ANDI.B      #%00111111,D0
0000254E  4EB8 1672               2744      JSR         EADecoder
00002552                          2745      ** Add comma
00002552  103C 000E               2746      MOVE.B      #14,D0
00002556  43F8 0002               2747      LEA         pr_comma,A1
0000255A  4E4F                    2748      TRAP        #15
0000255C                          2749      ** Decode left side ea
0000255C  3002                    2750      MOVE.W      D2,D0
0000255E  0240 0E00               2751      ANDI.W      #%0000111000000000,D0
00002562  EC88                    2752      LSR.L       #6,D0
00002564  4EB8 165A               2753      JSR         EADecoder_left   
00002568                          2754      
00002568  6000 EB5A               2755      BRA         opdec_return
0000256C                          2756  MATCH_CMP_L
0000256C                          2757      ** Move command size into D1
0000256C  123C 0004               2758      MOVE.B      #4,D1
00002570                          2759      ** Print command
00002570  103C 000E               2760      MOVE.B      #14,D0
00002574  43F8 0036               2761      LEA         pr_CMP,A1
00002578  4E4F                    2762      TRAP        #15
0000257A                          2763      ** Print size
0000257A  43F8 000A               2764      LEA         pr_LONG,A1
0000257E  4E4F                    2765      TRAP        #15
00002580                          2766      ** Print space
00002580  43F8 0000               2767      LEA         pr_space,A1
00002584  4E4F                    2768      TRAP        #15
00002586  4240                    2769      CLR         D0
00002588                          2770      ** Decode right side ea
00002588  1002                    2771      MOVE.B      D2,D0
0000258A  0200 003F               2772      ANDI.B      #%00111111,D0
0000258E  4EB8 1672               2773      JSR         EADecoder
00002592                          2774      ** Add comma
00002592  103C 000E               2775      MOVE.B      #14,D0
00002596  43F8 0002               2776      LEA         pr_comma,A1
0000259A  4E4F                    2777      TRAP        #15
0000259C                          2778      ** Decode left side ea
0000259C  3002                    2779      MOVE.W      D2,D0
0000259E  0240 0E00               2780      ANDI.W      #%0000111000000000,D0
000025A2  EC88                    2781      LSR.L       #6,D0
000025A4  4EB8 165A               2782      JSR         EADecoder_left   
000025A8                          2783      
000025A8  6000 EB1A               2784      BRA         opdec_return
000025AC                          2785  MATCH_JSR
000025AC                          2786      ** Print command
000025AC  103C 000E               2787      MOVE.B      #14,D0
000025B0  43F8 003A               2788      LEA         pr_JSR,A1
000025B4  4E4F                    2789      TRAP        #15
000025B6                          2790      ** Print space
000025B6  43F8 0000               2791      LEA         pr_space,A1
000025BA  4E4F                    2792      TRAP        #15
000025BC                          2793      ** Decode right side ea
000025BC  1002                    2794      MOVE.B      D2,D0
000025BE  0200 003F               2795      ANDI.B      #%00111111,D0
000025C2  4EB8 1672               2796      JSR         EADecoder 
000025C6                          2797      
000025C6  6000 EAFC               2798      BRA         opdec_return
000025CA                          2799  MATCH_CLR_B 
000025CA                          2800      ** Move command size into D1
000025CA  123C 0002               2801      MOVE.B      #2,D1
000025CE                          2802      ** Print command
000025CE  103C 000E               2803      MOVE.B      #14,D0
000025D2  43F8 002E               2804      LEA         pr_CLR,A1
000025D6  4E4F                    2805      TRAP        #15
000025D8                          2806      ** Print size
000025D8  43F8 0004               2807      LEA         pr_BYTE,A1
000025DC  4E4F                    2808      TRAP        #15
000025DE                          2809      ** Print space
000025DE  43F8 0000               2810      LEA         pr_space,A1
000025E2  4E4F                    2811      TRAP        #15
000025E4                          2812      ** Decode right side ea
000025E4  1002                    2813      MOVE.B      D2,D0
000025E6  0200 003F               2814      ANDI.B      #%00111111,D0
000025EA  4EB8 1672               2815      JSR         EADecoder
000025EE                          2816      
000025EE  6000 EAD4               2817      BRA         opdec_return
000025F2                          2818  MATCH_CLR_W
000025F2                          2819      ** Move command size into D1
000025F2  123C 0002               2820      MOVE.B      #2,D1
000025F6                          2821      ** Print command
000025F6  103C 000E               2822      MOVE.B      #14,D0
000025FA  43F8 002E               2823      LEA         pr_CLR,A1
000025FE  4E4F                    2824      TRAP        #15
00002600                          2825      ** Print size
00002600  43F8 0007               2826      LEA         pr_WORD,A1
00002604  4E4F                    2827      TRAP        #15
00002606                          2828      ** Print space
00002606  43F8 0000               2829      LEA         pr_space,A1
0000260A  4E4F                    2830      TRAP        #15
0000260C                          2831      ** Decode right side ea
0000260C  1002                    2832      MOVE.B      D2,D0
0000260E  0200 003F               2833      ANDI.B      #%00111111,D0
00002612  4EB8 1672               2834      JSR         EADecoder 
00002616                          2835      
00002616  6000 EAAC               2836      BRA         opdec_return
0000261A                          2837  MATCH_CLR_L
0000261A                          2838      ** Move command size into D1
0000261A  123C 0004               2839      MOVE.B      #4,D1
0000261E                          2840      ** Print command
0000261E  103C 000E               2841      MOVE.B      #14,D0
00002622  43F8 002E               2842      LEA         pr_CLR,A1
00002626  4E4F                    2843      TRAP        #15
00002628                          2844      ** Print size
00002628  43F8 000A               2845      LEA         pr_LONG,A1
0000262C  4E4F                    2846      TRAP        #15
0000262E                          2847      ** Print space
0000262E  43F8 0000               2848      LEA         pr_space,A1
00002632  4E4F                    2849      TRAP        #15
00002634                          2850      ** Decode right side ea
00002634  1002                    2851      MOVE.B      D2,D0
00002636  0200 003F               2852      ANDI.B      #%00111111,D0
0000263A  4EB8 1672               2853      JSR         EADecoder 
0000263E                          2854      
0000263E  6000 EA84               2855      BRA         opdec_return
00002642                          2856  MATCH_AND_DN_B
00002642                          2857      ** Move command size into D1
00002642  123C 0002               2858      MOVE.B      #2,D1
00002646                          2859      ** Print command
00002646  103C 000E               2860      MOVE.B      #14,D0
0000264A  43F8 003E               2861      LEA         pr_AND,A1
0000264E  4E4F                    2862      TRAP        #15
00002650                          2863      ** Print size
00002650  43F8 0004               2864      LEA         pr_BYTE,A1
00002654  4E4F                    2865      TRAP        #15
00002656                          2866      ** Print space
00002656  43F8 0000               2867      LEA         pr_space,A1
0000265A  4E4F                    2868      TRAP        #15
0000265C                          2869      ** Decode right side ea
0000265C  1002                    2870      MOVE.B      D2,D0
0000265E  0200 003F               2871      ANDI.B      #%00111111,D0
00002662  4EB8 1672               2872      JSR         EADecoder
00002666                          2873      ** Add comma
00002666  103C 000E               2874      MOVE.B      #14,D0
0000266A  43F8 0002               2875      LEA         pr_comma,A1
0000266E  4E4F                    2876      TRAP        #15
00002670                          2877      ** Decode left side ea
00002670  3002                    2878      MOVE.W      D2,D0
00002672  0240 0E00               2879      ANDI.W      #%0000111000000000,D0
00002676  EC88                    2880      LSR.L       #6,D0
00002678  4EB8 165A               2881      JSR         EADecoder_left   
0000267C                          2882      
0000267C  6000 EA46               2883      BRA         opdec_return
00002680                          2884  MATCH_AND_DN_W
00002680                          2885      ** Move command size into D1
00002680  123C 0002               2886      MOVE.B      #2,D1
00002684                          2887      ** Print command
00002684  103C 000E               2888      MOVE.B      #14,D0
00002688  43F8 003E               2889      LEA         pr_AND,A1
0000268C  4E4F                    2890      TRAP        #15
0000268E                          2891      ** Print size
0000268E  43F8 0007               2892      LEA         pr_WORD,A1
00002692  4E4F                    2893      TRAP        #15
00002694                          2894      ** Print space
00002694  43F8 0000               2895      LEA         pr_space,A1
00002698  4E4F                    2896      TRAP        #15
0000269A                          2897      ** Decode right side ea
0000269A  1002                    2898      MOVE.B      D2,D0
0000269C  0200 003F               2899      ANDI.B      #%00111111,D0
000026A0  4EB8 1672               2900      JSR         EADecoder
000026A4                          2901      ** Add comma
000026A4  103C 000E               2902      MOVE.B      #14,D0
000026A8  43F8 0002               2903      LEA         pr_comma,A1
000026AC  4E4F                    2904      TRAP        #15
000026AE                          2905      ** Decode left side ea
000026AE  3002                    2906      MOVE.W      D2,D0
000026B0  0240 0E00               2907      ANDI.W      #%0000111000000000,D0
000026B4  EC88                    2908      LSR.L       #6,D0
000026B6  4EB8 165A               2909      JSR         EADecoder_left  
000026BA                          2910      
000026BA  6000 EA08               2911      BRA         opdec_return
000026BE                          2912  MATCH_AND_DN_L
000026BE                          2913      ** Move command size into D1
000026BE  123C 0004               2914      MOVE.B      #4,D1
000026C2                          2915      ** Print command
000026C2  103C 000E               2916      MOVE.B      #14,D0
000026C6  43F8 003E               2917      LEA         pr_AND,A1
000026CA  4E4F                    2918      TRAP        #15
000026CC                          2919      ** Print size
000026CC  43F8 000A               2920      LEA         pr_LONG,A1
000026D0  4E4F                    2921      TRAP        #15
000026D2                          2922      ** Print space
000026D2  43F8 0000               2923      LEA         pr_space,A1
000026D6  4E4F                    2924      TRAP        #15
000026D8                          2925      ** Decode right side ea
000026D8  1002                    2926      MOVE.B      D2,D0
000026DA  0200 003F               2927      ANDI.B      #%00111111,D0
000026DE  4EB8 1672               2928      JSR         EADecoder
000026E2                          2929      ** Add comma
000026E2  103C 000E               2930      MOVE.B      #14,D0
000026E6  43F8 0002               2931      LEA         pr_comma,A1
000026EA  4E4F                    2932      TRAP        #15
000026EC                          2933      ** Decode left side ea
000026EC  3002                    2934      MOVE.W      D2,D0
000026EE  0240 0E00               2935      ANDI.W      #%0000111000000000,D0
000026F2  EC88                    2936      LSR.L       #6,D0
000026F4  4EB8 165A               2937      JSR         EADecoder_left  
000026F8                          2938      
000026F8  6000 E9CA               2939      BRA         opdec_return
000026FC                          2940      
000026FC                          2941  MATCH_AND_EA_B
000026FC                          2942      ** Move command size into D1
000026FC  123C 0002               2943      MOVE.B      #2,D1
00002700                          2944      ** Print command
00002700  103C 000E               2945      MOVE.B      #14,D0
00002704  43F8 003E               2946      LEA         pr_AND,A1
00002708  4E4F                    2947      TRAP        #15
0000270A                          2948      ** Print size
0000270A  43F8 0004               2949      LEA         pr_BYTE,A1
0000270E  4E4F                    2950      TRAP        #15
00002710                          2951      ** Print space
00002710  43F8 0000               2952      LEA         pr_space,A1
00002714  4E4F                    2953      TRAP        #15
00002716                          2954      ** Decode left side ea
00002716  3002                    2955      MOVE.W      D2,D0
00002718  0240 0E00               2956      ANDI.W      #%0000111000000000,D0
0000271C  EC88                    2957      LSR.L       #6,D0
0000271E  4EB8 165A               2958      JSR         EADecoder_left
00002722                          2959      ** Add comma
00002722  103C 000E               2960      MOVE.B      #14,D0
00002726  43F8 0002               2961      LEA         pr_comma,A1
0000272A  4E4F                    2962      TRAP        #15
0000272C                          2963      ** Decode right side ea
0000272C  1002                    2964      MOVE.B      D2,D0
0000272E  0200 003F               2965      ANDI.B      #%00111111,D0
00002732  4EB8 1672               2966      JSR         EADecoder
00002736                          2967      
00002736  6000 E98C               2968      BRA         opdec_return
0000273A                          2969  MATCH_AND_EA_W
0000273A                          2970      ** Move command size into D1
0000273A  123C 0002               2971      MOVE.B      #2,D1
0000273E                          2972      ** Print command
0000273E  103C 000E               2973      MOVE.B      #14,D0
00002742  43F8 003E               2974      LEA         pr_AND,A1
00002746  4E4F                    2975      TRAP        #15
00002748                          2976      ** Print size
00002748  43F8 0007               2977      LEA         pr_WORD,A1
0000274C  4E4F                    2978      TRAP        #15
0000274E                          2979      ** Print space
0000274E  43F8 0000               2980      LEA         pr_space,A1
00002752  4E4F                    2981      TRAP        #15
00002754                          2982      ** Decode left side ea
00002754  3002                    2983      MOVE.W      D2,D0
00002756  0240 0E00               2984      ANDI.W      #%0000111000000000,D0
0000275A  EC88                    2985      LSR.L       #6,D0
0000275C  4EB8 165A               2986      JSR         EADecoder_left
00002760                          2987      ** Add comma
00002760  103C 000E               2988      MOVE.B      #14,D0
00002764  43F8 0002               2989      LEA         pr_comma,A1
00002768  4E4F                    2990      TRAP        #15
0000276A                          2991      ** Decode right side ea
0000276A  1002                    2992      MOVE.B      D2,D0
0000276C  0200 003F               2993      ANDI.B      #%00111111,D0
00002770  4EB8 1672               2994      JSR         EADecoder
00002774                          2995      
00002774  6000 E94E               2996      BRA         opdec_return
00002778                          2997  MATCH_AND_EA_L
00002778                          2998      ** Move command size into D1
00002778  123C 0004               2999      MOVE.B      #4,D1
0000277C                          3000      ** Print command
0000277C  103C 000E               3001      MOVE.B      #14,D0
00002780  43F8 003E               3002      LEA         pr_AND,A1
00002784  4E4F                    3003      TRAP        #15
00002786                          3004      ** Print size
00002786  43F8 000A               3005      LEA         pr_LONG,A1
0000278A  4E4F                    3006      TRAP        #15
0000278C                          3007      ** Print space
0000278C  43F8 0000               3008      LEA         pr_space,A1
00002790  4E4F                    3009      TRAP        #15
00002792                          3010      ** Decode left side ea
00002792  3002                    3011      MOVE.W      D2,D0
00002794  0240 0E00               3012      ANDI.W      #%0000111000000000,D0
00002798  EC88                    3013      LSR.L       #6,D0
0000279A  4EB8 165A               3014      JSR         EADecoder_left
0000279E                          3015      ** Add comma
0000279E  103C 000E               3016      MOVE.B      #14,D0
000027A2  43F8 0002               3017      LEA         pr_comma,A1
000027A6  4E4F                    3018      TRAP        #15
000027A8                          3019      ** Decode right side ea
000027A8  1002                    3020      MOVE.B      D2,D0
000027AA  0200 003F               3021      ANDI.B      #%00111111,D0
000027AE  4EB8 1672               3022      JSR         EADecoder
000027B2                          3023      
000027B2  6000 E910               3024      BRA         opdec_return
000027B6                          3025  
000027B6                          3026  
000027B6                          3027  
000027B6                          3028  
000027B6                          3029  
000027B6                          3030  
000027B6                          3031  
000027B6                          3032  
000027B6                          3033  -------------------- end include --------------------
000027B6                          3034  
000027B6                          3035  
000027B6                          3036  
000027B6                          3037  -------------------- end include --------------------
000027B6                          3038  
000027B6                          3039          END    $1000

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
A2H                 105C
ABS_LONG            39
ABS_WORD            38
ADDA_L              7
ADDA_W              3
ADDBYTELOOP         1080
ADDBYTES            1078
ADDI_B              18
ADDI_L              1A
ADDI_RETURN         10C0
ADDI_W              19
ADDQ                5
ADDQ_B              0
ADDQ_L              2
ADDQ_W              1
ADD_ADDA            D
ADD_TO_EA_B         4
ADD_TO_EA_L         6
ADD_TO_EA_W         5
ADD_TO_REG_B        0
ADD_TO_REG_L        2
ADD_TO_REG_W        1
AN                  8
AS                  0
ASL                 383
ASR                 387
BCC                 6
BCC_16              0
BCC_32              FF
CC_CC               4
CC_CS               5
CC_EQ               7
CC_F                1
CC_GE               C
CC_GT               E
CC_HI               2
CC_LE               F
CC_LS               3
CC_LT               D
CC_MI               B
CC_NE               6
CC_PL               A
CC_T                0
CC_VC               8
CC_VS               9
CHECK_ADDI          15A0
CHECK_ADDQ          157E
CHECK_ADD_ADDA      1528
CHECK_BCC           11C0
CHECK_BCC_16        1280
CHECK_BCC_32        1328
CHECK_BCC_8         11D8
CHECK_CMP           13E4
CHECK_DIVU_OR       14AA
CHECK_FOUR_BIT_SIG  1138
CHECK_MOVEA_L_AND_MOVE_L  1630
CHECK_MOVEA_W_AND_MOVE_W  1606
CHECK_MOVEM         14F8
CHECK_MULS_LEA_CLR_JSR_RTS  140A
CHECK_MULS_W_AND    145C
CHECK_NOP           112A
CHECK_SHIFT         1AE0
CHECK_SHIFT_AND_ROTATE  10EA
CHECK_SUB           15C6
CLR_B               108
CLR_L               10A
CLR_W               109
CMP                 B
CMP_B               0
CMP_L               2
CMP_W               1
CONV_END            1088
CR                  D
DEC_ABS_LONG        1722
DEC_ABS_WORD        1716
DEC_AN              173A
DEC_DN              172E
DEC_IMMEDIATE       16FA
DEC_INDIRECT        1746
DEC_POST_INC        175A
DEC_PRE_DEC         1774
DEC_RETURN          16DC
DIVU                3
DIVU_OR             8
DN                  0
DN_B                0
DN_L                2
DN_W                1
DONE                1058
EADECODER           1672
EADECODER_LEFT      165A
EA_B                4
EA_L                6
EA_W                5
ERROR               239E
ERROR_MSG           D1
EXECUTEPRINTSHIFTDIRECTION  1B78
EXECUTEPRINTSHIFTSIZE  1BB2
EXECUTESHIFTOPCODEPRINT  1B50
FOUR_BIT_RETURN     10B8
GETSHIFTDESTREG     1B06
GET_BCC_DESTINATION_ADDRESS  1C82
GET_BCC_DISPLACEMENT_16BIT  1C6E
GET_BCC_DISPLACEMENT_32BIT  1C74
GET_BCC_DISPLACEMENT_8BIT  1C68
GET_COUNT_REGISTER_VAL  1BF0
GET_CURRENT_ADDRESS  1C7A
GET_DIRECTION       1C18
GET_IS_REGISTER_OR_IMMEDIATE  1C2C
GET_SHIFT_OPCODE    1C44
GET_SIZE            1C04
IMMEDIATE           3C
IMM_SKIP            16F4
IMM_WORD            1712
INDIRECT            10
INPUT_ERROR         1050
ISOLATE_CC_CODE_FOR_BCC  13D0
ISOLATE_OP_CODE     1618
JSR                 13A
L                   1
LEA                 7
LEFT_SKIP           1676
LF                  A
LOOP_START          102A
LS                  1
LSL                 38F
LSR                 38B
MATCH_ADDA_L        2464
MATCH_ADDA_W        2426
MATCH_ADDI_B        183C
MATCH_ADDI_L        186C
MATCH_ADDI_W        1854
MATCH_ADDQ_B        1A1E
MATCH_ADDQ_L        1A4E
MATCH_ADDQ_W        1A36
MATCH_ADD_TO_EA_B   1964
MATCH_ADD_TO_EA_L   1994
MATCH_ADD_TO_EA_W   197C
MATCH_ADD_TO_REG_B  18AA
MATCH_ADD_TO_REG_L  18DA
MATCH_ADD_TO_REG_W  18C2
MATCH_AND_DN_B      2642
MATCH_AND_DN_L      26BE
MATCH_AND_DN_W      2680
MATCH_AND_EA_B      26FC
MATCH_AND_EA_L      2778
MATCH_AND_EA_W      273A
MATCH_ASL           1C62
MATCH_ASR           1C60
MATCH_CC_CC_16      1DE0
MATCH_CC_CC_32      1E0A
MATCH_CC_CC_8       1DB6
MATCH_CC_CS_16      1E5E
MATCH_CC_CS_32      1E88
MATCH_CC_CS_8       1E34
MATCH_CC_EQ_16      1F5A
MATCH_CC_EQ_32      1F84
MATCH_CC_EQ_8       1F30
MATCH_CC_F_16       1CCE
MATCH_CC_F_32       1CD0
MATCH_CC_F_8        1CCC
MATCH_CC_GE_16      21D0
MATCH_CC_GE_32      21FA
MATCH_CC_GE_8       21A6
MATCH_CC_GT_16      22CC
MATCH_CC_GT_32      22F6
MATCH_CC_GT_8       22A2
MATCH_CC_HI_16      1CEE
MATCH_CC_HI_32      1D12
MATCH_CC_HI_8       1CD2
MATCH_CC_LE_16      234A
MATCH_CC_LE_32      2374
MATCH_CC_LE_8       2320
MATCH_CC_LS_16      1D62
MATCH_CC_LS_32      1D8C
MATCH_CC_LS_8       1D38
MATCH_CC_LT_16      224E
MATCH_CC_LT_32      2278
MATCH_CC_LT_8       2224
MATCH_CC_MI_16      2152
MATCH_CC_MI_32      217C
MATCH_CC_MI_8       2128
MATCH_CC_NE_16      1EDC
MATCH_CC_NE_32      1F06
MATCH_CC_NE_8       1EB2
MATCH_CC_PL_16      20D4
MATCH_CC_PL_32      20FE
MATCH_CC_PL_8       20AA
MATCH_CC_T_16       1CC8
MATCH_CC_T_32       1CCA
MATCH_CC_T_8        1CC6
MATCH_CC_VC_16      1FD8
MATCH_CC_VC_32      2002
MATCH_CC_VC_8       1FAE
MATCH_CC_VS_16      2056
MATCH_CC_VS_32      2080
MATCH_CC_VS_8       202C
MATCH_CLR_B         25CA
MATCH_CLR_L         261A
MATCH_CLR_W         25F2
MATCH_CMP_B         24EE
MATCH_CMP_L         256C
MATCH_CMP_W         252C
MATCH_DIVU          1648
MATCH_DIVU_W        1AA2
MATCH_JSR           25AC
MATCH_LEA           1656
MATCH_LSL           1C5C
MATCH_LSR           1C5E
MATCH_MOVEA_L       23E8
MATCH_MOVEA_W       23AA
MATCH_MOVEM_TO_MEM_L  1642
MATCH_MOVEM_TO_MEM_W  1640
MATCH_MOVEM_TO_REG_L  1646
MATCH_MOVEM_TO_REG_W  1644
MATCH_MOVEQ         180E
MATCH_MOVE_B        179C
MATCH_MOVE_L        17CC
MATCH_MOVE_W        17B4
MATCH_MULS_L        1658
MATCH_MULS_W        24A2
MATCH_NOP           178E
MATCH_OR_DN_B       164A
MATCH_OR_DN_L       164E
MATCH_OR_DN_W       164C
MATCH_OR_EA_B       1650
MATCH_OR_EA_L       1654
MATCH_OR_EA_W       1652
MATCH_ROL           1C64
MATCH_ROR           1C66
MATCH_RTS           24E0
MATCH_SUB_TO_DN_B   18F2
MATCH_SUB_TO_DN_L   1922
MATCH_SUB_TO_DN_W   190A
MATCH_SUB_TO_EA_B   19AC
MATCH_SUB_TO_EA_L   19DC
MATCH_SUB_TO_EA_W   19C4
MESSAGE             AC
MOVEA_WL            1
MOVEM_RETURN        10BC
MOVEM_TO_MEM_L      123
MOVEM_TO_MEM_W      122
MOVEM_TO_REG_L      133
MOVEM_TO_REG_W      132
MOVEQ_              7
MOVE_B              1
MOVE_L              2
MOVE_W              3
MULS_L              130
MULS_LEA_CLR_JSR_RTS  4
MULS_OP_W           7
MULS_W_AND          C
NOP                 4E71
NOP_RETURN          10B4
NUMSUB              108E
NUMSUBRTN           106A
OPDECODER           10AA
OPDEC_RETURN        10C4
OUTPUT              10000
POST_INC            18
PRE_DEC             20
PRINTARITHSHIFT     1B3C
PRINTHEX            1C86
PRINTLOGICSHIFT     1B46
PRINTROTATE         1B32
PRINTSHIFT          1BD6
PRINTSHIFTBYTE      1B94
PRINTSHIFTDATA      1B1A
PRINTSHIFTLEFT      1B6E
PRINTSHIFTLONG      1BA8
PRINTSHIFTREG       1BCE
PRINTSHIFTRIGHT     1B64
PRINTSHIFTWORD      1B9E
PRINTSIZEBYTE       1CA2
PRINTSIZELONG       1CBA
PRINTSIZEWORD       1CAE
PRINTSTRING         1C9A
PRINT_ADDI          1884
PRINT_ADDQ          1A66
PRINT_ADD_TO_EA     19F4
PRINT_ADD_TO_REG    193A
PRINT_MOVE          17E4
PROGRAM_START       1000
PR_ADD              48
PR_ADDA             24
PR_ADDI             4C
PR_ADDQ             51
PR_AND              3E
PR_BCC_CC           74
PR_BCC_CS           78
PR_BCC_EQ           7C
PR_BCC_GE           80
PR_BCC_GT           84
PR_BCC_HI           88
PR_BCC_LE           8C
PR_BCC_LS           90
PR_BCC_LT           94
PR_BCC_MI           98
PR_BCC_NE           9C
PR_BCC_PL           A0
PR_BCC_VC           A4
PR_BCC_VS           A8
PR_BYTE             4
PR_CLR              2E
PR_CMP              36
PR_COMMA            2
PR_DIVU             5A
PR_ERROR            6E
PR_HASH             D
PR_JSR              3A
PR_LONG             A
PR_MOVE             13
PR_MOVEA            18
PR_MOVEM            1E
PR_MOVEQ            42
PR_MULS             29
PR_NOP              F
PR_REG              5F
PR_RTS              32
PR_SHIFT_AS         64
PR_SHIFT_L          6A
PR_SHIFT_LS         67
PR_SHIFT_R          6C
PR_SHIFT_RO         61
PR_SPACE            0
PR_SUB              56
PR_WORD             7
R                   0
READFIRSTFOURBITS   10CA
READFIRSTTENBITS    10DC
RO                  3
ROL                 39F
ROR                 39B
RTS                 4E75
SHIFT               E
SHIFT_BYTE          0
SHIFT_IMMED         0
SHIFT_LONG          3
SHIFT_REGISTER      1
SHIFT_WORD          1
SPACER              ED
SUB                 9
SUB_TO_DN_B         0
SUB_TO_DN_L         2
SUB_TO_DN_W         1
SUB_TO_EA_B         4
SUB_TO_EA_L         6
SUB_TO_EA_W         5
UPSEND              10A2
UPSUB               1098
UPSUBRTN            1072

00001000 Starting Address
Assembler used: EASy68K Editor/Assembler v5.15.04
Created On: 3/10/2017 3:39:40 PM

00000000                             1  *-----------------------------------------------------------
00000000                             2  * Title      : Main Driver Program
00000000                             3  * Written by : Arsany Azmy, Connor McGwire
00000000                             4  * Date       :
00000000                             5  * Description:
00000000                             6  *-----------------------------------------------------------
00000000  =0000000D                  7  CR      EQU     $0D
00000000  =0000000A                  8  LF      EQU     $0A
00000000                             9  
00000000                            10  
00000000                            11  *** Common strings for printing
00000000= 20 00                     12  pr_space    DC.B    ' ',0
00000002= 20 20 00                  13  pr_space2   DC.B    '  ',0
00000005= 20 20 20 00               14  pr_space3   DC.B    '   ',0
00000009= 20 20 20 20 00            15  pr_space4   DC.B    '    ',0
0000000E= 20 20 20 20 20 00         16  pr_space5   DC.B    '     ',0
00000014= 2C 00                     17  pr_comma    DC.B    ',',0
00000016= 2E 42 00                  18  pr_BYTE     DC.B    '.B',0
00000019= 2E 57 00                  19  pr_WORD     DC.B    '.W',0
0000001C= 2E 4C 00                  20  pr_LONG     DC.B    '.L',0
0000001F= 23 00                     21  pr_hash     DC.B    '#',0
00000021= 23 24 00                  22  pr_hextag   DC.B    '#$',0
00000024= 2D 00                     23  pr_hyphen   DC.B    '-',0
00000026= 2F 00                     24  pr_slash    DC.B    '/',0
00000028                            25  
00000028                            26  
00000028                            27  ** Command strings constants
00000028= 4E 4F 50 00               28  pr_NOP      DC.B    'NOP',0
0000002C= 4D 4F 56 45 00            29  pr_MOVE     DC.B    'MOVE',0
00000031= 4D 4F 56 45 41 00         30  pr_MOVEA    DC.B    'MOVEA',0
00000037= 4D 4F 56 45 4D 00         31  pr_MOVEM    DC.B    'MOVEM',0
0000003D= 41 44 44 41 00            32  pr_ADDA     DC.B    'ADDA',0
00000042= 4D 55 4C 53 00            33  pr_MULS     DC.B    'MULS',0
00000047= 43 4C 52 00               34  pr_CLR      DC.B    'CLR',0
0000004B= 52 54 53 00               35  pr_RTS      DC.B    'RTS',0
0000004F= 43 4D 50 00               36  pr_CMP      DC.B    'CMP',0
00000053= 4A 53 52 00               37  pr_JSR      DC.B    'JSR',0
00000057= 41 4E 44 00               38  pr_AND      DC.B    'AND',0
0000005B= 4D 4F 56 45 51 00         39  pr_MOVEQ    DC.B    'MOVEQ',0
00000061= 41 44 44 00               40  pr_ADD      DC.B    'ADD',0
00000065= 41 44 44 49 00            41  pr_ADDI     DC.B    'ADDI',0
0000006A= 41 44 44 51 00            42  pr_ADDQ     DC.B    'ADDQ',0
0000006F= 53 55 42 00               43  pr_SUB      DC.B    'SUB',0
00000073= 44 49 56 55 00            44  pr_DIVU     DC.B    'DIVU',0
00000078                            45  
00000078= 44 00                     46  pr_reg      DC.B    'D',0
0000007A                            47  
0000007A= 52 4F 00                  48  pr_SHIFT_RO   DC.B  'RO',0
0000007D= 41 53 00                  49  pr_SHIFT_AS   DC.B  'AS',0
00000080= 4C 53 00                  50  pr_SHIFT_LS   DC.B  'LS',0
00000083= 4C 00                     51  pr_SHIFT_L    DC.B  'L',0
00000085= 52 00                     52  pr_SHIFT_R    DC.B  'R',0
00000087                            53  
00000087= 45 52 52 4F 52 00         54  pr_ERROR    DC.B    'ERROR',0
0000008D                            55  
0000008D= 42 43 43 00               56  pr_BCC_CC   DC.B    'BCC',0
00000091= 42 43 53 00               57  pr_BCC_CS   DC.B    'BCS',0
00000095= 42 45 51 00               58  pr_BCC_EQ   DC.B    'BEQ',0
00000099= 42 47 45 00               59  pr_BCC_GE   DC.B    'BGE',0
0000009D= 42 47 54 00               60  pr_BCC_GT   DC.B    'BGT',0
000000A1= 42 48 49 00               61  pr_BCC_HI   DC.B    'BHI',0
000000A5= 42 4C 45 00               62  pr_BCC_LE   DC.B    'BLE',0
000000A9= 42 4C 53 00               63  pr_BCC_LS   DC.B    'BLS',0
000000AD= 42 4C 54 00               64  pr_BCC_LT   DC.B    'BLT',0
000000B1= 42 4D 49 00               65  pr_BCC_MI   DC.B    'BMI',0
000000B5= 42 4E 45 00               66  pr_BCC_NE   DC.B    'BNE',0
000000B9= 42 50 4C 00               67  pr_BCC_PL   DC.B    'BPL',0
000000BD= 42 56 43 00               68  pr_BCC_VC   DC.B    'BVC',0
000000C1= 42 56 53 00               69  pr_BCC_VS   DC.B    'BVS',0
000000C5                            70  
000000C5                            71  ** Register constants
000000C5= 44 30 00                  72  pr_d0       DC.B    'D0',0
000000C8= 44 31 00                  73  pr_d1       DC.B    'D1',0
000000CB= 44 32 00                  74  pr_d2       DC.B    'D2',0
000000CE= 44 33 00                  75  pr_d3       DC.B    'D3',0
000000D1= 44 34 00                  76  pr_d4       DC.B    'D4',0
000000D4= 44 35 00                  77  pr_d5       DC.B    'D5',0
000000D7= 44 36 00                  78  pr_d6       DC.B    'D6',0
000000DA= 44 37 00                  79  pr_d7       DC.B    'D7',0
000000DD                            80  
000000DD= 41 30 00                  81  pr_a0       DC.B    'A0',0
000000E0= 41 31 00                  82  pr_a1       DC.B    'A1',0
000000E3= 41 32 00                  83  pr_a2       DC.B    'A2',0
000000E6= 41 33 00                  84  pr_a3       DC.B    'A3',0
000000E9= 41 34 00                  85  pr_a4       DC.B    'A4',0
000000EC= 41 35 00                  86  pr_a5       DC.B    'A5',0
000000EF= 41 36 00                  87  pr_a6       DC.B    'A6',0
000000F2= 41 37 00                  88  pr_a7       DC.B    'A7',0
000000F5                            89  
000000F5                            90  ** Messages
000000F5= 45 6E 74 65 72 20 ...     91  MESSAGE     DC.B    'Enter the address of compiled code: ',0
0000011A= 0D 0A 50 6C 65 61 ...     92  MESSAGE2    DC.B    CR,LF,'Please hit enter',0
0000012D= 49 6E 76 61 6C 69 ...     93  ERROR_MSG   DC.B    'Invalid input, please rerun',0
00000149= 45 6E 64 20 6F 66 ...     94  DONE_MSG    DC.B    'End of program found!',0
0000015F                            95  
00001000                            96  start   ORG     $1000
00001000                            97  
00001000                            98  program_start
00001000                            99  
00001000                           100  *------Code for input-------
00001000                           101  
00001000  43F8 00F5                102          LEA     MESSAGE,A1      *Code block for first message
00001004  103C 000E                103          MOVE.B  #14,D0
00001008  4E4F                     104          TRAP    #15
0000100A                           105  
0000100A  227C 00004000            106          MOVEA.L #$4000, A1
00001010  103C 0002                107          MOVE.B  #2,D0           *Code block for reading input
00001014  4E4F                     108          TRAP    #15
00001016  3001                     109          MOVE.W  D1,D0
00001018                           110  
00001018  2049                     111          MOVEA.L A1,A0           *Move the contents of A1 to A0 for the conversion
0000101A  4EB9 0000108E            112          JSR     A2H             *Branch to Connor's conversion code
00001020                           113  
00001020  2040                     114          MOVEA.L D0,A0
00001022                           115  
00001022  0C50 FFFF                116          CMPI.W  #$FFFF,(A0)
00001026  6700 0032                117          BEQ     input_error
0000102A                           118  
0000102A                           119  loop_start
0000102A                           120  
0000102A  2208                     121          MOVE.L  A0,D1           *Print out the address we're working on
0000102C  7410                     122          MOVE.L  #16,D2
0000102E  700F                     123          MOVE.L  #15,D0
00001030  4E4F                     124          TRAP    #15
00001032                           125  
00001032  700E                     126          MOVE.L  #14,D0
00001034  43F8 0009                127          LEA     pr_space4,A1
00001038  4E4F                     128          TRAP    #15
0000103A                           129  
0000103A  3418                     130          MOVE.W  (A0)+,D2
0000103C  0C42 FFFF                131          CMPI.W  #$FFFF,D2
00001040  6700 0040                132          BEQ     Done
00001044                           133  
00001044  4EB9 000010DC            134          JSR     OpDecoder
0000104A                           135  
0000104A  700D                     136          MOVE.L  #13,D0
0000104C  4E4F                     137          TRAP    #15
0000104E                           138          
0000104E  5245                     139          ADD     #1,D5       *Increment d5 by 1
00001050  BA7C 001F                140          CMP     #31,D5      *Check if theres 31 lines of output
00001054  6700 0010                141          BEQ     clr_scrn    *If theres 20 lines, clear the screen and prompt
00001058                           142  
00001058  60D0                     143          BRA     loop_start
0000105A                           144  
0000105A                           145  input_error
0000105A  700D                     146          MOVE.L  #13,D0
0000105C  43F8 012D                147          LEA     ERROR_MSG,A1
00001060  4E4F                     148          TRAP    #15
00001062  6000 001E                149          BRA     Done
00001066                           150  clr_scrn
00001066  43F8 011A                151          LEA     MESSAGE2,A1     *Print out initial message
0000106A  103C 000E                152          MOVE.B  #14,D0
0000106E  4E4F                     153          TRAP    #15
00001070                           154          
00001070  103C 0002                155          MOVE.B  #2,D0           *Get user input
00001074  4E4F                     156          TRAP    #15
00001076  1A3C 0000                157          MOVE.B  #0,D5
0000107A  60AE                     158          BRA     loop_start
0000107C                           159          
0000107C  103C 0009                160          MOVE.B  #9,D0           *halt the simulator
00001080  4E4F                     161          TRAP    #15
00001082                           162          
00001082                           163  Done
00001082  700E                     164          MOVE.L  #14,D0
00001084  43F8 0149                165          LEA     DONE_MSG,A1
00001088  4E4F                     166          TRAP    #15
0000108A  FFFF FFFF                167          SIMHALT
0000108E                           168  
0000108E                           169          INCLUDE 'ASCII_HEX_Conversions.x68'
0000108E                           170  
0000108E                           171  
0000108E                           172  
0000108E                           173  A2H     *Converts and ASCII Byte string into HEX; Size WORD
0000108E  48E7 7FFE                174          MOVEM.L     D1-D7/A0-A6, -(SP)  
00001092                           175          
00001092  3400                     176          MOVE.W  D0,D2
00001094  3202                     177          MOVE.W  D2,D1                   *Store length of string into D1 for looping
00001096  2248                     178          MOVEA.L A0,A1                   *Copy starting point of string
00001098                           179  
00001098  6000 0026                180          BRA     numSub
0000109C                           181  numSubRTN
0000109C  2049                     182          MOVEA.L A1,A0                   *Restore address position
0000109E  3202                     183          MOVE.W  D2,D1                   *Reset loop counter
000010A0                           184          
000010A0  6000 0028                185          BRA     upSub
000010A4                           186  upSubRTN        
000010A4  2049                     187          MOVEA.L A1,A0                   *Restore address position
000010A6  3202                     188          MOVE.W  D2,D1                   *Reset loop counter
000010A8  4240                     189          CLR     D0                      *Clear D0
000010AA                           190  addBytes
000010AA  D018                     191          ADD.B   (A0)+,D0
000010AC  5301                     192          SUBI.B  #1,D1
000010AE  6700 000A                193          BEQ     conv_end
000010B2                           194  addByteLoop
000010B2  E980                     195          ASL.L   #4,D0
000010B4  D018                     196          ADD.B   (A0)+,D0
000010B6  5301                     197          SUBI.B  #1,D1
000010B8  66F8                     198          BNE     addByteLoop
000010BA                           199  conv_end
000010BA  4CDF 7FFE                200          MOVEM.L     (SP)+, D1-D7/A0-A6
000010BE  4E75                     201          RTS
000010C0                           202          
000010C0                           203  numSub  *Convert ASCII 'number' to true number byte; Should not be called outside of the A2H subroutines
000010C0  0418 0030                204          SUBI.B  #$30,(A0)+              *Subtract difference between null ASCII and '0' ASCII
000010C4  5341                     205          SUB.W   #1,D1                   *Decrement loop counter
000010C6  66F8                     206          BNE     numSub                  *If loop has not ended restart
000010C8  60D2                     207          BRA     numSubRTN
000010CA                           208  
000010CA                           209  upSub   *Loops through string to remove any upper case characters 
000010CA                           210          *that may remain in the string
000010CA  0C10 0009                211          CMPI.B  #9,(A0)                 *Check if the value is greater than 0-9
000010CE  6F00 0004                212          BLE     upSEnd                  *If it's not, continue loop
000010D2  5310                     213          SUBI.B  #1,(A0)                 *Otherwise, subtract difference between ASCII 'number' code and 'A' code
000010D4                           214  upSEnd
000010D4  5248                     215          ADDA.W  #1,A0                   *Increment to next position to check for uppercase
000010D6  5341                     216          SUB.W   #1,D1                   *Decrement loop counter
000010D8  66F0                     217          BNE     upSub                   
000010DA  60C8                     218          BRA     upSubRTN
000010DC                           219  
000010DC                           220  
000010DC                           221  -------------------- end include --------------------
000010DC                           222          INCLUDE 'opcodes.x68'
000010DC                           223  
000010DC  =00004E71                224  NOP             EQU $4E71
000010DC  =00000001                225  MOVE_B          EQU %0001
000010DC  =00000003                226  MOVE_W          EQU %0011
000010DC  =00000002                227  MOVE_L          EQU %0010
000010DC  =00000001                228  MOVEA_WL        EQU %001
000010DC  =00000007                229  MOVEQ_          EQU %0111
000010DC                           230  
000010DC  =00000018                231  ADDI_B          EQU %0000011000
000010DC  =00000019                232  ADDI_W          EQU %0000011001
000010DC  =0000001A                233  ADDI_L          EQU %0000011010
000010DC                           234  
000010DC  =0000000D                235  ADD_ADDA        EQU %1101
000010DC  =00000000                236  ADD_TO_REG_B    EQU %000
000010DC  =00000001                237  ADD_TO_REG_W    EQU %001
000010DC  =00000002                238  ADD_TO_REG_L    EQU %010
000010DC  =00000004                239  ADD_TO_EA_B     EQU %100
000010DC  =00000005                240  ADD_TO_EA_W     EQU %101
000010DC  =00000006                241  ADD_TO_EA_L     EQU %110
000010DC  =00000003                242  ADDA_W          EQU %011
000010DC  =00000007                243  ADDA_L          EQU %111
000010DC                           244  
000010DC  =00000005                245  ADDQ            EQU %0101
000010DC  =00000000                246  ADDQ_B          EQU %000
000010DC  =00000001                247  ADDQ_W          EQU %001
000010DC  =00000002                248  ADDQ_L          EQU %010
000010DC                           249  
000010DC  =0000000C                250  MULS_W_AND      EQU %1100
000010DC  =00000007                251  MULS_OP_W       EQU %111
000010DC                           252  
000010DC  =00000009                253  SUB             EQU %1001
000010DC  =00000000                254  SUB_TO_DN_B     EQU %000
000010DC  =00000001                255  SUB_TO_DN_W     EQU %001
000010DC  =00000002                256  SUB_TO_DN_L     EQU %010
000010DC  =00000004                257  SUB_TO_EA_B     EQU %100
000010DC  =00000005                258  SUB_TO_EA_W     EQU %101
000010DC  =00000006                259  SUB_TO_EA_L     EQU %110
000010DC                           260  
000010DC  =00000008                261  DIVU_OR         EQU %1000
000010DC  =00000003                262  DIVU            EQU %011
000010DC                           263  
000010DC  =00000000                264  DN_B            EQU %000
000010DC  =00000001                265  DN_W            EQU %001
000010DC  =00000002                266  DN_L            EQU %010
000010DC  =00000004                267  EA_B            EQU %100
000010DC  =00000005                268  EA_W            EQU %101
000010DC  =00000006                269  EA_L            EQU %110
000010DC                           270  
000010DC  =00000004                271  MULS_LEA_CLR_JSR_RTS_MOVEM    EQU %0100
000010DC  =00004E75                272  RTS             EQU $4E75
000010DC  =00000007                273  LEA             EQU %111
000010DC  =0000013A                274  JSR             EQU %0100111010
000010DC  =00000108                275  CLR_B           EQU %0100001000
000010DC  =00000109                276  CLR_W           EQU %0100001001
000010DC  =0000010A                277  CLR_L           EQU %0100001010
000010DC  =00000130                278  MULS_L          EQU %0100110000
000010DC                           279  
000010DC  =00000122                280  MOVEM_TO_MEM_W  EQU %0100100010
000010DC  =00000123                281  MOVEM_TO_MEM_L  EQU %0100100011
000010DC  =00000132                282  MOVEM_TO_REG_W  EQU %0100110010
000010DC  =00000133                283  MOVEM_TO_REG_L  EQU %0100110011
000010DC                           284  
000010DC  =0000038F                285  LSL             EQU %1110001111
000010DC  =0000038B                286  LSR             EQU %1110001011
000010DC  =00000387                287  ASR             EQU %1110000111
000010DC  =00000383                288  ASL             EQU %1110000011
000010DC  =0000039F                289  ROL             EQU %1110011111
000010DC  =0000039B                290  ROR             EQU %1110011011
000010DC                           291  
000010DC  =0000000B                292  CMP             EQU %1011
000010DC  =00000000                293  CMP_B           EQU %000
000010DC  =00000001                294  CMP_W           EQU %001
000010DC  =00000002                295  CMP_L           EQU %010
000010DC                           296  
000010DC  =00000006                297  BCC             EQU %0110
000010DC  =00000000                298  BCC_16          EQU %00000000
000010DC  =000000FF                299  BCC_32          EQU $FF
000010DC  =00000000                300  CC_T            EQU %0000
000010DC  =00000001                301  CC_F            EQU %0001
000010DC  =00000002                302  CC_HI           EQU %0010
000010DC  =00000003                303  CC_LS           EQU %0011
000010DC  =00000004                304  CC_CC           EQU %0100
000010DC  =00000005                305  CC_CS           EQU %0101
000010DC  =00000006                306  CC_NE           EQU %0110
000010DC  =00000007                307  CC_EQ           EQU %0111
000010DC  =00000008                308  CC_VC           EQU %1000
000010DC  =00000009                309  CC_VS           EQU %1001
000010DC  =0000000A                310  CC_PL           EQU %1010
000010DC  =0000000B                311  CC_MI           EQU %1011
000010DC  =0000000C                312  CC_GE           EQU %1100
000010DC  =0000000D                313  CC_LT           EQU %1101
000010DC  =0000000E                314  CC_GT           EQU %1110
000010DC  =0000000F                315  CC_LE           EQU %1111
000010DC                           316  
000010DC                           317  
000010DC                           318  
000010DC                           319  
000010DC                           320  
000010DC                           321  
000010DC                           322  OpDecoder
000010DC  48E7 FF7E                323      MOVEM.L     D0-D7/A1-A6, -(SP)
000010E0  4241                     324      CLR         D1
000010E2  6000 0074                325      BRA         CHECK_NOP
000010E6                           326  NOP_RETURN
000010E6  6000 007C                327      BRA         CHECK_FOUR_BIT_SIG
000010EA                           328  FOUR_BIT_RETURN
000010EA  6000 04E0                329      BRA         CHECK_ADDI
000010EE                           330  ADDI_RETURN
000010EE  6000 0028                331      BRA         CHECK_SHIFT_AND_ROTATE
000010F2                           332  
000010F2                           333  opdec_return
000010F2  4CDF 7EFF                334      MOVEM.L     (SP)+, D0-D7/A1-A6
000010F6  4E75                     335      RTS
000010F8                           336  
000010F8                           337  ReadFirstFourBits
000010F8                           338  
000010F8  48A7 2000                339      MOVEM.W     D2, -(SP)
000010FC                           340  
000010FC  1E3C 000C                341      MOVE.B      #12,D7
00001100  EE6A                     342      LSR.W       D7,D2
00001102  1602                     343      MOVE.B      D2,D3
00001104                           344  
00001104  4C9F 0004                345      MOVEM.W     (SP)+,D2
00001108  4E75                     346      RTS
0000110A                           347  
0000110A                           348  ReadFirstTenBits
0000110A                           349  
0000110A  48A7 2000                350      MOVEM.W     D2, -(SP)
0000110E                           351  
0000110E  EC4A                     352      LSR.W       #6,D2
00001110  3602                     353      MOVE.W      D2,D3
00001112                           354  
00001112  4C9F 0004                355      MOVEM.W     (SP)+,D2
00001116  4E75                     356      RTS
00001118                           357  CHECK_SHIFT_AND_ROTATE
00001118                           358  
00001118  61F0                     359      BSR         ReadFirstTenBits
0000111A                           360  
0000111A  3C3C 038F                361      MOVE.W      #LSL,D6
0000111E  BC43                     362      CMP.W       D3,D6
00001120  6700 0D6C                363      BEQ         MATCH_LSL
00001124                           364  
00001124  3C3C 038B                365      MOVE.W      #LSR,D6
00001128  BC43                     366      CMP.W       D3,D6
0000112A  6700 0D64                367      BEQ         MATCH_LSR
0000112E                           368  
0000112E  3C3C 0387                369      MOVE.W      #ASR,D6
00001132  BC43                     370      CMP.W       D3,D6
00001134  6700 0D5C                371      BEQ         MATCH_ASR
00001138                           372  
00001138  3C3C 0383                373      MOVE.W      #ASL,D6
0000113C  BC43                     374      CMP.W       D3,D6
0000113E  6700 0D54                375      BEQ         MATCH_ASL
00001142                           376  
00001142  3C3C 039F                377      MOVE.W      #ROL,D6
00001146  BC43                     378      CMP.W       D3,D6
00001148  6700 0D4C                379      BEQ         MATCH_ROL
0000114C                           380  
0000114C  3C3C 039B                381      MOVE.W      #ROR,D6
00001150  BC43                     382      CMP.W       D3,D6
00001152  6700 0D44                383      BEQ         MATCH_ROR
00001156                           384  
00001156  609A                     385      BRA         opdec_return
00001158                           386  
00001158                           387  CHECK_NOP
00001158                           388  
00001158  3C3C 4E71                389      MOVE.W      #NOP,D6
0000115C  BC42                     390      CMP.W       D2,D6
0000115E  6700 0650                391      BEQ         MATCH_NOP
00001162                           392  
00001162  6082                     393      BRA         NOP_RETURN
00001164                           394  
00001164                           395  CHECK_FOUR_BIT_SIG
00001164                           396  
00001164  6192                     397      BSR         ReadFirstFourBits
00001166                           398  
00001166  1C3C 0001                399      MOVE.B      #MOVE_B,D6
0000116A  BC03                     400      CMP.B       D3,D6
0000116C  6700 0650                401      BEQ         MATCH_MOVE_B
00001170                           402  
00001170  1C3C 0003                403      MOVE.B      #MOVE_W,D6
00001174  BC03                     404      CMP.B       D3,D6
00001176  6700 04BA                405      BEQ         CHECK_MOVEA_W_AND_MOVE_W
0000117A                           406  
0000117A  1C3C 0002                407      MOVE.B      #MOVE_L,D6
0000117E  BC03                     408      CMP.B       D3,D6
00001180  6700 04DA                409      BEQ         CHECK_MOVEA_L_AND_MOVE_L
00001184                           410  
00001184  1C3C 0007                411      MOVE.B      #MOVEQ_,D6
00001188  BC03                     412      CMP.B       D3,D6
0000118A  6700 06A4                413      BEQ         MATCH_MOVEQ
0000118E                           414  
0000118E  1C3C 000D                415      MOVE.B      #ADD_ADDA,D6
00001192  BC03                     416      CMP.B       D3,D6
00001194  6700 03BE                417      BEQ         CHECK_ADD_ADDA
00001198                           418  
00001198  1C3C 0005                419      MOVE.B      #ADDQ,D6
0000119C  BC03                     420      CMP.B       D3,D6
0000119E  6700 040A                421      BEQ         CHECK_ADDQ
000011A2                           422  
000011A2  1C3C 0009                423      MOVE.B      #SUB,D6
000011A6  BC03                     424      CMP.B       D3,D6
000011A8  6700 0448                425      BEQ         CHECK_SUB
000011AC                           426  
000011AC  1C3C 0008                427      MOVE.B      #DIVU_OR,D6
000011B0  BC03                     428      CMP.B       D3,D6
000011B2  6700 0322                429      BEQ         CHECK_DIVU_OR
000011B6                           430  
000011B6  1C3C 000C                431      MOVE.B      #MULS_W_AND,D6
000011BA  BC03                     432      CMP.B       D3,D6
000011BC  6700 02CA                433      BEQ         CHECK_MULS_W_AND
000011C0                           434  
000011C0  1C3C 0004                435      MOVE.B      #MULS_LEA_CLR_JSR_RTS_MOVEM,D6
000011C4  BC03                     436      CMP.B       D3,D6
000011C6  6700 026E                437      BEQ         CHECK_MULS_LEA_CLR_JSR_RTS
000011CA                           438  
000011CA  1C3C 000B                439      MOVE.B      #CMP,D6
000011CE  BC03                     440      CMP.B       D3,D6
000011D0  6700 023E                441      BEQ         CHECK_CMP
000011D4                           442  
000011D4  1C3C 0006                443      MOVE.B      #BCC,D6
000011D8  BC03                     444      CMP.B       D3,D6
000011DA  6700 0010                445      BEQ         CHECK_BCC
000011DE                           446  
000011DE  1C3C 000E                447      MOVE.B      #SHIFT,D6
000011E2  BC03                     448      CMP.B       D3,D6
000011E4  6700 0B2C                449      BEQ         CHECK_SHIFT
000011E8                           450  
000011E8  6000 FF00                451      BRA         FOUR_BIT_RETURN
000011EC                           452  CHECK_BCC
000011EC                           453  
000011EC  1C3C 0000                454      MOVE.B      #BCC_16,D6
000011F0  BC02                     455      CMP.B       D2,D6
000011F2  6700 00B8                456      BEQ         CHECK_BCC_16
000011F6                           457  
000011F6  1C3C 00FF                458      MOVE.B      #BCC_32,D6
000011FA  BC02                     459      CMP.B       D2,D6
000011FC  6700 0156                460      BEQ         CHECK_BCC_32
00001200                           461  
00001200  6000 0002                462      BRA         CHECK_BCC_8
00001204                           463  
00001204                           464  CHECK_BCC_8
00001204                           465  
00001204  6100 01F6                466      BSR         ISOLATE_CC_CODE_FOR_BCC
00001208                           467  
00001208  1C3C 0000                468      MOVE.B      #CC_T,D6
0000120C  BC03                     469      CMP.B       D3,D6
0000120E  6700 0CE8                470      BEQ         MATCH_CC_T_8
00001212                           471  
00001212  1C3C 0001                472      MOVE.B      #CC_F,D6
00001216  BC03                     473      CMP.B       D3,D6
00001218  6700 0CE4                474      BEQ         MATCH_CC_F_8
0000121C                           475  
0000121C  1C3C 0002                476      MOVE.B      #CC_HI,D6
00001220  BC03                     477      CMP.B       D3,D6
00001222  6700 0CE0                478      BEQ         MATCH_CC_HI_8
00001226                           479  
00001226  1C3C 0003                480      MOVE.B      #CC_LS,D6
0000122A  BC03                     481      CMP.B       D3,D6
0000122C  6700 0D3C                482      BEQ         MATCH_CC_LS_8
00001230                           483  
00001230  1C3C 0004                484      MOVE.B      #CC_CC,D6
00001234  BC03                     485      CMP.B       D3,D6
00001236  6700 0DB0                486      BEQ         MATCH_CC_CC_8
0000123A                           487  
0000123A  1C3C 0005                488      MOVE.B      #CC_CS,D6
0000123E  BC03                     489      CMP.B       D3,D6
00001240  6700 0E24                490      BEQ         MATCH_CC_CS_8
00001244                           491  
00001244  1C3C 0006                492      MOVE.B      #CC_NE,D6
00001248  BC03                     493      CMP.B       D3,D6
0000124A  6700 0E98                494      BEQ         MATCH_CC_NE_8
0000124E                           495  
0000124E  1C3C 0007                496      MOVE.B      #CC_EQ,D6
00001252  BC03                     497      CMP.B       D3,D6
00001254  6700 0F0C                498      BEQ         MATCH_CC_EQ_8
00001258                           499  
00001258  1C3C 0008                500      MOVE.B      #CC_VC,D6
0000125C  BC03                     501      CMP.B       D3,D6
0000125E  6700 0F80                502      BEQ         MATCH_CC_VC_8
00001262                           503  
00001262  1C3C 0009                504      MOVE.B      #CC_VS,D6
00001266  BC03                     505      CMP.B       D3,D6
00001268  6700 0FF4                506      BEQ         MATCH_CC_VS_8
0000126C                           507  
0000126C  1C3C 000A                508      MOVE.B      #CC_PL,D6
00001270  BC03                     509      CMP.B       D3,D6
00001272  6700 1068                510      BEQ         MATCH_CC_PL_8
00001276                           511  
00001276  1C3C 000B                512      MOVE.B      #CC_MI,D6
0000127A  BC03                     513      CMP.B       D3,D6
0000127C  6700 10DC                514      BEQ         MATCH_CC_MI_8
00001280                           515  
00001280  1C3C 000C                516      MOVE.B      #CC_GE,D6
00001284  BC03                     517      CMP.B       D3,D6
00001286  6700 1150                518      BEQ         MATCH_CC_GE_8
0000128A                           519  
0000128A  1C3C 000D                520      MOVE.B      #CC_LT,D6
0000128E  BC03                     521      CMP.B       D3,D6
00001290  6700 11C4                522      BEQ         MATCH_CC_LT_8
00001294                           523  
00001294  1C3C 000E                524      MOVE.B      #CC_GT,D6
00001298  BC03                     525      CMP.B       D3,D6
0000129A  6700 1238                526      BEQ         MATCH_CC_GT_8
0000129E                           527  
0000129E  1C3C 000F                528      MOVE.B      #CC_LE,D6
000012A2  BC03                     529      CMP.B       D3,D6
000012A4  6700 12AC                530      BEQ         MATCH_CC_LE_8
000012A8                           531  
000012A8  6000 1326                532      BRA         ERROR
000012AC                           533  
000012AC                           534  CHECK_BCC_16
000012AC                           535  
000012AC  6100 014E                536      BSR         ISOLATE_CC_CODE_FOR_BCC
000012B0                           537  
000012B0  1C3C 0000                538      MOVE.B      #CC_T,D6
000012B4  BC03                     539      CMP.B       D3,D6
000012B6  6700 0C42                540      BEQ         MATCH_CC_T_16
000012BA                           541  
000012BA  1C3C 0001                542      MOVE.B      #CC_F,D6
000012BE  BC03                     543      CMP.B       D3,D6
000012C0  6700 0C3E                544      BEQ         MATCH_CC_F_16
000012C4                           545  
000012C4  1C3C 0002                546      MOVE.B      #CC_HI,D6
000012C8  BC03                     547      CMP.B       D3,D6
000012CA  6700 0C54                548      BEQ         MATCH_CC_HI_16
000012CE                           549  
000012CE  1C3C 0003                550      MOVE.B      #CC_LS,D6
000012D2  BC03                     551      CMP.B       D3,D6
000012D4  6700 0CBE                552      BEQ         MATCH_CC_LS_16
000012D8                           553  
000012D8  1C3C 0004                554      MOVE.B      #CC_CC,D6
000012DC  BC03                     555      CMP.B       D3,D6
000012DE  6700 0D32                556      BEQ         MATCH_CC_CC_16
000012E2                           557  
000012E2  1C3C 0005                558      MOVE.B      #CC_CS,D6
000012E6  BC03                     559      CMP.B       D3,D6
000012E8  6700 0DA6                560      BEQ         MATCH_CC_CS_16
000012EC                           561  
000012EC  1C3C 0006                562      MOVE.B      #CC_NE,D6
000012F0  BC03                     563      CMP.B       D3,D6
000012F2  6700 0E1A                564      BEQ         MATCH_CC_NE_16
000012F6                           565  
000012F6  1C3C 0007                566      MOVE.B      #CC_EQ,D6
000012FA  BC03                     567      CMP.B       D3,D6
000012FC  6700 0E8E                568      BEQ         MATCH_CC_EQ_16
00001300                           569  
00001300  1C3C 0008                570      MOVE.B      #CC_VC,D6
00001304  BC03                     571      CMP.B       D3,D6
00001306  6700 0F02                572      BEQ         MATCH_CC_VC_16
0000130A                           573  
0000130A  1C3C 0009                574      MOVE.B      #CC_VS,D6
0000130E  BC03                     575      CMP.B       D3,D6
00001310  6700 0F76                576      BEQ         MATCH_CC_VS_16
00001314                           577  
00001314  1C3C 000A                578      MOVE.B      #CC_PL,D6
00001318  BC03                     579      CMP.B       D3,D6
0000131A  6700 0FEA                580      BEQ         MATCH_CC_PL_16
0000131E                           581  
0000131E  1C3C 000B                582      MOVE.B      #CC_MI,D6
00001322  BC03                     583      CMP.B       D3,D6
00001324  6700 105E                584      BEQ         MATCH_CC_MI_16
00001328                           585  
00001328  1C3C 000C                586      MOVE.B      #CC_GE,D6
0000132C  BC03                     587      CMP.B       D3,D6
0000132E  6700 10D2                588      BEQ         MATCH_CC_GE_16
00001332                           589  
00001332  1C3C 000D                590      MOVE.B      #CC_LT,D6
00001336  BC03                     591      CMP.B       D3,D6
00001338  6700 1146                592      BEQ         MATCH_CC_LT_16
0000133C                           593  
0000133C  1C3C 000E                594      MOVE.B      #CC_GT,D6
00001340  BC03                     595      CMP.B       D3,D6
00001342  6700 11BA                596      BEQ         MATCH_CC_GT_16
00001346                           597  
00001346  1C3C 000F                598      MOVE.B      #CC_LE,D6
0000134A  BC03                     599      CMP.B       D3,D6
0000134C  6700 122E                600      BEQ         MATCH_CC_LE_16
00001350                           601  
00001350  6000 127E                602      BRA         ERROR
00001354                           603  
00001354                           604  
00001354                           605  CHECK_BCC_32
00001354                           606  
00001354  6100 00A6                607      BSR         ISOLATE_CC_CODE_FOR_BCC
00001358                           608  
00001358  1C3C 0000                609      MOVE.B      #CC_T,D6
0000135C  BC03                     610      CMP.B       D3,D6
0000135E  6700 0B9C                611      BEQ         MATCH_CC_T_32
00001362                           612  
00001362  1C3C 0001                613      MOVE.B      #CC_F,D6
00001366  BC03                     614      CMP.B       D3,D6
00001368  6700 0B98                615      BEQ         MATCH_CC_F_32
0000136C                           616  
0000136C  1C3C 0002                617      MOVE.B      #CC_HI,D6
00001370  BC03                     618      CMP.B       D3,D6
00001372  6700 0BD0                619      BEQ         MATCH_CC_HI_32
00001376                           620  
00001376  1C3C 0003                621      MOVE.B      #CC_LS,D6
0000137A  BC03                     622      CMP.B       D3,D6
0000137C  6700 0C40                623      BEQ         MATCH_CC_LS_32
00001380                           624  
00001380  1C3C 0004                625      MOVE.B      #CC_CC,D6
00001384  BC03                     626      CMP.B       D3,D6
00001386  6700 0CB4                627      BEQ         MATCH_CC_CC_32
0000138A                           628  
0000138A  1C3C 0005                629      MOVE.B      #CC_CS,D6
0000138E  BC03                     630      CMP.B       D3,D6
00001390  6700 0D28                631      BEQ         MATCH_CC_CS_32
00001394                           632  
00001394  1C3C 0006                633      MOVE.B      #CC_NE,D6
00001398  BC03                     634      CMP.B       D3,D6
0000139A  6700 0D9C                635      BEQ         MATCH_CC_NE_32
0000139E                           636  
0000139E  1C3C 0007                637      MOVE.B      #CC_EQ,D6
000013A2  BC03                     638      CMP.B       D3,D6
000013A4  6700 0E10                639      BEQ         MATCH_CC_EQ_32
000013A8                           640  
000013A8  1C3C 0008                641      MOVE.B      #CC_VC,D6
000013AC  BC03                     642      CMP.B       D3,D6
000013AE  6700 0E84                643      BEQ         MATCH_CC_VC_32
000013B2                           644  
000013B2  1C3C 0009                645      MOVE.B      #CC_VS,D6
000013B6  BC03                     646      CMP.B       D3,D6
000013B8  6700 0EF8                647      BEQ         MATCH_CC_VS_32
000013BC                           648  
000013BC  1C3C 000A                649      MOVE.B      #CC_PL,D6
000013C0  BC03                     650      CMP.B       D3,D6
000013C2  6700 0F6C                651      BEQ         MATCH_CC_PL_32
000013C6                           652  
000013C6  1C3C 000B                653      MOVE.B      #CC_MI,D6
000013CA  BC03                     654      CMP.B       D3,D6
000013CC  6700 0FE0                655      BEQ         MATCH_CC_MI_32
000013D0                           656  
000013D0  1C3C 000C                657      MOVE.B      #CC_GE,D6
000013D4  BC03                     658      CMP.B       D3,D6
000013D6  6700 1054                659      BEQ         MATCH_CC_GE_32
000013DA                           660  
000013DA  1C3C 000D                661      MOVE.B      #CC_LT,D6
000013DE  BC03                     662      CMP.B       D3,D6
000013E0  6700 10C8                663      BEQ         MATCH_CC_LT_32
000013E4                           664  
000013E4  1C3C 000E                665      MOVE.B      #CC_GT,D6
000013E8  BC03                     666      CMP.B       D3,D6
000013EA  6700 113C                667      BEQ         MATCH_CC_GT_32
000013EE                           668  
000013EE  1C3C 000F                669      MOVE.B      #CC_LE,D6
000013F2  BC03                     670      CMP.B       D3,D6
000013F4  6700 11B0                671      BEQ         MATCH_CC_LE_32
000013F8                           672  
000013F8  6000 11D6                673      BRA         ERROR
000013FC                           674  
000013FC                           675  ISOLATE_CC_CODE_FOR_BCC
000013FC                           676  
000013FC  48A7 2000                677      MOVEM.W     D2, -(SP)
00001400                           678  
00001400  E94A                     679      LSL.W       #4,D2
00001402  1E3C 000C                680      MOVE.B      #12,D7
00001406  EE6A                     681      LSR.W       D7,D2
00001408                           682  
00001408  1602                     683      MOVE.B      D2,D3
0000140A                           684  
0000140A  4C9F 0004                685      MOVEM.W     (SP)+,D2
0000140E  4E75                     686      RTS
00001410                           687  CHECK_CMP
00001410                           688  
00001410  6100 0232                689      BSR         ISOLATE_OP_CODE
00001414                           690  
00001414  1C3C 0000                691      MOVE.B      #CMP_B,D6
00001418  BC03                     692      CMP.B       D3,D6
0000141A  6700 12BC                693      BEQ         MATCH_CMP_B
0000141E                           694  
0000141E  1C3C 0001                695      MOVE.B      #CMP_W,D6
00001422  BC03                     696      CMP.B       D3,D6
00001424  6700 12CA                697      BEQ         MATCH_CMP_W
00001428                           698  
00001428  1C3C 0002                699      MOVE.B      #CMP_L,D6
0000142C  BC03                     700      CMP.B       D3,D6
0000142E  6700 12D8                701      BEQ         MATCH_CMP_L
00001432                           702  
00001432  6000 119C                703      BRA         ERROR
00001436                           704  CHECK_MULS_LEA_CLR_JSR_RTS
00001436                           705  
00001436  3C3C 4E75                706      MOVE.W      #RTS,D6
0000143A  BC42                     707      CMP.W       D2,D6
0000143C  6700 128C                708      BEQ         MATCH_RTS
00001440                           709  
00001440  6100 0202                710      BSR         ISOLATE_OP_CODE
00001444                           711  
00001444  1C3C 0007                712      MOVE.B      #LEA,D6
00001448  BC03                     713      CMP.B       D3,D6
0000144A  6700 022C                714      BEQ         MATCH_LEA
0000144E                           715  
0000144E  6100 FCBA                716      BSR         ReadFirstTenBits
00001452                           717  
00001452  3C3C 013A                718      MOVE.W      #JSR,D6
00001456  BC43                     719      CMP.W       D3,D6
00001458  6700 12EE                720      BEQ         MATCH_JSR
0000145C                           721  
0000145C  3C3C 0108                722      MOVE.W      #CLR_B,D6
00001460  BC43                     723      CMP.W       D3,D6
00001462  6700 1302                724      BEQ         MATCH_CLR_B
00001466                           725  
00001466  3C3C 0109                726      MOVE.W      #CLR_W,D6
0000146A  BC43                     727      CMP.W       D3,D6
0000146C  6700 1310                728      BEQ         MATCH_CLR_W
00001470                           729  
00001470  3C3C 010A                730      MOVE.W      #CLR_L,D6
00001474  BC43                     731      CMP.W       D3,D6
00001476  6700 131E                732      BEQ         MATCH_CLR_L
0000147A                           733  
0000147A  3C3C 0130                734      MOVE.W      #MULS_L,D6  * Shouldn't need to check for the rest of the opcode..?
0000147E  BC43                     735      CMP.W       D3,D6
00001480  6700 01F8                736      BEQ         MATCH_MULS_L
00001484                           737      
00001484  6000 009E                738      BRA         CHECK_MOVEM
00001488                           739  
00001488                           740  CHECK_MULS_W_AND
00001488                           741  
00001488  6100 01BA                742      BSR         ISOLATE_OP_CODE
0000148C                           743  
0000148C  1C3C 0007                744      MOVE.B      #MULS_OP_W,D6
00001490  BC03                     745      CMP.B       D3,D6
00001492  6700 11F8                746      BEQ         MATCH_MULS_W
00001496                           747  
00001496  1C3C 0000                748      MOVE.B      #DN_B,D6
0000149A  BC03                     749      CMP.B       D3,D6
0000149C  6700 1320                750      BEQ         MATCH_AND_DN_B
000014A0                           751  
000014A0  1C3C 0001                752      MOVE.B      #DN_W,D6
000014A4  BC03                     753      CMP.B       D3,D6
000014A6  6700 132E                754      BEQ         MATCH_AND_DN_W
000014AA                           755  
000014AA  1C3C 0002                756      MOVE.B      #DN_L,D6
000014AE  BC03                     757      CMP.B       D3,D6
000014B0  6700 133C                758      BEQ         MATCH_AND_DN_L
000014B4                           759  
000014B4  1C3C 0004                760      MOVE.B      #EA_B,D6
000014B8  BC03                     761      CMP.B       D3,D6
000014BA  6700 1370                762      BEQ         MATCH_AND_EA_B
000014BE                           763  
000014BE  1C3C 0005                764      MOVE.B      #EA_W,D6
000014C2  BC03                     765      CMP.B       D3,D6
000014C4  6700 137E                766      BEQ         MATCH_AND_EA_W
000014C8                           767  
000014C8  1C3C 0006                768      MOVE.B      #EA_L,D6
000014CC  BC03                     769      CMP.B       D3,D6
000014CE  6700 138C                770      BEQ         MATCH_AND_EA_L
000014D2                           771  
000014D2  6000 10FC                772      BRA         ERROR
000014D6                           773  
000014D6                           774  CHECK_DIVU_OR
000014D6                           775  
000014D6  6100 016C                776      BSR         ISOLATE_OP_CODE
000014DA                           777  
000014DA  1C3C 0003                778      MOVE.B      #DIVU,D6
000014DE  BC03                     779      CMP.B       D3,D6
000014E0  6700 05F2                780      BEQ         MATCH_DIVU
000014E4                           781  
000014E4  1C3C 0000                782      MOVE.B      #DN_B,D6
000014E8  BC03                     783      CMP.B       D3,D6
000014EA  6700 0180                784      BEQ         MATCH_OR_DN_B
000014EE                           785  
000014EE  1C3C 0001                786      MOVE.B      #DN_W,D6
000014F2  BC03                     787      CMP.B       D3,D6
000014F4  6700 0178                788      BEQ         MATCH_OR_DN_W
000014F8                           789  
000014F8  1C3C 0002                790      MOVE.B      #DN_L,D6
000014FC  BC03                     791      CMP.B       D3,D6
000014FE  6700 0170                792      BEQ         MATCH_OR_DN_L
00001502                           793  
00001502  1C3C 0004                794      MOVE.B      #EA_B,D6
00001506  BC03                     795      CMP.B       D3,D6
00001508  6700 0168                796      BEQ         MATCH_OR_EA_B
0000150C                           797  
0000150C  1C3C 0005                798      MOVE.B      #EA_W,D6
00001510  BC03                     799      CMP.B       D3,D6
00001512  6700 0160                800      BEQ         MATCH_OR_EA_W
00001516                           801  
00001516  1C3C 0006                802      MOVE.B      #EA_L,D6
0000151A  BC03                     803      CMP.B       D3,D6
0000151C  6700 0158                804      BEQ         MATCH_OR_EA_L
00001520                           805  
00001520  6000 10AE                806      BRA         ERROR
00001524                           807  
00001524                           808  CHECK_MOVEM
00001524                           809  
00001524  6100 FBE4                810      BSR         ReadFirstTenBits
00001528                           811  
00001528  3C3C 0122                812      MOVE.W      #MOVEM_TO_MEM_W,D6
0000152C  BC43                     813      CMP.W       D3,D6
0000152E  6700 05E2                814      BEQ         MATCH_MOVEM_TO_MEM_W
00001532                           815  
00001532  3C3C 0123                816      MOVE.W      #MOVEM_TO_MEM_L,D6
00001536  BC43                     817      CMP.W       D3,D6
00001538  6700 05F0                818      BEQ         MATCH_MOVEM_TO_MEM_L
0000153C                           819  
0000153C  3C3C 0132                820      MOVE.W      #MOVEM_TO_REG_W,D6
00001540  BC43                     821      CMP.W       D3,D6
00001542  6700 061C                822      BEQ         MATCH_MOVEM_TO_REG_W
00001546                           823  
00001546  3C3C 0133                824      MOVE.W      #MOVEM_TO_REG_L,D6
0000154A  BC43                     825      CMP.W       D3,D6
0000154C  6700 0614                826      BEQ         MATCH_MOVEM_TO_REG_L
00001550                           827  
00001550  6000 107E                828      BRA         ERROR
00001554                           829  CHECK_ADD_ADDA
00001554                           830  
00001554  6100 00EE                831      BSR         ISOLATE_OP_CODE
00001558                           832  
00001558  3C3C 0000                833      MOVE.W      #DN_B,D6
0000155C  BC43                     834      CMP.W       D3,D6
0000155E  6700 037C                835      BEQ         MATCH_ADD_TO_REG_B
00001562                           836  
00001562  3C3C 0001                837      MOVE.W      #DN_W,D6
00001566  BC43                     838      CMP.W       D3,D6
00001568  6700 038A                839      BEQ         MATCH_ADD_TO_REG_W
0000156C                           840  
0000156C  3C3C 0002                841      MOVE.W      #DN_L,D6
00001570  BC43                     842      CMP.W       D3,D6
00001572  6700 0398                843      BEQ         MATCH_ADD_TO_REG_L
00001576                           844  
00001576  3C3C 0004                845      MOVE.W      #EA_B,D6
0000157A  BC43                     846      CMP.W       D3,D6
0000157C  6700 0418                847      BEQ         MATCH_ADD_TO_EA_B
00001580                           848  
00001580  3C3C 0005                849      MOVE.W      #EA_W,D6
00001584  BC43                     850      CMP.W       D3,D6
00001586  6700 0426                851      BEQ         MATCH_ADD_TO_EA_W
0000158A                           852  
0000158A  3C3C 0006                853      MOVE.W      #EA_L,D6
0000158E  BC43                     854      CMP.W       D3,D6
00001590  6700 0434                855      BEQ         MATCH_ADD_TO_EA_L
00001594                           856  
00001594  3C3C 0003                857      MOVE.W      #ADDA_W,D6
00001598  BC43                     858      CMP.W       D3,D6
0000159A  6700 1096                859      BEQ         MATCH_ADDA_W
0000159E                           860  
0000159E  3C3C 0007                861      MOVE.W      #ADDA_L,D6
000015A2  BC43                     862      CMP.W       D3,D6
000015A4  6700 10A4                863      BEQ         MATCH_ADDA_L
000015A8                           864  
000015A8  4E75                     865      RTS ** Change later?
000015AA                           866  CHECK_ADDQ
000015AA                           867  
000015AA  6100 0098                868      BSR         ISOLATE_OP_CODE
000015AE                           869  
000015AE  3C3C 0000                870      MOVE.W      #ADDQ_B,D6
000015B2  BC43                     871      CMP.W       D3,D6
000015B4  6700 049A                872      BEQ         MATCH_ADDQ_B
000015B8                           873  
000015B8  3C3C 0001                874      MOVE.W      #ADDQ_W,D6
000015BC  BC43                     875      CMP.W       D3,D6
000015BE  6700 04A8                876      BEQ         MATCH_ADDQ_W
000015C2                           877  
000015C2  3C3C 0002                878      MOVE.W      #ADDQ_L,D6
000015C6  BC43                     879      CMP.W       D3,D6
000015C8  6700 04B6                880      BEQ         MATCH_ADDQ_L
000015CC                           881  
000015CC                           882  CHECK_ADDI
000015CC                           883  
000015CC  6100 FB3C                884      BSR         ReadFirstTenBits
000015D0                           885  
000015D0  3C3C 0018                886      MOVE.W      #ADDI_B,D6
000015D4  BC43                     887      CMP.W       D3,D6
000015D6  6700 0296                888      BEQ         MATCH_ADDI_B
000015DA                           889  
000015DA  3C3C 0019                890      MOVE.W      #ADDI_W,D6
000015DE  BC43                     891      CMP.W       D3,D6
000015E0  6700 02A4                892      BEQ         MATCH_ADDI_W
000015E4                           893  
000015E4  3C3C 001A                894      MOVE.W      #ADDI_L,D6
000015E8  BC43                     895      CMP.W       D3,D6
000015EA  6700 02B2                896      BEQ         MATCH_ADDI_L
000015EE                           897  
000015EE  6000 FAFE                898      BRA         ADDI_RETURN
000015F2                           899  CHECK_SUB
000015F2                           900  
000015F2  6100 0050                901      BSR         ISOLATE_OP_CODE
000015F6                           902  
000015F6  3C3C 0000                903      MOVE.W      #DN_B,D6
000015FA  BC43                     904      CMP.W       D3,D6
000015FC  6700 0326                905      BEQ         MATCH_SUB_TO_DN_B
00001600                           906  
00001600  3C3C 0001                907      MOVE.W      #DN_W,D6
00001604  BC43                     908      CMP.W       D3,D6
00001606  6700 0334                909      BEQ         MATCH_SUB_TO_DN_W
0000160A                           910  
0000160A  3C3C 0002                911      MOVE.W      #DN_L,D6
0000160E  BC43                     912      CMP.W       D3,D6
00001610  6700 0342                913      BEQ         MATCH_SUB_TO_DN_L
00001614                           914  
00001614  3C3C 0004                915      MOVE.W      #EA_B,D6
00001618  BC43                     916      CMP.W       D3,D6
0000161A  6700 03C2                917      BEQ         MATCH_SUB_TO_EA_B
0000161E                           918  
0000161E  3C3C 0005                919      MOVE.W      #EA_W,D6
00001622  BC43                     920      CMP.W       D3,D6
00001624  6700 03D0                921      BEQ         MATCH_SUB_TO_EA_W
00001628                           922  
00001628  3C3C 0006                923      MOVE.W      #EA_L,D6
0000162C  BC43                     924      CMP.W       D3,D6
0000162E  6700 03DE                925      BEQ         MATCH_SUB_TO_EA_L
00001632                           926  CHECK_MOVEA_W_AND_MOVE_W
00001632                           927  
00001632  6100 0010                928      BSR         ISOLATE_OP_CODE
00001636                           929  
00001636  1C3C 0001                930      MOVE.B      #MOVEA_WL,D6
0000163A  BC03                     931      CMP.B       D3,D6
0000163C  6700 0F9E                932      BEQ         MATCH_MOVEA_W
00001640                           933  
00001640  6000 0194                934      BRA         MATCH_MOVE_W
00001644                           935  ISOLATE_OP_CODE
00001644                           936  
00001644  48A7 2000                937      MOVEM.W     D2, -(SP)
00001648                           938  
00001648  1E3C 0007                939      MOVE.B      #7,D7
0000164C  EF6A                     940      LSL.W       D7,D2
0000164E  1E3C 000D                941      MOVE.B      #13,D7
00001652  EE6A                     942      LSR.W       D7,D2
00001654  1602                     943      MOVE.B      D2,D3
00001656                           944  
00001656  4C9F 0004                945      MOVEM.W     (SP)+,D2
0000165A  4E75                     946      RTS
0000165C                           947  CHECK_MOVEA_L_AND_MOVE_L
0000165C                           948  
0000165C  61E6                     949      BSR         ISOLATE_OP_CODE
0000165E                           950  
0000165E  1C3C 0001                951      MOVE.B      #MOVEA_WL,D6
00001662  BC03                     952      CMP.B       D3,D6
00001664  6700 0F8E                953      BEQ         MATCH_MOVEA_L
00001668                           954  
00001668  6000 0184                955      BRA         MATCH_MOVE_L
0000166C                           956  
0000166C                           957  
0000166C                           958  
0000166C                           959  MATCH_OR_DN_B
0000166C  3A02                     960      MOVE.W      D2,D5       *REMOVE
0000166E                           961  MATCH_OR_DN_W
0000166E  3A02                     962      MOVE.W      D2,D5       *REMOVE
00001670                           963  MATCH_OR_DN_L
00001670  3A02                     964      MOVE.W      D2,D5       *REMOVE
00001672                           965  MATCH_OR_EA_B
00001672  3A02                     966      MOVE.W      D2,D5       *REMOVE
00001674                           967  MATCH_OR_EA_W
00001674  3A02                     968      MOVE.W      D2,D5       *REMOVE
00001676                           969  MATCH_OR_EA_L
00001676  3A02                     970      MOVE.W      D2,D5       *REMOVE
00001678                           971  
00001678                           972  MATCH_LEA
00001678  3A02                     973      MOVE.W      D2,D5       *REMOVE
0000167A                           974  
0000167A                           975  MATCH_MULS_L
0000167A  3A02                     976      MOVE.W      D2,D5       *REMOVE
0000167C                           977  
0000167C                           978  
0000167C                           979                  INCLUDE 'EADecoder.x68'
0000167C                           980  
0000167C                           981  
0000167C  =00010000                982  output      EQU $00010000
0000167C                           983  
0000167C  =0000003C                984  IMMEDIATE   EQU %00111100
0000167C  =00000038                985  ABS_WORD    EQU %00111000
0000167C  =00000039                986  ABS_LONG    EQU %00111001
0000167C  =00000000                987  Dn          EQU %00000000
0000167C  =00000008                988  An          EQU %00001000
0000167C  =00000010                989  INDIRECT    EQU %00010000
0000167C  =00000018                990  POST_INC    EQU %00011000
0000167C  =00000020                991  PRE_DEC     EQU %00100000
0000167C                           992  
0000167C                           993  
0000167C                           994  
0000167C                           995  EADecoder_left
0000167C  48E7 FF7E                996          MOVEM.L     D0-D7/A1-A6, -(SP)
00001680                           997          
00001680                           998          ** Swap the mode and register bits
00001680  1800                     999          MOVE.B  D0,D4
00001682  0200 0007               1000          ANDI.B  #%00000111,D0       * Mask mode
00001686  0204 0038               1001          ANDI.B  #%00111000,D4       * Mask register
0000168A  E708                    1002          LSL.B   #3,D0               * Move mode bits over
0000168C  E60C                    1003          LSR.B   #3,D4               * Move register bits over
0000168E  8004                    1004          OR.B    D4,D0               * Recombine
00001690                          1005          
00001690  6000 0006               1006          BRA     left_skip
00001694                          1007  
00001694                          1008  EADecoder
00001694  48E7 FF7E               1009          MOVEM.L     D0-D7/A1-A6, -(SP) *Store registers on stack, except D0
00001698                          1010  left_skip   
00001698  4242                    1011          CLR     D2    
0000169A  4243                    1012          CLR     D3 
0000169C  1401                    1013          MOVE.B  D1,D2 ** Store opcode size in bytes into D2
0000169E                          1014          
0000169E  43F9 00010000           1015          LEA     output,A1
000016A4  45F9 00010000           1016          LEA     output,A2
000016AA                          1017          
000016AA                          1018          *First, decoder will check for the 3 types with hard coded register values
000016AA  163C 0001               1019          MOVE.B  #1,D3
000016AE  B07C 003C               1020          CMP     #IMMEDIATE,D0
000016B2  6700 0068               1021          BEQ     dec_immediate
000016B6                          1022          
000016B6  B07C 0038               1023          CMP     #ABS_WORD,D0
000016BA  6700 007C               1024          BEQ     dec_abs_word
000016BE                          1025          
000016BE  B07C 0039               1026          CMP     #ABS_LONG,D0
000016C2  6700 0080               1027          BEQ     dec_abs_long
000016C6                          1028          
000016C6                          1029          *If it was none of the above, store the register and mode seperately
000016C6  4243                    1030          CLR     D3
000016C8  1200                    1031          MOVE.B  D0,D1
000016CA  0201 0038               1032          ANDI.B  #%00111000,D1           *Get mode value
000016CE  0200 0007               1033          ANDI.B  #%00000111,D0           *Get register value
000016D2  0600 0030               1034          ADDI.B  #$30,D0
000016D6                          1035                
000016D6  B27C 0000               1036          CMP     #Dn,D1
000016DA  6700 0074               1037          BEQ     dec_Dn 
000016DE                          1038          
000016DE  B27C 0008               1039          CMP     #An,D1
000016E2  6700 0078               1040          BEQ     dec_An
000016E6                          1041                  
000016E6  B27C 0010               1042          CMP     #INDIRECT,D1
000016EA  6700 007C               1043          BEQ     dec_indirect
000016EE                          1044                  
000016EE  B27C 0018               1045          CMP     #POST_INC,D1
000016F2  6700 0088               1046          BEQ     dec_post_inc
000016F6                          1047                  
000016F6  B27C 0020               1048          CMP     #PRE_DEC,D1
000016FA  6700 009A               1049          BEQ     dec_pre_dec
000016FE                          1050  
000016FE                          1051  dec_return ** Common return for all types
000016FE                          1052          
000016FE                          1053          ** Print display string
000016FE  103C 000E               1054          MOVE.B  #14,D0
00001702  4E4F                    1055          TRAP    #15
00001704                          1056          
00001704                          1057          ** If there is immediate data to print, print it
00001704  B67C 0001               1058          CMP     #1,D3
00001708  6600 000C               1059          BNE     imm_skip
0000170C                          1060          
0000170C  103C 000F               1061          MOVE.B  #15,D0
00001710  143C 0010               1062          MOVE.B  #16,D2
00001714  4E4F                    1063          TRAP    #15
00001716                          1064  
00001716                          1065  imm_skip
00001716  4CDF 7EFF               1066          MOVEM.L     (SP)+, D0-D7/A1-A6 *Return register data from stack, except D0
0000171A  4E75                    1067          RTS
0000171C                          1068          
0000171C                          1069          * Individual EA decoders *
0000171C                          1070  
0000171C                          1071  dec_immediate   *DECODE IMMEDIATE VALUE*
0000171C  14FC 0023               1072          MOVE.B  #'#',(A2)+  * Move '#' char into string
00001720  14FC 0024               1073          MOVE.B  #'$',(A2)+  * Move '$' char into string
00001724  14FC 0000               1074          MOVE.B  #$0,(A2)+   * Null terminate string
00001728  B47C 0002               1075          CMP     #2,D2       * Check if data is word length
0000172C  6700 0006               1076          BEQ     imm_word    
00001730                          1077          
00001730  2218                    1078          MOVE.L  (A0)+,D1    * Length was long
00001732  60CA                    1079          BRA     dec_return
00001734                          1080          
00001734                          1081  imm_word
00001734  3218                    1082          MOVE.W  (A0)+,D1    * Length was word
00001736  60C6                    1083          BRA     dec_return
00001738                          1084  
00001738                          1085  
00001738                          1086  dec_abs_word    *DECODE ABSOLUTE WORD*
00001738  14FC 0024               1087          MOVE.B  #'$',(A2)+  * Move '$' char into string
0000173C  14FC 0000               1088          MOVE.B  #$0,(A2)+   * Null terminate string
00001740  3218                    1089          MOVE.W  (A0)+,D1
00001742  60BA                    1090          BRA     dec_return
00001744                          1091          
00001744                          1092  
00001744                          1093  dec_abs_long    *DECODE ABSOLUTE LONG*
00001744  14FC 0024               1094          MOVE.B  #'$',(A2)+  * Move '$' char into string
00001748  14FC 0000               1095          MOVE.B  #$0,(A2)+   * Null terminate string
0000174C  2218                    1096          MOVE.L  (A0)+,D1
0000174E  60AE                    1097          BRA     dec_return
00001750                          1098          
00001750                          1099  
00001750                          1100  dec_Dn          *DECODE DIRECT DATA*
00001750  14FC 0044               1101          MOVE.B  #'D',(A2)+
00001754  14C0                    1102          MOVE.B  D0,(A2)+
00001756  14FC 0000               1103          MOVE.B  #$0,(A2)+
0000175A  60A2                    1104          BRA     dec_return
0000175C                          1105  
0000175C                          1106          
0000175C                          1107  dec_An          *DECODE DIRECT ADDRESS*
0000175C  14FC 0041               1108          MOVE.B  #'A',(A2)+
00001760  14C0                    1109          MOVE.B  D0,(A2)+
00001762  14FC 0000               1110          MOVE.B  #$0,(A2)+
00001766  6096                    1111          BRA     dec_return
00001768                          1112  
00001768                          1113  
00001768                          1114  dec_indirect    *DECODE INDIRECT ACCESS*
00001768  14FC 0028               1115          MOVE.B  #'(',(A2)+
0000176C  14FC 0041               1116          MOVE.B  #'A',(A2)+
00001770  14C0                    1117          MOVE.B  D0,(A2)+
00001772  14FC 0029               1118          MOVE.B  #')',(A2)+
00001776  14FC 0000               1119          MOVE.B  #$0,(A2)+
0000177A  6082                    1120          BRA     dec_return
0000177C                          1121          
0000177C                          1122  
0000177C                          1123  dec_post_inc    *DECODE INDIRECT POST INCREMENT*
0000177C  14FC 0028               1124          MOVE.B  #'(',(A2)+
00001780  14FC 0041               1125          MOVE.B  #'A',(A2)+
00001784  14C0                    1126          MOVE.B  D0,(A2)+
00001786  14FC 0029               1127          MOVE.B  #')',(A2)+
0000178A  14FC 002B               1128          MOVE.B  #'+',(A2)+
0000178E  14FC 0000               1129          MOVE.B  #$0,(A2)+
00001792  6000 FF6A               1130          BRA     dec_return
00001796                          1131          
00001796                          1132          
00001796                          1133  dec_pre_dec    *DECODE INDIRECT PRE DECREMENT*
00001796  14FC 002D               1134          MOVE.B  #'-',(A2)+
0000179A  14FC 0028               1135          MOVE.B  #'(',(A2)+
0000179E  14FC 0041               1136          MOVE.B  #'A',(A2)+
000017A2  14C0                    1137          MOVE.B  D0,(A2)+
000017A4  14FC 0029               1138          MOVE.B  #')',(A2)+
000017A8  14FC 0000               1139          MOVE.B  #$0,(A2)+
000017AC  6000 FF50               1140          BRA     dec_return
000017B0                          1141  
000017B0                          1142  
000017B0                          1143  
000017B0                          1144  
000017B0                          1145  
000017B0                          1146  
000017B0                          1147  
000017B0                          1148  
000017B0                          1149  
000017B0                          1150  -------------------- end include --------------------
000017B0                          1151                  INCLUDE 'connor_opcodes.x68'
000017B0                          1152  
000017B0                          1153  
000017B0                          1154  MATCH_NOP
000017B0  43F8 0028               1155      LEA         pr_NOP,A1
000017B4  103C 000E               1156      MOVE.B      #14,D0
000017B8  4E4F                    1157      TRAP        #15
000017BA  6000 F936               1158      BRA         opdec_return
000017BE                          1159  
000017BE                          1160  
000017BE                          1161  MATCH_MOVE_B
000017BE                          1162      ** Move command size into D1
000017BE  123C 0002               1163      MOVE.B      #2,D1
000017C2                          1164      ** Print command
000017C2  103C 000E               1165      MOVE.B      #14,D0
000017C6  43F8 002C               1166      LEA         pr_MOVE,A1
000017CA  4E4F                    1167      TRAP        #15
000017CC                          1168      ** Print size
000017CC  43F8 0016               1169      LEA         pr_BYTE,A1
000017D0  4E4F                    1170      TRAP        #15
000017D2                          1171  
000017D2  6000 0032               1172      BRA         print_move
000017D6                          1173  
000017D6                          1174  MATCH_MOVE_W
000017D6                          1175      ** Move command size into D1
000017D6  123C 0002               1176      MOVE.B      #2,D1
000017DA                          1177      ** Print command
000017DA  103C 000E               1178      MOVE.B      #14,D0
000017DE  43F8 002C               1179      LEA         pr_MOVE,A1
000017E2  4E4F                    1180      TRAP        #15
000017E4                          1181      ** Print size
000017E4  43F8 0019               1182      LEA         pr_WORD,A1
000017E8  4E4F                    1183      TRAP        #15
000017EA                          1184  
000017EA  6000 001A               1185      BRA         print_move
000017EE                          1186  
000017EE                          1187  MATCH_MOVE_L
000017EE                          1188      ** Move command size into D1
000017EE  123C 0004               1189      MOVE.B      #4,D1
000017F2                          1190      ** Print command
000017F2  103C 000E               1191      MOVE.B      #14,D0
000017F6  43F8 002C               1192      LEA         pr_MOVE,A1
000017FA  4E4F                    1193      TRAP        #15
000017FC                          1194      ** Print size
000017FC  43F8 001C               1195      LEA         pr_LONG,A1
00001800  4E4F                    1196      TRAP        #15
00001802                          1197  
00001802  6000 0002               1198      BRA         print_move
00001806                          1199  
00001806                          1200  print_move
00001806                          1201      ** Print space
00001806  43F8 0000               1202      LEA         pr_space,A1
0000180A  4E4F                    1203      TRAP        #15
0000180C                          1204      ** Decode right side ea
0000180C  1002                    1205      MOVE.B      D2,D0
0000180E  0200 003F               1206      ANDI.B      #%00111111,D0
00001812  4EB8 1694               1207      JSR         EADecoder
00001816                          1208      ** Add comma
00001816  103C 000E               1209      MOVE.B      #14,D0
0000181A  43F8 0014               1210      LEA         pr_comma,A1
0000181E  4E4F                    1211      TRAP        #15
00001820                          1212      ** Decode left side ea
00001820  3002                    1213      MOVE.W      D2,D0
00001822  0240 0FC0               1214      ANDI.W      #%0000111111000000,D0
00001826  EC48                    1215      LSR.W       #6,D0
00001828  4EB8 167C               1216      JSR         EADecoder_left
0000182C                          1217  
0000182C  6000 F8C4               1218      BRA         opdec_return
00001830                          1219  
00001830                          1220  
00001830                          1221  MATCH_MOVEQ
00001830                          1222      ** Print command
00001830  103C 000E               1223      MOVE.B      #14,D0
00001834  43F8 005B               1224      LEA         pr_MOVEQ,A1
00001838  4E4F                    1225      TRAP        #15
0000183A                          1226      ** Print space
0000183A  43F8 0000               1227      LEA         pr_space,A1
0000183E  4E4F                    1228      TRAP        #15
00001840                          1229      ** Print hex tag
00001840  43F8 0021               1230      LEA         pr_hextag,A1
00001844  4E4F                    1231      TRAP        #15
00001846                          1232      ** Print data
00001846  1202                    1233      MOVE.B      D2,D1
00001848  103C 000F               1234      MOVE.B      #15,D0
0000184C  2602                    1235      MOVE.L      D2,D3
0000184E  7410                    1236      MOVE.L      #16,D2
00001850  4E4F                    1237      TRAP        #15
00001852  2403                    1238      MOVE.L      D3,D2
00001854                          1239      ** Add comma
00001854  103C 000E               1240      MOVE.B      #14,D0
00001858  43F8 0014               1241      LEA         pr_comma,A1
0000185C  4E4F                    1242      TRAP        #15
0000185E                          1243      ** Decode register
0000185E  3002                    1244      MOVE.W      D2,D0
00001860  0240 0E00               1245      ANDI.W      #%0000111000000000,D0
00001864  EC48                    1246      LSR.W       #6,D0
00001866  4EB8 167C               1247      JSR         EADecoder_left
0000186A                          1248  
0000186A  6000 F886               1249      BRA         opdec_return
0000186E                          1250  
0000186E                          1251  
0000186E                          1252  MATCH_ADDI_B
0000186E                          1253      ** Move command size into D1
0000186E  123C 0002               1254      MOVE.B      #2,D1
00001872                          1255      ** Print command
00001872  103C 000E               1256      MOVE.B      #14,D0
00001876  43F8 0065               1257      LEA         pr_ADDI,A1
0000187A  4E4F                    1258      TRAP        #15
0000187C                          1259      ** Print size
0000187C  43F8 0016               1260      LEA         pr_BYTE,A1
00001880  4E4F                    1261      TRAP        #15
00001882                          1262  
00001882  6000 0032               1263      BRA         print_addi
00001886                          1264  
00001886                          1265  MATCH_ADDI_W
00001886                          1266      ** Move command size into D1
00001886  123C 0002               1267      MOVE.B      #2,D1
0000188A                          1268      ** Print command
0000188A  103C 000E               1269      MOVE.B      #14,D0
0000188E  43F8 0065               1270      LEA         pr_ADDI,A1
00001892  4E4F                    1271      TRAP        #15
00001894                          1272      ** Print size
00001894  43F8 0019               1273      LEA         pr_WORD,A1
00001898  4E4F                    1274      TRAP        #15
0000189A                          1275  
0000189A  6000 001A               1276      BRA         print_addi
0000189E                          1277  
0000189E                          1278  MATCH_ADDI_L
0000189E                          1279      ** Move command size into D1
0000189E  123C 0004               1280      MOVE.B      #4,D1
000018A2                          1281      ** Print command
000018A2  103C 000E               1282      MOVE.B      #14,D0
000018A6  43F8 0065               1283      LEA         pr_ADDI,A1
000018AA  4E4F                    1284      TRAP        #15
000018AC                          1285      ** Print size
000018AC  43F8 001C               1286      LEA         pr_LONG,A1
000018B0  4E4F                    1287      TRAP        #15
000018B2                          1288  
000018B2  6000 0002               1289      BRA         print_addi
000018B6                          1290  
000018B6                          1291  print_addi
000018B6                          1292      ** Print space
000018B6  43F8 0000               1293      LEA         pr_space,A1
000018BA  4E4F                    1294      TRAP        #15
000018BC                          1295      ** Print Immediate data
000018BC  103C 003C               1296      MOVE.B      #%00111100,D0
000018C0  4EB8 1694               1297      JSR         EADecoder
000018C4                          1298      ** Add comma
000018C4  103C 000E               1299      MOVE.B      #14,D0
000018C8  43F8 0014               1300      LEA         pr_comma,A1
000018CC  4E4F                    1301      TRAP        #15
000018CE                          1302      ** Decode right side ea
000018CE  1002                    1303      MOVE.B      D2,D0
000018D0  0200 003F               1304      ANDI.B      #%00111111,D0
000018D4  4EB8 1694               1305      JSR         EADecoder
000018D8                          1306  
000018D8  6000 F818               1307      BRA         opdec_return
000018DC                          1308  
000018DC                          1309  
000018DC                          1310  MATCH_ADD_TO_REG_B
000018DC                          1311      ** Move command size into D1
000018DC  123C 0002               1312      MOVE.B      #2,D1
000018E0                          1313      ** Print command
000018E0  103C 000E               1314      MOVE.B      #14,D0
000018E4  43F8 0061               1315      LEA         pr_ADD,A1
000018E8  4E4F                    1316      TRAP        #15
000018EA                          1317      ** Print size
000018EA  43F8 0016               1318      LEA         pr_BYTE,A1
000018EE  4E4F                    1319      TRAP        #15
000018F0                          1320  
000018F0  6000 007A               1321      BRA         print_add_to_reg
000018F4                          1322  
000018F4                          1323  MATCH_ADD_TO_REG_W
000018F4                          1324      ** Move command size into D1
000018F4  123C 0002               1325      MOVE.B      #2,D1
000018F8                          1326      ** Print command
000018F8  103C 000E               1327      MOVE.B      #14,D0
000018FC  43F8 0061               1328      LEA         pr_ADD,A1
00001900  4E4F                    1329      TRAP        #15
00001902                          1330      ** Print size
00001902  43F8 0019               1331      LEA         pr_WORD,A1
00001906  4E4F                    1332      TRAP        #15
00001908                          1333  
00001908  6000 0062               1334      BRA         print_add_to_reg
0000190C                          1335  
0000190C                          1336  MATCH_ADD_TO_REG_L
0000190C                          1337      ** Move command size into D1
0000190C  123C 0004               1338      MOVE.B      #4,D1
00001910                          1339      ** Print command
00001910  103C 000E               1340      MOVE.B      #14,D0
00001914  43F8 0061               1341      LEA         pr_ADD,A1
00001918  4E4F                    1342      TRAP        #15
0000191A                          1343      ** Print size
0000191A  43F8 001C               1344      LEA         pr_LONG,A1
0000191E  4E4F                    1345      TRAP        #15
00001920                          1346  
00001920  6000 004A               1347      BRA         print_add_to_reg
00001924                          1348  
00001924                          1349  MATCH_SUB_TO_DN_B
00001924                          1350      ** Move command size into D1
00001924  123C 0002               1351      MOVE.B      #2,D1
00001928                          1352      ** Print command
00001928  103C 000E               1353      MOVE.B      #14,D0
0000192C  43F8 006F               1354      LEA         pr_SUB,A1
00001930  4E4F                    1355      TRAP        #15
00001932                          1356      ** Print size
00001932  43F8 0016               1357      LEA         pr_BYTE,A1
00001936  4E4F                    1358      TRAP        #15
00001938                          1359  
00001938  6000 0032               1360      BRA         print_add_to_reg
0000193C                          1361  
0000193C                          1362  MATCH_SUB_TO_DN_W
0000193C                          1363      ** Move command size into D1
0000193C  123C 0002               1364      MOVE.B      #2,D1
00001940                          1365      ** Print command
00001940  103C 000E               1366      MOVE.B      #14,D0
00001944  43F8 006F               1367      LEA         pr_SUB,A1
00001948  4E4F                    1368      TRAP        #15
0000194A                          1369      ** Print size
0000194A  43F8 0019               1370      LEA         pr_WORD,A1
0000194E  4E4F                    1371      TRAP        #15
00001950                          1372  
00001950  6000 001A               1373      BRA         print_add_to_reg
00001954                          1374  
00001954                          1375  MATCH_SUB_TO_DN_L
00001954                          1376      ** Move command size into D1
00001954  123C 0004               1377      MOVE.B      #4,D1
00001958                          1378      ** Print command
00001958  103C 000E               1379      MOVE.B      #14,D0
0000195C  43F8 006F               1380      LEA         pr_SUB,A1
00001960  4E4F                    1381      TRAP        #15
00001962                          1382      ** Print size
00001962  43F8 001C               1383      LEA         pr_LONG,A1
00001966  4E4F                    1384      TRAP        #15
00001968                          1385  
00001968  6000 0002               1386      BRA         print_add_to_reg
0000196C                          1387  
0000196C                          1388  print_add_to_reg
0000196C                          1389      ** Print space
0000196C  43F8 0000               1390      LEA         pr_space,A1
00001970  4E4F                    1391      TRAP        #15
00001972                          1392      ** Print source
00001972  1002                    1393      MOVE.B      D2,D0
00001974  0200 003F               1394      ANDI.B      #%00111111,D0
00001978  4EB8 1694               1395      JSR         EADecoder
0000197C                          1396      ** Add comma
0000197C  103C 000E               1397      MOVE.B      #14,D0
00001980  43F8 0014               1398      LEA         pr_comma,A1
00001984  4E4F                    1399      TRAP        #15
00001986                          1400      ** Print destination
00001986  3002                    1401      MOVE.W      D2,D0
00001988  0240 0E00               1402      ANDI.W      #%0000111000000000,D0
0000198C  EC48                    1403      LSR.W       #6,D0
0000198E  4EB8 167C               1404      JSR         EADecoder_left
00001992                          1405  
00001992  6000 F75E               1406      BRA         opdec_return
00001996                          1407  
00001996                          1408  MATCH_ADD_TO_EA_B
00001996                          1409      ** Move command size into D1
00001996  123C 0002               1410      MOVE.B      #2,D1
0000199A                          1411      ** Print command
0000199A  103C 000E               1412      MOVE.B      #14,D0
0000199E  43F8 0061               1413      LEA         pr_ADD,A1
000019A2  4E4F                    1414      TRAP        #15
000019A4                          1415      ** Print size
000019A4  43F8 0016               1416      LEA         pr_BYTE,A1
000019A8  4E4F                    1417      TRAP        #15
000019AA                          1418  
000019AA  6000 007A               1419      BRA         print_add_to_ea
000019AE                          1420  
000019AE                          1421  MATCH_ADD_TO_EA_W
000019AE                          1422      ** Move command size into D1
000019AE  123C 0002               1423      MOVE.B      #2,D1
000019B2                          1424      ** Print command
000019B2  103C 000E               1425      MOVE.B      #14,D0
000019B6  43F8 0061               1426      LEA         pr_ADD,A1
000019BA  4E4F                    1427      TRAP        #15
000019BC                          1428      ** Print size
000019BC  43F8 0019               1429      LEA         pr_WORD,A1
000019C0  4E4F                    1430      TRAP        #15
000019C2                          1431  
000019C2  6000 0062               1432      BRA         print_add_to_ea
000019C6                          1433  
000019C6                          1434  MATCH_ADD_TO_EA_L
000019C6                          1435      ** Move command size into D1
000019C6  123C 0004               1436      MOVE.B      #4,D1
000019CA                          1437      ** Print command
000019CA  103C 000E               1438      MOVE.B      #14,D0
000019CE  43F8 0061               1439      LEA         pr_ADD,A1
000019D2  4E4F                    1440      TRAP        #15
000019D4                          1441      ** Print size
000019D4  43F8 001C               1442      LEA         pr_LONG,A1
000019D8  4E4F                    1443      TRAP        #15
000019DA                          1444  
000019DA  6000 004A               1445      BRA         print_add_to_ea
000019DE                          1446  
000019DE                          1447  MATCH_SUB_TO_EA_B
000019DE                          1448      ** Move command size into D1
000019DE  123C 0002               1449      MOVE.B      #2,D1
000019E2                          1450      ** Print command
000019E2  103C 000E               1451      MOVE.B      #14,D0
000019E6  43F8 006F               1452      LEA         pr_SUB,A1
000019EA  4E4F                    1453      TRAP        #15
000019EC                          1454      ** Print size
000019EC  43F8 0016               1455      LEA         pr_BYTE,A1
000019F0  4E4F                    1456      TRAP        #15
000019F2                          1457  
000019F2  6000 0032               1458      BRA         print_add_to_ea
000019F6                          1459  
000019F6                          1460  MATCH_SUB_TO_EA_W
000019F6                          1461      ** Move command size into D1
000019F6  123C 0002               1462      MOVE.B      #2,D1
000019FA                          1463      ** Print command
000019FA  103C 000E               1464      MOVE.B      #14,D0
000019FE  43F8 006F               1465      LEA         pr_SUB,A1
00001A02  4E4F                    1466      TRAP        #15
00001A04                          1467      ** Print size
00001A04  43F8 0019               1468      LEA         pr_WORD,A1
00001A08  4E4F                    1469      TRAP        #15
00001A0A                          1470  
00001A0A  6000 001A               1471      BRA         print_add_to_ea
00001A0E                          1472  
00001A0E                          1473  MATCH_SUB_TO_EA_L
00001A0E                          1474      ** Move command size into D1
00001A0E  123C 0004               1475      MOVE.B      #4,D1
00001A12                          1476      ** Print command
00001A12  103C 000E               1477      MOVE.B      #14,D0
00001A16  43F8 006F               1478      LEA         pr_SUB,A1
00001A1A  4E4F                    1479      TRAP        #15
00001A1C                          1480      ** Print size
00001A1C  43F8 001C               1481      LEA         pr_LONG,A1
00001A20  4E4F                    1482      TRAP        #15
00001A22                          1483  
00001A22  6000 0002               1484      BRA         print_add_to_ea
00001A26                          1485  
00001A26                          1486  print_add_to_ea
00001A26                          1487      ** Print space
00001A26  43F8 0000               1488      LEA         pr_space,A1
00001A2A  4E4F                    1489      TRAP        #15
00001A2C                          1490      ** Print Source
00001A2C  3002                    1491      MOVE.W      D2,D0
00001A2E  0240 0E00               1492      ANDI.W      #%0000111000000000,D0
00001A32  EC48                    1493      LSR.W       #6,D0
00001A34  4EB8 167C               1494      JSR         EADecoder_left
00001A38                          1495      ** Add comma
00001A38  103C 000E               1496      MOVE.B      #14,D0
00001A3C  43F8 0014               1497      LEA         pr_comma,A1
00001A40  4E4F                    1498      TRAP        #15
00001A42                          1499      ** Print source
00001A42  1002                    1500      MOVE.B      D2,D0
00001A44  0200 003F               1501      ANDI.B      #%00111111,D0
00001A48  4EB8 1694               1502      JSR         EADecoder
00001A4C                          1503  
00001A4C  6000 F6A4               1504      BRA         opdec_return
00001A50                          1505  
00001A50                          1506  
00001A50                          1507  MATCH_ADDQ_B
00001A50                          1508      ** Move command size into D1
00001A50  123C 0002               1509      MOVE.B      #2,D1
00001A54                          1510      ** Print command
00001A54  103C 000E               1511      MOVE.B      #14,D0
00001A58  43F8 006A               1512      LEA         pr_ADDQ,A1
00001A5C  4E4F                    1513      TRAP        #15
00001A5E                          1514      ** Print size
00001A5E  43F8 0016               1515      LEA         pr_BYTE,A1
00001A62  4E4F                    1516      TRAP        #15
00001A64                          1517  
00001A64  6000 0032               1518      BRA         print_addq
00001A68                          1519  
00001A68                          1520  MATCH_ADDQ_W
00001A68                          1521      ** Move command size into D1
00001A68  123C 0002               1522      MOVE.B      #2,D1
00001A6C                          1523      ** Print command
00001A6C  103C 000E               1524      MOVE.B      #14,D0
00001A70  43F8 006A               1525      LEA         pr_ADDQ,A1
00001A74  4E4F                    1526      TRAP        #15
00001A76                          1527      ** Print size
00001A76  43F8 0019               1528      LEA         pr_WORD,A1
00001A7A  4E4F                    1529      TRAP        #15
00001A7C                          1530  
00001A7C  6000 001A               1531      BRA         print_addq
00001A80                          1532  
00001A80                          1533  MATCH_ADDQ_L
00001A80                          1534      ** Move command size into D1
00001A80  123C 0004               1535      MOVE.B      #4,D1
00001A84                          1536      ** Print command
00001A84  103C 000E               1537      MOVE.B      #14,D0
00001A88  43F8 006A               1538      LEA         pr_ADDQ,A1
00001A8C  4E4F                    1539      TRAP        #15
00001A8E                          1540      ** Print size
00001A8E  43F8 001C               1541      LEA         pr_LONG,A1
00001A92  4E4F                    1542      TRAP        #15
00001A94                          1543  
00001A94  6000 0002               1544      BRA         print_addq
00001A98                          1545  
00001A98                          1546  print_addq
00001A98                          1547      ** Print space
00001A98  43F8 0000               1548      LEA         pr_space,A1
00001A9C  4E4F                    1549      TRAP        #15
00001A9E                          1550      ** Print hash
00001A9E  43F8 001F               1551      LEA         pr_hash,A1
00001AA2  4E4F                    1552      TRAP        #15
00001AA4                          1553      ** Print Immediate data
00001AA4  3602                    1554      MOVE.W      D2,D3 * Temporarily move op data
00001AA6  3202                    1555      MOVE.W      D2,D1
00001AA8  0241 0E00               1556      ANDI.W      #%0000111000000000,D1
00001AAC  EC49                    1557      LSR.W       #6,D1
00001AAE  E649                    1558      LSR.W       #3,D1
00001AB0  143C 0010               1559      MOVE.B      #16,D2
00001AB4  303C 000F               1560      MOVE.W      #15,D0
00001AB8  4E4F                    1561      TRAP        #15
00001ABA                          1562  
00001ABA  3403                    1563      MOVE.W      D3,D2 * Move op data back
00001ABC                          1564  
00001ABC                          1565      ** Add comma
00001ABC  103C 000E               1566      MOVE.B      #14,D0
00001AC0  43F8 0014               1567      LEA         pr_comma,A1
00001AC4  4E4F                    1568      TRAP        #15
00001AC6                          1569      ** Decode right side ea
00001AC6  1002                    1570      MOVE.B      D2,D0
00001AC8  0200 003F               1571      ANDI.B      #%00111111,D0
00001ACC  4EB8 1694               1572      JSR         EADecoder
00001AD0                          1573  
00001AD0  6000 F620               1574      BRA         opdec_return
00001AD4                          1575  
00001AD4                          1576  
00001AD4                          1577  MATCH_DIVU
00001AD4                          1578      ** Move command size into D1
00001AD4  123C 0002               1579      MOVE.B      #2,D1
00001AD8                          1580      ** Print command
00001AD8  103C 000E               1581      MOVE.B      #14,D0
00001ADC  43F8 0073               1582      LEA         pr_DIVU,A1
00001AE0  4E4F                    1583      TRAP        #15
00001AE2                          1584      ** Print size
00001AE2  43F8 0019               1585      LEA         pr_WORD,A1
00001AE6  4E4F                    1586      TRAP        #15
00001AE8                          1587      ** Print space
00001AE8  43F8 0000               1588      LEA         pr_space,A1
00001AEC  4E4F                    1589      TRAP        #15
00001AEE                          1590      ** Decode right side ea
00001AEE  1002                    1591      MOVE.B      D2,D0
00001AF0  0200 003F               1592      ANDI.B      #%00111111,D0
00001AF4  4EB8 1694               1593      JSR         EADecoder
00001AF8                          1594      ** Add comma
00001AF8  103C 000E               1595      MOVE.B      #14,D0
00001AFC  43F8 0014               1596      LEA         pr_comma,A1
00001B00  4E4F                    1597      TRAP        #15
00001B02                          1598      ** Decode left side ea
00001B02  3002                    1599      MOVE.W      D2,D0
00001B04  0240 0E00               1600      ANDI.W      #%0000111000000000,D0
00001B08  EC88                    1601      LSR.L       #6,D0
00001B0A  4EB8 167C               1602      JSR         EADecoder_left
00001B0E                          1603  
00001B0E  6000 F5E2               1604      BRA         opdec_return
00001B12                          1605  
00001B12                          1606  
00001B12                          1607  
00001B12                          1608  MATCH_MOVEM_TO_MEM_W
00001B12                          1609      ** Move command size into D1
00001B12  123C 0002               1610      MOVE.B      #2,D1
00001B16                          1611      ** Print command
00001B16  103C 000E               1612      MOVE.B      #14,D0
00001B1A  43F8 0037               1613      LEA         pr_MOVEM,A1
00001B1E  4E4F                    1614      TRAP        #15
00001B20                          1615      ** Print size
00001B20  43F8 0019               1616      LEA         pr_WORD,A1
00001B24  4E4F                    1617      TRAP        #15
00001B26                          1618  
00001B26  6000 0016               1619      BRA         print_movem_to_mem
00001B2A                          1620  MATCH_MOVEM_TO_MEM_L
00001B2A                          1621      ** Move command size into D1
00001B2A  123C 0004               1622      MOVE.B      #4,D1
00001B2E                          1623      ** Print command
00001B2E  103C 000E               1624      MOVE.B      #14,D0
00001B32  43F8 0037               1625      LEA         pr_MOVEM,A1
00001B36  4E4F                    1626      TRAP        #15
00001B38                          1627      ** Print size
00001B38  43F8 001C               1628      LEA         pr_LONG,A1
00001B3C  4E4F                    1629      TRAP        #15
00001B3E                          1630  print_movem_to_mem
00001B3E                          1631      ** Print space
00001B3E  43F8 0000               1632      LEA         pr_space,A1
00001B42  4E4F                    1633      TRAP        #15
00001B44                          1634      
00001B44  6100 001E               1635      BSR         print_movem_mask_to_mem
00001B48                          1636      ** Add comma
00001B48  103C 000E               1637      MOVE.B      #14,D0
00001B4C  43F8 0014               1638      LEA         pr_comma,A1
00001B50  4E4F                    1639      TRAP        #15
00001B52                          1640      ** Decode right side ea
00001B52  1002                    1641      MOVE.B      D2,D0
00001B54  0200 003F               1642      ANDI.B      #%00111111,D0
00001B58  4EB8 1694               1643      JSR         EADecoder
00001B5C                          1644  
00001B5C  6000 F594               1645      BRA         opdec_return
00001B60                          1646          
00001B60                          1647      
00001B60                          1648  MATCH_MOVEM_TO_REG_W
00001B60  3A02                    1649      MOVE.W      D2,D5       *REMOVE
00001B62                          1650      
00001B62                          1651  MATCH_MOVEM_TO_REG_L
00001B62  3A02                    1652      MOVE.W      D2,D5       *REMOVE
00001B64                          1653      
00001B64                          1654      
00001B64                          1655  print_movem_mask_to_mem
00001B64  48A7 FF7E               1656      MOVEM       D0-D7/A1-A6,-(SP)
00001B68                          1657  
00001B68  4243                    1658      CLR         D3          ** Temp register
00001B6A  3810                    1659      MOVE.W      (A0),D4     ** Holds direct registers
00001B6C  3A18                    1660      MOVE.W      (A0)+,D5    ** Holds address registers
00001B6E  0244 00FF               1661      ANDI.W      #%0000000011111111,D4
00001B72  0245 FF00               1662      ANDI.W      #%1111111100000000,D5
00001B76  E04D                    1663      LSR.W       #8,D5
00001B78                          1664      
00001B78  6100 0012               1665      BSR         print_movem_dn
00001B7C                          1666      
00001B7C                          1667      ** Print ADDRESS REG slash
00001B7C  103C 000E               1668      MOVE.B      #14,D0
00001B80  43F8 0026               1669      LEA         pr_slash,A1
00001B84  4E4F                    1670      TRAP        #15
00001B86                          1671      
00001B86                          1672      *BSR         print_movem_an
00001B86                          1673      
00001B86  4C9F 7EFF               1674      MOVEM       (SP)+,D0-D7/A1-A6
00001B8A  4E75                    1675      RTS
00001B8C                          1676      
00001B8C                          1677      
00001B8C                          1678  print_movem_dn
00001B8C                          1679      
00001B8C                          1680  to_mem_d0 *************************** D0
00001B8C                          1681      ** Test bit
00001B8C  0804 0007               1682      BTST        #7,D4
00001B90  6700 0018               1683      BEQ         to_mem_d1
00001B94                          1684      ** Print register
00001B94  103C 000E               1685      MOVE.B      #14,D0
00001B98  43F8 00C5               1686      LEA         pr_d0,A1
00001B9C  4E4F                    1687      TRAP        #15
00001B9E                          1688      
00001B9E                          1689      ** Check if next bit is clear
00001B9E                          1690      ** If true, skip next
00001B9E  0804 0006               1691      BTST        #6,D4
00001BA2  6700 0024               1692      BEQ         to_mem_d2
00001BA6                          1693      ** Else, check cascade
00001BA6  6000 00CA               1694      BRA         cascade_d1
00001BAA                          1695  
00001BAA                          1696  to_mem_d1 *************************** D1
00001BAA                          1697      ** Test bit
00001BAA  0804 0006               1698      BTST        #6,D4
00001BAE  6700 0018               1699      BEQ         to_mem_d2
00001BB2                          1700      ** Print register
00001BB2  103C 000E               1701      MOVE.B      #14,D0
00001BB6  43F8 00C8               1702      LEA         pr_d1,A1
00001BBA  4E4F                    1703      TRAP        #15
00001BBC                          1704      
00001BBC                          1705      ** Check if next bit is clear
00001BBC                          1706      ** If true, skip next
00001BBC  0804 0005               1707      BTST        #5,D4
00001BC0  6700 0024               1708      BEQ         to_mem_d3
00001BC4                          1709      ** Else, check cascade
00001BC4  6000 00C4               1710      BRA         cascade_d2
00001BC8                          1711  
00001BC8                          1712  to_mem_d2 *************************** D2
00001BC8                          1713      ** Test bit
00001BC8  0804 0005               1714      BTST        #5,D4
00001BCC  6700 0018               1715      BEQ         to_mem_d3
00001BD0                          1716      ** Print register
00001BD0  103C 000E               1717      MOVE.B      #14,D0
00001BD4  43F8 00CB               1718      LEA         pr_d2,A1
00001BD8  4E4F                    1719      TRAP        #15
00001BDA                          1720      
00001BDA                          1721      ** Check if next bit is clear
00001BDA                          1722      ** If true, skip next
00001BDA  0804 0004               1723      BTST        #4,D4
00001BDE  6700 0024               1724      BEQ         to_mem_d4
00001BE2                          1725      ** Else, check cascade
00001BE2  6000 00BE               1726      BRA         cascade_d3
00001BE6                          1727  
00001BE6                          1728  to_mem_d3 *************************** D3
00001BE6                          1729      ** Test bit
00001BE6  0804 0004               1730      BTST        #4,D4
00001BEA  6700 0018               1731      BEQ         to_mem_d4
00001BEE                          1732      ** Print register
00001BEE  103C 000E               1733      MOVE.B      #14,D0
00001BF2  43F8 00CE               1734      LEA         pr_d3,A1
00001BF6  4E4F                    1735      TRAP        #15
00001BF8                          1736      
00001BF8                          1737      ** Check if next bit is clear
00001BF8                          1738      ** If true, skip next
00001BF8  0804 0003               1739      BTST        #3,D4
00001BFC  6700 0024               1740      BEQ         to_mem_d5
00001C00                          1741      ** Else, check cascade
00001C00  6000 00B8               1742      BRA         cascade_d4
00001C04                          1743  
00001C04                          1744  to_mem_d4 *************************** D4
00001C04                          1745      ** Test bit
00001C04  0804 0003               1746      BTST        #3,D4
00001C08  6700 0018               1747      BEQ         to_mem_d5
00001C0C                          1748      ** Print register
00001C0C  103C 000E               1749      MOVE.B      #14,D0
00001C10  43F8 00D1               1750      LEA         pr_d4,A1
00001C14  4E4F                    1751      TRAP        #15
00001C16                          1752      
00001C16                          1753      ** Check if next bit is clear
00001C16                          1754      ** If true, skip next
00001C16  0804 0002               1755      BTST        #2,D4
00001C1A  6700 0024               1756      BEQ         to_mem_d6
00001C1E                          1757      ** Else, check cascade
00001C1E  6000 00B2               1758      BRA         cascade_d5
00001C22                          1759  
00001C22                          1760  to_mem_d5 *************************** D5
00001C22                          1761      ** Test bit
00001C22  0804 0002               1762      BTST        #2,D4
00001C26  6700 0018               1763      BEQ         to_mem_d6
00001C2A                          1764      ** Print register
00001C2A  103C 000E               1765      MOVE.B      #14,D0
00001C2E  43F8 00D4               1766      LEA         pr_d5,A1
00001C32  4E4F                    1767      TRAP        #15
00001C34                          1768      
00001C34                          1769      ** Check if next bit is clear
00001C34                          1770      ** If true, skip next
00001C34  0804 0001               1771      BTST        #1,D4
00001C38  6700 0024               1772      BEQ         to_mem_d7
00001C3C                          1773      ** Else, check cascade
00001C3C  6000 00AC               1774      BRA         cascade_d6
00001C40                          1775  
00001C40                          1776  to_mem_d6 *************************** D6
00001C40                          1777      ** Test bit
00001C40  0804 0001               1778      BTST        #1,D4
00001C44  6700 0018               1779      BEQ         to_mem_d7
00001C48                          1780      ** Print register
00001C48  103C 000E               1781      MOVE.B      #14,D0
00001C4C  43F8 00D7               1782      LEA         pr_d6,A1
00001C50  4E4F                    1783      TRAP        #15
00001C52                          1784      
00001C52                          1785      ** Check if next bit is clear
00001C52                          1786      ** If true, skip next
00001C52  0804 0000               1787      BTST        #0,D4
00001C56  6700 0018               1788      BEQ         print_movem_dn_end
00001C5A                          1789      ** Else, check cascade
00001C5A  6000 00A6               1790      BRA         cascade_d7
00001C5E                          1791      
00001C5E                          1792  to_mem_d7 *************************** D7
00001C5E                          1793      ** Test bit
00001C5E  0804 0000               1794      BTST        #0,D4
00001C62  6700 000C               1795      BEQ         print_movem_dn_end
00001C66                          1796      ** Print register
00001C66  103C 000E               1797      MOVE.B      #14,D0
00001C6A  43F8 00D7               1798      LEA         pr_d6,A1
00001C6E  4E4F                    1799      TRAP        #15
00001C70                          1800      
00001C70                          1801  print_movem_dn_end
00001C70  4E75                    1802      RTS
00001C72                          1803      
00001C72                          1804  
00001C72                          1805  cascade_d1 *************************** -D1
00001C72                          1806      ** If the next bit is set, check next
00001C72  0804 0005               1807      BTST        #5,D4
00001C76  6600 0012               1808      BNE         cascade_d2
00001C7A                          1809      ** Else, finish the list
00001C7A  43F8 0024               1810      LEA         pr_hyphen,A1
00001C7E  4E4F                    1811      TRAP        #15
00001C80  43F8 00C8               1812      LEA         pr_D1,A1
00001C84  4E4F                    1813      TRAP        #15
00001C86                          1814      
00001C86  6000 FF5E               1815      BRA         to_mem_d3
00001C8A                          1816      
00001C8A                          1817  cascade_d2 *************************** -D2
00001C8A                          1818      ** If the next bit is set, check next
00001C8A  0804 0004               1819      BTST        #4,D4
00001C8E  6600 0012               1820      BNE         cascade_d3
00001C92                          1821      ** Else, finish the list
00001C92  43F8 0024               1822      LEA         pr_hyphen,A1
00001C96  4E4F                    1823      TRAP        #15
00001C98  43F8 00CB               1824      LEA         pr_D2,A1
00001C9C  4E4F                    1825      TRAP        #15
00001C9E                          1826      
00001C9E  6000 FF64               1827      BRA         to_mem_d4
00001CA2                          1828      
00001CA2                          1829  cascade_d3 *************************** -D3
00001CA2                          1830      ** If the next bit is set, check next
00001CA2  0804 0003               1831      BTST        #3,D4
00001CA6  6600 0012               1832      BNE         cascade_d4
00001CAA                          1833      ** Else, finish the list
00001CAA  43F8 0024               1834      LEA         pr_hyphen,A1
00001CAE  4E4F                    1835      TRAP        #15
00001CB0  43F8 00CE               1836      LEA         pr_D3,A1
00001CB4  4E4F                    1837      TRAP        #15
00001CB6                          1838      
00001CB6  6000 FF6A               1839      BRA         to_mem_d5
00001CBA                          1840      
00001CBA                          1841  cascade_d4 *************************** -D4
00001CBA                          1842      ** If the next bit is set, check next
00001CBA  0804 0002               1843      BTST        #2,D4
00001CBE  6600 0012               1844      BNE         cascade_d5
00001CC2                          1845      ** Else, finish the list
00001CC2  43F8 0024               1846      LEA         pr_hyphen,A1
00001CC6  4E4F                    1847      TRAP        #15
00001CC8  43F8 00D1               1848      LEA         pr_D4,A1
00001CCC  4E4F                    1849      TRAP        #15
00001CCE                          1850      
00001CCE  6000 FF70               1851      BRA         to_mem_d6
00001CD2                          1852      
00001CD2                          1853  cascade_d5 *************************** -D5
00001CD2                          1854      ** If the next bit is set, check next
00001CD2  0804 0001               1855      BTST        #1,D4
00001CD6  6600 0012               1856      BNE         cascade_d6
00001CDA                          1857      ** Else, finish the list
00001CDA  43F8 0024               1858      LEA         pr_hyphen,A1
00001CDE  4E4F                    1859      TRAP        #15
00001CE0  43F8 00D4               1860      LEA         pr_D5,A1
00001CE4  4E4F                    1861      TRAP        #15
00001CE6                          1862      
00001CE6  6000 FF76               1863      BRA         to_mem_d7
00001CEA                          1864      
00001CEA                          1865  cascade_d6 *************************** -D6
00001CEA                          1866      ** If the next bit is set, check next
00001CEA  0804 0000               1867      BTST        #0,D4
00001CEE  6600 0012               1868      BNE         cascade_d7
00001CF2                          1869      ** Else, finish the list
00001CF2  43F8 0024               1870      LEA         pr_hyphen,A1
00001CF6  4E4F                    1871      TRAP        #15
00001CF8  43F8 00D7               1872      LEA         pr_D6,A1
00001CFC  4E4F                    1873      TRAP        #15
00001CFE                          1874      
00001CFE  6000 FF70               1875      BRA         print_movem_dn_end
00001D02                          1876      
00001D02                          1877  cascade_d7 *************************** -D7
00001D02                          1878      ** Else, finish the list
00001D02  43F8 0024               1879      LEA         pr_hyphen,A1
00001D06  4E4F                    1880      TRAP        #15
00001D08  43F8 00DA               1881      LEA         pr_D7,A1
00001D0C  4E4F                    1882      TRAP        #15
00001D0E                          1883      
00001D0E  6000 FF60               1884      BRA         print_movem_dn_end
00001D12                          1885  
00001D12                          1886  
00001D12                          1887  print_movem_an
00001D12                          1888  
00001D12                          1889  to_mem_a0
00001D12                          1890  to_mem_a1
00001D12                          1891  to_mem_a2
00001D12                          1892  to_mem_a3
00001D12                          1893  to_mem_a4
00001D12                          1894  to_mem_a5
00001D12                          1895  to_mem_a6
00001D12                          1896  to_mem_a7
00001D12                          1897      
00001D12                          1898      
00001D12                          1899  
00001D12                          1900  
00001D12                          1901  
00001D12                          1902  
00001D12                          1903  
00001D12                          1904  
00001D12                          1905  -------------------- end include --------------------
00001D12                          1906                  INCLUDE 'spencer_opcodes.x68'
00001D12  =0000000E               1907  SHIFT       EQU %1110
00001D12  =00000003               1908  RO          EQU %11
00001D12  =00000000               1909  AS          EQU %00
00001D12  =00000001               1910  LS          EQU %01
00001D12  =00000000               1911  R           EQU %0
00001D12  =00000001               1912  L           EQU %1
00001D12  =00000001               1913  SHIFT_register  EQU %1
00001D12  =00000000               1914  SHIFT_immed     EQU %0
00001D12  =00000000               1915  SHIFT_BYTE  EQU %00
00001D12  =00000001               1916  SHIFT_WORD  EQU %01
00001D12  =00000003               1917  SHIFT_LONG  EQU %11
00001D12                          1918  
00001D12                          1919  CHECK_SHIFT
00001D12  6100 010E               1920      BSR     Get_Count_Register_Val          * register 3
00001D16  6100 011E               1921      BSR     Get_Size                        * register 4
00001D1A  6100 012E               1922      BSR     Get_Direction                   * register 5
00001D1E  6100 013E               1923      BSR     Get_Is_Register_Or_Immediate    * register 6
00001D22  6100 0152               1924      BSR     Get_Shift_Opcode                * register 7
00001D26                          1925  
00001D26  6100 0024               1926      BSR     PrintShiftData
00001D2A                          1927  
00001D2A  6100 000C               1928      BSR     getShiftDestReg
00001D2E                          1929  
00001D2E  103C 0003               1930      MOVE.B  #3,D0
00001D32  4E4F                    1931      TRAP    #15
00001D34                          1932  
00001D34  6000 F3BC               1933      BRA         opdec_return
00001D38                          1934  
00001D38                          1935  getShiftDestReg
00001D38                          1936  
00001D38  48A7 2000               1937      MOVEM.W     D2, -(SP)
00001D3C                          1938  
00001D3C  123C 000D               1939      MOVE.B      #13,D1
00001D40  E3AA                    1940      LSL.L       D1,D2
00001D42  E2AA                    1941      LSR.L       D1,D2
00001D44  1202                    1942      MOVE.B      D2,D1
00001D46                          1943  
00001D46  4C9F 0004               1944      MOVEM.W     (SP)+,D2
00001D4A  4E75                    1945      RTS
00001D4C                          1946  
00001D4C                          1947  
00001D4C                          1948  PrintShiftData
00001D4C                          1949  
00001D4C  BE3C 0003               1950      CMP.B   #RO,D7
00001D50  6700 0012               1951      BEQ     printRotate
00001D54  BE3C 0000               1952      CMP.B   #AS,D7
00001D58  6700 0014               1953      BEQ     printArithShift
00001D5C  BE3C 0001               1954      CMP.B   #LS,D7
00001D60  6700 0016               1955      BEQ     printLogicShift
00001D64                          1956  
00001D64                          1957  printRotate
00001D64  43F8 007A               1958      LEA         pr_SHIFT_RO,A1
00001D68  4EF9 00001D82           1959      JMP         executeShiftOpcodePrint
00001D6E                          1960  printArithShift
00001D6E  43F8 007D               1961      LEA         pr_SHIFT_AS,A1
00001D72  4EF9 00001D82           1962      JMP         executeShiftOpcodePrint
00001D78                          1963  printLogicShift
00001D78  43F8 0080               1964      LEA         pr_SHIFT_LS,A1
00001D7C  4EF9 00001D82           1965      JMP         executeShiftOpcodePrint
00001D82                          1966  executeShiftOpcodePrint
00001D82  6100 0148               1967      BSR         PrintString
00001D86                          1968  
00001D86  BA3C 0000               1969      CMP.B   #R,D5
00001D8A  6700 000A               1970      BEQ     printShiftRight
00001D8E  BA3C 0001               1971      CMP.B   #L,D5
00001D92  6700 000C               1972      BEQ     printShiftLeft
00001D96                          1973  
00001D96                          1974  printShiftRight
00001D96  43F8 0085               1975      LEA         pr_SHIFT_R,A1
00001D9A  4EF9 00001DAA           1976      JMP         executePrintShiftdirection
00001DA0                          1977  printShiftLeft
00001DA0  43F8 0083               1978      LEA         pr_SHIFT_L,A1
00001DA4  4EF9 00001DAA           1979      JMP         executePrintShiftdirection
00001DAA                          1980  executePrintShiftdirection
00001DAA  6100 0120               1981      BSR         PrintString
00001DAE                          1982  
00001DAE  B83C 0000               1983      CMP.B   #SHIFT_BYTE,D4
00001DB2  6700 0012               1984      BEQ     printShiftByte
00001DB6  B83C 0001               1985      CMP.B   #SHIFT_WORD,D4
00001DBA  6700 0014               1986      BEQ     printShiftWord
00001DBE  B83C 0003               1987      CMP.B   #SHIFT_LONG,D4
00001DC2  6700 0016               1988      BEQ     printShiftLong
00001DC6                          1989  
00001DC6                          1990  printShiftByte
00001DC6  43F8 0016               1991      LEA     pr_BYTE,A1
00001DCA  4EF9 00001DE4           1992      JMP     executePrintShiftSize
00001DD0                          1993  printShiftWord
00001DD0  43F8 0019               1994      LEA     pr_WORD,A1
00001DD4  4EF9 00001DE4           1995      JMP     executePrintShiftSize
00001DDA                          1996  printShiftLong
00001DDA  43F8 001C               1997      LEA     pr_LONG,A1
00001DDE  4EF9 00001DE4           1998      JMP     executePrintShiftSize
00001DE4                          1999  executePrintShiftSize
00001DE4  6100 00E6               2000      BSR         PrintString
00001DE8  43F8 0000               2001      LEA     pr_space,A1
00001DEC  6100 00DE               2002      BSR     PrintString
00001DF0                          2003  
00001DF0  BC3C 0001               2004      CMP.B   #SHIFT_register,D6
00001DF4  6700 000A               2005      BEQ     printShiftReg
00001DF8  BC3C 0000               2006      CMP.B   #SHIFT_immed,D6
00001DFC  6700 000A               2007      BEQ     printShift
00001E00                          2008  
00001E00                          2009  printShiftReg
00001E00  43F8 0078               2010      LEA     pr_reg,A1
00001E04  6100 00C6               2011      BSR     PrintString
00001E08                          2012  printShift
00001E08  1203                    2013      MOVE.B  D3,D1
00001E0A  103C 0003               2014      MOVE.B  #3,D0
00001E0E  4E4F                    2015      TRAP    #15
00001E10                          2016  
00001E10  43F8 0014               2017      LEA     pr_comma,A1
00001E14  6100 00B6               2018      BSR     PrintString
00001E18  43F8 0078               2019      LEA     pr_reg,A1
00001E1C  6100 00AE               2020      BSR     PrintString
00001E20  4E75                    2021      RTS
00001E22                          2022  
00001E22                          2023  
00001E22                          2024  Get_Count_Register_Val
00001E22                          2025  
00001E22  48A7 2000               2026      MOVEM.W     D2, -(SP)
00001E26                          2027  
00001E26  123C 000D               2028      MOVE.B      #13,D1
00001E2A  E98A                    2029      LSL.L       #4,D2
00001E2C  E2AA                    2030      LSR.L       D1,D2
00001E2E  1602                    2031      MOVE.B      D2,D3
00001E30                          2032  
00001E30  4C9F 0004               2033      MOVEM.W     (SP)+,D2
00001E34  4E75                    2034      RTS
00001E36                          2035  
00001E36                          2036  Get_Size
00001E36                          2037  
00001E36  48A7 2000               2038      MOVEM.W     D2, -(SP)
00001E3A                          2039  
00001E3A  123C 000E               2040      MOVE.B      #14,D1
00001E3E  E18A                    2041      LSL.L       #8,D2
00001E40  E2AA                    2042      LSR.L       D1,D2
00001E42  1802                    2043      MOVE.B      D2,D4
00001E44                          2044  
00001E44  4C9F 0004               2045      MOVEM.W     (SP)+,D2
00001E48  4E75                    2046      RTS
00001E4A                          2047  Get_Direction
00001E4A                          2048  
00001E4A  48A7 2000               2049      MOVEM.W     D2, -(SP)
00001E4E                          2050  
00001E4E  123C 000F               2051      MOVE.B      #15,D1
00001E52  EF8A                    2052      LSL.L       #7,D2
00001E54  E2AA                    2053      LSR.L       D1,D2
00001E56  1A02                    2054      MOVE.B      D2,D5
00001E58                          2055  
00001E58  4C9F 0004               2056      MOVEM.W     (SP)+,D2
00001E5C  4E75                    2057      RTS
00001E5E                          2058  Get_Is_Register_Or_Immediate
00001E5E                          2059  
00001E5E  48A7 2000               2060      MOVEM.W     D2, -(SP)
00001E62                          2061  
00001E62  123C 000A               2062      MOVE.B      #10,D1
00001E66  E3AA                    2063      LSL.L       D1,D2
00001E68  123C 000F               2064      MOVE.B      #15,D1
00001E6C  E2AA                    2065      LSR.L       D1,D2
00001E6E                          2066  
00001E6E  1C02                    2067      MOVE.B      D2,D6
00001E70                          2068  
00001E70  4C9F 0004               2069      MOVEM.W     (SP)+,D2
00001E74  4E75                    2070      RTS
00001E76                          2071  
00001E76                          2072  Get_Shift_Opcode
00001E76                          2073  
00001E76  48A7 2000               2074      MOVEM.W     D2, -(SP)
00001E7A                          2075  
00001E7A  123C 000B               2076      MOVE.B      #11,D1
00001E7E  E3AA                    2077      LSL.L       D1,D2
00001E80  123C 000E               2078      MOVE.B      #14,D1
00001E84  E2AA                    2079      LSR.L       D1,D2
00001E86                          2080  
00001E86  1E02                    2081      MOVE.B      D2,D7
00001E88                          2082  
00001E88  4C9F 0004               2083      MOVEM.W     (SP)+,D2
00001E8C  4E75                    2084      RTS
00001E8E                          2085  
00001E8E                          2086  
00001E8E                          2087  MATCH_LSL
00001E8E  3A02                    2088      MOVE.W      D2,D5       *REMOVE
00001E90                          2089  MATCH_LSR
00001E90  3A02                    2090      MOVE.W      D2,D5       *REMOVE
00001E92                          2091  MATCH_ASR
00001E92  3A02                    2092      MOVE.W      D2,D5       *REMOVE
00001E94                          2093  MATCH_ASL
00001E94  3A02                    2094      MOVE.W      D2,D5       *REMOVE
00001E96                          2095  MATCH_ROL
00001E96  3A02                    2096      MOVE.W      D2,D5       *REMOVE
00001E98                          2097  MATCH_ROR
00001E98  3A02                    2098      MOVE.W      D2,D5       *REMOVE
00001E9A                          2099  
00001E9A                          2100  Get_BCC_Displacement_8bit
00001E9A                          2101  
00001E9A  4246                    2102      CLR     D6
00001E9C  1C02                    2103      MOVE.B  D2,D6
00001E9E  4E75                    2104      RTS
00001EA0                          2105  Get_BCC_Displacement_16bit
00001EA0                          2106  
00001EA0  4246                    2107      CLR     D6
00001EA2  3C18                    2108      MOVE.W  (A0)+,D6
00001EA4  4E75                    2109      RTS
00001EA6                          2110  Get_BCC_Displacement_32bit
00001EA6                          2111  
00001EA6  4246                    2112      CLR     D6
00001EA8  2C18                    2113      MOVE.L  (A0)+,D6
00001EAA  4E75                    2114      RTS
00001EAC                          2115  Get_Current_Address
00001EAC                          2116  
00001EAC  4247                    2117      CLR     D7
00001EAE  2E08                    2118      MOVE.L      A0,D7
00001EB0  5587                    2119      SUBI.L      #2,D7
00001EB2  4E75                    2120      RTS
00001EB4                          2121  Get_BCC_Destination_Address
00001EB4                          2122  
00001EB4  9E86                    2123      SUB.L   D6,D7
00001EB6  4E75                    2124      RTS
00001EB8                          2125  
00001EB8                          2126  PrintHex
00001EB8                          2127  
00001EB8  48A7 2000               2128      MOVEM.W     D2, -(SP)
00001EBC                          2129  
00001EBC  103C 000F               2130      MOVE.B      #15,D0
00001EC0  143C 0010               2131      MOVE.B      #16,D2 * print base 16
00001EC4  4E4F                    2132      TRAP        #15
00001EC6                          2133  
00001EC6  4C9F 0004               2134      MOVEM.W     (SP)+,D2
00001ECA  4E75                    2135      RTS
00001ECC                          2136  PrintString
00001ECC  103C 000E               2137      MOVE.B      #14,D0
00001ED0  4E4F                    2138      TRAP        #15
00001ED2  4E75                    2139      RTS
00001ED4                          2140  PrintSizeByte
00001ED4  103C 000E               2141      MOVE.B      #14,D0
00001ED8  43F8 0016               2142      LEA         pr_BYTE,A1
00001EDC  4E4F                    2143      TRAP        #15
00001EDE  4E75                    2144      RTS
00001EE0                          2145  PrintSizeWord
00001EE0  103C 000E               2146      MOVE.B      #14,D0
00001EE4  43F8 0019               2147      LEA         pr_WORD,A1
00001EE8  4E4F                    2148      TRAP        #15
00001EEA  4E75                    2149      RTS
00001EEC                          2150  PrintSizeLong
00001EEC  103C 000E               2151      MOVE.B      #14,D0
00001EF0  43F8 001C               2152      LEA         pr_LONG,A1
00001EF4  4E4F                    2153      TRAP        #15
00001EF6  4E75                    2154      RTS
00001EF8                          2155  
00001EF8                          2156  
00001EF8                          2157  MATCH_CC_T_8
00001EF8  3A02                    2158      MOVE.W      D2,D5       *REMOVE
00001EFA                          2159  MATCH_CC_T_16
00001EFA  3A02                    2160      MOVE.W      D2,D5       *REMOVE
00001EFC                          2161  MATCH_CC_T_32
00001EFC  3A02                    2162      MOVE.W      D2,D5       *REMOVE
00001EFE                          2163  MATCH_CC_F_8
00001EFE  3A02                    2164      MOVE.W      D2,D5       *REMOVE
00001F00                          2165  MATCH_CC_F_16
00001F00  3A02                    2166      MOVE.W      D2,D5       *REMOVE
00001F02                          2167  MATCH_CC_F_32
00001F02  3A02                    2168      MOVE.W      D2,D5       *REMOVE
00001F04                          2169  MATCH_CC_HI_8
00001F04                          2170      ** print opcode **
00001F04  43F8 00A1               2171      LEA         pr_BCC_HI,A1
00001F08  61C2                    2172      BSR         PrintString
00001F0A                          2173  
00001F0A  61C8                    2174      BSR         PrintSizeBYTE
00001F0C  43F8 0000               2175      LEA         pr_space,A1
00001F10  61BA                    2176      BSR         PrintString
00001F12                          2177  
00001F12                          2178      ** print address **
00001F12  6186                    2179      BSR         Get_BCC_Displacement_8bit
00001F14  6196                    2180      BSR         Get_Current_Address
00001F16  619C                    2181      BSR         Get_BCC_Destination_Address
00001F18  2207                    2182      MOVE.L      D7,D1
00001F1A  619C                    2183      BSR         PrintHex
00001F1C                          2184  
00001F1C  6000 F1D4               2185      BRA         opdec_return
00001F20                          2186  
00001F20                          2187  MATCH_CC_HI_16
00001F20                          2188      ** print opcode **
00001F20  43F8 00A1               2189      LEA         pr_BCC_HI,A1
00001F24  61A6                    2190      BSR         PrintString
00001F26                          2191  
00001F26  61B8                    2192      BSR         PrintSizeWORD
00001F28  43F8 0000               2193      LEA         pr_space,A1
00001F2C  619E                    2194      BSR         PrintString
00001F2E                          2195  
00001F2E                          2196      ** print address **
00001F2E  6100 FF70               2197      BSR         Get_BCC_Displacement_16bit
00001F32  6100 FF78               2198      BSR         Get_Current_Address
00001F36  6100 FF7C               2199      BSR         Get_BCC_Destination_Address
00001F3A  2207                    2200      MOVE.L      D7,D1
00001F3C  6100 FF7A               2201      BSR         PrintHex
00001F40                          2202  
00001F40  6000 F1B0               2203      BRA         opdec_return
00001F44                          2204  MATCH_CC_HI_32
00001F44                          2205      ** print opcode **
00001F44  43F8 00A1               2206      LEA         pr_BCC_HI,A1
00001F48  6182                    2207      BSR         PrintString
00001F4A                          2208  
00001F4A  61A0                    2209      BSR         PrintSizeLONG
00001F4C  43F8 0000               2210      LEA         pr_space,A1
00001F50  6100 FF7A               2211      BSR         PrintString
00001F54                          2212  
00001F54                          2213      ** print address **
00001F54  6100 FF50               2214      BSR         Get_BCC_Displacement_32bit
00001F58  6100 FF52               2215      BSR         Get_Current_Address
00001F5C  6100 FF56               2216      BSR         Get_BCC_Destination_Address
00001F60  2207                    2217      MOVE.L      D7,D1
00001F62  6100 FF54               2218      BSR         PrintHex
00001F66                          2219  
00001F66  6000 F18A               2220      BRA         opdec_return
00001F6A                          2221  MATCH_CC_LS_8
00001F6A                          2222      ** print opcode **
00001F6A  43F8 00A9               2223      LEA         pr_BCC_LS,A1
00001F6E  6100 FF5C               2224      BSR         PrintString
00001F72                          2225  
00001F72  6100 FF60               2226      BSR         PrintSizeBYTE
00001F76  43F8 0000               2227      LEA         pr_space,A1
00001F7A  6100 FF50               2228      BSR         PrintString
00001F7E                          2229  
00001F7E                          2230      ** print address **
00001F7E  6100 FF1A               2231      BSR         Get_BCC_Displacement_8bit
00001F82  6100 FF28               2232      BSR         Get_Current_Address
00001F86  6100 FF2C               2233      BSR         Get_BCC_Destination_Address
00001F8A  2207                    2234      MOVE.L      D7,D1
00001F8C  6100 FF2A               2235      BSR         PrintHex
00001F90                          2236  
00001F90  6000 F160               2237      BRA         opdec_return
00001F94                          2238  MATCH_CC_LS_16
00001F94                          2239      ** print opcode **
00001F94  43F8 00A9               2240      LEA         pr_BCC_LS,A1
00001F98  6100 FF32               2241      BSR         PrintString
00001F9C                          2242  
00001F9C  6100 FF42               2243      BSR         PrintSizeWORD
00001FA0  43F8 0000               2244      LEA         pr_space,A1
00001FA4  6100 FF26               2245      BSR         PrintString
00001FA8                          2246  
00001FA8                          2247      ** print address **
00001FA8  6100 FEF6               2248      BSR         Get_BCC_Displacement_16bit
00001FAC  6100 FEFE               2249      BSR         Get_Current_Address
00001FB0  6100 FF02               2250      BSR         Get_BCC_Destination_Address
00001FB4  2207                    2251      MOVE.L      D7,D1
00001FB6  6100 FF00               2252      BSR         PrintHex
00001FBA                          2253  
00001FBA  6000 F136               2254      BRA         opdec_return
00001FBE                          2255  
00001FBE                          2256  MATCH_CC_LS_32
00001FBE                          2257      ** print opcode **
00001FBE  43F8 00A9               2258      LEA         pr_BCC_LS,A1
00001FC2  6100 FF08               2259      BSR         PrintString
00001FC6                          2260  
00001FC6  6100 FF24               2261      BSR         PrintSizeLONG
00001FCA  43F8 0000               2262      LEA         pr_space,A1
00001FCE  6100 FEFC               2263      BSR         PrintString
00001FD2                          2264  
00001FD2                          2265      ** print address **
00001FD2  6100 FED2               2266      BSR         Get_BCC_Displacement_32bit
00001FD6  6100 FED4               2267      BSR         Get_Current_Address
00001FDA  6100 FED8               2268      BSR         Get_BCC_Destination_Address
00001FDE  2207                    2269      MOVE.L      D7,D1
00001FE0  6100 FED6               2270      BSR         PrintHex
00001FE4                          2271  
00001FE4  6000 F10C               2272      BRA         opdec_return
00001FE8                          2273  MATCH_CC_CC_8
00001FE8                          2274  
00001FE8                          2275      ** print opcode **
00001FE8  43F8 008D               2276      LEA         pr_BCC_CC,A1
00001FEC  6100 FEDE               2277      BSR         PrintString
00001FF0                          2278  
00001FF0  6100 FEE2               2279      BSR         PrintSizeBYTE
00001FF4  43F8 0000               2280      LEA         pr_space,A1
00001FF8  6100 FED2               2281      BSR         PrintString
00001FFC                          2282  
00001FFC                          2283      ** print address **
00001FFC  6100 FE9C               2284      BSR         Get_BCC_Displacement_8bit
00002000  6100 FEAA               2285      BSR         Get_Current_Address
00002004  6100 FEAE               2286      BSR         Get_BCC_Destination_Address
00002008  2207                    2287      MOVE.L      D7,D1
0000200A  6100 FEAC               2288      BSR         PrintHex
0000200E                          2289  
0000200E  6000 F0E2               2290      BRA         opdec_return
00002012                          2291  
00002012                          2292  MATCH_CC_CC_16
00002012                          2293      ** print opcode **
00002012  43F8 008D               2294      LEA         pr_BCC_CC,A1
00002016  6100 FEB4               2295      BSR         PrintString
0000201A                          2296  
0000201A  6100 FEC4               2297      BSR         PrintSizeWORD
0000201E  43F8 0000               2298      LEA         pr_space,A1
00002022  6100 FEA8               2299      BSR         PrintString
00002026                          2300  
00002026                          2301      ** print address **
00002026  6100 FE78               2302      BSR         Get_BCC_Displacement_16bit
0000202A  6100 FE80               2303      BSR         Get_Current_Address
0000202E  6100 FE84               2304      BSR         Get_BCC_Destination_Address
00002032  2207                    2305      MOVE.L      D7,D1
00002034  6100 FE82               2306      BSR         PrintHex
00002038                          2307  
00002038  6000 F0B8               2308      BRA         opdec_return
0000203C                          2309  MATCH_CC_CC_32
0000203C                          2310      ** print opcode **
0000203C  43F8 008D               2311      LEA         pr_BCC_CC,A1
00002040  6100 FE8A               2312      BSR         PrintString
00002044                          2313  
00002044  6100 FEA6               2314      BSR         PrintSizeLONG
00002048  43F8 0000               2315      LEA         pr_space,A1
0000204C  6100 FE7E               2316      BSR         PrintString
00002050                          2317  
00002050                          2318      ** print address **
00002050  6100 FE54               2319      BSR         Get_BCC_Displacement_32bit
00002054  6100 FE56               2320      BSR         Get_Current_Address
00002058  6100 FE5A               2321      BSR         Get_BCC_Destination_Address
0000205C  2207                    2322      MOVE.L      D7,D1
0000205E  6100 FE58               2323      BSR         PrintHex
00002062                          2324  
00002062  6000 F08E               2325      BRA         opdec_return
00002066                          2326  MATCH_CC_CS_8
00002066                          2327      ** print opcode **
00002066  43F8 0091               2328      LEA         pr_BCC_CS,A1
0000206A  6100 FE60               2329      BSR         PrintString
0000206E                          2330  
0000206E  6100 FE64               2331      BSR         PrintSizeBYTE
00002072  43F8 0000               2332      LEA         pr_space,A1
00002076  6100 FE54               2333      BSR         PrintString
0000207A                          2334  
0000207A                          2335      ** print address **
0000207A  6100 FE1E               2336      BSR         Get_BCC_Displacement_8bit
0000207E  6100 FE2C               2337      BSR         Get_Current_Address
00002082  6100 FE30               2338      BSR         Get_BCC_Destination_Address
00002086  2207                    2339      MOVE.L      D7,D1
00002088  6100 FE2E               2340      BSR         PrintHex
0000208C                          2341  
0000208C  6000 F064               2342      BRA         opdec_return
00002090                          2343  MATCH_CC_CS_16
00002090                          2344      ** print opcode **
00002090  43F8 0091               2345      LEA         pr_BCC_CS,A1
00002094  6100 FE36               2346      BSR         PrintString
00002098                          2347  
00002098  6100 FE46               2348      BSR         PrintSizeWORD
0000209C  43F8 0000               2349      LEA         pr_space,A1
000020A0  6100 FE2A               2350      BSR         PrintString
000020A4                          2351  
000020A4                          2352      ** print address **
000020A4  6100 FDFA               2353      BSR         Get_BCC_Displacement_16bit
000020A8  6100 FE02               2354      BSR         Get_Current_Address
000020AC  6100 FE06               2355      BSR         Get_BCC_Destination_Address
000020B0  2207                    2356      MOVE.L      D7,D1
000020B2  6100 FE04               2357      BSR         PrintHex
000020B6                          2358  
000020B6  6000 F03A               2359      BRA         opdec_return
000020BA                          2360  MATCH_CC_CS_32
000020BA                          2361      ** print opcode **
000020BA  43F8 0091               2362      LEA         pr_BCC_CS,A1
000020BE  6100 FE0C               2363      BSR         PrintString
000020C2                          2364  
000020C2  6100 FE28               2365      BSR         PrintSizeLONG
000020C6  43F8 0000               2366      LEA         pr_space,A1
000020CA  6100 FE00               2367      BSR         PrintString
000020CE                          2368  
000020CE                          2369      ** print address **
000020CE  6100 FDD6               2370      BSR         Get_BCC_Displacement_32bit
000020D2  6100 FDD8               2371      BSR         Get_Current_Address
000020D6  6100 FDDC               2372      BSR         Get_BCC_Destination_Address
000020DA  2207                    2373      MOVE.L      D7,D1
000020DC  6100 FDDA               2374      BSR         PrintHex
000020E0                          2375  
000020E0  6000 F010               2376      BRA         opdec_return
000020E4                          2377  MATCH_CC_NE_8
000020E4                          2378      ** print opcode **
000020E4  43F8 00B5               2379      LEA         pr_BCC_NE,A1
000020E8  6100 FDE2               2380      BSR         PrintString
000020EC                          2381  
000020EC  6100 FDE6               2382      BSR         PrintSizeBYTE
000020F0  43F8 0000               2383      LEA         pr_space,A1
000020F4  6100 FDD6               2384      BSR         PrintString
000020F8                          2385  
000020F8                          2386      ** print address **
000020F8  6100 FDA0               2387      BSR         Get_BCC_Displacement_8bit
000020FC  6100 FDAE               2388      BSR         Get_Current_Address
00002100  6100 FDB2               2389      BSR         Get_BCC_Destination_Address
00002104  2207                    2390      MOVE.L      D7,D1
00002106  6100 FDB0               2391      BSR         PrintHex
0000210A                          2392  
0000210A  6000 EFE6               2393      BRA         opdec_return
0000210E                          2394  MATCH_CC_NE_16
0000210E                          2395      ** print opcode **
0000210E  43F8 00B5               2396      LEA         pr_BCC_NE,A1
00002112  6100 FDB8               2397      BSR         PrintString
00002116                          2398  
00002116  6100 FDC8               2399      BSR         PrintSizeWORD
0000211A  43F8 0000               2400      LEA         pr_space,A1
0000211E  6100 FDAC               2401      BSR         PrintString
00002122                          2402  
00002122                          2403      ** print address **
00002122  6100 FD7C               2404      BSR         Get_BCC_Displacement_16bit
00002126  6100 FD84               2405      BSR         Get_Current_Address
0000212A  6100 FD88               2406      BSR         Get_BCC_Destination_Address
0000212E  2207                    2407      MOVE.L      D7,D1
00002130  6100 FD86               2408      BSR         PrintHex
00002134                          2409  
00002134  6000 EFBC               2410      BRA         opdec_return
00002138                          2411  MATCH_CC_NE_32
00002138                          2412      ** print opcode **
00002138  43F8 00B5               2413      LEA         pr_BCC_NE,A1
0000213C  6100 FD8E               2414      BSR         PrintString
00002140                          2415  
00002140  6100 FDAA               2416      BSR         PrintSizeLONG
00002144  43F8 0000               2417      LEA         pr_space,A1
00002148  6100 FD82               2418      BSR         PrintString
0000214C                          2419  
0000214C                          2420      ** print address **
0000214C  6100 FD58               2421      BSR         Get_BCC_Displacement_32bit
00002150  6100 FD5A               2422      BSR         Get_Current_Address
00002154  6100 FD5E               2423      BSR         Get_BCC_Destination_Address
00002158  2207                    2424      MOVE.L      D7,D1
0000215A  6100 FD5C               2425      BSR         PrintHex
0000215E                          2426  
0000215E  6000 EF92               2427      BRA         opdec_return
00002162                          2428  MATCH_CC_EQ_8
00002162                          2429      ** print opcode **
00002162  43F8 0095               2430      LEA         pr_BCC_EQ,A1
00002166  6100 FD64               2431      BSR         PrintString
0000216A                          2432  
0000216A  6100 FD68               2433      BSR         PrintSizeBYTE
0000216E  43F8 0000               2434      LEA         pr_space,A1
00002172  6100 FD58               2435      BSR         PrintString
00002176                          2436  
00002176                          2437      ** print address **
00002176  6100 FD22               2438      BSR         Get_BCC_Displacement_8bit
0000217A  6100 FD30               2439      BSR         Get_Current_Address
0000217E  6100 FD34               2440      BSR         Get_BCC_Destination_Address
00002182  2207                    2441      MOVE.L      D7,D1
00002184  6100 FD32               2442      BSR         PrintHex
00002188                          2443  
00002188  6000 EF68               2444      BRA         opdec_return
0000218C                          2445  MATCH_CC_EQ_16
0000218C                          2446      ** print opcode **
0000218C  43F8 0095               2447      LEA         pr_BCC_EQ,A1
00002190  6100 FD3A               2448      BSR         PrintString
00002194                          2449  
00002194  6100 FD4A               2450      BSR         PrintSizeWORD
00002198  43F8 0000               2451      LEA         pr_space,A1
0000219C  6100 FD2E               2452      BSR         PrintString
000021A0                          2453  
000021A0                          2454      ** print address **
000021A0  6100 FCFE               2455      BSR         Get_BCC_Displacement_16bit
000021A4  6100 FD06               2456      BSR         Get_Current_Address
000021A8  6100 FD0A               2457      BSR         Get_BCC_Destination_Address
000021AC  2207                    2458      MOVE.L      D7,D1
000021AE  6100 FD08               2459      BSR         PrintHex
000021B2                          2460  
000021B2  6000 EF3E               2461      BRA         opdec_return
000021B6                          2462  MATCH_CC_EQ_32
000021B6                          2463      ** print opcode **
000021B6  43F8 0095               2464      LEA         pr_BCC_EQ,A1
000021BA  6100 FD10               2465      BSR         PrintString
000021BE                          2466  
000021BE  6100 FD2C               2467      BSR         PrintSizeLONG
000021C2  43F8 0000               2468      LEA         pr_space,A1
000021C6  6100 FD04               2469      BSR         PrintString
000021CA                          2470  
000021CA                          2471      ** print address **
000021CA  6100 FCDA               2472      BSR         Get_BCC_Displacement_32bit
000021CE  6100 FCDC               2473      BSR         Get_Current_Address
000021D2  6100 FCE0               2474      BSR         Get_BCC_Destination_Address
000021D6  2207                    2475      MOVE.L      D7,D1
000021D8  6100 FCDE               2476      BSR         PrintHex
000021DC                          2477  
000021DC  6000 EF14               2478      BRA         opdec_return
000021E0                          2479  MATCH_CC_VC_8
000021E0                          2480      ** print opcode **
000021E0  43F8 00BD               2481      LEA         pr_BCC_VC,A1
000021E4  6100 FCE6               2482      BSR         PrintString
000021E8                          2483  
000021E8  6100 FCEA               2484      BSR         PrintSizeBYTE
000021EC  43F8 0000               2485      LEA         pr_space,A1
000021F0  6100 FCDA               2486      BSR         PrintString
000021F4                          2487  
000021F4                          2488      ** print address **
000021F4  6100 FCA4               2489      BSR         Get_BCC_Displacement_8bit
000021F8  6100 FCB2               2490      BSR         Get_Current_Address
000021FC  6100 FCB6               2491      BSR         Get_BCC_Destination_Address
00002200  2207                    2492      MOVE.L      D7,D1
00002202  6100 FCB4               2493      BSR         PrintHex
00002206                          2494  
00002206  6000 EEEA               2495      BRA         opdec_return
0000220A                          2496  MATCH_CC_VC_16
0000220A                          2497      ** print opcode **
0000220A  43F8 00BD               2498      LEA         pr_BCC_VC,A1
0000220E  6100 FCBC               2499      BSR         PrintString
00002212                          2500  
00002212  6100 FCCC               2501      BSR         PrintSizeWORD
00002216  43F8 0000               2502      LEA         pr_space,A1
0000221A  6100 FCB0               2503      BSR         PrintString
0000221E                          2504  
0000221E                          2505      ** print address **
0000221E  6100 FC80               2506      BSR         Get_BCC_Displacement_16bit
00002222  6100 FC88               2507      BSR         Get_Current_Address
00002226  6100 FC8C               2508      BSR         Get_BCC_Destination_Address
0000222A  2207                    2509      MOVE.L      D7,D1
0000222C  6100 FC8A               2510      BSR         PrintHex
00002230                          2511  
00002230  6000 EEC0               2512      BRA         opdec_return
00002234                          2513  MATCH_CC_VC_32
00002234                          2514      ** print opcode **
00002234  43F8 00BD               2515      LEA         pr_BCC_VC,A1
00002238  6100 FC92               2516      BSR         PrintString
0000223C                          2517  
0000223C  6100 FCAE               2518      BSR         PrintSizeLONG
00002240  43F8 0000               2519      LEA         pr_space,A1
00002244  6100 FC86               2520      BSR         PrintString
00002248                          2521  
00002248                          2522      ** print address **
00002248  6100 FC5C               2523      BSR         Get_BCC_Displacement_32bit
0000224C  6100 FC5E               2524      BSR         Get_Current_Address
00002250  6100 FC62               2525      BSR         Get_BCC_Destination_Address
00002254  2207                    2526      MOVE.L      D7,D1
00002256  6100 FC60               2527      BSR         PrintHex
0000225A                          2528  
0000225A  6000 EE96               2529      BRA         opdec_return
0000225E                          2530  MATCH_CC_VS_8
0000225E                          2531      ** print opcode **
0000225E  43F8 00C1               2532      LEA         pr_BCC_VS,A1
00002262  6100 FC68               2533      BSR         PrintString
00002266                          2534  
00002266  6100 FC6C               2535      BSR         PrintSizeBYTE
0000226A  43F8 0000               2536      LEA         pr_space,A1
0000226E  6100 FC5C               2537      BSR         PrintString
00002272                          2538  
00002272                          2539      ** print address **
00002272  6100 FC26               2540      BSR         Get_BCC_Displacement_8bit
00002276  6100 FC34               2541      BSR         Get_Current_Address
0000227A  6100 FC38               2542      BSR         Get_BCC_Destination_Address
0000227E  2207                    2543      MOVE.L      D7,D1
00002280  6100 FC36               2544      BSR         PrintHex
00002284                          2545  
00002284  6000 EE6C               2546      BRA         opdec_return
00002288                          2547  MATCH_CC_VS_16
00002288                          2548      ** print opcode **
00002288  43F8 00C1               2549      LEA         pr_BCC_VS,A1
0000228C  6100 FC3E               2550      BSR         PrintString
00002290                          2551  
00002290  6100 FC4E               2552      BSR         PrintSizeWORD
00002294  43F8 0000               2553      LEA         pr_space,A1
00002298  6100 FC32               2554      BSR         PrintString
0000229C                          2555  
0000229C                          2556      ** print address **
0000229C  6100 FC02               2557      BSR         Get_BCC_Displacement_16bit
000022A0  6100 FC0A               2558      BSR         Get_Current_Address
000022A4  6100 FC0E               2559      BSR         Get_BCC_Destination_Address
000022A8  2207                    2560      MOVE.L      D7,D1
000022AA  6100 FC0C               2561      BSR         PrintHex
000022AE                          2562  
000022AE  6000 EE42               2563      BRA         opdec_return
000022B2                          2564  MATCH_CC_VS_32
000022B2                          2565      ** print opcode **
000022B2  43F8 00C1               2566      LEA         pr_BCC_VS,A1
000022B6  6100 FC14               2567      BSR         PrintString
000022BA                          2568  
000022BA  6100 FC30               2569      BSR         PrintSizeLONG
000022BE  43F8 0000               2570      LEA         pr_space,A1
000022C2  6100 FC08               2571      BSR         PrintString
000022C6                          2572  
000022C6                          2573      ** print address **
000022C6  6100 FBDE               2574      BSR         Get_BCC_Displacement_32bit
000022CA  6100 FBE0               2575      BSR         Get_Current_Address
000022CE  6100 FBE4               2576      BSR         Get_BCC_Destination_Address
000022D2  2207                    2577      MOVE.L      D7,D1
000022D4  6100 FBE2               2578      BSR         PrintHex
000022D8                          2579  
000022D8  6000 EE18               2580      BRA         opdec_return
000022DC                          2581  MATCH_CC_PL_8
000022DC                          2582      ** print opcode **
000022DC  43F8 00B9               2583      LEA         pr_BCC_PL,A1
000022E0  6100 FBEA               2584      BSR         PrintString
000022E4                          2585  
000022E4  6100 FBEE               2586      BSR         PrintSizeBYTE
000022E8  43F8 0000               2587      LEA         pr_space,A1
000022EC  6100 FBDE               2588      BSR         PrintString
000022F0                          2589  
000022F0                          2590      ** print address **
000022F0  6100 FBA8               2591      BSR         Get_BCC_Displacement_8bit
000022F4  6100 FBB6               2592      BSR         Get_Current_Address
000022F8  6100 FBBA               2593      BSR         Get_BCC_Destination_Address
000022FC  2207                    2594      MOVE.L      D7,D1
000022FE  6100 FBB8               2595      BSR         PrintHex
00002302                          2596  
00002302  6000 EDEE               2597      BRA         opdec_return
00002306                          2598  MATCH_CC_PL_16
00002306                          2599      ** print opcode **
00002306  43F8 00B9               2600      LEA         pr_BCC_PL,A1
0000230A  6100 FBC0               2601      BSR         PrintString
0000230E                          2602  
0000230E  6100 FBD0               2603      BSR         PrintSizeWORD
00002312  43F8 0000               2604      LEA         pr_space,A1
00002316  6100 FBB4               2605      BSR         PrintString
0000231A                          2606  
0000231A                          2607      ** print address **
0000231A  6100 FB84               2608      BSR         Get_BCC_Displacement_16bit
0000231E  6100 FB8C               2609      BSR         Get_Current_Address
00002322  6100 FB90               2610      BSR         Get_BCC_Destination_Address
00002326  2207                    2611      MOVE.L      D7,D1
00002328  6100 FB8E               2612      BSR         PrintHex
0000232C                          2613  
0000232C  6000 EDC4               2614      BRA         opdec_return
00002330                          2615  MATCH_CC_PL_32
00002330                          2616      ** print opcode **
00002330  43F8 00B9               2617      LEA         pr_BCC_PL,A1
00002334  6100 FB96               2618      BSR         PrintString
00002338                          2619  
00002338  6100 FBB2               2620      BSR         PrintSizeLONG
0000233C  43F8 0000               2621      LEA         pr_space,A1
00002340  6100 FB8A               2622      BSR         PrintString
00002344                          2623  
00002344                          2624      ** print address **
00002344  6100 FB60               2625      BSR         Get_BCC_Displacement_32bit
00002348  6100 FB62               2626      BSR         Get_Current_Address
0000234C  6100 FB66               2627      BSR         Get_BCC_Destination_Address
00002350  2207                    2628      MOVE.L      D7,D1
00002352  6100 FB64               2629      BSR         PrintHex
00002356                          2630  
00002356  6000 ED9A               2631      BRA         opdec_return
0000235A                          2632  MATCH_CC_MI_8
0000235A                          2633      ** print opcode **
0000235A  43F8 00B1               2634      LEA         pr_BCC_MI,A1
0000235E  6100 FB6C               2635      BSR         PrintString
00002362                          2636  
00002362  6100 FB70               2637      BSR         PrintSizeBYTE
00002366  43F8 0000               2638      LEA         pr_space,A1
0000236A  6100 FB60               2639      BSR         PrintString
0000236E                          2640  
0000236E                          2641      ** print address **
0000236E  6100 FB2A               2642      BSR         Get_BCC_Displacement_8bit
00002372  6100 FB38               2643      BSR         Get_Current_Address
00002376  6100 FB3C               2644      BSR         Get_BCC_Destination_Address
0000237A  2207                    2645      MOVE.L      D7,D1
0000237C  6100 FB3A               2646      BSR         PrintHex
00002380                          2647  
00002380  6000 ED70               2648      BRA         opdec_return
00002384                          2649  MATCH_CC_MI_16
00002384                          2650      ** print opcode **
00002384  43F8 00B1               2651      LEA         pr_BCC_MI,A1
00002388  6100 FB42               2652      BSR         PrintString
0000238C                          2653  
0000238C  6100 FB52               2654      BSR         PrintSizeWORD
00002390  43F8 0000               2655      LEA         pr_space,A1
00002394  6100 FB36               2656      BSR         PrintString
00002398                          2657  
00002398                          2658      ** print address **
00002398  6100 FB06               2659      BSR         Get_BCC_Displacement_16bit
0000239C  6100 FB0E               2660      BSR         Get_Current_Address
000023A0  6100 FB12               2661      BSR         Get_BCC_Destination_Address
000023A4  2207                    2662      MOVE.L      D7,D1
000023A6  6100 FB10               2663      BSR         PrintHex
000023AA                          2664  
000023AA  6000 ED46               2665      BRA         opdec_return
000023AE                          2666  MATCH_CC_MI_32
000023AE                          2667      ** print opcode **
000023AE  43F8 00B1               2668      LEA         pr_BCC_MI,A1
000023B2  6100 FB18               2669      BSR         PrintString
000023B6                          2670  
000023B6  6100 FB34               2671      BSR         PrintSizeLONG
000023BA  43F8 0000               2672      LEA         pr_space,A1
000023BE  6100 FB0C               2673      BSR         PrintString
000023C2                          2674  
000023C2                          2675      ** print address **
000023C2  6100 FAE2               2676      BSR         Get_BCC_Displacement_32bit
000023C6  6100 FAE4               2677      BSR         Get_Current_Address
000023CA  6100 FAE8               2678      BSR         Get_BCC_Destination_Address
000023CE  2207                    2679      MOVE.L      D7,D1
000023D0  6100 FAE6               2680      BSR         PrintHex
000023D4                          2681  
000023D4  6000 ED1C               2682      BRA         opdec_return
000023D8                          2683  MATCH_CC_GE_8
000023D8                          2684      ** print opcode **
000023D8  43F8 0099               2685      LEA         pr_BCC_GE,A1
000023DC  6100 FAEE               2686      BSR         PrintString
000023E0                          2687  
000023E0  6100 FAF2               2688      BSR         PrintSizeBYTE
000023E4  43F8 0000               2689      LEA         pr_space,A1
000023E8  6100 FAE2               2690      BSR         PrintString
000023EC                          2691  
000023EC                          2692      ** print address **
000023EC  6100 FAAC               2693      BSR         Get_BCC_Displacement_8bit
000023F0  6100 FABA               2694      BSR         Get_Current_Address
000023F4  6100 FABE               2695      BSR         Get_BCC_Destination_Address
000023F8  2207                    2696      MOVE.L      D7,D1
000023FA  6100 FABC               2697      BSR         PrintHex
000023FE                          2698  
000023FE  6000 ECF2               2699      BRA         opdec_return
00002402                          2700  MATCH_CC_GE_16
00002402                          2701      ** print opcode **
00002402  43F8 0099               2702      LEA         pr_BCC_GE,A1
00002406  6100 FAC4               2703      BSR         PrintString
0000240A                          2704  
0000240A  6100 FAD4               2705      BSR         PrintSizeWORD
0000240E  43F8 0000               2706      LEA         pr_space,A1
00002412  6100 FAB8               2707      BSR         PrintString
00002416                          2708  
00002416                          2709      ** print address **
00002416  6100 FA88               2710      BSR         Get_BCC_Displacement_16bit
0000241A  6100 FA90               2711      BSR         Get_Current_Address
0000241E  6100 FA94               2712      BSR         Get_BCC_Destination_Address
00002422  2207                    2713      MOVE.L      D7,D1
00002424  6100 FA92               2714      BSR         PrintHex
00002428                          2715  
00002428  6000 ECC8               2716      BRA         opdec_return
0000242C                          2717  MATCH_CC_GE_32
0000242C                          2718      ** print opcode **
0000242C  43F8 0099               2719      LEA         pr_BCC_GE,A1
00002430  6100 FA9A               2720      BSR         PrintString
00002434                          2721  
00002434  6100 FAB6               2722      BSR         PrintSizeLONG
00002438  43F8 0000               2723      LEA         pr_space,A1
0000243C  6100 FA8E               2724      BSR         PrintString
00002440                          2725  
00002440                          2726      ** print address **
00002440  6100 FA64               2727      BSR         Get_BCC_Displacement_32bit
00002444  6100 FA66               2728      BSR         Get_Current_Address
00002448  6100 FA6A               2729      BSR         Get_BCC_Destination_Address
0000244C  2207                    2730      MOVE.L      D7,D1
0000244E  6100 FA68               2731      BSR         PrintHex
00002452                          2732  
00002452  6000 EC9E               2733      BRA         opdec_return
00002456                          2734  MATCH_CC_LT_8
00002456                          2735      ** print opcode **
00002456  43F8 00AD               2736      LEA         pr_BCC_LT,A1
0000245A  6100 FA70               2737      BSR         PrintString
0000245E                          2738  
0000245E  6100 FA74               2739      BSR         PrintSizeBYTE
00002462  43F8 0000               2740      LEA         pr_space,A1
00002466  6100 FA64               2741      BSR         PrintString
0000246A                          2742  
0000246A                          2743      ** print address **
0000246A  6100 FA2E               2744      BSR         Get_BCC_Displacement_8bit
0000246E  6100 FA3C               2745      BSR         Get_Current_Address
00002472  6100 FA40               2746      BSR         Get_BCC_Destination_Address
00002476  2207                    2747      MOVE.L      D7,D1
00002478  6100 FA3E               2748      BSR         PrintHex
0000247C                          2749  
0000247C  6000 EC74               2750      BRA         opdec_return
00002480                          2751  MATCH_CC_LT_16
00002480                          2752      ** print opcode **
00002480  43F8 00AD               2753      LEA         pr_BCC_LT,A1
00002484  6100 FA46               2754      BSR         PrintString
00002488                          2755  
00002488  6100 FA56               2756      BSR         PrintSizeWORD
0000248C  43F8 0000               2757      LEA         pr_space,A1
00002490  6100 FA3A               2758      BSR         PrintString
00002494                          2759  
00002494                          2760      ** print address **
00002494  6100 FA0A               2761      BSR         Get_BCC_Displacement_16bit
00002498  6100 FA12               2762      BSR         Get_Current_Address
0000249C  6100 FA16               2763      BSR         Get_BCC_Destination_Address
000024A0  2207                    2764      MOVE.L      D7,D1
000024A2  6100 FA14               2765      BSR         PrintHex
000024A6                          2766  
000024A6  6000 EC4A               2767      BRA         opdec_return
000024AA                          2768  MATCH_CC_LT_32
000024AA                          2769      ** print opcode **
000024AA  43F8 00AD               2770      LEA         pr_BCC_LT,A1
000024AE  6100 FA1C               2771      BSR         PrintString
000024B2                          2772  
000024B2  6100 FA38               2773      BSR         PrintSizeLONG
000024B6  43F8 0000               2774      LEA         pr_space,A1
000024BA  6100 FA10               2775      BSR         PrintString
000024BE                          2776  
000024BE                          2777      ** print address **
000024BE  6100 F9E6               2778      BSR         Get_BCC_Displacement_32bit
000024C2  6100 F9E8               2779      BSR         Get_Current_Address
000024C6  6100 F9EC               2780      BSR         Get_BCC_Destination_Address
000024CA  2207                    2781      MOVE.L      D7,D1
000024CC  6100 F9EA               2782      BSR         PrintHex
000024D0                          2783  
000024D0  6000 EC20               2784      BRA         opdec_return
000024D4                          2785  MATCH_CC_GT_8
000024D4                          2786      ** print opcode **
000024D4  43F8 009D               2787      LEA         pr_BCC_GT,A1
000024D8  6100 F9F2               2788      BSR         PrintString
000024DC                          2789  
000024DC  6100 F9F6               2790      BSR         PrintSizeBYTE
000024E0  43F8 0000               2791      LEA         pr_space,A1
000024E4  6100 F9E6               2792      BSR         PrintString
000024E8                          2793  
000024E8                          2794      ** print address **
000024E8  6100 F9B0               2795      BSR         Get_BCC_Displacement_8bit
000024EC  6100 F9BE               2796      BSR         Get_Current_Address
000024F0  6100 F9C2               2797      BSR         Get_BCC_Destination_Address
000024F4  2207                    2798      MOVE.L      D7,D1
000024F6  6100 F9C0               2799      BSR         PrintHex
000024FA                          2800  
000024FA  6000 EBF6               2801      BRA         opdec_return
000024FE                          2802  MATCH_CC_GT_16
000024FE                          2803      ** print opcode **
000024FE  43F8 009D               2804      LEA         pr_BCC_GT,A1
00002502  6100 F9C8               2805      BSR         PrintString
00002506                          2806  
00002506  6100 F9D8               2807      BSR         PrintSizeWORD
0000250A  43F8 0000               2808      LEA         pr_space,A1
0000250E  6100 F9BC               2809      BSR         PrintString
00002512                          2810  
00002512                          2811      ** print address **
00002512  6100 F98C               2812      BSR         Get_BCC_Displacement_16bit
00002516  6100 F994               2813      BSR         Get_Current_Address
0000251A  6100 F998               2814      BSR         Get_BCC_Destination_Address
0000251E  2207                    2815      MOVE.L      D7,D1
00002520  6100 F996               2816      BSR         PrintHex
00002524                          2817  
00002524  6000 EBCC               2818      BRA         opdec_return
00002528                          2819  MATCH_CC_GT_32
00002528                          2820      ** print opcode **
00002528  43F8 009D               2821      LEA         pr_BCC_GT,A1
0000252C  6100 F99E               2822      BSR         PrintString
00002530                          2823  
00002530  6100 F9BA               2824      BSR         PrintSizeLONG
00002534  43F8 0000               2825      LEA         pr_space,A1
00002538  6100 F992               2826      BSR         PrintString
0000253C                          2827  
0000253C                          2828      ** print address **
0000253C  6100 F968               2829      BSR         Get_BCC_Displacement_32bit
00002540  6100 F96A               2830      BSR         Get_Current_Address
00002544  6100 F96E               2831      BSR         Get_BCC_Destination_Address
00002548  2207                    2832      MOVE.L      D7,D1
0000254A  6100 F96C               2833      BSR         PrintHex
0000254E                          2834  
0000254E  6000 EBA2               2835      BRA         opdec_return
00002552                          2836  MATCH_CC_LE_8
00002552                          2837      ** print opcode **
00002552  43F8 00A5               2838      LEA         pr_BCC_LE,A1
00002556  6100 F974               2839      BSR         PrintString
0000255A                          2840  
0000255A  6100 F978               2841      BSR         PrintSizeBYTE
0000255E  43F8 0000               2842      LEA         pr_space,A1
00002562  6100 F968               2843      BSR         PrintString
00002566                          2844  
00002566                          2845      ** print address **
00002566  6100 F932               2846      BSR         Get_BCC_Displacement_8bit
0000256A  6100 F940               2847      BSR         Get_Current_Address
0000256E  6100 F944               2848      BSR         Get_BCC_Destination_Address
00002572  2207                    2849      MOVE.L      D7,D1
00002574  6100 F942               2850      BSR         PrintHex
00002578                          2851  
00002578  6000 EB78               2852      BRA         opdec_return
0000257C                          2853  MATCH_CC_LE_16
0000257C                          2854      ** print opcode **
0000257C  43F8 00A5               2855      LEA         pr_BCC_LE,A1
00002580  6100 F94A               2856      BSR         PrintString
00002584                          2857  
00002584  6100 F95A               2858      BSR         PrintSizeWORD
00002588  43F8 0000               2859      LEA         pr_space,A1
0000258C  6100 F93E               2860      BSR         PrintString
00002590                          2861  
00002590                          2862      ** print address **
00002590  6100 F90E               2863      BSR         Get_BCC_Displacement_16bit
00002594  6100 F916               2864      BSR         Get_Current_Address
00002598  6100 F91A               2865      BSR         Get_BCC_Destination_Address
0000259C  2207                    2866      MOVE.L      D7,D1
0000259E  6100 F918               2867      BSR         PrintHex
000025A2                          2868  
000025A2  6000 EB4E               2869      BRA         opdec_return
000025A6                          2870  MATCH_CC_LE_32
000025A6                          2871      ** print opcode **
000025A6  43F8 00A5               2872      LEA         pr_BCC_LE,A1
000025AA  6100 F920               2873      BSR         PrintString
000025AE                          2874  
000025AE  6100 F93C               2875      BSR         PrintSizeLONG
000025B2  43F8 0000               2876      LEA         pr_space,A1
000025B6  6100 F914               2877      BSR         PrintString
000025BA                          2878  
000025BA                          2879      ** print address **
000025BA  6100 F8EA               2880      BSR         Get_BCC_Displacement_32bit
000025BE  6100 F8EC               2881      BSR         Get_Current_Address
000025C2  6100 F8F0               2882      BSR         Get_BCC_Destination_Address
000025C6  2207                    2883      MOVE.L      D7,D1
000025C8  6100 F8EE               2884      BSR         PrintHex
000025CC                          2885  
000025CC  6000 EB24               2886      BRA         opdec_return
000025D0                          2887  ERROR
000025D0  43F8 0087               2888      LEA         pr_ERROR,A1
000025D4  6100 F8F6               2889      BSR         PrintString
000025D8  6000 EB18               2890      BRA         opdec_return
000025DC                          2891  
000025DC                          2892  
000025DC                          2893  
000025DC                          2894  
000025DC                          2895  -------------------- end include --------------------
000025DC                          2896                  INCLUDE 'arsany_opcodes.x68'
000025DC                          2897  MATCH_MOVEA_W
000025DC                          2898      ** Move command size into D1
000025DC  123C 0002               2899      MOVE.B      #2,D1
000025E0                          2900      ** Print command
000025E0  103C 000E               2901      MOVE.B      #14,D0
000025E4  43F8 0031               2902      LEA         pr_MOVEA,A1
000025E8  4E4F                    2903      TRAP        #15
000025EA                          2904      ** Print size
000025EA  43F8 0019               2905      LEA         pr_WORD,A1
000025EE  4E4F                    2906      TRAP        #15
000025F0                          2907      
000025F0  6000 0016               2908      BRA         print_movea
000025F4                          2909  MATCH_MOVEA_L
000025F4                          2910      ** Move command size into D1
000025F4  123C 0004               2911      MOVE.B      #4,D1
000025F8                          2912      ** Print command
000025F8  103C 000E               2913      MOVE.B      #14,D0
000025FC  43F8 0031               2914      LEA         pr_MOVEA,A1
00002600  4E4F                    2915      TRAP        #15
00002602                          2916      ** Print size
00002602  43F8 001C               2917      LEA         pr_LONG,A1
00002606  4E4F                    2918      TRAP        #15
00002608                          2919  print_movea
00002608                          2920      ** Print space
00002608  43F8 0000               2921      LEA         pr_space,A1
0000260C  4E4F                    2922      TRAP        #15
0000260E                          2923      ** Decode right side ea
0000260E  1002                    2924      MOVE.B      D2,D0
00002610  0200 003F               2925      ANDI.B      #%00111111,D0
00002614  4EB8 1694               2926      JSR         EADecoder
00002618                          2927      ** Add comma
00002618  103C 000E               2928      MOVE.B      #14,D0
0000261C  43F8 0014               2929      LEA         pr_comma,A1
00002620  4E4F                    2930      TRAP        #15
00002622                          2931      ** Decode left side ea
00002622  3002                    2932      MOVE.W      D2,D0
00002624  0240 0FC0               2933      ANDI.W      #%0000111111000000,D0
00002628  EC88                    2934      LSR.L       #6,D0
0000262A  4EB8 167C               2935      JSR         EADecoder_left
0000262E                          2936      
0000262E  6000 EAC2               2937      BRA         opdec_return
00002632                          2938      
00002632                          2939      
00002632                          2940  MATCH_ADDA_W
00002632                          2941      ** Move command size into D1
00002632  123C 0002               2942      MOVE.B      #2,D1
00002636                          2943      ** Print command
00002636  103C 000E               2944      MOVE.B      #14,D0
0000263A  43F8 003D               2945      LEA         pr_ADDA,A1
0000263E  4E4F                    2946      TRAP        #15
00002640                          2947      ** Print size
00002640  43F8 0019               2948      LEA         pr_WORD,A1
00002644  4E4F                    2949      TRAP        #15
00002646                          2950      
00002646  6000 0016               2951      BRA         print_adda
0000264A                          2952  MATCH_ADDA_L
0000264A                          2953      ** Move command size into D1
0000264A  123C 0004               2954      MOVE.B      #4,D1
0000264E                          2955      ** Print command
0000264E  103C 000E               2956      MOVE.B      #14,D0
00002652  43F8 003D               2957      LEA         pr_ADDA,A1
00002656  4E4F                    2958      TRAP        #15
00002658                          2959      ** Print size
00002658  43F8 001C               2960      LEA         pr_LONG,A1
0000265C  4E4F                    2961      TRAP        #15
0000265E                          2962  print_adda
0000265E                          2963      ** Print space
0000265E  43F8 0002               2964      LEA         pr_space2,A1
00002662  4E4F                    2965      TRAP        #15
00002664                          2966      ** Decode right side ea
00002664  1002                    2967      MOVE.B      D2,D0
00002666  0200 003F               2968      ANDI.B      #%00111111,D0
0000266A  4EB8 1694               2969      JSR         EADecoder
0000266E                          2970      ** Add comma
0000266E  103C 000E               2971      MOVE.B      #14,D0
00002672  43F8 0014               2972      LEA         pr_comma,A1
00002676  4E4F                    2973      TRAP        #15
00002678                          2974      ** Decode left side ea
00002678  3002                    2975      MOVE.W      D2,D0
0000267A  0240 0E00               2976      ANDI.W      #%0000111000000000,D0
0000267E  0040 0040               2977      ORI.W       #%0000000001000000,D0
00002682  EC88                    2978      LSR.L       #6,D0
00002684  4EB8 167C               2979      JSR         EADecoder_left
00002688                          2980      
00002688  6000 EA68               2981      BRA         opdec_return
0000268C                          2982      
0000268C                          2983      
0000268C                          2984  MATCH_MULS_W
0000268C                          2985      ** Move command size into D1
0000268C  123C 0002               2986      MOVE.B      #2,D1
00002690                          2987      ** Print command
00002690  103C 000E               2988      MOVE.B      #14,D0
00002694  43F8 0042               2989      LEA         pr_MULS,A1
00002698  4E4F                    2990      TRAP        #15
0000269A                          2991      ** Print size
0000269A  43F8 0019               2992      LEA         pr_WORD,A1
0000269E  4E4F                    2993      TRAP        #15
000026A0                          2994      ** Print space
000026A0  43F8 0002               2995      LEA         pr_space2,A1
000026A4  4E4F                    2996      TRAP        #15
000026A6                          2997      ** Decode right side ea
000026A6  1002                    2998      MOVE.B      D2,D0
000026A8  0200 003F               2999      ANDI.B      #%00111111,D0
000026AC  4EB8 1694               3000      JSR         EADecoder
000026B0                          3001      ** Add comma
000026B0  103C 000E               3002      MOVE.B      #14,D0
000026B4  43F8 0014               3003      LEA         pr_comma,A1
000026B8  4E4F                    3004      TRAP        #15
000026BA                          3005      ** Decode left side ea
000026BA  3002                    3006      MOVE.W      D2,D0
000026BC  0240 0E00               3007      ANDI.W      #%0000111000000000,D0
000026C0  EC88                    3008      LSR.L       #6,D0
000026C2  4EB8 167C               3009      JSR         EADecoder_left    
000026C6                          3010      
000026C6  6000 EA2A               3011      BRA         opdec_return
000026CA                          3012      
000026CA                          3013      
000026CA                          3014  MATCH_RTS
000026CA  43F8 004B               3015      LEA         pr_RTS,A1
000026CE  103C 000E               3016      MOVE.B      #14,D0
000026D2  4E4F                    3017      TRAP        #15
000026D4                          3018  
000026D4  6000 EA1C               3019      BRA         opdec_return
000026D8                          3020      
000026D8                          3021      
000026D8                          3022  MATCH_CMP_B
000026D8                          3023      ** Move command size into D1
000026D8  123C 0002               3024      MOVE.B      #2,D1
000026DC                          3025      ** Print command
000026DC  103C 000E               3026      MOVE.B      #14,D0
000026E0  43F8 004F               3027      LEA         pr_CMP,A1
000026E4  4E4F                    3028      TRAP        #15
000026E6                          3029      ** Print size
000026E6  43F8 0016               3030      LEA         pr_BYTE,A1
000026EA  4E4F                    3031      TRAP        #15
000026EC                          3032      
000026EC  6000 002E               3033      BRA         print_cmp
000026F0                          3034  MATCH_CMP_W
000026F0                          3035      ** Move command size into D1
000026F0  123C 0002               3036      MOVE.B      #2,D1
000026F4                          3037      ** Print command
000026F4  103C 000E               3038      MOVE.B      #14,D0
000026F8  43F8 004F               3039      LEA         pr_CMP,A1
000026FC  4E4F                    3040      TRAP        #15
000026FE                          3041      ** Print size
000026FE  43F8 0019               3042      LEA         pr_WORD,A1
00002702  4E4F                    3043      TRAP        #15
00002704                          3044      
00002704  6000 0016               3045      BRA         print_cmp
00002708                          3046  MATCH_CMP_L
00002708                          3047      ** Move command size into D1
00002708  123C 0004               3048      MOVE.B      #4,D1
0000270C                          3049      ** Print command
0000270C  103C 000E               3050      MOVE.B      #14,D0
00002710  43F8 004F               3051      LEA         pr_CMP,A1
00002714  4E4F                    3052      TRAP        #15
00002716                          3053      ** Print size
00002716  43F8 001C               3054      LEA         pr_LONG,A1
0000271A  4E4F                    3055      TRAP        #15
0000271C                          3056  print_cmp
0000271C                          3057      ** Print space
0000271C  43F8 0005               3058      LEA         pr_space3,A1
00002720  4E4F                    3059      TRAP        #15
00002722  4240                    3060      CLR         D0
00002724                          3061      ** Decode right side ea
00002724  1002                    3062      MOVE.B      D2,D0
00002726  0200 003F               3063      ANDI.B      #%00111111,D0
0000272A  4EB8 1694               3064      JSR         EADecoder
0000272E                          3065      ** Add comma
0000272E  103C 000E               3066      MOVE.B      #14,D0
00002732  43F8 0014               3067      LEA         pr_comma,A1
00002736  4E4F                    3068      TRAP        #15
00002738                          3069      ** Decode left side ea
00002738  3002                    3070      MOVE.W      D2,D0
0000273A  0240 0E00               3071      ANDI.W      #%0000111000000000,D0
0000273E  EC88                    3072      LSR.L       #6,D0
00002740  4EB8 167C               3073      JSR         EADecoder_left   
00002744                          3074      
00002744  6000 E9AC               3075      BRA         opdec_return
00002748                          3076      
00002748                          3077      
00002748                          3078  MATCH_JSR
00002748                          3079      ** Print command
00002748  103C 000E               3080      MOVE.B      #14,D0
0000274C  43F8 0053               3081      LEA         pr_JSR,A1
00002750  4E4F                    3082      TRAP        #15
00002752                          3083      ** Print space
00002752  43F8 000E               3084      LEA         pr_space5,A1
00002756  4E4F                    3085      TRAP        #15
00002758                          3086      ** Decode right side ea
00002758  1002                    3087      MOVE.B      D2,D0
0000275A  0200 003F               3088      ANDI.B      #%00111111,D0
0000275E  4EB8 1694               3089      JSR         EADecoder 
00002762                          3090      
00002762  6000 E98E               3091      BRA         opdec_return
00002766                          3092      
00002766                          3093      
00002766                          3094  MATCH_CLR_B 
00002766                          3095      ** Move command size into D1
00002766  123C 0002               3096      MOVE.B      #2,D1
0000276A                          3097      ** Print command
0000276A  103C 000E               3098      MOVE.B      #14,D0
0000276E  43F8 0047               3099      LEA         pr_CLR,A1
00002772  4E4F                    3100      TRAP        #15
00002774                          3101      ** Print size
00002774  43F8 0016               3102      LEA         pr_BYTE,A1
00002778  4E4F                    3103      TRAP        #15
0000277A                          3104      
0000277A  6000 002E               3105      BRA         print_clr
0000277E                          3106  MATCH_CLR_W
0000277E                          3107      ** Move command size into D1
0000277E  123C 0002               3108      MOVE.B      #2,D1
00002782                          3109      ** Print command
00002782  103C 000E               3110      MOVE.B      #14,D0
00002786  43F8 0047               3111      LEA         pr_CLR,A1
0000278A  4E4F                    3112      TRAP        #15
0000278C                          3113      ** Print size
0000278C  43F8 0019               3114      LEA         pr_WORD,A1
00002790  4E4F                    3115      TRAP        #15
00002792                          3116      
00002792  6000 0016               3117      BRA         print_clr
00002796                          3118  MATCH_CLR_L
00002796                          3119      ** Move command size into D1
00002796  123C 0004               3120      MOVE.B      #4,D1
0000279A                          3121      ** Print command
0000279A  103C 000E               3122      MOVE.B      #14,D0
0000279E  43F8 0047               3123      LEA         pr_CLR,A1
000027A2  4E4F                    3124      TRAP        #15
000027A4                          3125      ** Print size
000027A4  43F8 001C               3126      LEA         pr_LONG,A1
000027A8  4E4F                    3127      TRAP        #15
000027AA                          3128  print_clr
000027AA                          3129      ** Print space
000027AA  43F8 0005               3130      LEA         pr_space3,A1
000027AE  4E4F                    3131      TRAP        #15
000027B0                          3132      ** Decode right side ea
000027B0  1002                    3133      MOVE.B      D2,D0
000027B2  0200 003F               3134      ANDI.B      #%00111111,D0
000027B6  4EB8 1694               3135      JSR         EADecoder 
000027BA                          3136      
000027BA  6000 E936               3137      BRA         opdec_return
000027BE                          3138      
000027BE                          3139      
000027BE                          3140  MATCH_AND_DN_B
000027BE                          3141      ** Move command size into D1
000027BE  123C 0002               3142      MOVE.B      #2,D1
000027C2                          3143      ** Print command
000027C2  103C 000E               3144      MOVE.B      #14,D0
000027C6  43F8 0057               3145      LEA         pr_AND,A1
000027CA  4E4F                    3146      TRAP        #15
000027CC                          3147      ** Print size
000027CC  43F8 0016               3148      LEA         pr_BYTE,A1
000027D0  4E4F                    3149      TRAP        #15
000027D2                          3150      
000027D2  6000 002E               3151      BRA         print_and_dn
000027D6                          3152  MATCH_AND_DN_W
000027D6                          3153      ** Move command size into D1
000027D6  123C 0002               3154      MOVE.B      #2,D1
000027DA                          3155      ** Print command
000027DA  103C 000E               3156      MOVE.B      #14,D0
000027DE  43F8 0057               3157      LEA         pr_AND,A1
000027E2  4E4F                    3158      TRAP        #15
000027E4                          3159      ** Print size
000027E4  43F8 0019               3160      LEA         pr_WORD,A1
000027E8  4E4F                    3161      TRAP        #15
000027EA                          3162      
000027EA  6000 0016               3163      BRA         print_and_dn
000027EE                          3164  MATCH_AND_DN_L
000027EE                          3165      ** Move command size into D1
000027EE  123C 0004               3166      MOVE.B      #4,D1
000027F2                          3167      ** Print command
000027F2  103C 000E               3168      MOVE.B      #14,D0
000027F6  43F8 0057               3169      LEA         pr_AND,A1
000027FA  4E4F                    3170      TRAP        #15
000027FC                          3171      ** Print size
000027FC  43F8 001C               3172      LEA         pr_LONG,A1
00002800  4E4F                    3173      TRAP        #15
00002802                          3174  print_and_dn
00002802                          3175      ** Print space
00002802  43F8 0005               3176      LEA         pr_space3,A1
00002806  4E4F                    3177      TRAP        #15
00002808                          3178      ** Decode right side ea
00002808  1002                    3179      MOVE.B      D2,D0
0000280A  0200 003F               3180      ANDI.B      #%00111111,D0
0000280E  4EB8 1694               3181      JSR         EADecoder
00002812                          3182      ** Add comma
00002812  103C 000E               3183      MOVE.B      #14,D0
00002816  43F8 0014               3184      LEA         pr_comma,A1
0000281A  4E4F                    3185      TRAP        #15
0000281C                          3186      ** Decode left side ea
0000281C  3002                    3187      MOVE.W      D2,D0
0000281E  0240 0E00               3188      ANDI.W      #%0000111000000000,D0
00002822  EC88                    3189      LSR.L       #6,D0
00002824  4EB8 167C               3190      JSR         EADecoder_left  
00002828                          3191      
00002828  6000 E8C8               3192      BRA         opdec_return
0000282C                          3193      
0000282C                          3194      
0000282C                          3195  MATCH_AND_EA_B
0000282C                          3196      ** Move command size into D1
0000282C  123C 0002               3197      MOVE.B      #2,D1
00002830                          3198      ** Print command
00002830  103C 000E               3199      MOVE.B      #14,D0
00002834  43F8 0057               3200      LEA         pr_AND,A1
00002838  4E4F                    3201      TRAP        #15
0000283A                          3202      ** Print size
0000283A  43F8 0016               3203      LEA         pr_BYTE,A1
0000283E  4E4F                    3204      TRAP        #15
00002840                          3205      
00002840  6000 002E               3206      BRA         print_and_ea
00002844                          3207  MATCH_AND_EA_W
00002844                          3208      ** Move command size into D1
00002844  123C 0002               3209      MOVE.B      #2,D1
00002848                          3210      ** Print command
00002848  103C 000E               3211      MOVE.B      #14,D0
0000284C  43F8 0057               3212      LEA         pr_AND,A1
00002850  4E4F                    3213      TRAP        #15
00002852                          3214      ** Print size
00002852  43F8 0019               3215      LEA         pr_WORD,A1
00002856  4E4F                    3216      TRAP        #15
00002858                          3217      
00002858  6000 0016               3218      BRA         print_and_ea
0000285C                          3219  MATCH_AND_EA_L
0000285C                          3220      ** Move command size into D1
0000285C  123C 0004               3221      MOVE.B      #4,D1
00002860                          3222      ** Print command
00002860  103C 000E               3223      MOVE.B      #14,D0
00002864  43F8 0057               3224      LEA         pr_AND,A1
00002868  4E4F                    3225      TRAP        #15
0000286A                          3226      ** Print size
0000286A  43F8 001C               3227      LEA         pr_LONG,A1
0000286E  4E4F                    3228      TRAP        #15
00002870                          3229  print_and_ea
00002870                          3230      ** Print space
00002870  43F8 0005               3231      LEA         pr_space3,A1
00002874  4E4F                    3232      TRAP        #15
00002876                          3233      ** Decode left side ea
00002876  3002                    3234      MOVE.W      D2,D0
00002878  0240 0E00               3235      ANDI.W      #%0000111000000000,D0
0000287C  EC88                    3236      LSR.L       #6,D0
0000287E  4EB8 167C               3237      JSR         EADecoder_left
00002882                          3238      ** Add comma
00002882  103C 000E               3239      MOVE.B      #14,D0
00002886  43F8 0014               3240      LEA         pr_comma,A1
0000288A  4E4F                    3241      TRAP        #15
0000288C                          3242      ** Decode right side ea
0000288C  1002                    3243      MOVE.B      D2,D0
0000288E  0200 003F               3244      ANDI.B      #%00111111,D0
00002892  4EB8 1694               3245      JSR         EADecoder
00002896                          3246      
00002896  6000 E85A               3247      BRA         opdec_return
0000289A                          3248  
0000289A                          3249  
0000289A                          3250  
0000289A                          3251  
0000289A                          3252  
0000289A                          3253  
0000289A                          3254  
0000289A                          3255  
0000289A                          3256  
0000289A                          3257  -------------------- end include --------------------
0000289A                          3258  
0000289A                          3259  
0000289A                          3260  
0000289A                          3261  
0000289A                          3262  
0000289A                          3263  -------------------- end include --------------------
0000289A                          3264  
0000289A                          3265          END     start

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
A2H                 108E
ABS_LONG            39
ABS_WORD            38
ADDA_L              7
ADDA_W              3
ADDBYTELOOP         10B2
ADDBYTES            10AA
ADDI_B              18
ADDI_L              1A
ADDI_RETURN         10EE
ADDI_W              19
ADDQ                5
ADDQ_B              0
ADDQ_L              2
ADDQ_W              1
ADD_ADDA            D
ADD_TO_EA_B         4
ADD_TO_EA_L         6
ADD_TO_EA_W         5
ADD_TO_REG_B        0
ADD_TO_REG_L        2
ADD_TO_REG_W        1
AN                  8
AS                  0
ASL                 383
ASR                 387
BCC                 6
BCC_16              0
BCC_32              FF
CASCADE_D1          1C72
CASCADE_D2          1C8A
CASCADE_D3          1CA2
CASCADE_D4          1CBA
CASCADE_D5          1CD2
CASCADE_D6          1CEA
CASCADE_D7          1D02
CC_CC               4
CC_CS               5
CC_EQ               7
CC_F                1
CC_GE               C
CC_GT               E
CC_HI               2
CC_LE               F
CC_LS               3
CC_LT               D
CC_MI               B
CC_NE               6
CC_PL               A
CC_T                0
CC_VC               8
CC_VS               9
CHECK_ADDI          15CC
CHECK_ADDQ          15AA
CHECK_ADD_ADDA      1554
CHECK_BCC           11EC
CHECK_BCC_16        12AC
CHECK_BCC_32        1354
CHECK_BCC_8         1204
CHECK_CMP           1410
CHECK_DIVU_OR       14D6
CHECK_FOUR_BIT_SIG  1164
CHECK_MOVEA_L_AND_MOVE_L  165C
CHECK_MOVEA_W_AND_MOVE_W  1632
CHECK_MOVEM         1524
CHECK_MULS_LEA_CLR_JSR_RTS  1436
CHECK_MULS_W_AND    1488
CHECK_NOP           1158
CHECK_SHIFT         1D12
CHECK_SHIFT_AND_ROTATE  1118
CHECK_SUB           15F2
CLR_B               108
CLR_L               10A
CLR_SCRN            1066
CLR_W               109
CMP                 B
CMP_B               0
CMP_L               2
CMP_W               1
CONV_END            10BA
CR                  D
DEC_ABS_LONG        1744
DEC_ABS_WORD        1738
DEC_AN              175C
DEC_DN              1750
DEC_IMMEDIATE       171C
DEC_INDIRECT        1768
DEC_POST_INC        177C
DEC_PRE_DEC         1796
DEC_RETURN          16FE
DIVU                3
DIVU_OR             8
DN                  0
DN_B                0
DN_L                2
DN_W                1
DONE                1082
DONE_MSG            149
EADECODER           1694
EADECODER_LEFT      167C
EA_B                4
EA_L                6
EA_W                5
ERROR               25D0
ERROR_MSG           12D
EXECUTEPRINTSHIFTDIRECTION  1DAA
EXECUTEPRINTSHIFTSIZE  1DE4
EXECUTESHIFTOPCODEPRINT  1D82
FOUR_BIT_RETURN     10EA
GETSHIFTDESTREG     1D38
GET_BCC_DESTINATION_ADDRESS  1EB4
GET_BCC_DISPLACEMENT_16BIT  1EA0
GET_BCC_DISPLACEMENT_32BIT  1EA6
GET_BCC_DISPLACEMENT_8BIT  1E9A
GET_COUNT_REGISTER_VAL  1E22
GET_CURRENT_ADDRESS  1EAC
GET_DIRECTION       1E4A
GET_IS_REGISTER_OR_IMMEDIATE  1E5E
GET_SHIFT_OPCODE    1E76
GET_SIZE            1E36
IMMEDIATE           3C
IMM_SKIP            1716
IMM_WORD            1734
INDIRECT            10
INPUT_ERROR         105A
ISOLATE_CC_CODE_FOR_BCC  13FC
ISOLATE_OP_CODE     1644
JSR                 13A
L                   1
LEA                 7
LEFT_SKIP           1698
LF                  A
LOOP_START          102A
LS                  1
LSL                 38F
LSR                 38B
MATCH_ADDA_L        264A
MATCH_ADDA_W        2632
MATCH_ADDI_B        186E
MATCH_ADDI_L        189E
MATCH_ADDI_W        1886
MATCH_ADDQ_B        1A50
MATCH_ADDQ_L        1A80
MATCH_ADDQ_W        1A68
MATCH_ADD_TO_EA_B   1996
MATCH_ADD_TO_EA_L   19C6
MATCH_ADD_TO_EA_W   19AE
MATCH_ADD_TO_REG_B  18DC
MATCH_ADD_TO_REG_L  190C
MATCH_ADD_TO_REG_W  18F4
MATCH_AND_DN_B      27BE
MATCH_AND_DN_L      27EE
MATCH_AND_DN_W      27D6
MATCH_AND_EA_B      282C
MATCH_AND_EA_L      285C
MATCH_AND_EA_W      2844
MATCH_ASL           1E94
MATCH_ASR           1E92
MATCH_CC_CC_16      2012
MATCH_CC_CC_32      203C
MATCH_CC_CC_8       1FE8
MATCH_CC_CS_16      2090
MATCH_CC_CS_32      20BA
MATCH_CC_CS_8       2066
MATCH_CC_EQ_16      218C
MATCH_CC_EQ_32      21B6
MATCH_CC_EQ_8       2162
MATCH_CC_F_16       1F00
MATCH_CC_F_32       1F02
MATCH_CC_F_8        1EFE
MATCH_CC_GE_16      2402
MATCH_CC_GE_32      242C
MATCH_CC_GE_8       23D8
MATCH_CC_GT_16      24FE
MATCH_CC_GT_32      2528
MATCH_CC_GT_8       24D4
MATCH_CC_HI_16      1F20
MATCH_CC_HI_32      1F44
MATCH_CC_HI_8       1F04
MATCH_CC_LE_16      257C
MATCH_CC_LE_32      25A6
MATCH_CC_LE_8       2552
MATCH_CC_LS_16      1F94
MATCH_CC_LS_32      1FBE
MATCH_CC_LS_8       1F6A
MATCH_CC_LT_16      2480
MATCH_CC_LT_32      24AA
MATCH_CC_LT_8       2456
MATCH_CC_MI_16      2384
MATCH_CC_MI_32      23AE
MATCH_CC_MI_8       235A
MATCH_CC_NE_16      210E
MATCH_CC_NE_32      2138
MATCH_CC_NE_8       20E4
MATCH_CC_PL_16      2306
MATCH_CC_PL_32      2330
MATCH_CC_PL_8       22DC
MATCH_CC_T_16       1EFA
MATCH_CC_T_32       1EFC
MATCH_CC_T_8        1EF8
MATCH_CC_VC_16      220A
MATCH_CC_VC_32      2234
MATCH_CC_VC_8       21E0
MATCH_CC_VS_16      2288
MATCH_CC_VS_32      22B2
MATCH_CC_VS_8       225E
MATCH_CLR_B         2766
MATCH_CLR_L         2796
MATCH_CLR_W         277E
MATCH_CMP_B         26D8
MATCH_CMP_L         2708
MATCH_CMP_W         26F0
MATCH_DIVU          1AD4
MATCH_JSR           2748
MATCH_LEA           1678
MATCH_LSL           1E8E
MATCH_LSR           1E90
MATCH_MOVEA_L       25F4
MATCH_MOVEA_W       25DC
MATCH_MOVEM_TO_MEM_L  1B2A
MATCH_MOVEM_TO_MEM_W  1B12
MATCH_MOVEM_TO_REG_L  1B62
MATCH_MOVEM_TO_REG_W  1B60
MATCH_MOVEQ         1830
MATCH_MOVE_B        17BE
MATCH_MOVE_L        17EE
MATCH_MOVE_W        17D6
MATCH_MULS_L        167A
MATCH_MULS_W        268C
MATCH_NOP           17B0
MATCH_OR_DN_B       166C
MATCH_OR_DN_L       1670
MATCH_OR_DN_W       166E
MATCH_OR_EA_B       1672
MATCH_OR_EA_L       1676
MATCH_OR_EA_W       1674
MATCH_ROL           1E96
MATCH_ROR           1E98
MATCH_RTS           26CA
MATCH_SUB_TO_DN_B   1924
MATCH_SUB_TO_DN_L   1954
MATCH_SUB_TO_DN_W   193C
MATCH_SUB_TO_EA_B   19DE
MATCH_SUB_TO_EA_L   1A0E
MATCH_SUB_TO_EA_W   19F6
MESSAGE             F5
MESSAGE2            11A
MOVEA_WL            1
MOVEM_TO_MEM_L      123
MOVEM_TO_MEM_W      122
MOVEM_TO_REG_L      133
MOVEM_TO_REG_W      132
MOVEQ_              7
MOVE_B              1
MOVE_L              2
MOVE_W              3
MULS_L              130
MULS_LEA_CLR_JSR_RTS_MOVEM  4
MULS_OP_W           7
MULS_W_AND          C
NOP                 4E71
NOP_RETURN          10E6
NUMSUB              10C0
NUMSUBRTN           109C
OPDECODER           10DC
OPDEC_RETURN        10F2
OUTPUT              10000
POST_INC            18
PRE_DEC             20
PRINTARITHSHIFT     1D6E
PRINTHEX            1EB8
PRINTLOGICSHIFT     1D78
PRINTROTATE         1D64
PRINTSHIFT          1E08
PRINTSHIFTBYTE      1DC6
PRINTSHIFTDATA      1D4C
PRINTSHIFTLEFT      1DA0
PRINTSHIFTLONG      1DDA
PRINTSHIFTREG       1E00
PRINTSHIFTRIGHT     1D96
PRINTSHIFTWORD      1DD0
PRINTSIZEBYTE       1ED4
PRINTSIZELONG       1EEC
PRINTSIZEWORD       1EE0
PRINTSTRING         1ECC
PRINT_ADDA          265E
PRINT_ADDI          18B6
PRINT_ADDQ          1A98
PRINT_ADD_TO_EA     1A26
PRINT_ADD_TO_REG    196C
PRINT_AND_DN        2802
PRINT_AND_EA        2870
PRINT_CLR           27AA
PRINT_CMP           271C
PRINT_MOVE          1806
PRINT_MOVEA         2608
PRINT_MOVEM_AN      1D12
PRINT_MOVEM_DN      1B8C
PRINT_MOVEM_DN_END  1C70
PRINT_MOVEM_MASK_TO_MEM  1B64
PRINT_MOVEM_TO_MEM  1B3E
PROGRAM_START       1000
PR_A0               DD
PR_A1               E0
PR_A2               E3
PR_A3               E6
PR_A4               E9
PR_A5               EC
PR_A6               EF
PR_A7               F2
PR_ADD              61
PR_ADDA             3D
PR_ADDI             65
PR_ADDQ             6A
PR_AND              57
PR_BCC_CC           8D
PR_BCC_CS           91
PR_BCC_EQ           95
PR_BCC_GE           99
PR_BCC_GT           9D
PR_BCC_HI           A1
PR_BCC_LE           A5
PR_BCC_LS           A9
PR_BCC_LT           AD
PR_BCC_MI           B1
PR_BCC_NE           B5
PR_BCC_PL           B9
PR_BCC_VC           BD
PR_BCC_VS           C1
PR_BYTE             16
PR_CLR              47
PR_CMP              4F
PR_COMMA            14
PR_D0               C5
PR_D1               C8
PR_D2               CB
PR_D3               CE
PR_D4               D1
PR_D5               D4
PR_D6               D7
PR_D7               DA
PR_DIVU             73
PR_ERROR            87
PR_HASH             1F
PR_HEXTAG           21
PR_HYPHEN           24
PR_JSR              53
PR_LONG             1C
PR_MOVE             2C
PR_MOVEA            31
PR_MOVEM            37
PR_MOVEQ            5B
PR_MULS             42
PR_NOP              28
PR_REG              78
PR_RTS              4B
PR_SHIFT_AS         7D
PR_SHIFT_L          83
PR_SHIFT_LS         80
PR_SHIFT_R          85
PR_SHIFT_RO         7A
PR_SLASH            26
PR_SPACE            0
PR_SPACE2           2
PR_SPACE3           5
PR_SPACE4           9
PR_SPACE5           E
PR_SUB              6F
PR_WORD             19
R                   0
READFIRSTFOURBITS   10F8
READFIRSTTENBITS    110A
RO                  3
ROL                 39F
ROR                 39B
RTS                 4E75
SHIFT               E
SHIFT_BYTE          0
SHIFT_IMMED         0
SHIFT_LONG          3
SHIFT_REGISTER      1
SHIFT_WORD          1
START               1000
SUB                 9
SUB_TO_DN_B         0
SUB_TO_DN_L         2
SUB_TO_DN_W         1
SUB_TO_EA_B         4
SUB_TO_EA_L         6
SUB_TO_EA_W         5
TO_MEM_A0           1D12
TO_MEM_A1           1D12
TO_MEM_A2           1D12
TO_MEM_A3           1D12
TO_MEM_A4           1D12
TO_MEM_A5           1D12
TO_MEM_A6           1D12
TO_MEM_A7           1D12
TO_MEM_D0           1B8C
TO_MEM_D1           1BAA
TO_MEM_D2           1BC8
TO_MEM_D3           1BE6
TO_MEM_D4           1C04
TO_MEM_D5           1C22
TO_MEM_D6           1C40
TO_MEM_D7           1C5E
UPSEND              10D4
UPSUB               10CA
UPSUBRTN            10A4

00001000 Starting Address
Assembler used: EASy68K Editor/Assembler v5.15.04
Created On: 3/10/2017 5:26:16 PM

00000000                             1  *-----------------------------------------------------------
00000000                             2  * Title      : Main Driver Program
00000000                             3  * Written by : Arsany Azmy, Connor McGwire
00000000                             4  * Date       :
00000000                             5  * Description:
00000000                             6  *-----------------------------------------------------------
00000000  =0000000D                  7  CR      EQU     $0D
00000000  =0000000A                  8  LF      EQU     $0A
00000000                             9  
00000000                            10  
00000000                            11  *** Common strings for printing
00000000= 20 00                     12  pr_space    DC.B    ' ',0
00000002= 20 20 00                  13  pr_space2   DC.B    '  ',0
00000005= 20 20 20 00               14  pr_space3   DC.B    '   ',0
00000009= 20 20 20 20 00            15  pr_space4   DC.B    '    ',0
0000000E= 20 20 20 20 20 00         16  pr_space5   DC.B    '     ',0
00000014= 2C 00                     17  pr_comma    DC.B    ',',0
00000016= 2E 42 00                  18  pr_BYTE     DC.B    '.B',0
00000019= 2E 57 00                  19  pr_WORD     DC.B    '.W',0
0000001C= 2E 4C 00                  20  pr_LONG     DC.B    '.L',0
0000001F= 23 00                     21  pr_hash     DC.B    '#',0
00000021= 23 24 00                  22  pr_hextag   DC.B    '#$',0
00000024= 2D 00                     23  pr_hyphen   DC.B    '-',0
00000026= 2F 00                     24  pr_slash    DC.B    '/',0
00000028                            25  
00000028                            26  
00000028                            27  ** Command strings constants
00000028= 4E 4F 50 00               28  pr_NOP      DC.B    'NOP',0
0000002C= 4D 4F 56 45 00            29  pr_MOVE     DC.B    'MOVE',0
00000031= 4D 4F 56 45 41 00         30  pr_MOVEA    DC.B    'MOVEA',0
00000037= 4D 4F 56 45 4D 00         31  pr_MOVEM    DC.B    'MOVEM',0
0000003D= 41 44 44 41 00            32  pr_ADDA     DC.B    'ADDA',0
00000042= 4D 55 4C 53 00            33  pr_MULS     DC.B    'MULS',0
00000047= 43 4C 52 00               34  pr_CLR      DC.B    'CLR',0
0000004B= 52 54 53 00               35  pr_RTS      DC.B    'RTS',0
0000004F= 43 4D 50 00               36  pr_CMP      DC.B    'CMP',0
00000053= 4A 53 52 00               37  pr_JSR      DC.B    'JSR',0
00000057= 41 4E 44 00               38  pr_AND      DC.B    'AND',0
0000005B= 4D 4F 56 45 51 00         39  pr_MOVEQ    DC.B    'MOVEQ',0
00000061= 41 44 44 00               40  pr_ADD      DC.B    'ADD',0
00000065= 41 44 44 49 00            41  pr_ADDI     DC.B    'ADDI',0
0000006A= 41 44 44 51 00            42  pr_ADDQ     DC.B    'ADDQ',0
0000006F= 53 55 42 00               43  pr_SUB      DC.B    'SUB',0
00000073= 44 49 56 55 00            44  pr_DIVU     DC.B    'DIVU',0
00000078                            45  
00000078= 44 00                     46  pr_reg      DC.B    'D',0
0000007A                            47  
0000007A= 52 4F 00                  48  pr_SHIFT_RO   DC.B  'RO',0
0000007D= 41 53 00                  49  pr_SHIFT_AS   DC.B  'AS',0
00000080= 4C 53 00                  50  pr_SHIFT_LS   DC.B  'LS',0
00000083= 4C 00                     51  pr_SHIFT_L    DC.B  'L',0
00000085= 52 00                     52  pr_SHIFT_R    DC.B  'R',0
00000087                            53  
00000087= 45 52 52 4F 52 00         54  pr_ERROR    DC.B    'ERROR',0
0000008D                            55  
0000008D= 42 43 43 00               56  pr_BCC_CC   DC.B    'BCC',0
00000091= 42 43 53 00               57  pr_BCC_CS   DC.B    'BCS',0
00000095= 42 45 51 00               58  pr_BCC_EQ   DC.B    'BEQ',0
00000099= 42 47 45 00               59  pr_BCC_GE   DC.B    'BGE',0
0000009D= 42 47 54 00               60  pr_BCC_GT   DC.B    'BGT',0
000000A1= 42 48 49 00               61  pr_BCC_HI   DC.B    'BHI',0
000000A5= 42 4C 45 00               62  pr_BCC_LE   DC.B    'BLE',0
000000A9= 42 4C 53 00               63  pr_BCC_LS   DC.B    'BLS',0
000000AD= 42 4C 54 00               64  pr_BCC_LT   DC.B    'BLT',0
000000B1= 42 4D 49 00               65  pr_BCC_MI   DC.B    'BMI',0
000000B5= 42 4E 45 00               66  pr_BCC_NE   DC.B    'BNE',0
000000B9= 42 50 4C 00               67  pr_BCC_PL   DC.B    'BPL',0
000000BD= 42 56 43 00               68  pr_BCC_VC   DC.B    'BVC',0
000000C1= 42 56 53 00               69  pr_BCC_VS   DC.B    'BVS',0
000000C5                            70  
000000C5                            71  ** Register constants
000000C5= 44 30 00                  72  pr_d0       DC.B    'D0',0
000000C8= 44 31 00                  73  pr_d1       DC.B    'D1',0
000000CB= 44 32 00                  74  pr_d2       DC.B    'D2',0
000000CE= 44 33 00                  75  pr_d3       DC.B    'D3',0
000000D1= 44 34 00                  76  pr_d4       DC.B    'D4',0
000000D4= 44 35 00                  77  pr_d5       DC.B    'D5',0
000000D7= 44 36 00                  78  pr_d6       DC.B    'D6',0
000000DA= 44 37 00                  79  pr_d7       DC.B    'D7',0
000000DD                            80  
000000DD= 41 30 00                  81  pr_a0       DC.B    'A0',0
000000E0= 41 31 00                  82  pr_a1       DC.B    'A1',0
000000E3= 41 32 00                  83  pr_a2       DC.B    'A2',0
000000E6= 41 33 00                  84  pr_a3       DC.B    'A3',0
000000E9= 41 34 00                  85  pr_a4       DC.B    'A4',0
000000EC= 41 35 00                  86  pr_a5       DC.B    'A5',0
000000EF= 41 36 00                  87  pr_a6       DC.B    'A6',0
000000F2= 41 37 00                  88  pr_a7       DC.B    'A7',0
000000F5                            89  
000000F5                            90  ** Messages
000000F5= 45 6E 74 65 72 20 ...     91  MESSAGE     DC.B    'Enter the address of compiled code: ',0
0000011A= 0D 0A 50 6C 65 61 ...     92  MESSAGE2    DC.B    CR,LF,'Please hit enter',0
0000012D= 49 6E 76 61 6C 69 ...     93  ERROR_MSG   DC.B    'Invalid input, please rerun',0
00000149= 45 6E 64 20 6F 66 ...     94  DONE_MSG    DC.B    'End of program found!',0
0000015F                            95  
00001000                            96  start   ORG     $1000
00001000                            97  
00001000                            98  program_start
00001000                            99  
00001000                           100  *------Code for input-------
00001000                           101  
00001000  43F8 00F5                102          LEA     MESSAGE,A1      *Code block for first message
00001004  103C 000E                103          MOVE.B  #14,D0
00001008  4E4F                     104          TRAP    #15
0000100A                           105  
0000100A  227C 00004000            106          MOVEA.L #$4000, A1
00001010  103C 0002                107          MOVE.B  #2,D0           *Code block for reading input
00001014  4E4F                     108          TRAP    #15
00001016  3001                     109          MOVE.W  D1,D0
00001018                           110  
00001018  2049                     111          MOVEA.L A1,A0           *Move the contents of A1 to A0 for the conversion
0000101A  4EB9 0000108E            112          JSR     A2H             *Branch to Connor's conversion code
00001020                           113  
00001020  2040                     114          MOVEA.L D0,A0
00001022                           115  
00001022  0C50 FFFF                116          CMPI.W  #$FFFF,(A0)
00001026  6700 0032                117          BEQ     input_error
0000102A                           118  
0000102A                           119  loop_start
0000102A                           120  
0000102A  2208                     121          MOVE.L  A0,D1           *Print out the address we're working on
0000102C  7410                     122          MOVE.L  #16,D2
0000102E  700F                     123          MOVE.L  #15,D0
00001030  4E4F                     124          TRAP    #15
00001032                           125  
00001032  700E                     126          MOVE.L  #14,D0
00001034  43F8 0009                127          LEA     pr_space4,A1
00001038  4E4F                     128          TRAP    #15
0000103A                           129  
0000103A  3418                     130          MOVE.W  (A0)+,D2
0000103C  0C42 FFFF                131          CMPI.W  #$FFFF,D2
00001040  6700 0040                132          BEQ     Done
00001044                           133  
00001044  4EB9 000010DC            134          JSR     OpDecoder
0000104A                           135  
0000104A  700D                     136          MOVE.L  #13,D0
0000104C  4E4F                     137          TRAP    #15
0000104E                           138          
0000104E  5245                     139          ADD     #1,D5       *Increment d5 by 1
00001050  BA7C 001F                140          CMP     #31,D5      *Check if theres 31 lines of output
00001054  6700 0010                141          BEQ     clr_scrn    *If theres 20 lines, clear the screen and prompt
00001058                           142  
00001058  60D0                     143          BRA     loop_start
0000105A                           144  
0000105A                           145  input_error
0000105A  700D                     146          MOVE.L  #13,D0
0000105C  43F8 012D                147          LEA     ERROR_MSG,A1
00001060  4E4F                     148          TRAP    #15
00001062  6000 001E                149          BRA     Done
00001066                           150  clr_scrn
00001066  43F8 011A                151          LEA     MESSAGE2,A1     *Print out initial message
0000106A  103C 000E                152          MOVE.B  #14,D0
0000106E  4E4F                     153          TRAP    #15
00001070                           154          
00001070  103C 0002                155          MOVE.B  #2,D0           *Get user input
00001074  4E4F                     156          TRAP    #15
00001076  1A3C 0000                157          MOVE.B  #0,D5
0000107A  60AE                     158          BRA     loop_start
0000107C                           159          
0000107C  103C 0009                160          MOVE.B  #9,D0           *halt the simulator
00001080  4E4F                     161          TRAP    #15
00001082                           162          
00001082                           163  Done
00001082  700E                     164          MOVE.L  #14,D0
00001084  43F8 0149                165          LEA     DONE_MSG,A1
00001088  4E4F                     166          TRAP    #15
0000108A  FFFF FFFF                167          SIMHALT
0000108E                           168  
0000108E                           169          INCLUDE 'ASCII_HEX_Conversions.x68'
0000108E                           170  
0000108E                           171  
0000108E                           172  
0000108E                           173  A2H     *Converts and ASCII Byte string into HEX; Size WORD
0000108E  48E7 7FFE                174          MOVEM.L     D1-D7/A0-A6, -(SP)  
00001092                           175          
00001092  3400                     176          MOVE.W  D0,D2
00001094  3202                     177          MOVE.W  D2,D1                   *Store length of string into D1 for looping
00001096  2248                     178          MOVEA.L A0,A1                   *Copy starting point of string
00001098                           179  
00001098  6000 0026                180          BRA     numSub
0000109C                           181  numSubRTN
0000109C  2049                     182          MOVEA.L A1,A0                   *Restore address position
0000109E  3202                     183          MOVE.W  D2,D1                   *Reset loop counter
000010A0                           184          
000010A0  6000 0028                185          BRA     upSub
000010A4                           186  upSubRTN        
000010A4  2049                     187          MOVEA.L A1,A0                   *Restore address position
000010A6  3202                     188          MOVE.W  D2,D1                   *Reset loop counter
000010A8  4240                     189          CLR     D0                      *Clear D0
000010AA                           190  addBytes
000010AA  D018                     191          ADD.B   (A0)+,D0
000010AC  5301                     192          SUBI.B  #1,D1
000010AE  6700 000A                193          BEQ     conv_end
000010B2                           194  addByteLoop
000010B2  E980                     195          ASL.L   #4,D0
000010B4  D018                     196          ADD.B   (A0)+,D0
000010B6  5301                     197          SUBI.B  #1,D1
000010B8  66F8                     198          BNE     addByteLoop
000010BA                           199  conv_end
000010BA  4CDF 7FFE                200          MOVEM.L     (SP)+, D1-D7/A0-A6
000010BE  4E75                     201          RTS
000010C0                           202          
000010C0                           203  numSub  *Convert ASCII 'number' to true number byte; Should not be called outside of the A2H subroutines
000010C0  0418 0030                204          SUBI.B  #$30,(A0)+              *Subtract difference between null ASCII and '0' ASCII
000010C4  5341                     205          SUB.W   #1,D1                   *Decrement loop counter
000010C6  66F8                     206          BNE     numSub                  *If loop has not ended restart
000010C8  60D2                     207          BRA     numSubRTN
000010CA                           208  
000010CA                           209  upSub   *Loops through string to remove any upper case characters 
000010CA                           210          *that may remain in the string
000010CA  0C10 0009                211          CMPI.B  #9,(A0)                 *Check if the value is greater than 0-9
000010CE  6F00 0004                212          BLE     upSEnd                  *If it's not, continue loop
000010D2  5310                     213          SUBI.B  #1,(A0)                 *Otherwise, subtract difference between ASCII 'number' code and 'A' code
000010D4                           214  upSEnd
000010D4  5248                     215          ADDA.W  #1,A0                   *Increment to next position to check for uppercase
000010D6  5341                     216          SUB.W   #1,D1                   *Decrement loop counter
000010D8  66F0                     217          BNE     upSub                   
000010DA  60C8                     218          BRA     upSubRTN
000010DC                           219  
000010DC                           220  
000010DC                           221  -------------------- end include --------------------
000010DC                           222          INCLUDE 'opcodes.x68'
000010DC                           223  
000010DC  =00004E71                224  NOP             EQU $4E71
000010DC  =00000001                225  MOVE_B          EQU %0001
000010DC  =00000003                226  MOVE_W          EQU %0011
000010DC  =00000002                227  MOVE_L          EQU %0010
000010DC  =00000001                228  MOVEA_WL        EQU %001
000010DC  =00000007                229  MOVEQ_          EQU %0111
000010DC                           230  
000010DC  =00000018                231  ADDI_B          EQU %0000011000
000010DC  =00000019                232  ADDI_W          EQU %0000011001
000010DC  =0000001A                233  ADDI_L          EQU %0000011010
000010DC                           234  
000010DC  =0000000D                235  ADD_ADDA        EQU %1101
000010DC  =00000000                236  ADD_TO_REG_B    EQU %000
000010DC  =00000001                237  ADD_TO_REG_W    EQU %001
000010DC  =00000002                238  ADD_TO_REG_L    EQU %010
000010DC  =00000004                239  ADD_TO_EA_B     EQU %100
000010DC  =00000005                240  ADD_TO_EA_W     EQU %101
000010DC  =00000006                241  ADD_TO_EA_L     EQU %110
000010DC  =00000003                242  ADDA_W          EQU %011
000010DC  =00000007                243  ADDA_L          EQU %111
000010DC                           244  
000010DC  =00000005                245  ADDQ            EQU %0101
000010DC  =00000000                246  ADDQ_B          EQU %000
000010DC  =00000001                247  ADDQ_W          EQU %001
000010DC  =00000002                248  ADDQ_L          EQU %010
000010DC                           249  
000010DC  =0000000C                250  MULS_W_AND      EQU %1100
000010DC  =00000007                251  MULS_OP_W       EQU %111
000010DC                           252  
000010DC  =00000009                253  SUB             EQU %1001
000010DC  =00000000                254  SUB_TO_DN_B     EQU %000
000010DC  =00000001                255  SUB_TO_DN_W     EQU %001
000010DC  =00000002                256  SUB_TO_DN_L     EQU %010
000010DC  =00000004                257  SUB_TO_EA_B     EQU %100
000010DC  =00000005                258  SUB_TO_EA_W     EQU %101
000010DC  =00000006                259  SUB_TO_EA_L     EQU %110
000010DC                           260  
000010DC  =00000008                261  DIVU_OR         EQU %1000
000010DC  =00000003                262  DIVU            EQU %011
000010DC                           263  
000010DC  =00000000                264  DN_B            EQU %000
000010DC  =00000001                265  DN_W            EQU %001
000010DC  =00000002                266  DN_L            EQU %010
000010DC  =00000004                267  EA_B            EQU %100
000010DC  =00000005                268  EA_W            EQU %101
000010DC  =00000006                269  EA_L            EQU %110
000010DC                           270  
000010DC  =00000004                271  MULS_LEA_CLR_JSR_RTS_MOVEM    EQU %0100
000010DC  =00004E75                272  RTS             EQU $4E75
000010DC  =00000007                273  LEA             EQU %111
000010DC  =0000013A                274  JSR             EQU %0100111010
000010DC  =00000108                275  CLR_B           EQU %0100001000
000010DC  =00000109                276  CLR_W           EQU %0100001001
000010DC  =0000010A                277  CLR_L           EQU %0100001010
000010DC  =00000130                278  MULS_L          EQU %0100110000
000010DC                           279  
000010DC  =00000122                280  MOVEM_TO_MEM_W  EQU %0100100010
000010DC  =00000123                281  MOVEM_TO_MEM_L  EQU %0100100011
000010DC  =00000132                282  MOVEM_TO_REG_W  EQU %0100110010
000010DC  =00000133                283  MOVEM_TO_REG_L  EQU %0100110011
000010DC                           284  
000010DC  =0000038F                285  LSL             EQU %1110001111
000010DC  =0000038B                286  LSR             EQU %1110001011
000010DC  =00000387                287  ASR             EQU %1110000111
000010DC  =00000383                288  ASL             EQU %1110000011
000010DC  =0000039F                289  ROL             EQU %1110011111
000010DC  =0000039B                290  ROR             EQU %1110011011
000010DC                           291  
000010DC  =0000000B                292  CMP             EQU %1011
000010DC  =00000000                293  CMP_B           EQU %000
000010DC  =00000001                294  CMP_W           EQU %001
000010DC  =00000002                295  CMP_L           EQU %010
000010DC                           296  
000010DC  =00000006                297  BCC             EQU %0110
000010DC  =00000000                298  BCC_16          EQU %00000000
000010DC  =000000FF                299  BCC_32          EQU $FF
000010DC  =00000000                300  CC_T            EQU %0000
000010DC  =00000001                301  CC_F            EQU %0001
000010DC  =00000002                302  CC_HI           EQU %0010
000010DC  =00000003                303  CC_LS           EQU %0011
000010DC  =00000004                304  CC_CC           EQU %0100
000010DC  =00000005                305  CC_CS           EQU %0101
000010DC  =00000006                306  CC_NE           EQU %0110
000010DC  =00000007                307  CC_EQ           EQU %0111
000010DC  =00000008                308  CC_VC           EQU %1000
000010DC  =00000009                309  CC_VS           EQU %1001
000010DC  =0000000A                310  CC_PL           EQU %1010
000010DC  =0000000B                311  CC_MI           EQU %1011
000010DC  =0000000C                312  CC_GE           EQU %1100
000010DC  =0000000D                313  CC_LT           EQU %1101
000010DC  =0000000E                314  CC_GT           EQU %1110
000010DC  =0000000F                315  CC_LE           EQU %1111
000010DC                           316  
000010DC                           317  
000010DC                           318  
000010DC                           319  
000010DC                           320  
000010DC                           321  
000010DC                           322  OpDecoder
000010DC  48E7 FF7E                323      MOVEM.L     D0-D7/A1-A6, -(SP)
000010E0  4241                     324      CLR         D1
000010E2  6000 0074                325      BRA         CHECK_NOP
000010E6                           326  NOP_RETURN
000010E6  6000 007C                327      BRA         CHECK_FOUR_BIT_SIG
000010EA                           328  FOUR_BIT_RETURN
000010EA  6000 04E0                329      BRA         CHECK_ADDI
000010EE                           330  ADDI_RETURN
000010EE  6000 0028                331      BRA         CHECK_SHIFT_AND_ROTATE
000010F2                           332  
000010F2                           333  opdec_return
000010F2  4CDF 7EFF                334      MOVEM.L     (SP)+, D0-D7/A1-A6
000010F6  4E75                     335      RTS
000010F8                           336  
000010F8                           337  ReadFirstFourBits
000010F8                           338  
000010F8  48A7 2000                339      MOVEM.W     D2, -(SP)
000010FC                           340  
000010FC  1E3C 000C                341      MOVE.B      #12,D7
00001100  EE6A                     342      LSR.W       D7,D2
00001102  1602                     343      MOVE.B      D2,D3
00001104                           344  
00001104  4C9F 0004                345      MOVEM.W     (SP)+,D2
00001108  4E75                     346      RTS
0000110A                           347  
0000110A                           348  ReadFirstTenBits
0000110A                           349  
0000110A  48A7 2000                350      MOVEM.W     D2, -(SP)
0000110E                           351  
0000110E  EC4A                     352      LSR.W       #6,D2
00001110  3602                     353      MOVE.W      D2,D3
00001112                           354  
00001112  4C9F 0004                355      MOVEM.W     (SP)+,D2
00001116  4E75                     356      RTS
00001118                           357  CHECK_SHIFT_AND_ROTATE
00001118                           358  
00001118  61F0                     359      BSR         ReadFirstTenBits
0000111A                           360  
0000111A  3C3C 038F                361      MOVE.W      #LSL,D6
0000111E  BC43                     362      CMP.W       D3,D6
00001120  6700 105A                363      BEQ         MATCH_LSL
00001124                           364  
00001124  3C3C 038B                365      MOVE.W      #LSR,D6
00001128  BC43                     366      CMP.W       D3,D6
0000112A  6700 1052                367      BEQ         MATCH_LSR
0000112E                           368  
0000112E  3C3C 0387                369      MOVE.W      #ASR,D6
00001132  BC43                     370      CMP.W       D3,D6
00001134  6700 104A                371      BEQ         MATCH_ASR
00001138                           372  
00001138  3C3C 0383                373      MOVE.W      #ASL,D6
0000113C  BC43                     374      CMP.W       D3,D6
0000113E  6700 1042                375      BEQ         MATCH_ASL
00001142                           376  
00001142  3C3C 039F                377      MOVE.W      #ROL,D6
00001146  BC43                     378      CMP.W       D3,D6
00001148  6700 103A                379      BEQ         MATCH_ROL
0000114C                           380  
0000114C  3C3C 039B                381      MOVE.W      #ROR,D6
00001150  BC43                     382      CMP.W       D3,D6
00001152  6700 1032                383      BEQ         MATCH_ROR
00001156                           384  
00001156  609A                     385      BRA         opdec_return
00001158                           386  
00001158                           387  CHECK_NOP
00001158                           388  
00001158  3C3C 4E71                389      MOVE.W      #NOP,D6
0000115C  BC42                     390      CMP.W       D2,D6
0000115E  6700 0650                391      BEQ         MATCH_NOP
00001162                           392  
00001162  6082                     393      BRA         NOP_RETURN
00001164                           394  
00001164                           395  CHECK_FOUR_BIT_SIG
00001164                           396  
00001164  6192                     397      BSR         ReadFirstFourBits
00001166                           398  
00001166  1C3C 0001                399      MOVE.B      #MOVE_B,D6
0000116A  BC03                     400      CMP.B       D3,D6
0000116C  6700 0650                401      BEQ         MATCH_MOVE_B
00001170                           402  
00001170  1C3C 0003                403      MOVE.B      #MOVE_W,D6
00001174  BC03                     404      CMP.B       D3,D6
00001176  6700 04BA                405      BEQ         CHECK_MOVEA_W_AND_MOVE_W
0000117A                           406  
0000117A  1C3C 0002                407      MOVE.B      #MOVE_L,D6
0000117E  BC03                     408      CMP.B       D3,D6
00001180  6700 04DA                409      BEQ         CHECK_MOVEA_L_AND_MOVE_L
00001184                           410  
00001184  1C3C 0007                411      MOVE.B      #MOVEQ_,D6
00001188  BC03                     412      CMP.B       D3,D6
0000118A  6700 06A4                413      BEQ         MATCH_MOVEQ
0000118E                           414  
0000118E  1C3C 000D                415      MOVE.B      #ADD_ADDA,D6
00001192  BC03                     416      CMP.B       D3,D6
00001194  6700 03BE                417      BEQ         CHECK_ADD_ADDA
00001198                           418  
00001198  1C3C 0005                419      MOVE.B      #ADDQ,D6
0000119C  BC03                     420      CMP.B       D3,D6
0000119E  6700 040A                421      BEQ         CHECK_ADDQ
000011A2                           422  
000011A2  1C3C 0009                423      MOVE.B      #SUB,D6
000011A6  BC03                     424      CMP.B       D3,D6
000011A8  6700 0448                425      BEQ         CHECK_SUB
000011AC                           426  
000011AC  1C3C 0008                427      MOVE.B      #DIVU_OR,D6
000011B0  BC03                     428      CMP.B       D3,D6
000011B2  6700 0322                429      BEQ         CHECK_DIVU_OR
000011B6                           430  
000011B6  1C3C 000C                431      MOVE.B      #MULS_W_AND,D6
000011BA  BC03                     432      CMP.B       D3,D6
000011BC  6700 02CA                433      BEQ         CHECK_MULS_W_AND
000011C0                           434  
000011C0  1C3C 0004                435      MOVE.B      #MULS_LEA_CLR_JSR_RTS_MOVEM,D6
000011C4  BC03                     436      CMP.B       D3,D6
000011C6  6700 026E                437      BEQ         CHECK_MULS_LEA_CLR_JSR_RTS
000011CA                           438  
000011CA  1C3C 000B                439      MOVE.B      #CMP,D6
000011CE  BC03                     440      CMP.B       D3,D6
000011D0  6700 023E                441      BEQ         CHECK_CMP
000011D4                           442  
000011D4  1C3C 0006                443      MOVE.B      #BCC,D6
000011D8  BC03                     444      CMP.B       D3,D6
000011DA  6700 0010                445      BEQ         CHECK_BCC
000011DE                           446  
000011DE  1C3C 000E                447      MOVE.B      #SHIFT,D6
000011E2  BC03                     448      CMP.B       D3,D6
000011E4  6700 0E1A                449      BEQ         CHECK_SHIFT
000011E8                           450  
000011E8  6000 FF00                451      BRA         FOUR_BIT_RETURN
000011EC                           452  CHECK_BCC
000011EC                           453  
000011EC  1C3C 0000                454      MOVE.B      #BCC_16,D6
000011F0  BC02                     455      CMP.B       D2,D6
000011F2  6700 00B8                456      BEQ         CHECK_BCC_16
000011F6                           457  
000011F6  1C3C 00FF                458      MOVE.B      #BCC_32,D6
000011FA  BC02                     459      CMP.B       D2,D6
000011FC  6700 0156                460      BEQ         CHECK_BCC_32
00001200                           461  
00001200  6000 0002                462      BRA         CHECK_BCC_8
00001204                           463  
00001204                           464  CHECK_BCC_8
00001204                           465  
00001204  6100 01F6                466      BSR         ISOLATE_CC_CODE_FOR_BCC
00001208                           467  
00001208  1C3C 0000                468      MOVE.B      #CC_T,D6
0000120C  BC03                     469      CMP.B       D3,D6
0000120E  6700 0FD6                470      BEQ         MATCH_CC_T_8
00001212                           471  
00001212  1C3C 0001                472      MOVE.B      #CC_F,D6
00001216  BC03                     473      CMP.B       D3,D6
00001218  6700 0FD2                474      BEQ         MATCH_CC_F_8
0000121C                           475  
0000121C  1C3C 0002                476      MOVE.B      #CC_HI,D6
00001220  BC03                     477      CMP.B       D3,D6
00001222  6700 0FCE                478      BEQ         MATCH_CC_HI_8
00001226                           479  
00001226  1C3C 0003                480      MOVE.B      #CC_LS,D6
0000122A  BC03                     481      CMP.B       D3,D6
0000122C  6700 102A                482      BEQ         MATCH_CC_LS_8
00001230                           483  
00001230  1C3C 0004                484      MOVE.B      #CC_CC,D6
00001234  BC03                     485      CMP.B       D3,D6
00001236  6700 109E                486      BEQ         MATCH_CC_CC_8
0000123A                           487  
0000123A  1C3C 0005                488      MOVE.B      #CC_CS,D6
0000123E  BC03                     489      CMP.B       D3,D6
00001240  6700 1112                490      BEQ         MATCH_CC_CS_8
00001244                           491  
00001244  1C3C 0006                492      MOVE.B      #CC_NE,D6
00001248  BC03                     493      CMP.B       D3,D6
0000124A  6700 1186                494      BEQ         MATCH_CC_NE_8
0000124E                           495  
0000124E  1C3C 0007                496      MOVE.B      #CC_EQ,D6
00001252  BC03                     497      CMP.B       D3,D6
00001254  6700 11FA                498      BEQ         MATCH_CC_EQ_8
00001258                           499  
00001258  1C3C 0008                500      MOVE.B      #CC_VC,D6
0000125C  BC03                     501      CMP.B       D3,D6
0000125E  6700 126E                502      BEQ         MATCH_CC_VC_8
00001262                           503  
00001262  1C3C 0009                504      MOVE.B      #CC_VS,D6
00001266  BC03                     505      CMP.B       D3,D6
00001268  6700 12E2                506      BEQ         MATCH_CC_VS_8
0000126C                           507  
0000126C  1C3C 000A                508      MOVE.B      #CC_PL,D6
00001270  BC03                     509      CMP.B       D3,D6
00001272  6700 1356                510      BEQ         MATCH_CC_PL_8
00001276                           511  
00001276  1C3C 000B                512      MOVE.B      #CC_MI,D6
0000127A  BC03                     513      CMP.B       D3,D6
0000127C  6700 13CA                514      BEQ         MATCH_CC_MI_8
00001280                           515  
00001280  1C3C 000C                516      MOVE.B      #CC_GE,D6
00001284  BC03                     517      CMP.B       D3,D6
00001286  6700 143E                518      BEQ         MATCH_CC_GE_8
0000128A                           519  
0000128A  1C3C 000D                520      MOVE.B      #CC_LT,D6
0000128E  BC03                     521      CMP.B       D3,D6
00001290  6700 14B2                522      BEQ         MATCH_CC_LT_8
00001294                           523  
00001294  1C3C 000E                524      MOVE.B      #CC_GT,D6
00001298  BC03                     525      CMP.B       D3,D6
0000129A  6700 1526                526      BEQ         MATCH_CC_GT_8
0000129E                           527  
0000129E  1C3C 000F                528      MOVE.B      #CC_LE,D6
000012A2  BC03                     529      CMP.B       D3,D6
000012A4  6700 159A                530      BEQ         MATCH_CC_LE_8
000012A8                           531  
000012A8  6000 1614                532      BRA         ERROR
000012AC                           533  
000012AC                           534  CHECK_BCC_16
000012AC                           535  
000012AC  6100 014E                536      BSR         ISOLATE_CC_CODE_FOR_BCC
000012B0                           537  
000012B0  1C3C 0000                538      MOVE.B      #CC_T,D6
000012B4  BC03                     539      CMP.B       D3,D6
000012B6  6700 0F30                540      BEQ         MATCH_CC_T_16
000012BA                           541  
000012BA  1C3C 0001                542      MOVE.B      #CC_F,D6
000012BE  BC03                     543      CMP.B       D3,D6
000012C0  6700 0F2C                544      BEQ         MATCH_CC_F_16
000012C4                           545  
000012C4  1C3C 0002                546      MOVE.B      #CC_HI,D6
000012C8  BC03                     547      CMP.B       D3,D6
000012CA  6700 0F42                548      BEQ         MATCH_CC_HI_16
000012CE                           549  
000012CE  1C3C 0003                550      MOVE.B      #CC_LS,D6
000012D2  BC03                     551      CMP.B       D3,D6
000012D4  6700 0FAC                552      BEQ         MATCH_CC_LS_16
000012D8                           553  
000012D8  1C3C 0004                554      MOVE.B      #CC_CC,D6
000012DC  BC03                     555      CMP.B       D3,D6
000012DE  6700 1020                556      BEQ         MATCH_CC_CC_16
000012E2                           557  
000012E2  1C3C 0005                558      MOVE.B      #CC_CS,D6
000012E6  BC03                     559      CMP.B       D3,D6
000012E8  6700 1094                560      BEQ         MATCH_CC_CS_16
000012EC                           561  
000012EC  1C3C 0006                562      MOVE.B      #CC_NE,D6
000012F0  BC03                     563      CMP.B       D3,D6
000012F2  6700 1108                564      BEQ         MATCH_CC_NE_16
000012F6                           565  
000012F6  1C3C 0007                566      MOVE.B      #CC_EQ,D6
000012FA  BC03                     567      CMP.B       D3,D6
000012FC  6700 117C                568      BEQ         MATCH_CC_EQ_16
00001300                           569  
00001300  1C3C 0008                570      MOVE.B      #CC_VC,D6
00001304  BC03                     571      CMP.B       D3,D6
00001306  6700 11F0                572      BEQ         MATCH_CC_VC_16
0000130A                           573  
0000130A  1C3C 0009                574      MOVE.B      #CC_VS,D6
0000130E  BC03                     575      CMP.B       D3,D6
00001310  6700 1264                576      BEQ         MATCH_CC_VS_16
00001314                           577  
00001314  1C3C 000A                578      MOVE.B      #CC_PL,D6
00001318  BC03                     579      CMP.B       D3,D6
0000131A  6700 12D8                580      BEQ         MATCH_CC_PL_16
0000131E                           581  
0000131E  1C3C 000B                582      MOVE.B      #CC_MI,D6
00001322  BC03                     583      CMP.B       D3,D6
00001324  6700 134C                584      BEQ         MATCH_CC_MI_16
00001328                           585  
00001328  1C3C 000C                586      MOVE.B      #CC_GE,D6
0000132C  BC03                     587      CMP.B       D3,D6
0000132E  6700 13C0                588      BEQ         MATCH_CC_GE_16
00001332                           589  
00001332  1C3C 000D                590      MOVE.B      #CC_LT,D6
00001336  BC03                     591      CMP.B       D3,D6
00001338  6700 1434                592      BEQ         MATCH_CC_LT_16
0000133C                           593  
0000133C  1C3C 000E                594      MOVE.B      #CC_GT,D6
00001340  BC03                     595      CMP.B       D3,D6
00001342  6700 14A8                596      BEQ         MATCH_CC_GT_16
00001346                           597  
00001346  1C3C 000F                598      MOVE.B      #CC_LE,D6
0000134A  BC03                     599      CMP.B       D3,D6
0000134C  6700 151C                600      BEQ         MATCH_CC_LE_16
00001350                           601  
00001350  6000 156C                602      BRA         ERROR
00001354                           603  
00001354                           604  
00001354                           605  CHECK_BCC_32
00001354                           606  
00001354  6100 00A6                607      BSR         ISOLATE_CC_CODE_FOR_BCC
00001358                           608  
00001358  1C3C 0000                609      MOVE.B      #CC_T,D6
0000135C  BC03                     610      CMP.B       D3,D6
0000135E  6700 0E8A                611      BEQ         MATCH_CC_T_32
00001362                           612  
00001362  1C3C 0001                613      MOVE.B      #CC_F,D6
00001366  BC03                     614      CMP.B       D3,D6
00001368  6700 0E86                615      BEQ         MATCH_CC_F_32
0000136C                           616  
0000136C  1C3C 0002                617      MOVE.B      #CC_HI,D6
00001370  BC03                     618      CMP.B       D3,D6
00001372  6700 0EBE                619      BEQ         MATCH_CC_HI_32
00001376                           620  
00001376  1C3C 0003                621      MOVE.B      #CC_LS,D6
0000137A  BC03                     622      CMP.B       D3,D6
0000137C  6700 0F2E                623      BEQ         MATCH_CC_LS_32
00001380                           624  
00001380  1C3C 0004                625      MOVE.B      #CC_CC,D6
00001384  BC03                     626      CMP.B       D3,D6
00001386  6700 0FA2                627      BEQ         MATCH_CC_CC_32
0000138A                           628  
0000138A  1C3C 0005                629      MOVE.B      #CC_CS,D6
0000138E  BC03                     630      CMP.B       D3,D6
00001390  6700 1016                631      BEQ         MATCH_CC_CS_32
00001394                           632  
00001394  1C3C 0006                633      MOVE.B      #CC_NE,D6
00001398  BC03                     634      CMP.B       D3,D6
0000139A  6700 108A                635      BEQ         MATCH_CC_NE_32
0000139E                           636  
0000139E  1C3C 0007                637      MOVE.B      #CC_EQ,D6
000013A2  BC03                     638      CMP.B       D3,D6
000013A4  6700 10FE                639      BEQ         MATCH_CC_EQ_32
000013A8                           640  
000013A8  1C3C 0008                641      MOVE.B      #CC_VC,D6
000013AC  BC03                     642      CMP.B       D3,D6
000013AE  6700 1172                643      BEQ         MATCH_CC_VC_32
000013B2                           644  
000013B2  1C3C 0009                645      MOVE.B      #CC_VS,D6
000013B6  BC03                     646      CMP.B       D3,D6
000013B8  6700 11E6                647      BEQ         MATCH_CC_VS_32
000013BC                           648  
000013BC  1C3C 000A                649      MOVE.B      #CC_PL,D6
000013C0  BC03                     650      CMP.B       D3,D6
000013C2  6700 125A                651      BEQ         MATCH_CC_PL_32
000013C6                           652  
000013C6  1C3C 000B                653      MOVE.B      #CC_MI,D6
000013CA  BC03                     654      CMP.B       D3,D6
000013CC  6700 12CE                655      BEQ         MATCH_CC_MI_32
000013D0                           656  
000013D0  1C3C 000C                657      MOVE.B      #CC_GE,D6
000013D4  BC03                     658      CMP.B       D3,D6
000013D6  6700 1342                659      BEQ         MATCH_CC_GE_32
000013DA                           660  
000013DA  1C3C 000D                661      MOVE.B      #CC_LT,D6
000013DE  BC03                     662      CMP.B       D3,D6
000013E0  6700 13B6                663      BEQ         MATCH_CC_LT_32
000013E4                           664  
000013E4  1C3C 000E                665      MOVE.B      #CC_GT,D6
000013E8  BC03                     666      CMP.B       D3,D6
000013EA  6700 142A                667      BEQ         MATCH_CC_GT_32
000013EE                           668  
000013EE  1C3C 000F                669      MOVE.B      #CC_LE,D6
000013F2  BC03                     670      CMP.B       D3,D6
000013F4  6700 149E                671      BEQ         MATCH_CC_LE_32
000013F8                           672  
000013F8  6000 14C4                673      BRA         ERROR
000013FC                           674  
000013FC                           675  ISOLATE_CC_CODE_FOR_BCC
000013FC                           676  
000013FC  48A7 2000                677      MOVEM.W     D2, -(SP)
00001400                           678  
00001400  E94A                     679      LSL.W       #4,D2
00001402  1E3C 000C                680      MOVE.B      #12,D7
00001406  EE6A                     681      LSR.W       D7,D2
00001408                           682  
00001408  1602                     683      MOVE.B      D2,D3
0000140A                           684  
0000140A  4C9F 0004                685      MOVEM.W     (SP)+,D2
0000140E  4E75                     686      RTS
00001410                           687  CHECK_CMP
00001410                           688  
00001410  6100 0232                689      BSR         ISOLATE_OP_CODE
00001414                           690  
00001414  1C3C 0000                691      MOVE.B      #CMP_B,D6
00001418  BC03                     692      CMP.B       D3,D6
0000141A  6700 15AA                693      BEQ         MATCH_CMP_B
0000141E                           694  
0000141E  1C3C 0001                695      MOVE.B      #CMP_W,D6
00001422  BC03                     696      CMP.B       D3,D6
00001424  6700 15B8                697      BEQ         MATCH_CMP_W
00001428                           698  
00001428  1C3C 0002                699      MOVE.B      #CMP_L,D6
0000142C  BC03                     700      CMP.B       D3,D6
0000142E  6700 15C6                701      BEQ         MATCH_CMP_L
00001432                           702  
00001432  6000 148A                703      BRA         ERROR
00001436                           704  CHECK_MULS_LEA_CLR_JSR_RTS
00001436                           705  
00001436  3C3C 4E75                706      MOVE.W      #RTS,D6
0000143A  BC42                     707      CMP.W       D2,D6
0000143C  6700 157A                708      BEQ         MATCH_RTS
00001440                           709  
00001440  6100 0202                710      BSR         ISOLATE_OP_CODE
00001444                           711  
00001444  1C3C 0007                712      MOVE.B      #LEA,D6
00001448  BC03                     713      CMP.B       D3,D6
0000144A  6700 022C                714      BEQ         MATCH_LEA
0000144E                           715  
0000144E  6100 FCBA                716      BSR         ReadFirstTenBits
00001452                           717  
00001452  3C3C 013A                718      MOVE.W      #JSR,D6
00001456  BC43                     719      CMP.W       D3,D6
00001458  6700 15DC                720      BEQ         MATCH_JSR
0000145C                           721  
0000145C  3C3C 0108                722      MOVE.W      #CLR_B,D6
00001460  BC43                     723      CMP.W       D3,D6
00001462  6700 15F0                724      BEQ         MATCH_CLR_B
00001466                           725  
00001466  3C3C 0109                726      MOVE.W      #CLR_W,D6
0000146A  BC43                     727      CMP.W       D3,D6
0000146C  6700 15FE                728      BEQ         MATCH_CLR_W
00001470                           729  
00001470  3C3C 010A                730      MOVE.W      #CLR_L,D6
00001474  BC43                     731      CMP.W       D3,D6
00001476  6700 160C                732      BEQ         MATCH_CLR_L
0000147A                           733  
0000147A  3C3C 0130                734      MOVE.W      #MULS_L,D6  * Shouldn't need to check for the rest of the opcode..?
0000147E  BC43                     735      CMP.W       D3,D6
00001480  6700 01F8                736      BEQ         MATCH_MULS_L
00001484                           737      
00001484  6000 009E                738      BRA         CHECK_MOVEM
00001488                           739  
00001488                           740  CHECK_MULS_W_AND
00001488                           741  
00001488  6100 01BA                742      BSR         ISOLATE_OP_CODE
0000148C                           743  
0000148C  1C3C 0007                744      MOVE.B      #MULS_OP_W,D6
00001490  BC03                     745      CMP.B       D3,D6
00001492  6700 14E6                746      BEQ         MATCH_MULS_W
00001496                           747  
00001496  1C3C 0000                748      MOVE.B      #DN_B,D6
0000149A  BC03                     749      CMP.B       D3,D6
0000149C  6700 160E                750      BEQ         MATCH_AND_DN_B
000014A0                           751  
000014A0  1C3C 0001                752      MOVE.B      #DN_W,D6
000014A4  BC03                     753      CMP.B       D3,D6
000014A6  6700 161C                754      BEQ         MATCH_AND_DN_W
000014AA                           755  
000014AA  1C3C 0002                756      MOVE.B      #DN_L,D6
000014AE  BC03                     757      CMP.B       D3,D6
000014B0  6700 162A                758      BEQ         MATCH_AND_DN_L
000014B4                           759  
000014B4  1C3C 0004                760      MOVE.B      #EA_B,D6
000014B8  BC03                     761      CMP.B       D3,D6
000014BA  6700 165E                762      BEQ         MATCH_AND_EA_B
000014BE                           763  
000014BE  1C3C 0005                764      MOVE.B      #EA_W,D6
000014C2  BC03                     765      CMP.B       D3,D6
000014C4  6700 166C                766      BEQ         MATCH_AND_EA_W
000014C8                           767  
000014C8  1C3C 0006                768      MOVE.B      #EA_L,D6
000014CC  BC03                     769      CMP.B       D3,D6
000014CE  6700 167A                770      BEQ         MATCH_AND_EA_L
000014D2                           771  
000014D2  6000 13EA                772      BRA         ERROR
000014D6                           773  
000014D6                           774  CHECK_DIVU_OR
000014D6                           775  
000014D6  6100 016C                776      BSR         ISOLATE_OP_CODE
000014DA                           777  
000014DA  1C3C 0003                778      MOVE.B      #DIVU,D6
000014DE  BC03                     779      CMP.B       D3,D6
000014E0  6700 05F2                780      BEQ         MATCH_DIVU
000014E4                           781  
000014E4  1C3C 0000                782      MOVE.B      #DN_B,D6
000014E8  BC03                     783      CMP.B       D3,D6
000014EA  6700 0180                784      BEQ         MATCH_OR_DN_B
000014EE                           785  
000014EE  1C3C 0001                786      MOVE.B      #DN_W,D6
000014F2  BC03                     787      CMP.B       D3,D6
000014F4  6700 0178                788      BEQ         MATCH_OR_DN_W
000014F8                           789  
000014F8  1C3C 0002                790      MOVE.B      #DN_L,D6
000014FC  BC03                     791      CMP.B       D3,D6
000014FE  6700 0170                792      BEQ         MATCH_OR_DN_L
00001502                           793  
00001502  1C3C 0004                794      MOVE.B      #EA_B,D6
00001506  BC03                     795      CMP.B       D3,D6
00001508  6700 0168                796      BEQ         MATCH_OR_EA_B
0000150C                           797  
0000150C  1C3C 0005                798      MOVE.B      #EA_W,D6
00001510  BC03                     799      CMP.B       D3,D6
00001512  6700 0160                800      BEQ         MATCH_OR_EA_W
00001516                           801  
00001516  1C3C 0006                802      MOVE.B      #EA_L,D6
0000151A  BC03                     803      CMP.B       D3,D6
0000151C  6700 0158                804      BEQ         MATCH_OR_EA_L
00001520                           805  
00001520  6000 139C                806      BRA         ERROR
00001524                           807  
00001524                           808  CHECK_MOVEM
00001524                           809  
00001524  6100 FBE4                810      BSR         ReadFirstTenBits
00001528                           811  
00001528  3C3C 0122                812      MOVE.W      #MOVEM_TO_MEM_W,D6
0000152C  BC43                     813      CMP.W       D3,D6
0000152E  6700 05E2                814      BEQ         MATCH_MOVEM_TO_MEM_W
00001532                           815  
00001532  3C3C 0123                816      MOVE.W      #MOVEM_TO_MEM_L,D6
00001536  BC43                     817      CMP.W       D3,D6
00001538  6700 05F0                818      BEQ         MATCH_MOVEM_TO_MEM_L
0000153C                           819  
0000153C  3C3C 0132                820      MOVE.W      #MOVEM_TO_REG_W,D6
00001540  BC43                     821      CMP.W       D3,D6
00001542  6700 061C                822      BEQ         MATCH_MOVEM_TO_REG_W
00001546                           823  
00001546  3C3C 0133                824      MOVE.W      #MOVEM_TO_REG_L,D6
0000154A  BC43                     825      CMP.W       D3,D6
0000154C  6700 062A                826      BEQ         MATCH_MOVEM_TO_REG_L
00001550                           827  
00001550  6000 136C                828      BRA         ERROR
00001554                           829  CHECK_ADD_ADDA
00001554                           830  
00001554  6100 00EE                831      BSR         ISOLATE_OP_CODE
00001558                           832  
00001558  3C3C 0000                833      MOVE.W      #DN_B,D6
0000155C  BC43                     834      CMP.W       D3,D6
0000155E  6700 037C                835      BEQ         MATCH_ADD_TO_REG_B
00001562                           836  
00001562  3C3C 0001                837      MOVE.W      #DN_W,D6
00001566  BC43                     838      CMP.W       D3,D6
00001568  6700 038A                839      BEQ         MATCH_ADD_TO_REG_W
0000156C                           840  
0000156C  3C3C 0002                841      MOVE.W      #DN_L,D6
00001570  BC43                     842      CMP.W       D3,D6
00001572  6700 0398                843      BEQ         MATCH_ADD_TO_REG_L
00001576                           844  
00001576  3C3C 0004                845      MOVE.W      #EA_B,D6
0000157A  BC43                     846      CMP.W       D3,D6
0000157C  6700 0418                847      BEQ         MATCH_ADD_TO_EA_B
00001580                           848  
00001580  3C3C 0005                849      MOVE.W      #EA_W,D6
00001584  BC43                     850      CMP.W       D3,D6
00001586  6700 0426                851      BEQ         MATCH_ADD_TO_EA_W
0000158A                           852  
0000158A  3C3C 0006                853      MOVE.W      #EA_L,D6
0000158E  BC43                     854      CMP.W       D3,D6
00001590  6700 0434                855      BEQ         MATCH_ADD_TO_EA_L
00001594                           856  
00001594  3C3C 0003                857      MOVE.W      #ADDA_W,D6
00001598  BC43                     858      CMP.W       D3,D6
0000159A  6700 1384                859      BEQ         MATCH_ADDA_W
0000159E                           860  
0000159E  3C3C 0007                861      MOVE.W      #ADDA_L,D6
000015A2  BC43                     862      CMP.W       D3,D6
000015A4  6700 1392                863      BEQ         MATCH_ADDA_L
000015A8                           864  
000015A8  4E75                     865      RTS ** Change later?
000015AA                           866  CHECK_ADDQ
000015AA                           867  
000015AA  6100 0098                868      BSR         ISOLATE_OP_CODE
000015AE                           869  
000015AE  3C3C 0000                870      MOVE.W      #ADDQ_B,D6
000015B2  BC43                     871      CMP.W       D3,D6
000015B4  6700 049A                872      BEQ         MATCH_ADDQ_B
000015B8                           873  
000015B8  3C3C 0001                874      MOVE.W      #ADDQ_W,D6
000015BC  BC43                     875      CMP.W       D3,D6
000015BE  6700 04A8                876      BEQ         MATCH_ADDQ_W
000015C2                           877  
000015C2  3C3C 0002                878      MOVE.W      #ADDQ_L,D6
000015C6  BC43                     879      CMP.W       D3,D6
000015C8  6700 04B6                880      BEQ         MATCH_ADDQ_L
000015CC                           881  
000015CC                           882  CHECK_ADDI
000015CC                           883  
000015CC  6100 FB3C                884      BSR         ReadFirstTenBits
000015D0                           885  
000015D0  3C3C 0018                886      MOVE.W      #ADDI_B,D6
000015D4  BC43                     887      CMP.W       D3,D6
000015D6  6700 0296                888      BEQ         MATCH_ADDI_B
000015DA                           889  
000015DA  3C3C 0019                890      MOVE.W      #ADDI_W,D6
000015DE  BC43                     891      CMP.W       D3,D6
000015E0  6700 02A4                892      BEQ         MATCH_ADDI_W
000015E4                           893  
000015E4  3C3C 001A                894      MOVE.W      #ADDI_L,D6
000015E8  BC43                     895      CMP.W       D3,D6
000015EA  6700 02B2                896      BEQ         MATCH_ADDI_L
000015EE                           897  
000015EE  6000 FAFE                898      BRA         ADDI_RETURN
000015F2                           899  CHECK_SUB
000015F2                           900  
000015F2  6100 0050                901      BSR         ISOLATE_OP_CODE
000015F6                           902  
000015F6  3C3C 0000                903      MOVE.W      #DN_B,D6
000015FA  BC43                     904      CMP.W       D3,D6
000015FC  6700 0326                905      BEQ         MATCH_SUB_TO_DN_B
00001600                           906  
00001600  3C3C 0001                907      MOVE.W      #DN_W,D6
00001604  BC43                     908      CMP.W       D3,D6
00001606  6700 0334                909      BEQ         MATCH_SUB_TO_DN_W
0000160A                           910  
0000160A  3C3C 0002                911      MOVE.W      #DN_L,D6
0000160E  BC43                     912      CMP.W       D3,D6
00001610  6700 0342                913      BEQ         MATCH_SUB_TO_DN_L
00001614                           914  
00001614  3C3C 0004                915      MOVE.W      #EA_B,D6
00001618  BC43                     916      CMP.W       D3,D6
0000161A  6700 03C2                917      BEQ         MATCH_SUB_TO_EA_B
0000161E                           918  
0000161E  3C3C 0005                919      MOVE.W      #EA_W,D6
00001622  BC43                     920      CMP.W       D3,D6
00001624  6700 03D0                921      BEQ         MATCH_SUB_TO_EA_W
00001628                           922  
00001628  3C3C 0006                923      MOVE.W      #EA_L,D6
0000162C  BC43                     924      CMP.W       D3,D6
0000162E  6700 03DE                925      BEQ         MATCH_SUB_TO_EA_L
00001632                           926  CHECK_MOVEA_W_AND_MOVE_W
00001632                           927  
00001632  6100 0010                928      BSR         ISOLATE_OP_CODE
00001636                           929  
00001636  1C3C 0001                930      MOVE.B      #MOVEA_WL,D6
0000163A  BC03                     931      CMP.B       D3,D6
0000163C  6700 128C                932      BEQ         MATCH_MOVEA_W
00001640                           933  
00001640  6000 0194                934      BRA         MATCH_MOVE_W
00001644                           935  ISOLATE_OP_CODE
00001644                           936  
00001644  48A7 2000                937      MOVEM.W     D2, -(SP)
00001648                           938  
00001648  1E3C 0007                939      MOVE.B      #7,D7
0000164C  EF6A                     940      LSL.W       D7,D2
0000164E  1E3C 000D                941      MOVE.B      #13,D7
00001652  EE6A                     942      LSR.W       D7,D2
00001654  1602                     943      MOVE.B      D2,D3
00001656                           944  
00001656  4C9F 0004                945      MOVEM.W     (SP)+,D2
0000165A  4E75                     946      RTS
0000165C                           947  CHECK_MOVEA_L_AND_MOVE_L
0000165C                           948  
0000165C  61E6                     949      BSR         ISOLATE_OP_CODE
0000165E                           950  
0000165E  1C3C 0001                951      MOVE.B      #MOVEA_WL,D6
00001662  BC03                     952      CMP.B       D3,D6
00001664  6700 127C                953      BEQ         MATCH_MOVEA_L
00001668                           954  
00001668  6000 0184                955      BRA         MATCH_MOVE_L
0000166C                           956  
0000166C                           957  
0000166C                           958  
0000166C                           959  MATCH_OR_DN_B
0000166C  3A02                     960      MOVE.W      D2,D5       *REMOVE
0000166E                           961  MATCH_OR_DN_W
0000166E  3A02                     962      MOVE.W      D2,D5       *REMOVE
00001670                           963  MATCH_OR_DN_L
00001670  3A02                     964      MOVE.W      D2,D5       *REMOVE
00001672                           965  MATCH_OR_EA_B
00001672  3A02                     966      MOVE.W      D2,D5       *REMOVE
00001674                           967  MATCH_OR_EA_W
00001674  3A02                     968      MOVE.W      D2,D5       *REMOVE
00001676                           969  MATCH_OR_EA_L
00001676  3A02                     970      MOVE.W      D2,D5       *REMOVE
00001678                           971  
00001678                           972  MATCH_LEA
00001678  3A02                     973      MOVE.W      D2,D5       *REMOVE
0000167A                           974  
0000167A                           975  MATCH_MULS_L
0000167A  3A02                     976      MOVE.W      D2,D5       *REMOVE
0000167C                           977  
0000167C                           978  
0000167C                           979                  INCLUDE 'EADecoder.x68'
0000167C                           980  
0000167C                           981  
0000167C  =00010000                982  output      EQU $00010000
0000167C                           983  
0000167C  =0000003C                984  IMMEDIATE   EQU %00111100
0000167C  =00000038                985  ABS_WORD    EQU %00111000
0000167C  =00000039                986  ABS_LONG    EQU %00111001
0000167C  =00000000                987  Dn          EQU %00000000
0000167C  =00000008                988  An          EQU %00001000
0000167C  =00000010                989  INDIRECT    EQU %00010000
0000167C  =00000018                990  POST_INC    EQU %00011000
0000167C  =00000020                991  PRE_DEC     EQU %00100000
0000167C                           992  
0000167C                           993  
0000167C                           994  
0000167C                           995  EADecoder_left
0000167C  48E7 FF7E                996          MOVEM.L     D0-D7/A1-A6, -(SP)
00001680                           997          
00001680                           998          ** Swap the mode and register bits
00001680  1800                     999          MOVE.B  D0,D4
00001682  0200 0007               1000          ANDI.B  #%00000111,D0       * Mask mode
00001686  0204 0038               1001          ANDI.B  #%00111000,D4       * Mask register
0000168A  E708                    1002          LSL.B   #3,D0               * Move mode bits over
0000168C  E60C                    1003          LSR.B   #3,D4               * Move register bits over
0000168E  8004                    1004          OR.B    D4,D0               * Recombine
00001690                          1005          
00001690  6000 0006               1006          BRA     left_skip
00001694                          1007  
00001694                          1008  EADecoder
00001694  48E7 FF7E               1009          MOVEM.L     D0-D7/A1-A6, -(SP) *Store registers on stack, except D0
00001698                          1010  left_skip   
00001698  4242                    1011          CLR     D2    
0000169A  4243                    1012          CLR     D3 
0000169C  1401                    1013          MOVE.B  D1,D2 ** Store opcode size in bytes into D2
0000169E                          1014          
0000169E  43F9 00010000           1015          LEA     output,A1
000016A4  45F9 00010000           1016          LEA     output,A2
000016AA                          1017          
000016AA                          1018          *First, decoder will check for the 3 types with hard coded register values
000016AA  163C 0001               1019          MOVE.B  #1,D3
000016AE  B07C 003C               1020          CMP     #IMMEDIATE,D0
000016B2  6700 0068               1021          BEQ     dec_immediate
000016B6                          1022          
000016B6  B07C 0038               1023          CMP     #ABS_WORD,D0
000016BA  6700 007C               1024          BEQ     dec_abs_word
000016BE                          1025          
000016BE  B07C 0039               1026          CMP     #ABS_LONG,D0
000016C2  6700 0080               1027          BEQ     dec_abs_long
000016C6                          1028          
000016C6                          1029          *If it was none of the above, store the register and mode seperately
000016C6  4243                    1030          CLR     D3
000016C8  1200                    1031          MOVE.B  D0,D1
000016CA  0201 0038               1032          ANDI.B  #%00111000,D1           *Get mode value
000016CE  0200 0007               1033          ANDI.B  #%00000111,D0           *Get register value
000016D2  0600 0030               1034          ADDI.B  #$30,D0
000016D6                          1035                
000016D6  B27C 0000               1036          CMP     #Dn,D1
000016DA  6700 0074               1037          BEQ     dec_Dn 
000016DE                          1038          
000016DE  B27C 0008               1039          CMP     #An,D1
000016E2  6700 0078               1040          BEQ     dec_An
000016E6                          1041                  
000016E6  B27C 0010               1042          CMP     #INDIRECT,D1
000016EA  6700 007C               1043          BEQ     dec_indirect
000016EE                          1044                  
000016EE  B27C 0018               1045          CMP     #POST_INC,D1
000016F2  6700 0088               1046          BEQ     dec_post_inc
000016F6                          1047                  
000016F6  B27C 0020               1048          CMP     #PRE_DEC,D1
000016FA  6700 009A               1049          BEQ     dec_pre_dec
000016FE                          1050  
000016FE                          1051  dec_return ** Common return for all types
000016FE                          1052          
000016FE                          1053          ** Print display string
000016FE  103C 000E               1054          MOVE.B  #14,D0
00001702  4E4F                    1055          TRAP    #15
00001704                          1056          
00001704                          1057          ** If there is immediate data to print, print it
00001704  B67C 0001               1058          CMP     #1,D3
00001708  6600 000C               1059          BNE     imm_skip
0000170C                          1060          
0000170C  103C 000F               1061          MOVE.B  #15,D0
00001710  143C 0010               1062          MOVE.B  #16,D2
00001714  4E4F                    1063          TRAP    #15
00001716                          1064  
00001716                          1065  imm_skip
00001716  4CDF 7EFF               1066          MOVEM.L     (SP)+, D0-D7/A1-A6 *Return register data from stack, except D0
0000171A  4E75                    1067          RTS
0000171C                          1068          
0000171C                          1069          * Individual EA decoders *
0000171C                          1070  
0000171C                          1071  dec_immediate   *DECODE IMMEDIATE VALUE*
0000171C  14FC 0023               1072          MOVE.B  #'#',(A2)+  * Move '#' char into string
00001720  14FC 0024               1073          MOVE.B  #'$',(A2)+  * Move '$' char into string
00001724  14FC 0000               1074          MOVE.B  #$0,(A2)+   * Null terminate string
00001728  B47C 0002               1075          CMP     #2,D2       * Check if data is word length
0000172C  6700 0006               1076          BEQ     imm_word    
00001730                          1077          
00001730  2218                    1078          MOVE.L  (A0)+,D1    * Length was long
00001732  60CA                    1079          BRA     dec_return
00001734                          1080          
00001734                          1081  imm_word
00001734  3218                    1082          MOVE.W  (A0)+,D1    * Length was word
00001736  60C6                    1083          BRA     dec_return
00001738                          1084  
00001738                          1085  
00001738                          1086  dec_abs_word    *DECODE ABSOLUTE WORD*
00001738  14FC 0024               1087          MOVE.B  #'$',(A2)+  * Move '$' char into string
0000173C  14FC 0000               1088          MOVE.B  #$0,(A2)+   * Null terminate string
00001740  3218                    1089          MOVE.W  (A0)+,D1
00001742  60BA                    1090          BRA     dec_return
00001744                          1091          
00001744                          1092  
00001744                          1093  dec_abs_long    *DECODE ABSOLUTE LONG*
00001744  14FC 0024               1094          MOVE.B  #'$',(A2)+  * Move '$' char into string
00001748  14FC 0000               1095          MOVE.B  #$0,(A2)+   * Null terminate string
0000174C  2218                    1096          MOVE.L  (A0)+,D1
0000174E  60AE                    1097          BRA     dec_return
00001750                          1098          
00001750                          1099  
00001750                          1100  dec_Dn          *DECODE DIRECT DATA*
00001750  14FC 0044               1101          MOVE.B  #'D',(A2)+
00001754  14C0                    1102          MOVE.B  D0,(A2)+
00001756  14FC 0000               1103          MOVE.B  #$0,(A2)+
0000175A  60A2                    1104          BRA     dec_return
0000175C                          1105  
0000175C                          1106          
0000175C                          1107  dec_An          *DECODE DIRECT ADDRESS*
0000175C  14FC 0041               1108          MOVE.B  #'A',(A2)+
00001760  14C0                    1109          MOVE.B  D0,(A2)+
00001762  14FC 0000               1110          MOVE.B  #$0,(A2)+
00001766  6096                    1111          BRA     dec_return
00001768                          1112  
00001768                          1113  
00001768                          1114  dec_indirect    *DECODE INDIRECT ACCESS*
00001768  14FC 0028               1115          MOVE.B  #'(',(A2)+
0000176C  14FC 0041               1116          MOVE.B  #'A',(A2)+
00001770  14C0                    1117          MOVE.B  D0,(A2)+
00001772  14FC 0029               1118          MOVE.B  #')',(A2)+
00001776  14FC 0000               1119          MOVE.B  #$0,(A2)+
0000177A  6082                    1120          BRA     dec_return
0000177C                          1121          
0000177C                          1122  
0000177C                          1123  dec_post_inc    *DECODE INDIRECT POST INCREMENT*
0000177C  14FC 0028               1124          MOVE.B  #'(',(A2)+
00001780  14FC 0041               1125          MOVE.B  #'A',(A2)+
00001784  14C0                    1126          MOVE.B  D0,(A2)+
00001786  14FC 0029               1127          MOVE.B  #')',(A2)+
0000178A  14FC 002B               1128          MOVE.B  #'+',(A2)+
0000178E  14FC 0000               1129          MOVE.B  #$0,(A2)+
00001792  6000 FF6A               1130          BRA     dec_return
00001796                          1131          
00001796                          1132          
00001796                          1133  dec_pre_dec    *DECODE INDIRECT PRE DECREMENT*
00001796  14FC 002D               1134          MOVE.B  #'-',(A2)+
0000179A  14FC 0028               1135          MOVE.B  #'(',(A2)+
0000179E  14FC 0041               1136          MOVE.B  #'A',(A2)+
000017A2  14C0                    1137          MOVE.B  D0,(A2)+
000017A4  14FC 0029               1138          MOVE.B  #')',(A2)+
000017A8  14FC 0000               1139          MOVE.B  #$0,(A2)+
000017AC  6000 FF50               1140          BRA     dec_return
000017B0                          1141  
000017B0                          1142  
000017B0                          1143  
000017B0                          1144  
000017B0                          1145  
000017B0                          1146  
000017B0                          1147  
000017B0                          1148  
000017B0                          1149  
000017B0                          1150  -------------------- end include --------------------
000017B0                          1151                  INCLUDE 'connor_opcodes.x68'
000017B0                          1152  
000017B0                          1153  
000017B0                          1154  MATCH_NOP
000017B0  43F8 0028               1155      LEA         pr_NOP,A1
000017B4  103C 000E               1156      MOVE.B      #14,D0
000017B8  4E4F                    1157      TRAP        #15
000017BA  6000 F936               1158      BRA         opdec_return
000017BE                          1159  
000017BE                          1160  
000017BE                          1161  MATCH_MOVE_B
000017BE                          1162      ** Move command size into D1
000017BE  123C 0002               1163      MOVE.B      #2,D1
000017C2                          1164      ** Print command
000017C2  103C 000E               1165      MOVE.B      #14,D0
000017C6  43F8 002C               1166      LEA         pr_MOVE,A1
000017CA  4E4F                    1167      TRAP        #15
000017CC                          1168      ** Print size
000017CC  43F8 0016               1169      LEA         pr_BYTE,A1
000017D0  4E4F                    1170      TRAP        #15
000017D2                          1171  
000017D2  6000 0032               1172      BRA         print_move
000017D6                          1173  
000017D6                          1174  MATCH_MOVE_W
000017D6                          1175      ** Move command size into D1
000017D6  123C 0002               1176      MOVE.B      #2,D1
000017DA                          1177      ** Print command
000017DA  103C 000E               1178      MOVE.B      #14,D0
000017DE  43F8 002C               1179      LEA         pr_MOVE,A1
000017E2  4E4F                    1180      TRAP        #15
000017E4                          1181      ** Print size
000017E4  43F8 0019               1182      LEA         pr_WORD,A1
000017E8  4E4F                    1183      TRAP        #15
000017EA                          1184  
000017EA  6000 001A               1185      BRA         print_move
000017EE                          1186  
000017EE                          1187  MATCH_MOVE_L
000017EE                          1188      ** Move command size into D1
000017EE  123C 0004               1189      MOVE.B      #4,D1
000017F2                          1190      ** Print command
000017F2  103C 000E               1191      MOVE.B      #14,D0
000017F6  43F8 002C               1192      LEA         pr_MOVE,A1
000017FA  4E4F                    1193      TRAP        #15
000017FC                          1194      ** Print size
000017FC  43F8 001C               1195      LEA         pr_LONG,A1
00001800  4E4F                    1196      TRAP        #15
00001802                          1197  
00001802  6000 0002               1198      BRA         print_move
00001806                          1199  
00001806                          1200  print_move
00001806                          1201      ** Print space
00001806  43F8 0000               1202      LEA         pr_space,A1
0000180A  4E4F                    1203      TRAP        #15
0000180C                          1204      ** Decode right side ea
0000180C  1002                    1205      MOVE.B      D2,D0
0000180E  0200 003F               1206      ANDI.B      #%00111111,D0
00001812  4EB8 1694               1207      JSR         EADecoder
00001816                          1208      ** Add comma
00001816  103C 000E               1209      MOVE.B      #14,D0
0000181A  43F8 0014               1210      LEA         pr_comma,A1
0000181E  4E4F                    1211      TRAP        #15
00001820                          1212      ** Decode left side ea
00001820  3002                    1213      MOVE.W      D2,D0
00001822  0240 0FC0               1214      ANDI.W      #%0000111111000000,D0
00001826  EC48                    1215      LSR.W       #6,D0
00001828  4EB8 167C               1216      JSR         EADecoder_left
0000182C                          1217  
0000182C  6000 F8C4               1218      BRA         opdec_return
00001830                          1219  
00001830                          1220  
00001830                          1221  MATCH_MOVEQ
00001830                          1222      ** Print command
00001830  103C 000E               1223      MOVE.B      #14,D0
00001834  43F8 005B               1224      LEA         pr_MOVEQ,A1
00001838  4E4F                    1225      TRAP        #15
0000183A                          1226      ** Print space
0000183A  43F8 0000               1227      LEA         pr_space,A1
0000183E  4E4F                    1228      TRAP        #15
00001840                          1229      ** Print hex tag
00001840  43F8 0021               1230      LEA         pr_hextag,A1
00001844  4E4F                    1231      TRAP        #15
00001846                          1232      ** Print data
00001846  1202                    1233      MOVE.B      D2,D1
00001848  103C 000F               1234      MOVE.B      #15,D0
0000184C  2602                    1235      MOVE.L      D2,D3
0000184E  7410                    1236      MOVE.L      #16,D2
00001850  4E4F                    1237      TRAP        #15
00001852  2403                    1238      MOVE.L      D3,D2
00001854                          1239      ** Add comma
00001854  103C 000E               1240      MOVE.B      #14,D0
00001858  43F8 0014               1241      LEA         pr_comma,A1
0000185C  4E4F                    1242      TRAP        #15
0000185E                          1243      ** Decode register
0000185E  3002                    1244      MOVE.W      D2,D0
00001860  0240 0E00               1245      ANDI.W      #%0000111000000000,D0
00001864  EC48                    1246      LSR.W       #6,D0
00001866  4EB8 167C               1247      JSR         EADecoder_left
0000186A                          1248  
0000186A  6000 F886               1249      BRA         opdec_return
0000186E                          1250  
0000186E                          1251  
0000186E                          1252  MATCH_ADDI_B
0000186E                          1253      ** Move command size into D1
0000186E  123C 0002               1254      MOVE.B      #2,D1
00001872                          1255      ** Print command
00001872  103C 000E               1256      MOVE.B      #14,D0
00001876  43F8 0065               1257      LEA         pr_ADDI,A1
0000187A  4E4F                    1258      TRAP        #15
0000187C                          1259      ** Print size
0000187C  43F8 0016               1260      LEA         pr_BYTE,A1
00001880  4E4F                    1261      TRAP        #15
00001882                          1262  
00001882  6000 0032               1263      BRA         print_addi
00001886                          1264  
00001886                          1265  MATCH_ADDI_W
00001886                          1266      ** Move command size into D1
00001886  123C 0002               1267      MOVE.B      #2,D1
0000188A                          1268      ** Print command
0000188A  103C 000E               1269      MOVE.B      #14,D0
0000188E  43F8 0065               1270      LEA         pr_ADDI,A1
00001892  4E4F                    1271      TRAP        #15
00001894                          1272      ** Print size
00001894  43F8 0019               1273      LEA         pr_WORD,A1
00001898  4E4F                    1274      TRAP        #15
0000189A                          1275  
0000189A  6000 001A               1276      BRA         print_addi
0000189E                          1277  
0000189E                          1278  MATCH_ADDI_L
0000189E                          1279      ** Move command size into D1
0000189E  123C 0004               1280      MOVE.B      #4,D1
000018A2                          1281      ** Print command
000018A2  103C 000E               1282      MOVE.B      #14,D0
000018A6  43F8 0065               1283      LEA         pr_ADDI,A1
000018AA  4E4F                    1284      TRAP        #15
000018AC                          1285      ** Print size
000018AC  43F8 001C               1286      LEA         pr_LONG,A1
000018B0  4E4F                    1287      TRAP        #15
000018B2                          1288  
000018B2  6000 0002               1289      BRA         print_addi
000018B6                          1290  
000018B6                          1291  print_addi
000018B6                          1292      ** Print space
000018B6  43F8 0000               1293      LEA         pr_space,A1
000018BA  4E4F                    1294      TRAP        #15
000018BC                          1295      ** Print Immediate data
000018BC  103C 003C               1296      MOVE.B      #%00111100,D0
000018C0  4EB8 1694               1297      JSR         EADecoder
000018C4                          1298      ** Add comma
000018C4  103C 000E               1299      MOVE.B      #14,D0
000018C8  43F8 0014               1300      LEA         pr_comma,A1
000018CC  4E4F                    1301      TRAP        #15
000018CE                          1302      ** Decode right side ea
000018CE  1002                    1303      MOVE.B      D2,D0
000018D0  0200 003F               1304      ANDI.B      #%00111111,D0
000018D4  4EB8 1694               1305      JSR         EADecoder
000018D8                          1306  
000018D8  6000 F818               1307      BRA         opdec_return
000018DC                          1308  
000018DC                          1309  
000018DC                          1310  MATCH_ADD_TO_REG_B
000018DC                          1311      ** Move command size into D1
000018DC  123C 0002               1312      MOVE.B      #2,D1
000018E0                          1313      ** Print command
000018E0  103C 000E               1314      MOVE.B      #14,D0
000018E4  43F8 0061               1315      LEA         pr_ADD,A1
000018E8  4E4F                    1316      TRAP        #15
000018EA                          1317      ** Print size
000018EA  43F8 0016               1318      LEA         pr_BYTE,A1
000018EE  4E4F                    1319      TRAP        #15
000018F0                          1320  
000018F0  6000 007A               1321      BRA         print_add_to_reg
000018F4                          1322  
000018F4                          1323  MATCH_ADD_TO_REG_W
000018F4                          1324      ** Move command size into D1
000018F4  123C 0002               1325      MOVE.B      #2,D1
000018F8                          1326      ** Print command
000018F8  103C 000E               1327      MOVE.B      #14,D0
000018FC  43F8 0061               1328      LEA         pr_ADD,A1
00001900  4E4F                    1329      TRAP        #15
00001902                          1330      ** Print size
00001902  43F8 0019               1331      LEA         pr_WORD,A1
00001906  4E4F                    1332      TRAP        #15
00001908                          1333  
00001908  6000 0062               1334      BRA         print_add_to_reg
0000190C                          1335  
0000190C                          1336  MATCH_ADD_TO_REG_L
0000190C                          1337      ** Move command size into D1
0000190C  123C 0004               1338      MOVE.B      #4,D1
00001910                          1339      ** Print command
00001910  103C 000E               1340      MOVE.B      #14,D0
00001914  43F8 0061               1341      LEA         pr_ADD,A1
00001918  4E4F                    1342      TRAP        #15
0000191A                          1343      ** Print size
0000191A  43F8 001C               1344      LEA         pr_LONG,A1
0000191E  4E4F                    1345      TRAP        #15
00001920                          1346  
00001920  6000 004A               1347      BRA         print_add_to_reg
00001924                          1348  
00001924                          1349  MATCH_SUB_TO_DN_B
00001924                          1350      ** Move command size into D1
00001924  123C 0002               1351      MOVE.B      #2,D1
00001928                          1352      ** Print command
00001928  103C 000E               1353      MOVE.B      #14,D0
0000192C  43F8 006F               1354      LEA         pr_SUB,A1
00001930  4E4F                    1355      TRAP        #15
00001932                          1356      ** Print size
00001932  43F8 0016               1357      LEA         pr_BYTE,A1
00001936  4E4F                    1358      TRAP        #15
00001938                          1359  
00001938  6000 0032               1360      BRA         print_add_to_reg
0000193C                          1361  
0000193C                          1362  MATCH_SUB_TO_DN_W
0000193C                          1363      ** Move command size into D1
0000193C  123C 0002               1364      MOVE.B      #2,D1
00001940                          1365      ** Print command
00001940  103C 000E               1366      MOVE.B      #14,D0
00001944  43F8 006F               1367      LEA         pr_SUB,A1
00001948  4E4F                    1368      TRAP        #15
0000194A                          1369      ** Print size
0000194A  43F8 0019               1370      LEA         pr_WORD,A1
0000194E  4E4F                    1371      TRAP        #15
00001950                          1372  
00001950  6000 001A               1373      BRA         print_add_to_reg
00001954                          1374  
00001954                          1375  MATCH_SUB_TO_DN_L
00001954                          1376      ** Move command size into D1
00001954  123C 0004               1377      MOVE.B      #4,D1
00001958                          1378      ** Print command
00001958  103C 000E               1379      MOVE.B      #14,D0
0000195C  43F8 006F               1380      LEA         pr_SUB,A1
00001960  4E4F                    1381      TRAP        #15
00001962                          1382      ** Print size
00001962  43F8 001C               1383      LEA         pr_LONG,A1
00001966  4E4F                    1384      TRAP        #15
00001968                          1385  
00001968  6000 0002               1386      BRA         print_add_to_reg
0000196C                          1387  
0000196C                          1388  print_add_to_reg
0000196C                          1389      ** Print space
0000196C  43F8 0000               1390      LEA         pr_space,A1
00001970  4E4F                    1391      TRAP        #15
00001972                          1392      ** Print source
00001972  1002                    1393      MOVE.B      D2,D0
00001974  0200 003F               1394      ANDI.B      #%00111111,D0
00001978  4EB8 1694               1395      JSR         EADecoder
0000197C                          1396      ** Add comma
0000197C  103C 000E               1397      MOVE.B      #14,D0
00001980  43F8 0014               1398      LEA         pr_comma,A1
00001984  4E4F                    1399      TRAP        #15
00001986                          1400      ** Print destination
00001986  3002                    1401      MOVE.W      D2,D0
00001988  0240 0E00               1402      ANDI.W      #%0000111000000000,D0
0000198C  EC48                    1403      LSR.W       #6,D0
0000198E  4EB8 167C               1404      JSR         EADecoder_left
00001992                          1405  
00001992  6000 F75E               1406      BRA         opdec_return
00001996                          1407  
00001996                          1408  MATCH_ADD_TO_EA_B
00001996                          1409      ** Move command size into D1
00001996  123C 0002               1410      MOVE.B      #2,D1
0000199A                          1411      ** Print command
0000199A  103C 000E               1412      MOVE.B      #14,D0
0000199E  43F8 0061               1413      LEA         pr_ADD,A1
000019A2  4E4F                    1414      TRAP        #15
000019A4                          1415      ** Print size
000019A4  43F8 0016               1416      LEA         pr_BYTE,A1
000019A8  4E4F                    1417      TRAP        #15
000019AA                          1418  
000019AA  6000 007A               1419      BRA         print_add_to_ea
000019AE                          1420  
000019AE                          1421  MATCH_ADD_TO_EA_W
000019AE                          1422      ** Move command size into D1
000019AE  123C 0002               1423      MOVE.B      #2,D1
000019B2                          1424      ** Print command
000019B2  103C 000E               1425      MOVE.B      #14,D0
000019B6  43F8 0061               1426      LEA         pr_ADD,A1
000019BA  4E4F                    1427      TRAP        #15
000019BC                          1428      ** Print size
000019BC  43F8 0019               1429      LEA         pr_WORD,A1
000019C0  4E4F                    1430      TRAP        #15
000019C2                          1431  
000019C2  6000 0062               1432      BRA         print_add_to_ea
000019C6                          1433  
000019C6                          1434  MATCH_ADD_TO_EA_L
000019C6                          1435      ** Move command size into D1
000019C6  123C 0004               1436      MOVE.B      #4,D1
000019CA                          1437      ** Print command
000019CA  103C 000E               1438      MOVE.B      #14,D0
000019CE  43F8 0061               1439      LEA         pr_ADD,A1
000019D2  4E4F                    1440      TRAP        #15
000019D4                          1441      ** Print size
000019D4  43F8 001C               1442      LEA         pr_LONG,A1
000019D8  4E4F                    1443      TRAP        #15
000019DA                          1444  
000019DA  6000 004A               1445      BRA         print_add_to_ea
000019DE                          1446  
000019DE                          1447  MATCH_SUB_TO_EA_B
000019DE                          1448      ** Move command size into D1
000019DE  123C 0002               1449      MOVE.B      #2,D1
000019E2                          1450      ** Print command
000019E2  103C 000E               1451      MOVE.B      #14,D0
000019E6  43F8 006F               1452      LEA         pr_SUB,A1
000019EA  4E4F                    1453      TRAP        #15
000019EC                          1454      ** Print size
000019EC  43F8 0016               1455      LEA         pr_BYTE,A1
000019F0  4E4F                    1456      TRAP        #15
000019F2                          1457  
000019F2  6000 0032               1458      BRA         print_add_to_ea
000019F6                          1459  
000019F6                          1460  MATCH_SUB_TO_EA_W
000019F6                          1461      ** Move command size into D1
000019F6  123C 0002               1462      MOVE.B      #2,D1
000019FA                          1463      ** Print command
000019FA  103C 000E               1464      MOVE.B      #14,D0
000019FE  43F8 006F               1465      LEA         pr_SUB,A1
00001A02  4E4F                    1466      TRAP        #15
00001A04                          1467      ** Print size
00001A04  43F8 0019               1468      LEA         pr_WORD,A1
00001A08  4E4F                    1469      TRAP        #15
00001A0A                          1470  
00001A0A  6000 001A               1471      BRA         print_add_to_ea
00001A0E                          1472  
00001A0E                          1473  MATCH_SUB_TO_EA_L
00001A0E                          1474      ** Move command size into D1
00001A0E  123C 0004               1475      MOVE.B      #4,D1
00001A12                          1476      ** Print command
00001A12  103C 000E               1477      MOVE.B      #14,D0
00001A16  43F8 006F               1478      LEA         pr_SUB,A1
00001A1A  4E4F                    1479      TRAP        #15
00001A1C                          1480      ** Print size
00001A1C  43F8 001C               1481      LEA         pr_LONG,A1
00001A20  4E4F                    1482      TRAP        #15
00001A22                          1483  
00001A22  6000 0002               1484      BRA         print_add_to_ea
00001A26                          1485  
00001A26                          1486  print_add_to_ea
00001A26                          1487      ** Print space
00001A26  43F8 0000               1488      LEA         pr_space,A1
00001A2A  4E4F                    1489      TRAP        #15
00001A2C                          1490      ** Print Source
00001A2C  3002                    1491      MOVE.W      D2,D0
00001A2E  0240 0E00               1492      ANDI.W      #%0000111000000000,D0
00001A32  EC48                    1493      LSR.W       #6,D0
00001A34  4EB8 167C               1494      JSR         EADecoder_left
00001A38                          1495      ** Add comma
00001A38  103C 000E               1496      MOVE.B      #14,D0
00001A3C  43F8 0014               1497      LEA         pr_comma,A1
00001A40  4E4F                    1498      TRAP        #15
00001A42                          1499      ** Print source
00001A42  1002                    1500      MOVE.B      D2,D0
00001A44  0200 003F               1501      ANDI.B      #%00111111,D0
00001A48  4EB8 1694               1502      JSR         EADecoder
00001A4C                          1503  
00001A4C  6000 F6A4               1504      BRA         opdec_return
00001A50                          1505  
00001A50                          1506  
00001A50                          1507  MATCH_ADDQ_B
00001A50                          1508      ** Move command size into D1
00001A50  123C 0002               1509      MOVE.B      #2,D1
00001A54                          1510      ** Print command
00001A54  103C 000E               1511      MOVE.B      #14,D0
00001A58  43F8 006A               1512      LEA         pr_ADDQ,A1
00001A5C  4E4F                    1513      TRAP        #15
00001A5E                          1514      ** Print size
00001A5E  43F8 0016               1515      LEA         pr_BYTE,A1
00001A62  4E4F                    1516      TRAP        #15
00001A64                          1517  
00001A64  6000 0032               1518      BRA         print_addq
00001A68                          1519  
00001A68                          1520  MATCH_ADDQ_W
00001A68                          1521      ** Move command size into D1
00001A68  123C 0002               1522      MOVE.B      #2,D1
00001A6C                          1523      ** Print command
00001A6C  103C 000E               1524      MOVE.B      #14,D0
00001A70  43F8 006A               1525      LEA         pr_ADDQ,A1
00001A74  4E4F                    1526      TRAP        #15
00001A76                          1527      ** Print size
00001A76  43F8 0019               1528      LEA         pr_WORD,A1
00001A7A  4E4F                    1529      TRAP        #15
00001A7C                          1530  
00001A7C  6000 001A               1531      BRA         print_addq
00001A80                          1532  
00001A80                          1533  MATCH_ADDQ_L
00001A80                          1534      ** Move command size into D1
00001A80  123C 0004               1535      MOVE.B      #4,D1
00001A84                          1536      ** Print command
00001A84  103C 000E               1537      MOVE.B      #14,D0
00001A88  43F8 006A               1538      LEA         pr_ADDQ,A1
00001A8C  4E4F                    1539      TRAP        #15
00001A8E                          1540      ** Print size
00001A8E  43F8 001C               1541      LEA         pr_LONG,A1
00001A92  4E4F                    1542      TRAP        #15
00001A94                          1543  
00001A94  6000 0002               1544      BRA         print_addq
00001A98                          1545  
00001A98                          1546  print_addq
00001A98                          1547      ** Print space
00001A98  43F8 0000               1548      LEA         pr_space,A1
00001A9C  4E4F                    1549      TRAP        #15
00001A9E                          1550      ** Print hash
00001A9E  43F8 001F               1551      LEA         pr_hash,A1
00001AA2  4E4F                    1552      TRAP        #15
00001AA4                          1553      ** Print Immediate data
00001AA4  3602                    1554      MOVE.W      D2,D3 * Temporarily move op data
00001AA6  3202                    1555      MOVE.W      D2,D1
00001AA8  0241 0E00               1556      ANDI.W      #%0000111000000000,D1
00001AAC  EC49                    1557      LSR.W       #6,D1
00001AAE  E649                    1558      LSR.W       #3,D1
00001AB0  143C 0010               1559      MOVE.B      #16,D2
00001AB4  303C 000F               1560      MOVE.W      #15,D0
00001AB8  4E4F                    1561      TRAP        #15
00001ABA                          1562  
00001ABA  3403                    1563      MOVE.W      D3,D2 * Move op data back
00001ABC                          1564  
00001ABC                          1565      ** Add comma
00001ABC  103C 000E               1566      MOVE.B      #14,D0
00001AC0  43F8 0014               1567      LEA         pr_comma,A1
00001AC4  4E4F                    1568      TRAP        #15
00001AC6                          1569      ** Decode right side ea
00001AC6  1002                    1570      MOVE.B      D2,D0
00001AC8  0200 003F               1571      ANDI.B      #%00111111,D0
00001ACC  4EB8 1694               1572      JSR         EADecoder
00001AD0                          1573  
00001AD0  6000 F620               1574      BRA         opdec_return
00001AD4                          1575  
00001AD4                          1576  
00001AD4                          1577  MATCH_DIVU
00001AD4                          1578      ** Move command size into D1
00001AD4  123C 0002               1579      MOVE.B      #2,D1
00001AD8                          1580      ** Print command
00001AD8  103C 000E               1581      MOVE.B      #14,D0
00001ADC  43F8 0073               1582      LEA         pr_DIVU,A1
00001AE0  4E4F                    1583      TRAP        #15
00001AE2                          1584      ** Print size
00001AE2  43F8 0019               1585      LEA         pr_WORD,A1
00001AE6  4E4F                    1586      TRAP        #15
00001AE8                          1587      ** Print space
00001AE8  43F8 0000               1588      LEA         pr_space,A1
00001AEC  4E4F                    1589      TRAP        #15
00001AEE                          1590      ** Decode right side ea
00001AEE  1002                    1591      MOVE.B      D2,D0
00001AF0  0200 003F               1592      ANDI.B      #%00111111,D0
00001AF4  4EB8 1694               1593      JSR         EADecoder
00001AF8                          1594      ** Add comma
00001AF8  103C 000E               1595      MOVE.B      #14,D0
00001AFC  43F8 0014               1596      LEA         pr_comma,A1
00001B00  4E4F                    1597      TRAP        #15
00001B02                          1598      ** Decode left side ea
00001B02  3002                    1599      MOVE.W      D2,D0
00001B04  0240 0E00               1600      ANDI.W      #%0000111000000000,D0
00001B08  EC88                    1601      LSR.L       #6,D0
00001B0A  4EB8 167C               1602      JSR         EADecoder_left
00001B0E                          1603  
00001B0E  6000 F5E2               1604      BRA         opdec_return
00001B12                          1605  
00001B12                          1606  
00001B12                          1607  
00001B12                          1608  MATCH_MOVEM_TO_MEM_W
00001B12                          1609      ** Move command size into D1
00001B12  123C 0002               1610      MOVE.B      #2,D1
00001B16                          1611      ** Print command
00001B16  103C 000E               1612      MOVE.B      #14,D0
00001B1A  43F8 0037               1613      LEA         pr_MOVEM,A1
00001B1E  4E4F                    1614      TRAP        #15
00001B20                          1615      ** Print size
00001B20  43F8 0019               1616      LEA         pr_WORD,A1
00001B24  4E4F                    1617      TRAP        #15
00001B26                          1618  
00001B26  6000 0016               1619      BRA         print_movem_to_mem
00001B2A                          1620  MATCH_MOVEM_TO_MEM_L
00001B2A                          1621      ** Move command size into D1
00001B2A  123C 0004               1622      MOVE.B      #4,D1
00001B2E                          1623      ** Print command
00001B2E  103C 000E               1624      MOVE.B      #14,D0
00001B32  43F8 0037               1625      LEA         pr_MOVEM,A1
00001B36  4E4F                    1626      TRAP        #15
00001B38                          1627      ** Print size
00001B38  43F8 001C               1628      LEA         pr_LONG,A1
00001B3C  4E4F                    1629      TRAP        #15
00001B3E                          1630  print_movem_to_mem
00001B3E                          1631      ** Print space
00001B3E  43F8 0000               1632      LEA         pr_space,A1
00001B42  4E4F                    1633      TRAP        #15
00001B44                          1634  
00001B44                          1635      ** Print registers
00001B44  6100 0068               1636      BSR         print_movem_mask_to_mem
00001B48                          1637  
00001B48                          1638      ** Add comma
00001B48  103C 000E               1639      MOVE.B      #14,D0
00001B4C  43F8 0014               1640      LEA         pr_comma,A1
00001B50  4E4F                    1641      TRAP        #15
00001B52                          1642  
00001B52                          1643      ** Decode right side ea
00001B52  1002                    1644      MOVE.B      D2,D0
00001B54  0200 003F               1645      ANDI.B      #%00111111,D0
00001B58  4EB8 1694               1646      JSR         EADecoder
00001B5C                          1647  
00001B5C  6000 F594               1648      BRA         opdec_return
00001B60                          1649  
00001B60                          1650  
00001B60                          1651  MATCH_MOVEM_TO_REG_W
00001B60                          1652      ** Move command size into D1
00001B60  123C 0002               1653      MOVE.B      #2,D1
00001B64                          1654      ** Print command
00001B64  103C 000E               1655      MOVE.B      #14,D0
00001B68  43F8 0037               1656      LEA         pr_MOVEM,A1
00001B6C  4E4F                    1657      TRAP        #15
00001B6E                          1658      ** Print size
00001B6E  43F8 0019               1659      LEA         pr_WORD,A1
00001B72  4E4F                    1660      TRAP        #15
00001B74                          1661  
00001B74  6000 0016               1662      BRA         print_movem_to_reg
00001B78                          1663  MATCH_MOVEM_TO_REG_L
00001B78                          1664      ** Move command size into D1
00001B78  123C 0004               1665      MOVE.B      #4,D1
00001B7C                          1666      ** Print command
00001B7C  103C 000E               1667      MOVE.B      #14,D0
00001B80  43F8 0037               1668      LEA         pr_MOVEM,A1
00001B84  4E4F                    1669      TRAP        #15
00001B86                          1670      ** Print size
00001B86  43F8 001C               1671      LEA         pr_LONG,A1
00001B8A  4E4F                    1672      TRAP        #15
00001B8C                          1673  print_movem_to_reg
00001B8C                          1674      ** Print space
00001B8C  43F8 0000               1675      LEA         pr_space,A1
00001B90  4E4F                    1676      TRAP        #15
00001B92                          1677  
00001B92                          1678      ** Decode right side ea
00001B92  1002                    1679      MOVE.B      D2,D0
00001B94  0200 003F               1680      ANDI.B      #%00111111,D0
00001B98  4EB8 1694               1681      JSR         EADecoder
00001B9C                          1682  
00001B9C                          1683      ** Add comma
00001B9C  103C 000E               1684      MOVE.B      #14,D0
00001BA0  43F8 0014               1685      LEA         pr_comma,A1
00001BA4  4E4F                    1686      TRAP        #15
00001BA6                          1687  
00001BA6                          1688      ** Print registers
00001BA6  6100 0034               1689      BSR         print_movem_mask_to_reg
00001BAA                          1690  
00001BAA  6000 F546               1691      BRA         opdec_return
00001BAE                          1692  
00001BAE                          1693  
00001BAE                          1694  
00001BAE                          1695  print_movem_mask_to_mem
00001BAE  48A7 FF7E               1696      MOVEM       D0-D7/A1-A6,-(SP)
00001BB2                          1697  
00001BB2  4243                    1698      CLR         D3          ** Temp register
00001BB4  3A10                    1699      MOVE.W      (A0),D5     ** Holds address registers
00001BB6  3818                    1700      MOVE.W      (A0)+,D4    ** Holds direct registers
00001BB8  0245 00FF               1701      ANDI.W      #%0000000011111111,D5
00001BBC  0244 FF00               1702      ANDI.W      #%1111111100000000,D4
00001BC0  E04C                    1703      LSR.W       #8,D4
00001BC2                          1704  
00001BC2  6100 004E               1705      BSR         print_movem_dn
00001BC6                          1706  
00001BC6                          1707      ** Print ADDRESS REG slash
00001BC6  103C 000E               1708      MOVE.B      #14,D0
00001BCA  43F8 0026               1709      LEA         pr_slash,A1
00001BCE  4E4F                    1710      TRAP        #15
00001BD0                          1711  
00001BD0  1805                    1712      MOVE.B      D5,D4
00001BD2  6100 01FA               1713      BSR         print_movem_an
00001BD6                          1714  
00001BD6  4C9F 7EFF               1715      MOVEM       (SP)+,D0-D7/A1-A6
00001BDA  4E75                    1716      RTS
00001BDC                          1717  
00001BDC                          1718  
00001BDC                          1719  print_movem_mask_to_reg
00001BDC  48A7 FF7E               1720      MOVEM       D0-D7/A1-A6,-(SP)
00001BE0                          1721  
00001BE0  4243                    1722      CLR         D3          ** Temp register
00001BE2  3810                    1723      MOVE.W      (A0),D4     ** Holds direct registers
00001BE4  3A18                    1724      MOVE.W      (A0)+,D5    ** Holds address registers
00001BE6  0244 00FF               1725      ANDI.W      #%0000000011111111,D4
00001BEA  0245 FF00               1726      ANDI.W      #%1111111100000000,D5
00001BEE  E04D                    1727      LSR.W       #8,D5
00001BF0                          1728  
00001BF0  6100 03AE               1729      BSR         bit_reversal
00001BF4  6100 001C               1730      BSR         print_movem_dn
00001BF8                          1731  
00001BF8                          1732      ** Print ADDRESS REG slash
00001BF8  103C 000E               1733      MOVE.B      #14,D0
00001BFC  43F8 0026               1734      LEA         pr_slash,A1
00001C00  4E4F                    1735      TRAP        #15
00001C02                          1736  
00001C02  1805                    1737      MOVE.B      D5,D4
00001C04  6100 039A               1738      BSR         bit_reversal
00001C08  6100 01C4               1739      BSR         print_movem_an
00001C0C                          1740  
00001C0C  4C9F 7EFF               1741      MOVEM       (SP)+,D0-D7/A1-A6
00001C10  4E75                    1742      RTS
00001C12                          1743  
00001C12                          1744  
00001C12                          1745  
00001C12                          1746  
00001C12                          1747  
00001C12                          1748  print_movem_dn
00001C12                          1749  to_mem_d0 *************************** D0
00001C12                          1750      ** Test bit
00001C12  0804 0007               1751      BTST        #7,D4
00001C16  6700 001C               1752      BEQ         to_mem_d1
00001C1A                          1753      ** Set D3
00001C1A  163C 0001               1754      MOVE.B      #1,D3
00001C1E                          1755      ** Print register
00001C1E  103C 000E               1756      MOVE.B      #14,D0
00001C22  43F8 00C5               1757      LEA         pr_d0,A1
00001C26  4E4F                    1758      TRAP        #15
00001C28                          1759  
00001C28                          1760      ** Check if next bit is clear
00001C28                          1761      ** If true, skip next
00001C28  0804 0006               1762      BTST        #6,D4
00001C2C  6700 0028               1763      BEQ         to_mem_d2
00001C30                          1764      ** Else, check cascade
00001C30  6000 00FC               1765      BRA         cascade_d1
00001C34                          1766  
00001C34                          1767  to_mem_d1 *************************** D1
00001C34                          1768      ** Test bit
00001C34  0804 0006               1769      BTST        #6,D4
00001C38  6700 001C               1770      BEQ         to_mem_d2
00001C3C                          1771      ** Set D3
00001C3C  163C 0001               1772      MOVE.B      #1,D3
00001C40                          1773      ** Print register
00001C40  103C 000E               1774      MOVE.B      #14,D0
00001C44  43F8 00C8               1775      LEA         pr_d1,A1
00001C48  4E4F                    1776      TRAP        #15
00001C4A                          1777  
00001C4A                          1778      ** Check if next bit is clear
00001C4A                          1779      ** If true, skip next
00001C4A  0804 0005               1780      BTST        #5,D4
00001C4E  6700 002C               1781      BEQ         to_mem_d3
00001C52                          1782      ** Else, check cascade
00001C52  6000 00F2               1783      BRA         cascade_d2
00001C56                          1784  
00001C56                          1785  to_mem_d2 *************************** D2
00001C56                          1786      ** Test bit
00001C56  0804 0005               1787      BTST        #5,D4
00001C5A  6700 0020               1788      BEQ         to_mem_d3
00001C5E                          1789      ** Print slash if D3 set
00001C5E  6100 032A               1790      BSR         slash_check
00001C62                          1791      ** Set D3
00001C62  163C 0001               1792      MOVE.B      #1,D3
00001C66                          1793      ** Print register
00001C66  103C 000E               1794      MOVE.B      #14,D0
00001C6A  43F8 00CB               1795      LEA         pr_d2,A1
00001C6E  4E4F                    1796      TRAP        #15
00001C70                          1797  
00001C70                          1798      ** Check if next bit is clear
00001C70                          1799      ** If true, skip next
00001C70  0804 0004               1800      BTST        #4,D4
00001C74  6700 002C               1801      BEQ         to_mem_d4
00001C78                          1802      ** Else, check cascade
00001C78  6000 00E4               1803      BRA         cascade_d3
00001C7C                          1804  
00001C7C                          1805  to_mem_d3 *************************** D3
00001C7C                          1806      ** Test bit
00001C7C  0804 0004               1807      BTST        #4,D4
00001C80  6700 0020               1808      BEQ         to_mem_d4
00001C84                          1809      ** Print slash if D3 set
00001C84  6100 0304               1810      BSR         slash_check
00001C88                          1811      ** Set D3
00001C88  163C 0001               1812      MOVE.B      #1,D3
00001C8C                          1813      ** Print register
00001C8C  103C 000E               1814      MOVE.B      #14,D0
00001C90  43F8 00CE               1815      LEA         pr_d3,A1
00001C94  4E4F                    1816      TRAP        #15
00001C96                          1817  
00001C96                          1818      ** Check if next bit is clear
00001C96                          1819      ** If true, skip next
00001C96  0804 0003               1820      BTST        #3,D4
00001C9A  6700 002C               1821      BEQ         to_mem_d5
00001C9E                          1822      ** Else, check cascade
00001C9E  6000 00D6               1823      BRA         cascade_d4
00001CA2                          1824  
00001CA2                          1825  to_mem_d4 *************************** D4
00001CA2                          1826      ** Test bit
00001CA2  0804 0003               1827      BTST        #3,D4
00001CA6  6700 0020               1828      BEQ         to_mem_d5
00001CAA                          1829      ** Print slash if D3 set
00001CAA  6100 02DE               1830      BSR         slash_check
00001CAE                          1831      ** Set D3
00001CAE  163C 0001               1832      MOVE.B      #1,D3
00001CB2                          1833      ** Print register
00001CB2  103C 000E               1834      MOVE.B      #14,D0
00001CB6  43F8 00D1               1835      LEA         pr_d4,A1
00001CBA  4E4F                    1836      TRAP        #15
00001CBC                          1837  
00001CBC                          1838      ** Check if next bit is clear
00001CBC                          1839      ** If true, skip next
00001CBC  0804 0002               1840      BTST        #2,D4
00001CC0  6700 002C               1841      BEQ         to_mem_d6
00001CC4                          1842      ** Else, check cascade
00001CC4  6000 00C8               1843      BRA         cascade_d5
00001CC8                          1844  
00001CC8                          1845  to_mem_d5 *************************** D5
00001CC8                          1846      ** Test bit
00001CC8  0804 0002               1847      BTST        #2,D4
00001CCC  6700 0020               1848      BEQ         to_mem_d6
00001CD0                          1849      ** Print slash if D3 set
00001CD0  6100 02B8               1850      BSR         slash_check
00001CD4                          1851      ** Set D3
00001CD4  163C 0001               1852      MOVE.B      #1,D3
00001CD8                          1853      ** Print register
00001CD8  103C 000E               1854      MOVE.B      #14,D0
00001CDC  43F8 00D4               1855      LEA         pr_d5,A1
00001CE0  4E4F                    1856      TRAP        #15
00001CE2                          1857  
00001CE2                          1858      ** Check if next bit is clear
00001CE2                          1859      ** If true, skip next
00001CE2  0804 0001               1860      BTST        #1,D4
00001CE6  6700 002C               1861      BEQ         to_mem_d7
00001CEA                          1862      ** Else, check cascade
00001CEA  6000 00BA               1863      BRA         cascade_d6
00001CEE                          1864  
00001CEE                          1865  to_mem_d6 *************************** D6
00001CEE                          1866      ** Test bit
00001CEE  0804 0001               1867      BTST        #1,D4
00001CF2  6700 0020               1868      BEQ         to_mem_d7
00001CF6                          1869      ** Print slash if D3 set
00001CF6  6100 0292               1870      BSR         slash_check
00001CFA                          1871      ** Set D3
00001CFA  163C 0001               1872      MOVE.B      #1,D3
00001CFE                          1873      ** Print register
00001CFE  103C 000E               1874      MOVE.B      #14,D0
00001D02  43F8 00D7               1875      LEA         pr_d6,A1
00001D06  4E4F                    1876      TRAP        #15
00001D08                          1877  
00001D08                          1878      ** Check if next bit is clear
00001D08                          1879      ** If true, skip next
00001D08  0804 0000               1880      BTST        #0,D4
00001D0C  6700 001C               1881      BEQ         print_movem_dn_end
00001D10                          1882      ** Else, check cascade
00001D10  6000 00AC               1883      BRA         cascade_d7
00001D14                          1884  
00001D14                          1885  to_mem_d7 *************************** D7
00001D14                          1886      ** Test bit
00001D14  0804 0000               1887      BTST        #0,D4
00001D18  6700 0010               1888      BEQ         print_movem_dn_end
00001D1C                          1889      ** Print slash if D3 set
00001D1C  6100 026C               1890      BSR         slash_check
00001D20                          1891      ** Print register
00001D20  103C 000E               1892      MOVE.B      #14,D0
00001D24  43F8 00D7               1893      LEA         pr_d6,A1
00001D28  4E4F                    1894      TRAP        #15
00001D2A                          1895  
00001D2A                          1896  print_movem_dn_end
00001D2A  4243                    1897      CLR         D3
00001D2C  4E75                    1898      RTS
00001D2E                          1899  
00001D2E                          1900  
00001D2E                          1901  cascade_d1 *************************** -D1
00001D2E                          1902      ** If the next bit is set, check next
00001D2E  0804 0005               1903      BTST        #5,D4
00001D32  6600 0012               1904      BNE         cascade_d2
00001D36                          1905      ** Else, finish the list
00001D36  43F8 0024               1906      LEA         pr_hyphen,A1
00001D3A  4E4F                    1907      TRAP        #15
00001D3C  43F8 00C8               1908      LEA         pr_D1,A1
00001D40  4E4F                    1909      TRAP        #15
00001D42                          1910  
00001D42  6000 FF38               1911      BRA         to_mem_d3
00001D46                          1912  
00001D46                          1913  cascade_d2 *************************** -D2
00001D46                          1914      ** If the next bit is set, check next
00001D46  0804 0004               1915      BTST        #4,D4
00001D4A  6600 0012               1916      BNE         cascade_d3
00001D4E                          1917      ** Else, finish the list
00001D4E  43F8 0024               1918      LEA         pr_hyphen,A1
00001D52  4E4F                    1919      TRAP        #15
00001D54  43F8 00CB               1920      LEA         pr_D2,A1
00001D58  4E4F                    1921      TRAP        #15
00001D5A                          1922  
00001D5A  6000 FF46               1923      BRA         to_mem_d4
00001D5E                          1924  
00001D5E                          1925  cascade_d3 *************************** -D3
00001D5E                          1926      ** If the next bit is set, check next
00001D5E  0804 0003               1927      BTST        #3,D4
00001D62  6600 0012               1928      BNE         cascade_d4
00001D66                          1929      ** Else, finish the list
00001D66  43F8 0024               1930      LEA         pr_hyphen,A1
00001D6A  4E4F                    1931      TRAP        #15
00001D6C  43F8 00CE               1932      LEA         pr_D3,A1
00001D70  4E4F                    1933      TRAP        #15
00001D72                          1934  
00001D72  6000 FF54               1935      BRA         to_mem_d5
00001D76                          1936  
00001D76                          1937  cascade_d4 *************************** -D4
00001D76                          1938      ** If the next bit is set, check next
00001D76  0804 0002               1939      BTST        #2,D4
00001D7A  6600 0012               1940      BNE         cascade_d5
00001D7E                          1941      ** Else, finish the list
00001D7E  43F8 0024               1942      LEA         pr_hyphen,A1
00001D82  4E4F                    1943      TRAP        #15
00001D84  43F8 00D1               1944      LEA         pr_D4,A1
00001D88  4E4F                    1945      TRAP        #15
00001D8A                          1946  
00001D8A  6000 FF62               1947      BRA         to_mem_d6
00001D8E                          1948  
00001D8E                          1949  cascade_d5 *************************** -D5
00001D8E                          1950      ** If the next bit is set, check next
00001D8E  0804 0001               1951      BTST        #1,D4
00001D92  6600 0012               1952      BNE         cascade_d6
00001D96                          1953      ** Else, finish the list
00001D96  43F8 0024               1954      LEA         pr_hyphen,A1
00001D9A  4E4F                    1955      TRAP        #15
00001D9C  43F8 00D4               1956      LEA         pr_D5,A1
00001DA0  4E4F                    1957      TRAP        #15
00001DA2                          1958  
00001DA2  6000 FF70               1959      BRA         to_mem_d7
00001DA6                          1960  
00001DA6                          1961  cascade_d6 *************************** -D6
00001DA6                          1962      ** If the next bit is set, check next
00001DA6  0804 0000               1963      BTST        #0,D4
00001DAA  6600 0012               1964      BNE         cascade_d7
00001DAE                          1965      ** Else, finish the list
00001DAE  43F8 0024               1966      LEA         pr_hyphen,A1
00001DB2  4E4F                    1967      TRAP        #15
00001DB4  43F8 00D7               1968      LEA         pr_D6,A1
00001DB8  4E4F                    1969      TRAP        #15
00001DBA                          1970  
00001DBA  6000 FF6E               1971      BRA         print_movem_dn_end
00001DBE                          1972  
00001DBE                          1973  cascade_d7 *************************** -D7
00001DBE                          1974      ** Else, finish the list
00001DBE  43F8 0024               1975      LEA         pr_hyphen,A1
00001DC2  4E4F                    1976      TRAP        #15
00001DC4  43F8 00DA               1977      LEA         pr_D7,A1
00001DC8  4E4F                    1978      TRAP        #15
00001DCA                          1979  
00001DCA  6000 FF5E               1980      BRA         print_movem_dn_end
00001DCE                          1981  
00001DCE                          1982  print_movem_an
00001DCE                          1983  to_mem_a0 *************************** A0
00001DCE                          1984      ** Test bit
00001DCE  0804 0007               1985      BTST        #7,D4
00001DD2  6700 001C               1986      BEQ         to_mem_a1
00001DD6                          1987      ** Set D3
00001DD6  163C 0001               1988      MOVE.B      #1,D3
00001DDA                          1989      ** Print register
00001DDA  103C 000E               1990      MOVE.B      #14,D0
00001DDE  43F8 00DD               1991      LEA         pr_a0,A1
00001DE2  4E4F                    1992      TRAP        #15
00001DE4                          1993  
00001DE4                          1994      ** Check if next bit is clear
00001DE4                          1995      ** If true, skip next
00001DE4  0804 0006               1996      BTST        #6,D4
00001DE8  6700 0028               1997      BEQ         to_mem_a2
00001DEC                          1998      ** Else, check cascade
00001DEC  6000 00FC               1999      BRA         cascade_a1
00001DF0                          2000  
00001DF0                          2001  to_mem_a1 *************************** A1
00001DF0                          2002      ** Test bit
00001DF0  0804 0006               2003      BTST        #6,D4
00001DF4  6700 001C               2004      BEQ         to_mem_a2
00001DF8                          2005      ** Set D3
00001DF8  163C 0001               2006      MOVE.B      #1,D3
00001DFC                          2007      ** Print register
00001DFC  103C 000E               2008      MOVE.B      #14,D0
00001E00  43F8 00E0               2009      LEA         pr_a1,A1
00001E04  4E4F                    2010      TRAP        #15
00001E06                          2011  
00001E06                          2012      ** Check if next bit is clear
00001E06                          2013      ** If true, skip next
00001E06  0804 0005               2014      BTST        #5,D4
00001E0A  6700 002C               2015      BEQ         to_mem_a3
00001E0E                          2016      ** Else, check cascade
00001E0E  6000 00F2               2017      BRA         cascade_a2
00001E12                          2018  
00001E12                          2019  to_mem_a2 *************************** A2
00001E12                          2020      ** Test bit
00001E12  0804 0005               2021      BTST        #5,D4
00001E16  6700 0020               2022      BEQ         to_mem_a3
00001E1A                          2023      ** Print slash if D3 set
00001E1A  6100 016E               2024      BSR         slash_check
00001E1E                          2025      ** Set D3
00001E1E  163C 0001               2026      MOVE.B      #1,D3
00001E22                          2027      ** Print register
00001E22  103C 000E               2028      MOVE.B      #14,D0
00001E26  43F8 00E3               2029      LEA         pr_a2,A1
00001E2A  4E4F                    2030      TRAP        #15
00001E2C                          2031  
00001E2C                          2032      ** Check if next bit is clear
00001E2C                          2033      ** If true, skip next
00001E2C  0804 0004               2034      BTST        #4,D4
00001E30  6700 002C               2035      BEQ         to_mem_a4
00001E34                          2036      ** Else, check cascade
00001E34  6000 00E4               2037      BRA         cascade_a3
00001E38                          2038  
00001E38                          2039  to_mem_a3 *************************** A3
00001E38                          2040      ** Test bit
00001E38  0804 0004               2041      BTST        #4,D4
00001E3C  6700 0020               2042      BEQ         to_mem_a4
00001E40                          2043      ** Print slash if D3 set
00001E40  6100 0148               2044      BSR         slash_check
00001E44                          2045      ** Set D3
00001E44  163C 0001               2046      MOVE.B      #1,D3
00001E48                          2047      ** Print register
00001E48  103C 000E               2048      MOVE.B      #14,D0
00001E4C  43F8 00E6               2049      LEA         pr_a3,A1
00001E50  4E4F                    2050      TRAP        #15
00001E52                          2051  
00001E52                          2052      ** Check if next bit is clear
00001E52                          2053      ** If true, skip next
00001E52  0804 0003               2054      BTST        #3,D4
00001E56  6700 002C               2055      BEQ         to_mem_a5
00001E5A                          2056      ** Else, check cascade
00001E5A  6000 00D6               2057      BRA         cascade_a4
00001E5E                          2058  
00001E5E                          2059  to_mem_a4 *************************** A4
00001E5E                          2060      ** Test bit
00001E5E  0804 0003               2061      BTST        #3,D4
00001E62  6700 0020               2062      BEQ         to_mem_a5
00001E66                          2063      ** Print slash if D3 set
00001E66  6100 0122               2064      BSR         slash_check
00001E6A                          2065      ** Set D3
00001E6A  163C 0001               2066      MOVE.B      #1,D3
00001E6E                          2067      ** Print register
00001E6E  103C 000E               2068      MOVE.B      #14,D0
00001E72  43F8 00E9               2069      LEA         pr_a4,A1
00001E76  4E4F                    2070      TRAP        #15
00001E78                          2071  
00001E78                          2072      ** Check if next bit is clear
00001E78                          2073      ** If true, skip next
00001E78  0804 0002               2074      BTST        #2,D4
00001E7C  6700 002C               2075      BEQ         to_mem_a6
00001E80                          2076      ** Else, check cascade
00001E80  6000 00C8               2077      BRA         cascade_a5
00001E84                          2078  
00001E84                          2079  to_mem_a5 *************************** A5
00001E84                          2080      ** Test bit
00001E84  0804 0002               2081      BTST        #2,D4
00001E88  6700 0020               2082      BEQ         to_mem_a6
00001E8C                          2083      ** Print slash if D3 set
00001E8C  6100 00FC               2084      BSR         slash_check
00001E90                          2085      ** Set D3
00001E90  163C 0001               2086      MOVE.B      #1,D3
00001E94                          2087      ** Print register
00001E94  103C 000E               2088      MOVE.B      #14,D0
00001E98  43F8 00EC               2089      LEA         pr_a5,A1
00001E9C  4E4F                    2090      TRAP        #15
00001E9E                          2091  
00001E9E                          2092      ** Check if next bit is clear
00001E9E                          2093      ** If true, skip next
00001E9E  0804 0001               2094      BTST        #1,D4
00001EA2  6700 002C               2095      BEQ         to_mem_a7
00001EA6                          2096      ** Else, check cascade
00001EA6  6000 00BA               2097      BRA         cascade_a6
00001EAA                          2098  
00001EAA                          2099  to_mem_a6 *************************** A6
00001EAA                          2100      ** Test bit
00001EAA  0804 0001               2101      BTST        #1,D4
00001EAE  6700 0020               2102      BEQ         to_mem_a7
00001EB2                          2103      ** Print slash if D3 set
00001EB2  6100 00D6               2104      BSR         slash_check
00001EB6                          2105      ** Set D3
00001EB6  163C 0001               2106      MOVE.B      #1,D3
00001EBA                          2107      ** Print register
00001EBA  103C 000E               2108      MOVE.B      #14,D0
00001EBE  43F8 00EF               2109      LEA         pr_a6,A1
00001EC2  4E4F                    2110      TRAP        #15
00001EC4                          2111  
00001EC4                          2112      ** Check if next bit is clear
00001EC4                          2113      ** If true, skip next
00001EC4  0804 0000               2114      BTST        #0,D4
00001EC8  6700 001C               2115      BEQ         print_movem_an_end
00001ECC                          2116      ** Else, check cascade
00001ECC  6000 00AC               2117      BRA         cascade_a7
00001ED0                          2118  
00001ED0                          2119  to_mem_a7 *************************** A7
00001ED0                          2120      ** Test bit
00001ED0  0804 0000               2121      BTST        #0,D4
00001ED4  6700 0010               2122      BEQ         print_movem_an_end
00001ED8                          2123      ** Print slash if D3 set
00001ED8  6100 00B0               2124      BSR         slash_check
00001EDC                          2125      ** Print register
00001EDC  103C 000E               2126      MOVE.B      #14,D0
00001EE0  43F8 00EF               2127      LEA         pr_a6,A1
00001EE4  4E4F                    2128      TRAP        #15
00001EE6                          2129  
00001EE6                          2130  print_movem_an_end
00001EE6  4243                    2131      CLR         D3
00001EE8  4E75                    2132      RTS
00001EEA                          2133  
00001EEA                          2134  
00001EEA                          2135  cascade_a1 *************************** -A1
00001EEA                          2136      ** If the next bit is set, check next
00001EEA  0804 0005               2137      BTST        #5,D4
00001EEE  6600 0012               2138      BNE         cascade_a2
00001EF2                          2139      ** Else, finish the list
00001EF2  43F8 0024               2140      LEA         pr_hyphen,A1
00001EF6  4E4F                    2141      TRAP        #15
00001EF8  43F8 00E0               2142      LEA         pr_a1,A1
00001EFC  4E4F                    2143      TRAP        #15
00001EFE                          2144  
00001EFE  6000 FF38               2145      BRA         to_mem_a3
00001F02                          2146  
00001F02                          2147  cascade_a2 *************************** -A2
00001F02                          2148      ** If the next bit is set, check next
00001F02  0804 0004               2149      BTST        #4,D4
00001F06  6600 0012               2150      BNE         cascade_a3
00001F0A                          2151      ** Else, finish the list
00001F0A  43F8 0024               2152      LEA         pr_hyphen,A1
00001F0E  4E4F                    2153      TRAP        #15
00001F10  43F8 00E3               2154      LEA         pr_a2,A1
00001F14  4E4F                    2155      TRAP        #15
00001F16                          2156  
00001F16  6000 FF46               2157      BRA         to_mem_a4
00001F1A                          2158  
00001F1A                          2159  cascade_a3 *************************** -A3
00001F1A                          2160      ** If the next bit is set, check next
00001F1A  0804 0003               2161      BTST        #3,D4
00001F1E  6600 0012               2162      BNE         cascade_a4
00001F22                          2163      ** Else, finish the list
00001F22  43F8 0024               2164      LEA         pr_hyphen,A1
00001F26  4E4F                    2165      TRAP        #15
00001F28  43F8 00E6               2166      LEA         pr_a3,A1
00001F2C  4E4F                    2167      TRAP        #15
00001F2E                          2168  
00001F2E  6000 FF54               2169      BRA         to_mem_a5
00001F32                          2170  
00001F32                          2171  cascade_a4 *************************** -A4
00001F32                          2172      ** If the next bit is set, check next
00001F32  0804 0002               2173      BTST        #2,D4
00001F36  6600 0012               2174      BNE         cascade_a5
00001F3A                          2175      ** Else, finish the list
00001F3A  43F8 0024               2176      LEA         pr_hyphen,A1
00001F3E  4E4F                    2177      TRAP        #15
00001F40  43F8 00E9               2178      LEA         pr_a4,A1
00001F44  4E4F                    2179      TRAP        #15
00001F46                          2180  
00001F46  6000 FF62               2181      BRA         to_mem_a6
00001F4A                          2182  
00001F4A                          2183  cascade_a5 *************************** -A5
00001F4A                          2184      ** If the next bit is set, check next
00001F4A  0804 0001               2185      BTST        #1,D4
00001F4E  6600 0012               2186      BNE         cascade_a6
00001F52                          2187      ** Else, finish the list
00001F52  43F8 0024               2188      LEA         pr_hyphen,A1
00001F56  4E4F                    2189      TRAP        #15
00001F58  43F8 00EC               2190      LEA         pr_a5,A1
00001F5C  4E4F                    2191      TRAP        #15
00001F5E                          2192  
00001F5E  6000 FF70               2193      BRA         to_mem_a7
00001F62                          2194  
00001F62                          2195  cascade_a6 *************************** -A6
00001F62                          2196      ** If the next bit is set, check next
00001F62  0804 0000               2197      BTST        #0,D4
00001F66  6600 0012               2198      BNE         cascade_a7
00001F6A                          2199      ** Else, finish the list
00001F6A  43F8 0024               2200      LEA         pr_hyphen,A1
00001F6E  4E4F                    2201      TRAP        #15
00001F70  43F8 00EF               2202      LEA         pr_a6,A1
00001F74  4E4F                    2203      TRAP        #15
00001F76                          2204  
00001F76  6000 FF6E               2205      BRA         print_movem_an_end
00001F7A                          2206  
00001F7A                          2207  cascade_a7 *************************** -A7
00001F7A                          2208      ** Else, finish the list
00001F7A  43F8 0024               2209      LEA         pr_hyphen,A1
00001F7E  4E4F                    2210      TRAP        #15
00001F80  43F8 00F2               2211      LEA         pr_a7,A1
00001F84  4E4F                    2212      TRAP        #15
00001F86                          2213  
00001F86  6000 FF5E               2214      BRA         print_movem_an_end
00001F8A                          2215  
00001F8A                          2216  
00001F8A                          2217  
00001F8A                          2218  
00001F8A                          2219  
00001F8A                          2220  
00001F8A                          2221  
00001F8A                          2222  
00001F8A                          2223  
00001F8A                          2224  slash_check
00001F8A  0C03 0001               2225      CMPI.B      #1,D3
00001F8E  6600 000E               2226      BNE         no_slash
00001F92                          2227      ** Clear D3 and print slash
00001F92  4243                    2228      CLR         D3
00001F94  103C 000E               2229      MOVE.B      #14,D0
00001F98  43F8 0026               2230      LEA         pr_slash,A1
00001F9C  4E4F                    2231      TRAP        #15
00001F9E                          2232  
00001F9E                          2233  no_slash
00001F9E  4E75                    2234      RTS
00001FA0                          2235  
00001FA0                          2236  bit_reversal
00001FA0  48A7 F700               2237      MOVEM       D0-D3/D5-D7,-(SP)
00001FA4                          2238      ** Reverse D4
00001FA4  4242                    2239      CLR         D2
00001FA6  4243                    2240      CLR         D3
00001FA8                          2241  
00001FA8  1604                    2242      MOVE.B      D4,D3
00001FAA  0203 0080               2243      ANDI.B      #%10000000,D3
00001FAE  EE0B                    2244      LSR.B       #7,D3
00001FB0  8403                    2245      OR.B        D3,D2
00001FB2                          2246  
00001FB2  1604                    2247      MOVE.B      D4,D3
00001FB4  0203 0040               2248      ANDI.B      #%01000000,D3
00001FB8  EA0B                    2249      LSR.B       #5,D3
00001FBA  8403                    2250      OR.B        D3,D2
00001FBC                          2251  
00001FBC  1604                    2252      MOVE.B      D4,D3
00001FBE  0203 0020               2253      ANDI.B      #%00100000,D3
00001FC2  E60B                    2254      LSR.B       #3,D3
00001FC4  8403                    2255      OR.B        D3,D2
00001FC6                          2256  
00001FC6  1604                    2257      MOVE.B      D4,D3
00001FC8  0203 0010               2258      ANDI.B      #%00010000,D3
00001FCC  E20B                    2259      LSR.B       #1,D3
00001FCE  8403                    2260      OR.B        D3,D2
00001FD0                          2261  
00001FD0  1604                    2262      MOVE.B      D4,D3
00001FD2  0203 0008               2263      ANDI.B      #%00001000,D3
00001FD6  E30B                    2264      LSL.B       #1,D3
00001FD8  8403                    2265      OR.B        D3,D2
00001FDA                          2266  
00001FDA  1604                    2267      MOVE.B      D4,D3
00001FDC  0203 0004               2268      ANDI.B      #%00000100,D3
00001FE0  E70B                    2269      LSL.B       #3,D3
00001FE2  8403                    2270      OR.B        D3,D2
00001FE4                          2271  
00001FE4  1604                    2272      MOVE.B      D4,D3
00001FE6  0203 0002               2273      ANDI.B      #%00000010,D3
00001FEA  EB0B                    2274      LSL.B       #5,D3
00001FEC  8403                    2275      OR.B        D3,D2
00001FEE                          2276  
00001FEE  1604                    2277      MOVE.B      D4,D3
00001FF0  0203 0001               2278      ANDI.B      #%00000001,D3
00001FF4  EF0B                    2279      LSL.B       #7,D3
00001FF6  8403                    2280      OR.B        D3,D2
00001FF8                          2281  
00001FF8  1802                    2282      MOVE.B      D2,D4
00001FFA                          2283  
00001FFA  4C9F 00EF               2284      MOVEM       (SP)+,D0-D3/D5-D7
00001FFE  4E75                    2285      RTS
00002000                          2286  
00002000                          2287  
00002000                          2288  -------------------- end include --------------------
00002000                          2289                  INCLUDE 'spencer_opcodes.x68'
00002000  =0000000E               2290  SHIFT       EQU %1110
00002000  =00000003               2291  RO          EQU %11
00002000  =00000000               2292  AS          EQU %00
00002000  =00000001               2293  LS          EQU %01
00002000  =00000000               2294  R           EQU %0
00002000  =00000001               2295  L           EQU %1
00002000  =00000001               2296  SHIFT_register  EQU %1
00002000  =00000000               2297  SHIFT_immed     EQU %0
00002000  =00000000               2298  SHIFT_BYTE  EQU %00
00002000  =00000001               2299  SHIFT_WORD  EQU %01
00002000  =00000003               2300  SHIFT_LONG  EQU %11
00002000                          2301  
00002000                          2302  CHECK_SHIFT
00002000  6100 010E               2303      BSR     Get_Count_Register_Val          * register 3
00002004  6100 011E               2304      BSR     Get_Size                        * register 4
00002008  6100 012E               2305      BSR     Get_Direction                   * register 5
0000200C  6100 013E               2306      BSR     Get_Is_Register_Or_Immediate    * register 6
00002010  6100 0152               2307      BSR     Get_Shift_Opcode                * register 7
00002014                          2308  
00002014  6100 0024               2309      BSR     PrintShiftData
00002018                          2310  
00002018  6100 000C               2311      BSR     getShiftDestReg
0000201C                          2312  
0000201C  103C 0003               2313      MOVE.B  #3,D0
00002020  4E4F                    2314      TRAP    #15
00002022                          2315  
00002022  6000 F0CE               2316      BRA         opdec_return
00002026                          2317  
00002026                          2318  getShiftDestReg
00002026                          2319  
00002026  48A7 2000               2320      MOVEM.W     D2, -(SP)
0000202A                          2321  
0000202A  123C 000D               2322      MOVE.B      #13,D1
0000202E  E3AA                    2323      LSL.L       D1,D2
00002030  E2AA                    2324      LSR.L       D1,D2
00002032  1202                    2325      MOVE.B      D2,D1
00002034                          2326  
00002034  4C9F 0004               2327      MOVEM.W     (SP)+,D2
00002038  4E75                    2328      RTS
0000203A                          2329  
0000203A                          2330  
0000203A                          2331  PrintShiftData
0000203A                          2332  
0000203A  BE3C 0003               2333      CMP.B   #RO,D7
0000203E  6700 0012               2334      BEQ     printRotate
00002042  BE3C 0000               2335      CMP.B   #AS,D7
00002046  6700 0014               2336      BEQ     printArithShift
0000204A  BE3C 0001               2337      CMP.B   #LS,D7
0000204E  6700 0016               2338      BEQ     printLogicShift
00002052                          2339  
00002052                          2340  printRotate
00002052  43F8 007A               2341      LEA         pr_SHIFT_RO,A1
00002056  4EF9 00002070           2342      JMP         executeShiftOpcodePrint
0000205C                          2343  printArithShift
0000205C  43F8 007D               2344      LEA         pr_SHIFT_AS,A1
00002060  4EF9 00002070           2345      JMP         executeShiftOpcodePrint
00002066                          2346  printLogicShift
00002066  43F8 0080               2347      LEA         pr_SHIFT_LS,A1
0000206A  4EF9 00002070           2348      JMP         executeShiftOpcodePrint
00002070                          2349  executeShiftOpcodePrint
00002070  6100 0148               2350      BSR         PrintString
00002074                          2351  
00002074  BA3C 0000               2352      CMP.B   #R,D5
00002078  6700 000A               2353      BEQ     printShiftRight
0000207C  BA3C 0001               2354      CMP.B   #L,D5
00002080  6700 000C               2355      BEQ     printShiftLeft
00002084                          2356  
00002084                          2357  printShiftRight
00002084  43F8 0085               2358      LEA         pr_SHIFT_R,A1
00002088  4EF9 00002098           2359      JMP         executePrintShiftdirection
0000208E                          2360  printShiftLeft
0000208E  43F8 0083               2361      LEA         pr_SHIFT_L,A1
00002092  4EF9 00002098           2362      JMP         executePrintShiftdirection
00002098                          2363  executePrintShiftdirection
00002098  6100 0120               2364      BSR         PrintString
0000209C                          2365  
0000209C  B83C 0000               2366      CMP.B   #SHIFT_BYTE,D4
000020A0  6700 0012               2367      BEQ     printShiftByte
000020A4  B83C 0001               2368      CMP.B   #SHIFT_WORD,D4
000020A8  6700 0014               2369      BEQ     printShiftWord
000020AC  B83C 0003               2370      CMP.B   #SHIFT_LONG,D4
000020B0  6700 0016               2371      BEQ     printShiftLong
000020B4                          2372  
000020B4                          2373  printShiftByte
000020B4  43F8 0016               2374      LEA     pr_BYTE,A1
000020B8  4EF9 000020D2           2375      JMP     executePrintShiftSize
000020BE                          2376  printShiftWord
000020BE  43F8 0019               2377      LEA     pr_WORD,A1
000020C2  4EF9 000020D2           2378      JMP     executePrintShiftSize
000020C8                          2379  printShiftLong
000020C8  43F8 001C               2380      LEA     pr_LONG,A1
000020CC  4EF9 000020D2           2381      JMP     executePrintShiftSize
000020D2                          2382  executePrintShiftSize
000020D2  6100 00E6               2383      BSR         PrintString
000020D6  43F8 0000               2384      LEA     pr_space,A1
000020DA  6100 00DE               2385      BSR     PrintString
000020DE                          2386  
000020DE  BC3C 0001               2387      CMP.B   #SHIFT_register,D6
000020E2  6700 000A               2388      BEQ     printShiftReg
000020E6  BC3C 0000               2389      CMP.B   #SHIFT_immed,D6
000020EA  6700 000A               2390      BEQ     printShift
000020EE                          2391  
000020EE                          2392  printShiftReg
000020EE  43F8 0078               2393      LEA     pr_reg,A1
000020F2  6100 00C6               2394      BSR     PrintString
000020F6                          2395  printShift
000020F6  1203                    2396      MOVE.B  D3,D1
000020F8  103C 0003               2397      MOVE.B  #3,D0
000020FC  4E4F                    2398      TRAP    #15
000020FE                          2399  
000020FE  43F8 0014               2400      LEA     pr_comma,A1
00002102  6100 00B6               2401      BSR     PrintString
00002106  43F8 0078               2402      LEA     pr_reg,A1
0000210A  6100 00AE               2403      BSR     PrintString
0000210E  4E75                    2404      RTS
00002110                          2405  
00002110                          2406  
00002110                          2407  Get_Count_Register_Val
00002110                          2408  
00002110  48A7 2000               2409      MOVEM.W     D2, -(SP)
00002114                          2410  
00002114  123C 000D               2411      MOVE.B      #13,D1
00002118  E98A                    2412      LSL.L       #4,D2
0000211A  E2AA                    2413      LSR.L       D1,D2
0000211C  1602                    2414      MOVE.B      D2,D3
0000211E                          2415  
0000211E  4C9F 0004               2416      MOVEM.W     (SP)+,D2
00002122  4E75                    2417      RTS
00002124                          2418  
00002124                          2419  Get_Size
00002124                          2420  
00002124  48A7 2000               2421      MOVEM.W     D2, -(SP)
00002128                          2422  
00002128  123C 000E               2423      MOVE.B      #14,D1
0000212C  E18A                    2424      LSL.L       #8,D2
0000212E  E2AA                    2425      LSR.L       D1,D2
00002130  1802                    2426      MOVE.B      D2,D4
00002132                          2427  
00002132  4C9F 0004               2428      MOVEM.W     (SP)+,D2
00002136  4E75                    2429      RTS
00002138                          2430  Get_Direction
00002138                          2431  
00002138  48A7 2000               2432      MOVEM.W     D2, -(SP)
0000213C                          2433  
0000213C  123C 000F               2434      MOVE.B      #15,D1
00002140  EF8A                    2435      LSL.L       #7,D2
00002142  E2AA                    2436      LSR.L       D1,D2
00002144  1A02                    2437      MOVE.B      D2,D5
00002146                          2438  
00002146  4C9F 0004               2439      MOVEM.W     (SP)+,D2
0000214A  4E75                    2440      RTS
0000214C                          2441  Get_Is_Register_Or_Immediate
0000214C                          2442  
0000214C  48A7 2000               2443      MOVEM.W     D2, -(SP)
00002150                          2444  
00002150  123C 000A               2445      MOVE.B      #10,D1
00002154  E3AA                    2446      LSL.L       D1,D2
00002156  123C 000F               2447      MOVE.B      #15,D1
0000215A  E2AA                    2448      LSR.L       D1,D2
0000215C                          2449  
0000215C  1C02                    2450      MOVE.B      D2,D6
0000215E                          2451  
0000215E  4C9F 0004               2452      MOVEM.W     (SP)+,D2
00002162  4E75                    2453      RTS
00002164                          2454  
00002164                          2455  Get_Shift_Opcode
00002164                          2456  
00002164  48A7 2000               2457      MOVEM.W     D2, -(SP)
00002168                          2458  
00002168  123C 000B               2459      MOVE.B      #11,D1
0000216C  E3AA                    2460      LSL.L       D1,D2
0000216E  123C 000E               2461      MOVE.B      #14,D1
00002172  E2AA                    2462      LSR.L       D1,D2
00002174                          2463  
00002174  1E02                    2464      MOVE.B      D2,D7
00002176                          2465  
00002176  4C9F 0004               2466      MOVEM.W     (SP)+,D2
0000217A  4E75                    2467      RTS
0000217C                          2468  
0000217C                          2469  
0000217C                          2470  MATCH_LSL
0000217C  3A02                    2471      MOVE.W      D2,D5       *REMOVE
0000217E                          2472  MATCH_LSR
0000217E  3A02                    2473      MOVE.W      D2,D5       *REMOVE
00002180                          2474  MATCH_ASR
00002180  3A02                    2475      MOVE.W      D2,D5       *REMOVE
00002182                          2476  MATCH_ASL
00002182  3A02                    2477      MOVE.W      D2,D5       *REMOVE
00002184                          2478  MATCH_ROL
00002184  3A02                    2479      MOVE.W      D2,D5       *REMOVE
00002186                          2480  MATCH_ROR
00002186  3A02                    2481      MOVE.W      D2,D5       *REMOVE
00002188                          2482  
00002188                          2483  Get_BCC_Displacement_8bit
00002188                          2484  
00002188  4246                    2485      CLR     D6
0000218A  1C02                    2486      MOVE.B  D2,D6
0000218C  4E75                    2487      RTS
0000218E                          2488  Get_BCC_Displacement_16bit
0000218E                          2489  
0000218E  4246                    2490      CLR     D6
00002190  3C18                    2491      MOVE.W  (A0)+,D6
00002192  4E75                    2492      RTS
00002194                          2493  Get_BCC_Displacement_32bit
00002194                          2494  
00002194  4246                    2495      CLR     D6
00002196  2C18                    2496      MOVE.L  (A0)+,D6
00002198  4E75                    2497      RTS
0000219A                          2498  Get_Current_Address
0000219A                          2499  
0000219A  4247                    2500      CLR     D7
0000219C  2E08                    2501      MOVE.L      A0,D7
0000219E  5587                    2502      SUBI.L      #2,D7
000021A0  4E75                    2503      RTS
000021A2                          2504  Get_BCC_Destination_Address
000021A2                          2505  
000021A2  9E86                    2506      SUB.L   D6,D7
000021A4  4E75                    2507      RTS
000021A6                          2508  
000021A6                          2509  PrintHex
000021A6                          2510  
000021A6  48A7 2000               2511      MOVEM.W     D2, -(SP)
000021AA                          2512  
000021AA  103C 000F               2513      MOVE.B      #15,D0
000021AE  143C 0010               2514      MOVE.B      #16,D2 * print base 16
000021B2  4E4F                    2515      TRAP        #15
000021B4                          2516  
000021B4  4C9F 0004               2517      MOVEM.W     (SP)+,D2
000021B8  4E75                    2518      RTS
000021BA                          2519  PrintString
000021BA  103C 000E               2520      MOVE.B      #14,D0
000021BE  4E4F                    2521      TRAP        #15
000021C0  4E75                    2522      RTS
000021C2                          2523  PrintSizeByte
000021C2  103C 000E               2524      MOVE.B      #14,D0
000021C6  43F8 0016               2525      LEA         pr_BYTE,A1
000021CA  4E4F                    2526      TRAP        #15
000021CC  4E75                    2527      RTS
000021CE                          2528  PrintSizeWord
000021CE  103C 000E               2529      MOVE.B      #14,D0
000021D2  43F8 0019               2530      LEA         pr_WORD,A1
000021D6  4E4F                    2531      TRAP        #15
000021D8  4E75                    2532      RTS
000021DA                          2533  PrintSizeLong
000021DA  103C 000E               2534      MOVE.B      #14,D0
000021DE  43F8 001C               2535      LEA         pr_LONG,A1
000021E2  4E4F                    2536      TRAP        #15
000021E4  4E75                    2537      RTS
000021E6                          2538  
000021E6                          2539  
000021E6                          2540  MATCH_CC_T_8
000021E6  3A02                    2541      MOVE.W      D2,D5       *REMOVE
000021E8                          2542  MATCH_CC_T_16
000021E8  3A02                    2543      MOVE.W      D2,D5       *REMOVE
000021EA                          2544  MATCH_CC_T_32
000021EA  3A02                    2545      MOVE.W      D2,D5       *REMOVE
000021EC                          2546  MATCH_CC_F_8
000021EC  3A02                    2547      MOVE.W      D2,D5       *REMOVE
000021EE                          2548  MATCH_CC_F_16
000021EE  3A02                    2549      MOVE.W      D2,D5       *REMOVE
000021F0                          2550  MATCH_CC_F_32
000021F0  3A02                    2551      MOVE.W      D2,D5       *REMOVE
000021F2                          2552  MATCH_CC_HI_8
000021F2                          2553      ** print opcode **
000021F2  43F8 00A1               2554      LEA         pr_BCC_HI,A1
000021F6  61C2                    2555      BSR         PrintString
000021F8                          2556  
000021F8  61C8                    2557      BSR         PrintSizeBYTE
000021FA  43F8 0000               2558      LEA         pr_space,A1
000021FE  61BA                    2559      BSR         PrintString
00002200                          2560  
00002200                          2561      ** print address **
00002200  6186                    2562      BSR         Get_BCC_Displacement_8bit
00002202  6196                    2563      BSR         Get_Current_Address
00002204  619C                    2564      BSR         Get_BCC_Destination_Address
00002206  2207                    2565      MOVE.L      D7,D1
00002208  619C                    2566      BSR         PrintHex
0000220A                          2567  
0000220A  6000 EEE6               2568      BRA         opdec_return
0000220E                          2569  
0000220E                          2570  MATCH_CC_HI_16
0000220E                          2571      ** print opcode **
0000220E  43F8 00A1               2572      LEA         pr_BCC_HI,A1
00002212  61A6                    2573      BSR         PrintString
00002214                          2574  
00002214  61B8                    2575      BSR         PrintSizeWORD
00002216  43F8 0000               2576      LEA         pr_space,A1
0000221A  619E                    2577      BSR         PrintString
0000221C                          2578  
0000221C                          2579      ** print address **
0000221C  6100 FF70               2580      BSR         Get_BCC_Displacement_16bit
00002220  6100 FF78               2581      BSR         Get_Current_Address
00002224  6100 FF7C               2582      BSR         Get_BCC_Destination_Address
00002228  2207                    2583      MOVE.L      D7,D1
0000222A  6100 FF7A               2584      BSR         PrintHex
0000222E                          2585  
0000222E  6000 EEC2               2586      BRA         opdec_return
00002232                          2587  MATCH_CC_HI_32
00002232                          2588      ** print opcode **
00002232  43F8 00A1               2589      LEA         pr_BCC_HI,A1
00002236  6182                    2590      BSR         PrintString
00002238                          2591  
00002238  61A0                    2592      BSR         PrintSizeLONG
0000223A  43F8 0000               2593      LEA         pr_space,A1
0000223E  6100 FF7A               2594      BSR         PrintString
00002242                          2595  
00002242                          2596      ** print address **
00002242  6100 FF50               2597      BSR         Get_BCC_Displacement_32bit
00002246  6100 FF52               2598      BSR         Get_Current_Address
0000224A  6100 FF56               2599      BSR         Get_BCC_Destination_Address
0000224E  2207                    2600      MOVE.L      D7,D1
00002250  6100 FF54               2601      BSR         PrintHex
00002254                          2602  
00002254  6000 EE9C               2603      BRA         opdec_return
00002258                          2604  MATCH_CC_LS_8
00002258                          2605      ** print opcode **
00002258  43F8 00A9               2606      LEA         pr_BCC_LS,A1
0000225C  6100 FF5C               2607      BSR         PrintString
00002260                          2608  
00002260  6100 FF60               2609      BSR         PrintSizeBYTE
00002264  43F8 0000               2610      LEA         pr_space,A1
00002268  6100 FF50               2611      BSR         PrintString
0000226C                          2612  
0000226C                          2613      ** print address **
0000226C  6100 FF1A               2614      BSR         Get_BCC_Displacement_8bit
00002270  6100 FF28               2615      BSR         Get_Current_Address
00002274  6100 FF2C               2616      BSR         Get_BCC_Destination_Address
00002278  2207                    2617      MOVE.L      D7,D1
0000227A  6100 FF2A               2618      BSR         PrintHex
0000227E                          2619  
0000227E  6000 EE72               2620      BRA         opdec_return
00002282                          2621  MATCH_CC_LS_16
00002282                          2622      ** print opcode **
00002282  43F8 00A9               2623      LEA         pr_BCC_LS,A1
00002286  6100 FF32               2624      BSR         PrintString
0000228A                          2625  
0000228A  6100 FF42               2626      BSR         PrintSizeWORD
0000228E  43F8 0000               2627      LEA         pr_space,A1
00002292  6100 FF26               2628      BSR         PrintString
00002296                          2629  
00002296                          2630      ** print address **
00002296  6100 FEF6               2631      BSR         Get_BCC_Displacement_16bit
0000229A  6100 FEFE               2632      BSR         Get_Current_Address
0000229E  6100 FF02               2633      BSR         Get_BCC_Destination_Address
000022A2  2207                    2634      MOVE.L      D7,D1
000022A4  6100 FF00               2635      BSR         PrintHex
000022A8                          2636  
000022A8  6000 EE48               2637      BRA         opdec_return
000022AC                          2638  
000022AC                          2639  MATCH_CC_LS_32
000022AC                          2640      ** print opcode **
000022AC  43F8 00A9               2641      LEA         pr_BCC_LS,A1
000022B0  6100 FF08               2642      BSR         PrintString
000022B4                          2643  
000022B4  6100 FF24               2644      BSR         PrintSizeLONG
000022B8  43F8 0000               2645      LEA         pr_space,A1
000022BC  6100 FEFC               2646      BSR         PrintString
000022C0                          2647  
000022C0                          2648      ** print address **
000022C0  6100 FED2               2649      BSR         Get_BCC_Displacement_32bit
000022C4  6100 FED4               2650      BSR         Get_Current_Address
000022C8  6100 FED8               2651      BSR         Get_BCC_Destination_Address
000022CC  2207                    2652      MOVE.L      D7,D1
000022CE  6100 FED6               2653      BSR         PrintHex
000022D2                          2654  
000022D2  6000 EE1E               2655      BRA         opdec_return
000022D6                          2656  MATCH_CC_CC_8
000022D6                          2657  
000022D6                          2658      ** print opcode **
000022D6  43F8 008D               2659      LEA         pr_BCC_CC,A1
000022DA  6100 FEDE               2660      BSR         PrintString
000022DE                          2661  
000022DE  6100 FEE2               2662      BSR         PrintSizeBYTE
000022E2  43F8 0000               2663      LEA         pr_space,A1
000022E6  6100 FED2               2664      BSR         PrintString
000022EA                          2665  
000022EA                          2666      ** print address **
000022EA  6100 FE9C               2667      BSR         Get_BCC_Displacement_8bit
000022EE  6100 FEAA               2668      BSR         Get_Current_Address
000022F2  6100 FEAE               2669      BSR         Get_BCC_Destination_Address
000022F6  2207                    2670      MOVE.L      D7,D1
000022F8  6100 FEAC               2671      BSR         PrintHex
000022FC                          2672  
000022FC  6000 EDF4               2673      BRA         opdec_return
00002300                          2674  
00002300                          2675  MATCH_CC_CC_16
00002300                          2676      ** print opcode **
00002300  43F8 008D               2677      LEA         pr_BCC_CC,A1
00002304  6100 FEB4               2678      BSR         PrintString
00002308                          2679  
00002308  6100 FEC4               2680      BSR         PrintSizeWORD
0000230C  43F8 0000               2681      LEA         pr_space,A1
00002310  6100 FEA8               2682      BSR         PrintString
00002314                          2683  
00002314                          2684      ** print address **
00002314  6100 FE78               2685      BSR         Get_BCC_Displacement_16bit
00002318  6100 FE80               2686      BSR         Get_Current_Address
0000231C  6100 FE84               2687      BSR         Get_BCC_Destination_Address
00002320  2207                    2688      MOVE.L      D7,D1
00002322  6100 FE82               2689      BSR         PrintHex
00002326                          2690  
00002326  6000 EDCA               2691      BRA         opdec_return
0000232A                          2692  MATCH_CC_CC_32
0000232A                          2693      ** print opcode **
0000232A  43F8 008D               2694      LEA         pr_BCC_CC,A1
0000232E  6100 FE8A               2695      BSR         PrintString
00002332                          2696  
00002332  6100 FEA6               2697      BSR         PrintSizeLONG
00002336  43F8 0000               2698      LEA         pr_space,A1
0000233A  6100 FE7E               2699      BSR         PrintString
0000233E                          2700  
0000233E                          2701      ** print address **
0000233E  6100 FE54               2702      BSR         Get_BCC_Displacement_32bit
00002342  6100 FE56               2703      BSR         Get_Current_Address
00002346  6100 FE5A               2704      BSR         Get_BCC_Destination_Address
0000234A  2207                    2705      MOVE.L      D7,D1
0000234C  6100 FE58               2706      BSR         PrintHex
00002350                          2707  
00002350  6000 EDA0               2708      BRA         opdec_return
00002354                          2709  MATCH_CC_CS_8
00002354                          2710      ** print opcode **
00002354  43F8 0091               2711      LEA         pr_BCC_CS,A1
00002358  6100 FE60               2712      BSR         PrintString
0000235C                          2713  
0000235C  6100 FE64               2714      BSR         PrintSizeBYTE
00002360  43F8 0000               2715      LEA         pr_space,A1
00002364  6100 FE54               2716      BSR         PrintString
00002368                          2717  
00002368                          2718      ** print address **
00002368  6100 FE1E               2719      BSR         Get_BCC_Displacement_8bit
0000236C  6100 FE2C               2720      BSR         Get_Current_Address
00002370  6100 FE30               2721      BSR         Get_BCC_Destination_Address
00002374  2207                    2722      MOVE.L      D7,D1
00002376  6100 FE2E               2723      BSR         PrintHex
0000237A                          2724  
0000237A  6000 ED76               2725      BRA         opdec_return
0000237E                          2726  MATCH_CC_CS_16
0000237E                          2727      ** print opcode **
0000237E  43F8 0091               2728      LEA         pr_BCC_CS,A1
00002382  6100 FE36               2729      BSR         PrintString
00002386                          2730  
00002386  6100 FE46               2731      BSR         PrintSizeWORD
0000238A  43F8 0000               2732      LEA         pr_space,A1
0000238E  6100 FE2A               2733      BSR         PrintString
00002392                          2734  
00002392                          2735      ** print address **
00002392  6100 FDFA               2736      BSR         Get_BCC_Displacement_16bit
00002396  6100 FE02               2737      BSR         Get_Current_Address
0000239A  6100 FE06               2738      BSR         Get_BCC_Destination_Address
0000239E  2207                    2739      MOVE.L      D7,D1
000023A0  6100 FE04               2740      BSR         PrintHex
000023A4                          2741  
000023A4  6000 ED4C               2742      BRA         opdec_return
000023A8                          2743  MATCH_CC_CS_32
000023A8                          2744      ** print opcode **
000023A8  43F8 0091               2745      LEA         pr_BCC_CS,A1
000023AC  6100 FE0C               2746      BSR         PrintString
000023B0                          2747  
000023B0  6100 FE28               2748      BSR         PrintSizeLONG
000023B4  43F8 0000               2749      LEA         pr_space,A1
000023B8  6100 FE00               2750      BSR         PrintString
000023BC                          2751  
000023BC                          2752      ** print address **
000023BC  6100 FDD6               2753      BSR         Get_BCC_Displacement_32bit
000023C0  6100 FDD8               2754      BSR         Get_Current_Address
000023C4  6100 FDDC               2755      BSR         Get_BCC_Destination_Address
000023C8  2207                    2756      MOVE.L      D7,D1
000023CA  6100 FDDA               2757      BSR         PrintHex
000023CE                          2758  
000023CE  6000 ED22               2759      BRA         opdec_return
000023D2                          2760  MATCH_CC_NE_8
000023D2                          2761      ** print opcode **
000023D2  43F8 00B5               2762      LEA         pr_BCC_NE,A1
000023D6  6100 FDE2               2763      BSR         PrintString
000023DA                          2764  
000023DA  6100 FDE6               2765      BSR         PrintSizeBYTE
000023DE  43F8 0000               2766      LEA         pr_space,A1
000023E2  6100 FDD6               2767      BSR         PrintString
000023E6                          2768  
000023E6                          2769      ** print address **
000023E6  6100 FDA0               2770      BSR         Get_BCC_Displacement_8bit
000023EA  6100 FDAE               2771      BSR         Get_Current_Address
000023EE  6100 FDB2               2772      BSR         Get_BCC_Destination_Address
000023F2  2207                    2773      MOVE.L      D7,D1
000023F4  6100 FDB0               2774      BSR         PrintHex
000023F8                          2775  
000023F8  6000 ECF8               2776      BRA         opdec_return
000023FC                          2777  MATCH_CC_NE_16
000023FC                          2778      ** print opcode **
000023FC  43F8 00B5               2779      LEA         pr_BCC_NE,A1
00002400  6100 FDB8               2780      BSR         PrintString
00002404                          2781  
00002404  6100 FDC8               2782      BSR         PrintSizeWORD
00002408  43F8 0000               2783      LEA         pr_space,A1
0000240C  6100 FDAC               2784      BSR         PrintString
00002410                          2785  
00002410                          2786      ** print address **
00002410  6100 FD7C               2787      BSR         Get_BCC_Displacement_16bit
00002414  6100 FD84               2788      BSR         Get_Current_Address
00002418  6100 FD88               2789      BSR         Get_BCC_Destination_Address
0000241C  2207                    2790      MOVE.L      D7,D1
0000241E  6100 FD86               2791      BSR         PrintHex
00002422                          2792  
00002422  6000 ECCE               2793      BRA         opdec_return
00002426                          2794  MATCH_CC_NE_32
00002426                          2795      ** print opcode **
00002426  43F8 00B5               2796      LEA         pr_BCC_NE,A1
0000242A  6100 FD8E               2797      BSR         PrintString
0000242E                          2798  
0000242E  6100 FDAA               2799      BSR         PrintSizeLONG
00002432  43F8 0000               2800      LEA         pr_space,A1
00002436  6100 FD82               2801      BSR         PrintString
0000243A                          2802  
0000243A                          2803      ** print address **
0000243A  6100 FD58               2804      BSR         Get_BCC_Displacement_32bit
0000243E  6100 FD5A               2805      BSR         Get_Current_Address
00002442  6100 FD5E               2806      BSR         Get_BCC_Destination_Address
00002446  2207                    2807      MOVE.L      D7,D1
00002448  6100 FD5C               2808      BSR         PrintHex
0000244C                          2809  
0000244C  6000 ECA4               2810      BRA         opdec_return
00002450                          2811  MATCH_CC_EQ_8
00002450                          2812      ** print opcode **
00002450  43F8 0095               2813      LEA         pr_BCC_EQ,A1
00002454  6100 FD64               2814      BSR         PrintString
00002458                          2815  
00002458  6100 FD68               2816      BSR         PrintSizeBYTE
0000245C  43F8 0000               2817      LEA         pr_space,A1
00002460  6100 FD58               2818      BSR         PrintString
00002464                          2819  
00002464                          2820      ** print address **
00002464  6100 FD22               2821      BSR         Get_BCC_Displacement_8bit
00002468  6100 FD30               2822      BSR         Get_Current_Address
0000246C  6100 FD34               2823      BSR         Get_BCC_Destination_Address
00002470  2207                    2824      MOVE.L      D7,D1
00002472  6100 FD32               2825      BSR         PrintHex
00002476                          2826  
00002476  6000 EC7A               2827      BRA         opdec_return
0000247A                          2828  MATCH_CC_EQ_16
0000247A                          2829      ** print opcode **
0000247A  43F8 0095               2830      LEA         pr_BCC_EQ,A1
0000247E  6100 FD3A               2831      BSR         PrintString
00002482                          2832  
00002482  6100 FD4A               2833      BSR         PrintSizeWORD
00002486  43F8 0000               2834      LEA         pr_space,A1
0000248A  6100 FD2E               2835      BSR         PrintString
0000248E                          2836  
0000248E                          2837      ** print address **
0000248E  6100 FCFE               2838      BSR         Get_BCC_Displacement_16bit
00002492  6100 FD06               2839      BSR         Get_Current_Address
00002496  6100 FD0A               2840      BSR         Get_BCC_Destination_Address
0000249A  2207                    2841      MOVE.L      D7,D1
0000249C  6100 FD08               2842      BSR         PrintHex
000024A0                          2843  
000024A0  6000 EC50               2844      BRA         opdec_return
000024A4                          2845  MATCH_CC_EQ_32
000024A4                          2846      ** print opcode **
000024A4  43F8 0095               2847      LEA         pr_BCC_EQ,A1
000024A8  6100 FD10               2848      BSR         PrintString
000024AC                          2849  
000024AC  6100 FD2C               2850      BSR         PrintSizeLONG
000024B0  43F8 0000               2851      LEA         pr_space,A1
000024B4  6100 FD04               2852      BSR         PrintString
000024B8                          2853  
000024B8                          2854      ** print address **
000024B8  6100 FCDA               2855      BSR         Get_BCC_Displacement_32bit
000024BC  6100 FCDC               2856      BSR         Get_Current_Address
000024C0  6100 FCE0               2857      BSR         Get_BCC_Destination_Address
000024C4  2207                    2858      MOVE.L      D7,D1
000024C6  6100 FCDE               2859      BSR         PrintHex
000024CA                          2860  
000024CA  6000 EC26               2861      BRA         opdec_return
000024CE                          2862  MATCH_CC_VC_8
000024CE                          2863      ** print opcode **
000024CE  43F8 00BD               2864      LEA         pr_BCC_VC,A1
000024D2  6100 FCE6               2865      BSR         PrintString
000024D6                          2866  
000024D6  6100 FCEA               2867      BSR         PrintSizeBYTE
000024DA  43F8 0000               2868      LEA         pr_space,A1
000024DE  6100 FCDA               2869      BSR         PrintString
000024E2                          2870  
000024E2                          2871      ** print address **
000024E2  6100 FCA4               2872      BSR         Get_BCC_Displacement_8bit
000024E6  6100 FCB2               2873      BSR         Get_Current_Address
000024EA  6100 FCB6               2874      BSR         Get_BCC_Destination_Address
000024EE  2207                    2875      MOVE.L      D7,D1
000024F0  6100 FCB4               2876      BSR         PrintHex
000024F4                          2877  
000024F4  6000 EBFC               2878      BRA         opdec_return
000024F8                          2879  MATCH_CC_VC_16
000024F8                          2880      ** print opcode **
000024F8  43F8 00BD               2881      LEA         pr_BCC_VC,A1
000024FC  6100 FCBC               2882      BSR         PrintString
00002500                          2883  
00002500  6100 FCCC               2884      BSR         PrintSizeWORD
00002504  43F8 0000               2885      LEA         pr_space,A1
00002508  6100 FCB0               2886      BSR         PrintString
0000250C                          2887  
0000250C                          2888      ** print address **
0000250C  6100 FC80               2889      BSR         Get_BCC_Displacement_16bit
00002510  6100 FC88               2890      BSR         Get_Current_Address
00002514  6100 FC8C               2891      BSR         Get_BCC_Destination_Address
00002518  2207                    2892      MOVE.L      D7,D1
0000251A  6100 FC8A               2893      BSR         PrintHex
0000251E                          2894  
0000251E  6000 EBD2               2895      BRA         opdec_return
00002522                          2896  MATCH_CC_VC_32
00002522                          2897      ** print opcode **
00002522  43F8 00BD               2898      LEA         pr_BCC_VC,A1
00002526  6100 FC92               2899      BSR         PrintString
0000252A                          2900  
0000252A  6100 FCAE               2901      BSR         PrintSizeLONG
0000252E  43F8 0000               2902      LEA         pr_space,A1
00002532  6100 FC86               2903      BSR         PrintString
00002536                          2904  
00002536                          2905      ** print address **
00002536  6100 FC5C               2906      BSR         Get_BCC_Displacement_32bit
0000253A  6100 FC5E               2907      BSR         Get_Current_Address
0000253E  6100 FC62               2908      BSR         Get_BCC_Destination_Address
00002542  2207                    2909      MOVE.L      D7,D1
00002544  6100 FC60               2910      BSR         PrintHex
00002548                          2911  
00002548  6000 EBA8               2912      BRA         opdec_return
0000254C                          2913  MATCH_CC_VS_8
0000254C                          2914      ** print opcode **
0000254C  43F8 00C1               2915      LEA         pr_BCC_VS,A1
00002550  6100 FC68               2916      BSR         PrintString
00002554                          2917  
00002554  6100 FC6C               2918      BSR         PrintSizeBYTE
00002558  43F8 0000               2919      LEA         pr_space,A1
0000255C  6100 FC5C               2920      BSR         PrintString
00002560                          2921  
00002560                          2922      ** print address **
00002560  6100 FC26               2923      BSR         Get_BCC_Displacement_8bit
00002564  6100 FC34               2924      BSR         Get_Current_Address
00002568  6100 FC38               2925      BSR         Get_BCC_Destination_Address
0000256C  2207                    2926      MOVE.L      D7,D1
0000256E  6100 FC36               2927      BSR         PrintHex
00002572                          2928  
00002572  6000 EB7E               2929      BRA         opdec_return
00002576                          2930  MATCH_CC_VS_16
00002576                          2931      ** print opcode **
00002576  43F8 00C1               2932      LEA         pr_BCC_VS,A1
0000257A  6100 FC3E               2933      BSR         PrintString
0000257E                          2934  
0000257E  6100 FC4E               2935      BSR         PrintSizeWORD
00002582  43F8 0000               2936      LEA         pr_space,A1
00002586  6100 FC32               2937      BSR         PrintString
0000258A                          2938  
0000258A                          2939      ** print address **
0000258A  6100 FC02               2940      BSR         Get_BCC_Displacement_16bit
0000258E  6100 FC0A               2941      BSR         Get_Current_Address
00002592  6100 FC0E               2942      BSR         Get_BCC_Destination_Address
00002596  2207                    2943      MOVE.L      D7,D1
00002598  6100 FC0C               2944      BSR         PrintHex
0000259C                          2945  
0000259C  6000 EB54               2946      BRA         opdec_return
000025A0                          2947  MATCH_CC_VS_32
000025A0                          2948      ** print opcode **
000025A0  43F8 00C1               2949      LEA         pr_BCC_VS,A1
000025A4  6100 FC14               2950      BSR         PrintString
000025A8                          2951  
000025A8  6100 FC30               2952      BSR         PrintSizeLONG
000025AC  43F8 0000               2953      LEA         pr_space,A1
000025B0  6100 FC08               2954      BSR         PrintString
000025B4                          2955  
000025B4                          2956      ** print address **
000025B4  6100 FBDE               2957      BSR         Get_BCC_Displacement_32bit
000025B8  6100 FBE0               2958      BSR         Get_Current_Address
000025BC  6100 FBE4               2959      BSR         Get_BCC_Destination_Address
000025C0  2207                    2960      MOVE.L      D7,D1
000025C2  6100 FBE2               2961      BSR         PrintHex
000025C6                          2962  
000025C6  6000 EB2A               2963      BRA         opdec_return
000025CA                          2964  MATCH_CC_PL_8
000025CA                          2965      ** print opcode **
000025CA  43F8 00B9               2966      LEA         pr_BCC_PL,A1
000025CE  6100 FBEA               2967      BSR         PrintString
000025D2                          2968  
000025D2  6100 FBEE               2969      BSR         PrintSizeBYTE
000025D6  43F8 0000               2970      LEA         pr_space,A1
000025DA  6100 FBDE               2971      BSR         PrintString
000025DE                          2972  
000025DE                          2973      ** print address **
000025DE  6100 FBA8               2974      BSR         Get_BCC_Displacement_8bit
000025E2  6100 FBB6               2975      BSR         Get_Current_Address
000025E6  6100 FBBA               2976      BSR         Get_BCC_Destination_Address
000025EA  2207                    2977      MOVE.L      D7,D1
000025EC  6100 FBB8               2978      BSR         PrintHex
000025F0                          2979  
000025F0  6000 EB00               2980      BRA         opdec_return
000025F4                          2981  MATCH_CC_PL_16
000025F4                          2982      ** print opcode **
000025F4  43F8 00B9               2983      LEA         pr_BCC_PL,A1
000025F8  6100 FBC0               2984      BSR         PrintString
000025FC                          2985  
000025FC  6100 FBD0               2986      BSR         PrintSizeWORD
00002600  43F8 0000               2987      LEA         pr_space,A1
00002604  6100 FBB4               2988      BSR         PrintString
00002608                          2989  
00002608                          2990      ** print address **
00002608  6100 FB84               2991      BSR         Get_BCC_Displacement_16bit
0000260C  6100 FB8C               2992      BSR         Get_Current_Address
00002610  6100 FB90               2993      BSR         Get_BCC_Destination_Address
00002614  2207                    2994      MOVE.L      D7,D1
00002616  6100 FB8E               2995      BSR         PrintHex
0000261A                          2996  
0000261A  6000 EAD6               2997      BRA         opdec_return
0000261E                          2998  MATCH_CC_PL_32
0000261E                          2999      ** print opcode **
0000261E  43F8 00B9               3000      LEA         pr_BCC_PL,A1
00002622  6100 FB96               3001      BSR         PrintString
00002626                          3002  
00002626  6100 FBB2               3003      BSR         PrintSizeLONG
0000262A  43F8 0000               3004      LEA         pr_space,A1
0000262E  6100 FB8A               3005      BSR         PrintString
00002632                          3006  
00002632                          3007      ** print address **
00002632  6100 FB60               3008      BSR         Get_BCC_Displacement_32bit
00002636  6100 FB62               3009      BSR         Get_Current_Address
0000263A  6100 FB66               3010      BSR         Get_BCC_Destination_Address
0000263E  2207                    3011      MOVE.L      D7,D1
00002640  6100 FB64               3012      BSR         PrintHex
00002644                          3013  
00002644  6000 EAAC               3014      BRA         opdec_return
00002648                          3015  MATCH_CC_MI_8
00002648                          3016      ** print opcode **
00002648  43F8 00B1               3017      LEA         pr_BCC_MI,A1
0000264C  6100 FB6C               3018      BSR         PrintString
00002650                          3019  
00002650  6100 FB70               3020      BSR         PrintSizeBYTE
00002654  43F8 0000               3021      LEA         pr_space,A1
00002658  6100 FB60               3022      BSR         PrintString
0000265C                          3023  
0000265C                          3024      ** print address **
0000265C  6100 FB2A               3025      BSR         Get_BCC_Displacement_8bit
00002660  6100 FB38               3026      BSR         Get_Current_Address
00002664  6100 FB3C               3027      BSR         Get_BCC_Destination_Address
00002668  2207                    3028      MOVE.L      D7,D1
0000266A  6100 FB3A               3029      BSR         PrintHex
0000266E                          3030  
0000266E  6000 EA82               3031      BRA         opdec_return
00002672                          3032  MATCH_CC_MI_16
00002672                          3033      ** print opcode **
00002672  43F8 00B1               3034      LEA         pr_BCC_MI,A1
00002676  6100 FB42               3035      BSR         PrintString
0000267A                          3036  
0000267A  6100 FB52               3037      BSR         PrintSizeWORD
0000267E  43F8 0000               3038      LEA         pr_space,A1
00002682  6100 FB36               3039      BSR         PrintString
00002686                          3040  
00002686                          3041      ** print address **
00002686  6100 FB06               3042      BSR         Get_BCC_Displacement_16bit
0000268A  6100 FB0E               3043      BSR         Get_Current_Address
0000268E  6100 FB12               3044      BSR         Get_BCC_Destination_Address
00002692  2207                    3045      MOVE.L      D7,D1
00002694  6100 FB10               3046      BSR         PrintHex
00002698                          3047  
00002698  6000 EA58               3048      BRA         opdec_return
0000269C                          3049  MATCH_CC_MI_32
0000269C                          3050      ** print opcode **
0000269C  43F8 00B1               3051      LEA         pr_BCC_MI,A1
000026A0  6100 FB18               3052      BSR         PrintString
000026A4                          3053  
000026A4  6100 FB34               3054      BSR         PrintSizeLONG
000026A8  43F8 0000               3055      LEA         pr_space,A1
000026AC  6100 FB0C               3056      BSR         PrintString
000026B0                          3057  
000026B0                          3058      ** print address **
000026B0  6100 FAE2               3059      BSR         Get_BCC_Displacement_32bit
000026B4  6100 FAE4               3060      BSR         Get_Current_Address
000026B8  6100 FAE8               3061      BSR         Get_BCC_Destination_Address
000026BC  2207                    3062      MOVE.L      D7,D1
000026BE  6100 FAE6               3063      BSR         PrintHex
000026C2                          3064  
000026C2  6000 EA2E               3065      BRA         opdec_return
000026C6                          3066  MATCH_CC_GE_8
000026C6                          3067      ** print opcode **
000026C6  43F8 0099               3068      LEA         pr_BCC_GE,A1
000026CA  6100 FAEE               3069      BSR         PrintString
000026CE                          3070  
000026CE  6100 FAF2               3071      BSR         PrintSizeBYTE
000026D2  43F8 0000               3072      LEA         pr_space,A1
000026D6  6100 FAE2               3073      BSR         PrintString
000026DA                          3074  
000026DA                          3075      ** print address **
000026DA  6100 FAAC               3076      BSR         Get_BCC_Displacement_8bit
000026DE  6100 FABA               3077      BSR         Get_Current_Address
000026E2  6100 FABE               3078      BSR         Get_BCC_Destination_Address
000026E6  2207                    3079      MOVE.L      D7,D1
000026E8  6100 FABC               3080      BSR         PrintHex
000026EC                          3081  
000026EC  6000 EA04               3082      BRA         opdec_return
000026F0                          3083  MATCH_CC_GE_16
000026F0                          3084      ** print opcode **
000026F0  43F8 0099               3085      LEA         pr_BCC_GE,A1
000026F4  6100 FAC4               3086      BSR         PrintString
000026F8                          3087  
000026F8  6100 FAD4               3088      BSR         PrintSizeWORD
000026FC  43F8 0000               3089      LEA         pr_space,A1
00002700  6100 FAB8               3090      BSR         PrintString
00002704                          3091  
00002704                          3092      ** print address **
00002704  6100 FA88               3093      BSR         Get_BCC_Displacement_16bit
00002708  6100 FA90               3094      BSR         Get_Current_Address
0000270C  6100 FA94               3095      BSR         Get_BCC_Destination_Address
00002710  2207                    3096      MOVE.L      D7,D1
00002712  6100 FA92               3097      BSR         PrintHex
00002716                          3098  
00002716  6000 E9DA               3099      BRA         opdec_return
0000271A                          3100  MATCH_CC_GE_32
0000271A                          3101      ** print opcode **
0000271A  43F8 0099               3102      LEA         pr_BCC_GE,A1
0000271E  6100 FA9A               3103      BSR         PrintString
00002722                          3104  
00002722  6100 FAB6               3105      BSR         PrintSizeLONG
00002726  43F8 0000               3106      LEA         pr_space,A1
0000272A  6100 FA8E               3107      BSR         PrintString
0000272E                          3108  
0000272E                          3109      ** print address **
0000272E  6100 FA64               3110      BSR         Get_BCC_Displacement_32bit
00002732  6100 FA66               3111      BSR         Get_Current_Address
00002736  6100 FA6A               3112      BSR         Get_BCC_Destination_Address
0000273A  2207                    3113      MOVE.L      D7,D1
0000273C  6100 FA68               3114      BSR         PrintHex
00002740                          3115  
00002740  6000 E9B0               3116      BRA         opdec_return
00002744                          3117  MATCH_CC_LT_8
00002744                          3118      ** print opcode **
00002744  43F8 00AD               3119      LEA         pr_BCC_LT,A1
00002748  6100 FA70               3120      BSR         PrintString
0000274C                          3121  
0000274C  6100 FA74               3122      BSR         PrintSizeBYTE
00002750  43F8 0000               3123      LEA         pr_space,A1
00002754  6100 FA64               3124      BSR         PrintString
00002758                          3125  
00002758                          3126      ** print address **
00002758  6100 FA2E               3127      BSR         Get_BCC_Displacement_8bit
0000275C  6100 FA3C               3128      BSR         Get_Current_Address
00002760  6100 FA40               3129      BSR         Get_BCC_Destination_Address
00002764  2207                    3130      MOVE.L      D7,D1
00002766  6100 FA3E               3131      BSR         PrintHex
0000276A                          3132  
0000276A  6000 E986               3133      BRA         opdec_return
0000276E                          3134  MATCH_CC_LT_16
0000276E                          3135      ** print opcode **
0000276E  43F8 00AD               3136      LEA         pr_BCC_LT,A1
00002772  6100 FA46               3137      BSR         PrintString
00002776                          3138  
00002776  6100 FA56               3139      BSR         PrintSizeWORD
0000277A  43F8 0000               3140      LEA         pr_space,A1
0000277E  6100 FA3A               3141      BSR         PrintString
00002782                          3142  
00002782                          3143      ** print address **
00002782  6100 FA0A               3144      BSR         Get_BCC_Displacement_16bit
00002786  6100 FA12               3145      BSR         Get_Current_Address
0000278A  6100 FA16               3146      BSR         Get_BCC_Destination_Address
0000278E  2207                    3147      MOVE.L      D7,D1
00002790  6100 FA14               3148      BSR         PrintHex
00002794                          3149  
00002794  6000 E95C               3150      BRA         opdec_return
00002798                          3151  MATCH_CC_LT_32
00002798                          3152      ** print opcode **
00002798  43F8 00AD               3153      LEA         pr_BCC_LT,A1
0000279C  6100 FA1C               3154      BSR         PrintString
000027A0                          3155  
000027A0  6100 FA38               3156      BSR         PrintSizeLONG
000027A4  43F8 0000               3157      LEA         pr_space,A1
000027A8  6100 FA10               3158      BSR         PrintString
000027AC                          3159  
000027AC                          3160      ** print address **
000027AC  6100 F9E6               3161      BSR         Get_BCC_Displacement_32bit
000027B0  6100 F9E8               3162      BSR         Get_Current_Address
000027B4  6100 F9EC               3163      BSR         Get_BCC_Destination_Address
000027B8  2207                    3164      MOVE.L      D7,D1
000027BA  6100 F9EA               3165      BSR         PrintHex
000027BE                          3166  
000027BE  6000 E932               3167      BRA         opdec_return
000027C2                          3168  MATCH_CC_GT_8
000027C2                          3169      ** print opcode **
000027C2  43F8 009D               3170      LEA         pr_BCC_GT,A1
000027C6  6100 F9F2               3171      BSR         PrintString
000027CA                          3172  
000027CA  6100 F9F6               3173      BSR         PrintSizeBYTE
000027CE  43F8 0000               3174      LEA         pr_space,A1
000027D2  6100 F9E6               3175      BSR         PrintString
000027D6                          3176  
000027D6                          3177      ** print address **
000027D6  6100 F9B0               3178      BSR         Get_BCC_Displacement_8bit
000027DA  6100 F9BE               3179      BSR         Get_Current_Address
000027DE  6100 F9C2               3180      BSR         Get_BCC_Destination_Address
000027E2  2207                    3181      MOVE.L      D7,D1
000027E4  6100 F9C0               3182      BSR         PrintHex
000027E8                          3183  
000027E8  6000 E908               3184      BRA         opdec_return
000027EC                          3185  MATCH_CC_GT_16
000027EC                          3186      ** print opcode **
000027EC  43F8 009D               3187      LEA         pr_BCC_GT,A1
000027F0  6100 F9C8               3188      BSR         PrintString
000027F4                          3189  
000027F4  6100 F9D8               3190      BSR         PrintSizeWORD
000027F8  43F8 0000               3191      LEA         pr_space,A1
000027FC  6100 F9BC               3192      BSR         PrintString
00002800                          3193  
00002800                          3194      ** print address **
00002800  6100 F98C               3195      BSR         Get_BCC_Displacement_16bit
00002804  6100 F994               3196      BSR         Get_Current_Address
00002808  6100 F998               3197      BSR         Get_BCC_Destination_Address
0000280C  2207                    3198      MOVE.L      D7,D1
0000280E  6100 F996               3199      BSR         PrintHex
00002812                          3200  
00002812  6000 E8DE               3201      BRA         opdec_return
00002816                          3202  MATCH_CC_GT_32
00002816                          3203      ** print opcode **
00002816  43F8 009D               3204      LEA         pr_BCC_GT,A1
0000281A  6100 F99E               3205      BSR         PrintString
0000281E                          3206  
0000281E  6100 F9BA               3207      BSR         PrintSizeLONG
00002822  43F8 0000               3208      LEA         pr_space,A1
00002826  6100 F992               3209      BSR         PrintString
0000282A                          3210  
0000282A                          3211      ** print address **
0000282A  6100 F968               3212      BSR         Get_BCC_Displacement_32bit
0000282E  6100 F96A               3213      BSR         Get_Current_Address
00002832  6100 F96E               3214      BSR         Get_BCC_Destination_Address
00002836  2207                    3215      MOVE.L      D7,D1
00002838  6100 F96C               3216      BSR         PrintHex
0000283C                          3217  
0000283C  6000 E8B4               3218      BRA         opdec_return
00002840                          3219  MATCH_CC_LE_8
00002840                          3220      ** print opcode **
00002840  43F8 00A5               3221      LEA         pr_BCC_LE,A1
00002844  6100 F974               3222      BSR         PrintString
00002848                          3223  
00002848  6100 F978               3224      BSR         PrintSizeBYTE
0000284C  43F8 0000               3225      LEA         pr_space,A1
00002850  6100 F968               3226      BSR         PrintString
00002854                          3227  
00002854                          3228      ** print address **
00002854  6100 F932               3229      BSR         Get_BCC_Displacement_8bit
00002858  6100 F940               3230      BSR         Get_Current_Address
0000285C  6100 F944               3231      BSR         Get_BCC_Destination_Address
00002860  2207                    3232      MOVE.L      D7,D1
00002862  6100 F942               3233      BSR         PrintHex
00002866                          3234  
00002866  6000 E88A               3235      BRA         opdec_return
0000286A                          3236  MATCH_CC_LE_16
0000286A                          3237      ** print opcode **
0000286A  43F8 00A5               3238      LEA         pr_BCC_LE,A1
0000286E  6100 F94A               3239      BSR         PrintString
00002872                          3240  
00002872  6100 F95A               3241      BSR         PrintSizeWORD
00002876  43F8 0000               3242      LEA         pr_space,A1
0000287A  6100 F93E               3243      BSR         PrintString
0000287E                          3244  
0000287E                          3245      ** print address **
0000287E  6100 F90E               3246      BSR         Get_BCC_Displacement_16bit
00002882  6100 F916               3247      BSR         Get_Current_Address
00002886  6100 F91A               3248      BSR         Get_BCC_Destination_Address
0000288A  2207                    3249      MOVE.L      D7,D1
0000288C  6100 F918               3250      BSR         PrintHex
00002890                          3251  
00002890  6000 E860               3252      BRA         opdec_return
00002894                          3253  MATCH_CC_LE_32
00002894                          3254      ** print opcode **
00002894  43F8 00A5               3255      LEA         pr_BCC_LE,A1
00002898  6100 F920               3256      BSR         PrintString
0000289C                          3257  
0000289C  6100 F93C               3258      BSR         PrintSizeLONG
000028A0  43F8 0000               3259      LEA         pr_space,A1
000028A4  6100 F914               3260      BSR         PrintString
000028A8                          3261  
000028A8                          3262      ** print address **
000028A8  6100 F8EA               3263      BSR         Get_BCC_Displacement_32bit
000028AC  6100 F8EC               3264      BSR         Get_Current_Address
000028B0  6100 F8F0               3265      BSR         Get_BCC_Destination_Address
000028B4  2207                    3266      MOVE.L      D7,D1
000028B6  6100 F8EE               3267      BSR         PrintHex
000028BA                          3268  
000028BA  6000 E836               3269      BRA         opdec_return
000028BE                          3270  ERROR
000028BE  43F8 0087               3271      LEA         pr_ERROR,A1
000028C2  6100 F8F6               3272      BSR         PrintString
000028C6  6000 E82A               3273      BRA         opdec_return
000028CA                          3274  
000028CA                          3275  
000028CA                          3276  
000028CA                          3277  
000028CA                          3278  -------------------- end include --------------------
000028CA                          3279                  INCLUDE 'arsany_opcodes.x68'
000028CA                          3280  MATCH_MOVEA_W
000028CA                          3281      ** Move command size into D1
000028CA  123C 0002               3282      MOVE.B      #2,D1
000028CE                          3283      ** Print command
000028CE  103C 000E               3284      MOVE.B      #14,D0
000028D2  43F8 0031               3285      LEA         pr_MOVEA,A1
000028D6  4E4F                    3286      TRAP        #15
000028D8                          3287      ** Print size
000028D8  43F8 0019               3288      LEA         pr_WORD,A1
000028DC  4E4F                    3289      TRAP        #15
000028DE                          3290      
000028DE  6000 0016               3291      BRA         print_movea
000028E2                          3292  MATCH_MOVEA_L
000028E2                          3293      ** Move command size into D1
000028E2  123C 0004               3294      MOVE.B      #4,D1
000028E6                          3295      ** Print command
000028E6  103C 000E               3296      MOVE.B      #14,D0
000028EA  43F8 0031               3297      LEA         pr_MOVEA,A1
000028EE  4E4F                    3298      TRAP        #15
000028F0                          3299      ** Print size
000028F0  43F8 001C               3300      LEA         pr_LONG,A1
000028F4  4E4F                    3301      TRAP        #15
000028F6                          3302  print_movea
000028F6                          3303      ** Print space
000028F6  43F8 0000               3304      LEA         pr_space,A1
000028FA  4E4F                    3305      TRAP        #15
000028FC                          3306      ** Decode right side ea
000028FC  1002                    3307      MOVE.B      D2,D0
000028FE  0200 003F               3308      ANDI.B      #%00111111,D0
00002902  4EB8 1694               3309      JSR         EADecoder
00002906                          3310      ** Add comma
00002906  103C 000E               3311      MOVE.B      #14,D0
0000290A  43F8 0014               3312      LEA         pr_comma,A1
0000290E  4E4F                    3313      TRAP        #15
00002910                          3314      ** Decode left side ea
00002910  3002                    3315      MOVE.W      D2,D0
00002912  0240 0FC0               3316      ANDI.W      #%0000111111000000,D0
00002916  EC88                    3317      LSR.L       #6,D0
00002918  4EB8 167C               3318      JSR         EADecoder_left
0000291C                          3319      
0000291C  6000 E7D4               3320      BRA         opdec_return
00002920                          3321      
00002920                          3322      
00002920                          3323  MATCH_ADDA_W
00002920                          3324      ** Move command size into D1
00002920  123C 0002               3325      MOVE.B      #2,D1
00002924                          3326      ** Print command
00002924  103C 000E               3327      MOVE.B      #14,D0
00002928  43F8 003D               3328      LEA         pr_ADDA,A1
0000292C  4E4F                    3329      TRAP        #15
0000292E                          3330      ** Print size
0000292E  43F8 0019               3331      LEA         pr_WORD,A1
00002932  4E4F                    3332      TRAP        #15
00002934                          3333      
00002934  6000 0016               3334      BRA         print_adda
00002938                          3335  MATCH_ADDA_L
00002938                          3336      ** Move command size into D1
00002938  123C 0004               3337      MOVE.B      #4,D1
0000293C                          3338      ** Print command
0000293C  103C 000E               3339      MOVE.B      #14,D0
00002940  43F8 003D               3340      LEA         pr_ADDA,A1
00002944  4E4F                    3341      TRAP        #15
00002946                          3342      ** Print size
00002946  43F8 001C               3343      LEA         pr_LONG,A1
0000294A  4E4F                    3344      TRAP        #15
0000294C                          3345  print_adda
0000294C                          3346      ** Print space
0000294C  43F8 0002               3347      LEA         pr_space2,A1
00002950  4E4F                    3348      TRAP        #15
00002952                          3349      ** Decode right side ea
00002952  1002                    3350      MOVE.B      D2,D0
00002954  0200 003F               3351      ANDI.B      #%00111111,D0
00002958  4EB8 1694               3352      JSR         EADecoder
0000295C                          3353      ** Add comma
0000295C  103C 000E               3354      MOVE.B      #14,D0
00002960  43F8 0014               3355      LEA         pr_comma,A1
00002964  4E4F                    3356      TRAP        #15
00002966                          3357      ** Decode left side ea
00002966  3002                    3358      MOVE.W      D2,D0
00002968  0240 0E00               3359      ANDI.W      #%0000111000000000,D0
0000296C  0040 0040               3360      ORI.W       #%0000000001000000,D0
00002970  EC88                    3361      LSR.L       #6,D0
00002972  4EB8 167C               3362      JSR         EADecoder_left
00002976                          3363      
00002976  6000 E77A               3364      BRA         opdec_return
0000297A                          3365      
0000297A                          3366      
0000297A                          3367  MATCH_MULS_W
0000297A                          3368      ** Move command size into D1
0000297A  123C 0002               3369      MOVE.B      #2,D1
0000297E                          3370      ** Print command
0000297E  103C 000E               3371      MOVE.B      #14,D0
00002982  43F8 0042               3372      LEA         pr_MULS,A1
00002986  4E4F                    3373      TRAP        #15
00002988                          3374      ** Print size
00002988  43F8 0019               3375      LEA         pr_WORD,A1
0000298C  4E4F                    3376      TRAP        #15
0000298E                          3377      ** Print space
0000298E  43F8 0002               3378      LEA         pr_space2,A1
00002992  4E4F                    3379      TRAP        #15
00002994                          3380      ** Decode right side ea
00002994  1002                    3381      MOVE.B      D2,D0
00002996  0200 003F               3382      ANDI.B      #%00111111,D0
0000299A  4EB8 1694               3383      JSR         EADecoder
0000299E                          3384      ** Add comma
0000299E  103C 000E               3385      MOVE.B      #14,D0
000029A2  43F8 0014               3386      LEA         pr_comma,A1
000029A6  4E4F                    3387      TRAP        #15
000029A8                          3388      ** Decode left side ea
000029A8  3002                    3389      MOVE.W      D2,D0
000029AA  0240 0E00               3390      ANDI.W      #%0000111000000000,D0
000029AE  EC88                    3391      LSR.L       #6,D0
000029B0  4EB8 167C               3392      JSR         EADecoder_left    
000029B4                          3393      
000029B4  6000 E73C               3394      BRA         opdec_return
000029B8                          3395      
000029B8                          3396      
000029B8                          3397  MATCH_RTS
000029B8  43F8 004B               3398      LEA         pr_RTS,A1
000029BC  103C 000E               3399      MOVE.B      #14,D0
000029C0  4E4F                    3400      TRAP        #15
000029C2                          3401  
000029C2  6000 E72E               3402      BRA         opdec_return
000029C6                          3403      
000029C6                          3404      
000029C6                          3405  MATCH_CMP_B
000029C6                          3406      ** Move command size into D1
000029C6  123C 0002               3407      MOVE.B      #2,D1
000029CA                          3408      ** Print command
000029CA  103C 000E               3409      MOVE.B      #14,D0
000029CE  43F8 004F               3410      LEA         pr_CMP,A1
000029D2  4E4F                    3411      TRAP        #15
000029D4                          3412      ** Print size
000029D4  43F8 0016               3413      LEA         pr_BYTE,A1
000029D8  4E4F                    3414      TRAP        #15
000029DA                          3415      
000029DA  6000 002E               3416      BRA         print_cmp
000029DE                          3417  MATCH_CMP_W
000029DE                          3418      ** Move command size into D1
000029DE  123C 0002               3419      MOVE.B      #2,D1
000029E2                          3420      ** Print command
000029E2  103C 000E               3421      MOVE.B      #14,D0
000029E6  43F8 004F               3422      LEA         pr_CMP,A1
000029EA  4E4F                    3423      TRAP        #15
000029EC                          3424      ** Print size
000029EC  43F8 0019               3425      LEA         pr_WORD,A1
000029F0  4E4F                    3426      TRAP        #15
000029F2                          3427      
000029F2  6000 0016               3428      BRA         print_cmp
000029F6                          3429  MATCH_CMP_L
000029F6                          3430      ** Move command size into D1
000029F6  123C 0004               3431      MOVE.B      #4,D1
000029FA                          3432      ** Print command
000029FA  103C 000E               3433      MOVE.B      #14,D0
000029FE  43F8 004F               3434      LEA         pr_CMP,A1
00002A02  4E4F                    3435      TRAP        #15
00002A04                          3436      ** Print size
00002A04  43F8 001C               3437      LEA         pr_LONG,A1
00002A08  4E4F                    3438      TRAP        #15
00002A0A                          3439  print_cmp
00002A0A                          3440      ** Print space
00002A0A  43F8 0005               3441      LEA         pr_space3,A1
00002A0E  4E4F                    3442      TRAP        #15
00002A10  4240                    3443      CLR         D0
00002A12                          3444      ** Decode right side ea
00002A12  1002                    3445      MOVE.B      D2,D0
00002A14  0200 003F               3446      ANDI.B      #%00111111,D0
00002A18  4EB8 1694               3447      JSR         EADecoder
00002A1C                          3448      ** Add comma
00002A1C  103C 000E               3449      MOVE.B      #14,D0
00002A20  43F8 0014               3450      LEA         pr_comma,A1
00002A24  4E4F                    3451      TRAP        #15
00002A26                          3452      ** Decode left side ea
00002A26  3002                    3453      MOVE.W      D2,D0
00002A28  0240 0E00               3454      ANDI.W      #%0000111000000000,D0
00002A2C  EC88                    3455      LSR.L       #6,D0
00002A2E  4EB8 167C               3456      JSR         EADecoder_left   
00002A32                          3457      
00002A32  6000 E6BE               3458      BRA         opdec_return
00002A36                          3459      
00002A36                          3460      
00002A36                          3461  MATCH_JSR
00002A36                          3462      ** Print command
00002A36  103C 000E               3463      MOVE.B      #14,D0
00002A3A  43F8 0053               3464      LEA         pr_JSR,A1
00002A3E  4E4F                    3465      TRAP        #15
00002A40                          3466      ** Print space
00002A40  43F8 000E               3467      LEA         pr_space5,A1
00002A44  4E4F                    3468      TRAP        #15
00002A46                          3469      ** Decode right side ea
00002A46  1002                    3470      MOVE.B      D2,D0
00002A48  0200 003F               3471      ANDI.B      #%00111111,D0
00002A4C  4EB8 1694               3472      JSR         EADecoder 
00002A50                          3473      
00002A50  6000 E6A0               3474      BRA         opdec_return
00002A54                          3475      
00002A54                          3476      
00002A54                          3477  MATCH_CLR_B 
00002A54                          3478      ** Move command size into D1
00002A54  123C 0002               3479      MOVE.B      #2,D1
00002A58                          3480      ** Print command
00002A58  103C 000E               3481      MOVE.B      #14,D0
00002A5C  43F8 0047               3482      LEA         pr_CLR,A1
00002A60  4E4F                    3483      TRAP        #15
00002A62                          3484      ** Print size
00002A62  43F8 0016               3485      LEA         pr_BYTE,A1
00002A66  4E4F                    3486      TRAP        #15
00002A68                          3487      
00002A68  6000 002E               3488      BRA         print_clr
00002A6C                          3489  MATCH_CLR_W
00002A6C                          3490      ** Move command size into D1
00002A6C  123C 0002               3491      MOVE.B      #2,D1
00002A70                          3492      ** Print command
00002A70  103C 000E               3493      MOVE.B      #14,D0
00002A74  43F8 0047               3494      LEA         pr_CLR,A1
00002A78  4E4F                    3495      TRAP        #15
00002A7A                          3496      ** Print size
00002A7A  43F8 0019               3497      LEA         pr_WORD,A1
00002A7E  4E4F                    3498      TRAP        #15
00002A80                          3499      
00002A80  6000 0016               3500      BRA         print_clr
00002A84                          3501  MATCH_CLR_L
00002A84                          3502      ** Move command size into D1
00002A84  123C 0004               3503      MOVE.B      #4,D1
00002A88                          3504      ** Print command
00002A88  103C 000E               3505      MOVE.B      #14,D0
00002A8C  43F8 0047               3506      LEA         pr_CLR,A1
00002A90  4E4F                    3507      TRAP        #15
00002A92                          3508      ** Print size
00002A92  43F8 001C               3509      LEA         pr_LONG,A1
00002A96  4E4F                    3510      TRAP        #15
00002A98                          3511  print_clr
00002A98                          3512      ** Print space
00002A98  43F8 0005               3513      LEA         pr_space3,A1
00002A9C  4E4F                    3514      TRAP        #15
00002A9E                          3515      ** Decode right side ea
00002A9E  1002                    3516      MOVE.B      D2,D0
00002AA0  0200 003F               3517      ANDI.B      #%00111111,D0
00002AA4  4EB8 1694               3518      JSR         EADecoder 
00002AA8                          3519      
00002AA8  6000 E648               3520      BRA         opdec_return
00002AAC                          3521      
00002AAC                          3522      
00002AAC                          3523  MATCH_AND_DN_B
00002AAC                          3524      ** Move command size into D1
00002AAC  123C 0002               3525      MOVE.B      #2,D1
00002AB0                          3526      ** Print command
00002AB0  103C 000E               3527      MOVE.B      #14,D0
00002AB4  43F8 0057               3528      LEA         pr_AND,A1
00002AB8  4E4F                    3529      TRAP        #15
00002ABA                          3530      ** Print size
00002ABA  43F8 0016               3531      LEA         pr_BYTE,A1
00002ABE  4E4F                    3532      TRAP        #15
00002AC0                          3533      
00002AC0  6000 002E               3534      BRA         print_and_dn
00002AC4                          3535  MATCH_AND_DN_W
00002AC4                          3536      ** Move command size into D1
00002AC4  123C 0002               3537      MOVE.B      #2,D1
00002AC8                          3538      ** Print command
00002AC8  103C 000E               3539      MOVE.B      #14,D0
00002ACC  43F8 0057               3540      LEA         pr_AND,A1
00002AD0  4E4F                    3541      TRAP        #15
00002AD2                          3542      ** Print size
00002AD2  43F8 0019               3543      LEA         pr_WORD,A1
00002AD6  4E4F                    3544      TRAP        #15
00002AD8                          3545      
00002AD8  6000 0016               3546      BRA         print_and_dn
00002ADC                          3547  MATCH_AND_DN_L
00002ADC                          3548      ** Move command size into D1
00002ADC  123C 0004               3549      MOVE.B      #4,D1
00002AE0                          3550      ** Print command
00002AE0  103C 000E               3551      MOVE.B      #14,D0
00002AE4  43F8 0057               3552      LEA         pr_AND,A1
00002AE8  4E4F                    3553      TRAP        #15
00002AEA                          3554      ** Print size
00002AEA  43F8 001C               3555      LEA         pr_LONG,A1
00002AEE  4E4F                    3556      TRAP        #15
00002AF0                          3557  print_and_dn
00002AF0                          3558      ** Print space
00002AF0  43F8 0005               3559      LEA         pr_space3,A1
00002AF4  4E4F                    3560      TRAP        #15
00002AF6                          3561      ** Decode right side ea
00002AF6  1002                    3562      MOVE.B      D2,D0
00002AF8  0200 003F               3563      ANDI.B      #%00111111,D0
00002AFC  4EB8 1694               3564      JSR         EADecoder
00002B00                          3565      ** Add comma
00002B00  103C 000E               3566      MOVE.B      #14,D0
00002B04  43F8 0014               3567      LEA         pr_comma,A1
00002B08  4E4F                    3568      TRAP        #15
00002B0A                          3569      ** Decode left side ea
00002B0A  3002                    3570      MOVE.W      D2,D0
00002B0C  0240 0E00               3571      ANDI.W      #%0000111000000000,D0
00002B10  EC88                    3572      LSR.L       #6,D0
00002B12  4EB8 167C               3573      JSR         EADecoder_left  
00002B16                          3574      
00002B16  6000 E5DA               3575      BRA         opdec_return
00002B1A                          3576      
00002B1A                          3577      
00002B1A                          3578  MATCH_AND_EA_B
00002B1A                          3579      ** Move command size into D1
00002B1A  123C 0002               3580      MOVE.B      #2,D1
00002B1E                          3581      ** Print command
00002B1E  103C 000E               3582      MOVE.B      #14,D0
00002B22  43F8 0057               3583      LEA         pr_AND,A1
00002B26  4E4F                    3584      TRAP        #15
00002B28                          3585      ** Print size
00002B28  43F8 0016               3586      LEA         pr_BYTE,A1
00002B2C  4E4F                    3587      TRAP        #15
00002B2E                          3588      
00002B2E  6000 002E               3589      BRA         print_and_ea
00002B32                          3590  MATCH_AND_EA_W
00002B32                          3591      ** Move command size into D1
00002B32  123C 0002               3592      MOVE.B      #2,D1
00002B36                          3593      ** Print command
00002B36  103C 000E               3594      MOVE.B      #14,D0
00002B3A  43F8 0057               3595      LEA         pr_AND,A1
00002B3E  4E4F                    3596      TRAP        #15
00002B40                          3597      ** Print size
00002B40  43F8 0019               3598      LEA         pr_WORD,A1
00002B44  4E4F                    3599      TRAP        #15
00002B46                          3600      
00002B46  6000 0016               3601      BRA         print_and_ea
00002B4A                          3602  MATCH_AND_EA_L
00002B4A                          3603      ** Move command size into D1
00002B4A  123C 0004               3604      MOVE.B      #4,D1
00002B4E                          3605      ** Print command
00002B4E  103C 000E               3606      MOVE.B      #14,D0
00002B52  43F8 0057               3607      LEA         pr_AND,A1
00002B56  4E4F                    3608      TRAP        #15
00002B58                          3609      ** Print size
00002B58  43F8 001C               3610      LEA         pr_LONG,A1
00002B5C  4E4F                    3611      TRAP        #15
00002B5E                          3612  print_and_ea
00002B5E                          3613      ** Print space
00002B5E  43F8 0005               3614      LEA         pr_space3,A1
00002B62  4E4F                    3615      TRAP        #15
00002B64                          3616      ** Decode left side ea
00002B64  3002                    3617      MOVE.W      D2,D0
00002B66  0240 0E00               3618      ANDI.W      #%0000111000000000,D0
00002B6A  EC88                    3619      LSR.L       #6,D0
00002B6C  4EB8 167C               3620      JSR         EADecoder_left
00002B70                          3621      ** Add comma
00002B70  103C 000E               3622      MOVE.B      #14,D0
00002B74  43F8 0014               3623      LEA         pr_comma,A1
00002B78  4E4F                    3624      TRAP        #15
00002B7A                          3625      ** Decode right side ea
00002B7A  1002                    3626      MOVE.B      D2,D0
00002B7C  0200 003F               3627      ANDI.B      #%00111111,D0
00002B80  4EB8 1694               3628      JSR         EADecoder
00002B84                          3629      
00002B84  6000 E56C               3630      BRA         opdec_return
00002B88                          3631  
00002B88                          3632  
00002B88                          3633  
00002B88                          3634  
00002B88                          3635  
00002B88                          3636  
00002B88                          3637  
00002B88                          3638  
00002B88                          3639  
00002B88                          3640  -------------------- end include --------------------
00002B88                          3641  
00002B88                          3642  
00002B88                          3643  
00002B88                          3644  
00002B88                          3645  
00002B88                          3646  -------------------- end include --------------------
00002B88                          3647  
00002B88                          3648          END     start

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
A2H                 108E
ABS_LONG            39
ABS_WORD            38
ADDA_L              7
ADDA_W              3
ADDBYTELOOP         10B2
ADDBYTES            10AA
ADDI_B              18
ADDI_L              1A
ADDI_RETURN         10EE
ADDI_W              19
ADDQ                5
ADDQ_B              0
ADDQ_L              2
ADDQ_W              1
ADD_ADDA            D
ADD_TO_EA_B         4
ADD_TO_EA_L         6
ADD_TO_EA_W         5
ADD_TO_REG_B        0
ADD_TO_REG_L        2
ADD_TO_REG_W        1
AN                  8
AS                  0
ASL                 383
ASR                 387
BCC                 6
BCC_16              0
BCC_32              FF
BIT_REVERSAL        1FA0
CASCADE_A1          1EEA
CASCADE_A2          1F02
CASCADE_A3          1F1A
CASCADE_A4          1F32
CASCADE_A5          1F4A
CASCADE_A6          1F62
CASCADE_A7          1F7A
CASCADE_D1          1D2E
CASCADE_D2          1D46
CASCADE_D3          1D5E
CASCADE_D4          1D76
CASCADE_D5          1D8E
CASCADE_D6          1DA6
CASCADE_D7          1DBE
CC_CC               4
CC_CS               5
CC_EQ               7
CC_F                1
CC_GE               C
CC_GT               E
CC_HI               2
CC_LE               F
CC_LS               3
CC_LT               D
CC_MI               B
CC_NE               6
CC_PL               A
CC_T                0
CC_VC               8
CC_VS               9
CHECK_ADDI          15CC
CHECK_ADDQ          15AA
CHECK_ADD_ADDA      1554
CHECK_BCC           11EC
CHECK_BCC_16        12AC
CHECK_BCC_32        1354
CHECK_BCC_8         1204
CHECK_CMP           1410
CHECK_DIVU_OR       14D6
CHECK_FOUR_BIT_SIG  1164
CHECK_MOVEA_L_AND_MOVE_L  165C
CHECK_MOVEA_W_AND_MOVE_W  1632
CHECK_MOVEM         1524
CHECK_MULS_LEA_CLR_JSR_RTS  1436
CHECK_MULS_W_AND    1488
CHECK_NOP           1158
CHECK_SHIFT         2000
CHECK_SHIFT_AND_ROTATE  1118
CHECK_SUB           15F2
CLR_B               108
CLR_L               10A
CLR_SCRN            1066
CLR_W               109
CMP                 B
CMP_B               0
CMP_L               2
CMP_W               1
CONV_END            10BA
CR                  D
DEC_ABS_LONG        1744
DEC_ABS_WORD        1738
DEC_AN              175C
DEC_DN              1750
DEC_IMMEDIATE       171C
DEC_INDIRECT        1768
DEC_POST_INC        177C
DEC_PRE_DEC         1796
DEC_RETURN          16FE
DIVU                3
DIVU_OR             8
DN                  0
DN_B                0
DN_L                2
DN_W                1
DONE                1082
DONE_MSG            149
EADECODER           1694
EADECODER_LEFT      167C
EA_B                4
EA_L                6
EA_W                5
ERROR               28BE
ERROR_MSG           12D
EXECUTEPRINTSHIFTDIRECTION  2098
EXECUTEPRINTSHIFTSIZE  20D2
EXECUTESHIFTOPCODEPRINT  2070
FOUR_BIT_RETURN     10EA
GETSHIFTDESTREG     2026
GET_BCC_DESTINATION_ADDRESS  21A2
GET_BCC_DISPLACEMENT_16BIT  218E
GET_BCC_DISPLACEMENT_32BIT  2194
GET_BCC_DISPLACEMENT_8BIT  2188
GET_COUNT_REGISTER_VAL  2110
GET_CURRENT_ADDRESS  219A
GET_DIRECTION       2138
GET_IS_REGISTER_OR_IMMEDIATE  214C
GET_SHIFT_OPCODE    2164
GET_SIZE            2124
IMMEDIATE           3C
IMM_SKIP            1716
IMM_WORD            1734
INDIRECT            10
INPUT_ERROR         105A
ISOLATE_CC_CODE_FOR_BCC  13FC
ISOLATE_OP_CODE     1644
JSR                 13A
L                   1
LEA                 7
LEFT_SKIP           1698
LF                  A
LOOP_START          102A
LS                  1
LSL                 38F
LSR                 38B
MATCH_ADDA_L        2938
MATCH_ADDA_W        2920
MATCH_ADDI_B        186E
MATCH_ADDI_L        189E
MATCH_ADDI_W        1886
MATCH_ADDQ_B        1A50
MATCH_ADDQ_L        1A80
MATCH_ADDQ_W        1A68
MATCH_ADD_TO_EA_B   1996
MATCH_ADD_TO_EA_L   19C6
MATCH_ADD_TO_EA_W   19AE
MATCH_ADD_TO_REG_B  18DC
MATCH_ADD_TO_REG_L  190C
MATCH_ADD_TO_REG_W  18F4
MATCH_AND_DN_B      2AAC
MATCH_AND_DN_L      2ADC
MATCH_AND_DN_W      2AC4
MATCH_AND_EA_B      2B1A
MATCH_AND_EA_L      2B4A
MATCH_AND_EA_W      2B32
MATCH_ASL           2182
MATCH_ASR           2180
MATCH_CC_CC_16      2300
MATCH_CC_CC_32      232A
MATCH_CC_CC_8       22D6
MATCH_CC_CS_16      237E
MATCH_CC_CS_32      23A8
MATCH_CC_CS_8       2354
MATCH_CC_EQ_16      247A
MATCH_CC_EQ_32      24A4
MATCH_CC_EQ_8       2450
MATCH_CC_F_16       21EE
MATCH_CC_F_32       21F0
MATCH_CC_F_8        21EC
MATCH_CC_GE_16      26F0
MATCH_CC_GE_32      271A
MATCH_CC_GE_8       26C6
MATCH_CC_GT_16      27EC
MATCH_CC_GT_32      2816
MATCH_CC_GT_8       27C2
MATCH_CC_HI_16      220E
MATCH_CC_HI_32      2232
MATCH_CC_HI_8       21F2
MATCH_CC_LE_16      286A
MATCH_CC_LE_32      2894
MATCH_CC_LE_8       2840
MATCH_CC_LS_16      2282
MATCH_CC_LS_32      22AC
MATCH_CC_LS_8       2258
MATCH_CC_LT_16      276E
MATCH_CC_LT_32      2798
MATCH_CC_LT_8       2744
MATCH_CC_MI_16      2672
MATCH_CC_MI_32      269C
MATCH_CC_MI_8       2648
MATCH_CC_NE_16      23FC
MATCH_CC_NE_32      2426
MATCH_CC_NE_8       23D2
MATCH_CC_PL_16      25F4
MATCH_CC_PL_32      261E
MATCH_CC_PL_8       25CA
MATCH_CC_T_16       21E8
MATCH_CC_T_32       21EA
MATCH_CC_T_8        21E6
MATCH_CC_VC_16      24F8
MATCH_CC_VC_32      2522
MATCH_CC_VC_8       24CE
MATCH_CC_VS_16      2576
MATCH_CC_VS_32      25A0
MATCH_CC_VS_8       254C
MATCH_CLR_B         2A54
MATCH_CLR_L         2A84
MATCH_CLR_W         2A6C
MATCH_CMP_B         29C6
MATCH_CMP_L         29F6
MATCH_CMP_W         29DE
MATCH_DIVU          1AD4
MATCH_JSR           2A36
MATCH_LEA           1678
MATCH_LSL           217C
MATCH_LSR           217E
MATCH_MOVEA_L       28E2
MATCH_MOVEA_W       28CA
MATCH_MOVEM_TO_MEM_L  1B2A
MATCH_MOVEM_TO_MEM_W  1B12
MATCH_MOVEM_TO_REG_L  1B78
MATCH_MOVEM_TO_REG_W  1B60
MATCH_MOVEQ         1830
MATCH_MOVE_B        17BE
MATCH_MOVE_L        17EE
MATCH_MOVE_W        17D6
MATCH_MULS_L        167A
MATCH_MULS_W        297A
MATCH_NOP           17B0
MATCH_OR_DN_B       166C
MATCH_OR_DN_L       1670
MATCH_OR_DN_W       166E
MATCH_OR_EA_B       1672
MATCH_OR_EA_L       1676
MATCH_OR_EA_W       1674
MATCH_ROL           2184
MATCH_ROR           2186
MATCH_RTS           29B8
MATCH_SUB_TO_DN_B   1924
MATCH_SUB_TO_DN_L   1954
MATCH_SUB_TO_DN_W   193C
MATCH_SUB_TO_EA_B   19DE
MATCH_SUB_TO_EA_L   1A0E
MATCH_SUB_TO_EA_W   19F6
MESSAGE             F5
MESSAGE2            11A
MOVEA_WL            1
MOVEM_TO_MEM_L      123
MOVEM_TO_MEM_W      122
MOVEM_TO_REG_L      133
MOVEM_TO_REG_W      132
MOVEQ_              7
MOVE_B              1
MOVE_L              2
MOVE_W              3
MULS_L              130
MULS_LEA_CLR_JSR_RTS_MOVEM  4
MULS_OP_W           7
MULS_W_AND          C
NOP                 4E71
NOP_RETURN          10E6
NO_SLASH            1F9E
NUMSUB              10C0
NUMSUBRTN           109C
OPDECODER           10DC
OPDEC_RETURN        10F2
OUTPUT              10000
POST_INC            18
PRE_DEC             20
PRINTARITHSHIFT     205C
PRINTHEX            21A6
PRINTLOGICSHIFT     2066
PRINTROTATE         2052
PRINTSHIFT          20F6
PRINTSHIFTBYTE      20B4
PRINTSHIFTDATA      203A
PRINTSHIFTLEFT      208E
PRINTSHIFTLONG      20C8
PRINTSHIFTREG       20EE
PRINTSHIFTRIGHT     2084
PRINTSHIFTWORD      20BE
PRINTSIZEBYTE       21C2
PRINTSIZELONG       21DA
PRINTSIZEWORD       21CE
PRINTSTRING         21BA
PRINT_ADDA          294C
PRINT_ADDI          18B6
PRINT_ADDQ          1A98
PRINT_ADD_TO_EA     1A26
PRINT_ADD_TO_REG    196C
PRINT_AND_DN        2AF0
PRINT_AND_EA        2B5E
PRINT_CLR           2A98
PRINT_CMP           2A0A
PRINT_MOVE          1806
PRINT_MOVEA         28F6
PRINT_MOVEM_AN      1DCE
PRINT_MOVEM_AN_END  1EE6
PRINT_MOVEM_DN      1C12
PRINT_MOVEM_DN_END  1D2A
PRINT_MOVEM_MASK_TO_MEM  1BAE
PRINT_MOVEM_MASK_TO_REG  1BDC
PRINT_MOVEM_TO_MEM  1B3E
PRINT_MOVEM_TO_REG  1B8C
PROGRAM_START       1000
PR_A0               DD
PR_A1               E0
PR_A2               E3
PR_A3               E6
PR_A4               E9
PR_A5               EC
PR_A6               EF
PR_A7               F2
PR_ADD              61
PR_ADDA             3D
PR_ADDI             65
PR_ADDQ             6A
PR_AND              57
PR_BCC_CC           8D
PR_BCC_CS           91
PR_BCC_EQ           95
PR_BCC_GE           99
PR_BCC_GT           9D
PR_BCC_HI           A1
PR_BCC_LE           A5
PR_BCC_LS           A9
PR_BCC_LT           AD
PR_BCC_MI           B1
PR_BCC_NE           B5
PR_BCC_PL           B9
PR_BCC_VC           BD
PR_BCC_VS           C1
PR_BYTE             16
PR_CLR              47
PR_CMP              4F
PR_COMMA            14
PR_D0               C5
PR_D1               C8
PR_D2               CB
PR_D3               CE
PR_D4               D1
PR_D5               D4
PR_D6               D7
PR_D7               DA
PR_DIVU             73
PR_ERROR            87
PR_HASH             1F
PR_HEXTAG           21
PR_HYPHEN           24
PR_JSR              53
PR_LONG             1C
PR_MOVE             2C
PR_MOVEA            31
PR_MOVEM            37
PR_MOVEQ            5B
PR_MULS             42
PR_NOP              28
PR_REG              78
PR_RTS              4B
PR_SHIFT_AS         7D
PR_SHIFT_L          83
PR_SHIFT_LS         80
PR_SHIFT_R          85
PR_SHIFT_RO         7A
PR_SLASH            26
PR_SPACE            0
PR_SPACE2           2
PR_SPACE3           5
PR_SPACE4           9
PR_SPACE5           E
PR_SUB              6F
PR_WORD             19
R                   0
READFIRSTFOURBITS   10F8
READFIRSTTENBITS    110A
RO                  3
ROL                 39F
ROR                 39B
RTS                 4E75
SHIFT               E
SHIFT_BYTE          0
SHIFT_IMMED         0
SHIFT_LONG          3
SHIFT_REGISTER      1
SHIFT_WORD          1
SLASH_CHECK         1F8A
START               1000
SUB                 9
SUB_TO_DN_B         0
SUB_TO_DN_L         2
SUB_TO_DN_W         1
SUB_TO_EA_B         4
SUB_TO_EA_L         6
SUB_TO_EA_W         5
TO_MEM_A0           1DCE
TO_MEM_A1           1DF0
TO_MEM_A2           1E12
TO_MEM_A3           1E38
TO_MEM_A4           1E5E
TO_MEM_A5           1E84
TO_MEM_A6           1EAA
TO_MEM_A7           1ED0
TO_MEM_D0           1C12
TO_MEM_D1           1C34
TO_MEM_D2           1C56
TO_MEM_D3           1C7C
TO_MEM_D4           1CA2
TO_MEM_D5           1CC8
TO_MEM_D6           1CEE
TO_MEM_D7           1D14
UPSEND              10D4
UPSUB               10CA
UPSUBRTN            10A4

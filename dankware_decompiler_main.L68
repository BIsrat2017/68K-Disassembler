00003000 Starting Address
Assembler used: EASy68K Editor/Assembler v5.15.04
Created On: 3/10/2017 3:05:53 AM

00000000                             1  *-----------------------------------------------------------
00000000                             2  * Title      : Main Driver Program
00000000                             3  * Written by : Arsany Azmy, Connor McGwire
00000000                             4  * Date       :
00000000                             5  * Description:
00000000                             6  *-----------------------------------------------------------
00000000  =0000000D                  7  CR      EQU     $0D
00000000  =0000000A                  8  LF      EQU     $0A   
00000000                             9          INCLUDE 'ASCII_HEX_Conversions.x68'
00000000                            10  
00000000                            11  
00000000                            12  
00000000                            13  A2H     *Converts and ASCII Byte string into HEX; Size WORD
00000000  48E7 7FFE                 14          MOVEM.L     D1-D7/A0-A6, -(SP)
00000004                            15  
00000004  3400                      16          MOVE.W  D0,D2
00000006  3202                      17          MOVE.W  D2,D1                   *Store length of string into D1 for looping
00000008  2248                      18          MOVEA.L A0,A1                   *Copy starting point of string
0000000A                            19  
0000000A  6000 0026                 20          BRA     numSub
0000000E                            21  numSubRTN
0000000E  2049                      22          MOVEA.L A1,A0                   *Restore address position
00000010  3202                      23          MOVE.W  D2,D1                   *Reset loop counter
00000012                            24  
00000012  6000 0028                 25          BRA     upSub
00000016                            26  upSubRTN
00000016  2049                      27          MOVEA.L A1,A0                   *Restore address position
00000018  3202                      28          MOVE.W  D2,D1                   *Reset loop counter
0000001A  4240                      29          CLR     D0                      *Clear D0
0000001C                            30  addBytes
0000001C  D018                      31          ADD.B   (A0)+,D0
0000001E  5301                      32          SUBI.B  #1,D1
00000020  6700 000A                 33          BEQ     conv_end
00000024                            34  addByteLoop
00000024  E980                      35          ASL.L   #4,D0
00000026  D018                      36          ADD.B   (A0)+,D0
00000028  5301                      37          SUBI.B  #1,D1
0000002A  66F8                      38          BNE     addByteLoop
0000002C                            39  conv_end
0000002C  4CDF 7FFE                 40          MOVEM.L     (SP)+, D1-D7/A0-A6
00000030  4E75                      41          RTS
00000032                            42  
00000032                            43  
00000032                            44  numSub  *Convert ASCII 'number' to true number byte; Should not be called outside of the A2H subroutines
00000032  0418 0030                 45          SUBI.B  #$30,(A0)+              *Subtract difference between null ASCII and '0' ASCII
00000036  5341                      46          SUB.W   #1,D1                   *Decrement loop counter
00000038  66F8                      47          BNE     numSub                  *If loop has not ended restart
0000003A  60D2                      48          BRA     numSubRTN
0000003C                            49  
0000003C                            50  
0000003C                            51  upSub   *Loops through string to remove any upper case characters
0000003C                            52          *that may remain in the string
0000003C  0C10 0009                 53          CMPI.B  #9,(A0)                 *Check if the value is greater than 0-9
00000040  6F00 0004                 54          BLE     upSEnd                  *If it's not, continue loop
00000044  5310                      55          SUBI.B  #1,(A0)                 *Otherwise, subtract difference between ASCII 'number' code and 'A' code
00000046                            56  upSEnd
00000046  5248                      57          ADDA.W  #1,A0                   *Increment to next position to check for uppercase
00000048  5341                      58          SUB.W   #1,D1                   *Decrement loop counter
0000004A  66F0                      59          BNE     upSub
0000004C  60C8                      60          BRA     upSubRTN
0000004E                            61  
0000004E                            62  
0000004E                            63  
0000004E                            64  -------------------- end include --------------------
0000004E                            65          INCLUDE 'opcodes.x68'
0000004E                            66                  INCLUDE 'EADecoder.x68'
0000004E                            67  
0000004E                            68  
0000004E  =00010000                 69  output      EQU $00010000
0000004E                            70  
0000004E  =0000003C                 71  IMMEDIATE   EQU %00111100
0000004E  =00000038                 72  ABS_WORD    EQU %00111000
0000004E  =00000039                 73  ABS_LONG    EQU %00111001
0000004E  =00000000                 74  Dn          EQU %00000000
0000004E  =00000008                 75  An          EQU %00001000
0000004E  =00000010                 76  INDIRECT    EQU %00010000
0000004E  =00000018                 77  POST_INC    EQU %00011000
0000004E  =00000020                 78  PRE_DEC     EQU %00100000
0000004E                            79  
0000004E                            80  
0000004E                            81  
0000004E                            82  EADecoder_left
0000004E  48E7 FF7E                 83          MOVEM.L     D0-D7/A1-A6, -(SP)
00000052                            84          
00000052                            85          ** Swap the mode and register bits
00000052  1800                      86          MOVE.B  D0,D4
00000054  0200 0007                 87          ANDI.B  #%00000111,D0       * Mask mode
00000058  0204 0038                 88          ANDI.B  #%00111000,D4       * Mask register
0000005C  E708                      89          LSL.B   #3,D0               * Move mode bits over
0000005E  E60C                      90          LSR.B   #3,D4               * Move register bits over
00000060  8004                      91          OR.B    D4,D0               * Recombine
00000062                            92          
00000062  6000 0006                 93          BRA     left_skip
00000066                            94  
00000066                            95  EADecoder
00000066  48E7 FF7E                 96          MOVEM.L     D0-D7/A1-A6, -(SP) *Store registers on stack, except D0
0000006A                            97  left_skip   
0000006A  4242                      98          CLR     D2    
0000006C  4243                      99          CLR     D3 
0000006E  1401                     100          MOVE.B  D1,D2 ** Store opcode size in bytes into D2
00000070                           101          
00000070  43F9 00010000            102          LEA     output,A1
00000076  45F9 00010000            103          LEA     output,A2
0000007C                           104          
0000007C                           105          *First, decoder will check for the 3 types with hard coded register values
0000007C  163C 0001                106          MOVE.B  #1,D3
00000080  B07C 003C                107          CMP     #IMMEDIATE,D0
00000084  6700 0068                108          BEQ     dec_immediate
00000088                           109          
00000088  B07C 0038                110          CMP     #ABS_WORD,D0
0000008C  6700 007C                111          BEQ     dec_abs_word
00000090                           112          
00000090  B07C 0039                113          CMP     #ABS_LONG,D0
00000094  6700 0080                114          BEQ     dec_abs_long
00000098                           115          
00000098                           116          *If it was none of the above, store the register and mode seperately
00000098  4243                     117          CLR     D3
0000009A  1200                     118          MOVE.B  D0,D1
0000009C  0201 0038                119          ANDI.B  #%00111000,D1           *Get mode value
000000A0  0200 0007                120          ANDI.B  #%00000111,D0           *Get register value
000000A4  0600 0030                121          ADDI.B  #$30,D0
000000A8                           122                
000000A8  B27C 0000                123          CMP     #Dn,D1
000000AC  6700 0074                124          BEQ     dec_Dn 
000000B0                           125          
000000B0  B27C 0008                126          CMP     #An,D1
000000B4  6700 0078                127          BEQ     dec_An
000000B8                           128                  
000000B8  B27C 0010                129          CMP     #INDIRECT,D1
000000BC  6700 007C                130          BEQ     dec_indirect
000000C0                           131                  
000000C0  B27C 0018                132          CMP     #POST_INC,D1
000000C4  6700 0088                133          BEQ     dec_post_inc
000000C8                           134                  
000000C8  B27C 0020                135          CMP     #PRE_DEC,D1
000000CC  6700 009A                136          BEQ     dec_pre_dec
000000D0                           137  
000000D0                           138  dec_return ** Common return for all types
000000D0                           139          
000000D0                           140          ** Print display string
000000D0  103C 000E                141          MOVE.B  #14,D0
000000D4  4E4F                     142          TRAP    #15
000000D6                           143          
000000D6                           144          ** If there is immediate data to print, print it
000000D6  B67C 0001                145          CMP     #1,D3
000000DA  6600 000C                146          BNE     imm_skip
000000DE                           147          
000000DE  103C 000F                148          MOVE.B  #15,D0
000000E2  143C 0010                149          MOVE.B  #16,D2
000000E6  4E4F                     150          TRAP    #15
000000E8                           151  
000000E8                           152  imm_skip
000000E8  4CDF 7EFF                153          MOVEM.L     (SP)+, D0-D7/A1-A6 *Return register data from stack, except D0
000000EC  4E75                     154          RTS
000000EE                           155          
000000EE                           156          * Individual EA decoders *
000000EE                           157  
000000EE                           158  dec_immediate   *DECODE IMMEDIATE VALUE*
000000EE  14FC 0023                159          MOVE.B  #'#',(A2)+  * Move '#' char into string
000000F2  14FC 0024                160          MOVE.B  #'$',(A2)+  * Move '$' char into string
000000F6  14FC 0000                161          MOVE.B  #$0,(A2)+   * Null terminate string
000000FA  B47C 0002                162          CMP     #2,D2       * Check if data is word length
000000FE  6700 0006                163          BEQ     imm_word    
00000102                           164          
00000102  2218                     165          MOVE.L  (A0)+,D1    * Length was long
00000104  60CA                     166          BRA     dec_return
00000106                           167          
00000106                           168  imm_word
00000106  3218                     169          MOVE.W  (A0)+,D1    * Length was word
00000108  60C6                     170          BRA     dec_return
0000010A                           171  
0000010A                           172  
0000010A                           173  dec_abs_word    *DECODE ABSOLUTE WORD*
0000010A  14FC 0024                174          MOVE.B  #'$',(A2)+  * Move '$' char into string
0000010E  14FC 0000                175          MOVE.B  #$0,(A2)+   * Null terminate string
00000112  3218                     176          MOVE.W  (A0)+,D1
00000114  60BA                     177          BRA     dec_return
00000116                           178          
00000116                           179  
00000116                           180  dec_abs_long    *DECODE ABSOLUTE LONG*
00000116  14FC 0024                181          MOVE.B  #'$',(A2)+  * Move '$' char into string
0000011A  14FC 0000                182          MOVE.B  #$0,(A2)+   * Null terminate string
0000011E  2218                     183          MOVE.L  (A0)+,D1
00000120  60AE                     184          BRA     dec_return
00000122                           185          
00000122                           186  
00000122                           187  dec_Dn          *DECODE DIRECT DATA*
00000122  14FC 0044                188          MOVE.B  #'D',(A2)+
00000126  14C0                     189          MOVE.B  D0,(A2)+
00000128  14FC 0000                190          MOVE.B  #$0,(A2)+
0000012C  60A2                     191          BRA     dec_return
0000012E                           192  
0000012E                           193          
0000012E                           194  dec_An          *DECODE DIRECT ADDRESS*
0000012E  14FC 0041                195          MOVE.B  #'A',(A2)+
00000132  14C0                     196          MOVE.B  D0,(A2)+
00000134  14FC 0000                197          MOVE.B  #$0,(A2)+
00000138  6096                     198          BRA     dec_return
0000013A                           199  
0000013A                           200  
0000013A                           201  dec_indirect    *DECODE INDIRECT ACCESS*
0000013A  14FC 0028                202          MOVE.B  #'(',(A2)+
0000013E  14FC 0041                203          MOVE.B  #'A',(A2)+
00000142  14C0                     204          MOVE.B  D0,(A2)+
00000144  14FC 0029                205          MOVE.B  #')',(A2)+
00000148  14FC 0000                206          MOVE.B  #$0,(A2)+
0000014C  6082                     207          BRA     dec_return
0000014E                           208          
0000014E                           209  
0000014E                           210  dec_post_inc    *DECODE INDIRECT POST INCREMENT*
0000014E  14FC 0028                211          MOVE.B  #'(',(A2)+
00000152  14FC 0041                212          MOVE.B  #'A',(A2)+
00000156  14C0                     213          MOVE.B  D0,(A2)+
00000158  14FC 0029                214          MOVE.B  #')',(A2)+
0000015C  14FC 002B                215          MOVE.B  #'+',(A2)+
00000160  14FC 0000                216          MOVE.B  #$0,(A2)+
00000164  6000 FF6A                217          BRA     dec_return
00000168                           218          
00000168                           219          
00000168                           220  dec_pre_dec    *DECODE INDIRECT PRE DECREMENT*
00000168  14FC 002D                221          MOVE.B  #'-',(A2)+
0000016C  14FC 0028                222          MOVE.B  #'(',(A2)+
00000170  14FC 0041                223          MOVE.B  #'A',(A2)+
00000174  14C0                     224          MOVE.B  D0,(A2)+
00000176  14FC 0029                225          MOVE.B  #')',(A2)+
0000017A  14FC 0000                226          MOVE.B  #$0,(A2)+
0000017E  6000 FF50                227          BRA     dec_return
00000182                           228  
00000182                           229  
00000182                           230  
00000182                           231  
00000182                           232  
00000182                           233  
00000182                           234  
00000182                           235  
00000182                           236  
00000182                           237  -------------------- end include --------------------
00000182                           238                  INCLUDE 'connor_opcodes.x68'
00000182                           239  
00000182                           240  
00000182                           241  -------------------- end include --------------------
00000182                           242                  INCLUDE 'spencer_opcodes.x68'
00000182  =0000000E                243  SHIFT           EQU %1110
00000182  =00000003                244  RO              EQU %11
00000182  =00000000                245  AS              EQU %00
00000182  =00000001                246  LS              EQU %01
00000182  =00000000                247  R               EQU %0
00000182  =00000001                248  L               EQU %1
00000182  =00000001                249  SHIFT_register  EQU %1
00000182  =00000000                250  SHIFT_immed     EQU %0
00000182  =00000000                251  SHIFT_BYTE      EQU %00
00000182  =00000001                252  SHIFT_WORD      EQU %01
00000182  =00000003                253  SHIFT_LONG      EQU %11
00000182                           254  
00000182= 44 00                    255  pr_reg          DC.B    'D',0
00000184                           256  
00000184                           257  CHECK_SHIFT
00000184  6100 0122                258      BSR     Get_Count_Register_Val          * register 3
00000188  6100 0132                259      BSR     Get_Size                        * register 4
0000018C  6100 0142                260      BSR     Get_Direction                   * register 5
00000190  6100 0152                261      BSR     Get_Is_Register_Or_Immediate    * register 6
00000194  6100 0166                262      BSR     Get_Shift_Opcode                * register 7
00000198                           263  
00000198  6100 0024                264      BSR     PrintShiftData
0000019C                           265  
0000019C  6100 000C                266      BSR     getShiftDestReg
000001A0                           267  
000001A0  103C 0003                268      MOVE.B  #3,D0
000001A4  4E4F                     269      TRAP    #15
000001A6                           270  
000001A6  6000 0A32                271      BRA         opdec_return
000001AA                           272  
000001AA                           273  getShiftDestReg
000001AA                           274  
000001AA  48A7 2000                275      MOVEM.W     D2, -(SP)
000001AE                           276  
000001AE  123C 000D                277      MOVE.B      #13,D1
000001B2  E3AA                     278      LSL.L       D1,D2
000001B4  E2AA                     279      LSR.L       D1,D2
000001B6  1202                     280      MOVE.B      D2,D1
000001B8                           281  
000001B8  4C9F 0004                282      MOVEM.W     (SP)+,D2
000001BC  4E75                     283      RTS
000001BE                           284  
000001BE                           285  
000001BE                           286  PrintShiftData
000001BE                           287  
000001BE  BE3C 0003                288      CMP.B   #RO,D7
000001C2  6700 0012                289      BEQ     printRotate
000001C6  BE3C 0000                290      CMP.B   #AS,D7
000001CA  6700 0016                291      BEQ     printArithShift
000001CE  BE3C 0001                292      CMP.B   #LS,D7
000001D2  6700 001A                293      BEQ     printLogicShift
000001D6                           294  
000001D6                           295  printRotate
000001D6  43F9 00000BAD            296      LEA         pr_SHIFT_RO,A1
000001DC  4EF9 000001FA            297      JMP         executeShiftOpcodePrint
000001E2                           298  printArithShift
000001E2  43F9 00000BB0            299      LEA         pr_SHIFT_AS,A1
000001E8  4EF9 000001FA            300      JMP         executeShiftOpcodePrint
000001EE                           301  printLogicShift
000001EE  43F9 00000BB3            302      LEA         pr_SHIFT_LS,A1
000001F4  4EF9 000001FA            303      JMP         executeShiftOpcodePrint
000001FA                           304  executeShiftOpcodePrint
000001FA  6100 0156                305      BSR         PrintString
000001FE                           306  
000001FE  BA3C 0000                307      CMP.B   #R,D5
00000202  6700 000A                308      BEQ     printShiftRight
00000206  BA3C 0001                309      CMP.B   #L,D5
0000020A  6700 000E                310      BEQ     printShiftLeft
0000020E                           311  
0000020E                           312  printShiftRight
0000020E  43F9 00000BB8            313      LEA         pr_SHIFT_R,A1
00000214  4EF9 00000226            314      JMP         executePrintShiftdirection
0000021A                           315  printShiftLeft
0000021A  43F9 00000BB6            316      LEA         pr_SHIFT_L,A1
00000220  4EF9 00000226            317      JMP         executePrintShiftdirection
00000226                           318  executePrintShiftdirection
00000226  6100 012A                319      BSR         PrintString
0000022A                           320  
0000022A  B83C 0000                321      CMP.B   #SHIFT_BYTE,D4
0000022E  6700 0012                322      BEQ     printShiftByte
00000232  B83C 0001                323      CMP.B   #SHIFT_WORD,D4
00000236  6700 0016                324      BEQ     printShiftWord
0000023A  B83C 0003                325      CMP.B   #SHIFT_LONG,D4
0000023E  6700 001A                326      BEQ     printShiftLong
00000242                           327  
00000242                           328  printShiftByte
00000242  43F9 00000B1A            329      LEA     pr_BYTE,A1
00000248  4EF9 00000266            330      JMP     executePrintShiftSize
0000024E                           331  printShiftWord
0000024E  43F9 00000B1D            332      LEA     pr_WORD,A1
00000254  4EF9 00000266            333      JMP     executePrintShiftSize
0000025A                           334  printShiftLong
0000025A  43F9 00000B20            335      LEA     pr_LONG,A1
00000260  4EF9 00000266            336      JMP     executePrintShiftSize
00000266                           337  executePrintShiftSize
00000266  6100 00EA                338      BSR         PrintString
0000026A  43F9 00000B16            339      LEA     pr_space,A1
00000270  6100 00E0                340      BSR     PrintString
00000274                           341  
00000274  BC3C 0001                342      CMP.B   #SHIFT_register,D6
00000278  6700 000A                343      BEQ     printShiftReg
0000027C  BC3C 0000                344      CMP.B   #SHIFT_immed,D6
00000280  6700 000A                345      BEQ     printShift
00000284                           346  
00000284                           347  printShiftReg
00000284  43F8 0182                348      LEA     pr_reg,A1
00000288  6100 00C8                349      BSR     PrintString
0000028C                           350  printShift
0000028C  1203                     351      MOVE.B  D3,D1
0000028E  103C 0003                352      MOVE.B  #3,D0
00000292  4E4F                     353      TRAP    #15
00000294                           354  
00000294  43F9 00000B18            355      LEA     pr_comma,A1
0000029A  6100 00B6                356      BSR     PrintString
0000029E  43F8 0182                357      LEA     pr_reg,A1
000002A2  6100 00AE                358      BSR     PrintString
000002A6  4E75                     359      RTS
000002A8                           360  
000002A8                           361  
000002A8                           362  Get_Count_Register_Val
000002A8                           363  
000002A8  48A7 2000                364      MOVEM.W     D2, -(SP)
000002AC                           365  
000002AC  123C 000D                366      MOVE.B      #13,D1
000002B0  E98A                     367      LSL.L       #4,D2
000002B2  E2AA                     368      LSR.L       D1,D2
000002B4  1602                     369      MOVE.B      D2,D3
000002B6                           370  
000002B6  4C9F 0004                371      MOVEM.W     (SP)+,D2
000002BA  4E75                     372      RTS
000002BC                           373  
000002BC                           374  Get_Size
000002BC                           375  
000002BC  48A7 2000                376      MOVEM.W     D2, -(SP)
000002C0                           377  
000002C0  123C 000E                378      MOVE.B      #14,D1
000002C4  E18A                     379      LSL.L       #8,D2
000002C6  E2AA                     380      LSR.L       D1,D2
000002C8  1802                     381      MOVE.B      D2,D4
000002CA                           382  
000002CA  4C9F 0004                383      MOVEM.W     (SP)+,D2
000002CE  4E75                     384      RTS
000002D0                           385  Get_Direction
000002D0                           386  
000002D0  48A7 2000                387      MOVEM.W     D2, -(SP)
000002D4                           388  
000002D4  123C 000F                389      MOVE.B      #15,D1
000002D8  EF8A                     390      LSL.L       #7,D2
000002DA  E2AA                     391      LSR.L       D1,D2
000002DC  1A02                     392      MOVE.B      D2,D5
000002DE                           393  
000002DE  4C9F 0004                394      MOVEM.W     (SP)+,D2
000002E2  4E75                     395      RTS
000002E4                           396  Get_Is_Register_Or_Immediate
000002E4                           397  
000002E4  48A7 2000                398      MOVEM.W     D2, -(SP)
000002E8                           399  
000002E8  123C 000A                400      MOVE.B      #10,D1
000002EC  E3AA                     401      LSL.L       D1,D2
000002EE  123C 000F                402      MOVE.B      #15,D1
000002F2  E2AA                     403      LSR.L       D1,D2
000002F4                           404  
000002F4  1C02                     405      MOVE.B      D2,D6
000002F6                           406  
000002F6  4C9F 0004                407      MOVEM.W     (SP)+,D2
000002FA  4E75                     408      RTS
000002FC                           409  
000002FC                           410  Get_Shift_Opcode
000002FC                           411  
000002FC  48A7 2000                412      MOVEM.W     D2, -(SP)
00000300                           413  
00000300  123C 000B                414      MOVE.B      #11,D1
00000304  E3AA                     415      LSL.L       D1,D2
00000306  123C 000E                416      MOVE.B      #14,D1
0000030A  E2AA                     417      LSR.L       D1,D2
0000030C                           418  
0000030C  1E02                     419      MOVE.B      D2,D7
0000030E                           420  
0000030E  4C9F 0004                421      MOVEM.W     (SP)+,D2
00000312  4E75                     422      RTS
00000314                           423  
00000314                           424  
00000314                           425  MATCH_LSL
00000314  3A02                     426      MOVE.W      D2,D5       *REMOVE
00000316                           427  MATCH_LSR
00000316  3A02                     428      MOVE.W      D2,D5       *REMOVE
00000318                           429  MATCH_ASR
00000318  3A02                     430      MOVE.W      D2,D5       *REMOVE
0000031A                           431  MATCH_ASL
0000031A  3A02                     432      MOVE.W      D2,D5       *REMOVE
0000031C                           433  MATCH_ROL
0000031C  3A02                     434      MOVE.W      D2,D5       *REMOVE
0000031E                           435  MATCH_ROR
0000031E  3A02                     436      MOVE.W      D2,D5       *REMOVE
00000320                           437  
00000320                           438  Get_BCC_Displacement_8bit
00000320                           439  
00000320  4246                     440      CLR     D6
00000322  1C02                     441      MOVE.B  D2,D6
00000324  4E75                     442      RTS
00000326                           443  Get_BCC_Displacement_16bit
00000326                           444  
00000326  4246                     445      CLR     D6
00000328  3C18                     446      MOVE.W  (A0)+,D6
0000032A  4E75                     447      RTS
0000032C                           448  Get_BCC_Displacement_32bit
0000032C                           449  
0000032C  4246                     450      CLR     D6
0000032E  2C18                     451      MOVE.L  (A0)+,D6
00000330  4E75                     452      RTS
00000332                           453  Get_Current_Address
00000332                           454  
00000332  4247                     455      CLR     D7
00000334  2E08                     456      MOVE.L      A0,D7
00000336  5587                     457      SUBI.L      #2,D7
00000338  4E75                     458      RTS
0000033A                           459  Get_BCC_Destination_Address
0000033A                           460  
0000033A  9E86                     461      SUB.L   D6,D7
0000033C  4E75                     462      RTS
0000033E                           463  
0000033E                           464  PrintHex
0000033E                           465  
0000033E  48A7 2000                466      MOVEM.W     D2, -(SP)
00000342                           467  
00000342  103C 000F                468      MOVE.B      #15,D0
00000346  143C 0010                469      MOVE.B      #16,D2 * print base 16
0000034A  4E4F                     470      TRAP        #15
0000034C                           471  
0000034C  4C9F 0004                472      MOVEM.W     (SP)+,D2
00000350  4E75                     473      RTS
00000352                           474  PrintString
00000352  103C 000E                475      MOVE.B      #14,D0
00000356  4E4F                     476      TRAP        #15
00000358  4E75                     477      RTS
0000035A                           478  PrintSizeByte
0000035A  103C 000E                479      MOVE.B      #14,D0
0000035E  43F9 00000B1A            480      LEA         pr_BYTE,A1
00000364  4E4F                     481      TRAP        #15
00000366  4E75                     482      RTS
00000368                           483  PrintSizeWord
00000368  103C 000E                484      MOVE.B      #14,D0
0000036C  43F9 00000B1D            485      LEA         pr_WORD,A1
00000372  4E4F                     486      TRAP        #15
00000374  4E75                     487      RTS
00000376                           488  PrintSizeLong
00000376  103C 000E                489      MOVE.B      #14,D0
0000037A  43F9 00000B20            490      LEA         pr_LONG,A1
00000380  4E4F                     491      TRAP        #15
00000382  4E75                     492      RTS
00000384                           493  
00000384                           494  
00000384                           495  MATCH_CC_T_8
00000384  3A02                     496      MOVE.W      D2,D5       *REMOVE
00000386                           497  MATCH_CC_T_16
00000386  3A02                     498      MOVE.W      D2,D5       *REMOVE
00000388                           499  MATCH_CC_T_32
00000388  3A02                     500      MOVE.W      D2,D5       *REMOVE
0000038A                           501  MATCH_CC_F_8
0000038A  3A02                     502      MOVE.W      D2,D5       *REMOVE
0000038C                           503  MATCH_CC_F_16
0000038C  3A02                     504      MOVE.W      D2,D5       *REMOVE
0000038E                           505  MATCH_CC_F_32
0000038E  3A02                     506      MOVE.W      D2,D5       *REMOVE
00000390                           507  MATCH_CC_HI_8
00000390                           508      ** print opcode **
00000390  43F9 00000B89            509      LEA         pr_BCC_HI,A1
00000396  61BA                     510      BSR         PrintString
00000398                           511  
00000398  61C0                     512      BSR         PrintSizeBYTE
0000039A  43F9 00000B16            513      LEA         pr_space,A1
000003A0  61B0                     514      BSR         PrintString
000003A2                           515  
000003A2                           516      ** print address **
000003A2  6100 FF7C                517      BSR         Get_BCC_Displacement_8bit
000003A6  618A                     518      BSR         Get_Current_Address
000003A8  6190                     519      BSR         Get_BCC_Destination_Address
000003AA  2207                     520      MOVE.L      D7,D1
000003AC  6190                     521      BSR         PrintHex
000003AE                           522  
000003AE  6000 082A                523      BRA         opdec_return
000003B2                           524  
000003B2                           525  MATCH_CC_HI_16
000003B2                           526      ** print opcode **
000003B2  43F9 00000B89            527      LEA         pr_BCC_HI,A1
000003B8  6198                     528      BSR         PrintString
000003BA                           529  
000003BA  61AC                     530      BSR         PrintSizeWORD
000003BC  43F9 00000B16            531      LEA         pr_space,A1
000003C2  618E                     532      BSR         PrintString
000003C4                           533  
000003C4                           534      ** print address **
000003C4  6100 FF60                535      BSR         Get_BCC_Displacement_16bit
000003C8  6100 FF68                536      BSR         Get_Current_Address
000003CC  6100 FF6C                537      BSR         Get_BCC_Destination_Address
000003D0  2207                     538      MOVE.L      D7,D1
000003D2  6100 FF6A                539      BSR         PrintHex
000003D6                           540  
000003D6  6000 0802                541      BRA         opdec_return
000003DA                           542  MATCH_CC_HI_32
000003DA                           543      ** print opcode **
000003DA  43F9 00000B89            544      LEA         pr_BCC_HI,A1
000003E0  6100 FF70                545      BSR         PrintString
000003E4                           546  
000003E4  6190                     547      BSR         PrintSizeLONG
000003E6  43F9 00000B16            548      LEA         pr_space,A1
000003EC  6100 FF64                549      BSR         PrintString
000003F0                           550  
000003F0                           551      ** print address **
000003F0  6100 FF3A                552      BSR         Get_BCC_Displacement_32bit
000003F4  6100 FF3C                553      BSR         Get_Current_Address
000003F8  6100 FF40                554      BSR         Get_BCC_Destination_Address
000003FC  2207                     555      MOVE.L      D7,D1
000003FE  6100 FF3E                556      BSR         PrintHex
00000402                           557  
00000402  6000 07D6                558      BRA         opdec_return
00000406                           559  MATCH_CC_LS_8
00000406                           560      ** print opcode **
00000406  43F9 00000B91            561      LEA         pr_BCC_LS,A1
0000040C  6100 FF44                562      BSR         PrintString
00000410                           563  
00000410  6100 FF48                564      BSR         PrintSizeBYTE
00000414  43F9 00000B16            565      LEA         pr_space,A1
0000041A  6100 FF36                566      BSR         PrintString
0000041E                           567  
0000041E                           568      ** print address **
0000041E  6100 FF00                569      BSR         Get_BCC_Displacement_8bit
00000422  6100 FF0E                570      BSR         Get_Current_Address
00000426  6100 FF12                571      BSR         Get_BCC_Destination_Address
0000042A  2207                     572      MOVE.L      D7,D1
0000042C  6100 FF10                573      BSR         PrintHex
00000430                           574  
00000430  6000 07A8                575      BRA         opdec_return
00000434                           576  MATCH_CC_LS_16
00000434                           577      ** print opcode **
00000434  43F9 00000B91            578      LEA         pr_BCC_LS,A1
0000043A  6100 FF16                579      BSR         PrintString
0000043E                           580  
0000043E  6100 FF28                581      BSR         PrintSizeWORD
00000442  43F9 00000B16            582      LEA         pr_space,A1
00000448  6100 FF08                583      BSR         PrintString
0000044C                           584  
0000044C                           585      ** print address **
0000044C  6100 FED8                586      BSR         Get_BCC_Displacement_16bit
00000450  6100 FEE0                587      BSR         Get_Current_Address
00000454  6100 FEE4                588      BSR         Get_BCC_Destination_Address
00000458  2207                     589      MOVE.L      D7,D1
0000045A  6100 FEE2                590      BSR         PrintHex
0000045E                           591  
0000045E  6000 077A                592      BRA         opdec_return
00000462                           593  
00000462                           594  MATCH_CC_LS_32
00000462                           595      ** print opcode **
00000462  43F9 00000B91            596      LEA         pr_BCC_LS,A1
00000468  6100 FEE8                597      BSR         PrintString
0000046C                           598  
0000046C  6100 FF08                599      BSR         PrintSizeLONG
00000470  43F9 00000B16            600      LEA         pr_space,A1
00000476  6100 FEDA                601      BSR         PrintString
0000047A                           602  
0000047A                           603      ** print address **
0000047A  6100 FEB0                604      BSR         Get_BCC_Displacement_32bit
0000047E  6100 FEB2                605      BSR         Get_Current_Address
00000482  6100 FEB6                606      BSR         Get_BCC_Destination_Address
00000486  2207                     607      MOVE.L      D7,D1
00000488  6100 FEB4                608      BSR         PrintHex
0000048C                           609  
0000048C  6000 074C                610      BRA         opdec_return
00000490                           611  MATCH_CC_CC_8
00000490                           612  
00000490                           613      ** print opcode **
00000490  43F9 00000B75            614      LEA         pr_BCC_CC,A1
00000496  6100 FEBA                615      BSR         PrintString
0000049A                           616  
0000049A  6100 FEBE                617      BSR         PrintSizeBYTE
0000049E  43F9 00000B16            618      LEA         pr_space,A1
000004A4  6100 FEAC                619      BSR         PrintString
000004A8                           620  
000004A8                           621      ** print address **
000004A8  6100 FE76                622      BSR         Get_BCC_Displacement_8bit
000004AC  6100 FE84                623      BSR         Get_Current_Address
000004B0  6100 FE88                624      BSR         Get_BCC_Destination_Address
000004B4  2207                     625      MOVE.L      D7,D1
000004B6  6100 FE86                626      BSR         PrintHex
000004BA                           627  
000004BA  6000 071E                628      BRA         opdec_return
000004BE                           629  
000004BE                           630  MATCH_CC_CC_16
000004BE                           631      ** print opcode **
000004BE  43F9 00000B75            632      LEA         pr_BCC_CC,A1
000004C4  6100 FE8C                633      BSR         PrintString
000004C8                           634  
000004C8  6100 FE9E                635      BSR         PrintSizeWORD
000004CC  43F9 00000B16            636      LEA         pr_space,A1
000004D2  6100 FE7E                637      BSR         PrintString
000004D6                           638  
000004D6                           639      ** print address **
000004D6  6100 FE4E                640      BSR         Get_BCC_Displacement_16bit
000004DA  6100 FE56                641      BSR         Get_Current_Address
000004DE  6100 FE5A                642      BSR         Get_BCC_Destination_Address
000004E2  2207                     643      MOVE.L      D7,D1
000004E4  6100 FE58                644      BSR         PrintHex
000004E8                           645  
000004E8  6000 06F0                646      BRA         opdec_return
000004EC                           647  MATCH_CC_CC_32
000004EC                           648      ** print opcode **
000004EC  43F9 00000B75            649      LEA         pr_BCC_CC,A1
000004F2  6100 FE5E                650      BSR         PrintString
000004F6                           651  
000004F6  6100 FE7E                652      BSR         PrintSizeLONG
000004FA  43F9 00000B16            653      LEA         pr_space,A1
00000500  6100 FE50                654      BSR         PrintString
00000504                           655  
00000504                           656      ** print address **
00000504  6100 FE26                657      BSR         Get_BCC_Displacement_32bit
00000508  6100 FE28                658      BSR         Get_Current_Address
0000050C  6100 FE2C                659      BSR         Get_BCC_Destination_Address
00000510  2207                     660      MOVE.L      D7,D1
00000512  6100 FE2A                661      BSR         PrintHex
00000516                           662  
00000516  6000 06C2                663      BRA         opdec_return
0000051A                           664  MATCH_CC_CS_8
0000051A                           665      ** print opcode **
0000051A  43F9 00000B79            666      LEA         pr_BCC_CS,A1
00000520  6100 FE30                667      BSR         PrintString
00000524                           668  
00000524  6100 FE34                669      BSR         PrintSizeBYTE
00000528  43F9 00000B16            670      LEA         pr_space,A1
0000052E  6100 FE22                671      BSR         PrintString
00000532                           672  
00000532                           673      ** print address **
00000532  6100 FDEC                674      BSR         Get_BCC_Displacement_8bit
00000536  6100 FDFA                675      BSR         Get_Current_Address
0000053A  6100 FDFE                676      BSR         Get_BCC_Destination_Address
0000053E  2207                     677      MOVE.L      D7,D1
00000540  6100 FDFC                678      BSR         PrintHex
00000544                           679  
00000544  6000 0694                680      BRA         opdec_return
00000548                           681  MATCH_CC_CS_16
00000548                           682      ** print opcode **
00000548  43F9 00000B79            683      LEA         pr_BCC_CS,A1
0000054E  6100 FE02                684      BSR         PrintString
00000552                           685  
00000552  6100 FE14                686      BSR         PrintSizeWORD
00000556  43F9 00000B16            687      LEA         pr_space,A1
0000055C  6100 FDF4                688      BSR         PrintString
00000560                           689  
00000560                           690      ** print address **
00000560  6100 FDC4                691      BSR         Get_BCC_Displacement_16bit
00000564  6100 FDCC                692      BSR         Get_Current_Address
00000568  6100 FDD0                693      BSR         Get_BCC_Destination_Address
0000056C  2207                     694      MOVE.L      D7,D1
0000056E  6100 FDCE                695      BSR         PrintHex
00000572                           696  
00000572  6000 0666                697      BRA         opdec_return
00000576                           698  MATCH_CC_CS_32
00000576                           699      ** print opcode **
00000576  43F9 00000B79            700      LEA         pr_BCC_CS,A1
0000057C  6100 FDD4                701      BSR         PrintString
00000580                           702  
00000580  6100 FDF4                703      BSR         PrintSizeLONG
00000584  43F9 00000B16            704      LEA         pr_space,A1
0000058A  6100 FDC6                705      BSR         PrintString
0000058E                           706  
0000058E                           707      ** print address **
0000058E  6100 FD9C                708      BSR         Get_BCC_Displacement_32bit
00000592  6100 FD9E                709      BSR         Get_Current_Address
00000596  6100 FDA2                710      BSR         Get_BCC_Destination_Address
0000059A  2207                     711      MOVE.L      D7,D1
0000059C  6100 FDA0                712      BSR         PrintHex
000005A0                           713  
000005A0  6000 0638                714      BRA         opdec_return
000005A4                           715  MATCH_CC_NE_8
000005A4                           716      ** print opcode **
000005A4  43F9 00000B9D            717      LEA         pr_BCC_NE,A1
000005AA  6100 FDA6                718      BSR         PrintString
000005AE                           719  
000005AE  6100 FDAA                720      BSR         PrintSizeBYTE
000005B2  43F9 00000B16            721      LEA         pr_space,A1
000005B8  6100 FD98                722      BSR         PrintString
000005BC                           723  
000005BC                           724      ** print address **
000005BC  6100 FD62                725      BSR         Get_BCC_Displacement_8bit
000005C0  6100 FD70                726      BSR         Get_Current_Address
000005C4  6100 FD74                727      BSR         Get_BCC_Destination_Address
000005C8  2207                     728      MOVE.L      D7,D1
000005CA  6100 FD72                729      BSR         PrintHex
000005CE                           730  
000005CE  6000 060A                731      BRA         opdec_return
000005D2                           732  MATCH_CC_NE_16
000005D2                           733      ** print opcode **
000005D2  43F9 00000B9D            734      LEA         pr_BCC_NE,A1
000005D8  6100 FD78                735      BSR         PrintString
000005DC                           736  
000005DC  6100 FD8A                737      BSR         PrintSizeWORD
000005E0  43F9 00000B16            738      LEA         pr_space,A1
000005E6  6100 FD6A                739      BSR         PrintString
000005EA                           740  
000005EA                           741      ** print address **
000005EA  6100 FD3A                742      BSR         Get_BCC_Displacement_16bit
000005EE  6100 FD42                743      BSR         Get_Current_Address
000005F2  6100 FD46                744      BSR         Get_BCC_Destination_Address
000005F6  2207                     745      MOVE.L      D7,D1
000005F8  6100 FD44                746      BSR         PrintHex
000005FC                           747  
000005FC  6000 05DC                748      BRA         opdec_return
00000600                           749  MATCH_CC_NE_32
00000600                           750      ** print opcode **
00000600  43F9 00000B9D            751      LEA         pr_BCC_NE,A1
00000606  6100 FD4A                752      BSR         PrintString
0000060A                           753  
0000060A  6100 FD6A                754      BSR         PrintSizeLONG
0000060E  43F9 00000B16            755      LEA         pr_space,A1
00000614  6100 FD3C                756      BSR         PrintString
00000618                           757  
00000618                           758      ** print address **
00000618  6100 FD12                759      BSR         Get_BCC_Displacement_32bit
0000061C  6100 FD14                760      BSR         Get_Current_Address
00000620  6100 FD18                761      BSR         Get_BCC_Destination_Address
00000624  2207                     762      MOVE.L      D7,D1
00000626  6100 FD16                763      BSR         PrintHex
0000062A                           764  
0000062A  6000 05AE                765      BRA         opdec_return
0000062E                           766  MATCH_CC_EQ_8
0000062E                           767      ** print opcode **
0000062E  43F9 00000B7D            768      LEA         pr_BCC_EQ,A1
00000634  6100 FD1C                769      BSR         PrintString
00000638                           770  
00000638  6100 FD20                771      BSR         PrintSizeBYTE
0000063C  43F9 00000B16            772      LEA         pr_space,A1
00000642  6100 FD0E                773      BSR         PrintString
00000646                           774  
00000646                           775      ** print address **
00000646  6100 FCD8                776      BSR         Get_BCC_Displacement_8bit
0000064A  6100 FCE6                777      BSR         Get_Current_Address
0000064E  6100 FCEA                778      BSR         Get_BCC_Destination_Address
00000652  2207                     779      MOVE.L      D7,D1
00000654  6100 FCE8                780      BSR         PrintHex
00000658                           781  
00000658  6000 0580                782      BRA         opdec_return
0000065C                           783  MATCH_CC_EQ_16
0000065C                           784      ** print opcode **
0000065C  43F9 00000B7D            785      LEA         pr_BCC_EQ,A1
00000662  6100 FCEE                786      BSR         PrintString
00000666                           787  
00000666  6100 FD00                788      BSR         PrintSizeWORD
0000066A  43F9 00000B16            789      LEA         pr_space,A1
00000670  6100 FCE0                790      BSR         PrintString
00000674                           791  
00000674                           792      ** print address **
00000674  6100 FCB0                793      BSR         Get_BCC_Displacement_16bit
00000678  6100 FCB8                794      BSR         Get_Current_Address
0000067C  6100 FCBC                795      BSR         Get_BCC_Destination_Address
00000680  2207                     796      MOVE.L      D7,D1
00000682  6100 FCBA                797      BSR         PrintHex
00000686                           798  
00000686  6000 0552                799      BRA         opdec_return
0000068A                           800  MATCH_CC_EQ_32
0000068A                           801      ** print opcode **
0000068A  43F9 00000B7D            802      LEA         pr_BCC_EQ,A1
00000690  6100 FCC0                803      BSR         PrintString
00000694                           804  
00000694  6100 FCE0                805      BSR         PrintSizeLONG
00000698  43F9 00000B16            806      LEA         pr_space,A1
0000069E  6100 FCB2                807      BSR         PrintString
000006A2                           808  
000006A2                           809      ** print address **
000006A2  6100 FC88                810      BSR         Get_BCC_Displacement_32bit
000006A6  6100 FC8A                811      BSR         Get_Current_Address
000006AA  6100 FC8E                812      BSR         Get_BCC_Destination_Address
000006AE  2207                     813      MOVE.L      D7,D1
000006B0  6100 FC8C                814      BSR         PrintHex
000006B4                           815  
000006B4  6000 0524                816      BRA         opdec_return
000006B8                           817  MATCH_CC_VC_8
000006B8                           818      ** print opcode **
000006B8  43F9 00000BA5            819      LEA         pr_BCC_VC,A1
000006BE  6100 FC92                820      BSR         PrintString
000006C2                           821  
000006C2  6100 FC96                822      BSR         PrintSizeBYTE
000006C6  43F9 00000B16            823      LEA         pr_space,A1
000006CC  6100 FC84                824      BSR         PrintString
000006D0                           825  
000006D0                           826      ** print address **
000006D0  6100 FC4E                827      BSR         Get_BCC_Displacement_8bit
000006D4  6100 FC5C                828      BSR         Get_Current_Address
000006D8  6100 FC60                829      BSR         Get_BCC_Destination_Address
000006DC  2207                     830      MOVE.L      D7,D1
000006DE  6100 FC5E                831      BSR         PrintHex
000006E2                           832  
000006E2  6000 04F6                833      BRA         opdec_return
000006E6                           834  MATCH_CC_VC_16
000006E6                           835      ** print opcode **
000006E6  43F9 00000BA5            836      LEA         pr_BCC_VC,A1
000006EC  6100 FC64                837      BSR         PrintString
000006F0                           838  
000006F0  6100 FC76                839      BSR         PrintSizeWORD
000006F4  43F9 00000B16            840      LEA         pr_space,A1
000006FA  6100 FC56                841      BSR         PrintString
000006FE                           842  
000006FE                           843      ** print address **
000006FE  6100 FC26                844      BSR         Get_BCC_Displacement_16bit
00000702  6100 FC2E                845      BSR         Get_Current_Address
00000706  6100 FC32                846      BSR         Get_BCC_Destination_Address
0000070A  2207                     847      MOVE.L      D7,D1
0000070C  6100 FC30                848      BSR         PrintHex
00000710                           849  
00000710  6000 04C8                850      BRA         opdec_return
00000714                           851  MATCH_CC_VC_32
00000714                           852      ** print opcode **
00000714  43F9 00000BA5            853      LEA         pr_BCC_VC,A1
0000071A  6100 FC36                854      BSR         PrintString
0000071E                           855  
0000071E  6100 FC56                856      BSR         PrintSizeLONG
00000722  43F9 00000B16            857      LEA         pr_space,A1
00000728  6100 FC28                858      BSR         PrintString
0000072C                           859  
0000072C                           860      ** print address **
0000072C  6100 FBFE                861      BSR         Get_BCC_Displacement_32bit
00000730  6100 FC00                862      BSR         Get_Current_Address
00000734  6100 FC04                863      BSR         Get_BCC_Destination_Address
00000738  2207                     864      MOVE.L      D7,D1
0000073A  6100 FC02                865      BSR         PrintHex
0000073E                           866  
0000073E  6000 049A                867      BRA         opdec_return
00000742                           868  MATCH_CC_VS_8
00000742                           869      ** print opcode **
00000742  43F9 00000BA9            870      LEA         pr_BCC_VS,A1
00000748  6100 FC08                871      BSR         PrintString
0000074C                           872  
0000074C  6100 FC0C                873      BSR         PrintSizeBYTE
00000750  43F9 00000B16            874      LEA         pr_space,A1
00000756  6100 FBFA                875      BSR         PrintString
0000075A                           876  
0000075A                           877      ** print address **
0000075A  6100 FBC4                878      BSR         Get_BCC_Displacement_8bit
0000075E  6100 FBD2                879      BSR         Get_Current_Address
00000762  6100 FBD6                880      BSR         Get_BCC_Destination_Address
00000766  2207                     881      MOVE.L      D7,D1
00000768  6100 FBD4                882      BSR         PrintHex
0000076C                           883  
0000076C  6000 046C                884      BRA         opdec_return
00000770                           885  MATCH_CC_VS_16
00000770                           886      ** print opcode **
00000770  43F9 00000BA9            887      LEA         pr_BCC_VS,A1
00000776  6100 FBDA                888      BSR         PrintString
0000077A                           889  
0000077A  6100 FBEC                890      BSR         PrintSizeWORD
0000077E  43F9 00000B16            891      LEA         pr_space,A1
00000784  6100 FBCC                892      BSR         PrintString
00000788                           893  
00000788                           894      ** print address **
00000788  6100 FB9C                895      BSR         Get_BCC_Displacement_16bit
0000078C  6100 FBA4                896      BSR         Get_Current_Address
00000790  6100 FBA8                897      BSR         Get_BCC_Destination_Address
00000794  2207                     898      MOVE.L      D7,D1
00000796  6100 FBA6                899      BSR         PrintHex
0000079A                           900  
0000079A  6000 043E                901      BRA         opdec_return
0000079E                           902  MATCH_CC_VS_32
0000079E                           903      ** print opcode **
0000079E  43F9 00000BA9            904      LEA         pr_BCC_VS,A1
000007A4  6100 FBAC                905      BSR         PrintString
000007A8                           906  
000007A8  6100 FBCC                907      BSR         PrintSizeLONG
000007AC  43F9 00000B16            908      LEA         pr_space,A1
000007B2  6100 FB9E                909      BSR         PrintString
000007B6                           910  
000007B6                           911      ** print address **
000007B6  6100 FB74                912      BSR         Get_BCC_Displacement_32bit
000007BA  6100 FB76                913      BSR         Get_Current_Address
000007BE  6100 FB7A                914      BSR         Get_BCC_Destination_Address
000007C2  2207                     915      MOVE.L      D7,D1
000007C4  6100 FB78                916      BSR         PrintHex
000007C8                           917  
000007C8  6000 0410                918      BRA         opdec_return
000007CC                           919  MATCH_CC_PL_8
000007CC                           920      ** print opcode **
000007CC  43F9 00000BA1            921      LEA         pr_BCC_PL,A1
000007D2  6100 FB7E                922      BSR         PrintString
000007D6                           923  
000007D6  6100 FB82                924      BSR         PrintSizeBYTE
000007DA  43F9 00000B16            925      LEA         pr_space,A1
000007E0  6100 FB70                926      BSR         PrintString
000007E4                           927  
000007E4                           928      ** print address **
000007E4  6100 FB3A                929      BSR         Get_BCC_Displacement_8bit
000007E8  6100 FB48                930      BSR         Get_Current_Address
000007EC  6100 FB4C                931      BSR         Get_BCC_Destination_Address
000007F0  2207                     932      MOVE.L      D7,D1
000007F2  6100 FB4A                933      BSR         PrintHex
000007F6                           934  
000007F6  6000 03E2                935      BRA         opdec_return
000007FA                           936  MATCH_CC_PL_16
000007FA                           937      ** print opcode **
000007FA  43F9 00000BA1            938      LEA         pr_BCC_PL,A1
00000800  6100 FB50                939      BSR         PrintString
00000804                           940  
00000804  6100 FB62                941      BSR         PrintSizeWORD
00000808  43F9 00000B16            942      LEA         pr_space,A1
0000080E  6100 FB42                943      BSR         PrintString
00000812                           944  
00000812                           945      ** print address **
00000812  6100 FB12                946      BSR         Get_BCC_Displacement_16bit
00000816  6100 FB1A                947      BSR         Get_Current_Address
0000081A  6100 FB1E                948      BSR         Get_BCC_Destination_Address
0000081E  2207                     949      MOVE.L      D7,D1
00000820  6100 FB1C                950      BSR         PrintHex
00000824                           951  
00000824  6000 03B4                952      BRA         opdec_return
00000828                           953  MATCH_CC_PL_32
00000828                           954      ** print opcode **
00000828  43F9 00000BA1            955      LEA         pr_BCC_PL,A1
0000082E  6100 FB22                956      BSR         PrintString
00000832                           957  
00000832  6100 FB42                958      BSR         PrintSizeLONG
00000836  43F9 00000B16            959      LEA         pr_space,A1
0000083C  6100 FB14                960      BSR         PrintString
00000840                           961  
00000840                           962      ** print address **
00000840  6100 FAEA                963      BSR         Get_BCC_Displacement_32bit
00000844  6100 FAEC                964      BSR         Get_Current_Address
00000848  6100 FAF0                965      BSR         Get_BCC_Destination_Address
0000084C  2207                     966      MOVE.L      D7,D1
0000084E  6100 FAEE                967      BSR         PrintHex
00000852                           968  
00000852  6000 0386                969      BRA         opdec_return
00000856                           970  MATCH_CC_MI_8
00000856                           971      ** print opcode **
00000856  43F9 00000B99            972      LEA         pr_BCC_MI,A1
0000085C  6100 FAF4                973      BSR         PrintString
00000860                           974  
00000860  6100 FAF8                975      BSR         PrintSizeBYTE
00000864  43F9 00000B16            976      LEA         pr_space,A1
0000086A  6100 FAE6                977      BSR         PrintString
0000086E                           978  
0000086E                           979      ** print address **
0000086E  6100 FAB0                980      BSR         Get_BCC_Displacement_8bit
00000872  6100 FABE                981      BSR         Get_Current_Address
00000876  6100 FAC2                982      BSR         Get_BCC_Destination_Address
0000087A  2207                     983      MOVE.L      D7,D1
0000087C  6100 FAC0                984      BSR         PrintHex
00000880                           985  
00000880  6000 0358                986      BRA         opdec_return
00000884                           987  MATCH_CC_MI_16
00000884                           988      ** print opcode **
00000884  43F9 00000B99            989      LEA         pr_BCC_MI,A1
0000088A  6100 FAC6                990      BSR         PrintString
0000088E                           991  
0000088E  6100 FAD8                992      BSR         PrintSizeWORD
00000892  43F9 00000B16            993      LEA         pr_space,A1
00000898  6100 FAB8                994      BSR         PrintString
0000089C                           995  
0000089C                           996      ** print address **
0000089C  6100 FA88                997      BSR         Get_BCC_Displacement_16bit
000008A0  6100 FA90                998      BSR         Get_Current_Address
000008A4  6100 FA94                999      BSR         Get_BCC_Destination_Address
000008A8  2207                    1000      MOVE.L      D7,D1
000008AA  6100 FA92               1001      BSR         PrintHex
000008AE                          1002  
000008AE  6000 032A               1003      BRA         opdec_return
000008B2                          1004  MATCH_CC_MI_32
000008B2                          1005      ** print opcode **
000008B2  43F9 00000B99           1006      LEA         pr_BCC_MI,A1
000008B8  6100 FA98               1007      BSR         PrintString
000008BC                          1008  
000008BC  6100 FAB8               1009      BSR         PrintSizeLONG
000008C0  43F9 00000B16           1010      LEA         pr_space,A1
000008C6  6100 FA8A               1011      BSR         PrintString
000008CA                          1012  
000008CA                          1013      ** print address **
000008CA  6100 FA60               1014      BSR         Get_BCC_Displacement_32bit
000008CE  6100 FA62               1015      BSR         Get_Current_Address
000008D2  6100 FA66               1016      BSR         Get_BCC_Destination_Address
000008D6  2207                    1017      MOVE.L      D7,D1
000008D8  6100 FA64               1018      BSR         PrintHex
000008DC                          1019  
000008DC  6000 02FC               1020      BRA         opdec_return
000008E0                          1021  MATCH_CC_GE_8
000008E0                          1022      ** print opcode **
000008E0  43F9 00000B81           1023      LEA         pr_BCC_GE,A1
000008E6  6100 FA6A               1024      BSR         PrintString
000008EA                          1025  
000008EA  6100 FA6E               1026      BSR         PrintSizeBYTE
000008EE  43F9 00000B16           1027      LEA         pr_space,A1
000008F4  6100 FA5C               1028      BSR         PrintString
000008F8                          1029  
000008F8                          1030      ** print address **
000008F8  6100 FA26               1031      BSR         Get_BCC_Displacement_8bit
000008FC  6100 FA34               1032      BSR         Get_Current_Address
00000900  6100 FA38               1033      BSR         Get_BCC_Destination_Address
00000904  2207                    1034      MOVE.L      D7,D1
00000906  6100 FA36               1035      BSR         PrintHex
0000090A                          1036  
0000090A  6000 02CE               1037      BRA         opdec_return
0000090E                          1038  MATCH_CC_GE_16
0000090E                          1039      ** print opcode **
0000090E  43F9 00000B81           1040      LEA         pr_BCC_GE,A1
00000914  6100 FA3C               1041      BSR         PrintString
00000918                          1042  
00000918  6100 FA4E               1043      BSR         PrintSizeWORD
0000091C  43F9 00000B16           1044      LEA         pr_space,A1
00000922  6100 FA2E               1045      BSR         PrintString
00000926                          1046  
00000926                          1047      ** print address **
00000926  6100 F9FE               1048      BSR         Get_BCC_Displacement_16bit
0000092A  6100 FA06               1049      BSR         Get_Current_Address
0000092E  6100 FA0A               1050      BSR         Get_BCC_Destination_Address
00000932  2207                    1051      MOVE.L      D7,D1
00000934  6100 FA08               1052      BSR         PrintHex
00000938                          1053  
00000938  6000 02A0               1054      BRA         opdec_return
0000093C                          1055  MATCH_CC_GE_32
0000093C                          1056      ** print opcode **
0000093C  43F9 00000B81           1057      LEA         pr_BCC_GE,A1
00000942  6100 FA0E               1058      BSR         PrintString
00000946                          1059  
00000946  6100 FA2E               1060      BSR         PrintSizeLONG
0000094A  43F9 00000B16           1061      LEA         pr_space,A1
00000950  6100 FA00               1062      BSR         PrintString
00000954                          1063  
00000954                          1064      ** print address **
00000954  6100 F9D6               1065      BSR         Get_BCC_Displacement_32bit
00000958  6100 F9D8               1066      BSR         Get_Current_Address
0000095C  6100 F9DC               1067      BSR         Get_BCC_Destination_Address
00000960  2207                    1068      MOVE.L      D7,D1
00000962  6100 F9DA               1069      BSR         PrintHex
00000966                          1070  
00000966  6000 0272               1071      BRA         opdec_return
0000096A                          1072  MATCH_CC_LT_8
0000096A                          1073      ** print opcode **
0000096A  43F9 00000B95           1074      LEA         pr_BCC_LT,A1
00000970  6100 F9E0               1075      BSR         PrintString
00000974                          1076  
00000974  6100 F9E4               1077      BSR         PrintSizeBYTE
00000978  43F9 00000B16           1078      LEA         pr_space,A1
0000097E  6100 F9D2               1079      BSR         PrintString
00000982                          1080  
00000982                          1081      ** print address **
00000982  6100 F99C               1082      BSR         Get_BCC_Displacement_8bit
00000986  6100 F9AA               1083      BSR         Get_Current_Address
0000098A  6100 F9AE               1084      BSR         Get_BCC_Destination_Address
0000098E  2207                    1085      MOVE.L      D7,D1
00000990  6100 F9AC               1086      BSR         PrintHex
00000994                          1087  
00000994  6000 0244               1088      BRA         opdec_return
00000998                          1089  MATCH_CC_LT_16
00000998                          1090      ** print opcode **
00000998  43F9 00000B95           1091      LEA         pr_BCC_LT,A1
0000099E  6100 F9B2               1092      BSR         PrintString
000009A2                          1093  
000009A2  6100 F9C4               1094      BSR         PrintSizeWORD
000009A6  43F9 00000B16           1095      LEA         pr_space,A1
000009AC  6100 F9A4               1096      BSR         PrintString
000009B0                          1097  
000009B0                          1098      ** print address **
000009B0  6100 F974               1099      BSR         Get_BCC_Displacement_16bit
000009B4  6100 F97C               1100      BSR         Get_Current_Address
000009B8  6100 F980               1101      BSR         Get_BCC_Destination_Address
000009BC  2207                    1102      MOVE.L      D7,D1
000009BE  6100 F97E               1103      BSR         PrintHex
000009C2                          1104  
000009C2  6000 0216               1105      BRA         opdec_return
000009C6                          1106  MATCH_CC_LT_32
000009C6                          1107      ** print opcode **
000009C6  43F9 00000B95           1108      LEA         pr_BCC_LT,A1
000009CC  6100 F984               1109      BSR         PrintString
000009D0                          1110  
000009D0  6100 F9A4               1111      BSR         PrintSizeLONG
000009D4  43F9 00000B16           1112      LEA         pr_space,A1
000009DA  6100 F976               1113      BSR         PrintString
000009DE                          1114  
000009DE                          1115      ** print address **
000009DE  6100 F94C               1116      BSR         Get_BCC_Displacement_32bit
000009E2  6100 F94E               1117      BSR         Get_Current_Address
000009E6  6100 F952               1118      BSR         Get_BCC_Destination_Address
000009EA  2207                    1119      MOVE.L      D7,D1
000009EC  6100 F950               1120      BSR         PrintHex
000009F0                          1121  
000009F0  6000 01E8               1122      BRA         opdec_return
000009F4                          1123  MATCH_CC_GT_8
000009F4                          1124      ** print opcode **
000009F4  43F9 00000B85           1125      LEA         pr_BCC_GT,A1
000009FA  6100 F956               1126      BSR         PrintString
000009FE                          1127  
000009FE  6100 F95A               1128      BSR         PrintSizeBYTE
00000A02  43F9 00000B16           1129      LEA         pr_space,A1
00000A08  6100 F948               1130      BSR         PrintString
00000A0C                          1131  
00000A0C                          1132      ** print address **
00000A0C  6100 F912               1133      BSR         Get_BCC_Displacement_8bit
00000A10  6100 F920               1134      BSR         Get_Current_Address
00000A14  6100 F924               1135      BSR         Get_BCC_Destination_Address
00000A18  2207                    1136      MOVE.L      D7,D1
00000A1A  6100 F922               1137      BSR         PrintHex
00000A1E                          1138  
00000A1E  6000 01BA               1139      BRA         opdec_return
00000A22                          1140  MATCH_CC_GT_16
00000A22                          1141      ** print opcode **
00000A22  43F9 00000B85           1142      LEA         pr_BCC_GT,A1
00000A28  6100 F928               1143      BSR         PrintString
00000A2C                          1144  
00000A2C  6100 F93A               1145      BSR         PrintSizeWORD
00000A30  43F9 00000B16           1146      LEA         pr_space,A1
00000A36  6100 F91A               1147      BSR         PrintString
00000A3A                          1148  
00000A3A                          1149      ** print address **
00000A3A  6100 F8EA               1150      BSR         Get_BCC_Displacement_16bit
00000A3E  6100 F8F2               1151      BSR         Get_Current_Address
00000A42  6100 F8F6               1152      BSR         Get_BCC_Destination_Address
00000A46  2207                    1153      MOVE.L      D7,D1
00000A48  6100 F8F4               1154      BSR         PrintHex
00000A4C                          1155  
00000A4C  6000 018C               1156      BRA         opdec_return
00000A50                          1157  MATCH_CC_GT_32
00000A50                          1158      ** print opcode **
00000A50  43F9 00000B85           1159      LEA         pr_BCC_GT,A1
00000A56  6100 F8FA               1160      BSR         PrintString
00000A5A                          1161  
00000A5A  6100 F91A               1162      BSR         PrintSizeLONG
00000A5E  43F9 00000B16           1163      LEA         pr_space,A1
00000A64  6100 F8EC               1164      BSR         PrintString
00000A68                          1165  
00000A68                          1166      ** print address **
00000A68  6100 F8C2               1167      BSR         Get_BCC_Displacement_32bit
00000A6C  6100 F8C4               1168      BSR         Get_Current_Address
00000A70  6100 F8C8               1169      BSR         Get_BCC_Destination_Address
00000A74  2207                    1170      MOVE.L      D7,D1
00000A76  6100 F8C6               1171      BSR         PrintHex
00000A7A                          1172  
00000A7A  6000 015E               1173      BRA         opdec_return
00000A7E                          1174  MATCH_CC_LE_8
00000A7E                          1175      ** print opcode **
00000A7E  43F9 00000B8D           1176      LEA         pr_BCC_LE,A1
00000A84  6100 F8CC               1177      BSR         PrintString
00000A88                          1178  
00000A88  6100 F8D0               1179      BSR         PrintSizeBYTE
00000A8C  43F9 00000B16           1180      LEA         pr_space,A1
00000A92  6100 F8BE               1181      BSR         PrintString
00000A96                          1182  
00000A96                          1183      ** print address **
00000A96  6100 F888               1184      BSR         Get_BCC_Displacement_8bit
00000A9A  6100 F896               1185      BSR         Get_Current_Address
00000A9E  6100 F89A               1186      BSR         Get_BCC_Destination_Address
00000AA2  2207                    1187      MOVE.L      D7,D1
00000AA4  6100 F898               1188      BSR         PrintHex
00000AA8                          1189  
00000AA8  6000 0130               1190      BRA         opdec_return
00000AAC                          1191  MATCH_CC_LE_16
00000AAC                          1192      ** print opcode **
00000AAC  43F9 00000B8D           1193      LEA         pr_BCC_LE,A1
00000AB2  6100 F89E               1194      BSR         PrintString
00000AB6                          1195  
00000AB6  6100 F8B0               1196      BSR         PrintSizeWORD
00000ABA  43F9 00000B16           1197      LEA         pr_space,A1
00000AC0  6100 F890               1198      BSR         PrintString
00000AC4                          1199  
00000AC4                          1200      ** print address **
00000AC4  6100 F860               1201      BSR         Get_BCC_Displacement_16bit
00000AC8  6100 F868               1202      BSR         Get_Current_Address
00000ACC  6100 F86C               1203      BSR         Get_BCC_Destination_Address
00000AD0  2207                    1204      MOVE.L      D7,D1
00000AD2  6100 F86A               1205      BSR         PrintHex
00000AD6                          1206  
00000AD6  6000 0102               1207      BRA         opdec_return
00000ADA                          1208  MATCH_CC_LE_32
00000ADA                          1209      ** print opcode **
00000ADA  43F9 00000B8D           1210      LEA         pr_BCC_LE,A1
00000AE0  6100 F870               1211      BSR         PrintString
00000AE4                          1212  
00000AE4  6100 F890               1213      BSR         PrintSizeLONG
00000AE8  43F9 00000B16           1214      LEA         pr_space,A1
00000AEE  6100 F862               1215      BSR         PrintString
00000AF2                          1216  
00000AF2                          1217      ** print address **
00000AF2  6100 F838               1218      BSR         Get_BCC_Displacement_32bit
00000AF6  6100 F83A               1219      BSR         Get_Current_Address
00000AFA  6100 F83E               1220      BSR         Get_BCC_Destination_Address
00000AFE  2207                    1221      MOVE.L      D7,D1
00000B00  6100 F83C               1222      BSR         PrintHex
00000B04                          1223  
00000B04  6000 00D4               1224      BRA         opdec_return
00000B08                          1225  ERROR
00000B08  43F9 00000BBA           1226      LEA         pr_ERROR,A1
00000B0E  6100 F842               1227      BSR         PrintString
00000B12  6000 00C6               1228      BRA         opdec_return
00000B16                          1229  
00000B16                          1230  
00000B16                          1231  
00000B16                          1232  
00000B16                          1233  -------------------- end include --------------------
00000B16                          1234                  INCLUDE 'arsany_opcodes.x68'
00000B16                          1235  
00000B16                          1236  
00000B16                          1237  -------------------- end include --------------------
00000B16                          1238  
00000B16  =00004E71               1239  NOP             EQU $4E71
00000B16  =00000001               1240  MOVE_B          EQU %0001
00000B16  =00000003               1241  MOVE_W          EQU %0011
00000B16  =00000002               1242  MOVE_L          EQU %0010
00000B16  =00000001               1243  MOVEA_WL        EQU %001
00000B16  =00000007               1244  MOVEQ_          EQU %0111
00000B16  =00000122               1245  MOVEM_TO_MEM_W  EQU %0100100010
00000B16  =00000123               1246  MOVEM_TO_MEM_L  EQU %0100100011
00000B16  =00000132               1247  MOVEM_TO_REG_W  EQU %0100110010
00000B16  =00000133               1248  MOVEM_TO_REG_L  EQU %0100110011
00000B16                          1249  
00000B16  =00000018               1250  ADDI_B          EQU %0000011000
00000B16  =00000019               1251  ADDI_W          EQU %0000011001
00000B16  =0000001A               1252  ADDI_L          EQU %0000011010
00000B16                          1253  
00000B16  =0000000D               1254  ADD_ADDA        EQU %1101
00000B16  =00000000               1255  ADD_TO_REG_B    EQU %000
00000B16  =00000001               1256  ADD_TO_REG_W    EQU %001
00000B16  =00000002               1257  ADD_TO_REG_L    EQU %010
00000B16  =00000004               1258  ADD_TO_EA_B     EQU %100
00000B16  =00000005               1259  ADD_TO_EA_W     EQU %101
00000B16  =00000006               1260  ADD_TO_EA_L     EQU %110
00000B16  =00000003               1261  ADDA_W          EQU %011
00000B16  =00000007               1262  ADDA_L          EQU %111
00000B16                          1263  
00000B16  =00000005               1264  ADDQ            EQU %0101
00000B16  =00000000               1265  ADDQ_B          EQU %000
00000B16  =00000001               1266  ADDQ_W          EQU %001
00000B16  =00000002               1267  ADDQ_L          EQU %010
00000B16                          1268  
00000B16  =0000000C               1269  MULS_W_AND      EQU %1100
00000B16  =00000007               1270  MULS_OP_W       EQU %111
00000B16                          1271  
00000B16  =00000009               1272  SUB             EQU %1001
00000B16  =00000000               1273  SUB_TO_DN_B     EQU %000
00000B16  =00000001               1274  SUB_TO_DN_W     EQU %001
00000B16  =00000002               1275  SUB_TO_DN_L     EQU %010
00000B16  =00000004               1276  SUB_TO_EA_B     EQU %100
00000B16  =00000005               1277  SUB_TO_EA_W     EQU %101
00000B16  =00000006               1278  SUB_TO_EA_L     EQU %110
00000B16                          1279  
00000B16  =00000008               1280  DIVU_OR         EQU %1000
00000B16  =00000003               1281  DIVU            EQU %011
00000B16                          1282  
00000B16  =00000000               1283  DN_B            EQU %000
00000B16  =00000001               1284  DN_W            EQU %001
00000B16  =00000002               1285  DN_L            EQU %010
00000B16  =00000004               1286  EA_B            EQU %100
00000B16  =00000005               1287  EA_W            EQU %101
00000B16  =00000006               1288  EA_L            EQU %110
00000B16                          1289  
00000B16  =00000004               1290  MULS_LEA_CLR_JSR_RTS    EQU %0100
00000B16  =00004E75               1291  RTS             EQU $4E75
00000B16  =00000007               1292  LEA             EQU %111
00000B16  =0000013A               1293  JSR             EQU %0100111010
00000B16  =00000108               1294  CLR_B           EQU %0100001000
00000B16  =00000109               1295  CLR_W           EQU %0100001001
00000B16  =0000010A               1296  CLR_L           EQU %0100001010
00000B16  =00000130               1297  MULS_L          EQU %0100110000
00000B16                          1298  
00000B16  =0000038F               1299  LSL             EQU %1110001111
00000B16  =0000038B               1300  LSR             EQU %1110001011
00000B16  =00000387               1301  ASR             EQU %1110000111
00000B16  =00000383               1302  ASL             EQU %1110000011
00000B16  =0000039F               1303  ROL             EQU %1110011111
00000B16  =0000039B               1304  ROR             EQU %1110011011
00000B16                          1305  
00000B16  =0000000B               1306  CMP             EQU %1011
00000B16  =00000000               1307  CMP_B           EQU %000
00000B16  =00000001               1308  CMP_W           EQU %001
00000B16  =00000002               1309  CMP_L           EQU %010
00000B16                          1310  
00000B16  =00000006               1311  BCC             EQU %0110
00000B16  =00000000               1312  BCC_16          EQU %00000000
00000B16  =000000FF               1313  BCC_32          EQU $FF
00000B16  =00000000               1314  CC_T                EQU %0000
00000B16  =00000001               1315  CC_F                EQU %0001
00000B16  =00000002               1316  CC_HI           EQU %0010
00000B16  =00000003               1317  CC_LS           EQU %0011
00000B16  =00000004               1318  CC_CC           EQU %0100
00000B16  =00000005               1319  CC_CS           EQU %0101
00000B16  =00000006               1320  CC_NE           EQU %0110
00000B16  =00000007               1321  CC_EQ           EQU %0111
00000B16  =00000008               1322  CC_VC           EQU %1000
00000B16  =00000009               1323  CC_VS           EQU %1001
00000B16  =0000000A               1324  CC_PL           EQU %1010
00000B16  =0000000B               1325  CC_MI           EQU %1011
00000B16  =0000000C               1326  CC_GE           EQU %1100
00000B16  =0000000D               1327  CC_LT           EQU %1101
00000B16  =0000000E               1328  CC_GT           EQU %1110
00000B16  =0000000F               1329  CC_LE           EQU %1111
00000B16                          1330  
00000B16= 20 00                   1331  pr_space    DC.B    ' ',0
00000B18= 2C 00                   1332  pr_comma    DC.B    ',',0
00000B1A= 2E 42 00                1333  pr_BYTE     DC.B    '.B',0
00000B1D= 2E 57 00                1334  pr_WORD     DC.B    '.W',0
00000B20= 2E 4C 00                1335  pr_LONG     DC.B    '.L',0
00000B23= 23 00                   1336  pr_hash     DC.B    '#',0
00000B25                          1337  
00000B25= 4E 4F 50 00             1338  pr_NOP      DC.B    'NOP',0
00000B29= 4D 4F 56 45 00          1339  pr_MOVE     DC.B    'MOVE',0
00000B2E= 4D 4F 56 45 41 00       1340  pr_MOVEA    DC.B    'MOVEA',0
00000B34= 4D 4F 56 45 4D 00       1341  pr_MOVEM    DC.B    'MOVEM',0
00000B3A= 4D 4F 56 45 51 00       1342  pr_MOVEQ    DC.B    'MOVEQ',0
00000B40= 41 44 44 41 00          1343  pr_ADDA     DC.B    'ADDA',0
00000B45= 41 44 44 00             1344  pr_ADD      DC.B    'ADD',0
00000B49= 41 44 44 49 00          1345  pr_ADDI     DC.B    'ADDI',0
00000B4E= 41 44 44 51 00          1346  pr_ADDQ     DC.B    'ADDQ',0
00000B53= 53 55 42 00             1347  pr_SUB      DC.B    'SUB',0
00000B57= 4D 55 4C 53 00          1348  pr_MULS     DC.B    'MULS',0
00000B5C= 44 49 56 55 00          1349  pr_DIVU     DC.B    'DIVU',0
00000B61= 43 4C 52 00             1350  pr_CLR      DC.B    'CLR',0
00000B65= 52 54 53 00             1351  pr_RTS      DC.B    'RTS',0
00000B69= 43 4D 50 00             1352  pr_CMP      DC.B    'CMP',0
00000B6D= 4A 53 52 00             1353  pr_JSR      DC.B    'JSR',0
00000B71= 41 4E 44 00             1354  pr_AND      DC.B    'AND',0
00000B75                          1355  
00000B75= 42 43 43 00             1356  pr_BCC_CC   DC.B    'BCC',0
00000B79= 42 43 53 00             1357  pr_BCC_CS   DC.B    'BCS',0
00000B7D= 42 45 51 00             1358  pr_BCC_EQ   DC.B    'BEQ',0
00000B81= 42 47 45 00             1359  pr_BCC_GE   DC.B    'BGE',0
00000B85= 42 47 54 00             1360  pr_BCC_GT   DC.B    'BGT',0
00000B89= 42 48 49 00             1361  pr_BCC_HI   DC.B    'BHI',0
00000B8D= 42 4C 45 00             1362  pr_BCC_LE   DC.B    'BLE',0
00000B91= 42 4C 53 00             1363  pr_BCC_LS   DC.B    'BLS',0
00000B95= 42 4C 54 00             1364  pr_BCC_LT   DC.B    'BLT',0
00000B99= 42 4D 49 00             1365  pr_BCC_MI   DC.B    'BMI',0
00000B9D= 42 4E 45 00             1366  pr_BCC_NE   DC.B    'BNE',0
00000BA1= 42 50 4C 00             1367  pr_BCC_PL   DC.B    'BPL',0
00000BA5= 42 56 43 00             1368  pr_BCC_VC   DC.B    'BVC',0
00000BA9= 42 56 53 00             1369  pr_BCC_VS   DC.B    'BVS',0
00000BAD                          1370  
00000BAD= 52 4F 00                1371  pr_SHIFT_RO   DC.B    'RO',0
00000BB0= 41 53 00                1372  pr_SHIFT_AS   DC.B    'AS',0
00000BB3= 4C 53 00                1373  pr_SHIFT_LS   DC.B    'LS',0
00000BB6= 4C 00                   1374  pr_SHIFT_L    DC.B    'L',0
00000BB8= 52 00                   1375  pr_SHIFT_R    DC.B    'R',0
00000BBA                          1376  
00000BBA= 45 52 52 4F 52 00       1377  pr_ERROR    DC.B    'ERROR',0
00000BC0                          1378  
00000BC0                          1379  
00000BC0                          1380  
00000BC0                          1381  OpDecoder
00000BC0  48E7 FF7E               1382      MOVEM.L     D0-D7/A1-A6, -(SP)
00000BC4  4241                    1383      CLR         D1
00000BC6  6000 0078               1384      BRA         CHECK_NOP
00000BCA                          1385  NOP_RETURN
00000BCA  6000 0082               1386      BRA         CHECK_FOUR_BIT_SIG
00000BCE                          1387  FOUR_BIT_RETURN
00000BCE  6000 043E               1388      BRA         CHECK_MOVEM
00000BD2                          1389  MOVEM_RETURN
00000BD2  6000 04E2               1390      BRA         CHECK_ADDI
00000BD6                          1391  ADDI_RETURN
00000BD6  6000 0028               1392      BRA         CHECK_SHIFT_AND_ROTATE
00000BDA                          1393  
00000BDA                          1394  opdec_return
00000BDA  4CDF 7EFF               1395      MOVEM.L     (SP)+, D0-D7/A1-A6
00000BDE  4E75                    1396      RTS
00000BE0                          1397  
00000BE0                          1398  ReadFirstFourBits
00000BE0                          1399  
00000BE0  48A7 2000               1400      MOVEM.W     D2, -(SP)
00000BE4                          1401  
00000BE4  1E3C 000C               1402      MOVE.B      #12,D7
00000BE8  EE6A                    1403      LSR.W       D7,D2
00000BEA  1602                    1404      MOVE.B      D2,D3
00000BEC                          1405  
00000BEC  4C9F 0004               1406      MOVEM.W     (SP)+,D2
00000BF0  4E75                    1407      RTS
00000BF2                          1408  
00000BF2                          1409  ReadFirstTenBits
00000BF2                          1410  
00000BF2  48A7 2000               1411      MOVEM.W     D2, -(SP)
00000BF6                          1412  
00000BF6  EC4A                    1413      LSR.W       #6,D2
00000BF8  3602                    1414      MOVE.W      D2,D3
00000BFA                          1415  
00000BFA  4C9F 0004               1416      MOVEM.W     (SP)+,D2
00000BFE  4E75                    1417      RTS
00000C00                          1418  CHECK_SHIFT_AND_ROTATE
00000C00                          1419  
00000C00  61F0                    1420      BSR         ReadFirstTenBits
00000C02                          1421  
00000C02  3C3C 038F               1422      MOVE.W      #LSL,D6
00000C06  BC43                    1423      CMP.W       D3,D6
00000C08  6700 F70A               1424      BEQ         MATCH_LSL
00000C0C                          1425  
00000C0C  3C3C 038B               1426      MOVE.W      #LSR,D6
00000C10  BC43                    1427      CMP.W       D3,D6
00000C12  6700 F702               1428      BEQ         MATCH_LSR
00000C16                          1429  
00000C16  3C3C 0387               1430      MOVE.W      #ASR,D6
00000C1A  BC43                    1431      CMP.W       D3,D6
00000C1C  6700 F6FA               1432      BEQ         MATCH_ASR
00000C20                          1433  
00000C20  3C3C 0383               1434      MOVE.W      #ASL,D6
00000C24  BC43                    1435      CMP.W       D3,D6
00000C26  6700 F6F2               1436      BEQ         MATCH_ASL
00000C2A                          1437  
00000C2A  3C3C 039F               1438      MOVE.W      #ROL,D6
00000C2E  BC43                    1439      CMP.W       D3,D6
00000C30  6700 F6EA               1440      BEQ         MATCH_ROL
00000C34                          1441  
00000C34  3C3C 039B               1442      MOVE.W      #ROR,D6
00000C38  BC43                    1443      CMP.W       D3,D6
00000C3A  6700 F6E2               1444      BEQ         MATCH_ROR
00000C3E                          1445  
00000C3E  609A                    1446      BRA         opdec_return
00000C40                          1447  
00000C40                          1448  CHECK_NOP
00000C40                          1449  
00000C40  3C3C 4E71               1450      MOVE.W      #NOP,D6
00000C44  BC42                    1451      CMP.W       D2,D6
00000C46  6700 050E               1452      BEQ         MATCH_NOP
00000C4A                          1453  
00000C4A  6000 FF7E               1454      BRA         NOP_RETURN
00000C4E                          1455  
00000C4E                          1456  CHECK_FOUR_BIT_SIG
00000C4E                          1457  
00000C4E  6190                    1458      BSR         ReadFirstFourBits
00000C50                          1459  
00000C50  1C3C 0001               1460      MOVE.B      #MOVE_B,D6
00000C54  BC03                    1461      CMP.B       D3,D6
00000C56  6700 050C               1462      BEQ         MATCH_MOVE_B
00000C5A                          1463  
00000C5A  1C3C 0003               1464      MOVE.B      #MOVE_W,D6
00000C5E  BC03                    1465      CMP.B       D3,D6
00000C60  6700 04BA               1466      BEQ         CHECK_MOVEA_W_AND_MOVE_W
00000C64                          1467  
00000C64  1C3C 0002               1468      MOVE.B      #MOVE_L,D6
00000C68  BC03                    1469      CMP.B       D3,D6
00000C6A  6700 04DA               1470      BEQ         CHECK_MOVEA_L_AND_MOVE_L
00000C6E                          1471  
00000C6E  1C3C 0007               1472      MOVE.B      #MOVEQ_,D6
00000C72  BC03                    1473      CMP.B       D3,D6
00000C74  6700 0560               1474      BEQ         MATCH_MOVEQ
00000C78                          1475  
00000C78  1C3C 000D               1476      MOVE.B      #ADD_ADDA,D6
00000C7C  BC03                    1477      CMP.B       D3,D6
00000C7E  6700 03BE               1478      BEQ         CHECK_ADD_ADDA
00000C82                          1479  
00000C82  1C3C 0005               1480      MOVE.B      #ADDQ,D6
00000C86  BC03                    1481      CMP.B       D3,D6
00000C88  6700 040A               1482      BEQ         CHECK_ADDQ
00000C8C                          1483  
00000C8C  1C3C 0009               1484      MOVE.B      #SUB,D6
00000C90  BC03                    1485      CMP.B       D3,D6
00000C92  6700 0448               1486      BEQ         CHECK_SUB
00000C96                          1487  
00000C96  1C3C 0008               1488      MOVE.B      #DIVU_OR,D6
00000C9A  BC03                    1489      CMP.B       D3,D6
00000C9C  6700 0322               1490      BEQ         CHECK_DIVU_OR
00000CA0                          1491  
00000CA0  1C3C 000C               1492      MOVE.B      #MULS_W_AND,D6
00000CA4  BC03                    1493      CMP.B       D3,D6
00000CA6  6700 02CA               1494      BEQ         CHECK_MULS_W_AND
00000CAA                          1495  
00000CAA  1C3C 0004               1496      MOVE.B      #MULS_LEA_CLR_JSR_RTS,D6
00000CAE  BC03                    1497      CMP.B       D3,D6
00000CB0  6700 026E               1498      BEQ         CHECK_MULS_LEA_CLR_JSR_RTS
00000CB4                          1499  
00000CB4  1C3C 000B               1500      MOVE.B      #CMP,D6
00000CB8  BC03                    1501      CMP.B       D3,D6
00000CBA  6700 023E               1502      BEQ         CHECK_CMP
00000CBE                          1503  
00000CBE  1C3C 0006               1504      MOVE.B      #BCC,D6
00000CC2  BC03                    1505      CMP.B       D3,D6
00000CC4  6700 0010               1506      BEQ         CHECK_BCC
00000CC8                          1507  
00000CC8  1C3C 000E               1508      MOVE.B      #SHIFT,D6
00000CCC  BC03                    1509      CMP.B       D3,D6
00000CCE  6700 F4B4               1510      BEQ         CHECK_SHIFT
00000CD2                          1511  
00000CD2  6000 FEFA               1512      BRA         FOUR_BIT_RETURN
00000CD6                          1513  CHECK_BCC
00000CD6                          1514  
00000CD6  1C3C 0000               1515      MOVE.B      #BCC_16,D6
00000CDA  BC02                    1516      CMP.B       D2,D6
00000CDC  6700 00B8               1517      BEQ         CHECK_BCC_16
00000CE0                          1518  
00000CE0  1C3C 00FF               1519      MOVE.B      #BCC_32,D6
00000CE4  BC02                    1520      CMP.B       D2,D6
00000CE6  6700 0156               1521      BEQ         CHECK_BCC_32
00000CEA                          1522  
00000CEA  6000 0002               1523      BRA         CHECK_BCC_8
00000CEE                          1524  
00000CEE                          1525  CHECK_BCC_8
00000CEE                          1526  
00000CEE  6100 01F6               1527      BSR         ISOLATE_CC_CODE_FOR_BCC
00000CF2                          1528  
00000CF2  1C3C 0000               1529      MOVE.B      #CC_T,D6
00000CF6  BC03                    1530      CMP.B       D3,D6
00000CF8  6700 F68A               1531      BEQ         MATCH_CC_T_8
00000CFC                          1532  
00000CFC  1C3C 0001               1533      MOVE.B      #CC_F,D6
00000D00  BC03                    1534      CMP.B       D3,D6
00000D02  6700 F686               1535      BEQ         MATCH_CC_F_8
00000D06                          1536  
00000D06  1C3C 0002               1537      MOVE.B      #CC_HI,D6
00000D0A  BC03                    1538      CMP.B       D3,D6
00000D0C  6700 F682               1539      BEQ         MATCH_CC_HI_8
00000D10                          1540  
00000D10  1C3C 0003               1541      MOVE.B      #CC_LS,D6
00000D14  BC03                    1542      CMP.B       D3,D6
00000D16  6700 F6EE               1543      BEQ         MATCH_CC_LS_8
00000D1A                          1544  
00000D1A  1C3C 0004               1545      MOVE.B      #CC_CC,D6
00000D1E  BC03                    1546      CMP.B       D3,D6
00000D20  6700 F76E               1547      BEQ         MATCH_CC_CC_8
00000D24                          1548  
00000D24  1C3C 0005               1549      MOVE.B      #CC_CS,D6
00000D28  BC03                    1550      CMP.B       D3,D6
00000D2A  6700 F7EE               1551      BEQ         MATCH_CC_CS_8
00000D2E                          1552  
00000D2E  1C3C 0006               1553      MOVE.B      #CC_NE,D6
00000D32  BC03                    1554      CMP.B       D3,D6
00000D34  6700 F86E               1555      BEQ         MATCH_CC_NE_8
00000D38                          1556  
00000D38  1C3C 0007               1557      MOVE.B      #CC_EQ,D6
00000D3C  BC03                    1558      CMP.B       D3,D6
00000D3E  6700 F8EE               1559      BEQ         MATCH_CC_EQ_8
00000D42                          1560  
00000D42  1C3C 0008               1561      MOVE.B      #CC_VC,D6
00000D46  BC03                    1562      CMP.B       D3,D6
00000D48  6700 F96E               1563      BEQ         MATCH_CC_VC_8
00000D4C                          1564  
00000D4C  1C3C 0009               1565      MOVE.B      #CC_VS,D6
00000D50  BC03                    1566      CMP.B       D3,D6
00000D52  6700 F9EE               1567      BEQ         MATCH_CC_VS_8
00000D56                          1568  
00000D56  1C3C 000A               1569      MOVE.B      #CC_PL,D6
00000D5A  BC03                    1570      CMP.B       D3,D6
00000D5C  6700 FA6E               1571      BEQ         MATCH_CC_PL_8
00000D60                          1572  
00000D60  1C3C 000B               1573      MOVE.B      #CC_MI,D6
00000D64  BC03                    1574      CMP.B       D3,D6
00000D66  6700 FAEE               1575      BEQ         MATCH_CC_MI_8
00000D6A                          1576  
00000D6A  1C3C 000C               1577      MOVE.B      #CC_GE,D6
00000D6E  BC03                    1578      CMP.B       D3,D6
00000D70  6700 FB6E               1579      BEQ         MATCH_CC_GE_8
00000D74                          1580  
00000D74  1C3C 000D               1581      MOVE.B      #CC_LT,D6
00000D78  BC03                    1582      CMP.B       D3,D6
00000D7A  6700 FBEE               1583      BEQ         MATCH_CC_LT_8
00000D7E                          1584  
00000D7E  1C3C 000E               1585      MOVE.B      #CC_GT,D6
00000D82  BC03                    1586      CMP.B       D3,D6
00000D84  6700 FC6E               1587      BEQ         MATCH_CC_GT_8
00000D88                          1588  
00000D88  1C3C 000F               1589      MOVE.B      #CC_LE,D6
00000D8C  BC03                    1590      CMP.B       D3,D6
00000D8E  6700 FCEE               1591      BEQ         MATCH_CC_LE_8
00000D92                          1592  
00000D92  6000 FD74               1593      BRA         ERROR
00000D96                          1594  
00000D96                          1595  CHECK_BCC_16
00000D96                          1596  
00000D96  6100 014E               1597      BSR         ISOLATE_CC_CODE_FOR_BCC
00000D9A                          1598  
00000D9A  1C3C 0000               1599      MOVE.B      #CC_T,D6
00000D9E  BC03                    1600      CMP.B       D3,D6
00000DA0  6700 F5E4               1601      BEQ         MATCH_CC_T_16
00000DA4                          1602  
00000DA4  1C3C 0001               1603      MOVE.B      #CC_F,D6
00000DA8  BC03                    1604      CMP.B       D3,D6
00000DAA  6700 F5E0               1605      BEQ         MATCH_CC_F_16
00000DAE                          1606  
00000DAE  1C3C 0002               1607      MOVE.B      #CC_HI,D6
00000DB2  BC03                    1608      CMP.B       D3,D6
00000DB4  6700 F5FC               1609      BEQ         MATCH_CC_HI_16
00000DB8                          1610  
00000DB8  1C3C 0003               1611      MOVE.B      #CC_LS,D6
00000DBC  BC03                    1612      CMP.B       D3,D6
00000DBE  6700 F674               1613      BEQ         MATCH_CC_LS_16
00000DC2                          1614  
00000DC2  1C3C 0004               1615      MOVE.B      #CC_CC,D6
00000DC6  BC03                    1616      CMP.B       D3,D6
00000DC8  6700 F6F4               1617      BEQ         MATCH_CC_CC_16
00000DCC                          1618  
00000DCC  1C3C 0005               1619      MOVE.B      #CC_CS,D6
00000DD0  BC03                    1620      CMP.B       D3,D6
00000DD2  6700 F774               1621      BEQ         MATCH_CC_CS_16
00000DD6                          1622  
00000DD6  1C3C 0006               1623      MOVE.B      #CC_NE,D6
00000DDA  BC03                    1624      CMP.B       D3,D6
00000DDC  6700 F7F4               1625      BEQ         MATCH_CC_NE_16
00000DE0                          1626  
00000DE0  1C3C 0007               1627      MOVE.B      #CC_EQ,D6
00000DE4  BC03                    1628      CMP.B       D3,D6
00000DE6  6700 F874               1629      BEQ         MATCH_CC_EQ_16
00000DEA                          1630  
00000DEA  1C3C 0008               1631      MOVE.B      #CC_VC,D6
00000DEE  BC03                    1632      CMP.B       D3,D6
00000DF0  6700 F8F4               1633      BEQ         MATCH_CC_VC_16
00000DF4                          1634  
00000DF4  1C3C 0009               1635      MOVE.B      #CC_VS,D6
00000DF8  BC03                    1636      CMP.B       D3,D6
00000DFA  6700 F974               1637      BEQ         MATCH_CC_VS_16
00000DFE                          1638  
00000DFE  1C3C 000A               1639      MOVE.B      #CC_PL,D6
00000E02  BC03                    1640      CMP.B       D3,D6
00000E04  6700 F9F4               1641      BEQ         MATCH_CC_PL_16
00000E08                          1642  
00000E08  1C3C 000B               1643      MOVE.B      #CC_MI,D6
00000E0C  BC03                    1644      CMP.B       D3,D6
00000E0E  6700 FA74               1645      BEQ         MATCH_CC_MI_16
00000E12                          1646  
00000E12  1C3C 000C               1647      MOVE.B      #CC_GE,D6
00000E16  BC03                    1648      CMP.B       D3,D6
00000E18  6700 FAF4               1649      BEQ         MATCH_CC_GE_16
00000E1C                          1650  
00000E1C  1C3C 000D               1651      MOVE.B      #CC_LT,D6
00000E20  BC03                    1652      CMP.B       D3,D6
00000E22  6700 FB74               1653      BEQ         MATCH_CC_LT_16
00000E26                          1654  
00000E26  1C3C 000E               1655      MOVE.B      #CC_GT,D6
00000E2A  BC03                    1656      CMP.B       D3,D6
00000E2C  6700 FBF4               1657      BEQ         MATCH_CC_GT_16
00000E30                          1658  
00000E30  1C3C 000F               1659      MOVE.B      #CC_LE,D6
00000E34  BC03                    1660      CMP.B       D3,D6
00000E36  6700 FC74               1661      BEQ         MATCH_CC_LE_16
00000E3A                          1662  
00000E3A  6000 FCCC               1663      BRA         ERROR
00000E3E                          1664  
00000E3E                          1665  
00000E3E                          1666  CHECK_BCC_32
00000E3E                          1667  
00000E3E  6100 00A6               1668      BSR         ISOLATE_CC_CODE_FOR_BCC
00000E42                          1669  
00000E42  1C3C 0000               1670      MOVE.B      #CC_T,D6
00000E46  BC03                    1671      CMP.B       D3,D6
00000E48  6700 F53E               1672      BEQ         MATCH_CC_T_32
00000E4C                          1673  
00000E4C  1C3C 0001               1674      MOVE.B      #CC_F,D6
00000E50  BC03                    1675      CMP.B       D3,D6
00000E52  6700 F53A               1676      BEQ         MATCH_CC_F_32
00000E56                          1677  
00000E56  1C3C 0002               1678      MOVE.B      #CC_HI,D6
00000E5A  BC03                    1679      CMP.B       D3,D6
00000E5C  6700 F57C               1680      BEQ         MATCH_CC_HI_32
00000E60                          1681  
00000E60  1C3C 0003               1682      MOVE.B      #CC_LS,D6
00000E64  BC03                    1683      CMP.B       D3,D6
00000E66  6700 F5FA               1684      BEQ         MATCH_CC_LS_32
00000E6A                          1685  
00000E6A  1C3C 0004               1686      MOVE.B      #CC_CC,D6
00000E6E  BC03                    1687      CMP.B       D3,D6
00000E70  6700 F67A               1688      BEQ         MATCH_CC_CC_32
00000E74                          1689  
00000E74  1C3C 0005               1690      MOVE.B      #CC_CS,D6
00000E78  BC03                    1691      CMP.B       D3,D6
00000E7A  6700 F6FA               1692      BEQ         MATCH_CC_CS_32
00000E7E                          1693  
00000E7E  1C3C 0006               1694      MOVE.B      #CC_NE,D6
00000E82  BC03                    1695      CMP.B       D3,D6
00000E84  6700 F77A               1696      BEQ         MATCH_CC_NE_32
00000E88                          1697  
00000E88  1C3C 0007               1698      MOVE.B      #CC_EQ,D6
00000E8C  BC03                    1699      CMP.B       D3,D6
00000E8E  6700 F7FA               1700      BEQ         MATCH_CC_EQ_32
00000E92                          1701  
00000E92  1C3C 0008               1702      MOVE.B      #CC_VC,D6
00000E96  BC03                    1703      CMP.B       D3,D6
00000E98  6700 F87A               1704      BEQ         MATCH_CC_VC_32
00000E9C                          1705  
00000E9C  1C3C 0009               1706      MOVE.B      #CC_VS,D6
00000EA0  BC03                    1707      CMP.B       D3,D6
00000EA2  6700 F8FA               1708      BEQ         MATCH_CC_VS_32
00000EA6                          1709  
00000EA6  1C3C 000A               1710      MOVE.B      #CC_PL,D6
00000EAA  BC03                    1711      CMP.B       D3,D6
00000EAC  6700 F97A               1712      BEQ         MATCH_CC_PL_32
00000EB0                          1713  
00000EB0  1C3C 000B               1714      MOVE.B      #CC_MI,D6
00000EB4  BC03                    1715      CMP.B       D3,D6
00000EB6  6700 F9FA               1716      BEQ         MATCH_CC_MI_32
00000EBA                          1717  
00000EBA  1C3C 000C               1718      MOVE.B      #CC_GE,D6
00000EBE  BC03                    1719      CMP.B       D3,D6
00000EC0  6700 FA7A               1720      BEQ         MATCH_CC_GE_32
00000EC4                          1721  
00000EC4  1C3C 000D               1722      MOVE.B      #CC_LT,D6
00000EC8  BC03                    1723      CMP.B       D3,D6
00000ECA  6700 FAFA               1724      BEQ         MATCH_CC_LT_32
00000ECE                          1725  
00000ECE  1C3C 000E               1726      MOVE.B      #CC_GT,D6
00000ED2  BC03                    1727      CMP.B       D3,D6
00000ED4  6700 FB7A               1728      BEQ         MATCH_CC_GT_32
00000ED8                          1729  
00000ED8  1C3C 000F               1730      MOVE.B      #CC_LE,D6
00000EDC  BC03                    1731      CMP.B       D3,D6
00000EDE  6700 FBFA               1732      BEQ         MATCH_CC_LE_32
00000EE2                          1733  
00000EE2  6000 FC24               1734      BRA         ERROR
00000EE6                          1735  
00000EE6                          1736  ISOLATE_CC_CODE_FOR_BCC
00000EE6                          1737  
00000EE6  48A7 2000               1738      MOVEM.W     D2, -(SP)
00000EEA                          1739  
00000EEA  E94A                    1740      LSL.W       #4,D2
00000EEC  1E3C 000C               1741      MOVE.B      #12,D7
00000EF0  EE6A                    1742      LSR.W       D7,D2
00000EF2                          1743  
00000EF2  1602                    1744      MOVE.B      D2,D3
00000EF4                          1745  
00000EF4  4C9F 0004               1746      MOVEM.W     (SP)+,D2
00000EF8  4E75                    1747      RTS
00000EFA                          1748  CHECK_CMP
00000EFA                          1749  
00000EFA  6100 0232               1750      BSR         ISOLATE_OP_CODE
00000EFE                          1751  
00000EFE  1C3C 0000               1752      MOVE.B      #CMP_B,D6
00000F02  BC03                    1753      CMP.B       D3,D6
00000F04  6700 06E6               1754      BEQ         MATCH_CMP_B
00000F08                          1755  
00000F08  1C3C 0001               1756      MOVE.B      #CMP_W,D6
00000F0C  BC03                    1757      CMP.B       D3,D6
00000F0E  6700 071A               1758      BEQ         MATCH_CMP_W
00000F12                          1759  
00000F12  1C3C 0002               1760      MOVE.B      #CMP_L,D6
00000F16  BC03                    1761      CMP.B       D3,D6
00000F18  6700 0750               1762      BEQ         MATCH_CMP_L
00000F1C                          1763  
00000F1C  6000 FBEA               1764      BRA         ERROR
00000F20                          1765  CHECK_MULS_LEA_CLR_JSR_RTS
00000F20                          1766  
00000F20  3C3C 4E75               1767      MOVE.W      #RTS,D6
00000F24  BC42                    1768      CMP.W       D2,D6
00000F26  6700 06B6               1769      BEQ         MATCH_RTS
00000F2A                          1770  
00000F2A  6100 0202               1771      BSR         ISOLATE_OP_CODE
00000F2E                          1772  
00000F2E  1C3C 0007               1773      MOVE.B      #LEA,D6
00000F32  BC03                    1774      CMP.B       D3,D6
00000F34  6700 0994               1775      BEQ         MATCH_LEA
00000F38                          1776  
00000F38  6100 FCB8               1777      BSR         ReadFirstTenBits
00000F3C                          1778  
00000F3C  3C3C 013A               1779      MOVE.W      #JSR,D6
00000F40  BC43                    1780      CMP.W       D3,D6
00000F42  6700 0766               1781      BEQ         MATCH_JSR
00000F46                          1782  
00000F46  3C3C 0108               1783      MOVE.W      #CLR_B,D6
00000F4A  BC43                    1784      CMP.W       D3,D6
00000F4C  6700 077A               1785      BEQ         MATCH_CLR_B
00000F50                          1786  
00000F50  3C3C 0109               1787      MOVE.W      #CLR_W,D6
00000F54  BC43                    1788      CMP.W       D3,D6
00000F56  6700 0798               1789      BEQ         MATCH_CLR_W
00000F5A                          1790  
00000F5A  3C3C 010A               1791      MOVE.W      #CLR_L,D6
00000F5E  BC43                    1792      CMP.W       D3,D6
00000F60  6700 07B6               1793      BEQ         MATCH_CLR_L
00000F64                          1794  
00000F64  3C3C 0130               1795      MOVE.W      #MULS_L,D6  * Shouldn't need to check for the rest of the opcode..?
00000F68  BC43                    1796      CMP.W       D3,D6
00000F6A  6700 0960               1797      BEQ         MATCH_MULS_L
00000F6E                          1798  
00000F6E  6000 FB98               1799      BRA         ERROR
00000F72                          1800  
00000F72                          1801  CHECK_MULS_W_AND
00000F72                          1802  
00000F72  6100 01BA               1803      BSR         ISOLATE_OP_CODE
00000F76                          1804  
00000F76  1C3C 0007               1805      MOVE.B      #MULS_OP_W,D6
00000F7A  BC03                    1806      CMP.B       D3,D6
00000F7C  6700 0622               1807      BEQ         MATCH_MULS_W
00000F80                          1808  
00000F80  1C3C 0000               1809      MOVE.B      #DN_B,D6
00000F84  BC03                    1810      CMP.B       D3,D6
00000F86  6700 07B8               1811      BEQ         MATCH_AND_DN_B
00000F8A                          1812  
00000F8A  1C3C 0001               1813      MOVE.B      #DN_W,D6
00000F8E  BC03                    1814      CMP.B       D3,D6
00000F90  6700 07EC               1815      BEQ         MATCH_AND_DN_W
00000F94                          1816  
00000F94  1C3C 0002               1817      MOVE.B      #DN_L,D6
00000F98  BC03                    1818      CMP.B       D3,D6
00000F9A  6700 0820               1819      BEQ         MATCH_AND_DN_L
00000F9E                          1820  
00000F9E  1C3C 0004               1821      MOVE.B      #EA_B,D6
00000FA2  BC03                    1822      CMP.B       D3,D6
00000FA4  6700 0854               1823      BEQ         MATCH_AND_EA_B
00000FA8                          1824  
00000FA8  1C3C 0005               1825      MOVE.B      #EA_W,D6
00000FAC  BC03                    1826      CMP.B       D3,D6
00000FAE  6700 0888               1827      BEQ         MATCH_AND_EA_W
00000FB2                          1828  
00000FB2  1C3C 0006               1829      MOVE.B      #EA_L,D6
00000FB6  BC03                    1830      CMP.B       D3,D6
00000FB8  6700 08BC               1831      BEQ         MATCH_AND_EA_L
00000FBC                          1832  
00000FBC  6000 FB4A               1833      BRA         ERROR
00000FC0                          1834  
00000FC0                          1835  CHECK_DIVU_OR
00000FC0                          1836  
00000FC0  6100 016C               1837      BSR         ISOLATE_OP_CODE
00000FC4                          1838  
00000FC4  1C3C 0003               1839      MOVE.B      #DIVU,D6
00000FC8  BC03                    1840      CMP.B       D3,D6
00000FCA  6700 08F0               1841      BEQ         MATCH_DIVU
00000FCE                          1842  
00000FCE  1C3C 0000               1843      MOVE.B      #DN_B,D6
00000FD2  BC03                    1844      CMP.B       D3,D6
00000FD4  6700 08E8               1845      BEQ         MATCH_OR_DN_B
00000FD8                          1846  
00000FD8  1C3C 0001               1847      MOVE.B      #DN_W,D6
00000FDC  BC03                    1848      CMP.B       D3,D6
00000FDE  6700 08E0               1849      BEQ         MATCH_OR_DN_W
00000FE2                          1850  
00000FE2  1C3C 0002               1851      MOVE.B      #DN_L,D6
00000FE6  BC03                    1852      CMP.B       D3,D6
00000FE8  6700 08D8               1853      BEQ         MATCH_OR_DN_L
00000FEC                          1854  
00000FEC  1C3C 0004               1855      MOVE.B      #EA_B,D6
00000FF0  BC03                    1856      CMP.B       D3,D6
00000FF2  6700 08D0               1857      BEQ         MATCH_OR_EA_B
00000FF6                          1858  
00000FF6  1C3C 0005               1859      MOVE.B      #EA_W,D6
00000FFA  BC03                    1860      CMP.B       D3,D6
00000FFC  6700 08C8               1861      BEQ         MATCH_OR_EA_W
00001000                          1862  
00001000  1C3C 0006               1863      MOVE.B      #EA_L,D6
00001004  BC03                    1864      CMP.B       D3,D6
00001006  6700 08C0               1865      BEQ         MATCH_OR_EA_L
0000100A                          1866  
0000100A  6000 FAFC               1867      BRA         ERROR
0000100E                          1868  
0000100E                          1869  CHECK_MOVEM
0000100E                          1870  
0000100E  6100 FBE2               1871      BSR         ReadFirstTenBits
00001012                          1872  
00001012  3C3C 0122               1873      MOVE.W      #MOVEM_TO_MEM_W,D6
00001016  BC43                    1874      CMP.W       D3,D6
00001018  6700 089A               1875      BEQ         MATCH_MOVEM_TO_MEM_W
0000101C                          1876  
0000101C  3C3C 0123               1877      MOVE.W      #MOVEM_TO_MEM_L,D6
00001020  BC43                    1878      CMP.W       D3,D6
00001022  6700 0892               1879      BEQ         MATCH_MOVEM_TO_MEM_L
00001026                          1880  
00001026  3C3C 0132               1881      MOVE.W      #MOVEM_TO_REG_W,D6
0000102A  BC43                    1882      CMP.W       D3,D6
0000102C  6700 088A               1883      BEQ         MATCH_MOVEM_TO_REG_W
00001030                          1884  
00001030  3C3C 0133               1885      MOVE.W      #MOVEM_TO_REG_L,D6
00001034  BC43                    1886      CMP.W       D3,D6
00001036  6700 0882               1887      BEQ         MATCH_MOVEM_TO_REG_L
0000103A                          1888  
0000103A  6000 FB96               1889      BRA         MOVEM_RETURN
0000103E                          1890  CHECK_ADD_ADDA
0000103E                          1891  
0000103E  6100 00EE               1892      BSR         ISOLATE_OP_CODE
00001042                          1893  
00001042  3C3C 0000               1894      MOVE.W      #DN_B,D6
00001046  BC43                    1895      CMP.W       D3,D6
00001048  6700 0228               1896      BEQ         MATCH_ADD_TO_REG_B
0000104C                          1897  
0000104C  3C3C 0001               1898      MOVE.W      #DN_W,D6
00001050  BC43                    1899      CMP.W       D3,D6
00001052  6700 0236               1900      BEQ         MATCH_ADD_TO_REG_W
00001056                          1901  
00001056  3C3C 0002               1902      MOVE.W      #DN_L,D6
0000105A  BC43                    1903      CMP.W       D3,D6
0000105C  6700 0244               1904      BEQ         MATCH_ADD_TO_REG_L
00001060                          1905  
00001060  3C3C 0004               1906      MOVE.W      #EA_B,D6
00001064  BC43                    1907      CMP.W       D3,D6
00001066  6700 02C4               1908      BEQ         MATCH_ADD_TO_EA_B
0000106A                          1909  
0000106A  3C3C 0005               1910      MOVE.W      #EA_W,D6
0000106E  BC43                    1911      CMP.W       D3,D6
00001070  6700 02D2               1912      BEQ         MATCH_ADD_TO_EA_W
00001074                          1913  
00001074  3C3C 0006               1914      MOVE.W      #EA_L,D6
00001078  BC43                    1915      CMP.W       D3,D6
0000107A  6700 02E0               1916      BEQ         MATCH_ADD_TO_EA_L
0000107E                          1917  
0000107E  3C3C 0003               1918      MOVE.W      #ADDA_W,D6
00001082  BC43                    1919      CMP.W       D3,D6
00001084  6700 049E               1920      BEQ         MATCH_ADDA_W
00001088                          1921  
00001088  3C3C 0007               1922      MOVE.W      #ADDA_L,D6
0000108C  BC43                    1923      CMP.W       D3,D6
0000108E  6700 04D2               1924      BEQ         MATCH_ADDA_L
00001092                          1925  
00001092  4E75                    1926      RTS ** Change later?
00001094                          1927  CHECK_ADDQ
00001094                          1928  
00001094  6100 0098               1929      BSR         ISOLATE_OP_CODE
00001098                          1930  
00001098  3C3C 0000               1931      MOVE.W      #ADDQ_B,D6
0000109C  BC43                    1932      CMP.W       D3,D6
0000109E  6700 0346               1933      BEQ         MATCH_ADDQ_B
000010A2                          1934  
000010A2  3C3C 0001               1935      MOVE.W      #ADDQ_W,D6
000010A6  BC43                    1936      CMP.W       D3,D6
000010A8  6700 0354               1937      BEQ         MATCH_ADDQ_W
000010AC                          1938  
000010AC  3C3C 0002               1939      MOVE.W      #ADDQ_L,D6
000010B0  BC43                    1940      CMP.W       D3,D6
000010B2  6700 0362               1941      BEQ         MATCH_ADDQ_L
000010B6                          1942  
000010B6                          1943  CHECK_ADDI
000010B6                          1944  
000010B6  6100 FB3A               1945      BSR         ReadFirstTenBits
000010BA                          1946  
000010BA  3C3C 0018               1947      MOVE.W      #ADDI_B,D6
000010BE  BC43                    1948      CMP.W       D3,D6
000010C0  6700 0142               1949      BEQ         MATCH_ADDI_B
000010C4                          1950  
000010C4  3C3C 0019               1951      MOVE.W      #ADDI_W,D6
000010C8  BC43                    1952      CMP.W       D3,D6
000010CA  6700 0150               1953      BEQ         MATCH_ADDI_W
000010CE                          1954  
000010CE  3C3C 001A               1955      MOVE.W      #ADDI_L,D6
000010D2  BC43                    1956      CMP.W       D3,D6
000010D4  6700 015E               1957      BEQ         MATCH_ADDI_L
000010D8                          1958  
000010D8  6000 FAFC               1959      BRA         ADDI_RETURN
000010DC                          1960  CHECK_SUB
000010DC                          1961  
000010DC  6100 0050               1962      BSR         ISOLATE_OP_CODE
000010E0                          1963  
000010E0  3C3C 0000               1964      MOVE.W      #DN_B,D6
000010E4  BC43                    1965      CMP.W       D3,D6
000010E6  6700 01D2               1966      BEQ         MATCH_SUB_TO_DN_B
000010EA                          1967  
000010EA  3C3C 0001               1968      MOVE.W      #DN_W,D6
000010EE  BC43                    1969      CMP.W       D3,D6
000010F0  6700 01E0               1970      BEQ         MATCH_SUB_TO_DN_W
000010F4                          1971  
000010F4  3C3C 0002               1972      MOVE.W      #DN_L,D6
000010F8  BC43                    1973      CMP.W       D3,D6
000010FA  6700 01EE               1974      BEQ         MATCH_SUB_TO_DN_L
000010FE                          1975  
000010FE  3C3C 0004               1976      MOVE.W      #EA_B,D6
00001102  BC43                    1977      CMP.W       D3,D6
00001104  6700 026E               1978      BEQ         MATCH_SUB_TO_EA_B
00001108                          1979  
00001108  3C3C 0005               1980      MOVE.W      #EA_W,D6
0000110C  BC43                    1981      CMP.W       D3,D6
0000110E  6700 027C               1982      BEQ         MATCH_SUB_TO_EA_W
00001112                          1983  
00001112  3C3C 0006               1984      MOVE.W      #EA_L,D6
00001116  BC43                    1985      CMP.W       D3,D6
00001118  6700 028A               1986      BEQ         MATCH_SUB_TO_EA_L
0000111C                          1987  CHECK_MOVEA_W_AND_MOVE_W
0000111C                          1988  
0000111C  6100 0010               1989      BSR         ISOLATE_OP_CODE
00001120                          1990  
00001120  1C3C 0001               1991      MOVE.B      #MOVEA_WL,D6
00001124  BC03                    1992      CMP.B       D3,D6
00001126  6700 0380               1993      BEQ         MATCH_MOVEA_W
0000112A                          1994  
0000112A  6000 0050               1995      BRA         MATCH_MOVE_W
0000112E                          1996  ISOLATE_OP_CODE
0000112E                          1997  
0000112E  48A7 2000               1998      MOVEM.W     D2, -(SP)
00001132                          1999  
00001132  1E3C 0007               2000      MOVE.B      #7,D7
00001136  EF6A                    2001      LSL.W       D7,D2
00001138  1E3C 000D               2002      MOVE.B      #13,D7
0000113C  EE6A                    2003      LSR.W       D7,D2
0000113E  1602                    2004      MOVE.B      D2,D3
00001140                          2005  
00001140  4C9F 0004               2006      MOVEM.W     (SP)+,D2
00001144  4E75                    2007      RTS
00001146                          2008  CHECK_MOVEA_L_AND_MOVE_L
00001146                          2009  
00001146  61E6                    2010      BSR         ISOLATE_OP_CODE
00001148                          2011  
00001148  1C3C 0001               2012      MOVE.B      #MOVEA_WL,D6
0000114C  BC03                    2013      CMP.B       D3,D6
0000114E  6700 0396               2014      BEQ         MATCH_MOVEA_L
00001152                          2015  
00001152  6000 0040               2016      BRA         MATCH_MOVE_L
00001156                          2017  
00001156                          2018  MATCH_NOP
00001156  43F8 0B25               2019      LEA         pr_NOP,A1
0000115A  103C 000E               2020      MOVE.B      #14,D0
0000115E  4E4F                    2021      TRAP        #15
00001160  6000 FA78               2022      BRA         opdec_return
00001164                          2023  
00001164                          2024  
00001164                          2025  
00001164                          2026  MATCH_MOVE_B
00001164                          2027      ** Move command size into D1
00001164  123C 0002               2028      MOVE.B      #2,D1
00001168                          2029      ** Print command
00001168  103C 000E               2030      MOVE.B      #14,D0
0000116C  43F8 0B29               2031      LEA         pr_MOVE,A1
00001170  4E4F                    2032      TRAP        #15
00001172                          2033      ** Print size
00001172  43F8 0B1A               2034      LEA         pr_BYTE,A1
00001176  4E4F                    2035      TRAP        #15
00001178                          2036  
00001178  6000 0032               2037      BRA         print_move
0000117C                          2038  
0000117C                          2039  MATCH_MOVE_W
0000117C                          2040      ** Move command size into D1
0000117C  123C 0002               2041      MOVE.B      #2,D1
00001180                          2042      ** Print command
00001180  103C 000E               2043      MOVE.B      #14,D0
00001184  43F8 0B29               2044      LEA         pr_MOVE,A1
00001188  4E4F                    2045      TRAP        #15
0000118A                          2046      ** Print size
0000118A  43F8 0B1D               2047      LEA         pr_WORD,A1
0000118E  4E4F                    2048      TRAP        #15
00001190                          2049  
00001190  6000 001A               2050      BRA         print_move
00001194                          2051  
00001194                          2052  MATCH_MOVE_L
00001194                          2053      ** Move command size into D1
00001194  123C 0004               2054      MOVE.B      #4,D1
00001198                          2055      ** Print command
00001198  103C 000E               2056      MOVE.B      #14,D0
0000119C  43F8 0B29               2057      LEA         pr_MOVE,A1
000011A0  4E4F                    2058      TRAP        #15
000011A2                          2059      ** Print size
000011A2  43F8 0B20               2060      LEA         pr_LONG,A1
000011A6  4E4F                    2061      TRAP        #15
000011A8                          2062  
000011A8  6000 0002               2063      BRA         print_move
000011AC                          2064  
000011AC                          2065  print_move
000011AC                          2066      ** Print space
000011AC  43F8 0B16               2067      LEA         pr_space,A1
000011B0  4E4F                    2068      TRAP        #15
000011B2                          2069      ** Decode right side ea
000011B2  1002                    2070      MOVE.B      D2,D0
000011B4  0200 003F               2071      ANDI.B      #%00111111,D0
000011B8  4EB8 0066               2072      JSR         EADecoder
000011BC                          2073      ** Add comma
000011BC  103C 000E               2074      MOVE.B      #14,D0
000011C0  43F8 0B18               2075      LEA         pr_comma,A1
000011C4  4E4F                    2076      TRAP        #15
000011C6                          2077      ** Decode left side ea
000011C6  3002                    2078      MOVE.W      D2,D0
000011C8  0240 0FC0               2079      ANDI.W      #%0000111111000000,D0
000011CC  EC48                    2080      LSR.W       #6,D0
000011CE  4EB8 004E               2081      JSR         EADecoder_left
000011D2                          2082  
000011D2  6000 FA06               2083      BRA         opdec_return
000011D6                          2084  
000011D6                          2085  
000011D6                          2086  MATCH_MOVEQ
000011D6                          2087      ** Print command
000011D6  103C 000E               2088      MOVE.B      #14,D0
000011DA  43F8 0B3A               2089      LEA         pr_MOVEQ,A1
000011DE  4E4F                    2090      TRAP        #15
000011E0                          2091      ** Print space
000011E0  43F8 0B16               2092      LEA         pr_space,A1
000011E4  4E4F                    2093      TRAP        #15
000011E6                          2094      ** Print data
000011E6  1202                    2095      MOVE.B      D2,D1
000011E8  103C 000F               2096      MOVE.B      #15,D0
000011EC  2602                    2097      MOVE.L      D2,D3
000011EE  7410                    2098      MOVE.L      #16,D2
000011F0  4E4F                    2099      TRAP        #15
000011F2  2403                    2100      MOVE.L      D3,D2
000011F4                          2101      ** Decode register
000011F4  3002                    2102      MOVE.W      D2,D0
000011F6  0240 0E00               2103      ANDI.W      #%0000111000000000,D0
000011FA  EC48                    2104      LSR.W       #6,D0
000011FC  4EB8 004E               2105      JSR         EADecoder_left
00001200                          2106  
00001200  6000 F9D8               2107      BRA         opdec_return
00001204                          2108  
00001204                          2109  
00001204                          2110  MATCH_ADDI_B
00001204                          2111      ** Move command size into D1
00001204  123C 0002               2112      MOVE.B      #2,D1
00001208                          2113      ** Print command
00001208  103C 000E               2114      MOVE.B      #14,D0
0000120C  43F8 0B49               2115      LEA         pr_ADDI,A1
00001210  4E4F                    2116      TRAP        #15
00001212                          2117      ** Print size
00001212  43F8 0B1A               2118      LEA         pr_BYTE,A1
00001216  4E4F                    2119      TRAP        #15
00001218                          2120  
00001218  6000 0032               2121      BRA         print_addi
0000121C                          2122  
0000121C                          2123  MATCH_ADDI_W
0000121C                          2124      ** Move command size into D1
0000121C  123C 0002               2125      MOVE.B      #2,D1
00001220                          2126      ** Print command
00001220  103C 000E               2127      MOVE.B      #14,D0
00001224  43F8 0B49               2128      LEA         pr_ADDI,A1
00001228  4E4F                    2129      TRAP        #15
0000122A                          2130      ** Print size
0000122A  43F8 0B1D               2131      LEA         pr_WORD,A1
0000122E  4E4F                    2132      TRAP        #15
00001230                          2133  
00001230  6000 001A               2134      BRA         print_addi
00001234                          2135  
00001234                          2136  MATCH_ADDI_L
00001234                          2137      ** Move command size into D1
00001234  123C 0004               2138      MOVE.B      #4,D1
00001238                          2139      ** Print command
00001238  103C 000E               2140      MOVE.B      #14,D0
0000123C  43F8 0B49               2141      LEA         pr_ADDI,A1
00001240  4E4F                    2142      TRAP        #15
00001242                          2143      ** Print size
00001242  43F8 0B20               2144      LEA         pr_LONG,A1
00001246  4E4F                    2145      TRAP        #15
00001248                          2146  
00001248  6000 0002               2147      BRA         print_addi
0000124C                          2148  
0000124C                          2149  print_addi
0000124C                          2150      ** Print space
0000124C  43F8 0B16               2151      LEA         pr_space,A1
00001250  4E4F                    2152      TRAP        #15
00001252                          2153      ** Print Immediate data
00001252  103C 003C               2154      MOVE.B      #%00111100,D0
00001256  4EB8 0066               2155      JSR         EADecoder
0000125A                          2156      ** Add comma
0000125A  103C 000E               2157      MOVE.B      #14,D0
0000125E  43F8 0B18               2158      LEA         pr_comma,A1
00001262  4E4F                    2159      TRAP        #15
00001264                          2160      ** Decode right side ea
00001264  1002                    2161      MOVE.B      D2,D0
00001266  0200 003F               2162      ANDI.B      #%00111111,D0
0000126A  4EB8 0066               2163      JSR         EADecoder
0000126E                          2164  
0000126E  6000 F96A               2165      BRA         opdec_return
00001272                          2166  
00001272                          2167  
00001272                          2168  MATCH_ADD_TO_REG_B
00001272                          2169      ** Move command size into D1
00001272  123C 0002               2170      MOVE.B      #2,D1
00001276                          2171      ** Print command
00001276  103C 000E               2172      MOVE.B      #14,D0
0000127A  43F8 0B45               2173      LEA         pr_ADD,A1
0000127E  4E4F                    2174      TRAP        #15
00001280                          2175      ** Print size
00001280  43F8 0B1A               2176      LEA         pr_BYTE,A1
00001284  4E4F                    2177      TRAP        #15
00001286                          2178  
00001286  6000 007A               2179      BRA         print_add_to_reg
0000128A                          2180  
0000128A                          2181  MATCH_ADD_TO_REG_W
0000128A                          2182      ** Move command size into D1
0000128A  123C 0002               2183      MOVE.B      #2,D1
0000128E                          2184      ** Print command
0000128E  103C 000E               2185      MOVE.B      #14,D0
00001292  43F8 0B45               2186      LEA         pr_ADD,A1
00001296  4E4F                    2187      TRAP        #15
00001298                          2188      ** Print size
00001298  43F8 0B1D               2189      LEA         pr_WORD,A1
0000129C  4E4F                    2190      TRAP        #15
0000129E                          2191  
0000129E  6000 0062               2192      BRA         print_add_to_reg
000012A2                          2193  
000012A2                          2194  MATCH_ADD_TO_REG_L
000012A2                          2195      ** Move command size into D1
000012A2  123C 0004               2196      MOVE.B      #4,D1
000012A6                          2197      ** Print command
000012A6  103C 000E               2198      MOVE.B      #14,D0
000012AA  43F8 0B45               2199      LEA         pr_ADD,A1
000012AE  4E4F                    2200      TRAP        #15
000012B0                          2201      ** Print size
000012B0  43F8 0B20               2202      LEA         pr_LONG,A1
000012B4  4E4F                    2203      TRAP        #15
000012B6                          2204  
000012B6  6000 004A               2205      BRA         print_add_to_reg
000012BA                          2206  
000012BA                          2207  MATCH_SUB_TO_DN_B
000012BA                          2208      ** Move command size into D1
000012BA  123C 0002               2209      MOVE.B      #2,D1
000012BE                          2210      ** Print command
000012BE  103C 000E               2211      MOVE.B      #14,D0
000012C2  43F8 0B53               2212      LEA         pr_SUB,A1
000012C6  4E4F                    2213      TRAP        #15
000012C8                          2214      ** Print size
000012C8  43F8 0B1A               2215      LEA         pr_BYTE,A1
000012CC  4E4F                    2216      TRAP        #15
000012CE                          2217  
000012CE  6000 0032               2218      BRA         print_add_to_reg
000012D2                          2219  
000012D2                          2220  MATCH_SUB_TO_DN_W
000012D2                          2221      ** Move command size into D1
000012D2  123C 0002               2222      MOVE.B      #2,D1
000012D6                          2223      ** Print command
000012D6  103C 000E               2224      MOVE.B      #14,D0
000012DA  43F8 0B53               2225      LEA         pr_SUB,A1
000012DE  4E4F                    2226      TRAP        #15
000012E0                          2227      ** Print size
000012E0  43F8 0B1D               2228      LEA         pr_WORD,A1
000012E4  4E4F                    2229      TRAP        #15
000012E6                          2230  
000012E6  6000 001A               2231      BRA         print_add_to_reg
000012EA                          2232  
000012EA                          2233  MATCH_SUB_TO_DN_L
000012EA                          2234      ** Move command size into D1
000012EA  123C 0004               2235      MOVE.B      #4,D1
000012EE                          2236      ** Print command
000012EE  103C 000E               2237      MOVE.B      #14,D0
000012F2  43F8 0B53               2238      LEA         pr_SUB,A1
000012F6  4E4F                    2239      TRAP        #15
000012F8                          2240      ** Print size
000012F8  43F8 0B20               2241      LEA         pr_LONG,A1
000012FC  4E4F                    2242      TRAP        #15
000012FE                          2243  
000012FE  6000 0002               2244      BRA         print_add_to_reg
00001302                          2245  
00001302                          2246  print_add_to_reg
00001302                          2247      ** Print space
00001302  43F8 0B16               2248      LEA         pr_space,A1
00001306  4E4F                    2249      TRAP        #15
00001308                          2250      ** Print source
00001308  1002                    2251      MOVE.B      D2,D0
0000130A  0200 003F               2252      ANDI.B      #%00111111,D0
0000130E  4EB8 0066               2253      JSR         EADecoder
00001312                          2254      ** Add comma
00001312  103C 000E               2255      MOVE.B      #14,D0
00001316  43F8 0B18               2256      LEA         pr_comma,A1
0000131A  4E4F                    2257      TRAP        #15
0000131C                          2258      ** Print destination
0000131C  3002                    2259      MOVE.W      D2,D0
0000131E  0240 0E00               2260      ANDI.W      #%0000111000000000,D0
00001322  EC48                    2261      LSR.W       #6,D0
00001324  4EB8 004E               2262      JSR         EADecoder_left
00001328                          2263  
00001328  6000 F8B0               2264      BRA         opdec_return
0000132C                          2265  
0000132C                          2266  MATCH_ADD_TO_EA_B
0000132C                          2267      ** Move command size into D1
0000132C  123C 0002               2268      MOVE.B      #2,D1
00001330                          2269      ** Print command
00001330  103C 000E               2270      MOVE.B      #14,D0
00001334  43F8 0B45               2271      LEA         pr_ADD,A1
00001338  4E4F                    2272      TRAP        #15
0000133A                          2273      ** Print size
0000133A  43F8 0B1A               2274      LEA         pr_BYTE,A1
0000133E  4E4F                    2275      TRAP        #15
00001340                          2276  
00001340  6000 007A               2277      BRA         print_add_to_ea
00001344                          2278  
00001344                          2279  MATCH_ADD_TO_EA_W
00001344                          2280      ** Move command size into D1
00001344  123C 0002               2281      MOVE.B      #2,D1
00001348                          2282      ** Print command
00001348  103C 000E               2283      MOVE.B      #14,D0
0000134C  43F8 0B45               2284      LEA         pr_ADD,A1
00001350  4E4F                    2285      TRAP        #15
00001352                          2286      ** Print size
00001352  43F8 0B1D               2287      LEA         pr_WORD,A1
00001356  4E4F                    2288      TRAP        #15
00001358                          2289  
00001358  6000 0062               2290      BRA         print_add_to_ea
0000135C                          2291  
0000135C                          2292  MATCH_ADD_TO_EA_L
0000135C                          2293      ** Move command size into D1
0000135C  123C 0004               2294      MOVE.B      #4,D1
00001360                          2295      ** Print command
00001360  103C 000E               2296      MOVE.B      #14,D0
00001364  43F8 0B45               2297      LEA         pr_ADD,A1
00001368  4E4F                    2298      TRAP        #15
0000136A                          2299      ** Print size
0000136A  43F8 0B20               2300      LEA         pr_LONG,A1
0000136E  4E4F                    2301      TRAP        #15
00001370                          2302  
00001370  6000 004A               2303      BRA         print_add_to_ea
00001374                          2304  
00001374                          2305  MATCH_SUB_TO_EA_B
00001374                          2306      ** Move command size into D1
00001374  123C 0002               2307      MOVE.B      #2,D1
00001378                          2308      ** Print command
00001378  103C 000E               2309      MOVE.B      #14,D0
0000137C  43F8 0B53               2310      LEA         pr_SUB,A1
00001380  4E4F                    2311      TRAP        #15
00001382                          2312      ** Print size
00001382  43F8 0B1A               2313      LEA         pr_BYTE,A1
00001386  4E4F                    2314      TRAP        #15
00001388                          2315  
00001388  6000 0032               2316      BRA         print_add_to_ea
0000138C                          2317  
0000138C                          2318  MATCH_SUB_TO_EA_W
0000138C                          2319      ** Move command size into D1
0000138C  123C 0002               2320      MOVE.B      #2,D1
00001390                          2321      ** Print command
00001390  103C 000E               2322      MOVE.B      #14,D0
00001394  43F8 0B53               2323      LEA         pr_SUB,A1
00001398  4E4F                    2324      TRAP        #15
0000139A                          2325      ** Print size
0000139A  43F8 0B1D               2326      LEA         pr_WORD,A1
0000139E  4E4F                    2327      TRAP        #15
000013A0                          2328  
000013A0  6000 001A               2329      BRA         print_add_to_ea
000013A4                          2330  
000013A4                          2331  MATCH_SUB_TO_EA_L
000013A4                          2332      ** Move command size into D1
000013A4  123C 0004               2333      MOVE.B      #4,D1
000013A8                          2334      ** Print command
000013A8  103C 000E               2335      MOVE.B      #14,D0
000013AC  43F8 0B53               2336      LEA         pr_SUB,A1
000013B0  4E4F                    2337      TRAP        #15
000013B2                          2338      ** Print size
000013B2  43F8 0B20               2339      LEA         pr_LONG,A1
000013B6  4E4F                    2340      TRAP        #15
000013B8                          2341  
000013B8  6000 0002               2342      BRA         print_add_to_ea
000013BC                          2343  
000013BC                          2344  print_add_to_ea
000013BC                          2345      ** Print space
000013BC  43F8 0B16               2346      LEA         pr_space,A1
000013C0  4E4F                    2347      TRAP        #15
000013C2                          2348      ** Print Source
000013C2  3002                    2349      MOVE.W      D2,D0
000013C4  0240 0E00               2350      ANDI.W      #%0000111000000000,D0
000013C8  EC48                    2351      LSR.W       #6,D0
000013CA  4EB8 004E               2352      JSR         EADecoder_left
000013CE                          2353      ** Add comma
000013CE  103C 000E               2354      MOVE.B      #14,D0
000013D2  43F8 0B18               2355      LEA         pr_comma,A1
000013D6  4E4F                    2356      TRAP        #15
000013D8                          2357      ** Print source
000013D8  1002                    2358      MOVE.B      D2,D0
000013DA  0200 003F               2359      ANDI.B      #%00111111,D0
000013DE  4EB8 0066               2360      JSR         EADecoder
000013E2                          2361  
000013E2  6000 F7F6               2362      BRA         opdec_return
000013E6                          2363  
000013E6                          2364  
000013E6                          2365  MATCH_ADDQ_B
000013E6                          2366      ** Move command size into D1
000013E6  123C 0002               2367      MOVE.B      #2,D1
000013EA                          2368      ** Print command
000013EA  103C 000E               2369      MOVE.B      #14,D0
000013EE  43F8 0B4E               2370      LEA         pr_ADDQ,A1
000013F2  4E4F                    2371      TRAP        #15
000013F4                          2372      ** Print size
000013F4  43F8 0B1A               2373      LEA         pr_BYTE,A1
000013F8  4E4F                    2374      TRAP        #15
000013FA                          2375  
000013FA  6000 0032               2376      BRA         print_addq
000013FE                          2377  
000013FE                          2378  MATCH_ADDQ_W
000013FE                          2379      ** Move command size into D1
000013FE  123C 0002               2380      MOVE.B      #2,D1
00001402                          2381      ** Print command
00001402  103C 000E               2382      MOVE.B      #14,D0
00001406  43F8 0B4E               2383      LEA         pr_ADDQ,A1
0000140A  4E4F                    2384      TRAP        #15
0000140C                          2385      ** Print size
0000140C  43F8 0B1D               2386      LEA         pr_WORD,A1
00001410  4E4F                    2387      TRAP        #15
00001412                          2388  
00001412  6000 001A               2389      BRA         print_addq
00001416                          2390  
00001416                          2391  MATCH_ADDQ_L
00001416                          2392      ** Move command size into D1
00001416  123C 0004               2393      MOVE.B      #4,D1
0000141A                          2394      ** Print command
0000141A  103C 000E               2395      MOVE.B      #14,D0
0000141E  43F8 0B4E               2396      LEA         pr_ADDQ,A1
00001422  4E4F                    2397      TRAP        #15
00001424                          2398      ** Print size
00001424  43F8 0B20               2399      LEA         pr_LONG,A1
00001428  4E4F                    2400      TRAP        #15
0000142A                          2401  
0000142A  6000 0002               2402      BRA         print_addq
0000142E                          2403  
0000142E                          2404  print_addq
0000142E                          2405      ** Print space
0000142E  43F8 0B16               2406      LEA         pr_space,A1
00001432  4E4F                    2407      TRAP        #15
00001434                          2408      ** Print hash
00001434  43F8 0B23               2409      LEA         pr_hash,A1
00001438  4E4F                    2410      TRAP        #15
0000143A                          2411      ** Print Immediate data
0000143A  3602                    2412      MOVE.W      D2,D3 * Temporarily move op data
0000143C  3202                    2413      MOVE.W      D2,D1
0000143E  0241 0E00               2414      ANDI.W      #%0000111000000000,D1
00001442  EC49                    2415      LSR.W       #6,D1
00001444  E649                    2416      LSR.W       #3,D1
00001446  143C 0010               2417      MOVE.B      #16,D2
0000144A  303C 000F               2418      MOVE.W      #15,D0
0000144E  4E4F                    2419      TRAP        #15
00001450                          2420  
00001450  3403                    2421      MOVE.W      D3,D2 * Move op data back
00001452                          2422  
00001452                          2423      ** Add comma
00001452  103C 000E               2424      MOVE.B      #14,D0
00001456  43F8 0B18               2425      LEA         pr_comma,A1
0000145A  4E4F                    2426      TRAP        #15
0000145C                          2427      ** Decode right side ea
0000145C  1002                    2428      MOVE.B      D2,D0
0000145E  0200 003F               2429      ANDI.B      #%00111111,D0
00001462  4EB8 0066               2430      JSR         EADecoder
00001466                          2431  
00001466  6000 F772               2432      BRA         opdec_return
0000146A                          2433  
0000146A                          2434  
0000146A                          2435  MATCH_DIVU_W
0000146A                          2436      ** Move command size into D1
0000146A  123C 0002               2437      MOVE.B      #2,D1
0000146E                          2438      ** Print command
0000146E  103C 000E               2439      MOVE.B      #14,D0
00001472  43F8 0B5C               2440      LEA         pr_DIVU,A1
00001476  4E4F                    2441      TRAP        #15
00001478                          2442      ** Print size
00001478  43F8 0B1D               2443      LEA         pr_WORD,A1
0000147C  4E4F                    2444      TRAP        #15
0000147E                          2445      ** Print space
0000147E  43F8 0B16               2446      LEA         pr_space,A1
00001482  4E4F                    2447      TRAP        #15
00001484                          2448      ** Decode right side ea
00001484  1002                    2449      MOVE.B      D2,D0
00001486  0200 003F               2450      ANDI.B      #%00111111,D0
0000148A  4EB8 0066               2451      JSR         EADecoder
0000148E                          2452      ** Add comma
0000148E  103C 000E               2453      MOVE.B      #14,D0
00001492  43F8 0B18               2454      LEA         pr_comma,A1
00001496  4E4F                    2455      TRAP        #15
00001498                          2456      ** Decode left side ea
00001498  3002                    2457      MOVE.W      D2,D0
0000149A  0240 0FC0               2458      ANDI.W      #%0000111111000000,D0
0000149E  EC88                    2459      LSR.L       #6,D0
000014A0  4EB8 004E               2460      JSR         EADecoder_left
000014A4                          2461  
000014A4  6000 F734               2462      BRA         opdec_return
000014A8                          2463  
000014A8                          2464  
000014A8                          2465  
000014A8                          2466  
000014A8                          2467  
000014A8                          2468  
000014A8                          2469  
000014A8                          2470  
000014A8                          2471  
000014A8                          2472  MATCH_MOVEA_W
000014A8                          2473      ** Move command size into D1
000014A8  123C 0002               2474      MOVE.B      #2,D1
000014AC                          2475      ** Print command
000014AC  103C 000E               2476      MOVE.B      #14,D0
000014B0  43F8 0B2E               2477      LEA         pr_MOVEA,A1
000014B4  4E4F                    2478      TRAP        #15
000014B6                          2479      ** Print size
000014B6  43F8 0B1D               2480      LEA         pr_WORD,A1
000014BA  4E4F                    2481      TRAP        #15
000014BC                          2482      ** Print space
000014BC  43F8 0B16               2483      LEA         pr_space,A1
000014C0  4E4F                    2484      TRAP        #15
000014C2                          2485      ** Decode right side ea
000014C2  1002                    2486      MOVE.B      D2,D0
000014C4  0200 003F               2487      ANDI.B      #%00111111,D0
000014C8  4EB8 0066               2488      JSR         EADecoder
000014CC                          2489      ** Add comma
000014CC  103C 000E               2490      MOVE.B      #14,D0
000014D0  43F8 0B18               2491      LEA         pr_comma,A1
000014D4  4E4F                    2492      TRAP        #15
000014D6                          2493      ** Decode left side ea
000014D6  3002                    2494      MOVE.W      D2,D0
000014D8  0240 0FC0               2495      ANDI.W      #%0000111111000000,D0
000014DC  EC88                    2496      LSR.L       #6,D0
000014DE  4EB8 004E               2497      JSR         EADecoder_left
000014E2                          2498  
000014E2  6000 F6F6               2499      BRA         opdec_return
000014E6                          2500  MATCH_MOVEA_L
000014E6                          2501      ** Move command size into D1
000014E6  123C 0004               2502      MOVE.B      #4,D1
000014EA                          2503      ** Print command
000014EA  103C 000E               2504      MOVE.B      #14,D0
000014EE  43F8 0B2E               2505      LEA         pr_MOVEA,A1
000014F2  4E4F                    2506      TRAP        #15
000014F4                          2507      ** Print size
000014F4  43F8 0B20               2508      LEA         pr_LONG,A1
000014F8  4E4F                    2509      TRAP        #15
000014FA                          2510      ** Print space
000014FA  43F8 0B16               2511      LEA         pr_space,A1
000014FE  4E4F                    2512      TRAP        #15
00001500                          2513      ** Decode right side ea
00001500  1002                    2514      MOVE.B      D2,D0
00001502  0200 003F               2515      ANDI.B      #%00111111,D0
00001506  4EB8 0066               2516      JSR         EADecoder
0000150A                          2517      ** Add comma
0000150A  103C 000E               2518      MOVE.B      #14,D0
0000150E  43F8 0B18               2519      LEA         pr_comma,A1
00001512  4E4F                    2520      TRAP        #15
00001514                          2521      ** Decode left side ea
00001514  3002                    2522      MOVE.W      D2,D0
00001516  0240 0FC0               2523      ANDI.W      #%0000111111000000,D0
0000151A  EC88                    2524      LSR.L       #6,D0
0000151C  4EB8 004E               2525      JSR         EADecoder_left
00001520                          2526  
00001520  6000 F6B8               2527      BRA         opdec_return
00001524                          2528  MATCH_ADDA_W
00001524                          2529      ** Move command size into D1
00001524  123C 0002               2530      MOVE.B      #2,D1
00001528                          2531      ** Print command
00001528  103C 000E               2532      MOVE.B      #14,D0
0000152C  43F8 0B40               2533      LEA         pr_ADDA,A1
00001530  4E4F                    2534      TRAP        #15
00001532                          2535      ** Print size
00001532  43F8 0B1D               2536      LEA         pr_WORD,A1
00001536  4E4F                    2537      TRAP        #15
00001538                          2538      ** Print space
00001538  43F8 0B16               2539      LEA         pr_space,A1
0000153C  4E4F                    2540      TRAP        #15
0000153E                          2541      ** Decode right side ea
0000153E  1002                    2542      MOVE.B      D2,D0
00001540  0200 003F               2543      ANDI.B      #%00111111,D0
00001544  4EB8 0066               2544      JSR         EADecoder
00001548                          2545      ** Add comma
00001548  103C 000E               2546      MOVE.B      #14,D0
0000154C  43F8 0B18               2547      LEA         pr_comma,A1
00001550  4E4F                    2548      TRAP        #15
00001552                          2549      ** Decode left side ea
00001552  3002                    2550      MOVE.W      D2,D0
00001554  0240 0FC0               2551      ANDI.W      #%0000111111000000,D0
00001558  EC88                    2552      LSR.L       #6,D0
0000155A  4EB8 004E               2553      JSR         EADecoder_left
0000155E                          2554  
0000155E  6000 F67A               2555      BRA         opdec_return
00001562                          2556  MATCH_ADDA_L
00001562                          2557      ** Move command size into D1
00001562  123C 0004               2558      MOVE.B      #4,D1
00001566                          2559      ** Print command
00001566  103C 000E               2560      MOVE.B      #14,D0
0000156A  43F8 0B40               2561      LEA         pr_ADDA,A1
0000156E  4E4F                    2562      TRAP        #15
00001570                          2563      ** Print size
00001570  43F8 0B20               2564      LEA         pr_LONG,A1
00001574  4E4F                    2565      TRAP        #15
00001576                          2566      ** Print space
00001576  43F8 0B16               2567      LEA         pr_space,A1
0000157A  4E4F                    2568      TRAP        #15
0000157C                          2569      ** Decode right side ea
0000157C  1002                    2570      MOVE.B      D2,D0
0000157E  0200 003F               2571      ANDI.B      #%00111111,D0
00001582  4EB8 0066               2572      JSR         EADecoder
00001586                          2573      ** Add comma
00001586  103C 000E               2574      MOVE.B      #14,D0
0000158A  43F8 0B18               2575      LEA         pr_comma,A1
0000158E  4E4F                    2576      TRAP        #15
00001590                          2577      ** Decode left side ea
00001590  3002                    2578      MOVE.W      D2,D0
00001592  0240 0FC0               2579      ANDI.W      #%0000111111000000,D0
00001596  EC88                    2580      LSR.L       #6,D0
00001598  4EB8 004E               2581      JSR         EADecoder_left
0000159C                          2582  
0000159C  6000 F63C               2583      BRA         opdec_return
000015A0                          2584  MATCH_MULS_W
000015A0                          2585      ** Move command size into D1
000015A0  123C 0002               2586      MOVE.B      #2,D1
000015A4                          2587      ** Print command
000015A4  103C 000E               2588      MOVE.B      #14,D0
000015A8  43F8 0B57               2589      LEA         pr_MULS,A1
000015AC  4E4F                    2590      TRAP        #15
000015AE                          2591      ** Print size
000015AE  43F8 0B1D               2592      LEA         pr_WORD,A1
000015B2  4E4F                    2593      TRAP        #15
000015B4                          2594      ** Print space
000015B4  43F8 0B16               2595      LEA         pr_space,A1
000015B8  4E4F                    2596      TRAP        #15
000015BA                          2597      ** Decode right side ea
000015BA  1002                    2598      MOVE.B      D2,D0
000015BC  0200 003F               2599      ANDI.B      #%00111111,D0
000015C0  4EB8 0066               2600      JSR         EADecoder
000015C4                          2601      ** Add comma
000015C4  103C 000E               2602      MOVE.B      #14,D0
000015C8  43F8 0B18               2603      LEA         pr_comma,A1
000015CC  4E4F                    2604      TRAP        #15
000015CE                          2605      ** Decode left side ea
000015CE  3002                    2606      MOVE.W      D2,D0
000015D0  0240 0FC0               2607      ANDI.W      #%0000111111000000,D0
000015D4  EC88                    2608      LSR.L       #6,D0
000015D6  4EB8 004E               2609      JSR         EADecoder_left
000015DA                          2610  
000015DA  6000 F5FE               2611      BRA         opdec_return
000015DE                          2612  MATCH_RTS
000015DE  43F8 0B65               2613      LEA         pr_RTS,A1
000015E2  103C 000E               2614      MOVE.B      #14,D0
000015E6  4E4F                    2615      TRAP        #15
000015E8  6000 F5F0               2616      BRA         opdec_return
000015EC                          2617  MATCH_CMP_B
000015EC                          2618      ** Move command size into D1
000015EC  123C 0002               2619      MOVE.B      #2,D1
000015F0                          2620      ** Print command
000015F0  103C 000E               2621      MOVE.B      #14,D0
000015F4  43F8 0B69               2622      LEA         pr_CMP,A1
000015F8  4E4F                    2623      TRAP        #15
000015FA                          2624      ** Print size
000015FA  43F8 0B1A               2625      LEA         pr_BYTE,A1
000015FE  4E4F                    2626      TRAP        #15
00001600                          2627      ** Print space
00001600  43F8 0B16               2628      LEA         pr_space,A1
00001604  4E4F                    2629      TRAP        #15
00001606                          2630      ** Decode right side ea
00001606  1002                    2631      MOVE.B      D2,D0
00001608  0200 003F               2632      ANDI.B      #%00111111,D0
0000160C  4EB8 0066               2633      JSR         EADecoder
00001610                          2634      ** Add comma
00001610  103C 000E               2635      MOVE.B      #14,D0
00001614  43F8 0B18               2636      LEA         pr_comma,A1
00001618  4E4F                    2637      TRAP        #15
0000161A                          2638      ** Decode left side ea
0000161A  3002                    2639      MOVE.W      D2,D0
0000161C  0240 0E00               2640      ANDI.W      #%0000111000000000,D0
00001620  EC88                    2641      LSR.L       #6,D0
00001622  4EB8 004E               2642      JSR         EADecoder_left
00001626                          2643  
00001626  6000 F5B2               2644      BRA         opdec_return
0000162A                          2645  MATCH_CMP_W
0000162A                          2646      ** Move command size into D1
0000162A  123C 0002               2647      MOVE.B      #2,D1
0000162E                          2648      ** Print command
0000162E  103C 000E               2649      MOVE.B      #14,D0
00001632  43F8 0B69               2650      LEA         pr_CMP,A1
00001636  4E4F                    2651      TRAP        #15
00001638                          2652      ** Print size
00001638  43F8 0B1D               2653      LEA         pr_WORD,A1
0000163C  4E4F                    2654      TRAP        #15
0000163E                          2655      ** Print space
0000163E  43F8 0B16               2656      LEA         pr_space,A1
00001642  4E4F                    2657      TRAP        #15
00001644  4240                    2658      CLR         D0
00001646                          2659      ** Decode right side ea
00001646  1002                    2660      MOVE.B      D2,D0
00001648  0200 003F               2661      ANDI.B      #%00111111,D0
0000164C  4EB8 0066               2662      JSR         EADecoder
00001650                          2663      ** Add comma
00001650  103C 000E               2664      MOVE.B      #14,D0
00001654  43F8 0B18               2665      LEA         pr_comma,A1
00001658  4E4F                    2666      TRAP        #15
0000165A                          2667      ** Decode left side ea
0000165A  3002                    2668      MOVE.W      D2,D0
0000165C  0240 0E00               2669      ANDI.W      #%0000111000000000,D0
00001660  EC88                    2670      LSR.L       #6,D0
00001662  4EB8 004E               2671      JSR         EADecoder_left
00001666                          2672  
00001666  6000 F572               2673      BRA         opdec_return
0000166A                          2674  MATCH_CMP_L
0000166A                          2675      ** Move command size into D1
0000166A  123C 0004               2676      MOVE.B      #4,D1
0000166E                          2677      ** Print command
0000166E  103C 000E               2678      MOVE.B      #14,D0
00001672  43F8 0B69               2679      LEA         pr_CMP,A1
00001676  4E4F                    2680      TRAP        #15
00001678                          2681      ** Print size
00001678  43F8 0B20               2682      LEA         pr_LONG,A1
0000167C  4E4F                    2683      TRAP        #15
0000167E                          2684      ** Print space
0000167E  43F8 0B16               2685      LEA         pr_space,A1
00001682  4E4F                    2686      TRAP        #15
00001684  4240                    2687      CLR         D0
00001686                          2688      ** Decode right side ea
00001686  1002                    2689      MOVE.B      D2,D0
00001688  0200 003F               2690      ANDI.B      #%00111111,D0
0000168C  4EB8 0066               2691      JSR         EADecoder
00001690                          2692      ** Add comma
00001690  103C 000E               2693      MOVE.B      #14,D0
00001694  43F8 0B18               2694      LEA         pr_comma,A1
00001698  4E4F                    2695      TRAP        #15
0000169A                          2696      ** Decode left side ea
0000169A  3002                    2697      MOVE.W      D2,D0
0000169C  0240 0E00               2698      ANDI.W      #%0000111000000000,D0
000016A0  EC88                    2699      LSR.L       #6,D0
000016A2  4EB8 004E               2700      JSR         EADecoder_left
000016A6                          2701  
000016A6  6000 F532               2702      BRA         opdec_return
000016AA                          2703  MATCH_JSR
000016AA                          2704      ** Print command
000016AA  103C 000E               2705      MOVE.B      #14,D0
000016AE  43F8 0B6D               2706      LEA         pr_JSR,A1
000016B2  4E4F                    2707      TRAP        #15
000016B4                          2708      ** Print space
000016B4  43F8 0B16               2709      LEA         pr_space,A1
000016B8  4E4F                    2710      TRAP        #15
000016BA                          2711      ** Decode right side ea
000016BA  1002                    2712      MOVE.B      D2,D0
000016BC  0200 003F               2713      ANDI.B      #%00111111,D0
000016C0  4EB8 0066               2714      JSR         EADecoder
000016C4                          2715  
000016C4  6000 F514               2716      BRA         opdec_return
000016C8                          2717  MATCH_CLR_B
000016C8                          2718      ** Move command size into D1
000016C8  123C 0002               2719      MOVE.B      #2,D1
000016CC                          2720      ** Print command
000016CC  103C 000E               2721      MOVE.B      #14,D0
000016D0  43F8 0B61               2722      LEA         pr_CLR,A1
000016D4  4E4F                    2723      TRAP        #15
000016D6                          2724      ** Print size
000016D6  43F8 0B1A               2725      LEA         pr_BYTE,A1
000016DA  4E4F                    2726      TRAP        #15
000016DC                          2727      ** Print space
000016DC  43F8 0B16               2728      LEA         pr_space,A1
000016E0  4E4F                    2729      TRAP        #15
000016E2                          2730      ** Decode right side ea
000016E2  1002                    2731      MOVE.B      D2,D0
000016E4  0200 003F               2732      ANDI.B      #%00111111,D0
000016E8  4EB8 0066               2733      JSR         EADecoder
000016EC                          2734  
000016EC  6000 F4EC               2735      BRA         opdec_return
000016F0                          2736  MATCH_CLR_W
000016F0                          2737      ** Move command size into D1
000016F0  123C 0002               2738      MOVE.B      #2,D1
000016F4                          2739      ** Print command
000016F4  103C 000E               2740      MOVE.B      #14,D0
000016F8  43F8 0B61               2741      LEA         pr_CLR,A1
000016FC  4E4F                    2742      TRAP        #15
000016FE                          2743      ** Print size
000016FE  43F8 0B1D               2744      LEA         pr_WORD,A1
00001702  4E4F                    2745      TRAP        #15
00001704                          2746      ** Print space
00001704  43F8 0B16               2747      LEA         pr_space,A1
00001708  4E4F                    2748      TRAP        #15
0000170A                          2749      ** Decode right side ea
0000170A  1002                    2750      MOVE.B      D2,D0
0000170C  0200 003F               2751      ANDI.B      #%00111111,D0
00001710  4EB8 0066               2752      JSR         EADecoder
00001714                          2753  
00001714  6000 F4C4               2754      BRA         opdec_return
00001718                          2755  MATCH_CLR_L
00001718                          2756      ** Move command size into D1
00001718  123C 0004               2757      MOVE.B      #4,D1
0000171C                          2758      ** Print command
0000171C  103C 000E               2759      MOVE.B      #14,D0
00001720  43F8 0B61               2760      LEA         pr_CLR,A1
00001724  4E4F                    2761      TRAP        #15
00001726                          2762      ** Print size
00001726  43F8 0B20               2763      LEA         pr_LONG,A1
0000172A  4E4F                    2764      TRAP        #15
0000172C                          2765      ** Print space
0000172C  43F8 0B16               2766      LEA         pr_space,A1
00001730  4E4F                    2767      TRAP        #15
00001732                          2768      ** Decode right side ea
00001732  1002                    2769      MOVE.B      D2,D0
00001734  0200 003F               2770      ANDI.B      #%00111111,D0
00001738  4EB8 0066               2771      JSR         EADecoder
0000173C                          2772  
0000173C  6000 F49C               2773      BRA         opdec_return
00001740                          2774  MATCH_AND_DN_B
00001740                          2775      ** Move command size into D1
00001740  123C 0002               2776      MOVE.B      #2,D1
00001744                          2777      ** Print command
00001744  103C 000E               2778      MOVE.B      #14,D0
00001748  43F8 0B71               2779      LEA         pr_AND,A1
0000174C  4E4F                    2780      TRAP        #15
0000174E                          2781      ** Print size
0000174E  43F8 0B1A               2782      LEA         pr_BYTE,A1
00001752  4E4F                    2783      TRAP        #15
00001754                          2784      ** Print space
00001754  43F8 0B16               2785      LEA         pr_space,A1
00001758  4E4F                    2786      TRAP        #15
0000175A                          2787      ** Decode right side ea
0000175A  1002                    2788      MOVE.B      D2,D0
0000175C  0200 003F               2789      ANDI.B      #%00111111,D0
00001760  4EB8 0066               2790      JSR         EADecoder
00001764                          2791      ** Add comma
00001764  103C 000E               2792      MOVE.B      #14,D0
00001768  43F8 0B18               2793      LEA         pr_comma,A1
0000176C  4E4F                    2794      TRAP        #15
0000176E                          2795      ** Decode left side ea
0000176E  3002                    2796      MOVE.W      D2,D0
00001770  0240 0E00               2797      ANDI.W      #%0000111000000000,D0
00001774  EC88                    2798      LSR.L       #6,D0
00001776  4EB8 004E               2799      JSR         EADecoder_left
0000177A                          2800  
0000177A  6000 F45E               2801      BRA         opdec_return
0000177E                          2802  MATCH_AND_DN_W
0000177E                          2803      ** Move command size into D1
0000177E  123C 0002               2804      MOVE.B      #2,D1
00001782                          2805      ** Print command
00001782  103C 000E               2806      MOVE.B      #14,D0
00001786  43F8 0B71               2807      LEA         pr_AND,A1
0000178A  4E4F                    2808      TRAP        #15
0000178C                          2809      ** Print size
0000178C  43F8 0B1D               2810      LEA         pr_WORD,A1
00001790  4E4F                    2811      TRAP        #15
00001792                          2812      ** Print space
00001792  43F8 0B16               2813      LEA         pr_space,A1
00001796  4E4F                    2814      TRAP        #15
00001798                          2815      ** Decode right side ea
00001798  1002                    2816      MOVE.B      D2,D0
0000179A  0200 003F               2817      ANDI.B      #%00111111,D0
0000179E  4EB8 0066               2818      JSR         EADecoder
000017A2                          2819      ** Add comma
000017A2  103C 000E               2820      MOVE.B      #14,D0
000017A6  43F8 0B18               2821      LEA         pr_comma,A1
000017AA  4E4F                    2822      TRAP        #15
000017AC                          2823      ** Decode left side ea
000017AC  3002                    2824      MOVE.W      D2,D0
000017AE  0240 0E00               2825      ANDI.W      #%0000111000000000,D0
000017B2  EC88                    2826      LSR.L       #6,D0
000017B4  4EB8 004E               2827      JSR         EADecoder_left
000017B8                          2828  
000017B8  6000 F420               2829      BRA         opdec_return
000017BC                          2830  MATCH_AND_DN_L
000017BC                          2831      ** Move command size into D1
000017BC  123C 0004               2832      MOVE.B      #4,D1
000017C0                          2833      ** Print command
000017C0  103C 000E               2834      MOVE.B      #14,D0
000017C4  43F8 0B71               2835      LEA         pr_AND,A1
000017C8  4E4F                    2836      TRAP        #15
000017CA                          2837      ** Print size
000017CA  43F8 0B20               2838      LEA         pr_LONG,A1
000017CE  4E4F                    2839      TRAP        #15
000017D0                          2840      ** Print space
000017D0  43F8 0B16               2841      LEA         pr_space,A1
000017D4  4E4F                    2842      TRAP        #15
000017D6                          2843      ** Decode right side ea
000017D6  1002                    2844      MOVE.B      D2,D0
000017D8  0200 003F               2845      ANDI.B      #%00111111,D0
000017DC  4EB8 0066               2846      JSR         EADecoder
000017E0                          2847      ** Add comma
000017E0  103C 000E               2848      MOVE.B      #14,D0
000017E4  43F8 0B18               2849      LEA         pr_comma,A1
000017E8  4E4F                    2850      TRAP        #15
000017EA                          2851      ** Decode left side ea
000017EA  3002                    2852      MOVE.W      D2,D0
000017EC  0240 0E00               2853      ANDI.W      #%0000111000000000,D0
000017F0  EC88                    2854      LSR.L       #6,D0
000017F2  4EB8 004E               2855      JSR         EADecoder_left
000017F6                          2856  
000017F6  6000 F3E2               2857      BRA         opdec_return
000017FA                          2858  
000017FA                          2859  MATCH_AND_EA_B
000017FA                          2860      ** Move command size into D1
000017FA  123C 0002               2861      MOVE.B      #2,D1
000017FE                          2862      ** Print command
000017FE  103C 000E               2863      MOVE.B      #14,D0
00001802  43F8 0B71               2864      LEA         pr_AND,A1
00001806  4E4F                    2865      TRAP        #15
00001808                          2866      ** Print size
00001808  43F8 0B1A               2867      LEA         pr_BYTE,A1
0000180C  4E4F                    2868      TRAP        #15
0000180E                          2869      ** Print space
0000180E  43F8 0B16               2870      LEA         pr_space,A1
00001812  4E4F                    2871      TRAP        #15
00001814                          2872      ** Decode left side ea
00001814  3002                    2873      MOVE.W      D2,D0
00001816  0240 0E00               2874      ANDI.W      #%0000111000000000,D0
0000181A  EC88                    2875      LSR.L       #6,D0
0000181C  4EB8 004E               2876      JSR         EADecoder_left
00001820                          2877      ** Add comma
00001820  103C 000E               2878      MOVE.B      #14,D0
00001824  43F8 0B18               2879      LEA         pr_comma,A1
00001828  4E4F                    2880      TRAP        #15
0000182A                          2881      ** Decode right side ea
0000182A  1002                    2882      MOVE.B      D2,D0
0000182C  0200 003F               2883      ANDI.B      #%00111111,D0
00001830  4EB8 0066               2884      JSR         EADecoder
00001834                          2885  
00001834  6000 F3A4               2886      BRA         opdec_return
00001838                          2887  MATCH_AND_EA_W
00001838                          2888      ** Move command size into D1
00001838  123C 0002               2889      MOVE.B      #2,D1
0000183C                          2890      ** Print command
0000183C  103C 000E               2891      MOVE.B      #14,D0
00001840  43F8 0B71               2892      LEA         pr_AND,A1
00001844  4E4F                    2893      TRAP        #15
00001846                          2894      ** Print size
00001846  43F8 0B1D               2895      LEA         pr_WORD,A1
0000184A  4E4F                    2896      TRAP        #15
0000184C                          2897      ** Print space
0000184C  43F8 0B16               2898      LEA         pr_space,A1
00001850  4E4F                    2899      TRAP        #15
00001852                          2900      ** Decode left side ea
00001852  3002                    2901      MOVE.W      D2,D0
00001854  0240 0E00               2902      ANDI.W      #%0000111000000000,D0
00001858  EC88                    2903      LSR.L       #6,D0
0000185A  4EB8 004E               2904      JSR         EADecoder_left
0000185E                          2905      ** Add comma
0000185E  103C 000E               2906      MOVE.B      #14,D0
00001862  43F8 0B18               2907      LEA         pr_comma,A1
00001866  4E4F                    2908      TRAP        #15
00001868                          2909      ** Decode right side ea
00001868  1002                    2910      MOVE.B      D2,D0
0000186A  0200 003F               2911      ANDI.B      #%00111111,D0
0000186E  4EB8 0066               2912      JSR         EADecoder
00001872                          2913  
00001872  6000 F366               2914      BRA         opdec_return
00001876                          2915  MATCH_AND_EA_L
00001876                          2916      ** Move command size into D1
00001876  123C 0004               2917      MOVE.B      #4,D1
0000187A                          2918      ** Print command
0000187A  103C 000E               2919      MOVE.B      #14,D0
0000187E  43F8 0B71               2920      LEA         pr_AND,A1
00001882  4E4F                    2921      TRAP        #15
00001884                          2922      ** Print size
00001884  43F8 0B20               2923      LEA         pr_LONG,A1
00001888  4E4F                    2924      TRAP        #15
0000188A                          2925      ** Print space
0000188A  43F8 0B16               2926      LEA         pr_space,A1
0000188E  4E4F                    2927      TRAP        #15
00001890                          2928      ** Decode left side ea
00001890  3002                    2929      MOVE.W      D2,D0
00001892  0240 0E00               2930      ANDI.W      #%0000111000000000,D0
00001896  EC88                    2931      LSR.L       #6,D0
00001898  4EB8 004E               2932      JSR         EADecoder_left
0000189C                          2933      ** Add comma
0000189C  103C 000E               2934      MOVE.B      #14,D0
000018A0  43F8 0B18               2935      LEA         pr_comma,A1
000018A4  4E4F                    2936      TRAP        #15
000018A6                          2937      ** Decode right side ea
000018A6  1002                    2938      MOVE.B      D2,D0
000018A8  0200 003F               2939      ANDI.B      #%00111111,D0
000018AC  4EB8 0066               2940      JSR         EADecoder
000018B0                          2941  
000018B0  6000 F328               2942      BRA         opdec_return
000018B4                          2943  
000018B4                          2944  
000018B4                          2945  
000018B4                          2946  
000018B4                          2947  
000018B4                          2948  
000018B4                          2949  
000018B4                          2950  
000018B4                          2951  
000018B4                          2952  
000018B4                          2953  
000018B4                          2954  
000018B4                          2955  
000018B4                          2956  
000018B4                          2957  MATCH_MOVEM_TO_MEM_W
000018B4  3A02                    2958      MOVE.W      D2,D5       *REMOVE
000018B6                          2959  MATCH_MOVEM_TO_MEM_L
000018B6  3A02                    2960      MOVE.W      D2,D5       *REMOVE
000018B8                          2961  MATCH_MOVEM_TO_REG_W
000018B8  3A02                    2962      MOVE.W      D2,D5       *REMOVE
000018BA                          2963  MATCH_MOVEM_TO_REG_L
000018BA  3A02                    2964      MOVE.W      D2,D5       *REMOVE
000018BC                          2965  
000018BC                          2966  
000018BC                          2967  MATCH_DIVU
000018BC  3A02                    2968      MOVE.W      D2,D5       *REMOVE
000018BE                          2969  MATCH_OR_DN_B
000018BE  3A02                    2970      MOVE.W      D2,D5       *REMOVE
000018C0                          2971  MATCH_OR_DN_W
000018C0  3A02                    2972      MOVE.W      D2,D5       *REMOVE
000018C2                          2973  MATCH_OR_DN_L
000018C2  3A02                    2974      MOVE.W      D2,D5       *REMOVE
000018C4                          2975  MATCH_OR_EA_B
000018C4  3A02                    2976      MOVE.W      D2,D5       *REMOVE
000018C6                          2977  MATCH_OR_EA_W
000018C6  3A02                    2978      MOVE.W      D2,D5       *REMOVE
000018C8                          2979  MATCH_OR_EA_L
000018C8  3A02                    2980      MOVE.W      D2,D5       *REMOVE
000018CA                          2981  
000018CA                          2982  MATCH_LEA
000018CA  3A02                    2983      MOVE.W      D2,D5       *REMOVE
000018CC                          2984  
000018CC                          2985  MATCH_MULS_L
000018CC  3A02                    2986      MOVE.W      D2,D5       *REMOVE
000018CE                          2987  
000018CE                          2988  
000018CE                          2989  
000018CE                          2990  -------------------- end include --------------------
000018CE                          2991          
000018CE= 45 6E 74 65 72 20 ...   2992  MESSAGE     DC.B    'Enter the address of compiled code: ',0
000018F3= 49 6E 76 61 6C 69 ...   2993  ERROR_MSG   DC.B    'Invalid input, please rerun',0
0000190F= 20 00                   2994  SPACER      DC.B    ' ',0
00001911                          2995  
00001911                          2996  
00003000                          2997          ORG     $3000
00003000                          2998  program_start        
00003000                          2999  
00003000                          3000  
00003000                          3001  *------Code for input-------
00003000                          3002          
00003000  43F8 18CE               3003          LEA     MESSAGE,A1      *Code block for first message
00003004  103C 000E               3004          MOVE.B  #14,D0
00003008  4E4F                    3005          TRAP    #15
0000300A                          3006         
0000300A  227C 00004000           3007          MOVEA.L #$4000, A1
00003010  103C 0002               3008          MOVE.B  #2,D0           *Code block for reading input
00003014  4E4F                    3009          TRAP    #15   
00003016  3001                    3010          MOVE.W  D1,D0
00003018                          3011          
00003018  2049                    3012          MOVEA.L A1,A0           *Move the contents of A1 to A0 for the conversion
0000301A  4EB8 0000               3013          JSR     A2H             *Branch to Connor's conversion code      
0000301E                          3014          
0000301E  2040                    3015          MOVEA.L D0,A0
00003020                          3016          
00003020  0C50 FFFF               3017          CMPI.W  #$FFFF,(A0)
00003024  6700 0028               3018          BEQ     input_error
00003028                          3019      
00003028                          3020  loop_start
00003028                          3021          
00003028  2208                    3022          MOVE.L  A0,D1           *Print out the address we're working on
0000302A  7410                    3023          MOVE.L  #16,D2          
0000302C  700F                    3024          MOVE.L  #15,D0          
0000302E  4E4F                    3025          TRAP    #15
00003030                          3026  
00003030  700E                    3027          MOVE.L  #14,D0
00003032  43F8 190F               3028          LEA     SPACER,A1
00003036  4E4F                    3029          TRAP    #15
00003038                          3030          
00003038  3418                    3031          MOVE.W  (A0)+,D2
0000303A  0C42 FFFF               3032          CMPI.W  #$FFFF,D2
0000303E  6700 0016               3033          BEQ     Done
00003042                          3034          
00003042  6100 DB7C               3035          BSR     OpDecoder
00003046                          3036          
00003046  700D                    3037          MOVE.L  #13,D0
00003048  4E4F                    3038          TRAP    #15
0000304A                          3039          
0000304A  4EF8 3028               3040          JMP     loop_start
0000304E                          3041          
0000304E                          3042  input_error        
0000304E  700D                    3043          MOVE.L  #13,D0
00003050  43F8 18F3               3044          LEA     ERROR_MSG,A1
00003054  4E4F                    3045          TRAP    #15
00003056                          3046  Done        
00003056  FFFF FFFF               3047          SIMHALT
0000305A                          3048          END    $3000

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
A2H                 0
ABS_LONG            39
ABS_WORD            38
ADDA_L              7
ADDA_W              3
ADDBYTELOOP         24
ADDBYTES            1C
ADDI_B              18
ADDI_L              1A
ADDI_RETURN         BD6
ADDI_W              19
ADDQ                5
ADDQ_B              0
ADDQ_L              2
ADDQ_W              1
ADD_ADDA            D
ADD_TO_EA_B         4
ADD_TO_EA_L         6
ADD_TO_EA_W         5
ADD_TO_REG_B        0
ADD_TO_REG_L        2
ADD_TO_REG_W        1
AN                  8
AS                  0
ASL                 383
ASR                 387
BCC                 6
BCC_16              0
BCC_32              FF
CC_CC               4
CC_CS               5
CC_EQ               7
CC_F                1
CC_GE               C
CC_GT               E
CC_HI               2
CC_LE               F
CC_LS               3
CC_LT               D
CC_MI               B
CC_NE               6
CC_PL               A
CC_T                0
CC_VC               8
CC_VS               9
CHECK_ADDI          10B6
CHECK_ADDQ          1094
CHECK_ADD_ADDA      103E
CHECK_BCC           CD6
CHECK_BCC_16        D96
CHECK_BCC_32        E3E
CHECK_BCC_8         CEE
CHECK_CMP           EFA
CHECK_DIVU_OR       FC0
CHECK_FOUR_BIT_SIG  C4E
CHECK_MOVEA_L_AND_MOVE_L  1146
CHECK_MOVEA_W_AND_MOVE_W  111C
CHECK_MOVEM         100E
CHECK_MULS_LEA_CLR_JSR_RTS  F20
CHECK_MULS_W_AND    F72
CHECK_NOP           C40
CHECK_SHIFT         184
CHECK_SHIFT_AND_ROTATE  C00
CHECK_SUB           10DC
CLR_B               108
CLR_L               10A
CLR_W               109
CMP                 B
CMP_B               0
CMP_L               2
CMP_W               1
CONV_END            2C
CR                  D
DEC_ABS_LONG        116
DEC_ABS_WORD        10A
DEC_AN              12E
DEC_DN              122
DEC_IMMEDIATE       EE
DEC_INDIRECT        13A
DEC_POST_INC        14E
DEC_PRE_DEC         168
DEC_RETURN          D0
DIVU                3
DIVU_OR             8
DN                  0
DN_B                0
DN_L                2
DN_W                1
DONE                3056
EADECODER           66
EADECODER_LEFT      4E
EA_B                4
EA_L                6
EA_W                5
ERROR               B08
ERROR_MSG           18F3
EXECUTEPRINTSHIFTDIRECTION  226
EXECUTEPRINTSHIFTSIZE  266
EXECUTESHIFTOPCODEPRINT  1FA
FOUR_BIT_RETURN     BCE
GETSHIFTDESTREG     1AA
GET_BCC_DESTINATION_ADDRESS  33A
GET_BCC_DISPLACEMENT_16BIT  326
GET_BCC_DISPLACEMENT_32BIT  32C
GET_BCC_DISPLACEMENT_8BIT  320
GET_COUNT_REGISTER_VAL  2A8
GET_CURRENT_ADDRESS  332
GET_DIRECTION       2D0
GET_IS_REGISTER_OR_IMMEDIATE  2E4
GET_SHIFT_OPCODE    2FC
GET_SIZE            2BC
IMMEDIATE           3C
IMM_SKIP            E8
IMM_WORD            106
INDIRECT            10
INPUT_ERROR         304E
ISOLATE_CC_CODE_FOR_BCC  EE6
ISOLATE_OP_CODE     112E
JSR                 13A
L                   1
LEA                 7
LEFT_SKIP           6A
LF                  A
LOOP_START          3028
LS                  1
LSL                 38F
LSR                 38B
MATCH_ADDA_L        1562
MATCH_ADDA_W        1524
MATCH_ADDI_B        1204
MATCH_ADDI_L        1234
MATCH_ADDI_W        121C
MATCH_ADDQ_B        13E6
MATCH_ADDQ_L        1416
MATCH_ADDQ_W        13FE
MATCH_ADD_TO_EA_B   132C
MATCH_ADD_TO_EA_L   135C
MATCH_ADD_TO_EA_W   1344
MATCH_ADD_TO_REG_B  1272
MATCH_ADD_TO_REG_L  12A2
MATCH_ADD_TO_REG_W  128A
MATCH_AND_DN_B      1740
MATCH_AND_DN_L      17BC
MATCH_AND_DN_W      177E
MATCH_AND_EA_B      17FA
MATCH_AND_EA_L      1876
MATCH_AND_EA_W      1838
MATCH_ASL           31A
MATCH_ASR           318
MATCH_CC_CC_16      4BE
MATCH_CC_CC_32      4EC
MATCH_CC_CC_8       490
MATCH_CC_CS_16      548
MATCH_CC_CS_32      576
MATCH_CC_CS_8       51A
MATCH_CC_EQ_16      65C
MATCH_CC_EQ_32      68A
MATCH_CC_EQ_8       62E
MATCH_CC_F_16       38C
MATCH_CC_F_32       38E
MATCH_CC_F_8        38A
MATCH_CC_GE_16      90E
MATCH_CC_GE_32      93C
MATCH_CC_GE_8       8E0
MATCH_CC_GT_16      A22
MATCH_CC_GT_32      A50
MATCH_CC_GT_8       9F4
MATCH_CC_HI_16      3B2
MATCH_CC_HI_32      3DA
MATCH_CC_HI_8       390
MATCH_CC_LE_16      AAC
MATCH_CC_LE_32      ADA
MATCH_CC_LE_8       A7E
MATCH_CC_LS_16      434
MATCH_CC_LS_32      462
MATCH_CC_LS_8       406
MATCH_CC_LT_16      998
MATCH_CC_LT_32      9C6
MATCH_CC_LT_8       96A
MATCH_CC_MI_16      884
MATCH_CC_MI_32      8B2
MATCH_CC_MI_8       856
MATCH_CC_NE_16      5D2
MATCH_CC_NE_32      600
MATCH_CC_NE_8       5A4
MATCH_CC_PL_16      7FA
MATCH_CC_PL_32      828
MATCH_CC_PL_8       7CC
MATCH_CC_T_16       386
MATCH_CC_T_32       388
MATCH_CC_T_8        384
MATCH_CC_VC_16      6E6
MATCH_CC_VC_32      714
MATCH_CC_VC_8       6B8
MATCH_CC_VS_16      770
MATCH_CC_VS_32      79E
MATCH_CC_VS_8       742
MATCH_CLR_B         16C8
MATCH_CLR_L         1718
MATCH_CLR_W         16F0
MATCH_CMP_B         15EC
MATCH_CMP_L         166A
MATCH_CMP_W         162A
MATCH_DIVU          18BC
MATCH_DIVU_W        146A
MATCH_JSR           16AA
MATCH_LEA           18CA
MATCH_LSL           314
MATCH_LSR           316
MATCH_MOVEA_L       14E6
MATCH_MOVEA_W       14A8
MATCH_MOVEM_TO_MEM_L  18B6
MATCH_MOVEM_TO_MEM_W  18B4
MATCH_MOVEM_TO_REG_L  18BA
MATCH_MOVEM_TO_REG_W  18B8
MATCH_MOVEQ         11D6
MATCH_MOVE_B        1164
MATCH_MOVE_L        1194
MATCH_MOVE_W        117C
MATCH_MULS_L        18CC
MATCH_MULS_W        15A0
MATCH_NOP           1156
MATCH_OR_DN_B       18BE
MATCH_OR_DN_L       18C2
MATCH_OR_DN_W       18C0
MATCH_OR_EA_B       18C4
MATCH_OR_EA_L       18C8
MATCH_OR_EA_W       18C6
MATCH_ROL           31C
MATCH_ROR           31E
MATCH_RTS           15DE
MATCH_SUB_TO_DN_B   12BA
MATCH_SUB_TO_DN_L   12EA
MATCH_SUB_TO_DN_W   12D2
MATCH_SUB_TO_EA_B   1374
MATCH_SUB_TO_EA_L   13A4
MATCH_SUB_TO_EA_W   138C
MESSAGE             18CE
MOVEA_WL            1
MOVEM_RETURN        BD2
MOVEM_TO_MEM_L      123
MOVEM_TO_MEM_W      122
MOVEM_TO_REG_L      133
MOVEM_TO_REG_W      132
MOVEQ_              7
MOVE_B              1
MOVE_L              2
MOVE_W              3
MULS_L              130
MULS_LEA_CLR_JSR_RTS  4
MULS_OP_W           7
MULS_W_AND          C
NOP                 4E71
NOP_RETURN          BCA
NUMSUB              32
NUMSUBRTN           E
OPDECODER           BC0
OPDEC_RETURN        BDA
OUTPUT              10000
POST_INC            18
PRE_DEC             20
PRINTARITHSHIFT     1E2
PRINTHEX            33E
PRINTLOGICSHIFT     1EE
PRINTROTATE         1D6
PRINTSHIFT          28C
PRINTSHIFTBYTE      242
PRINTSHIFTDATA      1BE
PRINTSHIFTLEFT      21A
PRINTSHIFTLONG      25A
PRINTSHIFTREG       284
PRINTSHIFTRIGHT     20E
PRINTSHIFTWORD      24E
PRINTSIZEBYTE       35A
PRINTSIZELONG       376
PRINTSIZEWORD       368
PRINTSTRING         352
PRINT_ADDI          124C
PRINT_ADDQ          142E
PRINT_ADD_TO_EA     13BC
PRINT_ADD_TO_REG    1302
PRINT_MOVE          11AC
PROGRAM_START       3000
PR_ADD              B45
PR_ADDA             B40
PR_ADDI             B49
PR_ADDQ             B4E
PR_AND              B71
PR_BCC_CC           B75
PR_BCC_CS           B79
PR_BCC_EQ           B7D
PR_BCC_GE           B81
PR_BCC_GT           B85
PR_BCC_HI           B89
PR_BCC_LE           B8D
PR_BCC_LS           B91
PR_BCC_LT           B95
PR_BCC_MI           B99
PR_BCC_NE           B9D
PR_BCC_PL           BA1
PR_BCC_VC           BA5
PR_BCC_VS           BA9
PR_BYTE             B1A
PR_CLR              B61
PR_CMP              B69
PR_COMMA            B18
PR_DIVU             B5C
PR_ERROR            BBA
PR_HASH             B23
PR_JSR              B6D
PR_LONG             B20
PR_MOVE             B29
PR_MOVEA            B2E
PR_MOVEM            B34
PR_MOVEQ            B3A
PR_MULS             B57
PR_NOP              B25
PR_REG              182
PR_RTS              B65
PR_SHIFT_AS         BB0
PR_SHIFT_L          BB6
PR_SHIFT_LS         BB3
PR_SHIFT_R          BB8
PR_SHIFT_RO         BAD
PR_SPACE            B16
PR_SUB              B53
PR_WORD             B1D
R                   0
READFIRSTFOURBITS   BE0
READFIRSTTENBITS    BF2
RO                  3
ROL                 39F
ROR                 39B
RTS                 4E75
SHIFT               E
SHIFT_BYTE          0
SHIFT_IMMED         0
SHIFT_LONG          3
SHIFT_REGISTER      1
SHIFT_WORD          1
SPACER              190F
SUB                 9
SUB_TO_DN_B         0
SUB_TO_DN_L         2
SUB_TO_DN_W         1
SUB_TO_EA_B         4
SUB_TO_EA_L         6
SUB_TO_EA_W         5
UPSEND              46
UPSUB               3C
UPSUBRTN            16

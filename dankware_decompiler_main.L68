00001000 Starting Address
Assembler used: EASy68K Editor/Assembler v5.15.04
Created On: 3/10/2017 4:27:33 PM

00000000                             1  *-----------------------------------------------------------
00000000                             2  * Title      : Main Driver Program
00000000                             3  * Written by : Arsany Azmy, Connor McGwire
00000000                             4  * Date       :
00000000                             5  * Description:
00000000                             6  *-----------------------------------------------------------
00000000  =0000000D                  7  CR      EQU     $0D
00000000  =0000000A                  8  LF      EQU     $0A
00000000                             9  
00000000                            10  
00000000                            11  *** Common strings for printing
00000000= 20 00                     12  pr_space    DC.B    ' ',0
00000002= 20 20 00                  13  pr_space2   DC.B    '  ',0
00000005= 20 20 20 00               14  pr_space3   DC.B    '   ',0
00000009= 20 20 20 20 00            15  pr_space4   DC.B    '    ',0
0000000E= 20 20 20 20 20 00         16  pr_space5   DC.B    '     ',0
00000014= 2C 00                     17  pr_comma    DC.B    ',',0
00000016= 2E 42 00                  18  pr_BYTE     DC.B    '.B',0
00000019= 2E 57 00                  19  pr_WORD     DC.B    '.W',0
0000001C= 2E 4C 00                  20  pr_LONG     DC.B    '.L',0
0000001F= 23 00                     21  pr_hash     DC.B    '#',0
00000021= 23 24 00                  22  pr_hextag   DC.B    '#$',0
00000024= 2D 00                     23  pr_hyphen   DC.B    '-',0
00000026= 2F 00                     24  pr_slash    DC.B    '/',0
00000028                            25  
00000028                            26  
00000028                            27  ** Command strings constants
00000028= 4E 4F 50 00               28  pr_NOP      DC.B    'NOP',0
0000002C= 4D 4F 56 45 00            29  pr_MOVE     DC.B    'MOVE',0
00000031= 4D 4F 56 45 41 00         30  pr_MOVEA    DC.B    'MOVEA',0
00000037= 4D 4F 56 45 4D 00         31  pr_MOVEM    DC.B    'MOVEM',0
0000003D= 41 44 44 41 00            32  pr_ADDA     DC.B    'ADDA',0
00000042= 4D 55 4C 53 00            33  pr_MULS     DC.B    'MULS',0
00000047= 43 4C 52 00               34  pr_CLR      DC.B    'CLR',0
0000004B= 52 54 53 00               35  pr_RTS      DC.B    'RTS',0
0000004F= 43 4D 50 00               36  pr_CMP      DC.B    'CMP',0
00000053= 4A 53 52 00               37  pr_JSR      DC.B    'JSR',0
00000057= 41 4E 44 00               38  pr_AND      DC.B    'AND',0
0000005B= 4D 4F 56 45 51 00         39  pr_MOVEQ    DC.B    'MOVEQ',0
00000061= 41 44 44 00               40  pr_ADD      DC.B    'ADD',0
00000065= 41 44 44 49 00            41  pr_ADDI     DC.B    'ADDI',0
0000006A= 41 44 44 51 00            42  pr_ADDQ     DC.B    'ADDQ',0
0000006F= 53 55 42 00               43  pr_SUB      DC.B    'SUB',0
00000073= 44 49 56 55 00            44  pr_DIVU     DC.B    'DIVU',0
00000078                            45  
00000078= 44 00                     46  pr_reg      DC.B    'D',0
0000007A                            47  
0000007A= 52 4F 00                  48  pr_SHIFT_RO   DC.B  'RO',0
0000007D= 41 53 00                  49  pr_SHIFT_AS   DC.B  'AS',0
00000080= 4C 53 00                  50  pr_SHIFT_LS   DC.B  'LS',0
00000083= 4C 00                     51  pr_SHIFT_L    DC.B  'L',0
00000085= 52 00                     52  pr_SHIFT_R    DC.B  'R',0
00000087                            53  
00000087= 45 52 52 4F 52 00         54  pr_ERROR    DC.B    'ERROR',0
0000008D                            55  
0000008D= 42 43 43 00               56  pr_BCC_CC   DC.B    'BCC',0
00000091= 42 43 53 00               57  pr_BCC_CS   DC.B    'BCS',0
00000095= 42 45 51 00               58  pr_BCC_EQ   DC.B    'BEQ',0
00000099= 42 47 45 00               59  pr_BCC_GE   DC.B    'BGE',0
0000009D= 42 47 54 00               60  pr_BCC_GT   DC.B    'BGT',0
000000A1= 42 48 49 00               61  pr_BCC_HI   DC.B    'BHI',0
000000A5= 42 4C 45 00               62  pr_BCC_LE   DC.B    'BLE',0
000000A9= 42 4C 53 00               63  pr_BCC_LS   DC.B    'BLS',0
000000AD= 42 4C 54 00               64  pr_BCC_LT   DC.B    'BLT',0
000000B1= 42 4D 49 00               65  pr_BCC_MI   DC.B    'BMI',0
000000B5= 42 4E 45 00               66  pr_BCC_NE   DC.B    'BNE',0
000000B9= 42 50 4C 00               67  pr_BCC_PL   DC.B    'BPL',0
000000BD= 42 56 43 00               68  pr_BCC_VC   DC.B    'BVC',0
000000C1= 42 56 53 00               69  pr_BCC_VS   DC.B    'BVS',0
000000C5                            70  
000000C5                            71  ** Register constants
000000C5= 44 30 00                  72  pr_d0       DC.B    'D0',0
000000C8= 44 31 00                  73  pr_d1       DC.B    'D1',0
000000CB= 44 32 00                  74  pr_d2       DC.B    'D2',0
000000CE= 44 33 00                  75  pr_d3       DC.B    'D3',0
000000D1= 44 34 00                  76  pr_d4       DC.B    'D4',0
000000D4= 44 35 00                  77  pr_d5       DC.B    'D5',0
000000D7= 44 36 00                  78  pr_d6       DC.B    'D6',0
000000DA= 44 37 00                  79  pr_d7       DC.B    'D7',0
000000DD                            80  
000000DD= 41 30 00                  81  pr_a0       DC.B    'A0',0
000000E0= 41 31 00                  82  pr_a1       DC.B    'A1',0
000000E3= 41 32 00                  83  pr_a2       DC.B    'A2',0
000000E6= 41 33 00                  84  pr_a3       DC.B    'A3',0
000000E9= 41 34 00                  85  pr_a4       DC.B    'A4',0
000000EC= 41 35 00                  86  pr_a5       DC.B    'A5',0
000000EF= 41 36 00                  87  pr_a6       DC.B    'A6',0
000000F2= 41 37 00                  88  pr_a7       DC.B    'A7',0
000000F5                            89  
000000F5                            90  ** Messages
000000F5= 45 6E 74 65 72 20 ...     91  MESSAGE     DC.B    'Enter the address of compiled code: ',0
0000011A= 0D 0A 50 6C 65 61 ...     92  MESSAGE2    DC.B    CR,LF,'Please hit enter',0
0000012D= 49 6E 76 61 6C 69 ...     93  ERROR_MSG   DC.B    'Invalid input, please rerun',0
00000149= 45 6E 64 20 6F 66 ...     94  DONE_MSG    DC.B    'End of program found!',0
0000015F                            95  
00001000                            96  start   ORG     $1000
00001000                            97  
00001000                            98  program_start
00001000                            99  
00001000                           100  *------Code for input-------
00001000                           101  
00001000  43F8 00F5                102          LEA     MESSAGE,A1      *Code block for first message
00001004  103C 000E                103          MOVE.B  #14,D0
00001008  4E4F                     104          TRAP    #15
0000100A                           105  
0000100A  227C 00004000            106          MOVEA.L #$4000, A1
00001010  103C 0002                107          MOVE.B  #2,D0           *Code block for reading input
00001014  4E4F                     108          TRAP    #15
00001016  3001                     109          MOVE.W  D1,D0
00001018                           110  
00001018  2049                     111          MOVEA.L A1,A0           *Move the contents of A1 to A0 for the conversion
0000101A  4EB9 0000108E            112          JSR     A2H             *Branch to Connor's conversion code
00001020                           113  
00001020  2040                     114          MOVEA.L D0,A0
00001022                           115  
00001022  0C50 FFFF                116          CMPI.W  #$FFFF,(A0)
00001026  6700 0032                117          BEQ     input_error
0000102A                           118  
0000102A                           119  loop_start
0000102A                           120  
0000102A  2208                     121          MOVE.L  A0,D1           *Print out the address we're working on
0000102C  7410                     122          MOVE.L  #16,D2
0000102E  700F                     123          MOVE.L  #15,D0
00001030  4E4F                     124          TRAP    #15
00001032                           125  
00001032  700E                     126          MOVE.L  #14,D0
00001034  43F8 0009                127          LEA     pr_space4,A1
00001038  4E4F                     128          TRAP    #15
0000103A                           129  
0000103A  3418                     130          MOVE.W  (A0)+,D2
0000103C  0C42 FFFF                131          CMPI.W  #$FFFF,D2
00001040  6700 0040                132          BEQ     Done
00001044                           133  
00001044  4EB9 000010DC            134          JSR     OpDecoder
0000104A                           135  
0000104A  700D                     136          MOVE.L  #13,D0
0000104C  4E4F                     137          TRAP    #15
0000104E                           138          
0000104E  5245                     139          ADD     #1,D5       *Increment d5 by 1
00001050  BA7C 001F                140          CMP     #31,D5      *Check if theres 31 lines of output
00001054  6700 0010                141          BEQ     clr_scrn    *If theres 20 lines, clear the screen and prompt
00001058                           142  
00001058  60D0                     143          BRA     loop_start
0000105A                           144  
0000105A                           145  input_error
0000105A  700D                     146          MOVE.L  #13,D0
0000105C  43F8 012D                147          LEA     ERROR_MSG,A1
00001060  4E4F                     148          TRAP    #15
00001062  6000 001E                149          BRA     Done
00001066                           150  clr_scrn
00001066  43F8 011A                151          LEA     MESSAGE2,A1     *Print out initial message
0000106A  103C 000E                152          MOVE.B  #14,D0
0000106E  4E4F                     153          TRAP    #15
00001070                           154          
00001070  103C 0002                155          MOVE.B  #2,D0           *Get user input
00001074  4E4F                     156          TRAP    #15
00001076  1A3C 0000                157          MOVE.B  #0,D5
0000107A  60AE                     158          BRA     loop_start
0000107C                           159          
0000107C  103C 0009                160          MOVE.B  #9,D0           *halt the simulator
00001080  4E4F                     161          TRAP    #15
00001082                           162          
00001082                           163  Done
00001082  700E                     164          MOVE.L  #14,D0
00001084  43F8 0149                165          LEA     DONE_MSG,A1
00001088  4E4F                     166          TRAP    #15
0000108A  FFFF FFFF                167          SIMHALT
0000108E                           168  
0000108E                           169          INCLUDE 'ASCII_HEX_Conversions.x68'
0000108E                           170  
0000108E                           171  
0000108E                           172  
0000108E                           173  A2H     *Converts and ASCII Byte string into HEX; Size WORD
0000108E  48E7 7FFE                174          MOVEM.L     D1-D7/A0-A6, -(SP)  
00001092                           175          
00001092  3400                     176          MOVE.W  D0,D2
00001094  3202                     177          MOVE.W  D2,D1                   *Store length of string into D1 for looping
00001096  2248                     178          MOVEA.L A0,A1                   *Copy starting point of string
00001098                           179  
00001098  6000 0026                180          BRA     numSub
0000109C                           181  numSubRTN
0000109C  2049                     182          MOVEA.L A1,A0                   *Restore address position
0000109E  3202                     183          MOVE.W  D2,D1                   *Reset loop counter
000010A0                           184          
000010A0  6000 0028                185          BRA     upSub
000010A4                           186  upSubRTN        
000010A4  2049                     187          MOVEA.L A1,A0                   *Restore address position
000010A6  3202                     188          MOVE.W  D2,D1                   *Reset loop counter
000010A8  4240                     189          CLR     D0                      *Clear D0
000010AA                           190  addBytes
000010AA  D018                     191          ADD.B   (A0)+,D0
000010AC  5301                     192          SUBI.B  #1,D1
000010AE  6700 000A                193          BEQ     conv_end
000010B2                           194  addByteLoop
000010B2  E980                     195          ASL.L   #4,D0
000010B4  D018                     196          ADD.B   (A0)+,D0
000010B6  5301                     197          SUBI.B  #1,D1
000010B8  66F8                     198          BNE     addByteLoop
000010BA                           199  conv_end
000010BA  4CDF 7FFE                200          MOVEM.L     (SP)+, D1-D7/A0-A6
000010BE  4E75                     201          RTS
000010C0                           202          
000010C0                           203  numSub  *Convert ASCII 'number' to true number byte; Should not be called outside of the A2H subroutines
000010C0  0418 0030                204          SUBI.B  #$30,(A0)+              *Subtract difference between null ASCII and '0' ASCII
000010C4  5341                     205          SUB.W   #1,D1                   *Decrement loop counter
000010C6  66F8                     206          BNE     numSub                  *If loop has not ended restart
000010C8  60D2                     207          BRA     numSubRTN
000010CA                           208  
000010CA                           209  upSub   *Loops through string to remove any upper case characters 
000010CA                           210          *that may remain in the string
000010CA  0C10 0009                211          CMPI.B  #9,(A0)                 *Check if the value is greater than 0-9
000010CE  6F00 0004                212          BLE     upSEnd                  *If it's not, continue loop
000010D2  5310                     213          SUBI.B  #1,(A0)                 *Otherwise, subtract difference between ASCII 'number' code and 'A' code
000010D4                           214  upSEnd
000010D4  5248                     215          ADDA.W  #1,A0                   *Increment to next position to check for uppercase
000010D6  5341                     216          SUB.W   #1,D1                   *Decrement loop counter
000010D8  66F0                     217          BNE     upSub                   
000010DA  60C8                     218          BRA     upSubRTN
000010DC                           219  
000010DC                           220  
000010DC                           221  -------------------- end include --------------------
000010DC                           222          INCLUDE 'opcodes.x68'
000010DC                           223  
000010DC  =00004E71                224  NOP             EQU $4E71
000010DC  =00000001                225  MOVE_B          EQU %0001
000010DC  =00000003                226  MOVE_W          EQU %0011
000010DC  =00000002                227  MOVE_L          EQU %0010
000010DC  =00000001                228  MOVEA_WL        EQU %001
000010DC  =00000007                229  MOVEQ_          EQU %0111
000010DC                           230  
000010DC  =00000018                231  ADDI_B          EQU %0000011000
000010DC  =00000019                232  ADDI_W          EQU %0000011001
000010DC  =0000001A                233  ADDI_L          EQU %0000011010
000010DC                           234  
000010DC  =0000000D                235  ADD_ADDA        EQU %1101
000010DC  =00000000                236  ADD_TO_REG_B    EQU %000
000010DC  =00000001                237  ADD_TO_REG_W    EQU %001
000010DC  =00000002                238  ADD_TO_REG_L    EQU %010
000010DC  =00000004                239  ADD_TO_EA_B     EQU %100
000010DC  =00000005                240  ADD_TO_EA_W     EQU %101
000010DC  =00000006                241  ADD_TO_EA_L     EQU %110
000010DC  =00000003                242  ADDA_W          EQU %011
000010DC  =00000007                243  ADDA_L          EQU %111
000010DC                           244  
000010DC  =00000005                245  ADDQ            EQU %0101
000010DC  =00000000                246  ADDQ_B          EQU %000
000010DC  =00000001                247  ADDQ_W          EQU %001
000010DC  =00000002                248  ADDQ_L          EQU %010
000010DC                           249  
000010DC  =0000000C                250  MULS_W_AND      EQU %1100
000010DC  =00000007                251  MULS_OP_W       EQU %111
000010DC                           252  
000010DC  =00000009                253  SUB             EQU %1001
000010DC  =00000000                254  SUB_TO_DN_B     EQU %000
000010DC  =00000001                255  SUB_TO_DN_W     EQU %001
000010DC  =00000002                256  SUB_TO_DN_L     EQU %010
000010DC  =00000004                257  SUB_TO_EA_B     EQU %100
000010DC  =00000005                258  SUB_TO_EA_W     EQU %101
000010DC  =00000006                259  SUB_TO_EA_L     EQU %110
000010DC                           260  
000010DC  =00000008                261  DIVU_OR         EQU %1000
000010DC  =00000003                262  DIVU            EQU %011
000010DC                           263  
000010DC  =00000000                264  DN_B            EQU %000
000010DC  =00000001                265  DN_W            EQU %001
000010DC  =00000002                266  DN_L            EQU %010
000010DC  =00000004                267  EA_B            EQU %100
000010DC  =00000005                268  EA_W            EQU %101
000010DC  =00000006                269  EA_L            EQU %110
000010DC                           270  
000010DC  =00000004                271  MULS_LEA_CLR_JSR_RTS_MOVEM    EQU %0100
000010DC  =00004E75                272  RTS             EQU $4E75
000010DC  =00000007                273  LEA             EQU %111
000010DC  =0000013A                274  JSR             EQU %0100111010
000010DC  =00000108                275  CLR_B           EQU %0100001000
000010DC  =00000109                276  CLR_W           EQU %0100001001
000010DC  =0000010A                277  CLR_L           EQU %0100001010
000010DC  =00000130                278  MULS_L          EQU %0100110000
000010DC                           279  
000010DC  =00000122                280  MOVEM_TO_MEM_W  EQU %0100100010
000010DC  =00000123                281  MOVEM_TO_MEM_L  EQU %0100100011
000010DC  =00000132                282  MOVEM_TO_REG_W  EQU %0100110010
000010DC  =00000133                283  MOVEM_TO_REG_L  EQU %0100110011
000010DC                           284  
000010DC  =0000038F                285  LSL             EQU %1110001111
000010DC  =0000038B                286  LSR             EQU %1110001011
000010DC  =00000387                287  ASR             EQU %1110000111
000010DC  =00000383                288  ASL             EQU %1110000011
000010DC  =0000039F                289  ROL             EQU %1110011111
000010DC  =0000039B                290  ROR             EQU %1110011011
000010DC                           291  
000010DC  =0000000B                292  CMP             EQU %1011
000010DC  =00000000                293  CMP_B           EQU %000
000010DC  =00000001                294  CMP_W           EQU %001
000010DC  =00000002                295  CMP_L           EQU %010
000010DC                           296  
000010DC  =00000006                297  BCC             EQU %0110
000010DC  =00000000                298  BCC_16          EQU %00000000
000010DC  =000000FF                299  BCC_32          EQU $FF
000010DC  =00000000                300  CC_T            EQU %0000
000010DC  =00000001                301  CC_F            EQU %0001
000010DC  =00000002                302  CC_HI           EQU %0010
000010DC  =00000003                303  CC_LS           EQU %0011
000010DC  =00000004                304  CC_CC           EQU %0100
000010DC  =00000005                305  CC_CS           EQU %0101
000010DC  =00000006                306  CC_NE           EQU %0110
000010DC  =00000007                307  CC_EQ           EQU %0111
000010DC  =00000008                308  CC_VC           EQU %1000
000010DC  =00000009                309  CC_VS           EQU %1001
000010DC  =0000000A                310  CC_PL           EQU %1010
000010DC  =0000000B                311  CC_MI           EQU %1011
000010DC  =0000000C                312  CC_GE           EQU %1100
000010DC  =0000000D                313  CC_LT           EQU %1101
000010DC  =0000000E                314  CC_GT           EQU %1110
000010DC  =0000000F                315  CC_LE           EQU %1111
000010DC                           316  
000010DC                           317  
000010DC                           318  
000010DC                           319  
000010DC                           320  
000010DC                           321  
000010DC                           322  OpDecoder
000010DC  48E7 FF7E                323      MOVEM.L     D0-D7/A1-A6, -(SP)
000010E0  4241                     324      CLR         D1
000010E2  6000 0074                325      BRA         CHECK_NOP
000010E6                           326  NOP_RETURN
000010E6  6000 007C                327      BRA         CHECK_FOUR_BIT_SIG
000010EA                           328  FOUR_BIT_RETURN
000010EA  6000 04E0                329      BRA         CHECK_ADDI
000010EE                           330  ADDI_RETURN
000010EE  6000 0028                331      BRA         CHECK_SHIFT_AND_ROTATE
000010F2                           332  
000010F2                           333  opdec_return
000010F2  4CDF 7EFF                334      MOVEM.L     (SP)+, D0-D7/A1-A6
000010F6  4E75                     335      RTS
000010F8                           336  
000010F8                           337  ReadFirstFourBits
000010F8                           338  
000010F8  48A7 2000                339      MOVEM.W     D2, -(SP)
000010FC                           340  
000010FC  1E3C 000C                341      MOVE.B      #12,D7
00001100  EE6A                     342      LSR.W       D7,D2
00001102  1602                     343      MOVE.B      D2,D3
00001104                           344  
00001104  4C9F 0004                345      MOVEM.W     (SP)+,D2
00001108  4E75                     346      RTS
0000110A                           347  
0000110A                           348  ReadFirstTenBits
0000110A                           349  
0000110A  48A7 2000                350      MOVEM.W     D2, -(SP)
0000110E                           351  
0000110E  EC4A                     352      LSR.W       #6,D2
00001110  3602                     353      MOVE.W      D2,D3
00001112                           354  
00001112  4C9F 0004                355      MOVEM.W     (SP)+,D2
00001116  4E75                     356      RTS
00001118                           357  CHECK_SHIFT_AND_ROTATE
00001118                           358  
00001118  61F0                     359      BSR         ReadFirstTenBits
0000111A                           360  
0000111A  3C3C 038F                361      MOVE.W      #LSL,D6
0000111E  BC43                     362      CMP.W       D3,D6
00001120  6700 0DB8                363      BEQ         MATCH_LSL
00001124                           364  
00001124  3C3C 038B                365      MOVE.W      #LSR,D6
00001128  BC43                     366      CMP.W       D3,D6
0000112A  6700 0DB0                367      BEQ         MATCH_LSR
0000112E                           368  
0000112E  3C3C 0387                369      MOVE.W      #ASR,D6
00001132  BC43                     370      CMP.W       D3,D6
00001134  6700 0DA8                371      BEQ         MATCH_ASR
00001138                           372  
00001138  3C3C 0383                373      MOVE.W      #ASL,D6
0000113C  BC43                     374      CMP.W       D3,D6
0000113E  6700 0DA0                375      BEQ         MATCH_ASL
00001142                           376  
00001142  3C3C 039F                377      MOVE.W      #ROL,D6
00001146  BC43                     378      CMP.W       D3,D6
00001148  6700 0D98                379      BEQ         MATCH_ROL
0000114C                           380  
0000114C  3C3C 039B                381      MOVE.W      #ROR,D6
00001150  BC43                     382      CMP.W       D3,D6
00001152  6700 0D90                383      BEQ         MATCH_ROR
00001156                           384  
00001156  609A                     385      BRA         opdec_return
00001158                           386  
00001158                           387  CHECK_NOP
00001158                           388  
00001158  3C3C 4E71                389      MOVE.W      #NOP,D6
0000115C  BC42                     390      CMP.W       D2,D6
0000115E  6700 0650                391      BEQ         MATCH_NOP
00001162                           392  
00001162  6082                     393      BRA         NOP_RETURN
00001164                           394  
00001164                           395  CHECK_FOUR_BIT_SIG
00001164                           396  
00001164  6192                     397      BSR         ReadFirstFourBits
00001166                           398  
00001166  1C3C 0001                399      MOVE.B      #MOVE_B,D6
0000116A  BC03                     400      CMP.B       D3,D6
0000116C  6700 0650                401      BEQ         MATCH_MOVE_B
00001170                           402  
00001170  1C3C 0003                403      MOVE.B      #MOVE_W,D6
00001174  BC03                     404      CMP.B       D3,D6
00001176  6700 04BA                405      BEQ         CHECK_MOVEA_W_AND_MOVE_W
0000117A                           406  
0000117A  1C3C 0002                407      MOVE.B      #MOVE_L,D6
0000117E  BC03                     408      CMP.B       D3,D6
00001180  6700 04DA                409      BEQ         CHECK_MOVEA_L_AND_MOVE_L
00001184                           410  
00001184  1C3C 0007                411      MOVE.B      #MOVEQ_,D6
00001188  BC03                     412      CMP.B       D3,D6
0000118A  6700 06A4                413      BEQ         MATCH_MOVEQ
0000118E                           414  
0000118E  1C3C 000D                415      MOVE.B      #ADD_ADDA,D6
00001192  BC03                     416      CMP.B       D3,D6
00001194  6700 03BE                417      BEQ         CHECK_ADD_ADDA
00001198                           418  
00001198  1C3C 0005                419      MOVE.B      #ADDQ,D6
0000119C  BC03                     420      CMP.B       D3,D6
0000119E  6700 040A                421      BEQ         CHECK_ADDQ
000011A2                           422  
000011A2  1C3C 0009                423      MOVE.B      #SUB,D6
000011A6  BC03                     424      CMP.B       D3,D6
000011A8  6700 0448                425      BEQ         CHECK_SUB
000011AC                           426  
000011AC  1C3C 0008                427      MOVE.B      #DIVU_OR,D6
000011B0  BC03                     428      CMP.B       D3,D6
000011B2  6700 0322                429      BEQ         CHECK_DIVU_OR
000011B6                           430  
000011B6  1C3C 000C                431      MOVE.B      #MULS_W_AND,D6
000011BA  BC03                     432      CMP.B       D3,D6
000011BC  6700 02CA                433      BEQ         CHECK_MULS_W_AND
000011C0                           434  
000011C0  1C3C 0004                435      MOVE.B      #MULS_LEA_CLR_JSR_RTS_MOVEM,D6
000011C4  BC03                     436      CMP.B       D3,D6
000011C6  6700 026E                437      BEQ         CHECK_MULS_LEA_CLR_JSR_RTS
000011CA                           438  
000011CA  1C3C 000B                439      MOVE.B      #CMP,D6
000011CE  BC03                     440      CMP.B       D3,D6
000011D0  6700 023E                441      BEQ         CHECK_CMP
000011D4                           442  
000011D4  1C3C 0006                443      MOVE.B      #BCC,D6
000011D8  BC03                     444      CMP.B       D3,D6
000011DA  6700 0010                445      BEQ         CHECK_BCC
000011DE                           446  
000011DE  1C3C 000E                447      MOVE.B      #SHIFT,D6
000011E2  BC03                     448      CMP.B       D3,D6
000011E4  6700 0B78                449      BEQ         CHECK_SHIFT
000011E8                           450  
000011E8  6000 FF00                451      BRA         FOUR_BIT_RETURN
000011EC                           452  CHECK_BCC
000011EC                           453  
000011EC  1C3C 0000                454      MOVE.B      #BCC_16,D6
000011F0  BC02                     455      CMP.B       D2,D6
000011F2  6700 00B8                456      BEQ         CHECK_BCC_16
000011F6                           457  
000011F6  1C3C 00FF                458      MOVE.B      #BCC_32,D6
000011FA  BC02                     459      CMP.B       D2,D6
000011FC  6700 0156                460      BEQ         CHECK_BCC_32
00001200                           461  
00001200  6000 0002                462      BRA         CHECK_BCC_8
00001204                           463  
00001204                           464  CHECK_BCC_8
00001204                           465  
00001204  6100 01F6                466      BSR         ISOLATE_CC_CODE_FOR_BCC
00001208                           467  
00001208  1C3C 0000                468      MOVE.B      #CC_T,D6
0000120C  BC03                     469      CMP.B       D3,D6
0000120E  6700 0D34                470      BEQ         MATCH_CC_T_8
00001212                           471  
00001212  1C3C 0001                472      MOVE.B      #CC_F,D6
00001216  BC03                     473      CMP.B       D3,D6
00001218  6700 0D30                474      BEQ         MATCH_CC_F_8
0000121C                           475  
0000121C  1C3C 0002                476      MOVE.B      #CC_HI,D6
00001220  BC03                     477      CMP.B       D3,D6
00001222  6700 0D2C                478      BEQ         MATCH_CC_HI_8
00001226                           479  
00001226  1C3C 0003                480      MOVE.B      #CC_LS,D6
0000122A  BC03                     481      CMP.B       D3,D6
0000122C  6700 0D88                482      BEQ         MATCH_CC_LS_8
00001230                           483  
00001230  1C3C 0004                484      MOVE.B      #CC_CC,D6
00001234  BC03                     485      CMP.B       D3,D6
00001236  6700 0DFC                486      BEQ         MATCH_CC_CC_8
0000123A                           487  
0000123A  1C3C 0005                488      MOVE.B      #CC_CS,D6
0000123E  BC03                     489      CMP.B       D3,D6
00001240  6700 0E70                490      BEQ         MATCH_CC_CS_8
00001244                           491  
00001244  1C3C 0006                492      MOVE.B      #CC_NE,D6
00001248  BC03                     493      CMP.B       D3,D6
0000124A  6700 0EE4                494      BEQ         MATCH_CC_NE_8
0000124E                           495  
0000124E  1C3C 0007                496      MOVE.B      #CC_EQ,D6
00001252  BC03                     497      CMP.B       D3,D6
00001254  6700 0F58                498      BEQ         MATCH_CC_EQ_8
00001258                           499  
00001258  1C3C 0008                500      MOVE.B      #CC_VC,D6
0000125C  BC03                     501      CMP.B       D3,D6
0000125E  6700 0FCC                502      BEQ         MATCH_CC_VC_8
00001262                           503  
00001262  1C3C 0009                504      MOVE.B      #CC_VS,D6
00001266  BC03                     505      CMP.B       D3,D6
00001268  6700 1040                506      BEQ         MATCH_CC_VS_8
0000126C                           507  
0000126C  1C3C 000A                508      MOVE.B      #CC_PL,D6
00001270  BC03                     509      CMP.B       D3,D6
00001272  6700 10B4                510      BEQ         MATCH_CC_PL_8
00001276                           511  
00001276  1C3C 000B                512      MOVE.B      #CC_MI,D6
0000127A  BC03                     513      CMP.B       D3,D6
0000127C  6700 1128                514      BEQ         MATCH_CC_MI_8
00001280                           515  
00001280  1C3C 000C                516      MOVE.B      #CC_GE,D6
00001284  BC03                     517      CMP.B       D3,D6
00001286  6700 119C                518      BEQ         MATCH_CC_GE_8
0000128A                           519  
0000128A  1C3C 000D                520      MOVE.B      #CC_LT,D6
0000128E  BC03                     521      CMP.B       D3,D6
00001290  6700 1210                522      BEQ         MATCH_CC_LT_8
00001294                           523  
00001294  1C3C 000E                524      MOVE.B      #CC_GT,D6
00001298  BC03                     525      CMP.B       D3,D6
0000129A  6700 1284                526      BEQ         MATCH_CC_GT_8
0000129E                           527  
0000129E  1C3C 000F                528      MOVE.B      #CC_LE,D6
000012A2  BC03                     529      CMP.B       D3,D6
000012A4  6700 12F8                530      BEQ         MATCH_CC_LE_8
000012A8                           531  
000012A8  6000 1372                532      BRA         ERROR
000012AC                           533  
000012AC                           534  CHECK_BCC_16
000012AC                           535  
000012AC  6100 014E                536      BSR         ISOLATE_CC_CODE_FOR_BCC
000012B0                           537  
000012B0  1C3C 0000                538      MOVE.B      #CC_T,D6
000012B4  BC03                     539      CMP.B       D3,D6
000012B6  6700 0C8E                540      BEQ         MATCH_CC_T_16
000012BA                           541  
000012BA  1C3C 0001                542      MOVE.B      #CC_F,D6
000012BE  BC03                     543      CMP.B       D3,D6
000012C0  6700 0C8A                544      BEQ         MATCH_CC_F_16
000012C4                           545  
000012C4  1C3C 0002                546      MOVE.B      #CC_HI,D6
000012C8  BC03                     547      CMP.B       D3,D6
000012CA  6700 0CA0                548      BEQ         MATCH_CC_HI_16
000012CE                           549  
000012CE  1C3C 0003                550      MOVE.B      #CC_LS,D6
000012D2  BC03                     551      CMP.B       D3,D6
000012D4  6700 0D0A                552      BEQ         MATCH_CC_LS_16
000012D8                           553  
000012D8  1C3C 0004                554      MOVE.B      #CC_CC,D6
000012DC  BC03                     555      CMP.B       D3,D6
000012DE  6700 0D7E                556      BEQ         MATCH_CC_CC_16
000012E2                           557  
000012E2  1C3C 0005                558      MOVE.B      #CC_CS,D6
000012E6  BC03                     559      CMP.B       D3,D6
000012E8  6700 0DF2                560      BEQ         MATCH_CC_CS_16
000012EC                           561  
000012EC  1C3C 0006                562      MOVE.B      #CC_NE,D6
000012F0  BC03                     563      CMP.B       D3,D6
000012F2  6700 0E66                564      BEQ         MATCH_CC_NE_16
000012F6                           565  
000012F6  1C3C 0007                566      MOVE.B      #CC_EQ,D6
000012FA  BC03                     567      CMP.B       D3,D6
000012FC  6700 0EDA                568      BEQ         MATCH_CC_EQ_16
00001300                           569  
00001300  1C3C 0008                570      MOVE.B      #CC_VC,D6
00001304  BC03                     571      CMP.B       D3,D6
00001306  6700 0F4E                572      BEQ         MATCH_CC_VC_16
0000130A                           573  
0000130A  1C3C 0009                574      MOVE.B      #CC_VS,D6
0000130E  BC03                     575      CMP.B       D3,D6
00001310  6700 0FC2                576      BEQ         MATCH_CC_VS_16
00001314                           577  
00001314  1C3C 000A                578      MOVE.B      #CC_PL,D6
00001318  BC03                     579      CMP.B       D3,D6
0000131A  6700 1036                580      BEQ         MATCH_CC_PL_16
0000131E                           581  
0000131E  1C3C 000B                582      MOVE.B      #CC_MI,D6
00001322  BC03                     583      CMP.B       D3,D6
00001324  6700 10AA                584      BEQ         MATCH_CC_MI_16
00001328                           585  
00001328  1C3C 000C                586      MOVE.B      #CC_GE,D6
0000132C  BC03                     587      CMP.B       D3,D6
0000132E  6700 111E                588      BEQ         MATCH_CC_GE_16
00001332                           589  
00001332  1C3C 000D                590      MOVE.B      #CC_LT,D6
00001336  BC03                     591      CMP.B       D3,D6
00001338  6700 1192                592      BEQ         MATCH_CC_LT_16
0000133C                           593  
0000133C  1C3C 000E                594      MOVE.B      #CC_GT,D6
00001340  BC03                     595      CMP.B       D3,D6
00001342  6700 1206                596      BEQ         MATCH_CC_GT_16
00001346                           597  
00001346  1C3C 000F                598      MOVE.B      #CC_LE,D6
0000134A  BC03                     599      CMP.B       D3,D6
0000134C  6700 127A                600      BEQ         MATCH_CC_LE_16
00001350                           601  
00001350  6000 12CA                602      BRA         ERROR
00001354                           603  
00001354                           604  
00001354                           605  CHECK_BCC_32
00001354                           606  
00001354  6100 00A6                607      BSR         ISOLATE_CC_CODE_FOR_BCC
00001358                           608  
00001358  1C3C 0000                609      MOVE.B      #CC_T,D6
0000135C  BC03                     610      CMP.B       D3,D6
0000135E  6700 0BE8                611      BEQ         MATCH_CC_T_32
00001362                           612  
00001362  1C3C 0001                613      MOVE.B      #CC_F,D6
00001366  BC03                     614      CMP.B       D3,D6
00001368  6700 0BE4                615      BEQ         MATCH_CC_F_32
0000136C                           616  
0000136C  1C3C 0002                617      MOVE.B      #CC_HI,D6
00001370  BC03                     618      CMP.B       D3,D6
00001372  6700 0C1C                619      BEQ         MATCH_CC_HI_32
00001376                           620  
00001376  1C3C 0003                621      MOVE.B      #CC_LS,D6
0000137A  BC03                     622      CMP.B       D3,D6
0000137C  6700 0C8C                623      BEQ         MATCH_CC_LS_32
00001380                           624  
00001380  1C3C 0004                625      MOVE.B      #CC_CC,D6
00001384  BC03                     626      CMP.B       D3,D6
00001386  6700 0D00                627      BEQ         MATCH_CC_CC_32
0000138A                           628  
0000138A  1C3C 0005                629      MOVE.B      #CC_CS,D6
0000138E  BC03                     630      CMP.B       D3,D6
00001390  6700 0D74                631      BEQ         MATCH_CC_CS_32
00001394                           632  
00001394  1C3C 0006                633      MOVE.B      #CC_NE,D6
00001398  BC03                     634      CMP.B       D3,D6
0000139A  6700 0DE8                635      BEQ         MATCH_CC_NE_32
0000139E                           636  
0000139E  1C3C 0007                637      MOVE.B      #CC_EQ,D6
000013A2  BC03                     638      CMP.B       D3,D6
000013A4  6700 0E5C                639      BEQ         MATCH_CC_EQ_32
000013A8                           640  
000013A8  1C3C 0008                641      MOVE.B      #CC_VC,D6
000013AC  BC03                     642      CMP.B       D3,D6
000013AE  6700 0ED0                643      BEQ         MATCH_CC_VC_32
000013B2                           644  
000013B2  1C3C 0009                645      MOVE.B      #CC_VS,D6
000013B6  BC03                     646      CMP.B       D3,D6
000013B8  6700 0F44                647      BEQ         MATCH_CC_VS_32
000013BC                           648  
000013BC  1C3C 000A                649      MOVE.B      #CC_PL,D6
000013C0  BC03                     650      CMP.B       D3,D6
000013C2  6700 0FB8                651      BEQ         MATCH_CC_PL_32
000013C6                           652  
000013C6  1C3C 000B                653      MOVE.B      #CC_MI,D6
000013CA  BC03                     654      CMP.B       D3,D6
000013CC  6700 102C                655      BEQ         MATCH_CC_MI_32
000013D0                           656  
000013D0  1C3C 000C                657      MOVE.B      #CC_GE,D6
000013D4  BC03                     658      CMP.B       D3,D6
000013D6  6700 10A0                659      BEQ         MATCH_CC_GE_32
000013DA                           660  
000013DA  1C3C 000D                661      MOVE.B      #CC_LT,D6
000013DE  BC03                     662      CMP.B       D3,D6
000013E0  6700 1114                663      BEQ         MATCH_CC_LT_32
000013E4                           664  
000013E4  1C3C 000E                665      MOVE.B      #CC_GT,D6
000013E8  BC03                     666      CMP.B       D3,D6
000013EA  6700 1188                667      BEQ         MATCH_CC_GT_32
000013EE                           668  
000013EE  1C3C 000F                669      MOVE.B      #CC_LE,D6
000013F2  BC03                     670      CMP.B       D3,D6
000013F4  6700 11FC                671      BEQ         MATCH_CC_LE_32
000013F8                           672  
000013F8  6000 1222                673      BRA         ERROR
000013FC                           674  
000013FC                           675  ISOLATE_CC_CODE_FOR_BCC
000013FC                           676  
000013FC  48A7 2000                677      MOVEM.W     D2, -(SP)
00001400                           678  
00001400  E94A                     679      LSL.W       #4,D2
00001402  1E3C 000C                680      MOVE.B      #12,D7
00001406  EE6A                     681      LSR.W       D7,D2
00001408                           682  
00001408  1602                     683      MOVE.B      D2,D3
0000140A                           684  
0000140A  4C9F 0004                685      MOVEM.W     (SP)+,D2
0000140E  4E75                     686      RTS
00001410                           687  CHECK_CMP
00001410                           688  
00001410  6100 0232                689      BSR         ISOLATE_OP_CODE
00001414                           690  
00001414  1C3C 0000                691      MOVE.B      #CMP_B,D6
00001418  BC03                     692      CMP.B       D3,D6
0000141A  6700 1308                693      BEQ         MATCH_CMP_B
0000141E                           694  
0000141E  1C3C 0001                695      MOVE.B      #CMP_W,D6
00001422  BC03                     696      CMP.B       D3,D6
00001424  6700 1316                697      BEQ         MATCH_CMP_W
00001428                           698  
00001428  1C3C 0002                699      MOVE.B      #CMP_L,D6
0000142C  BC03                     700      CMP.B       D3,D6
0000142E  6700 1324                701      BEQ         MATCH_CMP_L
00001432                           702  
00001432  6000 11E8                703      BRA         ERROR
00001436                           704  CHECK_MULS_LEA_CLR_JSR_RTS
00001436                           705  
00001436  3C3C 4E75                706      MOVE.W      #RTS,D6
0000143A  BC42                     707      CMP.W       D2,D6
0000143C  6700 12D8                708      BEQ         MATCH_RTS
00001440                           709  
00001440  6100 0202                710      BSR         ISOLATE_OP_CODE
00001444                           711  
00001444  1C3C 0007                712      MOVE.B      #LEA,D6
00001448  BC03                     713      CMP.B       D3,D6
0000144A  6700 022C                714      BEQ         MATCH_LEA
0000144E                           715  
0000144E  6100 FCBA                716      BSR         ReadFirstTenBits
00001452                           717  
00001452  3C3C 013A                718      MOVE.W      #JSR,D6
00001456  BC43                     719      CMP.W       D3,D6
00001458  6700 133A                720      BEQ         MATCH_JSR
0000145C                           721  
0000145C  3C3C 0108                722      MOVE.W      #CLR_B,D6
00001460  BC43                     723      CMP.W       D3,D6
00001462  6700 134E                724      BEQ         MATCH_CLR_B
00001466                           725  
00001466  3C3C 0109                726      MOVE.W      #CLR_W,D6
0000146A  BC43                     727      CMP.W       D3,D6
0000146C  6700 135C                728      BEQ         MATCH_CLR_W
00001470                           729  
00001470  3C3C 010A                730      MOVE.W      #CLR_L,D6
00001474  BC43                     731      CMP.W       D3,D6
00001476  6700 136A                732      BEQ         MATCH_CLR_L
0000147A                           733  
0000147A  3C3C 0130                734      MOVE.W      #MULS_L,D6  * Shouldn't need to check for the rest of the opcode..?
0000147E  BC43                     735      CMP.W       D3,D6
00001480  6700 01F8                736      BEQ         MATCH_MULS_L
00001484                           737      
00001484  6000 009E                738      BRA         CHECK_MOVEM
00001488                           739  
00001488                           740  CHECK_MULS_W_AND
00001488                           741  
00001488  6100 01BA                742      BSR         ISOLATE_OP_CODE
0000148C                           743  
0000148C  1C3C 0007                744      MOVE.B      #MULS_OP_W,D6
00001490  BC03                     745      CMP.B       D3,D6
00001492  6700 1244                746      BEQ         MATCH_MULS_W
00001496                           747  
00001496  1C3C 0000                748      MOVE.B      #DN_B,D6
0000149A  BC03                     749      CMP.B       D3,D6
0000149C  6700 136C                750      BEQ         MATCH_AND_DN_B
000014A0                           751  
000014A0  1C3C 0001                752      MOVE.B      #DN_W,D6
000014A4  BC03                     753      CMP.B       D3,D6
000014A6  6700 137A                754      BEQ         MATCH_AND_DN_W
000014AA                           755  
000014AA  1C3C 0002                756      MOVE.B      #DN_L,D6
000014AE  BC03                     757      CMP.B       D3,D6
000014B0  6700 1388                758      BEQ         MATCH_AND_DN_L
000014B4                           759  
000014B4  1C3C 0004                760      MOVE.B      #EA_B,D6
000014B8  BC03                     761      CMP.B       D3,D6
000014BA  6700 13BC                762      BEQ         MATCH_AND_EA_B
000014BE                           763  
000014BE  1C3C 0005                764      MOVE.B      #EA_W,D6
000014C2  BC03                     765      CMP.B       D3,D6
000014C4  6700 13CA                766      BEQ         MATCH_AND_EA_W
000014C8                           767  
000014C8  1C3C 0006                768      MOVE.B      #EA_L,D6
000014CC  BC03                     769      CMP.B       D3,D6
000014CE  6700 13D8                770      BEQ         MATCH_AND_EA_L
000014D2                           771  
000014D2  6000 1148                772      BRA         ERROR
000014D6                           773  
000014D6                           774  CHECK_DIVU_OR
000014D6                           775  
000014D6  6100 016C                776      BSR         ISOLATE_OP_CODE
000014DA                           777  
000014DA  1C3C 0003                778      MOVE.B      #DIVU,D6
000014DE  BC03                     779      CMP.B       D3,D6
000014E0  6700 05F2                780      BEQ         MATCH_DIVU
000014E4                           781  
000014E4  1C3C 0000                782      MOVE.B      #DN_B,D6
000014E8  BC03                     783      CMP.B       D3,D6
000014EA  6700 0180                784      BEQ         MATCH_OR_DN_B
000014EE                           785  
000014EE  1C3C 0001                786      MOVE.B      #DN_W,D6
000014F2  BC03                     787      CMP.B       D3,D6
000014F4  6700 0178                788      BEQ         MATCH_OR_DN_W
000014F8                           789  
000014F8  1C3C 0002                790      MOVE.B      #DN_L,D6
000014FC  BC03                     791      CMP.B       D3,D6
000014FE  6700 0170                792      BEQ         MATCH_OR_DN_L
00001502                           793  
00001502  1C3C 0004                794      MOVE.B      #EA_B,D6
00001506  BC03                     795      CMP.B       D3,D6
00001508  6700 0168                796      BEQ         MATCH_OR_EA_B
0000150C                           797  
0000150C  1C3C 0005                798      MOVE.B      #EA_W,D6
00001510  BC03                     799      CMP.B       D3,D6
00001512  6700 0160                800      BEQ         MATCH_OR_EA_W
00001516                           801  
00001516  1C3C 0006                802      MOVE.B      #EA_L,D6
0000151A  BC03                     803      CMP.B       D3,D6
0000151C  6700 0158                804      BEQ         MATCH_OR_EA_L
00001520                           805  
00001520  6000 10FA                806      BRA         ERROR
00001524                           807  
00001524                           808  CHECK_MOVEM
00001524                           809  
00001524  6100 FBE4                810      BSR         ReadFirstTenBits
00001528                           811  
00001528  3C3C 0122                812      MOVE.W      #MOVEM_TO_MEM_W,D6
0000152C  BC43                     813      CMP.W       D3,D6
0000152E  6700 05E2                814      BEQ         MATCH_MOVEM_TO_MEM_W
00001532                           815  
00001532  3C3C 0123                816      MOVE.W      #MOVEM_TO_MEM_L,D6
00001536  BC43                     817      CMP.W       D3,D6
00001538  6700 05F0                818      BEQ         MATCH_MOVEM_TO_MEM_L
0000153C                           819  
0000153C  3C3C 0132                820      MOVE.W      #MOVEM_TO_REG_W,D6
00001540  BC43                     821      CMP.W       D3,D6
00001542  6700 061C                822      BEQ         MATCH_MOVEM_TO_REG_W
00001546                           823  
00001546  3C3C 0133                824      MOVE.W      #MOVEM_TO_REG_L,D6
0000154A  BC43                     825      CMP.W       D3,D6
0000154C  6700 0614                826      BEQ         MATCH_MOVEM_TO_REG_L
00001550                           827  
00001550  6000 10CA                828      BRA         ERROR
00001554                           829  CHECK_ADD_ADDA
00001554                           830  
00001554  6100 00EE                831      BSR         ISOLATE_OP_CODE
00001558                           832  
00001558  3C3C 0000                833      MOVE.W      #DN_B,D6
0000155C  BC43                     834      CMP.W       D3,D6
0000155E  6700 037C                835      BEQ         MATCH_ADD_TO_REG_B
00001562                           836  
00001562  3C3C 0001                837      MOVE.W      #DN_W,D6
00001566  BC43                     838      CMP.W       D3,D6
00001568  6700 038A                839      BEQ         MATCH_ADD_TO_REG_W
0000156C                           840  
0000156C  3C3C 0002                841      MOVE.W      #DN_L,D6
00001570  BC43                     842      CMP.W       D3,D6
00001572  6700 0398                843      BEQ         MATCH_ADD_TO_REG_L
00001576                           844  
00001576  3C3C 0004                845      MOVE.W      #EA_B,D6
0000157A  BC43                     846      CMP.W       D3,D6
0000157C  6700 0418                847      BEQ         MATCH_ADD_TO_EA_B
00001580                           848  
00001580  3C3C 0005                849      MOVE.W      #EA_W,D6
00001584  BC43                     850      CMP.W       D3,D6
00001586  6700 0426                851      BEQ         MATCH_ADD_TO_EA_W
0000158A                           852  
0000158A  3C3C 0006                853      MOVE.W      #EA_L,D6
0000158E  BC43                     854      CMP.W       D3,D6
00001590  6700 0434                855      BEQ         MATCH_ADD_TO_EA_L
00001594                           856  
00001594  3C3C 0003                857      MOVE.W      #ADDA_W,D6
00001598  BC43                     858      CMP.W       D3,D6
0000159A  6700 10E2                859      BEQ         MATCH_ADDA_W
0000159E                           860  
0000159E  3C3C 0007                861      MOVE.W      #ADDA_L,D6
000015A2  BC43                     862      CMP.W       D3,D6
000015A4  6700 10F0                863      BEQ         MATCH_ADDA_L
000015A8                           864  
000015A8  4E75                     865      RTS ** Change later?
000015AA                           866  CHECK_ADDQ
000015AA                           867  
000015AA  6100 0098                868      BSR         ISOLATE_OP_CODE
000015AE                           869  
000015AE  3C3C 0000                870      MOVE.W      #ADDQ_B,D6
000015B2  BC43                     871      CMP.W       D3,D6
000015B4  6700 049A                872      BEQ         MATCH_ADDQ_B
000015B8                           873  
000015B8  3C3C 0001                874      MOVE.W      #ADDQ_W,D6
000015BC  BC43                     875      CMP.W       D3,D6
000015BE  6700 04A8                876      BEQ         MATCH_ADDQ_W
000015C2                           877  
000015C2  3C3C 0002                878      MOVE.W      #ADDQ_L,D6
000015C6  BC43                     879      CMP.W       D3,D6
000015C8  6700 04B6                880      BEQ         MATCH_ADDQ_L
000015CC                           881  
000015CC                           882  CHECK_ADDI
000015CC                           883  
000015CC  6100 FB3C                884      BSR         ReadFirstTenBits
000015D0                           885  
000015D0  3C3C 0018                886      MOVE.W      #ADDI_B,D6
000015D4  BC43                     887      CMP.W       D3,D6
000015D6  6700 0296                888      BEQ         MATCH_ADDI_B
000015DA                           889  
000015DA  3C3C 0019                890      MOVE.W      #ADDI_W,D6
000015DE  BC43                     891      CMP.W       D3,D6
000015E0  6700 02A4                892      BEQ         MATCH_ADDI_W
000015E4                           893  
000015E4  3C3C 001A                894      MOVE.W      #ADDI_L,D6
000015E8  BC43                     895      CMP.W       D3,D6
000015EA  6700 02B2                896      BEQ         MATCH_ADDI_L
000015EE                           897  
000015EE  6000 FAFE                898      BRA         ADDI_RETURN
000015F2                           899  CHECK_SUB
000015F2                           900  
000015F2  6100 0050                901      BSR         ISOLATE_OP_CODE
000015F6                           902  
000015F6  3C3C 0000                903      MOVE.W      #DN_B,D6
000015FA  BC43                     904      CMP.W       D3,D6
000015FC  6700 0326                905      BEQ         MATCH_SUB_TO_DN_B
00001600                           906  
00001600  3C3C 0001                907      MOVE.W      #DN_W,D6
00001604  BC43                     908      CMP.W       D3,D6
00001606  6700 0334                909      BEQ         MATCH_SUB_TO_DN_W
0000160A                           910  
0000160A  3C3C 0002                911      MOVE.W      #DN_L,D6
0000160E  BC43                     912      CMP.W       D3,D6
00001610  6700 0342                913      BEQ         MATCH_SUB_TO_DN_L
00001614                           914  
00001614  3C3C 0004                915      MOVE.W      #EA_B,D6
00001618  BC43                     916      CMP.W       D3,D6
0000161A  6700 03C2                917      BEQ         MATCH_SUB_TO_EA_B
0000161E                           918  
0000161E  3C3C 0005                919      MOVE.W      #EA_W,D6
00001622  BC43                     920      CMP.W       D3,D6
00001624  6700 03D0                921      BEQ         MATCH_SUB_TO_EA_W
00001628                           922  
00001628  3C3C 0006                923      MOVE.W      #EA_L,D6
0000162C  BC43                     924      CMP.W       D3,D6
0000162E  6700 03DE                925      BEQ         MATCH_SUB_TO_EA_L
00001632                           926  CHECK_MOVEA_W_AND_MOVE_W
00001632                           927  
00001632  6100 0010                928      BSR         ISOLATE_OP_CODE
00001636                           929  
00001636  1C3C 0001                930      MOVE.B      #MOVEA_WL,D6
0000163A  BC03                     931      CMP.B       D3,D6
0000163C  6700 0FEA                932      BEQ         MATCH_MOVEA_W
00001640                           933  
00001640  6000 0194                934      BRA         MATCH_MOVE_W
00001644                           935  ISOLATE_OP_CODE
00001644                           936  
00001644  48A7 2000                937      MOVEM.W     D2, -(SP)
00001648                           938  
00001648  1E3C 0007                939      MOVE.B      #7,D7
0000164C  EF6A                     940      LSL.W       D7,D2
0000164E  1E3C 000D                941      MOVE.B      #13,D7
00001652  EE6A                     942      LSR.W       D7,D2
00001654  1602                     943      MOVE.B      D2,D3
00001656                           944  
00001656  4C9F 0004                945      MOVEM.W     (SP)+,D2
0000165A  4E75                     946      RTS
0000165C                           947  CHECK_MOVEA_L_AND_MOVE_L
0000165C                           948  
0000165C  61E6                     949      BSR         ISOLATE_OP_CODE
0000165E                           950  
0000165E  1C3C 0001                951      MOVE.B      #MOVEA_WL,D6
00001662  BC03                     952      CMP.B       D3,D6
00001664  6700 0FDA                953      BEQ         MATCH_MOVEA_L
00001668                           954  
00001668  6000 0184                955      BRA         MATCH_MOVE_L
0000166C                           956  
0000166C                           957  
0000166C                           958  
0000166C                           959  MATCH_OR_DN_B
0000166C  3A02                     960      MOVE.W      D2,D5       *REMOVE
0000166E                           961  MATCH_OR_DN_W
0000166E  3A02                     962      MOVE.W      D2,D5       *REMOVE
00001670                           963  MATCH_OR_DN_L
00001670  3A02                     964      MOVE.W      D2,D5       *REMOVE
00001672                           965  MATCH_OR_EA_B
00001672  3A02                     966      MOVE.W      D2,D5       *REMOVE
00001674                           967  MATCH_OR_EA_W
00001674  3A02                     968      MOVE.W      D2,D5       *REMOVE
00001676                           969  MATCH_OR_EA_L
00001676  3A02                     970      MOVE.W      D2,D5       *REMOVE
00001678                           971  
00001678                           972  MATCH_LEA
00001678  3A02                     973      MOVE.W      D2,D5       *REMOVE
0000167A                           974  
0000167A                           975  MATCH_MULS_L
0000167A  3A02                     976      MOVE.W      D2,D5       *REMOVE
0000167C                           977  
0000167C                           978  
0000167C                           979                  INCLUDE 'EADecoder.x68'
0000167C                           980  
0000167C                           981  
0000167C  =00010000                982  output      EQU $00010000
0000167C                           983  
0000167C  =0000003C                984  IMMEDIATE   EQU %00111100
0000167C  =00000038                985  ABS_WORD    EQU %00111000
0000167C  =00000039                986  ABS_LONG    EQU %00111001
0000167C  =00000000                987  Dn          EQU %00000000
0000167C  =00000008                988  An          EQU %00001000
0000167C  =00000010                989  INDIRECT    EQU %00010000
0000167C  =00000018                990  POST_INC    EQU %00011000
0000167C  =00000020                991  PRE_DEC     EQU %00100000
0000167C                           992  
0000167C                           993  
0000167C                           994  
0000167C                           995  EADecoder_left
0000167C  48E7 FF7E                996          MOVEM.L     D0-D7/A1-A6, -(SP)
00001680                           997          
00001680                           998          ** Swap the mode and register bits
00001680  1800                     999          MOVE.B  D0,D4
00001682  0200 0007               1000          ANDI.B  #%00000111,D0       * Mask mode
00001686  0204 0038               1001          ANDI.B  #%00111000,D4       * Mask register
0000168A  E708                    1002          LSL.B   #3,D0               * Move mode bits over
0000168C  E60C                    1003          LSR.B   #3,D4               * Move register bits over
0000168E  8004                    1004          OR.B    D4,D0               * Recombine
00001690                          1005          
00001690  6000 0006               1006          BRA     left_skip
00001694                          1007  
00001694                          1008  EADecoder
00001694  48E7 FF7E               1009          MOVEM.L     D0-D7/A1-A6, -(SP) *Store registers on stack, except D0
00001698                          1010  left_skip   
00001698  4242                    1011          CLR     D2    
0000169A  4243                    1012          CLR     D3 
0000169C  1401                    1013          MOVE.B  D1,D2 ** Store opcode size in bytes into D2
0000169E                          1014          
0000169E  43F9 00010000           1015          LEA     output,A1
000016A4  45F9 00010000           1016          LEA     output,A2
000016AA                          1017          
000016AA                          1018          *First, decoder will check for the 3 types with hard coded register values
000016AA  163C 0001               1019          MOVE.B  #1,D3
000016AE  B07C 003C               1020          CMP     #IMMEDIATE,D0
000016B2  6700 0068               1021          BEQ     dec_immediate
000016B6                          1022          
000016B6  B07C 0038               1023          CMP     #ABS_WORD,D0
000016BA  6700 007C               1024          BEQ     dec_abs_word
000016BE                          1025          
000016BE  B07C 0039               1026          CMP     #ABS_LONG,D0
000016C2  6700 0080               1027          BEQ     dec_abs_long
000016C6                          1028          
000016C6                          1029          *If it was none of the above, store the register and mode seperately
000016C6  4243                    1030          CLR     D3
000016C8  1200                    1031          MOVE.B  D0,D1
000016CA  0201 0038               1032          ANDI.B  #%00111000,D1           *Get mode value
000016CE  0200 0007               1033          ANDI.B  #%00000111,D0           *Get register value
000016D2  0600 0030               1034          ADDI.B  #$30,D0
000016D6                          1035                
000016D6  B27C 0000               1036          CMP     #Dn,D1
000016DA  6700 0074               1037          BEQ     dec_Dn 
000016DE                          1038          
000016DE  B27C 0008               1039          CMP     #An,D1
000016E2  6700 0078               1040          BEQ     dec_An
000016E6                          1041                  
000016E6  B27C 0010               1042          CMP     #INDIRECT,D1
000016EA  6700 007C               1043          BEQ     dec_indirect
000016EE                          1044                  
000016EE  B27C 0018               1045          CMP     #POST_INC,D1
000016F2  6700 0088               1046          BEQ     dec_post_inc
000016F6                          1047                  
000016F6  B27C 0020               1048          CMP     #PRE_DEC,D1
000016FA  6700 009A               1049          BEQ     dec_pre_dec
000016FE                          1050  
000016FE                          1051  dec_return ** Common return for all types
000016FE                          1052          
000016FE                          1053          ** Print display string
000016FE  103C 000E               1054          MOVE.B  #14,D0
00001702  4E4F                    1055          TRAP    #15
00001704                          1056          
00001704                          1057          ** If there is immediate data to print, print it
00001704  B67C 0001               1058          CMP     #1,D3
00001708  6600 000C               1059          BNE     imm_skip
0000170C                          1060          
0000170C  103C 000F               1061          MOVE.B  #15,D0
00001710  143C 0010               1062          MOVE.B  #16,D2
00001714  4E4F                    1063          TRAP    #15
00001716                          1064  
00001716                          1065  imm_skip
00001716  4CDF 7EFF               1066          MOVEM.L     (SP)+, D0-D7/A1-A6 *Return register data from stack, except D0
0000171A  4E75                    1067          RTS
0000171C                          1068          
0000171C                          1069          * Individual EA decoders *
0000171C                          1070  
0000171C                          1071  dec_immediate   *DECODE IMMEDIATE VALUE*
0000171C  14FC 0023               1072          MOVE.B  #'#',(A2)+  * Move '#' char into string
00001720  14FC 0024               1073          MOVE.B  #'$',(A2)+  * Move '$' char into string
00001724  14FC 0000               1074          MOVE.B  #$0,(A2)+   * Null terminate string
00001728  B47C 0002               1075          CMP     #2,D2       * Check if data is word length
0000172C  6700 0006               1076          BEQ     imm_word    
00001730                          1077          
00001730  2218                    1078          MOVE.L  (A0)+,D1    * Length was long
00001732  60CA                    1079          BRA     dec_return
00001734                          1080          
00001734                          1081  imm_word
00001734  3218                    1082          MOVE.W  (A0)+,D1    * Length was word
00001736  60C6                    1083          BRA     dec_return
00001738                          1084  
00001738                          1085  
00001738                          1086  dec_abs_word    *DECODE ABSOLUTE WORD*
00001738  14FC 0024               1087          MOVE.B  #'$',(A2)+  * Move '$' char into string
0000173C  14FC 0000               1088          MOVE.B  #$0,(A2)+   * Null terminate string
00001740  3218                    1089          MOVE.W  (A0)+,D1
00001742  60BA                    1090          BRA     dec_return
00001744                          1091          
00001744                          1092  
00001744                          1093  dec_abs_long    *DECODE ABSOLUTE LONG*
00001744  14FC 0024               1094          MOVE.B  #'$',(A2)+  * Move '$' char into string
00001748  14FC 0000               1095          MOVE.B  #$0,(A2)+   * Null terminate string
0000174C  2218                    1096          MOVE.L  (A0)+,D1
0000174E  60AE                    1097          BRA     dec_return
00001750                          1098          
00001750                          1099  
00001750                          1100  dec_Dn          *DECODE DIRECT DATA*
00001750  14FC 0044               1101          MOVE.B  #'D',(A2)+
00001754  14C0                    1102          MOVE.B  D0,(A2)+
00001756  14FC 0000               1103          MOVE.B  #$0,(A2)+
0000175A  60A2                    1104          BRA     dec_return
0000175C                          1105  
0000175C                          1106          
0000175C                          1107  dec_An          *DECODE DIRECT ADDRESS*
0000175C  14FC 0041               1108          MOVE.B  #'A',(A2)+
00001760  14C0                    1109          MOVE.B  D0,(A2)+
00001762  14FC 0000               1110          MOVE.B  #$0,(A2)+
00001766  6096                    1111          BRA     dec_return
00001768                          1112  
00001768                          1113  
00001768                          1114  dec_indirect    *DECODE INDIRECT ACCESS*
00001768  14FC 0028               1115          MOVE.B  #'(',(A2)+
0000176C  14FC 0041               1116          MOVE.B  #'A',(A2)+
00001770  14C0                    1117          MOVE.B  D0,(A2)+
00001772  14FC 0029               1118          MOVE.B  #')',(A2)+
00001776  14FC 0000               1119          MOVE.B  #$0,(A2)+
0000177A  6082                    1120          BRA     dec_return
0000177C                          1121          
0000177C                          1122  
0000177C                          1123  dec_post_inc    *DECODE INDIRECT POST INCREMENT*
0000177C  14FC 0028               1124          MOVE.B  #'(',(A2)+
00001780  14FC 0041               1125          MOVE.B  #'A',(A2)+
00001784  14C0                    1126          MOVE.B  D0,(A2)+
00001786  14FC 0029               1127          MOVE.B  #')',(A2)+
0000178A  14FC 002B               1128          MOVE.B  #'+',(A2)+
0000178E  14FC 0000               1129          MOVE.B  #$0,(A2)+
00001792  6000 FF6A               1130          BRA     dec_return
00001796                          1131          
00001796                          1132          
00001796                          1133  dec_pre_dec    *DECODE INDIRECT PRE DECREMENT*
00001796  14FC 002D               1134          MOVE.B  #'-',(A2)+
0000179A  14FC 0028               1135          MOVE.B  #'(',(A2)+
0000179E  14FC 0041               1136          MOVE.B  #'A',(A2)+
000017A2  14C0                    1137          MOVE.B  D0,(A2)+
000017A4  14FC 0029               1138          MOVE.B  #')',(A2)+
000017A8  14FC 0000               1139          MOVE.B  #$0,(A2)+
000017AC  6000 FF50               1140          BRA     dec_return
000017B0                          1141  
000017B0                          1142  
000017B0                          1143  
000017B0                          1144  
000017B0                          1145  
000017B0                          1146  
000017B0                          1147  
000017B0                          1148  
000017B0                          1149  
000017B0                          1150  -------------------- end include --------------------
000017B0                          1151                  INCLUDE 'connor_opcodes.x68'
000017B0                          1152  
000017B0                          1153  
000017B0                          1154  MATCH_NOP
000017B0  43F8 0028               1155      LEA         pr_NOP,A1
000017B4  103C 000E               1156      MOVE.B      #14,D0
000017B8  4E4F                    1157      TRAP        #15
000017BA  6000 F936               1158      BRA         opdec_return
000017BE                          1159  
000017BE                          1160  
000017BE                          1161  MATCH_MOVE_B
000017BE                          1162      ** Move command size into D1
000017BE  123C 0002               1163      MOVE.B      #2,D1
000017C2                          1164      ** Print command
000017C2  103C 000E               1165      MOVE.B      #14,D0
000017C6  43F8 002C               1166      LEA         pr_MOVE,A1
000017CA  4E4F                    1167      TRAP        #15
000017CC                          1168      ** Print size
000017CC  43F8 0016               1169      LEA         pr_BYTE,A1
000017D0  4E4F                    1170      TRAP        #15
000017D2                          1171  
000017D2  6000 0032               1172      BRA         print_move
000017D6                          1173  
000017D6                          1174  MATCH_MOVE_W
000017D6                          1175      ** Move command size into D1
000017D6  123C 0002               1176      MOVE.B      #2,D1
000017DA                          1177      ** Print command
000017DA  103C 000E               1178      MOVE.B      #14,D0
000017DE  43F8 002C               1179      LEA         pr_MOVE,A1
000017E2  4E4F                    1180      TRAP        #15
000017E4                          1181      ** Print size
000017E4  43F8 0019               1182      LEA         pr_WORD,A1
000017E8  4E4F                    1183      TRAP        #15
000017EA                          1184  
000017EA  6000 001A               1185      BRA         print_move
000017EE                          1186  
000017EE                          1187  MATCH_MOVE_L
000017EE                          1188      ** Move command size into D1
000017EE  123C 0004               1189      MOVE.B      #4,D1
000017F2                          1190      ** Print command
000017F2  103C 000E               1191      MOVE.B      #14,D0
000017F6  43F8 002C               1192      LEA         pr_MOVE,A1
000017FA  4E4F                    1193      TRAP        #15
000017FC                          1194      ** Print size
000017FC  43F8 001C               1195      LEA         pr_LONG,A1
00001800  4E4F                    1196      TRAP        #15
00001802                          1197  
00001802  6000 0002               1198      BRA         print_move
00001806                          1199  
00001806                          1200  print_move
00001806                          1201      ** Print space
00001806  43F8 0000               1202      LEA         pr_space,A1
0000180A  4E4F                    1203      TRAP        #15
0000180C                          1204      ** Decode right side ea
0000180C  1002                    1205      MOVE.B      D2,D0
0000180E  0200 003F               1206      ANDI.B      #%00111111,D0
00001812  4EB8 1694               1207      JSR         EADecoder
00001816                          1208      ** Add comma
00001816  103C 000E               1209      MOVE.B      #14,D0
0000181A  43F8 0014               1210      LEA         pr_comma,A1
0000181E  4E4F                    1211      TRAP        #15
00001820                          1212      ** Decode left side ea
00001820  3002                    1213      MOVE.W      D2,D0
00001822  0240 0FC0               1214      ANDI.W      #%0000111111000000,D0
00001826  EC48                    1215      LSR.W       #6,D0
00001828  4EB8 167C               1216      JSR         EADecoder_left
0000182C                          1217  
0000182C  6000 F8C4               1218      BRA         opdec_return
00001830                          1219  
00001830                          1220  
00001830                          1221  MATCH_MOVEQ
00001830                          1222      ** Print command
00001830  103C 000E               1223      MOVE.B      #14,D0
00001834  43F8 005B               1224      LEA         pr_MOVEQ,A1
00001838  4E4F                    1225      TRAP        #15
0000183A                          1226      ** Print space
0000183A  43F8 0000               1227      LEA         pr_space,A1
0000183E  4E4F                    1228      TRAP        #15
00001840                          1229      ** Print hex tag
00001840  43F8 0021               1230      LEA         pr_hextag,A1
00001844  4E4F                    1231      TRAP        #15
00001846                          1232      ** Print data
00001846  1202                    1233      MOVE.B      D2,D1
00001848  103C 000F               1234      MOVE.B      #15,D0
0000184C  2602                    1235      MOVE.L      D2,D3
0000184E  7410                    1236      MOVE.L      #16,D2
00001850  4E4F                    1237      TRAP        #15
00001852  2403                    1238      MOVE.L      D3,D2
00001854                          1239      ** Add comma
00001854  103C 000E               1240      MOVE.B      #14,D0
00001858  43F8 0014               1241      LEA         pr_comma,A1
0000185C  4E4F                    1242      TRAP        #15
0000185E                          1243      ** Decode register
0000185E  3002                    1244      MOVE.W      D2,D0
00001860  0240 0E00               1245      ANDI.W      #%0000111000000000,D0
00001864  EC48                    1246      LSR.W       #6,D0
00001866  4EB8 167C               1247      JSR         EADecoder_left
0000186A                          1248  
0000186A  6000 F886               1249      BRA         opdec_return
0000186E                          1250  
0000186E                          1251  
0000186E                          1252  MATCH_ADDI_B
0000186E                          1253      ** Move command size into D1
0000186E  123C 0002               1254      MOVE.B      #2,D1
00001872                          1255      ** Print command
00001872  103C 000E               1256      MOVE.B      #14,D0
00001876  43F8 0065               1257      LEA         pr_ADDI,A1
0000187A  4E4F                    1258      TRAP        #15
0000187C                          1259      ** Print size
0000187C  43F8 0016               1260      LEA         pr_BYTE,A1
00001880  4E4F                    1261      TRAP        #15
00001882                          1262  
00001882  6000 0032               1263      BRA         print_addi
00001886                          1264  
00001886                          1265  MATCH_ADDI_W
00001886                          1266      ** Move command size into D1
00001886  123C 0002               1267      MOVE.B      #2,D1
0000188A                          1268      ** Print command
0000188A  103C 000E               1269      MOVE.B      #14,D0
0000188E  43F8 0065               1270      LEA         pr_ADDI,A1
00001892  4E4F                    1271      TRAP        #15
00001894                          1272      ** Print size
00001894  43F8 0019               1273      LEA         pr_WORD,A1
00001898  4E4F                    1274      TRAP        #15
0000189A                          1275  
0000189A  6000 001A               1276      BRA         print_addi
0000189E                          1277  
0000189E                          1278  MATCH_ADDI_L
0000189E                          1279      ** Move command size into D1
0000189E  123C 0004               1280      MOVE.B      #4,D1
000018A2                          1281      ** Print command
000018A2  103C 000E               1282      MOVE.B      #14,D0
000018A6  43F8 0065               1283      LEA         pr_ADDI,A1
000018AA  4E4F                    1284      TRAP        #15
000018AC                          1285      ** Print size
000018AC  43F8 001C               1286      LEA         pr_LONG,A1
000018B0  4E4F                    1287      TRAP        #15
000018B2                          1288  
000018B2  6000 0002               1289      BRA         print_addi
000018B6                          1290  
000018B6                          1291  print_addi
000018B6                          1292      ** Print space
000018B6  43F8 0000               1293      LEA         pr_space,A1
000018BA  4E4F                    1294      TRAP        #15
000018BC                          1295      ** Print Immediate data
000018BC  103C 003C               1296      MOVE.B      #%00111100,D0
000018C0  4EB8 1694               1297      JSR         EADecoder
000018C4                          1298      ** Add comma
000018C4  103C 000E               1299      MOVE.B      #14,D0
000018C8  43F8 0014               1300      LEA         pr_comma,A1
000018CC  4E4F                    1301      TRAP        #15
000018CE                          1302      ** Decode right side ea
000018CE  1002                    1303      MOVE.B      D2,D0
000018D0  0200 003F               1304      ANDI.B      #%00111111,D0
000018D4  4EB8 1694               1305      JSR         EADecoder
000018D8                          1306  
000018D8  6000 F818               1307      BRA         opdec_return
000018DC                          1308  
000018DC                          1309  
000018DC                          1310  MATCH_ADD_TO_REG_B
000018DC                          1311      ** Move command size into D1
000018DC  123C 0002               1312      MOVE.B      #2,D1
000018E0                          1313      ** Print command
000018E0  103C 000E               1314      MOVE.B      #14,D0
000018E4  43F8 0061               1315      LEA         pr_ADD,A1
000018E8  4E4F                    1316      TRAP        #15
000018EA                          1317      ** Print size
000018EA  43F8 0016               1318      LEA         pr_BYTE,A1
000018EE  4E4F                    1319      TRAP        #15
000018F0                          1320  
000018F0  6000 007A               1321      BRA         print_add_to_reg
000018F4                          1322  
000018F4                          1323  MATCH_ADD_TO_REG_W
000018F4                          1324      ** Move command size into D1
000018F4  123C 0002               1325      MOVE.B      #2,D1
000018F8                          1326      ** Print command
000018F8  103C 000E               1327      MOVE.B      #14,D0
000018FC  43F8 0061               1328      LEA         pr_ADD,A1
00001900  4E4F                    1329      TRAP        #15
00001902                          1330      ** Print size
00001902  43F8 0019               1331      LEA         pr_WORD,A1
00001906  4E4F                    1332      TRAP        #15
00001908                          1333  
00001908  6000 0062               1334      BRA         print_add_to_reg
0000190C                          1335  
0000190C                          1336  MATCH_ADD_TO_REG_L
0000190C                          1337      ** Move command size into D1
0000190C  123C 0004               1338      MOVE.B      #4,D1
00001910                          1339      ** Print command
00001910  103C 000E               1340      MOVE.B      #14,D0
00001914  43F8 0061               1341      LEA         pr_ADD,A1
00001918  4E4F                    1342      TRAP        #15
0000191A                          1343      ** Print size
0000191A  43F8 001C               1344      LEA         pr_LONG,A1
0000191E  4E4F                    1345      TRAP        #15
00001920                          1346  
00001920  6000 004A               1347      BRA         print_add_to_reg
00001924                          1348  
00001924                          1349  MATCH_SUB_TO_DN_B
00001924                          1350      ** Move command size into D1
00001924  123C 0002               1351      MOVE.B      #2,D1
00001928                          1352      ** Print command
00001928  103C 000E               1353      MOVE.B      #14,D0
0000192C  43F8 006F               1354      LEA         pr_SUB,A1
00001930  4E4F                    1355      TRAP        #15
00001932                          1356      ** Print size
00001932  43F8 0016               1357      LEA         pr_BYTE,A1
00001936  4E4F                    1358      TRAP        #15
00001938                          1359  
00001938  6000 0032               1360      BRA         print_add_to_reg
0000193C                          1361  
0000193C                          1362  MATCH_SUB_TO_DN_W
0000193C                          1363      ** Move command size into D1
0000193C  123C 0002               1364      MOVE.B      #2,D1
00001940                          1365      ** Print command
00001940  103C 000E               1366      MOVE.B      #14,D0
00001944  43F8 006F               1367      LEA         pr_SUB,A1
00001948  4E4F                    1368      TRAP        #15
0000194A                          1369      ** Print size
0000194A  43F8 0019               1370      LEA         pr_WORD,A1
0000194E  4E4F                    1371      TRAP        #15
00001950                          1372  
00001950  6000 001A               1373      BRA         print_add_to_reg
00001954                          1374  
00001954                          1375  MATCH_SUB_TO_DN_L
00001954                          1376      ** Move command size into D1
00001954  123C 0004               1377      MOVE.B      #4,D1
00001958                          1378      ** Print command
00001958  103C 000E               1379      MOVE.B      #14,D0
0000195C  43F8 006F               1380      LEA         pr_SUB,A1
00001960  4E4F                    1381      TRAP        #15
00001962                          1382      ** Print size
00001962  43F8 001C               1383      LEA         pr_LONG,A1
00001966  4E4F                    1384      TRAP        #15
00001968                          1385  
00001968  6000 0002               1386      BRA         print_add_to_reg
0000196C                          1387  
0000196C                          1388  print_add_to_reg
0000196C                          1389      ** Print space
0000196C  43F8 0000               1390      LEA         pr_space,A1
00001970  4E4F                    1391      TRAP        #15
00001972                          1392      ** Print source
00001972  1002                    1393      MOVE.B      D2,D0
00001974  0200 003F               1394      ANDI.B      #%00111111,D0
00001978  4EB8 1694               1395      JSR         EADecoder
0000197C                          1396      ** Add comma
0000197C  103C 000E               1397      MOVE.B      #14,D0
00001980  43F8 0014               1398      LEA         pr_comma,A1
00001984  4E4F                    1399      TRAP        #15
00001986                          1400      ** Print destination
00001986  3002                    1401      MOVE.W      D2,D0
00001988  0240 0E00               1402      ANDI.W      #%0000111000000000,D0
0000198C  EC48                    1403      LSR.W       #6,D0
0000198E  4EB8 167C               1404      JSR         EADecoder_left
00001992                          1405  
00001992  6000 F75E               1406      BRA         opdec_return
00001996                          1407  
00001996                          1408  MATCH_ADD_TO_EA_B
00001996                          1409      ** Move command size into D1
00001996  123C 0002               1410      MOVE.B      #2,D1
0000199A                          1411      ** Print command
0000199A  103C 000E               1412      MOVE.B      #14,D0
0000199E  43F8 0061               1413      LEA         pr_ADD,A1
000019A2  4E4F                    1414      TRAP        #15
000019A4                          1415      ** Print size
000019A4  43F8 0016               1416      LEA         pr_BYTE,A1
000019A8  4E4F                    1417      TRAP        #15
000019AA                          1418  
000019AA  6000 007A               1419      BRA         print_add_to_ea
000019AE                          1420  
000019AE                          1421  MATCH_ADD_TO_EA_W
000019AE                          1422      ** Move command size into D1
000019AE  123C 0002               1423      MOVE.B      #2,D1
000019B2                          1424      ** Print command
000019B2  103C 000E               1425      MOVE.B      #14,D0
000019B6  43F8 0061               1426      LEA         pr_ADD,A1
000019BA  4E4F                    1427      TRAP        #15
000019BC                          1428      ** Print size
000019BC  43F8 0019               1429      LEA         pr_WORD,A1
000019C0  4E4F                    1430      TRAP        #15
000019C2                          1431  
000019C2  6000 0062               1432      BRA         print_add_to_ea
000019C6                          1433  
000019C6                          1434  MATCH_ADD_TO_EA_L
000019C6                          1435      ** Move command size into D1
000019C6  123C 0004               1436      MOVE.B      #4,D1
000019CA                          1437      ** Print command
000019CA  103C 000E               1438      MOVE.B      #14,D0
000019CE  43F8 0061               1439      LEA         pr_ADD,A1
000019D2  4E4F                    1440      TRAP        #15
000019D4                          1441      ** Print size
000019D4  43F8 001C               1442      LEA         pr_LONG,A1
000019D8  4E4F                    1443      TRAP        #15
000019DA                          1444  
000019DA  6000 004A               1445      BRA         print_add_to_ea
000019DE                          1446  
000019DE                          1447  MATCH_SUB_TO_EA_B
000019DE                          1448      ** Move command size into D1
000019DE  123C 0002               1449      MOVE.B      #2,D1
000019E2                          1450      ** Print command
000019E2  103C 000E               1451      MOVE.B      #14,D0
000019E6  43F8 006F               1452      LEA         pr_SUB,A1
000019EA  4E4F                    1453      TRAP        #15
000019EC                          1454      ** Print size
000019EC  43F8 0016               1455      LEA         pr_BYTE,A1
000019F0  4E4F                    1456      TRAP        #15
000019F2                          1457  
000019F2  6000 0032               1458      BRA         print_add_to_ea
000019F6                          1459  
000019F6                          1460  MATCH_SUB_TO_EA_W
000019F6                          1461      ** Move command size into D1
000019F6  123C 0002               1462      MOVE.B      #2,D1
000019FA                          1463      ** Print command
000019FA  103C 000E               1464      MOVE.B      #14,D0
000019FE  43F8 006F               1465      LEA         pr_SUB,A1
00001A02  4E4F                    1466      TRAP        #15
00001A04                          1467      ** Print size
00001A04  43F8 0019               1468      LEA         pr_WORD,A1
00001A08  4E4F                    1469      TRAP        #15
00001A0A                          1470  
00001A0A  6000 001A               1471      BRA         print_add_to_ea
00001A0E                          1472  
00001A0E                          1473  MATCH_SUB_TO_EA_L
00001A0E                          1474      ** Move command size into D1
00001A0E  123C 0004               1475      MOVE.B      #4,D1
00001A12                          1476      ** Print command
00001A12  103C 000E               1477      MOVE.B      #14,D0
00001A16  43F8 006F               1478      LEA         pr_SUB,A1
00001A1A  4E4F                    1479      TRAP        #15
00001A1C                          1480      ** Print size
00001A1C  43F8 001C               1481      LEA         pr_LONG,A1
00001A20  4E4F                    1482      TRAP        #15
00001A22                          1483  
00001A22  6000 0002               1484      BRA         print_add_to_ea
00001A26                          1485  
00001A26                          1486  print_add_to_ea
00001A26                          1487      ** Print space
00001A26  43F8 0000               1488      LEA         pr_space,A1
00001A2A  4E4F                    1489      TRAP        #15
00001A2C                          1490      ** Print Source
00001A2C  3002                    1491      MOVE.W      D2,D0
00001A2E  0240 0E00               1492      ANDI.W      #%0000111000000000,D0
00001A32  EC48                    1493      LSR.W       #6,D0
00001A34  4EB8 167C               1494      JSR         EADecoder_left
00001A38                          1495      ** Add comma
00001A38  103C 000E               1496      MOVE.B      #14,D0
00001A3C  43F8 0014               1497      LEA         pr_comma,A1
00001A40  4E4F                    1498      TRAP        #15
00001A42                          1499      ** Print source
00001A42  1002                    1500      MOVE.B      D2,D0
00001A44  0200 003F               1501      ANDI.B      #%00111111,D0
00001A48  4EB8 1694               1502      JSR         EADecoder
00001A4C                          1503  
00001A4C  6000 F6A4               1504      BRA         opdec_return
00001A50                          1505  
00001A50                          1506  
00001A50                          1507  MATCH_ADDQ_B
00001A50                          1508      ** Move command size into D1
00001A50  123C 0002               1509      MOVE.B      #2,D1
00001A54                          1510      ** Print command
00001A54  103C 000E               1511      MOVE.B      #14,D0
00001A58  43F8 006A               1512      LEA         pr_ADDQ,A1
00001A5C  4E4F                    1513      TRAP        #15
00001A5E                          1514      ** Print size
00001A5E  43F8 0016               1515      LEA         pr_BYTE,A1
00001A62  4E4F                    1516      TRAP        #15
00001A64                          1517  
00001A64  6000 0032               1518      BRA         print_addq
00001A68                          1519  
00001A68                          1520  MATCH_ADDQ_W
00001A68                          1521      ** Move command size into D1
00001A68  123C 0002               1522      MOVE.B      #2,D1
00001A6C                          1523      ** Print command
00001A6C  103C 000E               1524      MOVE.B      #14,D0
00001A70  43F8 006A               1525      LEA         pr_ADDQ,A1
00001A74  4E4F                    1526      TRAP        #15
00001A76                          1527      ** Print size
00001A76  43F8 0019               1528      LEA         pr_WORD,A1
00001A7A  4E4F                    1529      TRAP        #15
00001A7C                          1530  
00001A7C  6000 001A               1531      BRA         print_addq
00001A80                          1532  
00001A80                          1533  MATCH_ADDQ_L
00001A80                          1534      ** Move command size into D1
00001A80  123C 0004               1535      MOVE.B      #4,D1
00001A84                          1536      ** Print command
00001A84  103C 000E               1537      MOVE.B      #14,D0
00001A88  43F8 006A               1538      LEA         pr_ADDQ,A1
00001A8C  4E4F                    1539      TRAP        #15
00001A8E                          1540      ** Print size
00001A8E  43F8 001C               1541      LEA         pr_LONG,A1
00001A92  4E4F                    1542      TRAP        #15
00001A94                          1543  
00001A94  6000 0002               1544      BRA         print_addq
00001A98                          1545  
00001A98                          1546  print_addq
00001A98                          1547      ** Print space
00001A98  43F8 0000               1548      LEA         pr_space,A1
00001A9C  4E4F                    1549      TRAP        #15
00001A9E                          1550      ** Print hash
00001A9E  43F8 001F               1551      LEA         pr_hash,A1
00001AA2  4E4F                    1552      TRAP        #15
00001AA4                          1553      ** Print Immediate data
00001AA4  3602                    1554      MOVE.W      D2,D3 * Temporarily move op data
00001AA6  3202                    1555      MOVE.W      D2,D1
00001AA8  0241 0E00               1556      ANDI.W      #%0000111000000000,D1
00001AAC  EC49                    1557      LSR.W       #6,D1
00001AAE  E649                    1558      LSR.W       #3,D1
00001AB0  143C 0010               1559      MOVE.B      #16,D2
00001AB4  303C 000F               1560      MOVE.W      #15,D0
00001AB8  4E4F                    1561      TRAP        #15
00001ABA                          1562  
00001ABA  3403                    1563      MOVE.W      D3,D2 * Move op data back
00001ABC                          1564  
00001ABC                          1565      ** Add comma
00001ABC  103C 000E               1566      MOVE.B      #14,D0
00001AC0  43F8 0014               1567      LEA         pr_comma,A1
00001AC4  4E4F                    1568      TRAP        #15
00001AC6                          1569      ** Decode right side ea
00001AC6  1002                    1570      MOVE.B      D2,D0
00001AC8  0200 003F               1571      ANDI.B      #%00111111,D0
00001ACC  4EB8 1694               1572      JSR         EADecoder
00001AD0                          1573  
00001AD0  6000 F620               1574      BRA         opdec_return
00001AD4                          1575  
00001AD4                          1576  
00001AD4                          1577  MATCH_DIVU
00001AD4                          1578      ** Move command size into D1
00001AD4  123C 0002               1579      MOVE.B      #2,D1
00001AD8                          1580      ** Print command
00001AD8  103C 000E               1581      MOVE.B      #14,D0
00001ADC  43F8 0073               1582      LEA         pr_DIVU,A1
00001AE0  4E4F                    1583      TRAP        #15
00001AE2                          1584      ** Print size
00001AE2  43F8 0019               1585      LEA         pr_WORD,A1
00001AE6  4E4F                    1586      TRAP        #15
00001AE8                          1587      ** Print space
00001AE8  43F8 0000               1588      LEA         pr_space,A1
00001AEC  4E4F                    1589      TRAP        #15
00001AEE                          1590      ** Decode right side ea
00001AEE  1002                    1591      MOVE.B      D2,D0
00001AF0  0200 003F               1592      ANDI.B      #%00111111,D0
00001AF4  4EB8 1694               1593      JSR         EADecoder
00001AF8                          1594      ** Add comma
00001AF8  103C 000E               1595      MOVE.B      #14,D0
00001AFC  43F8 0014               1596      LEA         pr_comma,A1
00001B00  4E4F                    1597      TRAP        #15
00001B02                          1598      ** Decode left side ea
00001B02  3002                    1599      MOVE.W      D2,D0
00001B04  0240 0E00               1600      ANDI.W      #%0000111000000000,D0
00001B08  EC88                    1601      LSR.L       #6,D0
00001B0A  4EB8 167C               1602      JSR         EADecoder_left
00001B0E                          1603  
00001B0E  6000 F5E2               1604      BRA         opdec_return
00001B12                          1605  
00001B12                          1606  
00001B12                          1607  
00001B12                          1608  MATCH_MOVEM_TO_MEM_W
00001B12                          1609      ** Move command size into D1
00001B12  123C 0002               1610      MOVE.B      #2,D1
00001B16                          1611      ** Print command
00001B16  103C 000E               1612      MOVE.B      #14,D0
00001B1A  43F8 0037               1613      LEA         pr_MOVEM,A1
00001B1E  4E4F                    1614      TRAP        #15
00001B20                          1615      ** Print size
00001B20  43F8 0019               1616      LEA         pr_WORD,A1
00001B24  4E4F                    1617      TRAP        #15
00001B26                          1618  
00001B26  6000 0016               1619      BRA         print_movem_to_mem
00001B2A                          1620  MATCH_MOVEM_TO_MEM_L
00001B2A                          1621      ** Move command size into D1
00001B2A  123C 0004               1622      MOVE.B      #4,D1
00001B2E                          1623      ** Print command
00001B2E  103C 000E               1624      MOVE.B      #14,D0
00001B32  43F8 0037               1625      LEA         pr_MOVEM,A1
00001B36  4E4F                    1626      TRAP        #15
00001B38                          1627      ** Print size
00001B38  43F8 001C               1628      LEA         pr_LONG,A1
00001B3C  4E4F                    1629      TRAP        #15
00001B3E                          1630  print_movem_to_mem
00001B3E                          1631      ** Print space
00001B3E  43F8 0000               1632      LEA         pr_space,A1
00001B42  4E4F                    1633      TRAP        #15
00001B44                          1634      
00001B44  6100 001E               1635      BSR         print_movem_mask_to_mem
00001B48                          1636      ** Add comma
00001B48  103C 000E               1637      MOVE.B      #14,D0
00001B4C  43F8 0014               1638      LEA         pr_comma,A1
00001B50  4E4F                    1639      TRAP        #15
00001B52                          1640      ** Decode right side ea
00001B52  1002                    1641      MOVE.B      D2,D0
00001B54  0200 003F               1642      ANDI.B      #%00111111,D0
00001B58  4EB8 1694               1643      JSR         EADecoder
00001B5C                          1644  
00001B5C  6000 F594               1645      BRA         opdec_return
00001B60                          1646          
00001B60                          1647      
00001B60                          1648  MATCH_MOVEM_TO_REG_W
00001B60  3A02                    1649      MOVE.W      D2,D5       *REMOVE
00001B62                          1650      
00001B62                          1651  MATCH_MOVEM_TO_REG_L
00001B62  3A02                    1652      MOVE.W      D2,D5       *REMOVE
00001B64                          1653      
00001B64                          1654      
00001B64                          1655  print_movem_mask_to_mem
00001B64  48A7 FF7E               1656      MOVEM       D0-D7/A1-A6,-(SP)
00001B68                          1657  
00001B68  4243                    1658      CLR         D3          ** Temp register
00001B6A  3A10                    1659      MOVE.W      (A0),D5     ** Holds direct registers
00001B6C  3818                    1660      MOVE.W      (A0)+,D4    ** Holds address registers
00001B6E  0245 00FF               1661      ANDI.W      #%0000000011111111,D5
00001B72  0244 FF00               1662      ANDI.W      #%1111111100000000,D4
00001B76  E04C                    1663      LSR.W       #8,D4
00001B78                          1664      
00001B78  6100 0012               1665      BSR         print_movem_dn
00001B7C                          1666      
00001B7C                          1667      ** Print ADDRESS REG slash
00001B7C  103C 000E               1668      MOVE.B      #14,D0
00001B80  43F8 0026               1669      LEA         pr_slash,A1
00001B84  4E4F                    1670      TRAP        #15
00001B86                          1671      
00001B86                          1672      *BSR         print_movem_an
00001B86                          1673      
00001B86  4C9F 7EFF               1674      MOVEM       (SP)+,D0-D7/A1-A6
00001B8A  4E75                    1675      RTS
00001B8C                          1676      
00001B8C                          1677      
00001B8C                          1678  print_movem_dn
00001B8C                          1679      
00001B8C                          1680  to_mem_d0 *************************** D0
00001B8C                          1681      ** Test bit
00001B8C  0804 0007               1682      BTST        #7,D4
00001B90  6700 001C               1683      BEQ         to_mem_d1
00001B94                          1684      ** Set D3
00001B94  163C 0001               1685      MOVE.B      #1,D3
00001B98                          1686      ** Print register
00001B98  103C 000E               1687      MOVE.B      #14,D0
00001B9C  43F8 00C5               1688      LEA         pr_d0,A1
00001BA0  4E4F                    1689      TRAP        #15
00001BA2                          1690      
00001BA2                          1691      ** Check if next bit is clear
00001BA2                          1692      ** If true, skip next
00001BA2  0804 0006               1693      BTST        #6,D4
00001BA6  6700 0028               1694      BEQ         to_mem_d2
00001BAA                          1695      ** Else, check cascade
00001BAA  6000 00FC               1696      BRA         cascade_d1
00001BAE                          1697  
00001BAE                          1698  to_mem_d1 *************************** D1
00001BAE                          1699      ** Test bit
00001BAE  0804 0006               1700      BTST        #6,D4
00001BB2  6700 001C               1701      BEQ         to_mem_d2
00001BB6                          1702      ** Set D3
00001BB6  163C 0001               1703      MOVE.B      #1,D3
00001BBA                          1704      ** Print register
00001BBA  103C 000E               1705      MOVE.B      #14,D0
00001BBE  43F8 00C8               1706      LEA         pr_d1,A1
00001BC2  4E4F                    1707      TRAP        #15
00001BC4                          1708      
00001BC4                          1709      ** Check if next bit is clear
00001BC4                          1710      ** If true, skip next
00001BC4  0804 0005               1711      BTST        #5,D4
00001BC8  6700 002C               1712      BEQ         to_mem_d3
00001BCC                          1713      ** Else, check cascade
00001BCC  6000 00F2               1714      BRA         cascade_d2
00001BD0                          1715  
00001BD0                          1716  to_mem_d2 *************************** D2
00001BD0                          1717      ** Test bit
00001BD0  0804 0005               1718      BTST        #5,D4
00001BD4  6700 0020               1719      BEQ         to_mem_d3
00001BD8                          1720      ** Print slash if D3 set
00001BD8  6100 016E               1721      BSR         slash_check
00001BDC                          1722      ** Set D3
00001BDC  163C 0001               1723      MOVE.B      #1,D3
00001BE0                          1724      ** Print register
00001BE0  103C 000E               1725      MOVE.B      #14,D0
00001BE4  43F8 00CB               1726      LEA         pr_d2,A1
00001BE8  4E4F                    1727      TRAP        #15
00001BEA                          1728      
00001BEA                          1729      ** Check if next bit is clear
00001BEA                          1730      ** If true, skip next
00001BEA  0804 0004               1731      BTST        #4,D4
00001BEE  6700 002C               1732      BEQ         to_mem_d4
00001BF2                          1733      ** Else, check cascade
00001BF2  6000 00E4               1734      BRA         cascade_d3
00001BF6                          1735  
00001BF6                          1736  to_mem_d3 *************************** D3
00001BF6                          1737      ** Test bit
00001BF6  0804 0004               1738      BTST        #4,D4
00001BFA  6700 0020               1739      BEQ         to_mem_d4
00001BFE                          1740      ** Print slash if D3 set
00001BFE  6100 0148               1741      BSR         slash_check
00001C02                          1742      ** Set D3
00001C02  163C 0001               1743      MOVE.B      #1,D3
00001C06                          1744      ** Print register
00001C06  103C 000E               1745      MOVE.B      #14,D0
00001C0A  43F8 00CE               1746      LEA         pr_d3,A1
00001C0E  4E4F                    1747      TRAP        #15
00001C10                          1748      
00001C10                          1749      ** Check if next bit is clear
00001C10                          1750      ** If true, skip next
00001C10  0804 0003               1751      BTST        #3,D4
00001C14  6700 002C               1752      BEQ         to_mem_d5
00001C18                          1753      ** Else, check cascade
00001C18  6000 00D6               1754      BRA         cascade_d4
00001C1C                          1755  
00001C1C                          1756  to_mem_d4 *************************** D4
00001C1C                          1757      ** Test bit
00001C1C  0804 0003               1758      BTST        #3,D4
00001C20  6700 0020               1759      BEQ         to_mem_d5
00001C24                          1760      ** Print slash if D3 set
00001C24  6100 0122               1761      BSR         slash_check
00001C28                          1762      ** Set D3
00001C28  163C 0001               1763      MOVE.B      #1,D3
00001C2C                          1764      ** Print register
00001C2C  103C 000E               1765      MOVE.B      #14,D0
00001C30  43F8 00D1               1766      LEA         pr_d4,A1
00001C34  4E4F                    1767      TRAP        #15
00001C36                          1768      
00001C36                          1769      ** Check if next bit is clear
00001C36                          1770      ** If true, skip next
00001C36  0804 0002               1771      BTST        #2,D4
00001C3A  6700 002C               1772      BEQ         to_mem_d6
00001C3E                          1773      ** Else, check cascade
00001C3E  6000 00C8               1774      BRA         cascade_d5
00001C42                          1775  
00001C42                          1776  to_mem_d5 *************************** D5
00001C42                          1777      ** Test bit
00001C42  0804 0002               1778      BTST        #2,D4
00001C46  6700 0020               1779      BEQ         to_mem_d6
00001C4A                          1780      ** Print slash if D3 set
00001C4A  6100 00FC               1781      BSR         slash_check
00001C4E                          1782      ** Set D3
00001C4E  163C 0001               1783      MOVE.B      #1,D3
00001C52                          1784      ** Print register
00001C52  103C 000E               1785      MOVE.B      #14,D0
00001C56  43F8 00D4               1786      LEA         pr_d5,A1
00001C5A  4E4F                    1787      TRAP        #15
00001C5C                          1788      
00001C5C                          1789      ** Check if next bit is clear
00001C5C                          1790      ** If true, skip next
00001C5C  0804 0001               1791      BTST        #1,D4
00001C60  6700 002C               1792      BEQ         to_mem_d7
00001C64                          1793      ** Else, check cascade
00001C64  6000 00BA               1794      BRA         cascade_d6
00001C68                          1795  
00001C68                          1796  to_mem_d6 *************************** D6
00001C68                          1797      ** Test bit
00001C68  0804 0001               1798      BTST        #1,D4
00001C6C  6700 0020               1799      BEQ         to_mem_d7
00001C70                          1800      ** Print slash if D3 set
00001C70  6100 00D6               1801      BSR         slash_check
00001C74                          1802      ** Set D3
00001C74  163C 0001               1803      MOVE.B      #1,D3
00001C78                          1804      ** Print register
00001C78  103C 000E               1805      MOVE.B      #14,D0
00001C7C  43F8 00D7               1806      LEA         pr_d6,A1
00001C80  4E4F                    1807      TRAP        #15
00001C82                          1808      
00001C82                          1809      ** Check if next bit is clear
00001C82                          1810      ** If true, skip next
00001C82  0804 0000               1811      BTST        #0,D4
00001C86  6700 001C               1812      BEQ         print_movem_dn_end
00001C8A                          1813      ** Else, check cascade
00001C8A  6000 00AC               1814      BRA         cascade_d7
00001C8E                          1815      
00001C8E                          1816  to_mem_d7 *************************** D7
00001C8E                          1817      ** Test bit
00001C8E  0804 0000               1818      BTST        #0,D4
00001C92  6700 0010               1819      BEQ         print_movem_dn_end
00001C96                          1820      ** Print slash if D3 set
00001C96  6100 00B0               1821      BSR         slash_check
00001C9A                          1822      ** Print register
00001C9A  103C 000E               1823      MOVE.B      #14,D0
00001C9E  43F8 00D7               1824      LEA         pr_d6,A1
00001CA2  4E4F                    1825      TRAP        #15
00001CA4                          1826      
00001CA4                          1827  print_movem_dn_end
00001CA4  4243                    1828      CLR         D3
00001CA6  4E75                    1829      RTS
00001CA8                          1830      
00001CA8                          1831  
00001CA8                          1832  cascade_d1 *************************** -D1
00001CA8                          1833      ** If the next bit is set, check next
00001CA8  0804 0005               1834      BTST        #5,D4
00001CAC  6600 0012               1835      BNE         cascade_d2
00001CB0                          1836      ** Else, finish the list
00001CB0  43F8 0024               1837      LEA         pr_hyphen,A1
00001CB4  4E4F                    1838      TRAP        #15
00001CB6  43F8 00C8               1839      LEA         pr_D1,A1
00001CBA  4E4F                    1840      TRAP        #15
00001CBC                          1841      
00001CBC  6000 FF38               1842      BRA         to_mem_d3
00001CC0                          1843      
00001CC0                          1844  cascade_d2 *************************** -D2
00001CC0                          1845      ** If the next bit is set, check next
00001CC0  0804 0004               1846      BTST        #4,D4
00001CC4  6600 0012               1847      BNE         cascade_d3
00001CC8                          1848      ** Else, finish the list
00001CC8  43F8 0024               1849      LEA         pr_hyphen,A1
00001CCC  4E4F                    1850      TRAP        #15
00001CCE  43F8 00CB               1851      LEA         pr_D2,A1
00001CD2  4E4F                    1852      TRAP        #15
00001CD4                          1853      
00001CD4  6000 FF46               1854      BRA         to_mem_d4
00001CD8                          1855      
00001CD8                          1856  cascade_d3 *************************** -D3
00001CD8                          1857      ** If the next bit is set, check next
00001CD8  0804 0003               1858      BTST        #3,D4
00001CDC  6600 0012               1859      BNE         cascade_d4
00001CE0                          1860      ** Else, finish the list
00001CE0  43F8 0024               1861      LEA         pr_hyphen,A1
00001CE4  4E4F                    1862      TRAP        #15
00001CE6  43F8 00CE               1863      LEA         pr_D3,A1
00001CEA  4E4F                    1864      TRAP        #15
00001CEC                          1865      
00001CEC  6000 FF54               1866      BRA         to_mem_d5
00001CF0                          1867      
00001CF0                          1868  cascade_d4 *************************** -D4
00001CF0                          1869      ** If the next bit is set, check next
00001CF0  0804 0002               1870      BTST        #2,D4
00001CF4  6600 0012               1871      BNE         cascade_d5
00001CF8                          1872      ** Else, finish the list
00001CF8  43F8 0024               1873      LEA         pr_hyphen,A1
00001CFC  4E4F                    1874      TRAP        #15
00001CFE  43F8 00D1               1875      LEA         pr_D4,A1
00001D02  4E4F                    1876      TRAP        #15
00001D04                          1877      
00001D04  6000 FF62               1878      BRA         to_mem_d6
00001D08                          1879      
00001D08                          1880  cascade_d5 *************************** -D5
00001D08                          1881      ** If the next bit is set, check next
00001D08  0804 0001               1882      BTST        #1,D4
00001D0C  6600 0012               1883      BNE         cascade_d6
00001D10                          1884      ** Else, finish the list
00001D10  43F8 0024               1885      LEA         pr_hyphen,A1
00001D14  4E4F                    1886      TRAP        #15
00001D16  43F8 00D4               1887      LEA         pr_D5,A1
00001D1A  4E4F                    1888      TRAP        #15
00001D1C                          1889      
00001D1C  6000 FF70               1890      BRA         to_mem_d7
00001D20                          1891      
00001D20                          1892  cascade_d6 *************************** -D6
00001D20                          1893      ** If the next bit is set, check next
00001D20  0804 0000               1894      BTST        #0,D4
00001D24  6600 0012               1895      BNE         cascade_d7
00001D28                          1896      ** Else, finish the list
00001D28  43F8 0024               1897      LEA         pr_hyphen,A1
00001D2C  4E4F                    1898      TRAP        #15
00001D2E  43F8 00D7               1899      LEA         pr_D6,A1
00001D32  4E4F                    1900      TRAP        #15
00001D34                          1901      
00001D34  6000 FF6E               1902      BRA         print_movem_dn_end
00001D38                          1903      
00001D38                          1904  cascade_d7 *************************** -D7
00001D38                          1905      ** Else, finish the list
00001D38  43F8 0024               1906      LEA         pr_hyphen,A1
00001D3C  4E4F                    1907      TRAP        #15
00001D3E  43F8 00DA               1908      LEA         pr_D7,A1
00001D42  4E4F                    1909      TRAP        #15
00001D44                          1910      
00001D44  6000 FF5E               1911      BRA         print_movem_dn_end
00001D48                          1912  
00001D48                          1913  
00001D48                          1914  print_movem_an
00001D48                          1915  
00001D48                          1916  to_mem_a0
00001D48                          1917  to_mem_a1
00001D48                          1918  to_mem_a2
00001D48                          1919  to_mem_a3
00001D48                          1920  to_mem_a4
00001D48                          1921  to_mem_a5
00001D48                          1922  to_mem_a6
00001D48                          1923  to_mem_a7
00001D48                          1924      
00001D48                          1925  slash_check
00001D48  0C03 0001               1926      CMPI.B      #1,D3
00001D4C  6600 000E               1927      BNE         no_slash
00001D50                          1928      ** Clear D3 and print slash
00001D50  4243                    1929      CLR         D3
00001D52  103C 000E               1930      MOVE.B      #14,D0
00001D56  43F8 0026               1931      LEA         pr_slash,A1
00001D5A  4E4F                    1932      TRAP        #15
00001D5C                          1933      
00001D5C                          1934  no_slash
00001D5C  4E75                    1935      RTS
00001D5E                          1936  
00001D5E                          1937  
00001D5E                          1938  
00001D5E                          1939  
00001D5E                          1940  
00001D5E                          1941  
00001D5E                          1942  -------------------- end include --------------------
00001D5E                          1943                  INCLUDE 'spencer_opcodes.x68'
00001D5E  =0000000E               1944  SHIFT       EQU %1110
00001D5E  =00000003               1945  RO          EQU %11
00001D5E  =00000000               1946  AS          EQU %00
00001D5E  =00000001               1947  LS          EQU %01
00001D5E  =00000000               1948  R           EQU %0
00001D5E  =00000001               1949  L           EQU %1
00001D5E  =00000001               1950  SHIFT_register  EQU %1
00001D5E  =00000000               1951  SHIFT_immed     EQU %0
00001D5E  =00000000               1952  SHIFT_BYTE  EQU %00
00001D5E  =00000001               1953  SHIFT_WORD  EQU %01
00001D5E  =00000003               1954  SHIFT_LONG  EQU %11
00001D5E                          1955  
00001D5E                          1956  CHECK_SHIFT
00001D5E  6100 010E               1957      BSR     Get_Count_Register_Val          * register 3
00001D62  6100 011E               1958      BSR     Get_Size                        * register 4
00001D66  6100 012E               1959      BSR     Get_Direction                   * register 5
00001D6A  6100 013E               1960      BSR     Get_Is_Register_Or_Immediate    * register 6
00001D6E  6100 0152               1961      BSR     Get_Shift_Opcode                * register 7
00001D72                          1962  
00001D72  6100 0024               1963      BSR     PrintShiftData
00001D76                          1964  
00001D76  6100 000C               1965      BSR     getShiftDestReg
00001D7A                          1966  
00001D7A  103C 0003               1967      MOVE.B  #3,D0
00001D7E  4E4F                    1968      TRAP    #15
00001D80                          1969  
00001D80  6000 F370               1970      BRA         opdec_return
00001D84                          1971  
00001D84                          1972  getShiftDestReg
00001D84                          1973  
00001D84  48A7 2000               1974      MOVEM.W     D2, -(SP)
00001D88                          1975  
00001D88  123C 000D               1976      MOVE.B      #13,D1
00001D8C  E3AA                    1977      LSL.L       D1,D2
00001D8E  E2AA                    1978      LSR.L       D1,D2
00001D90  1202                    1979      MOVE.B      D2,D1
00001D92                          1980  
00001D92  4C9F 0004               1981      MOVEM.W     (SP)+,D2
00001D96  4E75                    1982      RTS
00001D98                          1983  
00001D98                          1984  
00001D98                          1985  PrintShiftData
00001D98                          1986  
00001D98  BE3C 0003               1987      CMP.B   #RO,D7
00001D9C  6700 0012               1988      BEQ     printRotate
00001DA0  BE3C 0000               1989      CMP.B   #AS,D7
00001DA4  6700 0014               1990      BEQ     printArithShift
00001DA8  BE3C 0001               1991      CMP.B   #LS,D7
00001DAC  6700 0016               1992      BEQ     printLogicShift
00001DB0                          1993  
00001DB0                          1994  printRotate
00001DB0  43F8 007A               1995      LEA         pr_SHIFT_RO,A1
00001DB4  4EF9 00001DCE           1996      JMP         executeShiftOpcodePrint
00001DBA                          1997  printArithShift
00001DBA  43F8 007D               1998      LEA         pr_SHIFT_AS,A1
00001DBE  4EF9 00001DCE           1999      JMP         executeShiftOpcodePrint
00001DC4                          2000  printLogicShift
00001DC4  43F8 0080               2001      LEA         pr_SHIFT_LS,A1
00001DC8  4EF9 00001DCE           2002      JMP         executeShiftOpcodePrint
00001DCE                          2003  executeShiftOpcodePrint
00001DCE  6100 0148               2004      BSR         PrintString
00001DD2                          2005  
00001DD2  BA3C 0000               2006      CMP.B   #R,D5
00001DD6  6700 000A               2007      BEQ     printShiftRight
00001DDA  BA3C 0001               2008      CMP.B   #L,D5
00001DDE  6700 000C               2009      BEQ     printShiftLeft
00001DE2                          2010  
00001DE2                          2011  printShiftRight
00001DE2  43F8 0085               2012      LEA         pr_SHIFT_R,A1
00001DE6  4EF9 00001DF6           2013      JMP         executePrintShiftdirection
00001DEC                          2014  printShiftLeft
00001DEC  43F8 0083               2015      LEA         pr_SHIFT_L,A1
00001DF0  4EF9 00001DF6           2016      JMP         executePrintShiftdirection
00001DF6                          2017  executePrintShiftdirection
00001DF6  6100 0120               2018      BSR         PrintString
00001DFA                          2019  
00001DFA  B83C 0000               2020      CMP.B   #SHIFT_BYTE,D4
00001DFE  6700 0012               2021      BEQ     printShiftByte
00001E02  B83C 0001               2022      CMP.B   #SHIFT_WORD,D4
00001E06  6700 0014               2023      BEQ     printShiftWord
00001E0A  B83C 0003               2024      CMP.B   #SHIFT_LONG,D4
00001E0E  6700 0016               2025      BEQ     printShiftLong
00001E12                          2026  
00001E12                          2027  printShiftByte
00001E12  43F8 0016               2028      LEA     pr_BYTE,A1
00001E16  4EF9 00001E30           2029      JMP     executePrintShiftSize
00001E1C                          2030  printShiftWord
00001E1C  43F8 0019               2031      LEA     pr_WORD,A1
00001E20  4EF9 00001E30           2032      JMP     executePrintShiftSize
00001E26                          2033  printShiftLong
00001E26  43F8 001C               2034      LEA     pr_LONG,A1
00001E2A  4EF9 00001E30           2035      JMP     executePrintShiftSize
00001E30                          2036  executePrintShiftSize
00001E30  6100 00E6               2037      BSR         PrintString
00001E34  43F8 0000               2038      LEA     pr_space,A1
00001E38  6100 00DE               2039      BSR     PrintString
00001E3C                          2040  
00001E3C  BC3C 0001               2041      CMP.B   #SHIFT_register,D6
00001E40  6700 000A               2042      BEQ     printShiftReg
00001E44  BC3C 0000               2043      CMP.B   #SHIFT_immed,D6
00001E48  6700 000A               2044      BEQ     printShift
00001E4C                          2045  
00001E4C                          2046  printShiftReg
00001E4C  43F8 0078               2047      LEA     pr_reg,A1
00001E50  6100 00C6               2048      BSR     PrintString
00001E54                          2049  printShift
00001E54  1203                    2050      MOVE.B  D3,D1
00001E56  103C 0003               2051      MOVE.B  #3,D0
00001E5A  4E4F                    2052      TRAP    #15
00001E5C                          2053  
00001E5C  43F8 0014               2054      LEA     pr_comma,A1
00001E60  6100 00B6               2055      BSR     PrintString
00001E64  43F8 0078               2056      LEA     pr_reg,A1
00001E68  6100 00AE               2057      BSR     PrintString
00001E6C  4E75                    2058      RTS
00001E6E                          2059  
00001E6E                          2060  
00001E6E                          2061  Get_Count_Register_Val
00001E6E                          2062  
00001E6E  48A7 2000               2063      MOVEM.W     D2, -(SP)
00001E72                          2064  
00001E72  123C 000D               2065      MOVE.B      #13,D1
00001E76  E98A                    2066      LSL.L       #4,D2
00001E78  E2AA                    2067      LSR.L       D1,D2
00001E7A  1602                    2068      MOVE.B      D2,D3
00001E7C                          2069  
00001E7C  4C9F 0004               2070      MOVEM.W     (SP)+,D2
00001E80  4E75                    2071      RTS
00001E82                          2072  
00001E82                          2073  Get_Size
00001E82                          2074  
00001E82  48A7 2000               2075      MOVEM.W     D2, -(SP)
00001E86                          2076  
00001E86  123C 000E               2077      MOVE.B      #14,D1
00001E8A  E18A                    2078      LSL.L       #8,D2
00001E8C  E2AA                    2079      LSR.L       D1,D2
00001E8E  1802                    2080      MOVE.B      D2,D4
00001E90                          2081  
00001E90  4C9F 0004               2082      MOVEM.W     (SP)+,D2
00001E94  4E75                    2083      RTS
00001E96                          2084  Get_Direction
00001E96                          2085  
00001E96  48A7 2000               2086      MOVEM.W     D2, -(SP)
00001E9A                          2087  
00001E9A  123C 000F               2088      MOVE.B      #15,D1
00001E9E  EF8A                    2089      LSL.L       #7,D2
00001EA0  E2AA                    2090      LSR.L       D1,D2
00001EA2  1A02                    2091      MOVE.B      D2,D5
00001EA4                          2092  
00001EA4  4C9F 0004               2093      MOVEM.W     (SP)+,D2
00001EA8  4E75                    2094      RTS
00001EAA                          2095  Get_Is_Register_Or_Immediate
00001EAA                          2096  
00001EAA  48A7 2000               2097      MOVEM.W     D2, -(SP)
00001EAE                          2098  
00001EAE  123C 000A               2099      MOVE.B      #10,D1
00001EB2  E3AA                    2100      LSL.L       D1,D2
00001EB4  123C 000F               2101      MOVE.B      #15,D1
00001EB8  E2AA                    2102      LSR.L       D1,D2
00001EBA                          2103  
00001EBA  1C02                    2104      MOVE.B      D2,D6
00001EBC                          2105  
00001EBC  4C9F 0004               2106      MOVEM.W     (SP)+,D2
00001EC0  4E75                    2107      RTS
00001EC2                          2108  
00001EC2                          2109  Get_Shift_Opcode
00001EC2                          2110  
00001EC2  48A7 2000               2111      MOVEM.W     D2, -(SP)
00001EC6                          2112  
00001EC6  123C 000B               2113      MOVE.B      #11,D1
00001ECA  E3AA                    2114      LSL.L       D1,D2
00001ECC  123C 000E               2115      MOVE.B      #14,D1
00001ED0  E2AA                    2116      LSR.L       D1,D2
00001ED2                          2117  
00001ED2  1E02                    2118      MOVE.B      D2,D7
00001ED4                          2119  
00001ED4  4C9F 0004               2120      MOVEM.W     (SP)+,D2
00001ED8  4E75                    2121      RTS
00001EDA                          2122  
00001EDA                          2123  
00001EDA                          2124  MATCH_LSL
00001EDA  3A02                    2125      MOVE.W      D2,D5       *REMOVE
00001EDC                          2126  MATCH_LSR
00001EDC  3A02                    2127      MOVE.W      D2,D5       *REMOVE
00001EDE                          2128  MATCH_ASR
00001EDE  3A02                    2129      MOVE.W      D2,D5       *REMOVE
00001EE0                          2130  MATCH_ASL
00001EE0  3A02                    2131      MOVE.W      D2,D5       *REMOVE
00001EE2                          2132  MATCH_ROL
00001EE2  3A02                    2133      MOVE.W      D2,D5       *REMOVE
00001EE4                          2134  MATCH_ROR
00001EE4  3A02                    2135      MOVE.W      D2,D5       *REMOVE
00001EE6                          2136  
00001EE6                          2137  Get_BCC_Displacement_8bit
00001EE6                          2138  
00001EE6  4246                    2139      CLR     D6
00001EE8  1C02                    2140      MOVE.B  D2,D6
00001EEA  4E75                    2141      RTS
00001EEC                          2142  Get_BCC_Displacement_16bit
00001EEC                          2143  
00001EEC  4246                    2144      CLR     D6
00001EEE  3C18                    2145      MOVE.W  (A0)+,D6
00001EF0  4E75                    2146      RTS
00001EF2                          2147  Get_BCC_Displacement_32bit
00001EF2                          2148  
00001EF2  4246                    2149      CLR     D6
00001EF4  2C18                    2150      MOVE.L  (A0)+,D6
00001EF6  4E75                    2151      RTS
00001EF8                          2152  Get_Current_Address
00001EF8                          2153  
00001EF8  4247                    2154      CLR     D7
00001EFA  2E08                    2155      MOVE.L      A0,D7
00001EFC  5587                    2156      SUBI.L      #2,D7
00001EFE  4E75                    2157      RTS
00001F00                          2158  Get_BCC_Destination_Address
00001F00                          2159  
00001F00  9E86                    2160      SUB.L   D6,D7
00001F02  4E75                    2161      RTS
00001F04                          2162  
00001F04                          2163  PrintHex
00001F04                          2164  
00001F04  48A7 2000               2165      MOVEM.W     D2, -(SP)
00001F08                          2166  
00001F08  103C 000F               2167      MOVE.B      #15,D0
00001F0C  143C 0010               2168      MOVE.B      #16,D2 * print base 16
00001F10  4E4F                    2169      TRAP        #15
00001F12                          2170  
00001F12  4C9F 0004               2171      MOVEM.W     (SP)+,D2
00001F16  4E75                    2172      RTS
00001F18                          2173  PrintString
00001F18  103C 000E               2174      MOVE.B      #14,D0
00001F1C  4E4F                    2175      TRAP        #15
00001F1E  4E75                    2176      RTS
00001F20                          2177  PrintSizeByte
00001F20  103C 000E               2178      MOVE.B      #14,D0
00001F24  43F8 0016               2179      LEA         pr_BYTE,A1
00001F28  4E4F                    2180      TRAP        #15
00001F2A  4E75                    2181      RTS
00001F2C                          2182  PrintSizeWord
00001F2C  103C 000E               2183      MOVE.B      #14,D0
00001F30  43F8 0019               2184      LEA         pr_WORD,A1
00001F34  4E4F                    2185      TRAP        #15
00001F36  4E75                    2186      RTS
00001F38                          2187  PrintSizeLong
00001F38  103C 000E               2188      MOVE.B      #14,D0
00001F3C  43F8 001C               2189      LEA         pr_LONG,A1
00001F40  4E4F                    2190      TRAP        #15
00001F42  4E75                    2191      RTS
00001F44                          2192  
00001F44                          2193  
00001F44                          2194  MATCH_CC_T_8
00001F44  3A02                    2195      MOVE.W      D2,D5       *REMOVE
00001F46                          2196  MATCH_CC_T_16
00001F46  3A02                    2197      MOVE.W      D2,D5       *REMOVE
00001F48                          2198  MATCH_CC_T_32
00001F48  3A02                    2199      MOVE.W      D2,D5       *REMOVE
00001F4A                          2200  MATCH_CC_F_8
00001F4A  3A02                    2201      MOVE.W      D2,D5       *REMOVE
00001F4C                          2202  MATCH_CC_F_16
00001F4C  3A02                    2203      MOVE.W      D2,D5       *REMOVE
00001F4E                          2204  MATCH_CC_F_32
00001F4E  3A02                    2205      MOVE.W      D2,D5       *REMOVE
00001F50                          2206  MATCH_CC_HI_8
00001F50                          2207      ** print opcode **
00001F50  43F8 00A1               2208      LEA         pr_BCC_HI,A1
00001F54  61C2                    2209      BSR         PrintString
00001F56                          2210  
00001F56  61C8                    2211      BSR         PrintSizeBYTE
00001F58  43F8 0000               2212      LEA         pr_space,A1
00001F5C  61BA                    2213      BSR         PrintString
00001F5E                          2214  
00001F5E                          2215      ** print address **
00001F5E  6186                    2216      BSR         Get_BCC_Displacement_8bit
00001F60  6196                    2217      BSR         Get_Current_Address
00001F62  619C                    2218      BSR         Get_BCC_Destination_Address
00001F64  2207                    2219      MOVE.L      D7,D1
00001F66  619C                    2220      BSR         PrintHex
00001F68                          2221  
00001F68  6000 F188               2222      BRA         opdec_return
00001F6C                          2223  
00001F6C                          2224  MATCH_CC_HI_16
00001F6C                          2225      ** print opcode **
00001F6C  43F8 00A1               2226      LEA         pr_BCC_HI,A1
00001F70  61A6                    2227      BSR         PrintString
00001F72                          2228  
00001F72  61B8                    2229      BSR         PrintSizeWORD
00001F74  43F8 0000               2230      LEA         pr_space,A1
00001F78  619E                    2231      BSR         PrintString
00001F7A                          2232  
00001F7A                          2233      ** print address **
00001F7A  6100 FF70               2234      BSR         Get_BCC_Displacement_16bit
00001F7E  6100 FF78               2235      BSR         Get_Current_Address
00001F82  6100 FF7C               2236      BSR         Get_BCC_Destination_Address
00001F86  2207                    2237      MOVE.L      D7,D1
00001F88  6100 FF7A               2238      BSR         PrintHex
00001F8C                          2239  
00001F8C  6000 F164               2240      BRA         opdec_return
00001F90                          2241  MATCH_CC_HI_32
00001F90                          2242      ** print opcode **
00001F90  43F8 00A1               2243      LEA         pr_BCC_HI,A1
00001F94  6182                    2244      BSR         PrintString
00001F96                          2245  
00001F96  61A0                    2246      BSR         PrintSizeLONG
00001F98  43F8 0000               2247      LEA         pr_space,A1
00001F9C  6100 FF7A               2248      BSR         PrintString
00001FA0                          2249  
00001FA0                          2250      ** print address **
00001FA0  6100 FF50               2251      BSR         Get_BCC_Displacement_32bit
00001FA4  6100 FF52               2252      BSR         Get_Current_Address
00001FA8  6100 FF56               2253      BSR         Get_BCC_Destination_Address
00001FAC  2207                    2254      MOVE.L      D7,D1
00001FAE  6100 FF54               2255      BSR         PrintHex
00001FB2                          2256  
00001FB2  6000 F13E               2257      BRA         opdec_return
00001FB6                          2258  MATCH_CC_LS_8
00001FB6                          2259      ** print opcode **
00001FB6  43F8 00A9               2260      LEA         pr_BCC_LS,A1
00001FBA  6100 FF5C               2261      BSR         PrintString
00001FBE                          2262  
00001FBE  6100 FF60               2263      BSR         PrintSizeBYTE
00001FC2  43F8 0000               2264      LEA         pr_space,A1
00001FC6  6100 FF50               2265      BSR         PrintString
00001FCA                          2266  
00001FCA                          2267      ** print address **
00001FCA  6100 FF1A               2268      BSR         Get_BCC_Displacement_8bit
00001FCE  6100 FF28               2269      BSR         Get_Current_Address
00001FD2  6100 FF2C               2270      BSR         Get_BCC_Destination_Address
00001FD6  2207                    2271      MOVE.L      D7,D1
00001FD8  6100 FF2A               2272      BSR         PrintHex
00001FDC                          2273  
00001FDC  6000 F114               2274      BRA         opdec_return
00001FE0                          2275  MATCH_CC_LS_16
00001FE0                          2276      ** print opcode **
00001FE0  43F8 00A9               2277      LEA         pr_BCC_LS,A1
00001FE4  6100 FF32               2278      BSR         PrintString
00001FE8                          2279  
00001FE8  6100 FF42               2280      BSR         PrintSizeWORD
00001FEC  43F8 0000               2281      LEA         pr_space,A1
00001FF0  6100 FF26               2282      BSR         PrintString
00001FF4                          2283  
00001FF4                          2284      ** print address **
00001FF4  6100 FEF6               2285      BSR         Get_BCC_Displacement_16bit
00001FF8  6100 FEFE               2286      BSR         Get_Current_Address
00001FFC  6100 FF02               2287      BSR         Get_BCC_Destination_Address
00002000  2207                    2288      MOVE.L      D7,D1
00002002  6100 FF00               2289      BSR         PrintHex
00002006                          2290  
00002006  6000 F0EA               2291      BRA         opdec_return
0000200A                          2292  
0000200A                          2293  MATCH_CC_LS_32
0000200A                          2294      ** print opcode **
0000200A  43F8 00A9               2295      LEA         pr_BCC_LS,A1
0000200E  6100 FF08               2296      BSR         PrintString
00002012                          2297  
00002012  6100 FF24               2298      BSR         PrintSizeLONG
00002016  43F8 0000               2299      LEA         pr_space,A1
0000201A  6100 FEFC               2300      BSR         PrintString
0000201E                          2301  
0000201E                          2302      ** print address **
0000201E  6100 FED2               2303      BSR         Get_BCC_Displacement_32bit
00002022  6100 FED4               2304      BSR         Get_Current_Address
00002026  6100 FED8               2305      BSR         Get_BCC_Destination_Address
0000202A  2207                    2306      MOVE.L      D7,D1
0000202C  6100 FED6               2307      BSR         PrintHex
00002030                          2308  
00002030  6000 F0C0               2309      BRA         opdec_return
00002034                          2310  MATCH_CC_CC_8
00002034                          2311  
00002034                          2312      ** print opcode **
00002034  43F8 008D               2313      LEA         pr_BCC_CC,A1
00002038  6100 FEDE               2314      BSR         PrintString
0000203C                          2315  
0000203C  6100 FEE2               2316      BSR         PrintSizeBYTE
00002040  43F8 0000               2317      LEA         pr_space,A1
00002044  6100 FED2               2318      BSR         PrintString
00002048                          2319  
00002048                          2320      ** print address **
00002048  6100 FE9C               2321      BSR         Get_BCC_Displacement_8bit
0000204C  6100 FEAA               2322      BSR         Get_Current_Address
00002050  6100 FEAE               2323      BSR         Get_BCC_Destination_Address
00002054  2207                    2324      MOVE.L      D7,D1
00002056  6100 FEAC               2325      BSR         PrintHex
0000205A                          2326  
0000205A  6000 F096               2327      BRA         opdec_return
0000205E                          2328  
0000205E                          2329  MATCH_CC_CC_16
0000205E                          2330      ** print opcode **
0000205E  43F8 008D               2331      LEA         pr_BCC_CC,A1
00002062  6100 FEB4               2332      BSR         PrintString
00002066                          2333  
00002066  6100 FEC4               2334      BSR         PrintSizeWORD
0000206A  43F8 0000               2335      LEA         pr_space,A1
0000206E  6100 FEA8               2336      BSR         PrintString
00002072                          2337  
00002072                          2338      ** print address **
00002072  6100 FE78               2339      BSR         Get_BCC_Displacement_16bit
00002076  6100 FE80               2340      BSR         Get_Current_Address
0000207A  6100 FE84               2341      BSR         Get_BCC_Destination_Address
0000207E  2207                    2342      MOVE.L      D7,D1
00002080  6100 FE82               2343      BSR         PrintHex
00002084                          2344  
00002084  6000 F06C               2345      BRA         opdec_return
00002088                          2346  MATCH_CC_CC_32
00002088                          2347      ** print opcode **
00002088  43F8 008D               2348      LEA         pr_BCC_CC,A1
0000208C  6100 FE8A               2349      BSR         PrintString
00002090                          2350  
00002090  6100 FEA6               2351      BSR         PrintSizeLONG
00002094  43F8 0000               2352      LEA         pr_space,A1
00002098  6100 FE7E               2353      BSR         PrintString
0000209C                          2354  
0000209C                          2355      ** print address **
0000209C  6100 FE54               2356      BSR         Get_BCC_Displacement_32bit
000020A0  6100 FE56               2357      BSR         Get_Current_Address
000020A4  6100 FE5A               2358      BSR         Get_BCC_Destination_Address
000020A8  2207                    2359      MOVE.L      D7,D1
000020AA  6100 FE58               2360      BSR         PrintHex
000020AE                          2361  
000020AE  6000 F042               2362      BRA         opdec_return
000020B2                          2363  MATCH_CC_CS_8
000020B2                          2364      ** print opcode **
000020B2  43F8 0091               2365      LEA         pr_BCC_CS,A1
000020B6  6100 FE60               2366      BSR         PrintString
000020BA                          2367  
000020BA  6100 FE64               2368      BSR         PrintSizeBYTE
000020BE  43F8 0000               2369      LEA         pr_space,A1
000020C2  6100 FE54               2370      BSR         PrintString
000020C6                          2371  
000020C6                          2372      ** print address **
000020C6  6100 FE1E               2373      BSR         Get_BCC_Displacement_8bit
000020CA  6100 FE2C               2374      BSR         Get_Current_Address
000020CE  6100 FE30               2375      BSR         Get_BCC_Destination_Address
000020D2  2207                    2376      MOVE.L      D7,D1
000020D4  6100 FE2E               2377      BSR         PrintHex
000020D8                          2378  
000020D8  6000 F018               2379      BRA         opdec_return
000020DC                          2380  MATCH_CC_CS_16
000020DC                          2381      ** print opcode **
000020DC  43F8 0091               2382      LEA         pr_BCC_CS,A1
000020E0  6100 FE36               2383      BSR         PrintString
000020E4                          2384  
000020E4  6100 FE46               2385      BSR         PrintSizeWORD
000020E8  43F8 0000               2386      LEA         pr_space,A1
000020EC  6100 FE2A               2387      BSR         PrintString
000020F0                          2388  
000020F0                          2389      ** print address **
000020F0  6100 FDFA               2390      BSR         Get_BCC_Displacement_16bit
000020F4  6100 FE02               2391      BSR         Get_Current_Address
000020F8  6100 FE06               2392      BSR         Get_BCC_Destination_Address
000020FC  2207                    2393      MOVE.L      D7,D1
000020FE  6100 FE04               2394      BSR         PrintHex
00002102                          2395  
00002102  6000 EFEE               2396      BRA         opdec_return
00002106                          2397  MATCH_CC_CS_32
00002106                          2398      ** print opcode **
00002106  43F8 0091               2399      LEA         pr_BCC_CS,A1
0000210A  6100 FE0C               2400      BSR         PrintString
0000210E                          2401  
0000210E  6100 FE28               2402      BSR         PrintSizeLONG
00002112  43F8 0000               2403      LEA         pr_space,A1
00002116  6100 FE00               2404      BSR         PrintString
0000211A                          2405  
0000211A                          2406      ** print address **
0000211A  6100 FDD6               2407      BSR         Get_BCC_Displacement_32bit
0000211E  6100 FDD8               2408      BSR         Get_Current_Address
00002122  6100 FDDC               2409      BSR         Get_BCC_Destination_Address
00002126  2207                    2410      MOVE.L      D7,D1
00002128  6100 FDDA               2411      BSR         PrintHex
0000212C                          2412  
0000212C  6000 EFC4               2413      BRA         opdec_return
00002130                          2414  MATCH_CC_NE_8
00002130                          2415      ** print opcode **
00002130  43F8 00B5               2416      LEA         pr_BCC_NE,A1
00002134  6100 FDE2               2417      BSR         PrintString
00002138                          2418  
00002138  6100 FDE6               2419      BSR         PrintSizeBYTE
0000213C  43F8 0000               2420      LEA         pr_space,A1
00002140  6100 FDD6               2421      BSR         PrintString
00002144                          2422  
00002144                          2423      ** print address **
00002144  6100 FDA0               2424      BSR         Get_BCC_Displacement_8bit
00002148  6100 FDAE               2425      BSR         Get_Current_Address
0000214C  6100 FDB2               2426      BSR         Get_BCC_Destination_Address
00002150  2207                    2427      MOVE.L      D7,D1
00002152  6100 FDB0               2428      BSR         PrintHex
00002156                          2429  
00002156  6000 EF9A               2430      BRA         opdec_return
0000215A                          2431  MATCH_CC_NE_16
0000215A                          2432      ** print opcode **
0000215A  43F8 00B5               2433      LEA         pr_BCC_NE,A1
0000215E  6100 FDB8               2434      BSR         PrintString
00002162                          2435  
00002162  6100 FDC8               2436      BSR         PrintSizeWORD
00002166  43F8 0000               2437      LEA         pr_space,A1
0000216A  6100 FDAC               2438      BSR         PrintString
0000216E                          2439  
0000216E                          2440      ** print address **
0000216E  6100 FD7C               2441      BSR         Get_BCC_Displacement_16bit
00002172  6100 FD84               2442      BSR         Get_Current_Address
00002176  6100 FD88               2443      BSR         Get_BCC_Destination_Address
0000217A  2207                    2444      MOVE.L      D7,D1
0000217C  6100 FD86               2445      BSR         PrintHex
00002180                          2446  
00002180  6000 EF70               2447      BRA         opdec_return
00002184                          2448  MATCH_CC_NE_32
00002184                          2449      ** print opcode **
00002184  43F8 00B5               2450      LEA         pr_BCC_NE,A1
00002188  6100 FD8E               2451      BSR         PrintString
0000218C                          2452  
0000218C  6100 FDAA               2453      BSR         PrintSizeLONG
00002190  43F8 0000               2454      LEA         pr_space,A1
00002194  6100 FD82               2455      BSR         PrintString
00002198                          2456  
00002198                          2457      ** print address **
00002198  6100 FD58               2458      BSR         Get_BCC_Displacement_32bit
0000219C  6100 FD5A               2459      BSR         Get_Current_Address
000021A0  6100 FD5E               2460      BSR         Get_BCC_Destination_Address
000021A4  2207                    2461      MOVE.L      D7,D1
000021A6  6100 FD5C               2462      BSR         PrintHex
000021AA                          2463  
000021AA  6000 EF46               2464      BRA         opdec_return
000021AE                          2465  MATCH_CC_EQ_8
000021AE                          2466      ** print opcode **
000021AE  43F8 0095               2467      LEA         pr_BCC_EQ,A1
000021B2  6100 FD64               2468      BSR         PrintString
000021B6                          2469  
000021B6  6100 FD68               2470      BSR         PrintSizeBYTE
000021BA  43F8 0000               2471      LEA         pr_space,A1
000021BE  6100 FD58               2472      BSR         PrintString
000021C2                          2473  
000021C2                          2474      ** print address **
000021C2  6100 FD22               2475      BSR         Get_BCC_Displacement_8bit
000021C6  6100 FD30               2476      BSR         Get_Current_Address
000021CA  6100 FD34               2477      BSR         Get_BCC_Destination_Address
000021CE  2207                    2478      MOVE.L      D7,D1
000021D0  6100 FD32               2479      BSR         PrintHex
000021D4                          2480  
000021D4  6000 EF1C               2481      BRA         opdec_return
000021D8                          2482  MATCH_CC_EQ_16
000021D8                          2483      ** print opcode **
000021D8  43F8 0095               2484      LEA         pr_BCC_EQ,A1
000021DC  6100 FD3A               2485      BSR         PrintString
000021E0                          2486  
000021E0  6100 FD4A               2487      BSR         PrintSizeWORD
000021E4  43F8 0000               2488      LEA         pr_space,A1
000021E8  6100 FD2E               2489      BSR         PrintString
000021EC                          2490  
000021EC                          2491      ** print address **
000021EC  6100 FCFE               2492      BSR         Get_BCC_Displacement_16bit
000021F0  6100 FD06               2493      BSR         Get_Current_Address
000021F4  6100 FD0A               2494      BSR         Get_BCC_Destination_Address
000021F8  2207                    2495      MOVE.L      D7,D1
000021FA  6100 FD08               2496      BSR         PrintHex
000021FE                          2497  
000021FE  6000 EEF2               2498      BRA         opdec_return
00002202                          2499  MATCH_CC_EQ_32
00002202                          2500      ** print opcode **
00002202  43F8 0095               2501      LEA         pr_BCC_EQ,A1
00002206  6100 FD10               2502      BSR         PrintString
0000220A                          2503  
0000220A  6100 FD2C               2504      BSR         PrintSizeLONG
0000220E  43F8 0000               2505      LEA         pr_space,A1
00002212  6100 FD04               2506      BSR         PrintString
00002216                          2507  
00002216                          2508      ** print address **
00002216  6100 FCDA               2509      BSR         Get_BCC_Displacement_32bit
0000221A  6100 FCDC               2510      BSR         Get_Current_Address
0000221E  6100 FCE0               2511      BSR         Get_BCC_Destination_Address
00002222  2207                    2512      MOVE.L      D7,D1
00002224  6100 FCDE               2513      BSR         PrintHex
00002228                          2514  
00002228  6000 EEC8               2515      BRA         opdec_return
0000222C                          2516  MATCH_CC_VC_8
0000222C                          2517      ** print opcode **
0000222C  43F8 00BD               2518      LEA         pr_BCC_VC,A1
00002230  6100 FCE6               2519      BSR         PrintString
00002234                          2520  
00002234  6100 FCEA               2521      BSR         PrintSizeBYTE
00002238  43F8 0000               2522      LEA         pr_space,A1
0000223C  6100 FCDA               2523      BSR         PrintString
00002240                          2524  
00002240                          2525      ** print address **
00002240  6100 FCA4               2526      BSR         Get_BCC_Displacement_8bit
00002244  6100 FCB2               2527      BSR         Get_Current_Address
00002248  6100 FCB6               2528      BSR         Get_BCC_Destination_Address
0000224C  2207                    2529      MOVE.L      D7,D1
0000224E  6100 FCB4               2530      BSR         PrintHex
00002252                          2531  
00002252  6000 EE9E               2532      BRA         opdec_return
00002256                          2533  MATCH_CC_VC_16
00002256                          2534      ** print opcode **
00002256  43F8 00BD               2535      LEA         pr_BCC_VC,A1
0000225A  6100 FCBC               2536      BSR         PrintString
0000225E                          2537  
0000225E  6100 FCCC               2538      BSR         PrintSizeWORD
00002262  43F8 0000               2539      LEA         pr_space,A1
00002266  6100 FCB0               2540      BSR         PrintString
0000226A                          2541  
0000226A                          2542      ** print address **
0000226A  6100 FC80               2543      BSR         Get_BCC_Displacement_16bit
0000226E  6100 FC88               2544      BSR         Get_Current_Address
00002272  6100 FC8C               2545      BSR         Get_BCC_Destination_Address
00002276  2207                    2546      MOVE.L      D7,D1
00002278  6100 FC8A               2547      BSR         PrintHex
0000227C                          2548  
0000227C  6000 EE74               2549      BRA         opdec_return
00002280                          2550  MATCH_CC_VC_32
00002280                          2551      ** print opcode **
00002280  43F8 00BD               2552      LEA         pr_BCC_VC,A1
00002284  6100 FC92               2553      BSR         PrintString
00002288                          2554  
00002288  6100 FCAE               2555      BSR         PrintSizeLONG
0000228C  43F8 0000               2556      LEA         pr_space,A1
00002290  6100 FC86               2557      BSR         PrintString
00002294                          2558  
00002294                          2559      ** print address **
00002294  6100 FC5C               2560      BSR         Get_BCC_Displacement_32bit
00002298  6100 FC5E               2561      BSR         Get_Current_Address
0000229C  6100 FC62               2562      BSR         Get_BCC_Destination_Address
000022A0  2207                    2563      MOVE.L      D7,D1
000022A2  6100 FC60               2564      BSR         PrintHex
000022A6                          2565  
000022A6  6000 EE4A               2566      BRA         opdec_return
000022AA                          2567  MATCH_CC_VS_8
000022AA                          2568      ** print opcode **
000022AA  43F8 00C1               2569      LEA         pr_BCC_VS,A1
000022AE  6100 FC68               2570      BSR         PrintString
000022B2                          2571  
000022B2  6100 FC6C               2572      BSR         PrintSizeBYTE
000022B6  43F8 0000               2573      LEA         pr_space,A1
000022BA  6100 FC5C               2574      BSR         PrintString
000022BE                          2575  
000022BE                          2576      ** print address **
000022BE  6100 FC26               2577      BSR         Get_BCC_Displacement_8bit
000022C2  6100 FC34               2578      BSR         Get_Current_Address
000022C6  6100 FC38               2579      BSR         Get_BCC_Destination_Address
000022CA  2207                    2580      MOVE.L      D7,D1
000022CC  6100 FC36               2581      BSR         PrintHex
000022D0                          2582  
000022D0  6000 EE20               2583      BRA         opdec_return
000022D4                          2584  MATCH_CC_VS_16
000022D4                          2585      ** print opcode **
000022D4  43F8 00C1               2586      LEA         pr_BCC_VS,A1
000022D8  6100 FC3E               2587      BSR         PrintString
000022DC                          2588  
000022DC  6100 FC4E               2589      BSR         PrintSizeWORD
000022E0  43F8 0000               2590      LEA         pr_space,A1
000022E4  6100 FC32               2591      BSR         PrintString
000022E8                          2592  
000022E8                          2593      ** print address **
000022E8  6100 FC02               2594      BSR         Get_BCC_Displacement_16bit
000022EC  6100 FC0A               2595      BSR         Get_Current_Address
000022F0  6100 FC0E               2596      BSR         Get_BCC_Destination_Address
000022F4  2207                    2597      MOVE.L      D7,D1
000022F6  6100 FC0C               2598      BSR         PrintHex
000022FA                          2599  
000022FA  6000 EDF6               2600      BRA         opdec_return
000022FE                          2601  MATCH_CC_VS_32
000022FE                          2602      ** print opcode **
000022FE  43F8 00C1               2603      LEA         pr_BCC_VS,A1
00002302  6100 FC14               2604      BSR         PrintString
00002306                          2605  
00002306  6100 FC30               2606      BSR         PrintSizeLONG
0000230A  43F8 0000               2607      LEA         pr_space,A1
0000230E  6100 FC08               2608      BSR         PrintString
00002312                          2609  
00002312                          2610      ** print address **
00002312  6100 FBDE               2611      BSR         Get_BCC_Displacement_32bit
00002316  6100 FBE0               2612      BSR         Get_Current_Address
0000231A  6100 FBE4               2613      BSR         Get_BCC_Destination_Address
0000231E  2207                    2614      MOVE.L      D7,D1
00002320  6100 FBE2               2615      BSR         PrintHex
00002324                          2616  
00002324  6000 EDCC               2617      BRA         opdec_return
00002328                          2618  MATCH_CC_PL_8
00002328                          2619      ** print opcode **
00002328  43F8 00B9               2620      LEA         pr_BCC_PL,A1
0000232C  6100 FBEA               2621      BSR         PrintString
00002330                          2622  
00002330  6100 FBEE               2623      BSR         PrintSizeBYTE
00002334  43F8 0000               2624      LEA         pr_space,A1
00002338  6100 FBDE               2625      BSR         PrintString
0000233C                          2626  
0000233C                          2627      ** print address **
0000233C  6100 FBA8               2628      BSR         Get_BCC_Displacement_8bit
00002340  6100 FBB6               2629      BSR         Get_Current_Address
00002344  6100 FBBA               2630      BSR         Get_BCC_Destination_Address
00002348  2207                    2631      MOVE.L      D7,D1
0000234A  6100 FBB8               2632      BSR         PrintHex
0000234E                          2633  
0000234E  6000 EDA2               2634      BRA         opdec_return
00002352                          2635  MATCH_CC_PL_16
00002352                          2636      ** print opcode **
00002352  43F8 00B9               2637      LEA         pr_BCC_PL,A1
00002356  6100 FBC0               2638      BSR         PrintString
0000235A                          2639  
0000235A  6100 FBD0               2640      BSR         PrintSizeWORD
0000235E  43F8 0000               2641      LEA         pr_space,A1
00002362  6100 FBB4               2642      BSR         PrintString
00002366                          2643  
00002366                          2644      ** print address **
00002366  6100 FB84               2645      BSR         Get_BCC_Displacement_16bit
0000236A  6100 FB8C               2646      BSR         Get_Current_Address
0000236E  6100 FB90               2647      BSR         Get_BCC_Destination_Address
00002372  2207                    2648      MOVE.L      D7,D1
00002374  6100 FB8E               2649      BSR         PrintHex
00002378                          2650  
00002378  6000 ED78               2651      BRA         opdec_return
0000237C                          2652  MATCH_CC_PL_32
0000237C                          2653      ** print opcode **
0000237C  43F8 00B9               2654      LEA         pr_BCC_PL,A1
00002380  6100 FB96               2655      BSR         PrintString
00002384                          2656  
00002384  6100 FBB2               2657      BSR         PrintSizeLONG
00002388  43F8 0000               2658      LEA         pr_space,A1
0000238C  6100 FB8A               2659      BSR         PrintString
00002390                          2660  
00002390                          2661      ** print address **
00002390  6100 FB60               2662      BSR         Get_BCC_Displacement_32bit
00002394  6100 FB62               2663      BSR         Get_Current_Address
00002398  6100 FB66               2664      BSR         Get_BCC_Destination_Address
0000239C  2207                    2665      MOVE.L      D7,D1
0000239E  6100 FB64               2666      BSR         PrintHex
000023A2                          2667  
000023A2  6000 ED4E               2668      BRA         opdec_return
000023A6                          2669  MATCH_CC_MI_8
000023A6                          2670      ** print opcode **
000023A6  43F8 00B1               2671      LEA         pr_BCC_MI,A1
000023AA  6100 FB6C               2672      BSR         PrintString
000023AE                          2673  
000023AE  6100 FB70               2674      BSR         PrintSizeBYTE
000023B2  43F8 0000               2675      LEA         pr_space,A1
000023B6  6100 FB60               2676      BSR         PrintString
000023BA                          2677  
000023BA                          2678      ** print address **
000023BA  6100 FB2A               2679      BSR         Get_BCC_Displacement_8bit
000023BE  6100 FB38               2680      BSR         Get_Current_Address
000023C2  6100 FB3C               2681      BSR         Get_BCC_Destination_Address
000023C6  2207                    2682      MOVE.L      D7,D1
000023C8  6100 FB3A               2683      BSR         PrintHex
000023CC                          2684  
000023CC  6000 ED24               2685      BRA         opdec_return
000023D0                          2686  MATCH_CC_MI_16
000023D0                          2687      ** print opcode **
000023D0  43F8 00B1               2688      LEA         pr_BCC_MI,A1
000023D4  6100 FB42               2689      BSR         PrintString
000023D8                          2690  
000023D8  6100 FB52               2691      BSR         PrintSizeWORD
000023DC  43F8 0000               2692      LEA         pr_space,A1
000023E0  6100 FB36               2693      BSR         PrintString
000023E4                          2694  
000023E4                          2695      ** print address **
000023E4  6100 FB06               2696      BSR         Get_BCC_Displacement_16bit
000023E8  6100 FB0E               2697      BSR         Get_Current_Address
000023EC  6100 FB12               2698      BSR         Get_BCC_Destination_Address
000023F0  2207                    2699      MOVE.L      D7,D1
000023F2  6100 FB10               2700      BSR         PrintHex
000023F6                          2701  
000023F6  6000 ECFA               2702      BRA         opdec_return
000023FA                          2703  MATCH_CC_MI_32
000023FA                          2704      ** print opcode **
000023FA  43F8 00B1               2705      LEA         pr_BCC_MI,A1
000023FE  6100 FB18               2706      BSR         PrintString
00002402                          2707  
00002402  6100 FB34               2708      BSR         PrintSizeLONG
00002406  43F8 0000               2709      LEA         pr_space,A1
0000240A  6100 FB0C               2710      BSR         PrintString
0000240E                          2711  
0000240E                          2712      ** print address **
0000240E  6100 FAE2               2713      BSR         Get_BCC_Displacement_32bit
00002412  6100 FAE4               2714      BSR         Get_Current_Address
00002416  6100 FAE8               2715      BSR         Get_BCC_Destination_Address
0000241A  2207                    2716      MOVE.L      D7,D1
0000241C  6100 FAE6               2717      BSR         PrintHex
00002420                          2718  
00002420  6000 ECD0               2719      BRA         opdec_return
00002424                          2720  MATCH_CC_GE_8
00002424                          2721      ** print opcode **
00002424  43F8 0099               2722      LEA         pr_BCC_GE,A1
00002428  6100 FAEE               2723      BSR         PrintString
0000242C                          2724  
0000242C  6100 FAF2               2725      BSR         PrintSizeBYTE
00002430  43F8 0000               2726      LEA         pr_space,A1
00002434  6100 FAE2               2727      BSR         PrintString
00002438                          2728  
00002438                          2729      ** print address **
00002438  6100 FAAC               2730      BSR         Get_BCC_Displacement_8bit
0000243C  6100 FABA               2731      BSR         Get_Current_Address
00002440  6100 FABE               2732      BSR         Get_BCC_Destination_Address
00002444  2207                    2733      MOVE.L      D7,D1
00002446  6100 FABC               2734      BSR         PrintHex
0000244A                          2735  
0000244A  6000 ECA6               2736      BRA         opdec_return
0000244E                          2737  MATCH_CC_GE_16
0000244E                          2738      ** print opcode **
0000244E  43F8 0099               2739      LEA         pr_BCC_GE,A1
00002452  6100 FAC4               2740      BSR         PrintString
00002456                          2741  
00002456  6100 FAD4               2742      BSR         PrintSizeWORD
0000245A  43F8 0000               2743      LEA         pr_space,A1
0000245E  6100 FAB8               2744      BSR         PrintString
00002462                          2745  
00002462                          2746      ** print address **
00002462  6100 FA88               2747      BSR         Get_BCC_Displacement_16bit
00002466  6100 FA90               2748      BSR         Get_Current_Address
0000246A  6100 FA94               2749      BSR         Get_BCC_Destination_Address
0000246E  2207                    2750      MOVE.L      D7,D1
00002470  6100 FA92               2751      BSR         PrintHex
00002474                          2752  
00002474  6000 EC7C               2753      BRA         opdec_return
00002478                          2754  MATCH_CC_GE_32
00002478                          2755      ** print opcode **
00002478  43F8 0099               2756      LEA         pr_BCC_GE,A1
0000247C  6100 FA9A               2757      BSR         PrintString
00002480                          2758  
00002480  6100 FAB6               2759      BSR         PrintSizeLONG
00002484  43F8 0000               2760      LEA         pr_space,A1
00002488  6100 FA8E               2761      BSR         PrintString
0000248C                          2762  
0000248C                          2763      ** print address **
0000248C  6100 FA64               2764      BSR         Get_BCC_Displacement_32bit
00002490  6100 FA66               2765      BSR         Get_Current_Address
00002494  6100 FA6A               2766      BSR         Get_BCC_Destination_Address
00002498  2207                    2767      MOVE.L      D7,D1
0000249A  6100 FA68               2768      BSR         PrintHex
0000249E                          2769  
0000249E  6000 EC52               2770      BRA         opdec_return
000024A2                          2771  MATCH_CC_LT_8
000024A2                          2772      ** print opcode **
000024A2  43F8 00AD               2773      LEA         pr_BCC_LT,A1
000024A6  6100 FA70               2774      BSR         PrintString
000024AA                          2775  
000024AA  6100 FA74               2776      BSR         PrintSizeBYTE
000024AE  43F8 0000               2777      LEA         pr_space,A1
000024B2  6100 FA64               2778      BSR         PrintString
000024B6                          2779  
000024B6                          2780      ** print address **
000024B6  6100 FA2E               2781      BSR         Get_BCC_Displacement_8bit
000024BA  6100 FA3C               2782      BSR         Get_Current_Address
000024BE  6100 FA40               2783      BSR         Get_BCC_Destination_Address
000024C2  2207                    2784      MOVE.L      D7,D1
000024C4  6100 FA3E               2785      BSR         PrintHex
000024C8                          2786  
000024C8  6000 EC28               2787      BRA         opdec_return
000024CC                          2788  MATCH_CC_LT_16
000024CC                          2789      ** print opcode **
000024CC  43F8 00AD               2790      LEA         pr_BCC_LT,A1
000024D0  6100 FA46               2791      BSR         PrintString
000024D4                          2792  
000024D4  6100 FA56               2793      BSR         PrintSizeWORD
000024D8  43F8 0000               2794      LEA         pr_space,A1
000024DC  6100 FA3A               2795      BSR         PrintString
000024E0                          2796  
000024E0                          2797      ** print address **
000024E0  6100 FA0A               2798      BSR         Get_BCC_Displacement_16bit
000024E4  6100 FA12               2799      BSR         Get_Current_Address
000024E8  6100 FA16               2800      BSR         Get_BCC_Destination_Address
000024EC  2207                    2801      MOVE.L      D7,D1
000024EE  6100 FA14               2802      BSR         PrintHex
000024F2                          2803  
000024F2  6000 EBFE               2804      BRA         opdec_return
000024F6                          2805  MATCH_CC_LT_32
000024F6                          2806      ** print opcode **
000024F6  43F8 00AD               2807      LEA         pr_BCC_LT,A1
000024FA  6100 FA1C               2808      BSR         PrintString
000024FE                          2809  
000024FE  6100 FA38               2810      BSR         PrintSizeLONG
00002502  43F8 0000               2811      LEA         pr_space,A1
00002506  6100 FA10               2812      BSR         PrintString
0000250A                          2813  
0000250A                          2814      ** print address **
0000250A  6100 F9E6               2815      BSR         Get_BCC_Displacement_32bit
0000250E  6100 F9E8               2816      BSR         Get_Current_Address
00002512  6100 F9EC               2817      BSR         Get_BCC_Destination_Address
00002516  2207                    2818      MOVE.L      D7,D1
00002518  6100 F9EA               2819      BSR         PrintHex
0000251C                          2820  
0000251C  6000 EBD4               2821      BRA         opdec_return
00002520                          2822  MATCH_CC_GT_8
00002520                          2823      ** print opcode **
00002520  43F8 009D               2824      LEA         pr_BCC_GT,A1
00002524  6100 F9F2               2825      BSR         PrintString
00002528                          2826  
00002528  6100 F9F6               2827      BSR         PrintSizeBYTE
0000252C  43F8 0000               2828      LEA         pr_space,A1
00002530  6100 F9E6               2829      BSR         PrintString
00002534                          2830  
00002534                          2831      ** print address **
00002534  6100 F9B0               2832      BSR         Get_BCC_Displacement_8bit
00002538  6100 F9BE               2833      BSR         Get_Current_Address
0000253C  6100 F9C2               2834      BSR         Get_BCC_Destination_Address
00002540  2207                    2835      MOVE.L      D7,D1
00002542  6100 F9C0               2836      BSR         PrintHex
00002546                          2837  
00002546  6000 EBAA               2838      BRA         opdec_return
0000254A                          2839  MATCH_CC_GT_16
0000254A                          2840      ** print opcode **
0000254A  43F8 009D               2841      LEA         pr_BCC_GT,A1
0000254E  6100 F9C8               2842      BSR         PrintString
00002552                          2843  
00002552  6100 F9D8               2844      BSR         PrintSizeWORD
00002556  43F8 0000               2845      LEA         pr_space,A1
0000255A  6100 F9BC               2846      BSR         PrintString
0000255E                          2847  
0000255E                          2848      ** print address **
0000255E  6100 F98C               2849      BSR         Get_BCC_Displacement_16bit
00002562  6100 F994               2850      BSR         Get_Current_Address
00002566  6100 F998               2851      BSR         Get_BCC_Destination_Address
0000256A  2207                    2852      MOVE.L      D7,D1
0000256C  6100 F996               2853      BSR         PrintHex
00002570                          2854  
00002570  6000 EB80               2855      BRA         opdec_return
00002574                          2856  MATCH_CC_GT_32
00002574                          2857      ** print opcode **
00002574  43F8 009D               2858      LEA         pr_BCC_GT,A1
00002578  6100 F99E               2859      BSR         PrintString
0000257C                          2860  
0000257C  6100 F9BA               2861      BSR         PrintSizeLONG
00002580  43F8 0000               2862      LEA         pr_space,A1
00002584  6100 F992               2863      BSR         PrintString
00002588                          2864  
00002588                          2865      ** print address **
00002588  6100 F968               2866      BSR         Get_BCC_Displacement_32bit
0000258C  6100 F96A               2867      BSR         Get_Current_Address
00002590  6100 F96E               2868      BSR         Get_BCC_Destination_Address
00002594  2207                    2869      MOVE.L      D7,D1
00002596  6100 F96C               2870      BSR         PrintHex
0000259A                          2871  
0000259A  6000 EB56               2872      BRA         opdec_return
0000259E                          2873  MATCH_CC_LE_8
0000259E                          2874      ** print opcode **
0000259E  43F8 00A5               2875      LEA         pr_BCC_LE,A1
000025A2  6100 F974               2876      BSR         PrintString
000025A6                          2877  
000025A6  6100 F978               2878      BSR         PrintSizeBYTE
000025AA  43F8 0000               2879      LEA         pr_space,A1
000025AE  6100 F968               2880      BSR         PrintString
000025B2                          2881  
000025B2                          2882      ** print address **
000025B2  6100 F932               2883      BSR         Get_BCC_Displacement_8bit
000025B6  6100 F940               2884      BSR         Get_Current_Address
000025BA  6100 F944               2885      BSR         Get_BCC_Destination_Address
000025BE  2207                    2886      MOVE.L      D7,D1
000025C0  6100 F942               2887      BSR         PrintHex
000025C4                          2888  
000025C4  6000 EB2C               2889      BRA         opdec_return
000025C8                          2890  MATCH_CC_LE_16
000025C8                          2891      ** print opcode **
000025C8  43F8 00A5               2892      LEA         pr_BCC_LE,A1
000025CC  6100 F94A               2893      BSR         PrintString
000025D0                          2894  
000025D0  6100 F95A               2895      BSR         PrintSizeWORD
000025D4  43F8 0000               2896      LEA         pr_space,A1
000025D8  6100 F93E               2897      BSR         PrintString
000025DC                          2898  
000025DC                          2899      ** print address **
000025DC  6100 F90E               2900      BSR         Get_BCC_Displacement_16bit
000025E0  6100 F916               2901      BSR         Get_Current_Address
000025E4  6100 F91A               2902      BSR         Get_BCC_Destination_Address
000025E8  2207                    2903      MOVE.L      D7,D1
000025EA  6100 F918               2904      BSR         PrintHex
000025EE                          2905  
000025EE  6000 EB02               2906      BRA         opdec_return
000025F2                          2907  MATCH_CC_LE_32
000025F2                          2908      ** print opcode **
000025F2  43F8 00A5               2909      LEA         pr_BCC_LE,A1
000025F6  6100 F920               2910      BSR         PrintString
000025FA                          2911  
000025FA  6100 F93C               2912      BSR         PrintSizeLONG
000025FE  43F8 0000               2913      LEA         pr_space,A1
00002602  6100 F914               2914      BSR         PrintString
00002606                          2915  
00002606                          2916      ** print address **
00002606  6100 F8EA               2917      BSR         Get_BCC_Displacement_32bit
0000260A  6100 F8EC               2918      BSR         Get_Current_Address
0000260E  6100 F8F0               2919      BSR         Get_BCC_Destination_Address
00002612  2207                    2920      MOVE.L      D7,D1
00002614  6100 F8EE               2921      BSR         PrintHex
00002618                          2922  
00002618  6000 EAD8               2923      BRA         opdec_return
0000261C                          2924  ERROR
0000261C  43F8 0087               2925      LEA         pr_ERROR,A1
00002620  6100 F8F6               2926      BSR         PrintString
00002624  6000 EACC               2927      BRA         opdec_return
00002628                          2928  
00002628                          2929  
00002628                          2930  
00002628                          2931  
00002628                          2932  -------------------- end include --------------------
00002628                          2933                  INCLUDE 'arsany_opcodes.x68'
00002628                          2934  MATCH_MOVEA_W
00002628                          2935      ** Move command size into D1
00002628  123C 0002               2936      MOVE.B      #2,D1
0000262C                          2937      ** Print command
0000262C  103C 000E               2938      MOVE.B      #14,D0
00002630  43F8 0031               2939      LEA         pr_MOVEA,A1
00002634  4E4F                    2940      TRAP        #15
00002636                          2941      ** Print size
00002636  43F8 0019               2942      LEA         pr_WORD,A1
0000263A  4E4F                    2943      TRAP        #15
0000263C                          2944      
0000263C  6000 0016               2945      BRA         print_movea
00002640                          2946  MATCH_MOVEA_L
00002640                          2947      ** Move command size into D1
00002640  123C 0004               2948      MOVE.B      #4,D1
00002644                          2949      ** Print command
00002644  103C 000E               2950      MOVE.B      #14,D0
00002648  43F8 0031               2951      LEA         pr_MOVEA,A1
0000264C  4E4F                    2952      TRAP        #15
0000264E                          2953      ** Print size
0000264E  43F8 001C               2954      LEA         pr_LONG,A1
00002652  4E4F                    2955      TRAP        #15
00002654                          2956  print_movea
00002654                          2957      ** Print space
00002654  43F8 0000               2958      LEA         pr_space,A1
00002658  4E4F                    2959      TRAP        #15
0000265A                          2960      ** Decode right side ea
0000265A  1002                    2961      MOVE.B      D2,D0
0000265C  0200 003F               2962      ANDI.B      #%00111111,D0
00002660  4EB8 1694               2963      JSR         EADecoder
00002664                          2964      ** Add comma
00002664  103C 000E               2965      MOVE.B      #14,D0
00002668  43F8 0014               2966      LEA         pr_comma,A1
0000266C  4E4F                    2967      TRAP        #15
0000266E                          2968      ** Decode left side ea
0000266E  3002                    2969      MOVE.W      D2,D0
00002670  0240 0FC0               2970      ANDI.W      #%0000111111000000,D0
00002674  EC88                    2971      LSR.L       #6,D0
00002676  4EB8 167C               2972      JSR         EADecoder_left
0000267A                          2973      
0000267A  6000 EA76               2974      BRA         opdec_return
0000267E                          2975      
0000267E                          2976      
0000267E                          2977  MATCH_ADDA_W
0000267E                          2978      ** Move command size into D1
0000267E  123C 0002               2979      MOVE.B      #2,D1
00002682                          2980      ** Print command
00002682  103C 000E               2981      MOVE.B      #14,D0
00002686  43F8 003D               2982      LEA         pr_ADDA,A1
0000268A  4E4F                    2983      TRAP        #15
0000268C                          2984      ** Print size
0000268C  43F8 0019               2985      LEA         pr_WORD,A1
00002690  4E4F                    2986      TRAP        #15
00002692                          2987      
00002692  6000 0016               2988      BRA         print_adda
00002696                          2989  MATCH_ADDA_L
00002696                          2990      ** Move command size into D1
00002696  123C 0004               2991      MOVE.B      #4,D1
0000269A                          2992      ** Print command
0000269A  103C 000E               2993      MOVE.B      #14,D0
0000269E  43F8 003D               2994      LEA         pr_ADDA,A1
000026A2  4E4F                    2995      TRAP        #15
000026A4                          2996      ** Print size
000026A4  43F8 001C               2997      LEA         pr_LONG,A1
000026A8  4E4F                    2998      TRAP        #15
000026AA                          2999  print_adda
000026AA                          3000      ** Print space
000026AA  43F8 0002               3001      LEA         pr_space2,A1
000026AE  4E4F                    3002      TRAP        #15
000026B0                          3003      ** Decode right side ea
000026B0  1002                    3004      MOVE.B      D2,D0
000026B2  0200 003F               3005      ANDI.B      #%00111111,D0
000026B6  4EB8 1694               3006      JSR         EADecoder
000026BA                          3007      ** Add comma
000026BA  103C 000E               3008      MOVE.B      #14,D0
000026BE  43F8 0014               3009      LEA         pr_comma,A1
000026C2  4E4F                    3010      TRAP        #15
000026C4                          3011      ** Decode left side ea
000026C4  3002                    3012      MOVE.W      D2,D0
000026C6  0240 0E00               3013      ANDI.W      #%0000111000000000,D0
000026CA  0040 0040               3014      ORI.W       #%0000000001000000,D0
000026CE  EC88                    3015      LSR.L       #6,D0
000026D0  4EB8 167C               3016      JSR         EADecoder_left
000026D4                          3017      
000026D4  6000 EA1C               3018      BRA         opdec_return
000026D8                          3019      
000026D8                          3020      
000026D8                          3021  MATCH_MULS_W
000026D8                          3022      ** Move command size into D1
000026D8  123C 0002               3023      MOVE.B      #2,D1
000026DC                          3024      ** Print command
000026DC  103C 000E               3025      MOVE.B      #14,D0
000026E0  43F8 0042               3026      LEA         pr_MULS,A1
000026E4  4E4F                    3027      TRAP        #15
000026E6                          3028      ** Print size
000026E6  43F8 0019               3029      LEA         pr_WORD,A1
000026EA  4E4F                    3030      TRAP        #15
000026EC                          3031      ** Print space
000026EC  43F8 0002               3032      LEA         pr_space2,A1
000026F0  4E4F                    3033      TRAP        #15
000026F2                          3034      ** Decode right side ea
000026F2  1002                    3035      MOVE.B      D2,D0
000026F4  0200 003F               3036      ANDI.B      #%00111111,D0
000026F8  4EB8 1694               3037      JSR         EADecoder
000026FC                          3038      ** Add comma
000026FC  103C 000E               3039      MOVE.B      #14,D0
00002700  43F8 0014               3040      LEA         pr_comma,A1
00002704  4E4F                    3041      TRAP        #15
00002706                          3042      ** Decode left side ea
00002706  3002                    3043      MOVE.W      D2,D0
00002708  0240 0E00               3044      ANDI.W      #%0000111000000000,D0
0000270C  EC88                    3045      LSR.L       #6,D0
0000270E  4EB8 167C               3046      JSR         EADecoder_left    
00002712                          3047      
00002712  6000 E9DE               3048      BRA         opdec_return
00002716                          3049      
00002716                          3050      
00002716                          3051  MATCH_RTS
00002716  43F8 004B               3052      LEA         pr_RTS,A1
0000271A  103C 000E               3053      MOVE.B      #14,D0
0000271E  4E4F                    3054      TRAP        #15
00002720                          3055  
00002720  6000 E9D0               3056      BRA         opdec_return
00002724                          3057      
00002724                          3058      
00002724                          3059  MATCH_CMP_B
00002724                          3060      ** Move command size into D1
00002724  123C 0002               3061      MOVE.B      #2,D1
00002728                          3062      ** Print command
00002728  103C 000E               3063      MOVE.B      #14,D0
0000272C  43F8 004F               3064      LEA         pr_CMP,A1
00002730  4E4F                    3065      TRAP        #15
00002732                          3066      ** Print size
00002732  43F8 0016               3067      LEA         pr_BYTE,A1
00002736  4E4F                    3068      TRAP        #15
00002738                          3069      
00002738  6000 002E               3070      BRA         print_cmp
0000273C                          3071  MATCH_CMP_W
0000273C                          3072      ** Move command size into D1
0000273C  123C 0002               3073      MOVE.B      #2,D1
00002740                          3074      ** Print command
00002740  103C 000E               3075      MOVE.B      #14,D0
00002744  43F8 004F               3076      LEA         pr_CMP,A1
00002748  4E4F                    3077      TRAP        #15
0000274A                          3078      ** Print size
0000274A  43F8 0019               3079      LEA         pr_WORD,A1
0000274E  4E4F                    3080      TRAP        #15
00002750                          3081      
00002750  6000 0016               3082      BRA         print_cmp
00002754                          3083  MATCH_CMP_L
00002754                          3084      ** Move command size into D1
00002754  123C 0004               3085      MOVE.B      #4,D1
00002758                          3086      ** Print command
00002758  103C 000E               3087      MOVE.B      #14,D0
0000275C  43F8 004F               3088      LEA         pr_CMP,A1
00002760  4E4F                    3089      TRAP        #15
00002762                          3090      ** Print size
00002762  43F8 001C               3091      LEA         pr_LONG,A1
00002766  4E4F                    3092      TRAP        #15
00002768                          3093  print_cmp
00002768                          3094      ** Print space
00002768  43F8 0005               3095      LEA         pr_space3,A1
0000276C  4E4F                    3096      TRAP        #15
0000276E  4240                    3097      CLR         D0
00002770                          3098      ** Decode right side ea
00002770  1002                    3099      MOVE.B      D2,D0
00002772  0200 003F               3100      ANDI.B      #%00111111,D0
00002776  4EB8 1694               3101      JSR         EADecoder
0000277A                          3102      ** Add comma
0000277A  103C 000E               3103      MOVE.B      #14,D0
0000277E  43F8 0014               3104      LEA         pr_comma,A1
00002782  4E4F                    3105      TRAP        #15
00002784                          3106      ** Decode left side ea
00002784  3002                    3107      MOVE.W      D2,D0
00002786  0240 0E00               3108      ANDI.W      #%0000111000000000,D0
0000278A  EC88                    3109      LSR.L       #6,D0
0000278C  4EB8 167C               3110      JSR         EADecoder_left   
00002790                          3111      
00002790  6000 E960               3112      BRA         opdec_return
00002794                          3113      
00002794                          3114      
00002794                          3115  MATCH_JSR
00002794                          3116      ** Print command
00002794  103C 000E               3117      MOVE.B      #14,D0
00002798  43F8 0053               3118      LEA         pr_JSR,A1
0000279C  4E4F                    3119      TRAP        #15
0000279E                          3120      ** Print space
0000279E  43F8 000E               3121      LEA         pr_space5,A1
000027A2  4E4F                    3122      TRAP        #15
000027A4                          3123      ** Decode right side ea
000027A4  1002                    3124      MOVE.B      D2,D0
000027A6  0200 003F               3125      ANDI.B      #%00111111,D0
000027AA  4EB8 1694               3126      JSR         EADecoder 
000027AE                          3127      
000027AE  6000 E942               3128      BRA         opdec_return
000027B2                          3129      
000027B2                          3130      
000027B2                          3131  MATCH_CLR_B 
000027B2                          3132      ** Move command size into D1
000027B2  123C 0002               3133      MOVE.B      #2,D1
000027B6                          3134      ** Print command
000027B6  103C 000E               3135      MOVE.B      #14,D0
000027BA  43F8 0047               3136      LEA         pr_CLR,A1
000027BE  4E4F                    3137      TRAP        #15
000027C0                          3138      ** Print size
000027C0  43F8 0016               3139      LEA         pr_BYTE,A1
000027C4  4E4F                    3140      TRAP        #15
000027C6                          3141      
000027C6  6000 002E               3142      BRA         print_clr
000027CA                          3143  MATCH_CLR_W
000027CA                          3144      ** Move command size into D1
000027CA  123C 0002               3145      MOVE.B      #2,D1
000027CE                          3146      ** Print command
000027CE  103C 000E               3147      MOVE.B      #14,D0
000027D2  43F8 0047               3148      LEA         pr_CLR,A1
000027D6  4E4F                    3149      TRAP        #15
000027D8                          3150      ** Print size
000027D8  43F8 0019               3151      LEA         pr_WORD,A1
000027DC  4E4F                    3152      TRAP        #15
000027DE                          3153      
000027DE  6000 0016               3154      BRA         print_clr
000027E2                          3155  MATCH_CLR_L
000027E2                          3156      ** Move command size into D1
000027E2  123C 0004               3157      MOVE.B      #4,D1
000027E6                          3158      ** Print command
000027E6  103C 000E               3159      MOVE.B      #14,D0
000027EA  43F8 0047               3160      LEA         pr_CLR,A1
000027EE  4E4F                    3161      TRAP        #15
000027F0                          3162      ** Print size
000027F0  43F8 001C               3163      LEA         pr_LONG,A1
000027F4  4E4F                    3164      TRAP        #15
000027F6                          3165  print_clr
000027F6                          3166      ** Print space
000027F6  43F8 0005               3167      LEA         pr_space3,A1
000027FA  4E4F                    3168      TRAP        #15
000027FC                          3169      ** Decode right side ea
000027FC  1002                    3170      MOVE.B      D2,D0
000027FE  0200 003F               3171      ANDI.B      #%00111111,D0
00002802  4EB8 1694               3172      JSR         EADecoder 
00002806                          3173      
00002806  6000 E8EA               3174      BRA         opdec_return
0000280A                          3175      
0000280A                          3176      
0000280A                          3177  MATCH_AND_DN_B
0000280A                          3178      ** Move command size into D1
0000280A  123C 0002               3179      MOVE.B      #2,D1
0000280E                          3180      ** Print command
0000280E  103C 000E               3181      MOVE.B      #14,D0
00002812  43F8 0057               3182      LEA         pr_AND,A1
00002816  4E4F                    3183      TRAP        #15
00002818                          3184      ** Print size
00002818  43F8 0016               3185      LEA         pr_BYTE,A1
0000281C  4E4F                    3186      TRAP        #15
0000281E                          3187      
0000281E  6000 002E               3188      BRA         print_and_dn
00002822                          3189  MATCH_AND_DN_W
00002822                          3190      ** Move command size into D1
00002822  123C 0002               3191      MOVE.B      #2,D1
00002826                          3192      ** Print command
00002826  103C 000E               3193      MOVE.B      #14,D0
0000282A  43F8 0057               3194      LEA         pr_AND,A1
0000282E  4E4F                    3195      TRAP        #15
00002830                          3196      ** Print size
00002830  43F8 0019               3197      LEA         pr_WORD,A1
00002834  4E4F                    3198      TRAP        #15
00002836                          3199      
00002836  6000 0016               3200      BRA         print_and_dn
0000283A                          3201  MATCH_AND_DN_L
0000283A                          3202      ** Move command size into D1
0000283A  123C 0004               3203      MOVE.B      #4,D1
0000283E                          3204      ** Print command
0000283E  103C 000E               3205      MOVE.B      #14,D0
00002842  43F8 0057               3206      LEA         pr_AND,A1
00002846  4E4F                    3207      TRAP        #15
00002848                          3208      ** Print size
00002848  43F8 001C               3209      LEA         pr_LONG,A1
0000284C  4E4F                    3210      TRAP        #15
0000284E                          3211  print_and_dn
0000284E                          3212      ** Print space
0000284E  43F8 0005               3213      LEA         pr_space3,A1
00002852  4E4F                    3214      TRAP        #15
00002854                          3215      ** Decode right side ea
00002854  1002                    3216      MOVE.B      D2,D0
00002856  0200 003F               3217      ANDI.B      #%00111111,D0
0000285A  4EB8 1694               3218      JSR         EADecoder
0000285E                          3219      ** Add comma
0000285E  103C 000E               3220      MOVE.B      #14,D0
00002862  43F8 0014               3221      LEA         pr_comma,A1
00002866  4E4F                    3222      TRAP        #15
00002868                          3223      ** Decode left side ea
00002868  3002                    3224      MOVE.W      D2,D0
0000286A  0240 0E00               3225      ANDI.W      #%0000111000000000,D0
0000286E  EC88                    3226      LSR.L       #6,D0
00002870  4EB8 167C               3227      JSR         EADecoder_left  
00002874                          3228      
00002874  6000 E87C               3229      BRA         opdec_return
00002878                          3230      
00002878                          3231      
00002878                          3232  MATCH_AND_EA_B
00002878                          3233      ** Move command size into D1
00002878  123C 0002               3234      MOVE.B      #2,D1
0000287C                          3235      ** Print command
0000287C  103C 000E               3236      MOVE.B      #14,D0
00002880  43F8 0057               3237      LEA         pr_AND,A1
00002884  4E4F                    3238      TRAP        #15
00002886                          3239      ** Print size
00002886  43F8 0016               3240      LEA         pr_BYTE,A1
0000288A  4E4F                    3241      TRAP        #15
0000288C                          3242      
0000288C  6000 002E               3243      BRA         print_and_ea
00002890                          3244  MATCH_AND_EA_W
00002890                          3245      ** Move command size into D1
00002890  123C 0002               3246      MOVE.B      #2,D1
00002894                          3247      ** Print command
00002894  103C 000E               3248      MOVE.B      #14,D0
00002898  43F8 0057               3249      LEA         pr_AND,A1
0000289C  4E4F                    3250      TRAP        #15
0000289E                          3251      ** Print size
0000289E  43F8 0019               3252      LEA         pr_WORD,A1
000028A2  4E4F                    3253      TRAP        #15
000028A4                          3254      
000028A4  6000 0016               3255      BRA         print_and_ea
000028A8                          3256  MATCH_AND_EA_L
000028A8                          3257      ** Move command size into D1
000028A8  123C 0004               3258      MOVE.B      #4,D1
000028AC                          3259      ** Print command
000028AC  103C 000E               3260      MOVE.B      #14,D0
000028B0  43F8 0057               3261      LEA         pr_AND,A1
000028B4  4E4F                    3262      TRAP        #15
000028B6                          3263      ** Print size
000028B6  43F8 001C               3264      LEA         pr_LONG,A1
000028BA  4E4F                    3265      TRAP        #15
000028BC                          3266  print_and_ea
000028BC                          3267      ** Print space
000028BC  43F8 0005               3268      LEA         pr_space3,A1
000028C0  4E4F                    3269      TRAP        #15
000028C2                          3270      ** Decode left side ea
000028C2  3002                    3271      MOVE.W      D2,D0
000028C4  0240 0E00               3272      ANDI.W      #%0000111000000000,D0
000028C8  EC88                    3273      LSR.L       #6,D0
000028CA  4EB8 167C               3274      JSR         EADecoder_left
000028CE                          3275      ** Add comma
000028CE  103C 000E               3276      MOVE.B      #14,D0
000028D2  43F8 0014               3277      LEA         pr_comma,A1
000028D6  4E4F                    3278      TRAP        #15
000028D8                          3279      ** Decode right side ea
000028D8  1002                    3280      MOVE.B      D2,D0
000028DA  0200 003F               3281      ANDI.B      #%00111111,D0
000028DE  4EB8 1694               3282      JSR         EADecoder
000028E2                          3283      
000028E2  6000 E80E               3284      BRA         opdec_return
000028E6                          3285  
000028E6                          3286  
000028E6                          3287  
000028E6                          3288  
000028E6                          3289  
000028E6                          3290  
000028E6                          3291  
000028E6                          3292  
000028E6                          3293  
000028E6                          3294  -------------------- end include --------------------
000028E6                          3295  
000028E6                          3296  
000028E6                          3297  
000028E6                          3298  
000028E6                          3299  
000028E6                          3300  -------------------- end include --------------------
000028E6                          3301  
000028E6                          3302          END     start

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
A2H                 108E
ABS_LONG            39
ABS_WORD            38
ADDA_L              7
ADDA_W              3
ADDBYTELOOP         10B2
ADDBYTES            10AA
ADDI_B              18
ADDI_L              1A
ADDI_RETURN         10EE
ADDI_W              19
ADDQ                5
ADDQ_B              0
ADDQ_L              2
ADDQ_W              1
ADD_ADDA            D
ADD_TO_EA_B         4
ADD_TO_EA_L         6
ADD_TO_EA_W         5
ADD_TO_REG_B        0
ADD_TO_REG_L        2
ADD_TO_REG_W        1
AN                  8
AS                  0
ASL                 383
ASR                 387
BCC                 6
BCC_16              0
BCC_32              FF
CASCADE_D1          1CA8
CASCADE_D2          1CC0
CASCADE_D3          1CD8
CASCADE_D4          1CF0
CASCADE_D5          1D08
CASCADE_D6          1D20
CASCADE_D7          1D38
CC_CC               4
CC_CS               5
CC_EQ               7
CC_F                1
CC_GE               C
CC_GT               E
CC_HI               2
CC_LE               F
CC_LS               3
CC_LT               D
CC_MI               B
CC_NE               6
CC_PL               A
CC_T                0
CC_VC               8
CC_VS               9
CHECK_ADDI          15CC
CHECK_ADDQ          15AA
CHECK_ADD_ADDA      1554
CHECK_BCC           11EC
CHECK_BCC_16        12AC
CHECK_BCC_32        1354
CHECK_BCC_8         1204
CHECK_CMP           1410
CHECK_DIVU_OR       14D6
CHECK_FOUR_BIT_SIG  1164
CHECK_MOVEA_L_AND_MOVE_L  165C
CHECK_MOVEA_W_AND_MOVE_W  1632
CHECK_MOVEM         1524
CHECK_MULS_LEA_CLR_JSR_RTS  1436
CHECK_MULS_W_AND    1488
CHECK_NOP           1158
CHECK_SHIFT         1D5E
CHECK_SHIFT_AND_ROTATE  1118
CHECK_SUB           15F2
CLR_B               108
CLR_L               10A
CLR_SCRN            1066
CLR_W               109
CMP                 B
CMP_B               0
CMP_L               2
CMP_W               1
CONV_END            10BA
CR                  D
DEC_ABS_LONG        1744
DEC_ABS_WORD        1738
DEC_AN              175C
DEC_DN              1750
DEC_IMMEDIATE       171C
DEC_INDIRECT        1768
DEC_POST_INC        177C
DEC_PRE_DEC         1796
DEC_RETURN          16FE
DIVU                3
DIVU_OR             8
DN                  0
DN_B                0
DN_L                2
DN_W                1
DONE                1082
DONE_MSG            149
EADECODER           1694
EADECODER_LEFT      167C
EA_B                4
EA_L                6
EA_W                5
ERROR               261C
ERROR_MSG           12D
EXECUTEPRINTSHIFTDIRECTION  1DF6
EXECUTEPRINTSHIFTSIZE  1E30
EXECUTESHIFTOPCODEPRINT  1DCE
FOUR_BIT_RETURN     10EA
GETSHIFTDESTREG     1D84
GET_BCC_DESTINATION_ADDRESS  1F00
GET_BCC_DISPLACEMENT_16BIT  1EEC
GET_BCC_DISPLACEMENT_32BIT  1EF2
GET_BCC_DISPLACEMENT_8BIT  1EE6
GET_COUNT_REGISTER_VAL  1E6E
GET_CURRENT_ADDRESS  1EF8
GET_DIRECTION       1E96
GET_IS_REGISTER_OR_IMMEDIATE  1EAA
GET_SHIFT_OPCODE    1EC2
GET_SIZE            1E82
IMMEDIATE           3C
IMM_SKIP            1716
IMM_WORD            1734
INDIRECT            10
INPUT_ERROR         105A
ISOLATE_CC_CODE_FOR_BCC  13FC
ISOLATE_OP_CODE     1644
JSR                 13A
L                   1
LEA                 7
LEFT_SKIP           1698
LF                  A
LOOP_START          102A
LS                  1
LSL                 38F
LSR                 38B
MATCH_ADDA_L        2696
MATCH_ADDA_W        267E
MATCH_ADDI_B        186E
MATCH_ADDI_L        189E
MATCH_ADDI_W        1886
MATCH_ADDQ_B        1A50
MATCH_ADDQ_L        1A80
MATCH_ADDQ_W        1A68
MATCH_ADD_TO_EA_B   1996
MATCH_ADD_TO_EA_L   19C6
MATCH_ADD_TO_EA_W   19AE
MATCH_ADD_TO_REG_B  18DC
MATCH_ADD_TO_REG_L  190C
MATCH_ADD_TO_REG_W  18F4
MATCH_AND_DN_B      280A
MATCH_AND_DN_L      283A
MATCH_AND_DN_W      2822
MATCH_AND_EA_B      2878
MATCH_AND_EA_L      28A8
MATCH_AND_EA_W      2890
MATCH_ASL           1EE0
MATCH_ASR           1EDE
MATCH_CC_CC_16      205E
MATCH_CC_CC_32      2088
MATCH_CC_CC_8       2034
MATCH_CC_CS_16      20DC
MATCH_CC_CS_32      2106
MATCH_CC_CS_8       20B2
MATCH_CC_EQ_16      21D8
MATCH_CC_EQ_32      2202
MATCH_CC_EQ_8       21AE
MATCH_CC_F_16       1F4C
MATCH_CC_F_32       1F4E
MATCH_CC_F_8        1F4A
MATCH_CC_GE_16      244E
MATCH_CC_GE_32      2478
MATCH_CC_GE_8       2424
MATCH_CC_GT_16      254A
MATCH_CC_GT_32      2574
MATCH_CC_GT_8       2520
MATCH_CC_HI_16      1F6C
MATCH_CC_HI_32      1F90
MATCH_CC_HI_8       1F50
MATCH_CC_LE_16      25C8
MATCH_CC_LE_32      25F2
MATCH_CC_LE_8       259E
MATCH_CC_LS_16      1FE0
MATCH_CC_LS_32      200A
MATCH_CC_LS_8       1FB6
MATCH_CC_LT_16      24CC
MATCH_CC_LT_32      24F6
MATCH_CC_LT_8       24A2
MATCH_CC_MI_16      23D0
MATCH_CC_MI_32      23FA
MATCH_CC_MI_8       23A6
MATCH_CC_NE_16      215A
MATCH_CC_NE_32      2184
MATCH_CC_NE_8       2130
MATCH_CC_PL_16      2352
MATCH_CC_PL_32      237C
MATCH_CC_PL_8       2328
MATCH_CC_T_16       1F46
MATCH_CC_T_32       1F48
MATCH_CC_T_8        1F44
MATCH_CC_VC_16      2256
MATCH_CC_VC_32      2280
MATCH_CC_VC_8       222C
MATCH_CC_VS_16      22D4
MATCH_CC_VS_32      22FE
MATCH_CC_VS_8       22AA
MATCH_CLR_B         27B2
MATCH_CLR_L         27E2
MATCH_CLR_W         27CA
MATCH_CMP_B         2724
MATCH_CMP_L         2754
MATCH_CMP_W         273C
MATCH_DIVU          1AD4
MATCH_JSR           2794
MATCH_LEA           1678
MATCH_LSL           1EDA
MATCH_LSR           1EDC
MATCH_MOVEA_L       2640
MATCH_MOVEA_W       2628
MATCH_MOVEM_TO_MEM_L  1B2A
MATCH_MOVEM_TO_MEM_W  1B12
MATCH_MOVEM_TO_REG_L  1B62
MATCH_MOVEM_TO_REG_W  1B60
MATCH_MOVEQ         1830
MATCH_MOVE_B        17BE
MATCH_MOVE_L        17EE
MATCH_MOVE_W        17D6
MATCH_MULS_L        167A
MATCH_MULS_W        26D8
MATCH_NOP           17B0
MATCH_OR_DN_B       166C
MATCH_OR_DN_L       1670
MATCH_OR_DN_W       166E
MATCH_OR_EA_B       1672
MATCH_OR_EA_L       1676
MATCH_OR_EA_W       1674
MATCH_ROL           1EE2
MATCH_ROR           1EE4
MATCH_RTS           2716
MATCH_SUB_TO_DN_B   1924
MATCH_SUB_TO_DN_L   1954
MATCH_SUB_TO_DN_W   193C
MATCH_SUB_TO_EA_B   19DE
MATCH_SUB_TO_EA_L   1A0E
MATCH_SUB_TO_EA_W   19F6
MESSAGE             F5
MESSAGE2            11A
MOVEA_WL            1
MOVEM_TO_MEM_L      123
MOVEM_TO_MEM_W      122
MOVEM_TO_REG_L      133
MOVEM_TO_REG_W      132
MOVEQ_              7
MOVE_B              1
MOVE_L              2
MOVE_W              3
MULS_L              130
MULS_LEA_CLR_JSR_RTS_MOVEM  4
MULS_OP_W           7
MULS_W_AND          C
NOP                 4E71
NOP_RETURN          10E6
NO_SLASH            1D5C
NUMSUB              10C0
NUMSUBRTN           109C
OPDECODER           10DC
OPDEC_RETURN        10F2
OUTPUT              10000
POST_INC            18
PRE_DEC             20
PRINTARITHSHIFT     1DBA
PRINTHEX            1F04
PRINTLOGICSHIFT     1DC4
PRINTROTATE         1DB0
PRINTSHIFT          1E54
PRINTSHIFTBYTE      1E12
PRINTSHIFTDATA      1D98
PRINTSHIFTLEFT      1DEC
PRINTSHIFTLONG      1E26
PRINTSHIFTREG       1E4C
PRINTSHIFTRIGHT     1DE2
PRINTSHIFTWORD      1E1C
PRINTSIZEBYTE       1F20
PRINTSIZELONG       1F38
PRINTSIZEWORD       1F2C
PRINTSTRING         1F18
PRINT_ADDA          26AA
PRINT_ADDI          18B6
PRINT_ADDQ          1A98
PRINT_ADD_TO_EA     1A26
PRINT_ADD_TO_REG    196C
PRINT_AND_DN        284E
PRINT_AND_EA        28BC
PRINT_CLR           27F6
PRINT_CMP           2768
PRINT_MOVE          1806
PRINT_MOVEA         2654
PRINT_MOVEM_AN      1D48
PRINT_MOVEM_DN      1B8C
PRINT_MOVEM_DN_END  1CA4
PRINT_MOVEM_MASK_TO_MEM  1B64
PRINT_MOVEM_TO_MEM  1B3E
PROGRAM_START       1000
PR_A0               DD
PR_A1               E0
PR_A2               E3
PR_A3               E6
PR_A4               E9
PR_A5               EC
PR_A6               EF
PR_A7               F2
PR_ADD              61
PR_ADDA             3D
PR_ADDI             65
PR_ADDQ             6A
PR_AND              57
PR_BCC_CC           8D
PR_BCC_CS           91
PR_BCC_EQ           95
PR_BCC_GE           99
PR_BCC_GT           9D
PR_BCC_HI           A1
PR_BCC_LE           A5
PR_BCC_LS           A9
PR_BCC_LT           AD
PR_BCC_MI           B1
PR_BCC_NE           B5
PR_BCC_PL           B9
PR_BCC_VC           BD
PR_BCC_VS           C1
PR_BYTE             16
PR_CLR              47
PR_CMP              4F
PR_COMMA            14
PR_D0               C5
PR_D1               C8
PR_D2               CB
PR_D3               CE
PR_D4               D1
PR_D5               D4
PR_D6               D7
PR_D7               DA
PR_DIVU             73
PR_ERROR            87
PR_HASH             1F
PR_HEXTAG           21
PR_HYPHEN           24
PR_JSR              53
PR_LONG             1C
PR_MOVE             2C
PR_MOVEA            31
PR_MOVEM            37
PR_MOVEQ            5B
PR_MULS             42
PR_NOP              28
PR_REG              78
PR_RTS              4B
PR_SHIFT_AS         7D
PR_SHIFT_L          83
PR_SHIFT_LS         80
PR_SHIFT_R          85
PR_SHIFT_RO         7A
PR_SLASH            26
PR_SPACE            0
PR_SPACE2           2
PR_SPACE3           5
PR_SPACE4           9
PR_SPACE5           E
PR_SUB              6F
PR_WORD             19
R                   0
READFIRSTFOURBITS   10F8
READFIRSTTENBITS    110A
RO                  3
ROL                 39F
ROR                 39B
RTS                 4E75
SHIFT               E
SHIFT_BYTE          0
SHIFT_IMMED         0
SHIFT_LONG          3
SHIFT_REGISTER      1
SHIFT_WORD          1
SLASH_CHECK         1D48
START               1000
SUB                 9
SUB_TO_DN_B         0
SUB_TO_DN_L         2
SUB_TO_DN_W         1
SUB_TO_EA_B         4
SUB_TO_EA_L         6
SUB_TO_EA_W         5
TO_MEM_A0           1D48
TO_MEM_A1           1D48
TO_MEM_A2           1D48
TO_MEM_A3           1D48
TO_MEM_A4           1D48
TO_MEM_A5           1D48
TO_MEM_A6           1D48
TO_MEM_A7           1D48
TO_MEM_D0           1B8C
TO_MEM_D1           1BAE
TO_MEM_D2           1BD0
TO_MEM_D3           1BF6
TO_MEM_D4           1C1C
TO_MEM_D5           1C42
TO_MEM_D6           1C68
TO_MEM_D7           1C8E
UPSEND              10D4
UPSUB               10CA
UPSUBRTN            10A4

00001000 Starting Address
Assembler used: EASy68K Editor/Assembler v5.15.04
Created On: 3/9/2017 10:39:51 PM

00000000                             1  *-----------------------------------------------------------
00000000                             2  * Title      : Main Driver Program
00000000                             3  * Written by : Arsany Azmy, Connor McGwire
00000000                             4  * Date       :
00000000                             5  * Description:
00000000                             6  *-----------------------------------------------------------
00000000  =0000000D                  7  CR      EQU     $0D
00000000  =0000000A                  8  LF      EQU     $0A   
00000000                             9          INCLUDE 'ASCII_HEX_Conversions.x68'
00000000                            10  
00000000                            11  
00000000                            12  
00000000                            13  A2H     *Converts and ASCII Byte string into HEX; Size WORD
00000000  48E7 7FFE                 14          MOVEM.L     D1-D7/A0-A6, -(SP)  
00000004                            15          
00000004  3400                      16          MOVE.W  D0,D2
00000006  3202                      17          MOVE.W  D2,D1                   *Store length of string into D1 for looping
00000008  2248                      18          MOVEA.L A0,A1                   *Copy starting point of string
0000000A                            19  
0000000A  6000 0026                 20          BRA     numSub
0000000E                            21  numSubRTN
0000000E  2049                      22          MOVEA.L A1,A0                   *Restore address position
00000010  3202                      23          MOVE.W  D2,D1                   *Reset loop counter
00000012                            24          
00000012  6000 0028                 25          BRA     upSub
00000016                            26  upSubRTN        
00000016  2049                      27          MOVEA.L A1,A0                   *Restore address position
00000018  3202                      28          MOVE.W  D2,D1                   *Reset loop counter
0000001A  4240                      29          CLR     D0                      *Clear D0
0000001C                            30  addBytes
0000001C  D018                      31          ADD.B   (A0)+,D0
0000001E  5301                      32          SUBI.B  #1,D1
00000020  6700 000A                 33          BEQ     conv_end
00000024                            34  addByteLoop
00000024  E980                      35          ASL.L   #4,D0
00000026  D018                      36          ADD.B   (A0)+,D0
00000028  5301                      37          SUBI.B  #1,D1
0000002A  66F8                      38          BNE     addByteLoop
0000002C                            39  conv_end
0000002C  4CDF 7FFE                 40          MOVEM.L     (SP)+, D1-D7/A0-A6
00000030  4E75                      41          RTS
00000032                            42          
00000032                            43  numSub  *Convert ASCII 'number' to true number byte; Should not be called outside of the A2H subroutines
00000032  0418 0030                 44          SUBI.B  #$30,(A0)+              *Subtract difference between null ASCII and '0' ASCII
00000036  5341                      45          SUB.W   #1,D1                   *Decrement loop counter
00000038  66F8                      46          BNE     numSub                  *If loop has not ended restart
0000003A  60D2                      47          BRA     numSubRTN
0000003C                            48  
0000003C                            49  upSub   *Loops through string to remove any upper case characters 
0000003C                            50          *that may remain in the string
0000003C  0C10 0009                 51          CMPI.B  #9,(A0)                 *Check if the value is greater than 0-9
00000040  6F00 0004                 52          BLE     upSEnd                  *If it's not, continue loop
00000044  5310                      53          SUBI.B  #1,(A0)                 *Otherwise, subtract difference between ASCII 'number' code and 'A' code
00000046                            54  upSEnd
00000046  5248                      55          ADDA.W  #1,A0                   *Increment to next position to check for uppercase
00000048  5341                      56          SUB.W   #1,D1                   *Decrement loop counter
0000004A  66F0                      57          BNE     upSub                   
0000004C  60C8                      58          BRA     upSubRTN
0000004E                            59  
0000004E                            60  
0000004E                            61  -------------------- end include --------------------
0000004E                            62          INCLUDE 'opcodes.x68'
0000004E                            63                  INCLUDE 'EADecoder.x68'
0000004E                            64  
0000004E                            65  
0000004E  =00010000                 66  output      EQU $00010000
0000004E                            67  
0000004E  =0000003C                 68  IMMEDIATE   EQU %00111100
0000004E  =00000038                 69  ABS_WORD    EQU %00111000
0000004E  =00000039                 70  ABS_LONG    EQU %00111001
0000004E  =00000000                 71  Dn          EQU %00000000
0000004E  =00000008                 72  An          EQU %00001000
0000004E  =00000010                 73  INDIRECT    EQU %00010000
0000004E  =00000018                 74  POST_INC    EQU %00011000
0000004E  =00000020                 75  PRE_DEC     EQU %00100000
0000004E                            76  
0000004E                            77  
0000004E                            78  
0000004E                            79  EADecoder_left
0000004E  48E7 FF7E                 80          MOVEM.L     D0-D7/A1-A6, -(SP)
00000052                            81          
00000052                            82          ** Swap the mode and register bits
00000052  1800                      83          MOVE.B  D0,D4
00000054  0200 0007                 84          ANDI.B  #%00000111,D0       * Mask mode
00000058  0204 0038                 85          ANDI.B  #%00111000,D4       * Mask register
0000005C  E708                      86          LSL.B   #3,D0               * Move mode bits over
0000005E  E60C                      87          LSR.B   #3,D4               * Move register bits over
00000060  8004                      88          OR.B    D4,D0               * Recombine
00000062                            89          
00000062  6000 0006                 90          BRA     left_skip
00000066                            91  
00000066                            92  EADecoder
00000066  48E7 FF7E                 93          MOVEM.L     D0-D7/A1-A6, -(SP) *Store registers on stack, except D0
0000006A                            94  left_skip   
0000006A  4242                      95          CLR     D2    
0000006C  4243                      96          CLR     D3 
0000006E  1401                      97          MOVE.B  D1,D2 ** Store opcode size in bytes into D2
00000070                            98          
00000070  43F9 00010000             99          LEA     output,A1
00000076  45F9 00010000            100          LEA     output,A2
0000007C                           101          
0000007C                           102          *First, decoder will check for the 3 types with hard coded register values
0000007C  163C 0001                103          MOVE.B  #1,D3
00000080  B07C 003C                104          CMP     #IMMEDIATE,D0
00000084  6700 0068                105          BEQ     dec_immediate
00000088                           106          
00000088  B07C 0038                107          CMP     #ABS_WORD,D0
0000008C  6700 007C                108          BEQ     dec_abs_word
00000090                           109          
00000090  B07C 0039                110          CMP     #ABS_LONG,D0
00000094  6700 0080                111          BEQ     dec_abs_long
00000098                           112          
00000098                           113          *If it was none of the above, store the register and mode seperately
00000098  4243                     114          CLR     D3
0000009A  1200                     115          MOVE.B  D0,D1
0000009C  0201 0038                116          ANDI.B  #%00111000,D1           *Get mode value
000000A0  0200 0007                117          ANDI.B  #%00000111,D0           *Get register value
000000A4  0600 0030                118          ADDI.B  #$30,D0
000000A8                           119                
000000A8  B27C 0000                120          CMP     #Dn,D1
000000AC  6700 0074                121          BEQ     dec_Dn 
000000B0                           122          
000000B0  B27C 0008                123          CMP     #An,D1
000000B4  6700 0078                124          BEQ     dec_An
000000B8                           125                  
000000B8  B27C 0010                126          CMP     #INDIRECT,D1
000000BC  6700 007C                127          BEQ     dec_indirect
000000C0                           128                  
000000C0  B27C 0018                129          CMP     #POST_INC,D1
000000C4  6700 0088                130          BEQ     dec_post_inc
000000C8                           131                  
000000C8  B27C 0020                132          CMP     #PRE_DEC,D1
000000CC  6700 009A                133          BEQ     dec_pre_dec
000000D0                           134  
000000D0                           135  dec_return ** Common return for all types
000000D0                           136          
000000D0                           137          ** Print display string
000000D0  103C 000E                138          MOVE.B  #14,D0
000000D4  4E4F                     139          TRAP    #15
000000D6                           140          
000000D6                           141          ** If there is immediate data to print, print it
000000D6  B67C 0001                142          CMP     #1,D3
000000DA  6600 000C                143          BNE     imm_skip
000000DE                           144          
000000DE  103C 000F                145          MOVE.B  #15,D0
000000E2  143C 0010                146          MOVE.B  #16,D2
000000E6  4E4F                     147          TRAP    #15
000000E8                           148  
000000E8                           149  imm_skip
000000E8  4CDF 7EFF                150          MOVEM.L     (SP)+, D0-D7/A1-A6 *Return register data from stack, except D0
000000EC  4E75                     151          RTS
000000EE                           152          
000000EE                           153          * Individual EA decoders *
000000EE                           154  
000000EE                           155  dec_immediate   *DECODE IMMEDIATE VALUE*
000000EE  14FC 0023                156          MOVE.B  #'#',(A2)+  * Move '#' char into string
000000F2  14FC 0024                157          MOVE.B  #'$',(A2)+  * Move '$' char into string
000000F6  14FC 0000                158          MOVE.B  #$0,(A2)+   * Null terminate string
000000FA  B47C 0002                159          CMP     #2,D2       * Check if data is word length
000000FE  6700 0006                160          BEQ     imm_word    
00000102                           161          
00000102  2218                     162          MOVE.L  (A0)+,D1    * Length was long
00000104  60CA                     163          BRA     dec_return
00000106                           164          
00000106                           165  imm_word
00000106  3218                     166          MOVE.W  (A0)+,D1    * Length was word
00000108  60C6                     167          BRA     dec_return
0000010A                           168  
0000010A                           169  
0000010A                           170  dec_abs_word    *DECODE ABSOLUTE WORD*
0000010A  14FC 0024                171          MOVE.B  #'$',(A2)+  * Move '$' char into string
0000010E  14FC 0000                172          MOVE.B  #$0,(A2)+   * Null terminate string
00000112  3218                     173          MOVE.W  (A0)+,D1
00000114  60BA                     174          BRA     dec_return
00000116                           175          
00000116                           176  
00000116                           177  dec_abs_long    *DECODE ABSOLUTE LONG*
00000116  14FC 0024                178          MOVE.B  #'$',(A2)+  * Move '$' char into string
0000011A  14FC 0000                179          MOVE.B  #$0,(A2)+   * Null terminate string
0000011E  2218                     180          MOVE.L  (A0)+,D1
00000120  60AE                     181          BRA     dec_return
00000122                           182          
00000122                           183  
00000122                           184  dec_Dn          *DECODE DIRECT DATA*
00000122  14FC 0044                185          MOVE.B  #'D',(A2)+
00000126  14C0                     186          MOVE.B  D0,(A2)+
00000128  14FC 0000                187          MOVE.B  #$0,(A2)+
0000012C  60A2                     188          BRA     dec_return
0000012E                           189  
0000012E                           190          
0000012E                           191  dec_An          *DECODE DIRECT ADDRESS*
0000012E  14FC 0041                192          MOVE.B  #'A',(A2)+
00000132  14C0                     193          MOVE.B  D0,(A2)+
00000134  14FC 0000                194          MOVE.B  #$0,(A2)+
00000138  6096                     195          BRA     dec_return
0000013A                           196  
0000013A                           197  
0000013A                           198  dec_indirect    *DECODE INDIRECT ACCESS*
0000013A  14FC 0028                199          MOVE.B  #'(',(A2)+
0000013E  14FC 0041                200          MOVE.B  #'A',(A2)+
00000142  14C0                     201          MOVE.B  D0,(A2)+
00000144  14FC 0029                202          MOVE.B  #')',(A2)+
00000148  14FC 0000                203          MOVE.B  #$0,(A2)+
0000014C  6082                     204          BRA     dec_return
0000014E                           205          
0000014E                           206  
0000014E                           207  dec_post_inc    *DECODE INDIRECT POST INCREMENT*
0000014E  14FC 0028                208          MOVE.B  #'(',(A2)+
00000152  14FC 0041                209          MOVE.B  #'A',(A2)+
00000156  14C0                     210          MOVE.B  D0,(A2)+
00000158  14FC 0029                211          MOVE.B  #')',(A2)+
0000015C  14FC 002B                212          MOVE.B  #'+',(A2)+
00000160  14FC 0000                213          MOVE.B  #$0,(A2)+
00000164  6000 FF6A                214          BRA     dec_return
00000168                           215          
00000168                           216          
00000168                           217  dec_pre_dec    *DECODE INDIRECT PRE DECREMENT*
00000168  14FC 002D                218          MOVE.B  #'-',(A2)+
0000016C  14FC 0028                219          MOVE.B  #'(',(A2)+
00000170  14FC 0041                220          MOVE.B  #'A',(A2)+
00000174  14C0                     221          MOVE.B  D0,(A2)+
00000176  14FC 0029                222          MOVE.B  #')',(A2)+
0000017A  14FC 0000                223          MOVE.B  #$0,(A2)+
0000017E  6000 FF50                224          BRA     dec_return
00000182                           225  
00000182                           226  
00000182                           227  
00000182                           228  
00000182                           229  
00000182                           230  
00000182                           231  
00000182                           232  
00000182                           233  
00000182                           234  -------------------- end include --------------------
00000182                           235                  INCLUDE 'connor_opcodes.x68'
00000182= 4D 4F 56 45 51 00        236  pr_MOVEQ        DC.B    'MOVEQ',0
00000188= 41 44 44 00              237  pr_ADD          DC.B    'ADD',0
0000018C= 41 44 44 49 00           238  pr_ADDI         DC.B    'ADDI',0
00000191= 41 44 44 51 00           239  pr_ADDQ         DC.B    'ADDQ',0
00000196= 53 55 42 00              240  pr_SUB          DC.B    'SUB',0
0000019A= 44 49 56 55 00           241  pr_DIVU         DC.B    'DIVU',0
0000019F                           242  
0000019F                           243  
0000019F                           244  
0000019F                           245  MATCH_NOP
000001A0  43F9 00001365            246      LEA         pr_NOP,A1
000001A6  103C 000E                247      MOVE.B      #14,D0
000001AA  4E4F                     248      TRAP        #15
000001AC  6000 1204                249      BRA         opdec_return
000001B0                           250  
000001B0                           251      
000001B0                           252  MATCH_MOVE_B
000001B0                           253      ** Move command size into D1
000001B0  123C 0002                254      MOVE.B      #2,D1
000001B4                           255      ** Print command
000001B4  103C 000E                256      MOVE.B      #14,D0
000001B8  43F9 00001369            257      LEA         pr_MOVE,A1
000001BE  4E4F                     258      TRAP        #15
000001C0                           259      ** Print size
000001C0  43F9 0000135A            260      LEA         pr_BYTE,A1
000001C6  4E4F                     261      TRAP        #15
000001C8                           262      
000001C8  6000 003A                263      BRA         print_move
000001CC                           264      
000001CC                           265  MATCH_MOVE_W
000001CC                           266      ** Move command size into D1
000001CC  123C 0002                267      MOVE.B      #2,D1
000001D0                           268      ** Print command
000001D0  103C 000E                269      MOVE.B      #14,D0
000001D4  43F9 00001369            270      LEA         pr_MOVE,A1
000001DA  4E4F                     271      TRAP        #15
000001DC                           272      ** Print size
000001DC  43F9 0000135D            273      LEA         pr_WORD,A1
000001E2  4E4F                     274      TRAP        #15
000001E4                           275      
000001E4  6000 001E                276      BRA         print_move
000001E8                           277      
000001E8                           278  MATCH_MOVE_L
000001E8                           279      ** Move command size into D1
000001E8  123C 0004                280      MOVE.B      #4,D1
000001EC                           281      ** Print command
000001EC  103C 000E                282      MOVE.B      #14,D0
000001F0  43F9 00001369            283      LEA         pr_MOVE,A1
000001F6  4E4F                     284      TRAP        #15
000001F8                           285      ** Print size
000001F8  43F9 00001360            286      LEA         pr_LONG,A1
000001FE  4E4F                     287      TRAP        #15
00000200                           288      
00000200  6000 0002                289      BRA         print_move
00000204                           290  
00000204                           291  print_move
00000204                           292      ** Print space
00000204  43F9 00001356            293      LEA         pr_space,A1
0000020A  4E4F                     294      TRAP        #15
0000020C                           295      ** Decode right side ea
0000020C  1002                     296      MOVE.B      D2,D0
0000020E  0200 003F                297      ANDI.B      #%00111111,D0
00000212  4EB8 0066                298      JSR         EADecoder
00000216                           299      ** Add comma
00000216  103C 000E                300      MOVE.B      #14,D0
0000021A  43F9 00001358            301      LEA         pr_comma,A1
00000220  4E4F                     302      TRAP        #15
00000222                           303      ** Decode left side ea
00000222  3002                     304      MOVE.W      D2,D0
00000224  0240 0FC0                305      ANDI.W      #%0000111111000000,D0
00000228  EC48                     306      LSR.W       #6,D0
0000022A  4EB8 004E                307      JSR         EADecoder_left
0000022E                           308      
0000022E  6000 1182                309      BRA         opdec_return
00000232                           310      
00000232                           311  
00000232                           312  MATCH_MOVEQ
00000232                           313      ** Print command
00000232  103C 000E                314      MOVE.B      #14,D0
00000236  43F8 0182                315      LEA         pr_MOVEQ,A1
0000023A  4E4F                     316      TRAP        #15
0000023C                           317      ** Print space
0000023C  43F9 00001356            318      LEA         pr_space,A1
00000242  4E4F                     319      TRAP        #15
00000244                           320      ** Print data
00000244  1202                     321      MOVE.B      D2,D1
00000246  103C 000F                322      MOVE.B      #15,D0
0000024A  2602                     323      MOVE.L      D2,D3
0000024C  7410                     324      MOVE.L      #16,D2
0000024E  4E4F                     325      TRAP        #15
00000250  2403                     326      MOVE.L      D3,D2
00000252                           327      ** Decode register
00000252  3002                     328      MOVE.W      D2,D0
00000254  0240 0E00                329      ANDI.W      #%0000111000000000,D0
00000258  EC48                     330      LSR.W       #6,D0
0000025A  4EB8 004E                331      JSR         EADecoder_left
0000025E                           332      
0000025E  6000 1152                333      BRA         opdec_return
00000262                           334      
00000262                           335  
00000262                           336  MATCH_ADDI_B
00000262                           337      ** Move command size into D1
00000262  123C 0002                338      MOVE.B      #2,D1
00000266                           339      ** Print command
00000266  103C 000E                340      MOVE.B      #14,D0
0000026A  43F8 018C                341      LEA         pr_ADDI,A1
0000026E  4E4F                     342      TRAP        #15
00000270                           343      ** Print size
00000270  43F9 0000135A            344      LEA         pr_BYTE,A1
00000276  4E4F                     345      TRAP        #15
00000278                           346      
00000278  6000 0036                347      BRA         print_addi
0000027C                           348      
0000027C                           349  MATCH_ADDI_W
0000027C                           350      ** Move command size into D1
0000027C  123C 0002                351      MOVE.B      #2,D1
00000280                           352      ** Print command
00000280  103C 000E                353      MOVE.B      #14,D0
00000284  43F8 018C                354      LEA         pr_ADDI,A1
00000288  4E4F                     355      TRAP        #15
0000028A                           356      ** Print size
0000028A  43F9 0000135D            357      LEA         pr_WORD,A1
00000290  4E4F                     358      TRAP        #15
00000292                           359      
00000292  6000 001C                360      BRA         print_addi
00000296                           361      
00000296                           362  MATCH_ADDI_L
00000296                           363      ** Move command size into D1
00000296  123C 0004                364      MOVE.B      #4,D1
0000029A                           365      ** Print command
0000029A  103C 000E                366      MOVE.B      #14,D0
0000029E  43F8 018C                367      LEA         pr_ADDI,A1
000002A2  4E4F                     368      TRAP        #15
000002A4                           369      ** Print size
000002A4  43F9 00001360            370      LEA         pr_LONG,A1
000002AA  4E4F                     371      TRAP        #15
000002AC                           372      
000002AC  6000 0002                373      BRA         print_addi
000002B0                           374      
000002B0                           375  print_addi
000002B0                           376      ** Print space
000002B0  43F9 00001356            377      LEA         pr_space,A1
000002B6  4E4F                     378      TRAP        #15
000002B8                           379      ** Print Immediate data
000002B8  103C 003C                380      MOVE.B      #%00111100,D0
000002BC  4EB8 0066                381      JSR         EADecoder
000002C0                           382      ** Add comma
000002C0  103C 000E                383      MOVE.B      #14,D0
000002C4  43F9 00001358            384      LEA         pr_comma,A1
000002CA  4E4F                     385      TRAP        #15
000002CC                           386      ** Decode right side ea
000002CC  1002                     387      MOVE.B      D2,D0
000002CE  0200 003F                388      ANDI.B      #%00111111,D0
000002D2  4EB8 0066                389      JSR         EADecoder
000002D6                           390      
000002D6  6000 10DA                391      BRA         opdec_return
000002DA                           392      
000002DA                           393      
000002DA                           394  MATCH_ADD_TO_REG_B
000002DA                           395      ** Move command size into D1
000002DA  123C 0002                396      MOVE.B      #2,D1
000002DE                           397      ** Print command
000002DE  103C 000E                398      MOVE.B      #14,D0
000002E2  43F8 0188                399      LEA         pr_ADD,A1
000002E6  4E4F                     400      TRAP        #15
000002E8                           401      ** Print size
000002E8  43F9 0000135A            402      LEA         pr_BYTE,A1
000002EE  4E4F                     403      TRAP        #15
000002F0                           404      
000002F0  6000 0084                405      BRA         print_add_to_reg
000002F4                           406      
000002F4                           407  MATCH_ADD_TO_REG_W
000002F4                           408      ** Move command size into D1
000002F4  123C 0002                409      MOVE.B      #2,D1
000002F8                           410      ** Print command
000002F8  103C 000E                411      MOVE.B      #14,D0
000002FC  43F8 0188                412      LEA         pr_ADD,A1
00000300  4E4F                     413      TRAP        #15
00000302                           414      ** Print size
00000302  43F9 0000135D            415      LEA         pr_WORD,A1
00000308  4E4F                     416      TRAP        #15
0000030A                           417      
0000030A  6000 006A                418      BRA         print_add_to_reg
0000030E                           419      
0000030E                           420  MATCH_ADD_TO_REG_L
0000030E                           421      ** Move command size into D1
0000030E  123C 0004                422      MOVE.B      #4,D1
00000312                           423      ** Print command
00000312  103C 000E                424      MOVE.B      #14,D0
00000316  43F8 0188                425      LEA         pr_ADD,A1
0000031A  4E4F                     426      TRAP        #15
0000031C                           427      ** Print size
0000031C  43F9 00001360            428      LEA         pr_LONG,A1
00000322  4E4F                     429      TRAP        #15
00000324                           430      
00000324  6000 0050                431      BRA         print_add_to_reg
00000328                           432      
00000328                           433  MATCH_SUB_TO_DN_B
00000328                           434      ** Move command size into D1
00000328  123C 0002                435      MOVE.B      #2,D1
0000032C                           436      ** Print command
0000032C  103C 000E                437      MOVE.B      #14,D0
00000330  43F8 0196                438      LEA         pr_SUB,A1
00000334  4E4F                     439      TRAP        #15
00000336                           440      ** Print size
00000336  43F9 0000135A            441      LEA         pr_BYTE,A1
0000033C  4E4F                     442      TRAP        #15
0000033E                           443      
0000033E  6000 0036                444      BRA         print_add_to_reg
00000342                           445      
00000342                           446  MATCH_SUB_TO_DN_W
00000342                           447      ** Move command size into D1
00000342  123C 0002                448      MOVE.B      #2,D1
00000346                           449      ** Print command
00000346  103C 000E                450      MOVE.B      #14,D0
0000034A  43F8 0196                451      LEA         pr_SUB,A1
0000034E  4E4F                     452      TRAP        #15
00000350                           453      ** Print size
00000350  43F9 0000135D            454      LEA         pr_WORD,A1
00000356  4E4F                     455      TRAP        #15
00000358                           456      
00000358  6000 001C                457      BRA         print_add_to_reg
0000035C                           458      
0000035C                           459  MATCH_SUB_TO_DN_L
0000035C                           460      ** Move command size into D1
0000035C  123C 0004                461      MOVE.B      #4,D1
00000360                           462      ** Print command
00000360  103C 000E                463      MOVE.B      #14,D0
00000364  43F8 0196                464      LEA         pr_SUB,A1
00000368  4E4F                     465      TRAP        #15
0000036A                           466      ** Print size
0000036A  43F9 00001360            467      LEA         pr_LONG,A1
00000370  4E4F                     468      TRAP        #15
00000372                           469      
00000372  6000 0002                470      BRA         print_add_to_reg
00000376                           471      
00000376                           472  print_add_to_reg
00000376                           473      ** Print space
00000376  43F9 00001356            474      LEA         pr_space,A1
0000037C  4E4F                     475      TRAP        #15
0000037E                           476      ** Print source
0000037E  1002                     477      MOVE.B      D2,D0
00000380  0200 003F                478      ANDI.B      #%00111111,D0
00000384  4EB8 0066                479      JSR         EADecoder
00000388                           480      ** Add comma
00000388  103C 000E                481      MOVE.B      #14,D0
0000038C  43F9 00001358            482      LEA         pr_comma,A1
00000392  4E4F                     483      TRAP        #15
00000394                           484      ** Print destination
00000394  3002                     485      MOVE.W      D2,D0
00000396  0240 0E00                486      ANDI.W      #%0000111000000000,D0
0000039A  EC48                     487      LSR.W       #6,D0
0000039C  4EB8 004E                488      JSR         EADecoder_left
000003A0                           489      
000003A0  6000 1010                490      BRA         opdec_return
000003A4                           491      
000003A4                           492  MATCH_ADD_TO_EA_B
000003A4                           493      ** Move command size into D1
000003A4  123C 0002                494      MOVE.B      #2,D1
000003A8                           495      ** Print command
000003A8  103C 000E                496      MOVE.B      #14,D0
000003AC  43F8 0188                497      LEA         pr_ADD,A1
000003B0  4E4F                     498      TRAP        #15
000003B2                           499      ** Print size
000003B2  43F9 0000135A            500      LEA         pr_BYTE,A1
000003B8  4E4F                     501      TRAP        #15
000003BA                           502      
000003BA  6000 0084                503      BRA         print_add_to_ea
000003BE                           504      
000003BE                           505  MATCH_ADD_TO_EA_W
000003BE                           506      ** Move command size into D1
000003BE  123C 0002                507      MOVE.B      #2,D1
000003C2                           508      ** Print command
000003C2  103C 000E                509      MOVE.B      #14,D0
000003C6  43F8 0188                510      LEA         pr_ADD,A1
000003CA  4E4F                     511      TRAP        #15
000003CC                           512      ** Print size
000003CC  43F9 0000135D            513      LEA         pr_WORD,A1
000003D2  4E4F                     514      TRAP        #15
000003D4                           515      
000003D4  6000 006A                516      BRA         print_add_to_ea
000003D8                           517      
000003D8                           518  MATCH_ADD_TO_EA_L 
000003D8                           519      ** Move command size into D1
000003D8  123C 0004                520      MOVE.B      #4,D1
000003DC                           521      ** Print command
000003DC  103C 000E                522      MOVE.B      #14,D0
000003E0  43F8 0188                523      LEA         pr_ADD,A1
000003E4  4E4F                     524      TRAP        #15
000003E6                           525      ** Print size
000003E6  43F9 00001360            526      LEA         pr_LONG,A1
000003EC  4E4F                     527      TRAP        #15
000003EE                           528      
000003EE  6000 0050                529      BRA         print_add_to_ea
000003F2                           530      
000003F2                           531  MATCH_SUB_TO_EA_B
000003F2                           532      ** Move command size into D1
000003F2  123C 0002                533      MOVE.B      #2,D1
000003F6                           534      ** Print command
000003F6  103C 000E                535      MOVE.B      #14,D0
000003FA  43F8 0196                536      LEA         pr_SUB,A1
000003FE  4E4F                     537      TRAP        #15
00000400                           538      ** Print size
00000400  43F9 0000135A            539      LEA         pr_BYTE,A1
00000406  4E4F                     540      TRAP        #15
00000408                           541      
00000408  6000 0036                542      BRA         print_add_to_ea
0000040C                           543      
0000040C                           544  MATCH_SUB_TO_EA_W
0000040C                           545      ** Move command size into D1
0000040C  123C 0002                546      MOVE.B      #2,D1
00000410                           547      ** Print command
00000410  103C 000E                548      MOVE.B      #14,D0
00000414  43F8 0196                549      LEA         pr_SUB,A1
00000418  4E4F                     550      TRAP        #15
0000041A                           551      ** Print size
0000041A  43F9 0000135D            552      LEA         pr_WORD,A1
00000420  4E4F                     553      TRAP        #15
00000422                           554      
00000422  6000 001C                555      BRA         print_add_to_ea
00000426                           556      
00000426                           557  MATCH_SUB_TO_EA_L
00000426                           558      ** Move command size into D1
00000426  123C 0004                559      MOVE.B      #4,D1
0000042A                           560      ** Print command
0000042A  103C 000E                561      MOVE.B      #14,D0
0000042E  43F8 0196                562      LEA         pr_SUB,A1
00000432  4E4F                     563      TRAP        #15
00000434                           564      ** Print size
00000434  43F9 00001360            565      LEA         pr_LONG,A1
0000043A  4E4F                     566      TRAP        #15
0000043C                           567      
0000043C  6000 0002                568      BRA         print_add_to_ea
00000440                           569  
00000440                           570  print_add_to_ea
00000440                           571      ** Print space
00000440  43F9 00001356            572      LEA         pr_space,A1
00000446  4E4F                     573      TRAP        #15
00000448                           574      ** Print Source
00000448  3002                     575      MOVE.W      D2,D0
0000044A  0240 0E00                576      ANDI.W      #%0000111000000000,D0
0000044E  EC48                     577      LSR.W       #6,D0
00000450  4EB8 004E                578      JSR         EADecoder_left
00000454                           579      ** Add comma
00000454  103C 000E                580      MOVE.B      #14,D0
00000458  43F9 00001358            581      LEA         pr_comma,A1
0000045E  4E4F                     582      TRAP        #15
00000460                           583      ** Print source
00000460  1002                     584      MOVE.B      D2,D0
00000462  0200 003F                585      ANDI.B      #%00111111,D0
00000466  4EB8 0066                586      JSR         EADecoder
0000046A                           587      
0000046A  6000 0F46                588      BRA         opdec_return
0000046E                           589      
0000046E                           590    
0000046E                           591  MATCH_ADDQ_B
0000046E                           592      ** Move command size into D1
0000046E  123C 0002                593      MOVE.B      #2,D1
00000472                           594      ** Print command
00000472  103C 000E                595      MOVE.B      #14,D0
00000476  43F8 0191                596      LEA         pr_ADDQ,A1
0000047A  4E4F                     597      TRAP        #15
0000047C                           598      ** Print size
0000047C  43F9 0000135A            599      LEA         pr_BYTE,A1
00000482  4E4F                     600      TRAP        #15
00000484                           601      
00000484  6000 0036                602      BRA         print_addq
00000488                           603      
00000488                           604  MATCH_ADDQ_W
00000488                           605      ** Move command size into D1
00000488  123C 0002                606      MOVE.B      #2,D1
0000048C                           607      ** Print command
0000048C  103C 000E                608      MOVE.B      #14,D0
00000490  43F8 0191                609      LEA         pr_ADDQ,A1
00000494  4E4F                     610      TRAP        #15
00000496                           611      ** Print size
00000496  43F9 0000135D            612      LEA         pr_WORD,A1
0000049C  4E4F                     613      TRAP        #15
0000049E                           614      
0000049E  6000 001C                615      BRA         print_addq
000004A2                           616      
000004A2                           617  MATCH_ADDQ_L
000004A2                           618      ** Move command size into D1
000004A2  123C 0004                619      MOVE.B      #4,D1
000004A6                           620      ** Print command
000004A6  103C 000E                621      MOVE.B      #14,D0
000004AA  43F8 0191                622      LEA         pr_ADDQ,A1
000004AE  4E4F                     623      TRAP        #15
000004B0                           624      ** Print size
000004B0  43F9 00001360            625      LEA         pr_LONG,A1
000004B6  4E4F                     626      TRAP        #15
000004B8                           627      
000004B8  6000 0002                628      BRA         print_addq
000004BC                           629      
000004BC                           630  print_addq
000004BC                           631      ** Print space
000004BC  43F9 00001356            632      LEA         pr_space,A1
000004C2  4E4F                     633      TRAP        #15
000004C4                           634      ** Print hash
000004C4  43F9 00001363            635      LEA         pr_hash,A1
000004CA  4E4F                     636      TRAP        #15
000004CC                           637      ** Print Immediate data
000004CC  3602                     638      MOVE.W      D2,D3 * Temporarily move op data
000004CE  3202                     639      MOVE.W      D2,D1
000004D0  0241 0E00                640      ANDI.W      #%0000111000000000,D1
000004D4  EC49                     641      LSR.W       #6,D1
000004D6  E649                     642      LSR.W       #3,D1
000004D8  143C 0010                643      MOVE.B      #16,D2
000004DC  303C 000F                644      MOVE.W      #15,D0
000004E0  4E4F                     645      TRAP        #15
000004E2                           646      
000004E2  3403                     647      MOVE.W      D3,D2 * Move op data back
000004E4                           648      
000004E4                           649      ** Add comma
000004E4  103C 000E                650      MOVE.B      #14,D0
000004E8  43F9 00001358            651      LEA         pr_comma,A1
000004EE  4E4F                     652      TRAP        #15
000004F0                           653      ** Decode right side ea
000004F0  1002                     654      MOVE.B      D2,D0
000004F2  0200 003F                655      ANDI.B      #%00111111,D0
000004F6  4EB8 0066                656      JSR         EADecoder
000004FA                           657      
000004FA  6000 0EB6                658      BRA         opdec_return
000004FE                           659      
000004FE                           660    
000004FE                           661  MATCH_DIVU_W
000004FE                           662      ** Move command size into D1
000004FE  123C 0002                663      MOVE.B      #2,D1
00000502                           664      ** Print command
00000502  103C 000E                665      MOVE.B      #14,D0
00000506  43F8 019A                666      LEA         pr_DIVU,A1
0000050A  4E4F                     667      TRAP        #15
0000050C                           668      ** Print size
0000050C  43F9 0000135D            669      LEA         pr_WORD,A1
00000512  4E4F                     670      TRAP        #15
00000514                           671      ** Print space
00000514  43F9 00001356            672      LEA         pr_space,A1
0000051A  4E4F                     673      TRAP        #15
0000051C                           674      ** Decode right side ea
0000051C  1002                     675      MOVE.B      D2,D0
0000051E  0200 003F                676      ANDI.B      #%00111111,D0
00000522  4EB8 0066                677      JSR         EADecoder
00000526                           678      ** Add comma
00000526  103C 000E                679      MOVE.B      #14,D0
0000052A  43F9 00001358            680      LEA         pr_comma,A1
00000530  4E4F                     681      TRAP        #15
00000532                           682      ** Decode left side ea
00000532  3002                     683      MOVE.W      D2,D0
00000534  0240 0FC0                684      ANDI.W      #%0000111111000000,D0
00000538  EC88                     685      LSR.L       #6,D0
0000053A  4EB8 004E                686      JSR         EADecoder_left    
0000053E                           687      
0000053E  6000 0E72                688      BRA         opdec_return
00000542                           689  
00000542                           690  
00000542                           691  -------------------- end include --------------------
00000542                           692                  INCLUDE 'spencer_opcodes.x68'
00000542  =0000000E                693  SHIFT       EQU %1110
00000542  =00000003                694  RO          EQU %11
00000542  =00000000                695  AS          EQU %00
00000542  =00000001                696  LS          EQU %01
00000542  =00000000                697  R           EQU %0
00000542  =00000001                698  L           EQU %1
00000542  =00000001                699  SHIFT_register  EQU %1
00000542  =00000000                700  SHIFT_immed     EQU %0
00000542  =00000000                701  SHIFT_BYTE  EQU %00
00000542  =00000001                702  SHIFT_WORD  EQU %01
00000542  =00000003                703  SHIFT_LONG  EQU %11
00000542                           704  
00000542= 44 00                    705  pr_reg          DC.B    'D',0
00000544                           706  
00000544= 52 4F 00                 707  pr_SHIFT_RO   DC.B    'RO',0
00000547= 41 53 00                 708  pr_SHIFT_AS   DC.B    'AS',0
0000054A= 4C 53 00                 709  pr_SHIFT_LS   DC.B    'LS',0
0000054D= 4C 00                    710  pr_SHIFT_L    DC.B     'L',0
0000054F= 52 00                    711  pr_SHIFT_R    DC.B     'R',0
00000551                           712  
00000551= 45 52 52 4F 52 00        713  pr_ERROR    DC.B    'ERROR',0
00000557                           714  
00000557= 42 43 43 00              715  pr_BCC_CC   DC.B    'BCC',0
0000055B= 42 43 53 00              716  pr_BCC_CS   DC.B    'BCS',0
0000055F= 42 45 51 00              717  pr_BCC_EQ   DC.B    'BEQ',0
00000563= 42 47 45 00              718  pr_BCC_GE   DC.B    'BGE',0
00000567= 42 47 54 00              719  pr_BCC_GT   DC.B    'BGT',0
0000056B= 42 48 49 00              720  pr_BCC_HI   DC.B    'BHI',0
0000056F= 42 4C 45 00              721  pr_BCC_LE   DC.B    'BLE',0
00000573= 42 4C 53 00              722  pr_BCC_LS   DC.B    'BLS',0
00000577= 42 4C 54 00              723  pr_BCC_LT   DC.B    'BLT',0
0000057B= 42 4D 49 00              724  pr_BCC_MI   DC.B    'BMI',0
0000057F= 42 4E 45 00              725  pr_BCC_NE   DC.B    'BNE',0
00000583= 42 50 4C 00              726  pr_BCC_PL   DC.B    'BPL',0
00000587= 42 56 43 00              727  pr_BCC_VC   DC.B    'BVC',0
0000058B= 42 56 53 00              728  pr_BCC_VS   DC.B    'BVS',0
0000058F                           729  CHECK_SHIFT 
00000590  6100 0118                730      BSR     Get_Count_Register_Val          * register 3
00000594  6100 0128                731      BSR     Get_Size                        * register 4
00000598  6100 0138                732      BSR     Get_Direction                   * register 5
0000059C  6100 0148                733      BSR     Get_Is_Register_Or_Immediate    * register 6
000005A0  6100 015C                734      BSR     Get_Shift_Opcode                * register 7
000005A4                           735  
000005A4  6100 0024                736      BSR     PrintShiftData
000005A8                           737      
000005A8  6100 000C                738      BSR     getShiftDestReg
000005AC                           739      
000005AC  103C 0003                740      MOVE.B  #3,D0
000005B0  4E4F                     741      TRAP    #15
000005B2                           742      
000005B2  6000 0DFE                743      BRA         opdec_return
000005B6                           744  
000005B6                           745  getShiftDestReg
000005B6                           746  
000005B6  48A7 2000                747      MOVEM.W     D2, -(SP)
000005BA                           748      
000005BA  123C 000D                749      MOVE.B      #13,D1
000005BE  E3AA                     750      LSL.L       D1,D2
000005C0  E2AA                     751      LSR.L       D1,D2
000005C2  1202                     752      MOVE.B      D2,D1         
000005C4                           753      
000005C4  4C9F 0004                754      MOVEM.W     (SP)+,D2
000005C8  4E75                     755      RTS
000005CA                           756  
000005CA                           757      
000005CA                           758  PrintShiftData
000005CA                           759      
000005CA  BE3C 0003                760      CMP.B   #RO,D7
000005CE  6700 0012                761      BEQ     printRotate
000005D2  BE3C 0000                762      CMP.B   #AS,D7
000005D6  6700 0014                763      BEQ     printArithShift
000005DA  BE3C 0001                764      CMP.B   #LS,D7
000005DE  6700 0016                765      BEQ     printLogicShift
000005E2                           766      
000005E2                           767  printRotate
000005E2  43F8 0544                768      LEA         pr_SHIFT_RO,A1
000005E6  4EF9 00000600            769      JMP         executeShiftOpcodePrint
000005EC                           770  printArithShift
000005EC  43F8 0547                771      LEA         pr_SHIFT_AS,A1
000005F0  4EF9 00000600            772      JMP         executeShiftOpcodePrint
000005F6                           773  printLogicShift
000005F6  43F8 054A                774      LEA         pr_SHIFT_LS,A1
000005FA  4EF9 00000600            775      JMP         executeShiftOpcodePrint
00000600                           776  executeShiftOpcodePrint
00000600  6100 0152                777      BSR         PrintString
00000604                           778  
00000604  BA3C 0000                779      CMP.B   #R,D5
00000608  6700 000A                780      BEQ     printShiftRight
0000060C  BA3C 0001                781      CMP.B   #L,D5
00000610  6700 000C                782      BEQ     printShiftLeft
00000614                           783      
00000614                           784  printShiftRight
00000614  43F8 054F                785      LEA         pr_SHIFT_R,A1
00000618  4EF9 00000628            786      JMP         executePrintShiftdirection
0000061E                           787  printShiftLeft
0000061E  43F8 054D                788      LEA         pr_SHIFT_L,A1
00000622  4EF9 00000628            789      JMP         executePrintShiftdirection
00000628                           790  executePrintShiftdirection
00000628  6100 012A                791      BSR         PrintString
0000062C                           792      
0000062C  B83C 0000                793      CMP.B   #SHIFT_BYTE,D4
00000630  6700 0012                794      BEQ     printShiftByte
00000634  B83C 0001                795      CMP.B   #SHIFT_WORD,D4
00000638  6700 0016                796      BEQ     printShiftWord
0000063C  B83C 0003                797      CMP.B   #SHIFT_LONG,D4
00000640  6700 001A                798      BEQ     printShiftLong
00000644                           799  
00000644                           800  printShiftByte
00000644  43F9 0000135A            801      LEA     pr_BYTE,A1
0000064A  4EF9 00000668            802      JMP     executePrintShiftSize
00000650                           803  printShiftWord
00000650  43F9 0000135D            804      LEA     pr_WORD,A1
00000656  4EF9 00000668            805      JMP     executePrintShiftSize
0000065C                           806  printShiftLong
0000065C  43F9 00001360            807      LEA     pr_LONG,A1
00000662  4EF9 00000668            808      JMP     executePrintShiftSize
00000668                           809  executePrintShiftSize
00000668  6100 00EA                810      BSR         PrintString
0000066C  43F9 00001356            811      LEA     pr_space,A1
00000672  6100 00E0                812      BSR     PrintString
00000676                           813      
00000676  BC3C 0001                814      CMP.B   #SHIFT_register,D6
0000067A  6700 000A                815      BEQ     printShiftReg
0000067E  BC3C 0000                816      CMP.B   #SHIFT_immed,D6
00000682  6700 000A                817      BEQ     printShift
00000686                           818  
00000686                           819  printShiftReg
00000686  43F8 0542                820      LEA     pr_reg,A1
0000068A  6100 00C8                821      BSR     PrintString
0000068E                           822  printShift
0000068E  1203                     823      MOVE.B  D3,D1
00000690  103C 0003                824      MOVE.B  #3,D0
00000694  4E4F                     825      TRAP    #15
00000696                           826      
00000696  43F9 00001358            827      LEA     pr_comma,A1
0000069C  6100 00B6                828      BSR     PrintString
000006A0  43F8 0542                829      LEA     pr_reg,A1
000006A4  6100 00AE                830      BSR     PrintString
000006A8  4E75                     831      RTS
000006AA                           832      
000006AA                           833      
000006AA                           834  Get_Count_Register_Val
000006AA                           835  
000006AA  48A7 2000                836      MOVEM.W     D2, -(SP)
000006AE                           837      
000006AE  123C 000D                838      MOVE.B      #13,D1
000006B2  E98A                     839      LSL.L       #4,D2
000006B4  E2AA                     840      LSR.L       D1,D2
000006B6  1602                     841      MOVE.B      D2,D3         
000006B8                           842      
000006B8  4C9F 0004                843      MOVEM.W     (SP)+,D2
000006BC  4E75                     844      RTS
000006BE                           845  
000006BE                           846  Get_Size
000006BE                           847      
000006BE  48A7 2000                848      MOVEM.W     D2, -(SP)
000006C2                           849      
000006C2  123C 000E                850      MOVE.B      #14,D1
000006C6  E18A                     851      LSL.L       #8,D2
000006C8  E2AA                     852      LSR.L       D1,D2
000006CA  1802                     853      MOVE.B      D2,D4         
000006CC                           854      
000006CC  4C9F 0004                855      MOVEM.W     (SP)+,D2
000006D0  4E75                     856      RTS
000006D2                           857  Get_Direction
000006D2                           858  
000006D2  48A7 2000                859      MOVEM.W     D2, -(SP)
000006D6                           860      
000006D6  123C 000F                861      MOVE.B      #15,D1
000006DA  EF8A                     862      LSL.L       #7,D2
000006DC  E2AA                     863      LSR.L       D1,D2
000006DE  1A02                     864      MOVE.B      D2,D5         
000006E0                           865      
000006E0  4C9F 0004                866      MOVEM.W     (SP)+,D2
000006E4  4E75                     867      RTS
000006E6                           868  Get_Is_Register_Or_Immediate
000006E6                           869      
000006E6  48A7 2000                870      MOVEM.W     D2, -(SP)
000006EA                           871      
000006EA  123C 000A                872      MOVE.B      #10,D1
000006EE  E3AA                     873      LSL.L       D1,D2
000006F0  123C 000F                874      MOVE.B      #15,D1
000006F4  E2AA                     875      LSR.L       D1,D2
000006F6                           876      
000006F6  1C02                     877      MOVE.B      D2,D6         
000006F8                           878      
000006F8  4C9F 0004                879      MOVEM.W     (SP)+,D2
000006FC  4E75                     880      RTS
000006FE                           881  
000006FE                           882  Get_Shift_Opcode
000006FE                           883      
000006FE  48A7 2000                884      MOVEM.W     D2, -(SP)
00000702                           885      
00000702  123C 000B                886      MOVE.B      #11,D1
00000706  E3AA                     887      LSL.L       D1,D2
00000708  123C 000E                888      MOVE.B      #14,D1
0000070C  E2AA                     889      LSR.L       D1,D2
0000070E                           890      
0000070E  1E02                     891      MOVE.B      D2,D7         
00000710                           892      
00000710  4C9F 0004                893      MOVEM.W     (SP)+,D2
00000714  4E75                     894      RTS
00000716                           895  
00000716                           896  
00000716                           897  MATCH_LSL
00000716  3A02                     898      MOVE.W      D2,D5       *REMOVE
00000718                           899  MATCH_LSR
00000718  3A02                     900      MOVE.W      D2,D5       *REMOVE
0000071A                           901  MATCH_ASR
0000071A  3A02                     902      MOVE.W      D2,D5       *REMOVE
0000071C                           903  MATCH_ASL
0000071C  3A02                     904      MOVE.W      D2,D5       *REMOVE
0000071E                           905  MATCH_ROL
0000071E  3A02                     906      MOVE.W      D2,D5       *REMOVE
00000720                           907  MATCH_ROR
00000720  3A02                     908      MOVE.W      D2,D5       *REMOVE
00000722                           909  
00000722                           910  Get_BCC_Displacement_8bit
00000722                           911  
00000722  4246                     912      CLR     D6
00000724  1C02                     913      MOVE.B  D2,D6
00000726  4E75                     914      RTS
00000728                           915  Get_BCC_Displacement_16bit
00000728                           916  
00000728  4246                     917      CLR     D6
0000072A  3C18                     918      MOVE.W  (A0)+,D6
0000072C  4E75                     919      RTS
0000072E                           920  Get_BCC_Displacement_32bit
0000072E                           921  
0000072E  4246                     922      CLR     D6
00000730  2C18                     923      MOVE.L  (A0)+,D6
00000732  4E75                     924      RTS
00000734                           925  Get_Current_Address
00000734                           926  
00000734  4247                     927      CLR     D7
00000736  2E08                     928      MOVE.L      A0,D7 
00000738  5587                     929      SUBI.L      #2,D7
0000073A  4E75                     930      RTS
0000073C                           931  Get_BCC_Destination_Address
0000073C                           932  
0000073C  9E86                     933      SUB.L   D6,D7    
0000073E  4E75                     934      RTS
00000740                           935  
00000740                           936  PrintHex
00000740                           937  
00000740  48A7 2000                938      MOVEM.W     D2, -(SP)
00000744                           939      
00000744  103C 000F                940      MOVE.B      #15,D0
00000748  143C 0010                941      MOVE.B      #16,D2 * print base 16
0000074C  4E4F                     942      TRAP        #15
0000074E                           943  
0000074E  4C9F 0004                944      MOVEM.W     (SP)+,D2
00000752  4E75                     945      RTS
00000754                           946  PrintString
00000754  103C 000E                947      MOVE.B      #14,D0
00000758  4E4F                     948      TRAP        #15
0000075A  4E75                     949      RTS
0000075C                           950  PrintSizeByte
0000075C  103C 000E                951      MOVE.B      #14,D0
00000760  43F9 0000135A            952      LEA         pr_BYTE,A1
00000766  4E4F                     953      TRAP        #15
00000768  4E75                     954      RTS
0000076A                           955  PrintSizeWord
0000076A  103C 000E                956      MOVE.B      #14,D0
0000076E  43F9 0000135D            957      LEA         pr_WORD,A1
00000774  4E4F                     958      TRAP        #15
00000776  4E75                     959      RTS
00000778                           960  PrintSizeLong
00000778  103C 000E                961      MOVE.B      #14,D0
0000077C  43F9 00001360            962      LEA         pr_LONG,A1
00000782  4E4F                     963      TRAP        #15
00000784  4E75                     964      RTS
00000786                           965  
00000786                           966  
00000786                           967  MATCH_CC_T_8
00000786  3A02                     968      MOVE.W      D2,D5       *REMOVE
00000788                           969  MATCH_CC_T_16
00000788  3A02                     970      MOVE.W      D2,D5       *REMOVE
0000078A                           971  MATCH_CC_T_32
0000078A  3A02                     972      MOVE.W      D2,D5       *REMOVE
0000078C                           973  MATCH_CC_F_8
0000078C  3A02                     974      MOVE.W      D2,D5       *REMOVE
0000078E                           975  MATCH_CC_F_16
0000078E  3A02                     976      MOVE.W      D2,D5       *REMOVE
00000790                           977  MATCH_CC_F_32
00000790  3A02                     978      MOVE.W      D2,D5       *REMOVE
00000792                           979  MATCH_CC_HI_8
00000792                           980      ** print opcode **
00000792  43F8 056B                981      LEA         pr_BCC_HI,A1                
00000796  61BC                     982      BSR         PrintString
00000798                           983      
00000798  61C2                     984      BSR         PrintSizeBYTE
0000079A  43F9 00001356            985      LEA         pr_space,A1
000007A0  61B2                     986      BSR         PrintString
000007A2                           987   
000007A2                           988      ** print address **
000007A2  6100 FF7E                989      BSR         Get_BCC_Displacement_8bit 
000007A6  618C                     990      BSR         Get_Current_Address
000007A8  6192                     991      BSR         Get_BCC_Destination_Address
000007AA  2207                     992      MOVE.L      D7,D1
000007AC  6192                     993      BSR         PrintHex
000007AE                           994      
000007AE  6000 0C02                995      BRA         opdec_return
000007B2                           996  
000007B2                           997  MATCH_CC_HI_16
000007B2                           998      ** print opcode **
000007B2  43F8 056B                999      LEA         pr_BCC_HI,A1                
000007B6  619C                    1000      BSR         PrintString
000007B8                          1001      
000007B8  61B0                    1002      BSR         PrintSizeWORD
000007BA  43F9 00001356           1003      LEA         pr_space,A1
000007C0  6192                    1004      BSR         PrintString
000007C2                          1005   
000007C2                          1006      ** print address **
000007C2  6100 FF64               1007      BSR         Get_BCC_Displacement_16bit 
000007C6  6100 FF6C               1008      BSR         Get_Current_Address
000007CA  6100 FF70               1009      BSR         Get_BCC_Destination_Address
000007CE  2207                    1010      MOVE.L      D7,D1
000007D0  6100 FF6E               1011      BSR         PrintHex
000007D4                          1012      
000007D4  6000 0BDC               1013      BRA         opdec_return
000007D8                          1014  MATCH_CC_HI_32
000007D8                          1015      ** print opcode **
000007D8  43F8 056B               1016      LEA         pr_BCC_HI,A1                
000007DC  6100 FF76               1017      BSR         PrintString
000007E0                          1018      
000007E0  6196                    1019      BSR         PrintSizeLONG
000007E2  43F9 00001356           1020      LEA         pr_space,A1
000007E8  6100 FF6A               1021      BSR         PrintString
000007EC                          1022   
000007EC                          1023      ** print address **
000007EC  6100 FF40               1024      BSR         Get_BCC_Displacement_32bit 
000007F0  6100 FF42               1025      BSR         Get_Current_Address
000007F4  6100 FF46               1026      BSR         Get_BCC_Destination_Address
000007F8  2207                    1027      MOVE.L      D7,D1
000007FA  6100 FF44               1028      BSR         PrintHex
000007FE                          1029      
000007FE  6000 0BB2               1030      BRA         opdec_return
00000802                          1031  MATCH_CC_LS_8
00000802                          1032      ** print opcode **
00000802  43F8 0573               1033      LEA         pr_BCC_LS,A1                
00000806  6100 FF4C               1034      BSR         PrintString
0000080A                          1035      
0000080A  6100 FF50               1036      BSR         PrintSizeBYTE
0000080E  43F9 00001356           1037      LEA         pr_space,A1
00000814  6100 FF3E               1038      BSR         PrintString
00000818                          1039   
00000818                          1040      ** print address **
00000818  6100 FF08               1041      BSR         Get_BCC_Displacement_8bit 
0000081C  6100 FF16               1042      BSR         Get_Current_Address
00000820  6100 FF1A               1043      BSR         Get_BCC_Destination_Address
00000824  2207                    1044      MOVE.L      D7,D1
00000826  6100 FF18               1045      BSR         PrintHex
0000082A                          1046      
0000082A  6000 0B86               1047      BRA         opdec_return
0000082E                          1048  MATCH_CC_LS_16
0000082E                          1049      ** print opcode **
0000082E  43F8 0573               1050      LEA         pr_BCC_LS,A1                
00000832  6100 FF20               1051      BSR         PrintString
00000836                          1052      
00000836  6100 FF32               1053      BSR         PrintSizeWORD
0000083A  43F9 00001356           1054      LEA         pr_space,A1
00000840  6100 FF12               1055      BSR         PrintString
00000844                          1056   
00000844                          1057      ** print address **
00000844  6100 FEE2               1058      BSR         Get_BCC_Displacement_16bit 
00000848  6100 FEEA               1059      BSR         Get_Current_Address
0000084C  6100 FEEE               1060      BSR         Get_BCC_Destination_Address
00000850  2207                    1061      MOVE.L      D7,D1
00000852  6100 FEEC               1062      BSR         PrintHex
00000856                          1063      
00000856  6000 0B5A               1064      BRA         opdec_return
0000085A                          1065  
0000085A                          1066  MATCH_CC_LS_32  
0000085A                          1067      ** print opcode **
0000085A  43F8 0573               1068      LEA         pr_BCC_LS,A1                
0000085E  6100 FEF4               1069      BSR         PrintString
00000862                          1070      
00000862  6100 FF14               1071      BSR         PrintSizeLONG
00000866  43F9 00001356           1072      LEA         pr_space,A1
0000086C  6100 FEE6               1073      BSR         PrintString
00000870                          1074   
00000870                          1075      ** print address **
00000870  6100 FEBC               1076      BSR         Get_BCC_Displacement_32bit 
00000874  6100 FEBE               1077      BSR         Get_Current_Address
00000878  6100 FEC2               1078      BSR         Get_BCC_Destination_Address
0000087C  2207                    1079      MOVE.L      D7,D1
0000087E  6100 FEC0               1080      BSR         PrintHex
00000882                          1081      
00000882  6000 0B2E               1082      BRA         opdec_return
00000886                          1083  MATCH_CC_CC_8    
00000886                          1084      
00000886                          1085      ** print opcode **
00000886  43F8 0557               1086      LEA         pr_BCC_CC,A1                
0000088A  6100 FEC8               1087      BSR         PrintString
0000088E                          1088      
0000088E  6100 FECC               1089      BSR         PrintSizeBYTE
00000892  43F9 00001356           1090      LEA         pr_space,A1
00000898  6100 FEBA               1091      BSR         PrintString
0000089C                          1092   
0000089C                          1093      ** print address **
0000089C  6100 FE84               1094      BSR         Get_BCC_Displacement_8bit 
000008A0  6100 FE92               1095      BSR         Get_Current_Address
000008A4  6100 FE96               1096      BSR         Get_BCC_Destination_Address
000008A8  2207                    1097      MOVE.L      D7,D1
000008AA  6100 FE94               1098      BSR         PrintHex
000008AE                          1099      
000008AE  6000 0B02               1100      BRA         opdec_return
000008B2                          1101  
000008B2                          1102  MATCH_CC_CC_16
000008B2                          1103      ** print opcode **
000008B2  43F8 0557               1104      LEA         pr_BCC_CC,A1                
000008B6  6100 FE9C               1105      BSR         PrintString
000008BA                          1106      
000008BA  6100 FEAE               1107      BSR         PrintSizeWORD
000008BE  43F9 00001356           1108      LEA         pr_space,A1
000008C4  6100 FE8E               1109      BSR         PrintString
000008C8                          1110   
000008C8                          1111      ** print address **
000008C8  6100 FE5E               1112      BSR         Get_BCC_Displacement_16bit 
000008CC  6100 FE66               1113      BSR         Get_Current_Address
000008D0  6100 FE6A               1114      BSR         Get_BCC_Destination_Address
000008D4  2207                    1115      MOVE.L      D7,D1
000008D6  6100 FE68               1116      BSR         PrintHex
000008DA                          1117      
000008DA  6000 0AD6               1118      BRA         opdec_return
000008DE                          1119  MATCH_CC_CC_32
000008DE                          1120      ** print opcode **
000008DE  43F8 0557               1121      LEA         pr_BCC_CC,A1                
000008E2  6100 FE70               1122      BSR         PrintString
000008E6                          1123      
000008E6  6100 FE90               1124      BSR         PrintSizeLONG
000008EA  43F9 00001356           1125      LEA         pr_space,A1
000008F0  6100 FE62               1126      BSR         PrintString
000008F4                          1127   
000008F4                          1128      ** print address **
000008F4  6100 FE38               1129      BSR         Get_BCC_Displacement_32bit 
000008F8  6100 FE3A               1130      BSR         Get_Current_Address
000008FC  6100 FE3E               1131      BSR         Get_BCC_Destination_Address
00000900  2207                    1132      MOVE.L      D7,D1
00000902  6100 FE3C               1133      BSR         PrintHex
00000906                          1134      
00000906  6000 0AAA               1135      BRA         opdec_return
0000090A                          1136  MATCH_CC_CS_8
0000090A                          1137      ** print opcode **
0000090A  43F8 055B               1138      LEA         pr_BCC_CS,A1                
0000090E  6100 FE44               1139      BSR         PrintString
00000912                          1140      
00000912  6100 FE48               1141      BSR         PrintSizeBYTE
00000916  43F9 00001356           1142      LEA         pr_space,A1
0000091C  6100 FE36               1143      BSR         PrintString
00000920                          1144   
00000920                          1145      ** print address **
00000920  6100 FE00               1146      BSR         Get_BCC_Displacement_8bit 
00000924  6100 FE0E               1147      BSR         Get_Current_Address
00000928  6100 FE12               1148      BSR         Get_BCC_Destination_Address
0000092C  2207                    1149      MOVE.L      D7,D1
0000092E  6100 FE10               1150      BSR         PrintHex
00000932                          1151      
00000932  6000 0A7E               1152      BRA         opdec_return
00000936                          1153  MATCH_CC_CS_16
00000936                          1154      ** print opcode **
00000936  43F8 055B               1155      LEA         pr_BCC_CS,A1                
0000093A  6100 FE18               1156      BSR         PrintString
0000093E                          1157      
0000093E  6100 FE2A               1158      BSR         PrintSizeWORD
00000942  43F9 00001356           1159      LEA         pr_space,A1
00000948  6100 FE0A               1160      BSR         PrintString
0000094C                          1161   
0000094C                          1162      ** print address **
0000094C  6100 FDDA               1163      BSR         Get_BCC_Displacement_16bit 
00000950  6100 FDE2               1164      BSR         Get_Current_Address
00000954  6100 FDE6               1165      BSR         Get_BCC_Destination_Address
00000958  2207                    1166      MOVE.L      D7,D1
0000095A  6100 FDE4               1167      BSR         PrintHex
0000095E                          1168      
0000095E  6000 0A52               1169      BRA         opdec_return
00000962                          1170  MATCH_CC_CS_32
00000962                          1171      ** print opcode **
00000962  43F8 055B               1172      LEA         pr_BCC_CS,A1                
00000966  6100 FDEC               1173      BSR         PrintString
0000096A                          1174      
0000096A  6100 FE0C               1175      BSR         PrintSizeLONG
0000096E  43F9 00001356           1176      LEA         pr_space,A1
00000974  6100 FDDE               1177      BSR         PrintString
00000978                          1178   
00000978                          1179      ** print address **
00000978  6100 FDB4               1180      BSR         Get_BCC_Displacement_32bit 
0000097C  6100 FDB6               1181      BSR         Get_Current_Address
00000980  6100 FDBA               1182      BSR         Get_BCC_Destination_Address
00000984  2207                    1183      MOVE.L      D7,D1
00000986  6100 FDB8               1184      BSR         PrintHex
0000098A                          1185      
0000098A  6000 0A26               1186      BRA         opdec_return
0000098E                          1187  MATCH_CC_NE_8
0000098E                          1188      ** print opcode **
0000098E  43F8 057F               1189      LEA         pr_BCC_NE,A1                
00000992  6100 FDC0               1190      BSR         PrintString
00000996                          1191      
00000996  6100 FDC4               1192      BSR         PrintSizeBYTE
0000099A  43F9 00001356           1193      LEA         pr_space,A1
000009A0  6100 FDB2               1194      BSR         PrintString
000009A4                          1195   
000009A4                          1196      ** print address **
000009A4  6100 FD7C               1197      BSR         Get_BCC_Displacement_8bit 
000009A8  6100 FD8A               1198      BSR         Get_Current_Address
000009AC  6100 FD8E               1199      BSR         Get_BCC_Destination_Address
000009B0  2207                    1200      MOVE.L      D7,D1
000009B2  6100 FD8C               1201      BSR         PrintHex
000009B6                          1202      
000009B6  6000 09FA               1203      BRA         opdec_return
000009BA                          1204  MATCH_CC_NE_16
000009BA                          1205      ** print opcode **
000009BA  43F8 057F               1206      LEA         pr_BCC_NE,A1                
000009BE  6100 FD94               1207      BSR         PrintString
000009C2                          1208      
000009C2  6100 FDA6               1209      BSR         PrintSizeWORD
000009C6  43F9 00001356           1210      LEA         pr_space,A1
000009CC  6100 FD86               1211      BSR         PrintString
000009D0                          1212   
000009D0                          1213      ** print address **
000009D0  6100 FD56               1214      BSR         Get_BCC_Displacement_16bit 
000009D4  6100 FD5E               1215      BSR         Get_Current_Address
000009D8  6100 FD62               1216      BSR         Get_BCC_Destination_Address
000009DC  2207                    1217      MOVE.L      D7,D1
000009DE  6100 FD60               1218      BSR         PrintHex
000009E2                          1219      
000009E2  6000 09CE               1220      BRA         opdec_return
000009E6                          1221  MATCH_CC_NE_32
000009E6                          1222      ** print opcode **
000009E6  43F8 057F               1223      LEA         pr_BCC_NE,A1                
000009EA  6100 FD68               1224      BSR         PrintString
000009EE                          1225      
000009EE  6100 FD88               1226      BSR         PrintSizeLONG
000009F2  43F9 00001356           1227      LEA         pr_space,A1
000009F8  6100 FD5A               1228      BSR         PrintString
000009FC                          1229   
000009FC                          1230      ** print address **
000009FC  6100 FD30               1231      BSR         Get_BCC_Displacement_32bit 
00000A00  6100 FD32               1232      BSR         Get_Current_Address
00000A04  6100 FD36               1233      BSR         Get_BCC_Destination_Address
00000A08  2207                    1234      MOVE.L      D7,D1
00000A0A  6100 FD34               1235      BSR         PrintHex
00000A0E                          1236      
00000A0E  6000 09A2               1237      BRA         opdec_return
00000A12                          1238  MATCH_CC_EQ_8
00000A12                          1239      ** print opcode **
00000A12  43F8 055F               1240      LEA         pr_BCC_EQ,A1                
00000A16  6100 FD3C               1241      BSR         PrintString
00000A1A                          1242      
00000A1A  6100 FD40               1243      BSR         PrintSizeBYTE
00000A1E  43F9 00001356           1244      LEA         pr_space,A1
00000A24  6100 FD2E               1245      BSR         PrintString
00000A28                          1246   
00000A28                          1247      ** print address **
00000A28  6100 FCF8               1248      BSR         Get_BCC_Displacement_8bit 
00000A2C  6100 FD06               1249      BSR         Get_Current_Address
00000A30  6100 FD0A               1250      BSR         Get_BCC_Destination_Address
00000A34  2207                    1251      MOVE.L      D7,D1
00000A36  6100 FD08               1252      BSR         PrintHex
00000A3A                          1253      
00000A3A  6000 0976               1254      BRA         opdec_return
00000A3E                          1255  MATCH_CC_EQ_16
00000A3E                          1256      ** print opcode **
00000A3E  43F8 055F               1257      LEA         pr_BCC_EQ,A1                
00000A42  6100 FD10               1258      BSR         PrintString
00000A46                          1259      
00000A46  6100 FD22               1260      BSR         PrintSizeWORD
00000A4A  43F9 00001356           1261      LEA         pr_space,A1
00000A50  6100 FD02               1262      BSR         PrintString
00000A54                          1263   
00000A54                          1264      ** print address **
00000A54  6100 FCD2               1265      BSR         Get_BCC_Displacement_16bit 
00000A58  6100 FCDA               1266      BSR         Get_Current_Address
00000A5C  6100 FCDE               1267      BSR         Get_BCC_Destination_Address
00000A60  2207                    1268      MOVE.L      D7,D1
00000A62  6100 FCDC               1269      BSR         PrintHex
00000A66                          1270      
00000A66  6000 094A               1271      BRA         opdec_return
00000A6A                          1272  MATCH_CC_EQ_32
00000A6A                          1273      ** print opcode **
00000A6A  43F8 055F               1274      LEA         pr_BCC_EQ,A1                
00000A6E  6100 FCE4               1275      BSR         PrintString
00000A72                          1276      
00000A72  6100 FD04               1277      BSR         PrintSizeLONG
00000A76  43F9 00001356           1278      LEA         pr_space,A1
00000A7C  6100 FCD6               1279      BSR         PrintString
00000A80                          1280   
00000A80                          1281      ** print address **
00000A80  6100 FCAC               1282      BSR         Get_BCC_Displacement_32bit 
00000A84  6100 FCAE               1283      BSR         Get_Current_Address
00000A88  6100 FCB2               1284      BSR         Get_BCC_Destination_Address
00000A8C  2207                    1285      MOVE.L      D7,D1
00000A8E  6100 FCB0               1286      BSR         PrintHex
00000A92                          1287      
00000A92  6000 091E               1288      BRA         opdec_return
00000A96                          1289  MATCH_CC_VC_8
00000A96                          1290      ** print opcode **
00000A96  43F8 0587               1291      LEA         pr_BCC_VC,A1                
00000A9A  6100 FCB8               1292      BSR         PrintString
00000A9E                          1293      
00000A9E  6100 FCBC               1294      BSR         PrintSizeBYTE
00000AA2  43F9 00001356           1295      LEA         pr_space,A1
00000AA8  6100 FCAA               1296      BSR         PrintString
00000AAC                          1297   
00000AAC                          1298      ** print address **
00000AAC  6100 FC74               1299      BSR         Get_BCC_Displacement_8bit 
00000AB0  6100 FC82               1300      BSR         Get_Current_Address
00000AB4  6100 FC86               1301      BSR         Get_BCC_Destination_Address
00000AB8  2207                    1302      MOVE.L      D7,D1
00000ABA  6100 FC84               1303      BSR         PrintHex
00000ABE                          1304      
00000ABE  6000 08F2               1305      BRA         opdec_return
00000AC2                          1306  MATCH_CC_VC_16
00000AC2                          1307      ** print opcode **
00000AC2  43F8 0587               1308      LEA         pr_BCC_VC,A1                
00000AC6  6100 FC8C               1309      BSR         PrintString
00000ACA                          1310      
00000ACA  6100 FC9E               1311      BSR         PrintSizeWORD
00000ACE  43F9 00001356           1312      LEA         pr_space,A1
00000AD4  6100 FC7E               1313      BSR         PrintString
00000AD8                          1314   
00000AD8                          1315      ** print address **
00000AD8  6100 FC4E               1316      BSR         Get_BCC_Displacement_16bit 
00000ADC  6100 FC56               1317      BSR         Get_Current_Address
00000AE0  6100 FC5A               1318      BSR         Get_BCC_Destination_Address
00000AE4  2207                    1319      MOVE.L      D7,D1
00000AE6  6100 FC58               1320      BSR         PrintHex
00000AEA                          1321      
00000AEA  6000 08C6               1322      BRA         opdec_return
00000AEE                          1323  MATCH_CC_VC_32
00000AEE                          1324      ** print opcode **
00000AEE  43F8 0587               1325      LEA         pr_BCC_VC,A1                
00000AF2  6100 FC60               1326      BSR         PrintString
00000AF6                          1327      
00000AF6  6100 FC80               1328      BSR         PrintSizeLONG
00000AFA  43F9 00001356           1329      LEA         pr_space,A1
00000B00  6100 FC52               1330      BSR         PrintString
00000B04                          1331   
00000B04                          1332      ** print address **
00000B04  6100 FC28               1333      BSR         Get_BCC_Displacement_32bit 
00000B08  6100 FC2A               1334      BSR         Get_Current_Address
00000B0C  6100 FC2E               1335      BSR         Get_BCC_Destination_Address
00000B10  2207                    1336      MOVE.L      D7,D1
00000B12  6100 FC2C               1337      BSR         PrintHex
00000B16                          1338      
00000B16  6000 089A               1339      BRA         opdec_return
00000B1A                          1340  MATCH_CC_VS_8
00000B1A                          1341      ** print opcode **
00000B1A  43F8 058B               1342      LEA         pr_BCC_VS,A1                
00000B1E  6100 FC34               1343      BSR         PrintString
00000B22                          1344      
00000B22  6100 FC38               1345      BSR         PrintSizeBYTE
00000B26  43F9 00001356           1346      LEA         pr_space,A1
00000B2C  6100 FC26               1347      BSR         PrintString
00000B30                          1348   
00000B30                          1349      ** print address **
00000B30  6100 FBF0               1350      BSR         Get_BCC_Displacement_8bit 
00000B34  6100 FBFE               1351      BSR         Get_Current_Address
00000B38  6100 FC02               1352      BSR         Get_BCC_Destination_Address
00000B3C  2207                    1353      MOVE.L      D7,D1
00000B3E  6100 FC00               1354      BSR         PrintHex
00000B42                          1355      
00000B42  6000 086E               1356      BRA         opdec_return
00000B46                          1357  MATCH_CC_VS_16
00000B46                          1358      ** print opcode **
00000B46  43F8 058B               1359      LEA         pr_BCC_VS,A1                
00000B4A  6100 FC08               1360      BSR         PrintString
00000B4E                          1361      
00000B4E  6100 FC1A               1362      BSR         PrintSizeWORD
00000B52  43F9 00001356           1363      LEA         pr_space,A1
00000B58  6100 FBFA               1364      BSR         PrintString
00000B5C                          1365   
00000B5C                          1366      ** print address **
00000B5C  6100 FBCA               1367      BSR         Get_BCC_Displacement_16bit 
00000B60  6100 FBD2               1368      BSR         Get_Current_Address
00000B64  6100 FBD6               1369      BSR         Get_BCC_Destination_Address
00000B68  2207                    1370      MOVE.L      D7,D1
00000B6A  6100 FBD4               1371      BSR         PrintHex
00000B6E                          1372      
00000B6E  6000 0842               1373      BRA         opdec_return
00000B72                          1374  MATCH_CC_VS_32
00000B72                          1375      ** print opcode **
00000B72  43F8 058B               1376      LEA         pr_BCC_VS,A1                
00000B76  6100 FBDC               1377      BSR         PrintString
00000B7A                          1378      
00000B7A  6100 FBFC               1379      BSR         PrintSizeLONG
00000B7E  43F9 00001356           1380      LEA         pr_space,A1
00000B84  6100 FBCE               1381      BSR         PrintString
00000B88                          1382   
00000B88                          1383      ** print address **
00000B88  6100 FBA4               1384      BSR         Get_BCC_Displacement_32bit 
00000B8C  6100 FBA6               1385      BSR         Get_Current_Address
00000B90  6100 FBAA               1386      BSR         Get_BCC_Destination_Address
00000B94  2207                    1387      MOVE.L      D7,D1
00000B96  6100 FBA8               1388      BSR         PrintHex
00000B9A                          1389      
00000B9A  6000 0816               1390      BRA         opdec_return
00000B9E                          1391  MATCH_CC_PL_8
00000B9E                          1392      ** print opcode **
00000B9E  43F8 0583               1393      LEA         pr_BCC_PL,A1                
00000BA2  6100 FBB0               1394      BSR         PrintString
00000BA6                          1395      
00000BA6  6100 FBB4               1396      BSR         PrintSizeBYTE
00000BAA  43F9 00001356           1397      LEA         pr_space,A1
00000BB0  6100 FBA2               1398      BSR         PrintString
00000BB4                          1399   
00000BB4                          1400      ** print address **
00000BB4  6100 FB6C               1401      BSR         Get_BCC_Displacement_8bit 
00000BB8  6100 FB7A               1402      BSR         Get_Current_Address
00000BBC  6100 FB7E               1403      BSR         Get_BCC_Destination_Address
00000BC0  2207                    1404      MOVE.L      D7,D1
00000BC2  6100 FB7C               1405      BSR         PrintHex
00000BC6                          1406      
00000BC6  6000 07EA               1407      BRA         opdec_return
00000BCA                          1408  MATCH_CC_PL_16
00000BCA                          1409      ** print opcode **
00000BCA  43F8 0583               1410      LEA         pr_BCC_PL,A1                
00000BCE  6100 FB84               1411      BSR         PrintString
00000BD2                          1412      
00000BD2  6100 FB96               1413      BSR         PrintSizeWORD
00000BD6  43F9 00001356           1414      LEA         pr_space,A1
00000BDC  6100 FB76               1415      BSR         PrintString
00000BE0                          1416   
00000BE0                          1417      ** print address **
00000BE0  6100 FB46               1418      BSR         Get_BCC_Displacement_16bit 
00000BE4  6100 FB4E               1419      BSR         Get_Current_Address
00000BE8  6100 FB52               1420      BSR         Get_BCC_Destination_Address
00000BEC  2207                    1421      MOVE.L      D7,D1
00000BEE  6100 FB50               1422      BSR         PrintHex
00000BF2                          1423      
00000BF2  6000 07BE               1424      BRA         opdec_return
00000BF6                          1425  MATCH_CC_PL_32
00000BF6                          1426      ** print opcode **
00000BF6  43F8 0583               1427      LEA         pr_BCC_PL,A1                
00000BFA  6100 FB58               1428      BSR         PrintString
00000BFE                          1429      
00000BFE  6100 FB78               1430      BSR         PrintSizeLONG
00000C02  43F9 00001356           1431      LEA         pr_space,A1
00000C08  6100 FB4A               1432      BSR         PrintString
00000C0C                          1433   
00000C0C                          1434      ** print address **
00000C0C  6100 FB20               1435      BSR         Get_BCC_Displacement_32bit 
00000C10  6100 FB22               1436      BSR         Get_Current_Address
00000C14  6100 FB26               1437      BSR         Get_BCC_Destination_Address
00000C18  2207                    1438      MOVE.L      D7,D1
00000C1A  6100 FB24               1439      BSR         PrintHex
00000C1E                          1440      
00000C1E  6000 0792               1441      BRA         opdec_return
00000C22                          1442  MATCH_CC_MI_8
00000C22                          1443      ** print opcode **
00000C22  43F8 057B               1444      LEA         pr_BCC_MI,A1                
00000C26  6100 FB2C               1445      BSR         PrintString
00000C2A                          1446      
00000C2A  6100 FB30               1447      BSR         PrintSizeBYTE
00000C2E  43F9 00001356           1448      LEA         pr_space,A1
00000C34  6100 FB1E               1449      BSR         PrintString
00000C38                          1450   
00000C38                          1451      ** print address **
00000C38  6100 FAE8               1452      BSR         Get_BCC_Displacement_8bit 
00000C3C  6100 FAF6               1453      BSR         Get_Current_Address
00000C40  6100 FAFA               1454      BSR         Get_BCC_Destination_Address
00000C44  2207                    1455      MOVE.L      D7,D1
00000C46  6100 FAF8               1456      BSR         PrintHex
00000C4A                          1457      
00000C4A  6000 0766               1458      BRA         opdec_return
00000C4E                          1459  MATCH_CC_MI_16
00000C4E                          1460      ** print opcode **
00000C4E  43F8 057B               1461      LEA         pr_BCC_MI,A1                
00000C52  6100 FB00               1462      BSR         PrintString
00000C56                          1463      
00000C56  6100 FB12               1464      BSR         PrintSizeWORD
00000C5A  43F9 00001356           1465      LEA         pr_space,A1
00000C60  6100 FAF2               1466      BSR         PrintString
00000C64                          1467   
00000C64                          1468      ** print address **
00000C64  6100 FAC2               1469      BSR         Get_BCC_Displacement_16bit 
00000C68  6100 FACA               1470      BSR         Get_Current_Address
00000C6C  6100 FACE               1471      BSR         Get_BCC_Destination_Address
00000C70  2207                    1472      MOVE.L      D7,D1
00000C72  6100 FACC               1473      BSR         PrintHex
00000C76                          1474      
00000C76  6000 073A               1475      BRA         opdec_return
00000C7A                          1476  MATCH_CC_MI_32
00000C7A                          1477      ** print opcode **
00000C7A  43F8 057B               1478      LEA         pr_BCC_MI,A1                
00000C7E  6100 FAD4               1479      BSR         PrintString
00000C82                          1480      
00000C82  6100 FAF4               1481      BSR         PrintSizeLONG
00000C86  43F9 00001356           1482      LEA         pr_space,A1
00000C8C  6100 FAC6               1483      BSR         PrintString
00000C90                          1484   
00000C90                          1485      ** print address **
00000C90  6100 FA9C               1486      BSR         Get_BCC_Displacement_32bit 
00000C94  6100 FA9E               1487      BSR         Get_Current_Address
00000C98  6100 FAA2               1488      BSR         Get_BCC_Destination_Address
00000C9C  2207                    1489      MOVE.L      D7,D1
00000C9E  6100 FAA0               1490      BSR         PrintHex
00000CA2                          1491      
00000CA2  6000 070E               1492      BRA         opdec_return
00000CA6                          1493  MATCH_CC_GE_8
00000CA6                          1494      ** print opcode **
00000CA6  43F8 0563               1495      LEA         pr_BCC_GE,A1                
00000CAA  6100 FAA8               1496      BSR         PrintString
00000CAE                          1497      
00000CAE  6100 FAAC               1498      BSR         PrintSizeBYTE
00000CB2  43F9 00001356           1499      LEA         pr_space,A1
00000CB8  6100 FA9A               1500      BSR         PrintString
00000CBC                          1501   
00000CBC                          1502      ** print address **
00000CBC  6100 FA64               1503      BSR         Get_BCC_Displacement_8bit 
00000CC0  6100 FA72               1504      BSR         Get_Current_Address
00000CC4  6100 FA76               1505      BSR         Get_BCC_Destination_Address
00000CC8  2207                    1506      MOVE.L      D7,D1
00000CCA  6100 FA74               1507      BSR         PrintHex
00000CCE                          1508      
00000CCE  6000 06E2               1509      BRA         opdec_return
00000CD2                          1510  MATCH_CC_GE_16
00000CD2                          1511      ** print opcode **
00000CD2  43F8 0563               1512      LEA         pr_BCC_GE,A1                
00000CD6  6100 FA7C               1513      BSR         PrintString
00000CDA                          1514      
00000CDA  6100 FA8E               1515      BSR         PrintSizeWORD
00000CDE  43F9 00001356           1516      LEA         pr_space,A1
00000CE4  6100 FA6E               1517      BSR         PrintString
00000CE8                          1518   
00000CE8                          1519      ** print address **
00000CE8  6100 FA3E               1520      BSR         Get_BCC_Displacement_16bit 
00000CEC  6100 FA46               1521      BSR         Get_Current_Address
00000CF0  6100 FA4A               1522      BSR         Get_BCC_Destination_Address
00000CF4  2207                    1523      MOVE.L      D7,D1
00000CF6  6100 FA48               1524      BSR         PrintHex
00000CFA                          1525      
00000CFA  6000 06B6               1526      BRA         opdec_return
00000CFE                          1527  MATCH_CC_GE_32
00000CFE                          1528      ** print opcode **
00000CFE  43F8 0563               1529      LEA         pr_BCC_GE,A1                
00000D02  6100 FA50               1530      BSR         PrintString
00000D06                          1531      
00000D06  6100 FA70               1532      BSR         PrintSizeLONG
00000D0A  43F9 00001356           1533      LEA         pr_space,A1
00000D10  6100 FA42               1534      BSR         PrintString
00000D14                          1535   
00000D14                          1536      ** print address **
00000D14  6100 FA18               1537      BSR         Get_BCC_Displacement_32bit 
00000D18  6100 FA1A               1538      BSR         Get_Current_Address
00000D1C  6100 FA1E               1539      BSR         Get_BCC_Destination_Address
00000D20  2207                    1540      MOVE.L      D7,D1
00000D22  6100 FA1C               1541      BSR         PrintHex
00000D26                          1542      
00000D26  6000 068A               1543      BRA         opdec_return
00000D2A                          1544  MATCH_CC_LT_8
00000D2A                          1545      ** print opcode **
00000D2A  43F8 0577               1546      LEA         pr_BCC_LT,A1                
00000D2E  6100 FA24               1547      BSR         PrintString
00000D32                          1548      
00000D32  6100 FA28               1549      BSR         PrintSizeBYTE
00000D36  43F9 00001356           1550      LEA         pr_space,A1
00000D3C  6100 FA16               1551      BSR         PrintString
00000D40                          1552   
00000D40                          1553      ** print address **
00000D40  6100 F9E0               1554      BSR         Get_BCC_Displacement_8bit 
00000D44  6100 F9EE               1555      BSR         Get_Current_Address
00000D48  6100 F9F2               1556      BSR         Get_BCC_Destination_Address
00000D4C  2207                    1557      MOVE.L      D7,D1
00000D4E  6100 F9F0               1558      BSR         PrintHex
00000D52                          1559      
00000D52  6000 065E               1560      BRA         opdec_return
00000D56                          1561  MATCH_CC_LT_16
00000D56                          1562      ** print opcode **
00000D56  43F8 0577               1563      LEA         pr_BCC_LT,A1                
00000D5A  6100 F9F8               1564      BSR         PrintString
00000D5E                          1565      
00000D5E  6100 FA0A               1566      BSR         PrintSizeWORD
00000D62  43F9 00001356           1567      LEA         pr_space,A1
00000D68  6100 F9EA               1568      BSR         PrintString
00000D6C                          1569   
00000D6C                          1570      ** print address **
00000D6C  6100 F9BA               1571      BSR         Get_BCC_Displacement_16bit 
00000D70  6100 F9C2               1572      BSR         Get_Current_Address
00000D74  6100 F9C6               1573      BSR         Get_BCC_Destination_Address
00000D78  2207                    1574      MOVE.L      D7,D1
00000D7A  6100 F9C4               1575      BSR         PrintHex
00000D7E                          1576      
00000D7E  6000 0632               1577      BRA         opdec_return
00000D82                          1578  MATCH_CC_LT_32
00000D82                          1579      ** print opcode **
00000D82  43F8 0577               1580      LEA         pr_BCC_LT,A1                
00000D86  6100 F9CC               1581      BSR         PrintString
00000D8A                          1582      
00000D8A  6100 F9EC               1583      BSR         PrintSizeLONG
00000D8E  43F9 00001356           1584      LEA         pr_space,A1
00000D94  6100 F9BE               1585      BSR         PrintString
00000D98                          1586   
00000D98                          1587      ** print address **
00000D98  6100 F994               1588      BSR         Get_BCC_Displacement_32bit 
00000D9C  6100 F996               1589      BSR         Get_Current_Address
00000DA0  6100 F99A               1590      BSR         Get_BCC_Destination_Address
00000DA4  2207                    1591      MOVE.L      D7,D1
00000DA6  6100 F998               1592      BSR         PrintHex
00000DAA                          1593      
00000DAA  6000 0606               1594      BRA         opdec_return
00000DAE                          1595  MATCH_CC_GT_8
00000DAE                          1596      ** print opcode **
00000DAE  43F8 0567               1597      LEA         pr_BCC_GT,A1                
00000DB2  6100 F9A0               1598      BSR         PrintString
00000DB6                          1599      
00000DB6  6100 F9A4               1600      BSR         PrintSizeBYTE
00000DBA  43F9 00001356           1601      LEA         pr_space,A1
00000DC0  6100 F992               1602      BSR         PrintString
00000DC4                          1603   
00000DC4                          1604      ** print address **
00000DC4  6100 F95C               1605      BSR         Get_BCC_Displacement_8bit 
00000DC8  6100 F96A               1606      BSR         Get_Current_Address
00000DCC  6100 F96E               1607      BSR         Get_BCC_Destination_Address
00000DD0  2207                    1608      MOVE.L      D7,D1
00000DD2  6100 F96C               1609      BSR         PrintHex
00000DD6                          1610      
00000DD6  6000 05DA               1611      BRA         opdec_return
00000DDA                          1612  MATCH_CC_GT_16
00000DDA                          1613      ** print opcode **
00000DDA  43F8 0567               1614      LEA         pr_BCC_GT,A1                
00000DDE  6100 F974               1615      BSR         PrintString
00000DE2                          1616      
00000DE2  6100 F986               1617      BSR         PrintSizeWORD
00000DE6  43F9 00001356           1618      LEA         pr_space,A1
00000DEC  6100 F966               1619      BSR         PrintString
00000DF0                          1620   
00000DF0                          1621      ** print address **
00000DF0  6100 F936               1622      BSR         Get_BCC_Displacement_16bit 
00000DF4  6100 F93E               1623      BSR         Get_Current_Address
00000DF8  6100 F942               1624      BSR         Get_BCC_Destination_Address
00000DFC  2207                    1625      MOVE.L      D7,D1
00000DFE  6100 F940               1626      BSR         PrintHex
00000E02                          1627      
00000E02  6000 05AE               1628      BRA         opdec_return
00000E06                          1629  MATCH_CC_GT_32
00000E06                          1630      ** print opcode **
00000E06  43F8 0567               1631      LEA         pr_BCC_GT,A1                
00000E0A  6100 F948               1632      BSR         PrintString
00000E0E                          1633      
00000E0E  6100 F968               1634      BSR         PrintSizeLONG
00000E12  43F9 00001356           1635      LEA         pr_space,A1
00000E18  6100 F93A               1636      BSR         PrintString
00000E1C                          1637   
00000E1C                          1638      ** print address **
00000E1C  6100 F910               1639      BSR         Get_BCC_Displacement_32bit 
00000E20  6100 F912               1640      BSR         Get_Current_Address
00000E24  6100 F916               1641      BSR         Get_BCC_Destination_Address
00000E28  2207                    1642      MOVE.L      D7,D1
00000E2A  6100 F914               1643      BSR         PrintHex
00000E2E                          1644      
00000E2E  6000 0582               1645      BRA         opdec_return
00000E32                          1646  MATCH_CC_LE_8
00000E32                          1647      ** print opcode **
00000E32  43F8 056F               1648      LEA         pr_BCC_LE,A1                
00000E36  6100 F91C               1649      BSR         PrintString
00000E3A                          1650      
00000E3A  6100 F920               1651      BSR         PrintSizeBYTE
00000E3E  43F9 00001356           1652      LEA         pr_space,A1
00000E44  6100 F90E               1653      BSR         PrintString
00000E48                          1654   
00000E48                          1655      ** print address **
00000E48  6100 F8D8               1656      BSR         Get_BCC_Displacement_8bit 
00000E4C  6100 F8E6               1657      BSR         Get_Current_Address
00000E50  6100 F8EA               1658      BSR         Get_BCC_Destination_Address
00000E54  2207                    1659      MOVE.L      D7,D1
00000E56  6100 F8E8               1660      BSR         PrintHex
00000E5A                          1661      
00000E5A  6000 0556               1662      BRA         opdec_return
00000E5E                          1663  MATCH_CC_LE_16
00000E5E                          1664      ** print opcode **
00000E5E  43F8 056F               1665      LEA         pr_BCC_LE,A1                
00000E62  6100 F8F0               1666      BSR         PrintString
00000E66                          1667      
00000E66  6100 F902               1668      BSR         PrintSizeWORD
00000E6A  43F9 00001356           1669      LEA         pr_space,A1
00000E70  6100 F8E2               1670      BSR         PrintString
00000E74                          1671   
00000E74                          1672      ** print address **
00000E74  6100 F8B2               1673      BSR         Get_BCC_Displacement_16bit 
00000E78  6100 F8BA               1674      BSR         Get_Current_Address
00000E7C  6100 F8BE               1675      BSR         Get_BCC_Destination_Address
00000E80  2207                    1676      MOVE.L      D7,D1
00000E82  6100 F8BC               1677      BSR         PrintHex
00000E86                          1678      
00000E86  6000 052A               1679      BRA         opdec_return
00000E8A                          1680  MATCH_CC_LE_32
00000E8A                          1681      ** print opcode **
00000E8A  43F8 056F               1682      LEA         pr_BCC_LE,A1                
00000E8E  6100 F8C4               1683      BSR         PrintString
00000E92                          1684      
00000E92  6100 F8E4               1685      BSR         PrintSizeLONG
00000E96  43F9 00001356           1686      LEA         pr_space,A1
00000E9C  6100 F8B6               1687      BSR         PrintString
00000EA0                          1688   
00000EA0                          1689      ** print address **
00000EA0  6100 F88C               1690      BSR         Get_BCC_Displacement_32bit 
00000EA4  6100 F88E               1691      BSR         Get_Current_Address
00000EA8  6100 F892               1692      BSR         Get_BCC_Destination_Address
00000EAC  2207                    1693      MOVE.L      D7,D1
00000EAE  6100 F890               1694      BSR         PrintHex
00000EB2                          1695      
00000EB2  6000 04FE               1696      BRA         opdec_return
00000EB6                          1697  ERROR
00000EB6  43F8 0551               1698      LEA         pr_ERROR,A1                
00000EBA  6100 F898               1699      BSR         PrintString
00000EBE  6000 04F2               1700      BRA         opdec_return
00000EC2                          1701  
00000EC2                          1702  
00000EC2                          1703  
00000EC2                          1704  
00000EC2                          1705  -------------------- end include --------------------
00000EC2                          1706                  INCLUDE 'arsany_opcodes.x68'
00000EC2                          1707  MATCH_MOVEA_W
00000EC2                          1708      ** Move command size into D1
00000EC2  123C 0002               1709      MOVE.B      #2,D1
00000EC6                          1710      ** Print command
00000EC6  103C 000E               1711      MOVE.B      #14,D0
00000ECA  43F9 0000136E           1712      LEA         pr_MOVEA,A1
00000ED0  4E4F                    1713      TRAP        #15
00000ED2                          1714      ** Print size
00000ED2  43F9 0000135D           1715      LEA         pr_WORD,A1
00000ED8  4E4F                    1716      TRAP        #15
00000EDA                          1717      ** Print space
00000EDA  43F9 00001356           1718      LEA         pr_space,A1
00000EE0  4E4F                    1719      TRAP        #15
00000EE2                          1720      ** Decode right side ea
00000EE2  1002                    1721      MOVE.B      D2,D0
00000EE4  0200 003F               1722      ANDI.B      #%00111111,D0
00000EE8  4EB8 0066               1723      JSR         EADecoder
00000EEC                          1724      ** Add comma
00000EEC  103C 000E               1725      MOVE.B      #14,D0
00000EF0  43F9 00001358           1726      LEA         pr_comma,A1
00000EF6  4E4F                    1727      TRAP        #15
00000EF8                          1728      ** Decode left side ea
00000EF8  3002                    1729      MOVE.W      D2,D0
00000EFA  0240 0FC0               1730      ANDI.W      #%0000111111000000,D0
00000EFE  EC88                    1731      LSR.L       #6,D0
00000F00  4EB8 004E               1732      JSR         EADecoder_left
00000F04                          1733      
00000F04  6000 04AC               1734      BRA         opdec_return
00000F08                          1735  MATCH_MOVEA_L
00000F08                          1736      ** Move command size into D1
00000F08  123C 0004               1737      MOVE.B      #4,D1
00000F0C                          1738      ** Print command
00000F0C  103C 000E               1739      MOVE.B      #14,D0
00000F10  43F9 0000136E           1740      LEA         pr_MOVEA,A1
00000F16  4E4F                    1741      TRAP        #15
00000F18                          1742      ** Print size
00000F18  43F9 00001360           1743      LEA         pr_LONG,A1
00000F1E  4E4F                    1744      TRAP        #15
00000F20                          1745      ** Print space
00000F20  43F9 00001356           1746      LEA         pr_space,A1
00000F26  4E4F                    1747      TRAP        #15
00000F28                          1748      ** Decode right side ea
00000F28  1002                    1749      MOVE.B      D2,D0
00000F2A  0200 003F               1750      ANDI.B      #%00111111,D0
00000F2E  4EB8 0066               1751      JSR         EADecoder
00000F32                          1752      ** Add comma
00000F32  103C 000E               1753      MOVE.B      #14,D0
00000F36  43F9 00001358           1754      LEA         pr_comma,A1
00000F3C  4E4F                    1755      TRAP        #15
00000F3E                          1756      ** Decode left side ea
00000F3E  3002                    1757      MOVE.W      D2,D0
00000F40  0240 0FC0               1758      ANDI.W      #%0000111111000000,D0
00000F44  EC88                    1759      LSR.L       #6,D0
00000F46  4EB8 004E               1760      JSR         EADecoder_left
00000F4A                          1761      
00000F4A  6000 0466               1762      BRA         opdec_return
00000F4E                          1763  MATCH_ADDA_W
00000F4E                          1764      ** Move command size into D1
00000F4E  123C 0002               1765      MOVE.B      #2,D1
00000F52                          1766      ** Print command
00000F52  103C 000E               1767      MOVE.B      #14,D0
00000F56  43F9 0000137A           1768      LEA         pr_ADDA,A1
00000F5C  4E4F                    1769      TRAP        #15
00000F5E                          1770      ** Print size
00000F5E  43F9 0000135D           1771      LEA         pr_WORD,A1
00000F64  4E4F                    1772      TRAP        #15
00000F66                          1773      ** Print space
00000F66  43F9 00001356           1774      LEA         pr_space,A1
00000F6C  4E4F                    1775      TRAP        #15
00000F6E                          1776      ** Decode right side ea
00000F6E  1002                    1777      MOVE.B      D2,D0
00000F70  0200 003F               1778      ANDI.B      #%00111111,D0
00000F74  4EB8 0066               1779      JSR         EADecoder
00000F78                          1780      ** Add comma
00000F78  103C 000E               1781      MOVE.B      #14,D0
00000F7C  43F9 00001358           1782      LEA         pr_comma,A1
00000F82  4E4F                    1783      TRAP        #15
00000F84                          1784      ** Decode left side ea
00000F84  3002                    1785      MOVE.W      D2,D0
00000F86  0240 0FC0               1786      ANDI.W      #%0000111111000000,D0
00000F8A  EC88                    1787      LSR.L       #6,D0
00000F8C  4EB8 004E               1788      JSR         EADecoder_left
00000F90                          1789      
00000F90  6000 0420               1790      BRA         opdec_return
00000F94                          1791  MATCH_ADDA_L
00000F94                          1792      ** Move command size into D1
00000F94  123C 0004               1793      MOVE.B      #4,D1
00000F98                          1794      ** Print command
00000F98  103C 000E               1795      MOVE.B      #14,D0
00000F9C  43F9 0000137A           1796      LEA         pr_ADDA,A1
00000FA2  4E4F                    1797      TRAP        #15
00000FA4                          1798      ** Print size
00000FA4  43F9 00001360           1799      LEA         pr_LONG,A1
00000FAA  4E4F                    1800      TRAP        #15
00000FAC                          1801      ** Print space
00000FAC  43F9 00001356           1802      LEA         pr_space,A1
00000FB2  4E4F                    1803      TRAP        #15
00000FB4                          1804      ** Decode right side ea
00000FB4  1002                    1805      MOVE.B      D2,D0
00000FB6  0200 003F               1806      ANDI.B      #%00111111,D0
00000FBA  4EB8 0066               1807      JSR         EADecoder
00000FBE                          1808      ** Add comma
00000FBE  103C 000E               1809      MOVE.B      #14,D0
00000FC2  43F9 00001358           1810      LEA         pr_comma,A1
00000FC8  4E4F                    1811      TRAP        #15
00000FCA                          1812      ** Decode left side ea
00000FCA  3002                    1813      MOVE.W      D2,D0
00000FCC  0240 0FC0               1814      ANDI.W      #%0000111111000000,D0
00000FD0  EC88                    1815      LSR.L       #6,D0
00000FD2  4EB8 004E               1816      JSR         EADecoder_left
00000FD6                          1817      
00000FD6  6000 03DA               1818      BRA         opdec_return
00000FDA                          1819  MATCH_MULS_W
00000FDA                          1820      ** Move command size into D1
00000FDA  123C 0002               1821      MOVE.B      #2,D1
00000FDE                          1822      ** Print command
00000FDE  103C 000E               1823      MOVE.B      #14,D0
00000FE2  43F9 0000137F           1824      LEA         pr_MULS,A1
00000FE8  4E4F                    1825      TRAP        #15
00000FEA                          1826      ** Print size
00000FEA  43F9 0000135D           1827      LEA         pr_WORD,A1
00000FF0  4E4F                    1828      TRAP        #15
00000FF2                          1829      ** Print space
00000FF2  43F9 00001356           1830      LEA         pr_space,A1
00000FF8  4E4F                    1831      TRAP        #15
00000FFA                          1832      ** Decode right side ea
00000FFA  1002                    1833      MOVE.B      D2,D0
00000FFC  0200 003F               1834      ANDI.B      #%00111111,D0
00001000  4EB8 0066               1835      JSR         EADecoder
00001004                          1836      ** Add comma
00001004  103C 000E               1837      MOVE.B      #14,D0
00001008  43F9 00001358           1838      LEA         pr_comma,A1
0000100E  4E4F                    1839      TRAP        #15
00001010                          1840      ** Decode left side ea
00001010  3002                    1841      MOVE.W      D2,D0
00001012  0240 0FC0               1842      ANDI.W      #%0000111111000000,D0
00001016  EC88                    1843      LSR.L       #6,D0
00001018  4EB8 004E               1844      JSR         EADecoder_left    
0000101C                          1845      
0000101C  6000 0394               1846      BRA         opdec_return
00001020                          1847  MATCH_RTS
00001020  43F9 00001388           1848      LEA         pr_RTS,A1
00001026  103C 000E               1849      MOVE.B      #14,D0
0000102A  4E4F                    1850      TRAP        #15
0000102C  6000 0384               1851      BRA         opdec_return
00001030                          1852  MATCH_CMP_B
00001030                          1853      ** Move command size into D1
00001030  123C 0002               1854      MOVE.B      #2,D1
00001034                          1855      ** Print command
00001034  103C 000E               1856      MOVE.B      #14,D0
00001038  43F9 0000138C           1857      LEA         pr_CMP,A1
0000103E  4E4F                    1858      TRAP        #15
00001040                          1859      ** Print size
00001040  43F9 0000135A           1860      LEA         pr_BYTE,A1
00001046  4E4F                    1861      TRAP        #15
00001048                          1862      ** Print space
00001048  43F9 00001356           1863      LEA         pr_space,A1
0000104E  4E4F                    1864      TRAP        #15
00001050                          1865      ** Decode right side ea
00001050  1002                    1866      MOVE.B      D2,D0
00001052  0200 003F               1867      ANDI.B      #%00111111,D0
00001056  4EB8 0066               1868      JSR         EADecoder
0000105A                          1869      ** Add comma
0000105A  103C 000E               1870      MOVE.B      #14,D0
0000105E  43F9 00001358           1871      LEA         pr_comma,A1
00001064  4E4F                    1872      TRAP        #15
00001066                          1873      ** Decode left side ea
00001066  3002                    1874      MOVE.W      D2,D0
00001068  0240 0E00               1875      ANDI.W      #%0000111000000000,D0
0000106C  EC88                    1876      LSR.L       #6,D0
0000106E  4EB8 004E               1877      JSR         EADecoder_left   
00001072                          1878      
00001072  6000 033E               1879      BRA         opdec_return
00001076                          1880  MATCH_CMP_W
00001076                          1881      ** Move command size into D1
00001076  123C 0002               1882      MOVE.B      #2,D1
0000107A                          1883      ** Print command
0000107A  103C 000E               1884      MOVE.B      #14,D0
0000107E  43F9 0000138C           1885      LEA         pr_CMP,A1
00001084  4E4F                    1886      TRAP        #15
00001086                          1887      ** Print size
00001086  43F9 0000135D           1888      LEA         pr_WORD,A1
0000108C  4E4F                    1889      TRAP        #15
0000108E                          1890      ** Print space
0000108E  43F9 00001356           1891      LEA         pr_space,A1
00001094  4E4F                    1892      TRAP        #15
00001096  4240                    1893      CLR         D0
00001098                          1894      ** Decode right side ea
00001098  1002                    1895      MOVE.B      D2,D0
0000109A  0200 003F               1896      ANDI.B      #%00111111,D0
0000109E  4EB8 0066               1897      JSR         EADecoder
000010A2                          1898      ** Add comma
000010A2  103C 000E               1899      MOVE.B      #14,D0
000010A6  43F9 00001358           1900      LEA         pr_comma,A1
000010AC  4E4F                    1901      TRAP        #15
000010AE                          1902      ** Decode left side ea
000010AE  3002                    1903      MOVE.W      D2,D0
000010B0  0240 0E00               1904      ANDI.W      #%0000111000000000,D0
000010B4  EC88                    1905      LSR.L       #6,D0
000010B6  4EB8 004E               1906      JSR         EADecoder_left   
000010BA                          1907      
000010BA  6000 02F6               1908      BRA         opdec_return
000010BE                          1909  MATCH_CMP_L
000010BE                          1910      ** Move command size into D1
000010BE  123C 0004               1911      MOVE.B      #4,D1
000010C2                          1912      ** Print command
000010C2  103C 000E               1913      MOVE.B      #14,D0
000010C6  43F9 0000138C           1914      LEA         pr_CMP,A1
000010CC  4E4F                    1915      TRAP        #15
000010CE                          1916      ** Print size
000010CE  43F9 00001360           1917      LEA         pr_LONG,A1
000010D4  4E4F                    1918      TRAP        #15
000010D6                          1919      ** Print space
000010D6  43F9 00001356           1920      LEA         pr_space,A1
000010DC  4E4F                    1921      TRAP        #15
000010DE  4240                    1922      CLR         D0
000010E0                          1923      ** Decode right side ea
000010E0  1002                    1924      MOVE.B      D2,D0
000010E2  0200 003F               1925      ANDI.B      #%00111111,D0
000010E6  4EB8 0066               1926      JSR         EADecoder
000010EA                          1927      ** Add comma
000010EA  103C 000E               1928      MOVE.B      #14,D0
000010EE  43F9 00001358           1929      LEA         pr_comma,A1
000010F4  4E4F                    1930      TRAP        #15
000010F6                          1931      ** Decode left side ea
000010F6  3002                    1932      MOVE.W      D2,D0
000010F8  0240 0E00               1933      ANDI.W      #%0000111000000000,D0
000010FC  EC88                    1934      LSR.L       #6,D0
000010FE  4EB8 004E               1935      JSR         EADecoder_left   
00001102                          1936      
00001102  6000 02AE               1937      BRA         opdec_return
00001106                          1938  MATCH_JSR
00001106                          1939      ** Print command
00001106  103C 000E               1940      MOVE.B      #14,D0
0000110A  43F9 00001390           1941      LEA         pr_JSR,A1
00001110  4E4F                    1942      TRAP        #15
00001112                          1943      ** Print space
00001112  43F9 00001356           1944      LEA         pr_space,A1
00001118  4E4F                    1945      TRAP        #15
0000111A                          1946      ** Decode right side ea
0000111A  1002                    1947      MOVE.B      D2,D0
0000111C  0200 003F               1948      ANDI.B      #%00111111,D0
00001120  4EB8 0066               1949      JSR         EADecoder 
00001124                          1950      
00001124  6000 028C               1951      BRA         opdec_return
00001128                          1952  MATCH_CLR_B 
00001128                          1953      ** Move command size into D1
00001128  123C 0002               1954      MOVE.B      #2,D1
0000112C                          1955      ** Print command
0000112C  103C 000E               1956      MOVE.B      #14,D0
00001130  43F9 00001384           1957      LEA         pr_CLR,A1
00001136  4E4F                    1958      TRAP        #15
00001138                          1959      ** Print size
00001138  43F9 0000135A           1960      LEA         pr_BYTE,A1
0000113E  4E4F                    1961      TRAP        #15
00001140                          1962      ** Print space
00001140  43F9 00001356           1963      LEA         pr_space,A1
00001146  4E4F                    1964      TRAP        #15
00001148                          1965      ** Decode right side ea
00001148  1002                    1966      MOVE.B      D2,D0
0000114A  0200 003F               1967      ANDI.B      #%00111111,D0
0000114E  4EB8 0066               1968      JSR         EADecoder
00001152                          1969      
00001152  6000 025E               1970      BRA         opdec_return
00001156                          1971  MATCH_CLR_W
00001156                          1972      ** Move command size into D1
00001156  123C 0002               1973      MOVE.B      #2,D1
0000115A                          1974      ** Print command
0000115A  103C 000E               1975      MOVE.B      #14,D0
0000115E  43F9 00001384           1976      LEA         pr_CLR,A1
00001164  4E4F                    1977      TRAP        #15
00001166                          1978      ** Print size
00001166  43F9 0000135D           1979      LEA         pr_WORD,A1
0000116C  4E4F                    1980      TRAP        #15
0000116E                          1981      ** Print space
0000116E  43F9 00001356           1982      LEA         pr_space,A1
00001174  4E4F                    1983      TRAP        #15
00001176                          1984      ** Decode right side ea
00001176  1002                    1985      MOVE.B      D2,D0
00001178  0200 003F               1986      ANDI.B      #%00111111,D0
0000117C  4EB8 0066               1987      JSR         EADecoder 
00001180                          1988      
00001180  6000 0230               1989      BRA         opdec_return
00001184                          1990  MATCH_CLR_L
00001184                          1991      ** Move command size into D1
00001184  123C 0004               1992      MOVE.B      #4,D1
00001188                          1993      ** Print command
00001188  103C 000E               1994      MOVE.B      #14,D0
0000118C  43F9 00001384           1995      LEA         pr_CLR,A1
00001192  4E4F                    1996      TRAP        #15
00001194                          1997      ** Print size
00001194  43F9 00001360           1998      LEA         pr_LONG,A1
0000119A  4E4F                    1999      TRAP        #15
0000119C                          2000      ** Print space
0000119C  43F9 00001356           2001      LEA         pr_space,A1
000011A2  4E4F                    2002      TRAP        #15
000011A4                          2003      ** Decode right side ea
000011A4  1002                    2004      MOVE.B      D2,D0
000011A6  0200 003F               2005      ANDI.B      #%00111111,D0
000011AA  4EB8 0066               2006      JSR         EADecoder 
000011AE                          2007      
000011AE  6000 0202               2008      BRA         opdec_return
000011B2                          2009  MATCH_AND_DN_B
000011B2                          2010      ** Move command size into D1
000011B2  123C 0002               2011      MOVE.B      #2,D1
000011B6                          2012      ** Print command
000011B6  103C 000E               2013      MOVE.B      #14,D0
000011BA  43F9 00001394           2014      LEA         pr_AND,A1
000011C0  4E4F                    2015      TRAP        #15
000011C2                          2016      ** Print size
000011C2  43F9 0000135A           2017      LEA         pr_BYTE,A1
000011C8  4E4F                    2018      TRAP        #15
000011CA                          2019      ** Print space
000011CA  43F9 00001356           2020      LEA         pr_space,A1
000011D0  4E4F                    2021      TRAP        #15
000011D2                          2022      ** Decode right side ea
000011D2  1002                    2023      MOVE.B      D2,D0
000011D4  0200 003F               2024      ANDI.B      #%00111111,D0
000011D8  4EB8 0066               2025      JSR         EADecoder
000011DC                          2026      ** Add comma
000011DC  103C 000E               2027      MOVE.B      #14,D0
000011E0  43F9 00001358           2028      LEA         pr_comma,A1
000011E6  4E4F                    2029      TRAP        #15
000011E8                          2030      ** Decode left side ea
000011E8  3002                    2031      MOVE.W      D2,D0
000011EA  0240 0E00               2032      ANDI.W      #%0000111000000000,D0
000011EE  EC88                    2033      LSR.L       #6,D0
000011F0  4EB8 004E               2034      JSR         EADecoder_left   
000011F4                          2035      
000011F4  6000 01BC               2036      BRA         opdec_return
000011F8                          2037  MATCH_AND_DN_W
000011F8                          2038      ** Move command size into D1
000011F8  123C 0002               2039      MOVE.B      #2,D1
000011FC                          2040      ** Print command
000011FC  103C 000E               2041      MOVE.B      #14,D0
00001200  43F9 00001394           2042      LEA         pr_AND,A1
00001206  4E4F                    2043      TRAP        #15
00001208                          2044      ** Print size
00001208  43F9 0000135D           2045      LEA         pr_WORD,A1
0000120E  4E4F                    2046      TRAP        #15
00001210                          2047      ** Print space
00001210  43F9 00001356           2048      LEA         pr_space,A1
00001216  4E4F                    2049      TRAP        #15
00001218                          2050      ** Decode right side ea
00001218  1002                    2051      MOVE.B      D2,D0
0000121A  0200 003F               2052      ANDI.B      #%00111111,D0
0000121E  4EB8 0066               2053      JSR         EADecoder
00001222                          2054      ** Add comma
00001222  103C 000E               2055      MOVE.B      #14,D0
00001226  43F9 00001358           2056      LEA         pr_comma,A1
0000122C  4E4F                    2057      TRAP        #15
0000122E                          2058      ** Decode left side ea
0000122E  3002                    2059      MOVE.W      D2,D0
00001230  0240 0E00               2060      ANDI.W      #%0000111000000000,D0
00001234  EC88                    2061      LSR.L       #6,D0
00001236  4EB8 004E               2062      JSR         EADecoder_left  
0000123A                          2063      
0000123A  6000 0176               2064      BRA         opdec_return
0000123E                          2065  MATCH_AND_DN_L
0000123E                          2066      ** Move command size into D1
0000123E  123C 0004               2067      MOVE.B      #4,D1
00001242                          2068      ** Print command
00001242  103C 000E               2069      MOVE.B      #14,D0
00001246  43F9 00001394           2070      LEA         pr_AND,A1
0000124C  4E4F                    2071      TRAP        #15
0000124E                          2072      ** Print size
0000124E  43F9 00001360           2073      LEA         pr_LONG,A1
00001254  4E4F                    2074      TRAP        #15
00001256                          2075      ** Print space
00001256  43F9 00001356           2076      LEA         pr_space,A1
0000125C  4E4F                    2077      TRAP        #15
0000125E                          2078      ** Decode right side ea
0000125E  1002                    2079      MOVE.B      D2,D0
00001260  0200 003F               2080      ANDI.B      #%00111111,D0
00001264  4EB8 0066               2081      JSR         EADecoder
00001268                          2082      ** Add comma
00001268  103C 000E               2083      MOVE.B      #14,D0
0000126C  43F9 00001358           2084      LEA         pr_comma,A1
00001272  4E4F                    2085      TRAP        #15
00001274                          2086      ** Decode left side ea
00001274  3002                    2087      MOVE.W      D2,D0
00001276  0240 0E00               2088      ANDI.W      #%0000111000000000,D0
0000127A  EC88                    2089      LSR.L       #6,D0
0000127C  4EB8 004E               2090      JSR         EADecoder_left  
00001280                          2091      
00001280  6000 0130               2092      BRA         opdec_return
00001284                          2093      
00001284                          2094  MATCH_AND_EA_B
00001284                          2095      ** Move command size into D1
00001284  123C 0002               2096      MOVE.B      #2,D1
00001288                          2097      ** Print command
00001288  103C 000E               2098      MOVE.B      #14,D0
0000128C  43F9 00001394           2099      LEA         pr_AND,A1
00001292  4E4F                    2100      TRAP        #15
00001294                          2101      ** Print size
00001294  43F9 0000135A           2102      LEA         pr_BYTE,A1
0000129A  4E4F                    2103      TRAP        #15
0000129C                          2104      ** Print space
0000129C  43F9 00001356           2105      LEA         pr_space,A1
000012A2  4E4F                    2106      TRAP        #15
000012A4                          2107      ** Decode left side ea
000012A4  3002                    2108      MOVE.W      D2,D0
000012A6  0240 0E00               2109      ANDI.W      #%0000111000000000,D0
000012AA  EC88                    2110      LSR.L       #6,D0
000012AC  4EB8 004E               2111      JSR         EADecoder_left
000012B0                          2112      ** Add comma
000012B0  103C 000E               2113      MOVE.B      #14,D0
000012B4  43F9 00001358           2114      LEA         pr_comma,A1
000012BA  4E4F                    2115      TRAP        #15
000012BC                          2116      ** Decode right side ea
000012BC  1002                    2117      MOVE.B      D2,D0
000012BE  0200 003F               2118      ANDI.B      #%00111111,D0
000012C2  4EB8 0066               2119      JSR         EADecoder
000012C6                          2120      
000012C6  6000 00EA               2121      BRA         opdec_return
000012CA                          2122  MATCH_AND_EA_W
000012CA                          2123      ** Move command size into D1
000012CA  123C 0002               2124      MOVE.B      #2,D1
000012CE                          2125      ** Print command
000012CE  103C 000E               2126      MOVE.B      #14,D0
000012D2  43F9 00001394           2127      LEA         pr_AND,A1
000012D8  4E4F                    2128      TRAP        #15
000012DA                          2129      ** Print size
000012DA  43F9 0000135D           2130      LEA         pr_WORD,A1
000012E0  4E4F                    2131      TRAP        #15
000012E2                          2132      ** Print space
000012E2  43F9 00001356           2133      LEA         pr_space,A1
000012E8  4E4F                    2134      TRAP        #15
000012EA                          2135      ** Decode left side ea
000012EA  3002                    2136      MOVE.W      D2,D0
000012EC  0240 0E00               2137      ANDI.W      #%0000111000000000,D0
000012F0  EC88                    2138      LSR.L       #6,D0
000012F2  4EB8 004E               2139      JSR         EADecoder_left
000012F6                          2140      ** Add comma
000012F6  103C 000E               2141      MOVE.B      #14,D0
000012FA  43F9 00001358           2142      LEA         pr_comma,A1
00001300  4E4F                    2143      TRAP        #15
00001302                          2144      ** Decode right side ea
00001302  1002                    2145      MOVE.B      D2,D0
00001304  0200 003F               2146      ANDI.B      #%00111111,D0
00001308  4EB8 0066               2147      JSR         EADecoder
0000130C                          2148      
0000130C  6000 00A4               2149      BRA         opdec_return
00001310                          2150  MATCH_AND_EA_L
00001310                          2151      ** Move command size into D1
00001310  123C 0004               2152      MOVE.B      #4,D1
00001314                          2153      ** Print command
00001314  103C 000E               2154      MOVE.B      #14,D0
00001318  43F9 00001394           2155      LEA         pr_AND,A1
0000131E  4E4F                    2156      TRAP        #15
00001320                          2157      ** Print size
00001320  43F9 00001360           2158      LEA         pr_LONG,A1
00001326  4E4F                    2159      TRAP        #15
00001328                          2160      ** Print space
00001328  43F9 00001356           2161      LEA         pr_space,A1
0000132E  4E4F                    2162      TRAP        #15
00001330                          2163      ** Decode left side ea
00001330  3002                    2164      MOVE.W      D2,D0
00001332  0240 0E00               2165      ANDI.W      #%0000111000000000,D0
00001336  EC88                    2166      LSR.L       #6,D0
00001338  4EB8 004E               2167      JSR         EADecoder_left
0000133C                          2168      ** Add comma
0000133C  103C 000E               2169      MOVE.B      #14,D0
00001340  43F9 00001358           2170      LEA         pr_comma,A1
00001346  4E4F                    2171      TRAP        #15
00001348                          2172      ** Decode right side ea
00001348  1002                    2173      MOVE.B      D2,D0
0000134A  0200 003F               2174      ANDI.B      #%00111111,D0
0000134E  4EB8 0066               2175      JSR         EADecoder
00001352                          2176      
00001352  6000 005E               2177      BRA         opdec_return
00001356                          2178  
00001356                          2179  
00001356                          2180  
00001356                          2181  
00001356                          2182  
00001356                          2183  
00001356                          2184  
00001356                          2185  
00001356                          2186  -------------------- end include --------------------
00001356                          2187  
00001356  =00004E71               2188  NOP             EQU $4E71
00001356  =00000001               2189  MOVE_B          EQU %0001
00001356  =00000003               2190  MOVE_W          EQU %0011
00001356  =00000002               2191  MOVE_L          EQU %0010
00001356  =00000001               2192  MOVEA_WL        EQU %001 
00001356  =00000007               2193  MOVEQ_          EQU %0111
00001356  =00000122               2194  MOVEM_TO_MEM_W  EQU %0100100010
00001356  =00000123               2195  MOVEM_TO_MEM_L  EQU %0100100011
00001356  =00000132               2196  MOVEM_TO_REG_W  EQU %0100110010
00001356  =00000133               2197  MOVEM_TO_REG_L  EQU %0100110011
00001356                          2198  
00001356  =00000018               2199  ADDI_B          EQU %0000011000
00001356  =00000019               2200  ADDI_W          EQU %0000011001
00001356  =0000001A               2201  ADDI_L          EQU %0000011010
00001356                          2202  
00001356  =0000000D               2203  ADD_ADDA        EQU %1101
00001356  =00000000               2204  ADD_TO_REG_B    EQU %000
00001356  =00000001               2205  ADD_TO_REG_W    EQU %001
00001356  =00000002               2206  ADD_TO_REG_L    EQU %010
00001356  =00000004               2207  ADD_TO_EA_B     EQU %100
00001356  =00000005               2208  ADD_TO_EA_W     EQU %101
00001356  =00000006               2209  ADD_TO_EA_L     EQU %110
00001356  =00000003               2210  ADDA_W          EQU %011
00001356  =00000007               2211  ADDA_L          EQU %111
00001356                          2212  
00001356  =00000005               2213  ADDQ            EQU %0101
00001356  =00000000               2214  ADDQ_B          EQU %000
00001356  =00000001               2215  ADDQ_W          EQU %001
00001356  =00000002               2216  ADDQ_L          EQU %010
00001356                          2217  
00001356  =0000000C               2218  MULS_W_AND      EQU %1100
00001356  =00000007               2219  MULS_OP_W       EQU %111 
00001356                          2220  
00001356  =00000009               2221  SUB             EQU %1001
00001356  =00000000               2222  SUB_TO_DN_B     EQU %000
00001356  =00000001               2223  SUB_TO_DN_W     EQU %001
00001356  =00000002               2224  SUB_TO_DN_L     EQU %010
00001356  =00000004               2225  SUB_TO_EA_B     EQU %100
00001356  =00000005               2226  SUB_TO_EA_W     EQU %101
00001356  =00000006               2227  SUB_TO_EA_L     EQU %110
00001356                          2228  
00001356  =00000008               2229  DIVU_OR         EQU %1000
00001356  =00000003               2230  DIVU            EQU %011
00001356                          2231  
00001356  =00000000               2232  DN_B            EQU %000
00001356  =00000001               2233  DN_W            EQU %001
00001356  =00000002               2234  DN_L            EQU %010
00001356  =00000004               2235  EA_B            EQU %100
00001356  =00000005               2236  EA_W            EQU %101
00001356  =00000006               2237  EA_L            EQU %110
00001356                          2238  
00001356  =00000004               2239  MULS_LEA_CLR_JSR_RTS    EQU %0100
00001356  =00004E75               2240  RTS             EQU $4E75
00001356  =00000007               2241  LEA             EQU %111
00001356  =0000013A               2242  JSR             EQU %0100111010
00001356  =00000108               2243  CLR_B           EQU %0100001000
00001356  =00000109               2244  CLR_W           EQU %0100001001
00001356  =0000010A               2245  CLR_L           EQU %0100001010
00001356  =00000130               2246  MULS_L          EQU %0100110000
00001356                          2247  
00001356  =0000038F               2248  LSL             EQU %1110001111
00001356  =0000038B               2249  LSR             EQU %1110001011
00001356  =00000387               2250  ASR             EQU %1110000111
00001356  =00000383               2251  ASL             EQU %1110000011
00001356  =0000039F               2252  ROL             EQU %1110011111
00001356  =0000039B               2253  ROR             EQU %1110011011
00001356                          2254  
00001356  =0000000B               2255  CMP             EQU %1011
00001356  =00000000               2256  CMP_B           EQU %000
00001356  =00000001               2257  CMP_W           EQU %001
00001356  =00000002               2258  CMP_L           EQU %010
00001356                          2259  
00001356  =00000006               2260  BCC             EQU %0110
00001356  =00000000               2261  BCC_16          EQU %00000000
00001356  =000000FF               2262  BCC_32          EQU $FF
00001356  =00000000               2263  CC_T                EQU %0000
00001356  =00000001               2264  CC_F                EQU %0001
00001356  =00000002               2265  CC_HI           EQU %0010
00001356  =00000003               2266  CC_LS           EQU %0011
00001356  =00000004               2267  CC_CC           EQU %0100
00001356  =00000005               2268  CC_CS           EQU %0101
00001356  =00000006               2269  CC_NE           EQU %0110
00001356  =00000007               2270  CC_EQ           EQU %0111
00001356  =00000008               2271  CC_VC           EQU %1000
00001356  =00000009               2272  CC_VS           EQU %1001
00001356  =0000000A               2273  CC_PL           EQU %1010
00001356  =0000000B               2274  CC_MI           EQU %1011
00001356  =0000000C               2275  CC_GE           EQU %1100
00001356  =0000000D               2276  CC_LT           EQU %1101
00001356  =0000000E               2277  CC_GT           EQU %1110
00001356  =0000000F               2278  CC_LE           EQU %1111
00001356                          2279  
00001356= 20 00                   2280  pr_space    DC.B    ' ',0
00001358= 2C 00                   2281  pr_comma    DC.B    ',',0
0000135A= 2E 42 00                2282  pr_BYTE     DC.B    '.B',0
0000135D= 2E 57 00                2283  pr_WORD     DC.B    '.W',0
00001360= 2E 4C 00                2284  pr_LONG     DC.B    '.L',0
00001363= 23 00                   2285  pr_hash     DC.B    '#',0
00001365                          2286  
00001365= 4E 4F 50 00             2287  pr_NOP      DC.B    'NOP',0
00001369= 4D 4F 56 45 00          2288  pr_MOVE     DC.B    'MOVE',0
0000136E= 4D 4F 56 45 41 00       2289  pr_MOVEA    DC.B    'MOVEA',0
00001374= 4D 4F 56 45 4D 00       2290  pr_MOVEM    DC.B    'MOVEM',0
0000137A= 41 44 44 41 00          2291  pr_ADDA     DC.B    'ADDA',0
0000137F= 4D 55 4C 53 00          2292  pr_MULS     DC.B    'MULS',0
00001384= 43 4C 52 00             2293  pr_CLR      DC.B    'CLR',0
00001388= 52 54 53 00             2294  pr_RTS      DC.B    'RTS',0
0000138C= 43 4D 50 00             2295  pr_CMP      DC.B    'CMP',0
00001390= 4A 53 52 00             2296  pr_JSR      DC.B    'JSR',0
00001394= 41 4E 44 00             2297  pr_AND      DC.B    'AND',0
00001398                          2298  
00001398                          2299  
00001398                          2300  
00001398                          2301  OpDecoder
00001398  48E7 FF7E               2302      MOVEM.L     D0-D7/A1-A6, -(SP)
0000139C  4241                    2303      CLR         D1
0000139E  6000 0078               2304      BRA         CHECK_NOP
000013A2                          2305  NOP_RETURN
000013A2  6000 0082               2306      BRA         CHECK_FOUR_BIT_SIG
000013A6                          2307  FOUR_BIT_RETURN
000013A6  6000 043E               2308      BRA         CHECK_MOVEM
000013AA                          2309  MOVEM_RETURN
000013AA  6000 04E2               2310      BRA         CHECK_ADDI
000013AE                          2311  ADDI_RETURN
000013AE  6000 0028               2312      BRA         CHECK_SHIFT_AND_ROTATE
000013B2                          2313      
000013B2                          2314  opdec_return
000013B2  4CDF 7EFF               2315      MOVEM.L     (SP)+, D0-D7/A1-A6
000013B6  4E75                    2316      RTS
000013B8                          2317  
000013B8                          2318  ReadFirstFourBits
000013B8                          2319  
000013B8  48A7 2000               2320      MOVEM.W     D2, -(SP)
000013BC                          2321  
000013BC  1E3C 000C               2322      MOVE.B      #12,D7 
000013C0  EE6A                    2323      LSR.W       D7,D2 
000013C2  1602                    2324      MOVE.B      D2,D3
000013C4                          2325      
000013C4  4C9F 0004               2326      MOVEM.W     (SP)+,D2
000013C8  4E75                    2327      RTS
000013CA                          2328      
000013CA                          2329  ReadFirstTenBits
000013CA                          2330      
000013CA  48A7 2000               2331      MOVEM.W     D2, -(SP)
000013CE                          2332   
000013CE  EC4A                    2333      LSR.W       #6,D2 
000013D0  3602                    2334      MOVE.W      D2,D3
000013D2                          2335      
000013D2  4C9F 0004               2336      MOVEM.W     (SP)+,D2
000013D6  4E75                    2337      RTS
000013D8                          2338  CHECK_SHIFT_AND_ROTATE
000013D8                          2339  
000013D8  61F0                    2340      BSR         ReadFirstTenBits
000013DA                          2341      
000013DA  3C3C 038F               2342      MOVE.W      #LSL,D6
000013DE  BC43                    2343      CMP.W       D3,D6
000013E0  6700 F334               2344      BEQ         MATCH_LSL
000013E4                          2345      
000013E4  3C3C 038B               2346      MOVE.W      #LSR,D6
000013E8  BC43                    2347      CMP.W       D3,D6
000013EA  6700 F32C               2348      BEQ         MATCH_LSR
000013EE                          2349      
000013EE  3C3C 0387               2350      MOVE.W      #ASR,D6
000013F2  BC43                    2351      CMP.W       D3,D6
000013F4  6700 F324               2352      BEQ         MATCH_ASR
000013F8                          2353      
000013F8  3C3C 0383               2354      MOVE.W      #ASL,D6
000013FC  BC43                    2355      CMP.W       D3,D6
000013FE  6700 F31C               2356      BEQ         MATCH_ASL
00001402                          2357      
00001402  3C3C 039F               2358      MOVE.W      #ROL,D6
00001406  BC43                    2359      CMP.W       D3,D6
00001408  6700 F314               2360      BEQ         MATCH_ROL
0000140C                          2361      
0000140C  3C3C 039B               2362      MOVE.W      #ROR,D6
00001410  BC43                    2363      CMP.W       D3,D6
00001412  6700 F30C               2364      BEQ         MATCH_ROR
00001416                          2365      
00001416  609A                    2366      BRA         opdec_return
00001418                          2367      
00001418                          2368  CHECK_NOP
00001418                          2369      
00001418  3C3C 4E71               2370      MOVE.W      #NOP,D6
0000141C  BC42                    2371      CMP.W       D2,D6
0000141E  6700 ED7F               2372      BEQ         MATCH_NOP
00001422                          2373      
00001422  6000 FF7E               2374      BRA         NOP_RETURN
00001426                          2375  
00001426                          2376  CHECK_FOUR_BIT_SIG
00001426                          2377  
00001426  6190                    2378      BSR         ReadFirstFourBits
00001428                          2379      
00001428  1C3C 0001               2380      MOVE.B      #MOVE_B,D6
0000142C  BC03                    2381      CMP.B       D3,D6
0000142E  6700 ED80               2382      BEQ         MATCH_MOVE_B
00001432                          2383  
00001432  1C3C 0003               2384      MOVE.B      #MOVE_W,D6
00001436  BC03                    2385      CMP.B       D3,D6
00001438  6700 04BA               2386      BEQ         CHECK_MOVEA_W_AND_MOVE_W
0000143C                          2387      
0000143C  1C3C 0002               2388      MOVE.B      #MOVE_L,D6
00001440  BC03                    2389      CMP.B       D3,D6
00001442  6700 04DA               2390      BEQ         CHECK_MOVEA_L_AND_MOVE_L
00001446                          2391   
00001446  1C3C 0007               2392      MOVE.B      #MOVEQ_,D6
0000144A  BC03                    2393      CMP.B       D3,D6
0000144C  6700 EDE4               2394      BEQ         MATCH_MOVEQ
00001450                          2395      
00001450  1C3C 000D               2396      MOVE.B      #ADD_ADDA,D6
00001454  BC03                    2397      CMP.B       D3,D6
00001456  6700 03BE               2398      BEQ         CHECK_ADD_ADDA
0000145A                          2399      
0000145A  1C3C 0005               2400      MOVE.B      #ADDQ,D6
0000145E  BC03                    2401      CMP.B       D3,D6
00001460  6700 040A               2402      BEQ         CHECK_ADDQ
00001464                          2403      
00001464  1C3C 0009               2404      MOVE.B      #SUB,D6
00001468  BC03                    2405      CMP.B       D3,D6
0000146A  6700 0448               2406      BEQ         CHECK_SUB
0000146E                          2407      
0000146E  1C3C 0008               2408      MOVE.B      #DIVU_OR,D6
00001472  BC03                    2409      CMP.B       D3,D6
00001474  6700 0322               2410      BEQ         CHECK_DIVU_OR
00001478                          2411      
00001478  1C3C 000C               2412      MOVE.B      #MULS_W_AND,D6
0000147C  BC03                    2413      CMP.B       D3,D6
0000147E  6700 02CA               2414      BEQ         CHECK_MULS_W_AND
00001482                          2415      
00001482  1C3C 0004               2416      MOVE.B      #MULS_LEA_CLR_JSR_RTS,D6
00001486  BC03                    2417      CMP.B       D3,D6
00001488  6700 026E               2418      BEQ         CHECK_MULS_LEA_CLR_JSR_RTS
0000148C                          2419      
0000148C  1C3C 000B               2420      MOVE.B      #CMP,D6
00001490  BC03                    2421      CMP.B       D3,D6
00001492  6700 023E               2422      BEQ         CHECK_CMP
00001496                          2423      
00001496  1C3C 0006               2424      MOVE.B      #BCC,D6
0000149A  BC03                    2425      CMP.B       D3,D6
0000149C  6700 0010               2426      BEQ         CHECK_BCC
000014A0                          2427      
000014A0  1C3C 000E               2428      MOVE.B      #SHIFT,D6
000014A4  BC03                    2429      CMP.B       D3,D6
000014A6  6700 F0E7               2430      BEQ         CHECK_SHIFT
000014AA                          2431      
000014AA  6000 FEFA               2432      BRA         FOUR_BIT_RETURN
000014AE                          2433  CHECK_BCC
000014AE                          2434      
000014AE  1C3C 0000               2435      MOVE.B      #BCC_16,D6
000014B2  BC02                    2436      CMP.B       D2,D6
000014B4  6700 00B8               2437      BEQ         CHECK_BCC_16
000014B8                          2438      
000014B8  1C3C 00FF               2439      MOVE.B      #BCC_32,D6
000014BC  BC02                    2440      CMP.B       D2,D6
000014BE  6700 0156               2441      BEQ         CHECK_BCC_32
000014C2                          2442      
000014C2  6000 0002               2443      BRA         CHECK_BCC_8
000014C6                          2444      
000014C6                          2445  CHECK_BCC_8
000014C6                          2446      
000014C6  6100 01F6               2447      BSR         ISOLATE_CC_CODE_FOR_BCC
000014CA                          2448      
000014CA  1C3C 0000               2449      MOVE.B      #CC_T,D6
000014CE  BC03                    2450      CMP.B       D3,D6
000014D0  6700 F2B4               2451      BEQ         MATCH_CC_T_8
000014D4                          2452      
000014D4  1C3C 0001               2453      MOVE.B      #CC_F,D6
000014D8  BC03                    2454      CMP.B       D3,D6
000014DA  6700 F2B0               2455      BEQ         MATCH_CC_F_8
000014DE                          2456      
000014DE  1C3C 0002               2457      MOVE.B      #CC_HI,D6
000014E2  BC03                    2458      CMP.B       D3,D6
000014E4  6700 F2AC               2459      BEQ         MATCH_CC_HI_8
000014E8                          2460      
000014E8  1C3C 0003               2461      MOVE.B      #CC_LS,D6
000014EC  BC03                    2462      CMP.B       D3,D6
000014EE  6700 F312               2463      BEQ         MATCH_CC_LS_8
000014F2                          2464      
000014F2  1C3C 0004               2465      MOVE.B      #CC_CC,D6
000014F6  BC03                    2466      CMP.B       D3,D6
000014F8  6700 F38C               2467      BEQ         MATCH_CC_CC_8
000014FC                          2468      
000014FC  1C3C 0005               2469      MOVE.B      #CC_CS,D6
00001500  BC03                    2470      CMP.B       D3,D6
00001502  6700 F406               2471      BEQ         MATCH_CC_CS_8
00001506                          2472      
00001506  1C3C 0006               2473      MOVE.B      #CC_NE,D6
0000150A  BC03                    2474      CMP.B       D3,D6
0000150C  6700 F480               2475      BEQ         MATCH_CC_NE_8
00001510                          2476      
00001510  1C3C 0007               2477      MOVE.B      #CC_EQ,D6
00001514  BC03                    2478      CMP.B       D3,D6
00001516  6700 F4FA               2479      BEQ         MATCH_CC_EQ_8
0000151A                          2480      
0000151A  1C3C 0008               2481      MOVE.B      #CC_VC,D6
0000151E  BC03                    2482      CMP.B       D3,D6
00001520  6700 F574               2483      BEQ         MATCH_CC_VC_8
00001524                          2484      
00001524  1C3C 0009               2485      MOVE.B      #CC_VS,D6
00001528  BC03                    2486      CMP.B       D3,D6
0000152A  6700 F5EE               2487      BEQ         MATCH_CC_VS_8
0000152E                          2488      
0000152E  1C3C 000A               2489      MOVE.B      #CC_PL,D6
00001532  BC03                    2490      CMP.B       D3,D6
00001534  6700 F668               2491      BEQ         MATCH_CC_PL_8
00001538                          2492      
00001538  1C3C 000B               2493      MOVE.B      #CC_MI,D6
0000153C  BC03                    2494      CMP.B       D3,D6
0000153E  6700 F6E2               2495      BEQ         MATCH_CC_MI_8
00001542                          2496      
00001542  1C3C 000C               2497      MOVE.B      #CC_GE,D6
00001546  BC03                    2498      CMP.B       D3,D6
00001548  6700 F75C               2499      BEQ         MATCH_CC_GE_8
0000154C                          2500      
0000154C  1C3C 000D               2501      MOVE.B      #CC_LT,D6
00001550  BC03                    2502      CMP.B       D3,D6
00001552  6700 F7D6               2503      BEQ         MATCH_CC_LT_8
00001556                          2504      
00001556  1C3C 000E               2505      MOVE.B      #CC_GT,D6
0000155A  BC03                    2506      CMP.B       D3,D6
0000155C  6700 F850               2507      BEQ         MATCH_CC_GT_8
00001560                          2508      
00001560  1C3C 000F               2509      MOVE.B      #CC_LE,D6
00001564  BC03                    2510      CMP.B       D3,D6
00001566  6700 F8CA               2511      BEQ         MATCH_CC_LE_8
0000156A                          2512  
0000156A  6000 F94A               2513      BRA         ERROR
0000156E                          2514      
0000156E                          2515  CHECK_BCC_16
0000156E                          2516  
0000156E  6100 014E               2517      BSR         ISOLATE_CC_CODE_FOR_BCC
00001572                          2518      
00001572  1C3C 0000               2519      MOVE.B      #CC_T,D6
00001576  BC03                    2520      CMP.B       D3,D6
00001578  6700 F20E               2521      BEQ         MATCH_CC_T_16
0000157C                          2522      
0000157C  1C3C 0001               2523      MOVE.B      #CC_F,D6
00001580  BC03                    2524      CMP.B       D3,D6
00001582  6700 F20A               2525      BEQ         MATCH_CC_F_16
00001586                          2526      
00001586  1C3C 0002               2527      MOVE.B      #CC_HI,D6
0000158A  BC03                    2528      CMP.B       D3,D6
0000158C  6700 F224               2529      BEQ         MATCH_CC_HI_16
00001590                          2530      
00001590  1C3C 0003               2531      MOVE.B      #CC_LS,D6
00001594  BC03                    2532      CMP.B       D3,D6
00001596  6700 F296               2533      BEQ         MATCH_CC_LS_16
0000159A                          2534      
0000159A  1C3C 0004               2535      MOVE.B      #CC_CC,D6
0000159E  BC03                    2536      CMP.B       D3,D6
000015A0  6700 F310               2537      BEQ         MATCH_CC_CC_16
000015A4                          2538      
000015A4  1C3C 0005               2539      MOVE.B      #CC_CS,D6
000015A8  BC03                    2540      CMP.B       D3,D6
000015AA  6700 F38A               2541      BEQ         MATCH_CC_CS_16
000015AE                          2542      
000015AE  1C3C 0006               2543      MOVE.B      #CC_NE,D6
000015B2  BC03                    2544      CMP.B       D3,D6
000015B4  6700 F404               2545      BEQ         MATCH_CC_NE_16
000015B8                          2546      
000015B8  1C3C 0007               2547      MOVE.B      #CC_EQ,D6
000015BC  BC03                    2548      CMP.B       D3,D6
000015BE  6700 F47E               2549      BEQ         MATCH_CC_EQ_16
000015C2                          2550      
000015C2  1C3C 0008               2551      MOVE.B      #CC_VC,D6
000015C6  BC03                    2552      CMP.B       D3,D6
000015C8  6700 F4F8               2553      BEQ         MATCH_CC_VC_16
000015CC                          2554      
000015CC  1C3C 0009               2555      MOVE.B      #CC_VS,D6
000015D0  BC03                    2556      CMP.B       D3,D6
000015D2  6700 F572               2557      BEQ         MATCH_CC_VS_16
000015D6                          2558      
000015D6  1C3C 000A               2559      MOVE.B      #CC_PL,D6
000015DA  BC03                    2560      CMP.B       D3,D6
000015DC  6700 F5EC               2561      BEQ         MATCH_CC_PL_16
000015E0                          2562      
000015E0  1C3C 000B               2563      MOVE.B      #CC_MI,D6
000015E4  BC03                    2564      CMP.B       D3,D6
000015E6  6700 F666               2565      BEQ         MATCH_CC_MI_16
000015EA                          2566      
000015EA  1C3C 000C               2567      MOVE.B      #CC_GE,D6
000015EE  BC03                    2568      CMP.B       D3,D6
000015F0  6700 F6E0               2569      BEQ         MATCH_CC_GE_16
000015F4                          2570      
000015F4  1C3C 000D               2571      MOVE.B      #CC_LT,D6
000015F8  BC03                    2572      CMP.B       D3,D6
000015FA  6700 F75A               2573      BEQ         MATCH_CC_LT_16
000015FE                          2574      
000015FE  1C3C 000E               2575      MOVE.B      #CC_GT,D6
00001602  BC03                    2576      CMP.B       D3,D6
00001604  6700 F7D4               2577      BEQ         MATCH_CC_GT_16
00001608                          2578      
00001608  1C3C 000F               2579      MOVE.B      #CC_LE,D6
0000160C  BC03                    2580      CMP.B       D3,D6
0000160E  6700 F84E               2581      BEQ         MATCH_CC_LE_16
00001612                          2582  
00001612  6000 F8A2               2583      BRA         ERROR
00001616                          2584  
00001616                          2585  
00001616                          2586  CHECK_BCC_32  
00001616                          2587  
00001616  6100 00A6               2588      BSR         ISOLATE_CC_CODE_FOR_BCC 
0000161A                          2589      
0000161A  1C3C 0000               2590      MOVE.B      #CC_T,D6
0000161E  BC03                    2591      CMP.B       D3,D6
00001620  6700 F168               2592      BEQ         MATCH_CC_T_32
00001624                          2593      
00001624  1C3C 0001               2594      MOVE.B      #CC_F,D6
00001628  BC03                    2595      CMP.B       D3,D6
0000162A  6700 F164               2596      BEQ         MATCH_CC_F_32
0000162E                          2597      
0000162E  1C3C 0002               2598      MOVE.B      #CC_HI,D6
00001632  BC03                    2599      CMP.B       D3,D6
00001634  6700 F1A2               2600      BEQ         MATCH_CC_HI_32
00001638                          2601      
00001638  1C3C 0003               2602      MOVE.B      #CC_LS,D6
0000163C  BC03                    2603      CMP.B       D3,D6
0000163E  6700 F21A               2604      BEQ         MATCH_CC_LS_32
00001642                          2605      
00001642  1C3C 0004               2606      MOVE.B      #CC_CC,D6
00001646  BC03                    2607      CMP.B       D3,D6
00001648  6700 F294               2608      BEQ         MATCH_CC_CC_32
0000164C                          2609      
0000164C  1C3C 0005               2610      MOVE.B      #CC_CS,D6
00001650  BC03                    2611      CMP.B       D3,D6
00001652  6700 F30E               2612      BEQ         MATCH_CC_CS_32
00001656                          2613      
00001656  1C3C 0006               2614      MOVE.B      #CC_NE,D6
0000165A  BC03                    2615      CMP.B       D3,D6
0000165C  6700 F388               2616      BEQ         MATCH_CC_NE_32
00001660                          2617      
00001660  1C3C 0007               2618      MOVE.B      #CC_EQ,D6
00001664  BC03                    2619      CMP.B       D3,D6
00001666  6700 F402               2620      BEQ         MATCH_CC_EQ_32
0000166A                          2621      
0000166A  1C3C 0008               2622      MOVE.B      #CC_VC,D6
0000166E  BC03                    2623      CMP.B       D3,D6
00001670  6700 F47C               2624      BEQ         MATCH_CC_VC_32
00001674                          2625      
00001674  1C3C 0009               2626      MOVE.B      #CC_VS,D6
00001678  BC03                    2627      CMP.B       D3,D6
0000167A  6700 F4F6               2628      BEQ         MATCH_CC_VS_32
0000167E                          2629      
0000167E  1C3C 000A               2630      MOVE.B      #CC_PL,D6
00001682  BC03                    2631      CMP.B       D3,D6
00001684  6700 F570               2632      BEQ         MATCH_CC_PL_32
00001688                          2633      
00001688  1C3C 000B               2634      MOVE.B      #CC_MI,D6
0000168C  BC03                    2635      CMP.B       D3,D6
0000168E  6700 F5EA               2636      BEQ         MATCH_CC_MI_32
00001692                          2637      
00001692  1C3C 000C               2638      MOVE.B      #CC_GE,D6
00001696  BC03                    2639      CMP.B       D3,D6
00001698  6700 F664               2640      BEQ         MATCH_CC_GE_32
0000169C                          2641      
0000169C  1C3C 000D               2642      MOVE.B      #CC_LT,D6
000016A0  BC03                    2643      CMP.B       D3,D6
000016A2  6700 F6DE               2644      BEQ         MATCH_CC_LT_32
000016A6                          2645      
000016A6  1C3C 000E               2646      MOVE.B      #CC_GT,D6
000016AA  BC03                    2647      CMP.B       D3,D6
000016AC  6700 F758               2648      BEQ         MATCH_CC_GT_32
000016B0                          2649      
000016B0  1C3C 000F               2650      MOVE.B      #CC_LE,D6
000016B4  BC03                    2651      CMP.B       D3,D6
000016B6  6700 F7D2               2652      BEQ         MATCH_CC_LE_32
000016BA                          2653  
000016BA  6000 F7FA               2654      BRA         ERROR
000016BE                          2655   
000016BE                          2656  ISOLATE_CC_CODE_FOR_BCC
000016BE                          2657  
000016BE  48A7 2000               2658      MOVEM.W     D2, -(SP) 
000016C2                          2659      
000016C2  E94A                    2660      LSL.W       #4,D2
000016C4  1E3C 000C               2661      MOVE.B      #12,D7
000016C8  EE6A                    2662      LSR.W       D7,D2
000016CA                          2663      
000016CA  1602                    2664      MOVE.B      D2,D3      
000016CC                          2665  
000016CC  4C9F 0004               2666      MOVEM.W     (SP)+,D2 
000016D0  4E75                    2667      RTS
000016D2                          2668  CHECK_CMP
000016D2                          2669      
000016D2  6100 0232               2670      BSR         ISOLATE_OP_CODE
000016D6                          2671      
000016D6  1C3C 0000               2672      MOVE.B      #CMP_B,D6
000016DA  BC03                    2673      CMP.B       D3,D6
000016DC  6700 F952               2674      BEQ         MATCH_CMP_B
000016E0                          2675      
000016E0  1C3C 0001               2676      MOVE.B      #CMP_W,D6
000016E4  BC03                    2677      CMP.B       D3,D6
000016E6  6700 F98E               2678      BEQ         MATCH_CMP_W
000016EA                          2679      
000016EA  1C3C 0002               2680      MOVE.B      #CMP_L,D6
000016EE  BC03                    2681      CMP.B       D3,D6
000016F0  6700 F9CC               2682      BEQ         MATCH_CMP_L
000016F4                          2683      
000016F4  6000 F7C0               2684      BRA         ERROR
000016F8                          2685  CHECK_MULS_LEA_CLR_JSR_RTS
000016F8                          2686  
000016F8  3C3C 4E75               2687      MOVE.W      #RTS,D6
000016FC  BC42                    2688      CMP.W       D2,D6
000016FE  6700 F920               2689      BEQ         MATCH_RTS
00001702                          2690      
00001702  6100 0202               2691      BSR         ISOLATE_OP_CODE
00001706                          2692      
00001706  1C3C 0007               2693      MOVE.B      #LEA,D6
0000170A  BC03                    2694      CMP.B       D3,D6
0000170C  6700 0236               2695      BEQ         MATCH_LEA
00001710                          2696      
00001710  6100 FCB8               2697      BSR         ReadFirstTenBits
00001714                          2698      
00001714  3C3C 013A               2699      MOVE.W      #JSR,D6
00001718  BC43                    2700      CMP.W       D3,D6
0000171A  6700 F9EA               2701      BEQ         MATCH_JSR
0000171E                          2702      
0000171E  3C3C 0108               2703      MOVE.W      #CLR_B,D6
00001722  BC43                    2704      CMP.W       D3,D6
00001724  6700 FA02               2705      BEQ         MATCH_CLR_B
00001728                          2706      
00001728  3C3C 0109               2707      MOVE.W      #CLR_W,D6
0000172C  BC43                    2708      CMP.W       D3,D6
0000172E  6700 FA26               2709      BEQ         MATCH_CLR_W
00001732                          2710      
00001732  3C3C 010A               2711      MOVE.W      #CLR_L,D6
00001736  BC43                    2712      CMP.W       D3,D6
00001738  6700 FA4A               2713      BEQ         MATCH_CLR_L
0000173C                          2714      
0000173C  3C3C 0130               2715      MOVE.W      #MULS_L,D6  * Shouldn't need to check for the rest of the opcode..?
00001740  BC43                    2716      CMP.W       D3,D6
00001742  6700 0202               2717      BEQ         MATCH_MULS_L
00001746                          2718      
00001746  6000 F76E               2719      BRA         ERROR
0000174A                          2720      
0000174A                          2721  CHECK_MULS_W_AND
0000174A                          2722  
0000174A  6100 01BA               2723      BSR         ISOLATE_OP_CODE
0000174E                          2724      
0000174E  1C3C 0007               2725      MOVE.B      #MULS_OP_W,D6
00001752  BC03                    2726      CMP.B       D3,D6
00001754  6700 F884               2727      BEQ         MATCH_MULS_W
00001758                          2728      
00001758  1C3C 0000               2729      MOVE.B      #DN_B,D6
0000175C  BC03                    2730      CMP.B       D3,D6
0000175E  6700 FA52               2731      BEQ         MATCH_AND_DN_B
00001762                          2732      
00001762  1C3C 0001               2733      MOVE.B      #DN_W,D6
00001766  BC03                    2734      CMP.B       D3,D6
00001768  6700 FA8E               2735      BEQ         MATCH_AND_DN_W
0000176C                          2736      
0000176C  1C3C 0002               2737      MOVE.B      #DN_L,D6
00001770  BC03                    2738      CMP.B       D3,D6
00001772  6700 FACA               2739      BEQ         MATCH_AND_DN_L
00001776                          2740      
00001776  1C3C 0004               2741      MOVE.B      #EA_B,D6
0000177A  BC03                    2742      CMP.B       D3,D6
0000177C  6700 FB06               2743      BEQ         MATCH_AND_EA_B
00001780                          2744      
00001780  1C3C 0005               2745      MOVE.B      #EA_W,D6
00001784  BC03                    2746      CMP.B       D3,D6
00001786  6700 FB42               2747      BEQ         MATCH_AND_EA_W
0000178A                          2748      
0000178A  1C3C 0006               2749      MOVE.B      #EA_L,D6
0000178E  BC03                    2750      CMP.B       D3,D6
00001790  6700 FB7E               2751      BEQ         MATCH_AND_EA_L
00001794                          2752      
00001794  6000 F720               2753      BRA         ERROR
00001798                          2754  
00001798                          2755  CHECK_DIVU_OR
00001798                          2756      
00001798  6100 016C               2757      BSR         ISOLATE_OP_CODE
0000179C                          2758      
0000179C  1C3C 0003               2759      MOVE.B      #DIVU,D6
000017A0  BC03                    2760      CMP.B       D3,D6
000017A2  6700 0192               2761      BEQ         MATCH_DIVU
000017A6                          2762      
000017A6  1C3C 0000               2763      MOVE.B      #DN_B,D6
000017AA  BC03                    2764      CMP.B       D3,D6
000017AC  6700 018A               2765      BEQ         MATCH_OR_DN_B
000017B0                          2766      
000017B0  1C3C 0001               2767      MOVE.B      #DN_W,D6
000017B4  BC03                    2768      CMP.B       D3,D6
000017B6  6700 0182               2769      BEQ         MATCH_OR_DN_W
000017BA                          2770      
000017BA  1C3C 0002               2771      MOVE.B      #DN_L,D6
000017BE  BC03                    2772      CMP.B       D3,D6
000017C0  6700 017A               2773      BEQ         MATCH_OR_DN_L
000017C4                          2774      
000017C4  1C3C 0004               2775      MOVE.B      #EA_B,D6
000017C8  BC03                    2776      CMP.B       D3,D6
000017CA  6700 0172               2777      BEQ         MATCH_OR_EA_B
000017CE                          2778      
000017CE  1C3C 0005               2779      MOVE.B      #EA_W,D6
000017D2  BC03                    2780      CMP.B       D3,D6
000017D4  6700 016A               2781      BEQ         MATCH_OR_EA_W
000017D8                          2782      
000017D8  1C3C 0006               2783      MOVE.B      #EA_L,D6
000017DC  BC03                    2784      CMP.B       D3,D6
000017DE  6700 0162               2785      BEQ         MATCH_OR_EA_L
000017E2                          2786      
000017E2  6000 F6D2               2787      BRA         ERROR
000017E6                          2788  
000017E6                          2789  CHECK_MOVEM
000017E6                          2790      
000017E6  6100 FBE2               2791      BSR         ReadFirstTenBits
000017EA                          2792      
000017EA  3C3C 0122               2793      MOVE.W      #MOVEM_TO_MEM_W,D6
000017EE  BC43                    2794      CMP.W       D3,D6
000017F0  6700 013C               2795      BEQ         MATCH_MOVEM_TO_MEM_W
000017F4                          2796      
000017F4  3C3C 0123               2797      MOVE.W      #MOVEM_TO_MEM_L,D6
000017F8  BC43                    2798      CMP.W       D3,D6
000017FA  6700 0134               2799      BEQ         MATCH_MOVEM_TO_MEM_L
000017FE                          2800      
000017FE  3C3C 0132               2801      MOVE.W      #MOVEM_TO_REG_W,D6
00001802  BC43                    2802      CMP.W       D3,D6
00001804  6700 012C               2803      BEQ         MATCH_MOVEM_TO_REG_W
00001808                          2804      
00001808  3C3C 0133               2805      MOVE.W      #MOVEM_TO_REG_L,D6
0000180C  BC43                    2806      CMP.W       D3,D6
0000180E  6700 0124               2807      BEQ         MATCH_MOVEM_TO_REG_L
00001812                          2808      
00001812  6000 FB96               2809      BRA         MOVEM_RETURN
00001816                          2810  CHECK_ADD_ADDA
00001816                          2811      
00001816  6100 00EE               2812      BSR         ISOLATE_OP_CODE
0000181A                          2813      
0000181A  3C3C 0000               2814      MOVE.W      #DN_B,D6
0000181E  BC43                    2815      CMP.W       D3,D6
00001820  6700 EAB8               2816      BEQ         MATCH_ADD_TO_REG_B
00001824                          2817      
00001824  3C3C 0001               2818      MOVE.W      #DN_W,D6
00001828  BC43                    2819      CMP.W       D3,D6
0000182A  6700 EAC8               2820      BEQ         MATCH_ADD_TO_REG_W
0000182E                          2821      
0000182E  3C3C 0002               2822      MOVE.W      #DN_L,D6
00001832  BC43                    2823      CMP.W       D3,D6
00001834  6700 EAD8               2824      BEQ         MATCH_ADD_TO_REG_L
00001838                          2825      
00001838  3C3C 0004               2826      MOVE.W      #EA_B,D6
0000183C  BC43                    2827      CMP.W       D3,D6
0000183E  6700 EB64               2828      BEQ         MATCH_ADD_TO_EA_B
00001842                          2829      
00001842  3C3C 0005               2830      MOVE.W      #EA_W,D6
00001846  BC43                    2831      CMP.W       D3,D6
00001848  6700 EB74               2832      BEQ         MATCH_ADD_TO_EA_W
0000184C                          2833      
0000184C  3C3C 0006               2834      MOVE.W      #EA_L,D6
00001850  BC43                    2835      CMP.W       D3,D6
00001852  6700 EB84               2836      BEQ         MATCH_ADD_TO_EA_L
00001856                          2837      
00001856  3C3C 0003               2838      MOVE.W      #ADDA_W,D6
0000185A  BC43                    2839      CMP.W       D3,D6
0000185C  6700 F6F0               2840      BEQ         MATCH_ADDA_W
00001860                          2841      
00001860  3C3C 0007               2842      MOVE.W      #ADDA_L,D6
00001864  BC43                    2843      CMP.W       D3,D6
00001866  6700 F72C               2844      BEQ         MATCH_ADDA_L
0000186A                          2845      
0000186A  4E75                    2846      RTS ** Change later?
0000186C                          2847  CHECK_ADDQ
0000186C                          2848      
0000186C  6100 0098               2849      BSR         ISOLATE_OP_CODE
00001870                          2850      
00001870  3C3C 0000               2851      MOVE.W      #ADDQ_B,D6
00001874  BC43                    2852      CMP.W       D3,D6
00001876  6700 EBF6               2853      BEQ         MATCH_ADDQ_B
0000187A                          2854      
0000187A  3C3C 0001               2855      MOVE.W      #ADDQ_W,D6
0000187E  BC43                    2856      CMP.W       D3,D6
00001880  6700 EC06               2857      BEQ         MATCH_ADDQ_W
00001884                          2858      
00001884  3C3C 0002               2859      MOVE.W      #ADDQ_L,D6
00001888  BC43                    2860      CMP.W       D3,D6
0000188A  6700 EC16               2861      BEQ         MATCH_ADDQ_L
0000188E                          2862      
0000188E                          2863  CHECK_ADDI
0000188E                          2864  
0000188E  6100 FB3A               2865      BSR         ReadFirstTenBits
00001892                          2866      
00001892  3C3C 0018               2867      MOVE.W      #ADDI_B,D6
00001896  BC43                    2868      CMP.W       D3,D6
00001898  6700 E9C8               2869      BEQ         MATCH_ADDI_B
0000189C                          2870      
0000189C  3C3C 0019               2871      MOVE.W      #ADDI_W,D6
000018A0  BC43                    2872      CMP.W       D3,D6
000018A2  6700 E9D8               2873      BEQ         MATCH_ADDI_W
000018A6                          2874      
000018A6  3C3C 001A               2875      MOVE.W      #ADDI_L,D6
000018AA  BC43                    2876      CMP.W       D3,D6
000018AC  6700 E9E8               2877      BEQ         MATCH_ADDI_L
000018B0                          2878      
000018B0  6000 FAFC               2879      BRA         ADDI_RETURN
000018B4                          2880  CHECK_SUB
000018B4                          2881      
000018B4  6100 0050               2882      BSR         ISOLATE_OP_CODE
000018B8                          2883      
000018B8  3C3C 0000               2884      MOVE.W      #DN_B,D6
000018BC  BC43                    2885      CMP.W       D3,D6
000018BE  6700 EA68               2886      BEQ         MATCH_SUB_TO_DN_B
000018C2                          2887      
000018C2  3C3C 0001               2888      MOVE.W      #DN_W,D6
000018C6  BC43                    2889      CMP.W       D3,D6
000018C8  6700 EA78               2890      BEQ         MATCH_SUB_TO_DN_W
000018CC                          2891      
000018CC  3C3C 0002               2892      MOVE.W      #DN_L,D6
000018D0  BC43                    2893      CMP.W       D3,D6
000018D2  6700 EA88               2894      BEQ         MATCH_SUB_TO_DN_L
000018D6                          2895      
000018D6  3C3C 0004               2896      MOVE.W      #EA_B,D6
000018DA  BC43                    2897      CMP.W       D3,D6
000018DC  6700 EB14               2898      BEQ         MATCH_SUB_TO_EA_B
000018E0                          2899      
000018E0  3C3C 0005               2900      MOVE.W      #EA_W,D6
000018E4  BC43                    2901      CMP.W       D3,D6
000018E6  6700 EB24               2902      BEQ         MATCH_SUB_TO_EA_W
000018EA                          2903      
000018EA  3C3C 0006               2904      MOVE.W      #EA_L,D6
000018EE  BC43                    2905      CMP.W       D3,D6
000018F0  6700 EB34               2906      BEQ         MATCH_SUB_TO_EA_L
000018F4                          2907  CHECK_MOVEA_W_AND_MOVE_W
000018F4                          2908      
000018F4  6100 0010               2909      BSR         ISOLATE_OP_CODE
000018F8                          2910         
000018F8  1C3C 0001               2911      MOVE.B      #MOVEA_WL,D6
000018FC  BC03                    2912      CMP.B       D3,D6
000018FE  6700 F5C2               2913      BEQ         MATCH_MOVEA_W
00001902                          2914      
00001902  6000 E8C8               2915      BRA         MATCH_MOVE_W 
00001906                          2916  ISOLATE_OP_CODE 
00001906                          2917  
00001906  48A7 2000               2918      MOVEM.W     D2, -(SP)    
0000190A                          2919     
0000190A  1E3C 0007               2920      MOVE.B      #7,D7          
0000190E  EF6A                    2921      LSL.W       D7,D2
00001910  1E3C 000D               2922      MOVE.B      #13,D7
00001914  EE6A                    2923      LSR.W       D7,D2
00001916  1602                    2924      MOVE.B      D2,D3    
00001918                          2925         
00001918  4C9F 0004               2926      MOVEM.W     (SP)+,D2 
0000191C  4E75                    2927      RTS
0000191E                          2928  CHECK_MOVEA_L_AND_MOVE_L
0000191E                          2929      
0000191E  61E6                    2930      BSR         ISOLATE_OP_CODE
00001920                          2931         
00001920  1C3C 0001               2932      MOVE.B      #MOVEA_WL,D6
00001924  BC03                    2933      CMP.B       D3,D6
00001926  6700 F5E0               2934      BEQ         MATCH_MOVEA_L 
0000192A                          2935      
0000192A  6000 E8BC               2936      BRA         MATCH_MOVE_L   
0000192E                          2937      
0000192E                          2938  MATCH_MOVEM_TO_MEM_W
0000192E  3A02                    2939      MOVE.W      D2,D5       *REMOVE
00001930                          2940  MATCH_MOVEM_TO_MEM_L
00001930  3A02                    2941      MOVE.W      D2,D5       *REMOVE
00001932                          2942  MATCH_MOVEM_TO_REG_W
00001932  3A02                    2943      MOVE.W      D2,D5       *REMOVE
00001934                          2944  MATCH_MOVEM_TO_REG_L
00001934  3A02                    2945      MOVE.W      D2,D5       *REMOVE
00001936                          2946     
00001936                          2947  
00001936                          2948  MATCH_DIVU
00001936  3A02                    2949      MOVE.W      D2,D5       *REMOVE
00001938                          2950  MATCH_OR_DN_B
00001938  3A02                    2951      MOVE.W      D2,D5       *REMOVE
0000193A                          2952  MATCH_OR_DN_W
0000193A  3A02                    2953      MOVE.W      D2,D5       *REMOVE
0000193C                          2954  MATCH_OR_DN_L
0000193C  3A02                    2955      MOVE.W      D2,D5       *REMOVE
0000193E                          2956  MATCH_OR_EA_B
0000193E  3A02                    2957      MOVE.W      D2,D5       *REMOVE
00001940                          2958  MATCH_OR_EA_W
00001940  3A02                    2959      MOVE.W      D2,D5       *REMOVE
00001942                          2960  MATCH_OR_EA_L
00001942  3A02                    2961      MOVE.W      D2,D5       *REMOVE
00001944                          2962  
00001944                          2963  MATCH_LEA
00001944  3A02                    2964      MOVE.W      D2,D5       *REMOVE
00001946                          2965  
00001946                          2966  MATCH_MULS_L
00001946  3A02                    2967      MOVE.W      D2,D5       *REMOVE
00001948                          2968  
00001948                          2969  
00001948                          2970  
00001948                          2971  
00001948                          2972  -------------------- end include --------------------
00001948                          2973          
00001948= 45 6E 74 65 72 20 ...   2974  MESSAGE     DC.B    'Enter the address of compiled code: ',0
0000196D= 49 6E 76 61 6C 69 ...   2975  ERROR_MSG   DC.B    'Invalid input, please rerun',0
00001989= 20 00                   2976  SPACER      DC.B    ' ',0
0000198B                          2977  
0000198B                          2978  
00001000                          2979          ORG     $1000
00001000                          2980  program_start        
00001000                          2981  
00001000                          2982  
00001000                          2983  *------Code for input-------
00001000                          2984          
00001000  43F8 1948               2985          LEA     MESSAGE,A1      *Code block for first message
00001004  103C 000E               2986          MOVE.B  #14,D0
00001008  4E4F                    2987          TRAP    #15
0000100A                          2988         
0000100A  227C 00004000           2989          MOVEA.L #$4000, A1
00001010  103C 0002               2990          MOVE.B  #2,D0           *Code block for reading input
00001014  4E4F                    2991          TRAP    #15   
00001016  3001                    2992          MOVE.W  D1,D0
00001018                          2993          
00001018  2049                    2994          MOVEA.L A1,A0           *Move the contents of A1 to A0 for the conversion
0000101A  4EB8 0000               2995          JSR     A2H             *Branch to Connor's conversion code      
0000101E                          2996          
0000101E  2040                    2997          MOVEA.L D0,A0
00001020                          2998          
00001020  0C50 FFFF               2999          CMPI.W  #$FFFF,(A0)
00001024  6700 0026               3000          BEQ     input_error
00001028                          3001      
00001028                          3002  loop_start
00001028                          3003          
00001028  2208                    3004          MOVE.L  A0,D1           *Print out the address we're working on
0000102A  7410                    3005          MOVE.L  #16,D2          
0000102C  700F                    3006          MOVE.L  #15,D0          
0000102E  4E4F                    3007          TRAP    #15
00001030                          3008  
00001030  700E                    3009          MOVE.L  #14,D0
00001032  43F8 1989               3010          LEA     SPACER,A1
00001036  4E4F                    3011          TRAP    #15
00001038                          3012          
00001038  3418                    3013          MOVE.W  (A0)+,D2
0000103A  0C42 FFFF               3014          CMPI.W  #$FFFF,D2
0000103E  6700 0014               3015          BEQ     Done
00001042                          3016          
00001042  4EB8 1398               3017          JSR     OpDecoder
00001046                          3018          
00001046  700D                    3019          MOVE.L  #13,D0
00001048  4E4F                    3020          TRAP    #15
0000104A                          3021          
0000104A  60DC                    3022          BRA     loop_start
0000104C                          3023          
0000104C                          3024  input_error        
0000104C  700D                    3025          MOVE.L  #13,D0
0000104E  43F8 196D               3026          LEA     ERROR_MSG,A1
00001052  4E4F                    3027          TRAP    #15
00001054                          3028  Done        
00001054                          3029  
00001054                          3030          END    $1000

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
A2H                 0
ABS_LONG            39
ABS_WORD            38
ADDA_L              7
ADDA_W              3
ADDBYTELOOP         24
ADDBYTES            1C
ADDI_B              18
ADDI_L              1A
ADDI_RETURN         13AE
ADDI_W              19
ADDQ                5
ADDQ_B              0
ADDQ_L              2
ADDQ_W              1
ADD_ADDA            D
ADD_TO_EA_B         4
ADD_TO_EA_L         6
ADD_TO_EA_W         5
ADD_TO_REG_B        0
ADD_TO_REG_L        2
ADD_TO_REG_W        1
AN                  8
AS                  0
ASL                 383
ASR                 387
BCC                 6
BCC_16              0
BCC_32              FF
CC_CC               4
CC_CS               5
CC_EQ               7
CC_F                1
CC_GE               C
CC_GT               E
CC_HI               2
CC_LE               F
CC_LS               3
CC_LT               D
CC_MI               B
CC_NE               6
CC_PL               A
CC_T                0
CC_VC               8
CC_VS               9
CHECK_ADDI          188E
CHECK_ADDQ          186C
CHECK_ADD_ADDA      1816
CHECK_BCC           14AE
CHECK_BCC_16        156E
CHECK_BCC_32        1616
CHECK_BCC_8         14C6
CHECK_CMP           16D2
CHECK_DIVU_OR       1798
CHECK_FOUR_BIT_SIG  1426
CHECK_MOVEA_L_AND_MOVE_L  191E
CHECK_MOVEA_W_AND_MOVE_W  18F4
CHECK_MOVEM         17E6
CHECK_MULS_LEA_CLR_JSR_RTS  16F8
CHECK_MULS_W_AND    174A
CHECK_NOP           1418
CHECK_SHIFT         58F
CHECK_SHIFT_AND_ROTATE  13D8
CHECK_SUB           18B4
CLR_B               108
CLR_L               10A
CLR_W               109
CMP                 B
CMP_B               0
CMP_L               2
CMP_W               1
CONV_END            2C
CR                  D
DEC_ABS_LONG        116
DEC_ABS_WORD        10A
DEC_AN              12E
DEC_DN              122
DEC_IMMEDIATE       EE
DEC_INDIRECT        13A
DEC_POST_INC        14E
DEC_PRE_DEC         168
DEC_RETURN          D0
DIVU                3
DIVU_OR             8
DN                  0
DN_B                0
DN_L                2
DN_W                1
DONE                1054
EADECODER           66
EADECODER_LEFT      4E
EA_B                4
EA_L                6
EA_W                5
ERROR               EB6
ERROR_MSG           196D
EXECUTEPRINTSHIFTDIRECTION  628
EXECUTEPRINTSHIFTSIZE  668
EXECUTESHIFTOPCODEPRINT  600
FOUR_BIT_RETURN     13A6
GETSHIFTDESTREG     5B6
GET_BCC_DESTINATION_ADDRESS  73C
GET_BCC_DISPLACEMENT_16BIT  728
GET_BCC_DISPLACEMENT_32BIT  72E
GET_BCC_DISPLACEMENT_8BIT  722
GET_COUNT_REGISTER_VAL  6AA
GET_CURRENT_ADDRESS  734
GET_DIRECTION       6D2
GET_IS_REGISTER_OR_IMMEDIATE  6E6
GET_SHIFT_OPCODE    6FE
GET_SIZE            6BE
IMMEDIATE           3C
IMM_SKIP            E8
IMM_WORD            106
INDIRECT            10
INPUT_ERROR         104C
ISOLATE_CC_CODE_FOR_BCC  16BE
ISOLATE_OP_CODE     1906
JSR                 13A
L                   1
LEA                 7
LEFT_SKIP           6A
LF                  A
LOOP_START          1028
LS                  1
LSL                 38F
LSR                 38B
MATCH_ADDA_L        F94
MATCH_ADDA_W        F4E
MATCH_ADDI_B        262
MATCH_ADDI_L        296
MATCH_ADDI_W        27C
MATCH_ADDQ_B        46E
MATCH_ADDQ_L        4A2
MATCH_ADDQ_W        488
MATCH_ADD_TO_EA_B   3A4
MATCH_ADD_TO_EA_L   3D8
MATCH_ADD_TO_EA_W   3BE
MATCH_ADD_TO_REG_B  2DA
MATCH_ADD_TO_REG_L  30E
MATCH_ADD_TO_REG_W  2F4
MATCH_AND_DN_B      11B2
MATCH_AND_DN_L      123E
MATCH_AND_DN_W      11F8
MATCH_AND_EA_B      1284
MATCH_AND_EA_L      1310
MATCH_AND_EA_W      12CA
MATCH_ASL           71C
MATCH_ASR           71A
MATCH_CC_CC_16      8B2
MATCH_CC_CC_32      8DE
MATCH_CC_CC_8       886
MATCH_CC_CS_16      936
MATCH_CC_CS_32      962
MATCH_CC_CS_8       90A
MATCH_CC_EQ_16      A3E
MATCH_CC_EQ_32      A6A
MATCH_CC_EQ_8       A12
MATCH_CC_F_16       78E
MATCH_CC_F_32       790
MATCH_CC_F_8        78C
MATCH_CC_GE_16      CD2
MATCH_CC_GE_32      CFE
MATCH_CC_GE_8       CA6
MATCH_CC_GT_16      DDA
MATCH_CC_GT_32      E06
MATCH_CC_GT_8       DAE
MATCH_CC_HI_16      7B2
MATCH_CC_HI_32      7D8
MATCH_CC_HI_8       792
MATCH_CC_LE_16      E5E
MATCH_CC_LE_32      E8A
MATCH_CC_LE_8       E32
MATCH_CC_LS_16      82E
MATCH_CC_LS_32      85A
MATCH_CC_LS_8       802
MATCH_CC_LT_16      D56
MATCH_CC_LT_32      D82
MATCH_CC_LT_8       D2A
MATCH_CC_MI_16      C4E
MATCH_CC_MI_32      C7A
MATCH_CC_MI_8       C22
MATCH_CC_NE_16      9BA
MATCH_CC_NE_32      9E6
MATCH_CC_NE_8       98E
MATCH_CC_PL_16      BCA
MATCH_CC_PL_32      BF6
MATCH_CC_PL_8       B9E
MATCH_CC_T_16       788
MATCH_CC_T_32       78A
MATCH_CC_T_8        786
MATCH_CC_VC_16      AC2
MATCH_CC_VC_32      AEE
MATCH_CC_VC_8       A96
MATCH_CC_VS_16      B46
MATCH_CC_VS_32      B72
MATCH_CC_VS_8       B1A
MATCH_CLR_B         1128
MATCH_CLR_L         1184
MATCH_CLR_W         1156
MATCH_CMP_B         1030
MATCH_CMP_L         10BE
MATCH_CMP_W         1076
MATCH_DIVU          1936
MATCH_DIVU_W        4FE
MATCH_JSR           1106
MATCH_LEA           1944
MATCH_LSL           716
MATCH_LSR           718
MATCH_MOVEA_L       F08
MATCH_MOVEA_W       EC2
MATCH_MOVEM_TO_MEM_L  1930
MATCH_MOVEM_TO_MEM_W  192E
MATCH_MOVEM_TO_REG_L  1934
MATCH_MOVEM_TO_REG_W  1932
MATCH_MOVEQ         232
MATCH_MOVE_B        1B0
MATCH_MOVE_L        1E8
MATCH_MOVE_W        1CC
MATCH_MULS_L        1946
MATCH_MULS_W        FDA
MATCH_NOP           19F
MATCH_OR_DN_B       1938
MATCH_OR_DN_L       193C
MATCH_OR_DN_W       193A
MATCH_OR_EA_B       193E
MATCH_OR_EA_L       1942
MATCH_OR_EA_W       1940
MATCH_ROL           71E
MATCH_ROR           720
MATCH_RTS           1020
MATCH_SUB_TO_DN_B   328
MATCH_SUB_TO_DN_L   35C
MATCH_SUB_TO_DN_W   342
MATCH_SUB_TO_EA_B   3F2
MATCH_SUB_TO_EA_L   426
MATCH_SUB_TO_EA_W   40C
MESSAGE             1948
MOVEA_WL            1
MOVEM_RETURN        13AA
MOVEM_TO_MEM_L      123
MOVEM_TO_MEM_W      122
MOVEM_TO_REG_L      133
MOVEM_TO_REG_W      132
MOVEQ_              7
MOVE_B              1
MOVE_L              2
MOVE_W              3
MULS_L              130
MULS_LEA_CLR_JSR_RTS  4
MULS_OP_W           7
MULS_W_AND          C
NOP                 4E71
NOP_RETURN          13A2
NUMSUB              32
NUMSUBRTN           E
OPDECODER           1398
OPDEC_RETURN        13B2
OUTPUT              10000
POST_INC            18
PRE_DEC             20
PRINTARITHSHIFT     5EC
PRINTHEX            740
PRINTLOGICSHIFT     5F6
PRINTROTATE         5E2
PRINTSHIFT          68E
PRINTSHIFTBYTE      644
PRINTSHIFTDATA      5CA
PRINTSHIFTLEFT      61E
PRINTSHIFTLONG      65C
PRINTSHIFTREG       686
PRINTSHIFTRIGHT     614
PRINTSHIFTWORD      650
PRINTSIZEBYTE       75C
PRINTSIZELONG       778
PRINTSIZEWORD       76A
PRINTSTRING         754
PRINT_ADDI          2B0
PRINT_ADDQ          4BC
PRINT_ADD_TO_EA     440
PRINT_ADD_TO_REG    376
PRINT_MOVE          204
PROGRAM_START       1000
PR_ADD              188
PR_ADDA             137A
PR_ADDI             18C
PR_ADDQ             191
PR_AND              1394
PR_BCC_CC           557
PR_BCC_CS           55B
PR_BCC_EQ           55F
PR_BCC_GE           563
PR_BCC_GT           567
PR_BCC_HI           56B
PR_BCC_LE           56F
PR_BCC_LS           573
PR_BCC_LT           577
PR_BCC_MI           57B
PR_BCC_NE           57F
PR_BCC_PL           583
PR_BCC_VC           587
PR_BCC_VS           58B
PR_BYTE             135A
PR_CLR              1384
PR_CMP              138C
PR_COMMA            1358
PR_DIVU             19A
PR_ERROR            551
PR_HASH             1363
PR_JSR              1390
PR_LONG             1360
PR_MOVE             1369
PR_MOVEA            136E
PR_MOVEM            1374
PR_MOVEQ            182
PR_MULS             137F
PR_NOP              1365
PR_REG              542
PR_RTS              1388
PR_SHIFT_AS         547
PR_SHIFT_L          54D
PR_SHIFT_LS         54A
PR_SHIFT_R          54F
PR_SHIFT_RO         544
PR_SPACE            1356
PR_SUB              196
PR_WORD             135D
R                   0
READFIRSTFOURBITS   13B8
READFIRSTTENBITS    13CA
RO                  3
ROL                 39F
ROR                 39B
RTS                 4E75
SHIFT               E
SHIFT_BYTE          0
SHIFT_IMMED         0
SHIFT_LONG          3
SHIFT_REGISTER      1
SHIFT_WORD          1
SPACER              1989
SUB                 9
SUB_TO_DN_B         0
SUB_TO_DN_L         2
SUB_TO_DN_W         1
SUB_TO_EA_B         4
SUB_TO_EA_L         6
SUB_TO_EA_W         5
UPSEND              46
UPSUB               3C
UPSUBRTN            16
